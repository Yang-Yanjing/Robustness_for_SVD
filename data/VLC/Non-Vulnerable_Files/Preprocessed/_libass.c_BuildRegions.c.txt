func	2:0	112:0	0	static int	BuildRegions
params	2:23	0:0	1	
param	2:25	2:46	2	rectangle_t *	p_region
param	2:48	2:64	2	int	i_max_region
param	2:66	2:87	2	ASS_Image *	p_img_list
param	2:89	2:100	2	int	i_width
param	2:102	2:115	2	int	i_height
stmnts	0:0	111:19	1	
decl	4:4	4:20	2	ASS_Image	*p_tmp
decl	5:4	5:15	2	int	i_count
decl	7:4	7:32	2	int64_t	i_ck_start
op	7:23	0:0	2	=
call	7:25	7:31	3	mdate
for	9:4	11:21	2	(p_tmp = p_img_list , i_count = 0 ;p_tmp != NULL;p_tmp = p_tmp -> next)
forinit	9:9	9:40	3	p_tmp = p_img_list , i_count = 0 ;
water	9:9	0:0	4	p_tmp
op	9:15	0:0	4	=
water	9:17	0:0	4	p_img_list
water	9:27	0:0	4	,
water	9:29	0:0	4	i_count
op	9:37	0:0	4	=
water	9:39	0:0	4	0
water	9:40	0:0	4	;
cond	9:42	9:51	3	p_tmp != NULL
water	9:42	0:0	4	p_tmp
op	9:48	0:0	4	!=
water	9:51	0:0	4	NULL
forexpr	9:57	9:72	3	p_tmp = p_tmp -> next
water	9:57	0:0	4	p_tmp
op	9:63	0:0	4	=
water	9:65	0:0	4	p_tmp
op	9:70	0:0	4	->
water	9:72	0:0	4	next
stmts	10:8	11:21	3	
if	10:8	11:21	4	(p_tmp -> w > 0 && p_tmp -> h > 0)
cond	10:12	10:39	5	p_tmp -> w > 0 && p_tmp -> h > 0
water	10:12	0:0	6	p_tmp
op	10:17	0:0	6	->
water	10:19	0:0	6	w
op	10:21	0:0	6	>
water	10:23	0:0	6	0
op	10:25	0:0	6	&&
water	10:28	0:0	6	p_tmp
op	10:33	0:0	6	->
water	10:35	0:0	6	h
op	10:37	0:0	6	>
water	10:39	0:0	6	0
stmts	11:12	11:21	5	
water	11:12	0:0	6	i_count
op	11:19	0:0	6	++
water	11:21	0:0	6	;
if	12:4	13:16	2	(i_count <= 0)
cond	12:8	12:19	3	i_count <= 0
water	12:8	0:0	4	i_count
op	12:16	0:0	4	<=
water	12:19	0:0	4	0
stmts	13:8	13:16	3	
return	13:8	13:16	4	0
water	13:15	0:0	5	0
decl	14:4	14:59	2	ASS_Image	**pp_img
op	14:23	0:0	2	=
call	14:25	14:58	3	calloc
arg	14:33	14:40	4	i_count
water	14:33	0:0	5	i_count
arg	14:42	14:58	4	sizeof(*pp_img)
op	14:42	0:0	5	sizeof
water	14:48	0:0	5	(
op	14:49	0:0	5	*
water	14:50	0:0	5	pp_img
water	14:56	0:0	5	)
if	15:4	16:16	2	(! pp_img)
cond	15:8	15:9	3	! pp_img
op	15:8	0:0	4	!
water	15:9	0:0	4	pp_img
stmts	16:8	16:16	3	
return	16:8	16:16	4	0
water	16:15	0:0	5	0
for	17:4	19:37	2	(p_tmp = p_img_list , i_count = 0 ;p_tmp != NULL;p_tmp = p_tmp -> next)
forinit	17:9	17:40	3	p_tmp = p_img_list , i_count = 0 ;
water	17:9	0:0	4	p_tmp
op	17:15	0:0	4	=
water	17:17	0:0	4	p_img_list
water	17:27	0:0	4	,
water	17:29	0:0	4	i_count
op	17:37	0:0	4	=
water	17:39	0:0	4	0
water	17:40	0:0	4	;
cond	17:42	17:51	3	p_tmp != NULL
water	17:42	0:0	4	p_tmp
op	17:48	0:0	4	!=
water	17:51	0:0	4	NULL
forexpr	17:57	17:72	3	p_tmp = p_tmp -> next
water	17:57	0:0	4	p_tmp
op	17:63	0:0	4	=
water	17:65	0:0	4	p_tmp
op	17:70	0:0	4	->
water	17:72	0:0	4	next
stmts	18:8	19:37	3	
if	18:8	19:37	4	(p_tmp -> w > 0 && p_tmp -> h > 0)
cond	18:12	18:39	5	p_tmp -> w > 0 && p_tmp -> h > 0
water	18:12	0:0	6	p_tmp
op	18:17	0:0	6	->
water	18:19	0:0	6	w
op	18:21	0:0	6	>
water	18:23	0:0	6	0
op	18:25	0:0	6	&&
water	18:28	0:0	6	p_tmp
op	18:33	0:0	6	->
water	18:35	0:0	6	h
op	18:37	0:0	6	>
water	18:39	0:0	6	0
stmts	19:12	19:37	5	
water	19:12	0:0	6	pp_img
op	19:18	0:0	6	[
water	19:19	0:0	6	i_count
op	19:26	0:0	6	++
op	19:28	0:0	6	]
op	19:30	0:0	6	=
water	19:32	0:0	6	p_tmp
water	19:37	0:0	6	;
decl	21:4	21:58	2	const int	i_w_inc
op	21:22	0:0	2	=
call	21:24	21:57	3	__MAX
arg	21:31	21:52	4	(i_width+49)/50
water	21:31	0:0	5	(
water	21:33	0:0	5	i_width
op	21:41	0:0	5	+
water	21:43	0:0	5	49
water	21:46	0:0	5	)
op	21:48	0:0	5	/
water	21:50	0:0	5	50
arg	21:54	21:57	4	32
water	21:54	0:0	5	32
decl	22:4	22:60	2	const int	i_h_inc
op	22:22	0:0	2	=
call	22:24	22:59	3	__MAX
arg	22:31	22:54	4	(i_height+99)/100
water	22:31	0:0	5	(
water	22:33	0:0	5	i_height
op	22:42	0:0	5	+
water	22:44	0:0	5	99
water	22:47	0:0	5	)
op	22:49	0:0	5	/
water	22:51	0:0	5	100
arg	22:56	22:59	4	32
water	22:56	0:0	5	32
decl	23:4	23:24	2	int	i_maxh
op	23:15	0:0	2	=
water	23:17	0:0	2	i_w_inc
decl	24:4	24:24	2	int	i_maxw
op	24:15	0:0	2	=
water	24:17	0:0	2	i_h_inc
decl	25:4	25:16	2	int	i_region
decl	26:4	26:38	2	rectangle_t	region[i_max_region+1]
water	27:4	0:0	2	i_region
op	27:13	0:0	2	=
water	27:15	0:0	2	0
water	27:16	0:0	2	;
for	28:4	102:4	2	( int i_used = 0 ;i_used < i_count;)
forinit	0:0	28:23	3	 int i_used = 0 ;
decl	28:9	28:23	4	int	i_used
op	28:20	0:0	4	=
water	28:22	0:0	4	0
cond	28:25	28:34	3	i_used < i_count
water	28:25	0:0	4	i_used
op	28:32	0:0	4	<
water	28:34	0:0	4	i_count
forexpr	0:0	0:0	3	
stmts	29:4	102:4	3	
water	29:4	0:0	4	{
decl	30:8	30:13	4	int	n
for	31:8	35:8	4	(n = 0 ;n < i_count;n ++)
forinit	31:13	31:18	5	n = 0 ;
water	31:13	0:0	6	n
op	31:15	0:0	6	=
water	31:17	0:0	6	0
water	31:18	0:0	6	;
cond	31:20	31:24	5	n < i_count
water	31:20	0:0	6	n
op	31:22	0:0	6	<
water	31:24	0:0	6	i_count
forexpr	31:33	31:34	5	n ++
water	31:33	0:0	6	n
op	31:34	0:0	6	++
stmts	32:8	35:8	5	
water	32:8	0:0	6	{
if	33:12	34:21	6	(pp_img [ n ])
cond	33:16	33:24	7	pp_img [ n ]
water	33:16	0:0	8	pp_img
op	33:22	0:0	8	[
water	33:23	0:0	8	n
op	33:24	0:0	8	]
stmts	34:16	34:21	7	
break	34:16	34:21	8	
water	35:8	0:0	6	}
call	36:8	36:44	4	assert
arg	36:16	36:44	5	i_region<i_max_region+1
water	36:16	0:0	6	i_region
op	36:25	0:0	6	<
water	36:27	0:0	6	i_max_region
op	36:40	0:0	6	+
water	36:42	0:0	6	1
water	36:45	0:0	4	;
water	37:8	0:0	4	region
op	37:14	0:0	4	[
water	37:15	0:0	4	i_region
op	37:23	0:0	4	++
op	37:25	0:0	4	]
op	37:27	0:0	4	=
call	37:29	37:46	4	r_img
arg	37:36	37:46	5	pp_img[n]
water	37:36	0:0	6	pp_img
op	37:42	0:0	6	[
water	37:43	0:0	6	n
op	37:44	0:0	6	]
water	37:47	0:0	4	;
water	38:8	0:0	4	pp_img
op	38:14	0:0	4	[
water	38:15	0:0	4	n
op	38:16	0:0	4	]
op	38:18	0:0	4	=
water	38:20	0:0	4	NULL
water	38:24	0:0	4	;
water	38:26	0:0	4	i_used
op	38:32	0:0	4	++
water	38:34	0:0	4	;
decl	39:8	39:17	4	bool	b_ok
do	40:8	69:8	4	(b_ok)
cond	69:17	69:17	5	b_ok
water	69:17	0:0	6	b_ok
stmts	40:11	69:8	5	
water	40:11	0:0	6	{
water	41:12	0:0	6	b_ok
op	41:17	0:0	6	=
water	41:19	0:0	6	false
water	41:24	0:0	6	;
for	42:12	68:12	6	(n = 0 ;n < i_count;n ++)
forinit	42:17	42:22	7	n = 0 ;
water	42:17	0:0	8	n
op	42:19	0:0	8	=
water	42:21	0:0	8	0
water	42:22	0:0	8	;
cond	42:24	42:28	7	n < i_count
water	42:24	0:0	8	n
op	42:26	0:0	8	<
water	42:28	0:0	8	i_count
forexpr	42:37	42:38	7	n ++
water	42:37	0:0	8	n
op	42:38	0:0	8	++
stmts	43:12	68:12	7	
water	43:12	0:0	8	{
decl	44:16	44:44	8	ASS_Image	*p_img
op	44:33	0:0	8	=
water	44:35	0:0	8	pp_img
op	44:41	0:0	8	[
water	44:42	0:0	8	n
op	44:43	0:0	8	]
if	45:16	46:28	8	(! p_img)
cond	45:20	45:21	9	! p_img
op	45:20	0:0	10	!
water	45:21	0:0	10	p_img
stmts	46:20	46:28	9	
continue	46:20	46:28	10	
decl	47:16	47:46	8	rectangle_t	r
op	47:30	0:0	8	=
call	47:32	47:45	9	r_img
arg	47:39	47:45	10	p_img
water	47:39	0:0	11	p_img
decl	48:16	48:21	8	int	k
decl	49:16	49:31	8	int	i_best
op	49:27	0:0	8	=
op	49:29	0:0	8	-
water	49:30	0:0	8	1
decl	50:16	50:38	8	int	i_best_s
op	50:29	0:0	8	=
water	50:31	0:0	8	INT_MAX
for	51:16	61:16	8	(k = 0 ;k < i_region;k ++)
forinit	51:21	51:26	9	k = 0 ;
water	51:21	0:0	10	k
op	51:23	0:0	10	=
water	51:25	0:0	10	0
water	51:26	0:0	10	;
cond	51:28	51:32	9	k < i_region
water	51:28	0:0	10	k
op	51:30	0:0	10	<
water	51:32	0:0	10	i_region
forexpr	51:42	51:43	9	k ++
water	51:42	0:0	10	k
op	51:43	0:0	10	++
stmts	52:16	61:16	9	
water	52:16	0:0	10	{
if	53:20	54:32	10	(!r_overlap (& region [ k ] ,& r ,i_maxw ,i_maxh ))
cond	53:24	53:67	11	!r_overlap (& region [ k ] ,& r ,i_maxw ,i_maxh )
op	53:24	0:0	12	!
call	53:25	53:67	12	r_overlap
arg	53:36	53:46	13	&region[k]
op	53:36	0:0	14	&
water	53:37	0:0	14	region
op	53:43	0:0	14	[
water	53:44	0:0	14	k
op	53:45	0:0	14	]
arg	53:48	53:50	13	&r
op	53:48	0:0	14	&
water	53:49	0:0	14	r
arg	53:52	53:58	13	i_maxw
water	53:52	0:0	14	i_maxw
arg	53:60	53:67	13	i_maxh
water	53:60	0:0	14	i_maxh
stmts	54:24	54:32	11	
continue	54:24	54:32	12	
decl	55:20	55:43	10	int	s
op	55:26	0:0	10	=
call	55:28	55:42	11	r_surface
arg	55:39	55:42	12	&r
op	55:39	0:0	13	&
water	55:40	0:0	13	r
if	56:20	60:20	10	(s < i_best_s)
cond	56:24	56:28	11	s < i_best_s
water	56:24	0:0	12	s
op	56:26	0:0	12	<
water	56:28	0:0	12	i_best_s
stmts	57:20	60:20	11	
water	57:20	0:0	12	{
water	58:24	0:0	12	i_best_s
op	58:33	0:0	12	=
water	58:35	0:0	12	s
water	58:36	0:0	12	;
water	59:24	0:0	12	i_best
op	59:31	0:0	12	=
water	59:33	0:0	12	k
water	59:34	0:0	12	;
water	60:20	0:0	12	}
water	61:16	0:0	10	}
if	62:16	67:16	8	(i_best >= 0)
cond	62:20	62:30	9	i_best >= 0
water	62:20	0:0	10	i_best
op	62:27	0:0	10	>=
water	62:30	0:0	10	0
stmts	63:16	67:16	9	
water	63:16	0:0	10	{
call	64:20	64:47	10	r_add
arg	64:27	64:42	11	&region[i_best]
op	64:27	0:0	12	&
water	64:28	0:0	12	region
op	64:34	0:0	12	[
water	64:35	0:0	12	i_best
op	64:41	0:0	12	]
arg	64:44	64:47	11	&r
op	64:44	0:0	12	&
water	64:45	0:0	12	r
water	64:48	0:0	10	;
water	65:20	0:0	10	pp_img
op	65:26	0:0	10	[
water	65:27	0:0	10	n
op	65:28	0:0	10	]
op	65:30	0:0	10	=
water	65:32	0:0	10	NULL
water	65:36	0:0	10	;
water	65:38	0:0	10	i_used
op	65:44	0:0	10	++
water	65:46	0:0	10	;
water	66:20	0:0	10	b_ok
op	66:25	0:0	10	=
water	66:27	0:0	10	true
water	66:31	0:0	10	;
water	67:16	0:0	10	}
water	68:12	0:0	8	}
water	69:8	0:0	6	}
water	69:23	0:0	4	;
if	70:8	101:8	4	(i_region > i_max_region)
cond	70:12	70:23	5	i_region > i_max_region
water	70:12	0:0	6	i_region
op	70:21	0:0	6	>
water	70:23	0:0	6	i_max_region
stmts	71:8	101:8	5	
water	71:8	0:0	6	{
decl	72:12	72:29	6	int	i_best_i
op	72:25	0:0	6	=
op	72:27	0:0	6	-
water	72:28	0:0	6	1
decl	73:12	73:29	6	int	i_best_j
op	73:25	0:0	6	=
op	73:27	0:0	6	-
water	73:28	0:0	6	1
decl	74:12	74:35	6	int	i_best_ds
op	74:26	0:0	6	=
water	74:28	0:0	6	INT_MAX
for	76:12	90:12	6	( int i = 0 ;i < i_region;i ++)
forinit	0:0	76:26	7	 int i = 0 ;
decl	76:17	76:26	8	int	i
op	76:23	0:0	8	=
water	76:25	0:0	8	0
cond	76:28	76:32	7	i < i_region
water	76:28	0:0	8	i
op	76:30	0:0	8	<
water	76:32	0:0	8	i_region
forexpr	76:42	76:43	7	i ++
water	76:42	0:0	8	i
op	76:43	0:0	8	++
stmts	77:12	90:12	7	
water	77:12	0:0	8	{
for	78:16	89:16	8	( int j = i + 1 ;j < i_region;j ++)
forinit	0:0	78:32	9	 int j = i + 1 ;
decl	78:21	78:32	10	int	j
op	78:27	0:0	10	=
water	78:29	0:0	10	i
op	78:30	0:0	10	+
water	78:31	0:0	10	1
cond	78:34	78:38	9	j < i_region
water	78:34	0:0	10	j
op	78:36	0:0	10	<
water	78:38	0:0	10	i_region
forexpr	78:48	78:49	9	j ++
water	78:48	0:0	10	j
op	78:49	0:0	10	++
stmts	79:16	89:16	9	
water	79:16	0:0	10	{
decl	80:20	80:45	10	rectangle_t	n
op	80:34	0:0	10	=
water	80:36	0:0	10	region
op	80:42	0:0	10	[
water	80:43	0:0	10	i
op	80:44	0:0	10	]
call	81:20	81:42	10	r_add
arg	81:27	81:29	11	&n
op	81:27	0:0	12	&
water	81:28	0:0	12	n
arg	81:31	81:42	11	&region[j]
op	81:31	0:0	12	&
water	81:32	0:0	12	region
op	81:38	0:0	12	[
water	81:39	0:0	12	j
op	81:40	0:0	12	]
water	81:43	0:0	10	;
decl	82:20	82:96	10	int	ds
op	82:27	0:0	10	=
call	82:29	82:43	11	r_surface
arg	82:40	82:43	12	&n
op	82:40	0:0	13	&
water	82:41	0:0	13	n
op	82:45	0:0	10	-
call	82:47	82:69	11	r_surface
arg	82:58	82:69	12	&region[i]
op	82:58	0:0	13	&
water	82:59	0:0	13	region
op	82:65	0:0	13	[
water	82:66	0:0	13	i
op	82:67	0:0	13	]
op	82:71	0:0	10	-
call	82:73	82:95	11	r_surface
arg	82:84	82:95	12	&region[j]
op	82:84	0:0	13	&
water	82:85	0:0	13	region
op	82:91	0:0	13	[
water	82:92	0:0	13	j
op	82:93	0:0	13	]
if	83:20	88:20	10	(ds < i_best_ds)
cond	83:24	83:29	11	ds < i_best_ds
water	83:24	0:0	12	ds
op	83:27	0:0	12	<
water	83:29	0:0	12	i_best_ds
stmts	84:20	88:20	11	
water	84:20	0:0	12	{
water	85:24	0:0	12	i_best_i
op	85:33	0:0	12	=
water	85:35	0:0	12	i
water	85:36	0:0	12	;
water	86:24	0:0	12	i_best_j
op	86:33	0:0	12	=
water	86:35	0:0	12	j
water	86:36	0:0	12	;
water	87:24	0:0	12	i_best_ds
op	87:34	0:0	12	=
water	87:36	0:0	12	ds
water	87:38	0:0	12	;
water	88:20	0:0	12	}
water	89:16	0:0	10	}
water	90:12	0:0	8	}
call	92:12	92:68	6	msg_Err
arg	92:21	92:26	7	p_spu
water	92:21	0:0	8	p_spu
arg	92:28	92:47	7	"Merging %d and %d"
water	92:28	0:0	8	"Merging %d and %d"
arg	92:49	92:57	7	i_best_i
water	92:49	0:0	8	i_best_i
arg	92:59	92:68	7	i_best_j
water	92:59	0:0	8	i_best_j
water	92:69	0:0	6	;
if	94:12	100:12	6	(i_best_j >= 0 && i_best_i >= 0)
cond	94:16	94:45	7	i_best_j >= 0 && i_best_i >= 0
water	94:16	0:0	8	i_best_j
op	94:25	0:0	8	>=
water	94:28	0:0	8	0
op	94:30	0:0	8	&&
water	94:33	0:0	8	i_best_i
op	94:42	0:0	8	>=
water	94:45	0:0	8	0
stmts	95:12	100:12	7	
water	95:12	0:0	8	{
call	96:16	96:60	8	r_add
arg	96:23	96:40	9	&region[i_best_i]
op	96:23	0:0	10	&
water	96:24	0:0	10	region
op	96:30	0:0	10	[
water	96:31	0:0	10	i_best_i
op	96:39	0:0	10	]
arg	96:42	96:60	9	&region[i_best_j]
op	96:42	0:0	10	&
water	96:43	0:0	10	region
op	96:49	0:0	10	[
water	96:50	0:0	10	i_best_j
op	96:58	0:0	10	]
water	96:61	0:0	8	;
if	97:16	98:117	8	(i_best_j + 1 < i_region)
cond	97:20	97:33	9	i_best_j + 1 < i_region
water	97:20	0:0	10	i_best_j
op	97:28	0:0	10	+
water	97:29	0:0	10	1
op	97:31	0:0	10	<
water	97:33	0:0	10	i_region
stmts	98:20	98:117	9	
call	98:20	98:116	10	memmove
arg	98:29	98:46	11	&region[i_best_j]
op	98:29	0:0	12	&
water	98:30	0:0	12	region
op	98:36	0:0	12	[
water	98:37	0:0	12	i_best_j
op	98:45	0:0	12	]
arg	98:48	98:67	11	&region[i_best_j+1]
op	98:48	0:0	12	&
water	98:49	0:0	12	region
op	98:55	0:0	12	[
water	98:56	0:0	12	i_best_j
op	98:64	0:0	12	+
water	98:65	0:0	12	1
op	98:66	0:0	12	]
arg	98:69	98:116	11	sizeof(*region)*(i_region-(i_best_j+1))
op	98:69	0:0	12	sizeof
water	98:75	0:0	12	(
op	98:76	0:0	12	*
water	98:77	0:0	12	region
water	98:83	0:0	12	)
op	98:85	0:0	12	*
water	98:87	0:0	12	(
water	98:89	0:0	12	i_region
op	98:98	0:0	12	-
water	98:100	0:0	12	(
water	98:101	0:0	12	i_best_j
op	98:109	0:0	12	+
water	98:110	0:0	12	1
water	98:111	0:0	12	)
water	98:114	0:0	12	)
water	98:117	0:0	10	;
water	99:16	0:0	8	i_region
op	99:24	0:0	8	--
water	99:26	0:0	8	;
water	100:12	0:0	8	}
water	101:8	0:0	6	}
water	102:4	0:0	4	}
for	104:4	105:31	2	( int n = 0 ;n < i_region;n ++)
forinit	0:0	104:18	3	 int n = 0 ;
decl	104:9	104:18	4	int	n
op	104:15	0:0	4	=
water	104:17	0:0	4	0
cond	104:20	104:24	3	n < i_region
water	104:20	0:0	4	n
op	104:22	0:0	4	<
water	104:24	0:0	4	i_region
forexpr	104:34	104:35	3	n ++
water	104:34	0:0	4	n
op	104:35	0:0	4	++
stmts	105:8	105:31	3	
water	105:8	0:0	4	p_region
op	105:16	0:0	4	[
water	105:17	0:0	4	n
op	105:18	0:0	4	]
op	105:20	0:0	4	=
water	105:22	0:0	4	region
op	105:28	0:0	4	[
water	105:29	0:0	4	n
op	105:30	0:0	4	]
water	105:31	0:0	4	;
decl	107:4	107:44	2	int64_t	i_ck_time
op	107:22	0:0	2	=
call	107:24	107:30	3	mdate
op	107:32	0:0	2	-
water	107:34	0:0	2	i_ck_start
call	108:4	108:110	2	msg_Err
arg	108:13	108:18	3	p_spu
water	108:13	0:0	4	p_spu
arg	108:20	108:72	3	"ASS: %d objects merged into %d region in %d micros"
water	108:20	0:0	4	"ASS: %d objects merged into %d region in %d micros"
arg	108:74	108:81	3	i_count
water	108:74	0:0	4	i_count
arg	108:83	108:91	3	i_region
water	108:83	0:0	4	i_region
arg	108:93	108:110	3	(int)(i_ck_time)
call	108:93	108:108	4	(int)
arg	108:99	108:108	5	i_ck_time
water	108:99	0:0	6	i_ck_time
water	108:111	0:0	2	;
call	110:4	110:17	2	free
arg	110:10	110:17	3	pp_img
water	110:10	0:0	4	pp_img
water	110:18	0:0	2	;
return	111:4	111:19	2	i_region
water	111:11	0:0	3	i_region

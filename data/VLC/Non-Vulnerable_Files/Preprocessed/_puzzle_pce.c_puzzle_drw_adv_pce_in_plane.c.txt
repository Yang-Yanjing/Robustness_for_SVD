func	2:0	42:0	0	void	puzzle_drw_adv_pce_in_plane
params	2:32	0:0	1	
param	2:34	2:52	2	filter_t *	p_filter
param	2:54	2:73	2	picture_t *	p_pic_in
param	2:75	2:95	2	picture_t *	p_pic_out
param	2:97	2:112	2	uint8_t	i_plane
param	2:114	2:131	2	piece_t *	ps_piece
stmnts	0:0	41:10	1	
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
if	6:4	7:14	2	(( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL ) || ( ps_piece == NULL ))
cond	6:8	6:91	3	( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL ) || ( ps_piece == NULL )
water	6:8	0:0	4	(
water	6:9	0:0	4	p_sys
op	6:14	0:0	4	->
water	6:16	0:0	4	ps_puzzle_array
op	6:32	0:0	4	==
water	6:35	0:0	4	NULL
water	6:39	0:0	4	)
op	6:41	0:0	4	||
water	6:44	0:0	4	(
water	6:45	0:0	4	p_sys
op	6:50	0:0	4	->
water	6:52	0:0	4	ps_pieces
op	6:62	0:0	4	==
water	6:65	0:0	4	NULL
water	6:69	0:0	4	)
op	6:71	0:0	4	||
water	6:74	0:0	4	(
water	6:75	0:0	4	ps_piece
op	6:84	0:0	4	==
water	6:87	0:0	4	NULL
water	6:91	0:0	4	)
stmts	7:8	7:14	3	
return	7:8	7:14	4	
decl	8:4	8:63	2	const int32_t	i_src_pitch
op	8:33	0:0	2	=
water	8:35	0:0	2	p_pic_in
op	8:43	0:0	2	->
water	8:45	0:0	2	p
op	8:46	0:0	2	[
water	8:47	0:0	2	i_plane
op	8:54	0:0	2	]
op	8:55	0:0	2	.
water	8:56	0:0	2	i_pitch
decl	9:4	9:64	2	const int32_t	i_dst_pitch
op	9:33	0:0	2	=
water	9:35	0:0	2	p_pic_out
op	9:44	0:0	2	->
water	9:46	0:0	2	p
op	9:47	0:0	2	[
water	9:48	0:0	2	i_plane
op	9:55	0:0	2	]
op	9:56	0:0	2	.
water	9:57	0:0	2	i_pitch
decl	10:4	10:100	2	const int32_t	i_src_width
op	10:33	0:0	2	=
water	10:35	0:0	2	p_pic_in
op	10:43	0:0	2	->
water	10:45	0:0	2	p
op	10:46	0:0	2	[
water	10:47	0:0	2	i_plane
op	10:54	0:0	2	]
op	10:55	0:0	2	.
water	10:56	0:0	2	i_pitch
op	10:64	0:0	2	/
water	10:66	0:0	2	p_pic_in
op	10:74	0:0	2	->
water	10:76	0:0	2	p
op	10:77	0:0	2	[
water	10:78	0:0	2	i_plane
op	10:85	0:0	2	]
op	10:86	0:0	2	.
water	10:87	0:0	2	i_pixel_pitch
decl	11:4	11:102	2	const int32_t	i_dst_width
op	11:33	0:0	2	=
water	11:35	0:0	2	p_pic_out
op	11:44	0:0	2	->
water	11:46	0:0	2	p
op	11:47	0:0	2	[
water	11:48	0:0	2	i_plane
op	11:55	0:0	2	]
op	11:56	0:0	2	.
water	11:57	0:0	2	i_pitch
op	11:65	0:0	2	/
water	11:67	0:0	2	p_pic_out
op	11:76	0:0	2	->
water	11:78	0:0	2	p
op	11:79	0:0	2	[
water	11:80	0:0	2	i_plane
op	11:87	0:0	2	]
op	11:88	0:0	2	.
water	11:89	0:0	2	i_pixel_pitch
decl	12:4	12:70	2	const int32_t	i_pixel_pitch
op	12:33	0:0	2	=
water	12:35	0:0	2	p_pic_out
op	12:44	0:0	2	->
water	12:46	0:0	2	p
op	12:47	0:0	2	[
water	12:48	0:0	2	i_plane
op	12:55	0:0	2	]
op	12:56	0:0	2	.
water	12:57	0:0	2	i_pixel_pitch
decl	13:4	13:79	2	const int32_t	i_src_visible_lines
op	13:41	0:0	2	=
water	13:43	0:0	2	p_pic_in
op	13:51	0:0	2	->
water	13:53	0:0	2	p
op	13:54	0:0	2	[
water	13:55	0:0	2	i_plane
op	13:62	0:0	2	]
op	13:63	0:0	2	.
water	13:64	0:0	2	i_visible_lines
decl	14:4	14:80	2	const int32_t	i_dst_visible_lines
op	14:41	0:0	2	=
water	14:43	0:0	2	p_pic_out
op	14:52	0:0	2	->
water	14:54	0:0	2	p
op	14:55	0:0	2	[
water	14:56	0:0	2	i_plane
op	14:63	0:0	2	]
op	14:64	0:0	2	.
water	14:65	0:0	2	i_visible_lines
decl	15:4	15:50	2	uint8_t	*p_src
op	15:19	0:0	2	=
water	15:21	0:0	2	p_pic_in
op	15:29	0:0	2	->
water	15:31	0:0	2	p
op	15:32	0:0	2	[
water	15:33	0:0	2	i_plane
op	15:40	0:0	2	]
op	15:41	0:0	2	.
water	15:42	0:0	2	p_pixels
decl	16:4	16:51	2	uint8_t	*p_dst
op	16:19	0:0	2	=
water	16:21	0:0	2	p_pic_out
op	16:30	0:0	2	->
water	16:32	0:0	2	p
op	16:33	0:0	2	[
water	16:34	0:0	2	i_plane
op	16:41	0:0	2	]
op	16:42	0:0	2	.
water	16:43	0:0	2	p_pixels
decl	17:4	17:82	2	const int32_t	i_desk_start_x
op	17:33	0:0	2	=
water	17:35	0:0	2	ps_piece
op	17:43	0:0	2	->
water	17:45	0:0	2	ps_piece_in_plane
op	17:62	0:0	2	[
water	17:63	0:0	2	i_plane
op	17:70	0:0	2	]
op	17:71	0:0	2	.
water	17:72	0:0	2	i_actual_x
decl	18:4	18:82	2	const int32_t	i_desk_start_y
op	18:33	0:0	2	=
water	18:35	0:0	2	ps_piece
op	18:43	0:0	2	->
water	18:45	0:0	2	ps_piece_in_plane
op	18:62	0:0	2	[
water	18:63	0:0	2	i_plane
op	18:70	0:0	2	]
op	18:71	0:0	2	.
water	18:72	0:0	2	i_actual_y
decl	19:4	19:83	2	const int32_t	i_pic_start_x
op	19:32	0:0	2	=
water	19:34	0:0	2	ps_piece
op	19:42	0:0	2	->
water	19:44	0:0	2	ps_piece_in_plane
op	19:61	0:0	2	[
water	19:62	0:0	2	i_plane
op	19:69	0:0	2	]
op	19:70	0:0	2	.
water	19:71	0:0	2	i_original_x
decl	20:4	20:83	2	const int32_t	i_pic_start_y
op	20:32	0:0	2	=
water	20:34	0:0	2	ps_piece
op	20:42	0:0	2	->
water	20:44	0:0	2	ps_piece_in_plane
op	20:61	0:0	2	[
water	20:62	0:0	2	i_plane
op	20:69	0:0	2	]
op	20:70	0:0	2	.
water	20:71	0:0	2	i_original_y
decl	21:4	21:72	2	const int32_t	i_width
op	21:26	0:0	2	=
water	21:28	0:0	2	ps_piece
op	21:36	0:0	2	->
water	21:38	0:0	2	ps_piece_in_plane
op	21:55	0:0	2	[
water	21:56	0:0	2	i_plane
op	21:63	0:0	2	]
op	21:64	0:0	2	.
water	21:65	0:0	2	i_width
decl	22:4	22:72	2	const int32_t	i_lines
op	22:26	0:0	2	=
water	22:28	0:0	2	ps_piece
op	22:36	0:0	2	->
water	22:38	0:0	2	ps_piece_in_plane
op	22:55	0:0	2	[
water	22:56	0:0	2	i_plane
op	22:63	0:0	2	]
op	22:64	0:0	2	.
water	22:65	0:0	2	i_lines
for	23:4	40:4	2	( int32_t i_y = 0 ;i_y < i_lines;i_y ++)
forinit	0:0	23:24	3	 int32_t i_y = 0 ;
decl	23:9	23:24	4	int32_t	i_y
op	23:21	0:0	4	=
water	23:23	0:0	4	0
cond	23:26	23:32	3	i_y < i_lines
water	23:26	0:0	4	i_y
op	23:30	0:0	4	<
water	23:32	0:0	4	i_lines
forexpr	23:41	23:44	3	i_y ++
water	23:41	0:0	4	i_y
op	23:44	0:0	4	++
stmts	23:48	40:4	3	
water	23:48	0:0	4	{
decl	24:8	24:53	4	int32_t	i_current_src_y
op	24:32	0:0	4	=
water	24:34	0:0	4	i_pic_start_y
op	24:48	0:0	4	+
water	24:50	0:0	4	i_y
if	25:8	39:8	4	(( i_current_src_y >= 0 ) && ( i_current_src_y < i_src_visible_lines ))
cond	25:13	25:81	5	( i_current_src_y >= 0 ) && ( i_current_src_y < i_src_visible_lines )
water	25:13	0:0	6	(
water	25:15	0:0	6	i_current_src_y
op	25:31	0:0	6	>=
water	25:34	0:0	6	0
water	25:36	0:0	6	)
op	25:38	0:0	6	&&
water	25:41	0:0	6	(
water	25:43	0:0	6	i_current_src_y
op	25:59	0:0	6	<
water	25:61	0:0	6	i_src_visible_lines
water	25:81	0:0	6	)
stmts	25:85	39:8	5	
water	25:85	0:0	6	{
for	26:12	38:12	6	( int32_t i_x = 0 ;i_x < i_width;i_x ++)
forinit	0:0	26:32	7	 int32_t i_x = 0 ;
decl	26:17	26:32	8	int32_t	i_x
op	26:29	0:0	8	=
water	26:31	0:0	8	0
cond	26:34	26:40	7	i_x < i_width
water	26:34	0:0	8	i_x
op	26:38	0:0	8	<
water	26:40	0:0	8	i_width
forexpr	26:49	26:52	7	i_x ++
water	26:49	0:0	8	i_x
op	26:52	0:0	8	++
stmts	26:56	38:12	7	
water	26:56	0:0	8	{
decl	27:16	27:114	8	int32_t	i_current_dst_x
op	27:40	0:0	8	=
water	27:42	0:0	8	i_desk_start_x
op	27:57	0:0	8	+
water	27:59	0:0	8	i_x
op	27:63	0:0	8	*
water	27:65	0:0	8	ps_piece
op	27:73	0:0	8	->
water	27:75	0:0	8	i_step_x_x
op	27:86	0:0	8	+
water	27:88	0:0	8	i_y
op	27:92	0:0	8	*
water	27:94	0:0	8	ps_piece
op	27:102	0:0	8	->
water	27:104	0:0	8	i_step_y_x
decl	28:16	28:114	8	int32_t	i_current_dst_y
op	28:40	0:0	8	=
water	28:42	0:0	8	i_desk_start_y
op	28:57	0:0	8	+
water	28:59	0:0	8	i_x
op	28:63	0:0	8	*
water	28:65	0:0	8	ps_piece
op	28:73	0:0	8	->
water	28:75	0:0	8	i_step_x_y
op	28:86	0:0	8	+
water	28:88	0:0	8	i_y
op	28:92	0:0	8	*
water	28:94	0:0	8	ps_piece
op	28:102	0:0	8	->
water	28:104	0:0	8	i_step_y_y
decl	29:16	29:61	8	int32_t	i_current_src_x
op	29:40	0:0	8	=
water	29:42	0:0	8	i_pic_start_x
op	29:56	0:0	8	+
water	29:58	0:0	8	i_x
if	30:16	37:16	8	(( i_current_dst_x >= 0 ) && ( i_current_src_x >= 0 ) && ( i_current_dst_x < i_dst_width ) && ( i_current_src_x < i_src_width ) && ( i_current_dst_y >= 0 ) && ( i_current_dst_y < i_dst_visible_lines ))
cond	30:21	32:95	9	( i_current_dst_x >= 0 ) && ( i_current_src_x >= 0 ) && ( i_current_dst_x < i_dst_width ) && ( i_current_src_x < i_src_width ) && ( i_current_dst_y >= 0 ) && ( i_current_dst_y < i_dst_visible_lines )
water	30:21	0:0	10	(
water	30:23	0:0	10	i_current_dst_x
op	30:40	0:0	10	>=
water	30:43	0:0	10	0
water	30:45	0:0	10	)
op	30:47	0:0	10	&&
water	30:50	0:0	10	(
water	30:52	0:0	10	i_current_src_x
op	30:68	0:0	10	>=
water	30:71	0:0	10	0
water	30:73	0:0	10	)
op	31:24	0:0	10	&&
water	31:27	0:0	10	(
water	31:29	0:0	10	i_current_dst_x
op	31:46	0:0	10	<
water	31:48	0:0	10	i_dst_width
water	31:60	0:0	10	)
op	31:62	0:0	10	&&
water	31:65	0:0	10	(
water	31:67	0:0	10	i_current_src_x
op	31:83	0:0	10	<
water	31:85	0:0	10	i_src_width
water	31:97	0:0	10	)
op	32:24	0:0	10	&&
water	32:27	0:0	10	(
water	32:29	0:0	10	i_current_dst_y
op	32:45	0:0	10	>=
water	32:48	0:0	10	0
water	32:50	0:0	10	)
op	32:52	0:0	10	&&
water	32:55	0:0	10	(
water	32:57	0:0	10	i_current_dst_y
op	32:73	0:0	10	<
water	32:75	0:0	10	i_dst_visible_lines
water	32:95	0:0	10	)
stmts	33:16	37:16	9	
water	33:16	0:0	10	{
call	34:20	36:41	10	memcpy
arg	34:28	34:99	11	p_dst+i_current_dst_y*i_dst_pitch+i_current_dst_x*i_pixel_pitch
water	34:28	0:0	12	p_dst
op	34:34	0:0	12	+
water	34:36	0:0	12	i_current_dst_y
op	34:52	0:0	12	*
water	34:54	0:0	12	i_dst_pitch
op	34:66	0:0	12	+
water	34:68	0:0	12	i_current_dst_x
op	34:84	0:0	12	*
water	34:86	0:0	12	i_pixel_pitch
arg	35:28	35:99	11	p_src+i_current_src_y*i_src_pitch+i_current_src_x*i_pixel_pitch
water	35:28	0:0	12	p_src
op	35:34	0:0	12	+
water	35:36	0:0	12	i_current_src_y
op	35:52	0:0	12	*
water	35:54	0:0	12	i_src_pitch
op	35:66	0:0	12	+
water	35:68	0:0	12	i_current_src_x
op	35:84	0:0	12	*
water	35:86	0:0	12	i_pixel_pitch
arg	36:27	36:41	11	i_pixel_pitch
water	36:27	0:0	12	i_pixel_pitch
water	36:42	0:0	10	;
water	37:16	0:0	10	}
water	38:12	0:0	8	}
water	39:8	0:0	6	}
water	40:4	0:0	4	}
return	41:4	41:10	2	

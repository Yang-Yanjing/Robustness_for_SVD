func	2:0	61:0	0	static void	MuxWritePSM
params	2:23	0:0	1	
param	2:25	2:42	2	sout_mux_t *	p_mux
param	2:44	2:59	2	block_t * *	p_buf
param	2:61	2:75	2	mtime_t	i_dts
stmnts	0:0	60:37	1	
decl	4:4	4:40	2	sout_mux_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	p_mux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:18	2	block_t	*p_hdr
decl	6:4	6:22	2	bits_buffer_t	bits
decl	7:4	7:45	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:45	2	int	i_psm_size
op	7:22	0:0	2	=
water	7:24	0:0	2	16
water	7:26	0:0	2	,
decl	7:4	7:45	2	int	i_es_map_size
op	7:42	0:0	2	=
water	7:44	0:0	2	0
for	8:4	14:4	2	(i = 0 ;i < p_mux -> i_nb_inputs;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:27	3	i < p_mux -> i_nb_inputs
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	p_mux
op	8:25	0:0	4	->
water	8:27	0:0	4	i_nb_inputs
forexpr	8:40	8:41	3	i ++
water	8:40	0:0	4	i
op	8:41	0:0	4	++
stmts	9:4	14:4	3	
water	9:4	0:0	4	{
decl	10:8	10:51	4	sout_input_t	*p_input
op	10:30	0:0	4	=
water	10:32	0:0	4	p_mux
op	10:37	0:0	4	->
water	10:39	0:0	4	pp_inputs
op	10:48	0:0	4	[
water	10:49	0:0	4	i
op	10:50	0:0	4	]
decl	11:8	11:46	4	ps_stream_t	*p_stream
op	11:30	0:0	4	=
water	11:32	0:0	4	p_input
op	11:39	0:0	4	->
water	11:41	0:0	4	p_sys
water	12:8	0:0	4	i_es_map_size
op	12:22	0:0	4	+=
water	12:25	0:0	4	4
water	12:26	0:0	4	;
if	13:8	13:55	4	(p_stream -> lang [ 0 ] != 0)
cond	13:12	13:33	5	p_stream -> lang [ 0 ] != 0
water	13:12	0:0	6	p_stream
op	13:20	0:0	6	->
water	13:22	0:0	6	lang
op	13:26	0:0	6	[
water	13:27	0:0	6	0
op	13:28	0:0	6	]
op	13:30	0:0	6	!=
water	13:33	0:0	6	0
stmts	13:37	13:55	5	
water	13:37	0:0	6	i_es_map_size
op	13:51	0:0	6	+=
water	13:54	0:0	6	6
water	13:55	0:0	6	;
water	14:4	0:0	4	}
water	15:4	0:0	2	i_psm_size
op	15:15	0:0	2	+=
water	15:18	0:0	2	i_es_map_size
water	15:31	0:0	2	;
water	16:4	0:0	2	p_hdr
op	16:10	0:0	2	=
call	16:12	16:36	2	block_Alloc
arg	16:25	16:36	3	i_psm_size
water	16:25	0:0	4	i_psm_size
water	16:37	0:0	2	;
water	17:4	0:0	2	p_hdr
op	17:9	0:0	2	->
water	17:11	0:0	2	i_dts
op	17:17	0:0	2	=
water	17:19	0:0	2	p_hdr
op	17:24	0:0	2	->
water	17:26	0:0	2	i_pts
op	17:32	0:0	2	=
water	17:34	0:0	2	i_dts
water	17:39	0:0	2	;
call	18:4	18:48	2	memset
arg	18:12	18:27	3	p_hdr->p_buffer
water	18:12	0:0	4	p_hdr
op	18:17	0:0	4	->
water	18:19	0:0	4	p_buffer
arg	18:29	18:30	3	0
water	18:29	0:0	4	0
arg	18:32	18:48	3	p_hdr->i_buffer
water	18:32	0:0	4	p_hdr
op	18:37	0:0	4	->
water	18:39	0:0	4	i_buffer
water	18:49	0:0	2	;
call	19:4	19:55	2	bits_initwrite
arg	19:20	19:25	3	&bits
op	19:20	0:0	4	&
water	19:21	0:0	4	bits
arg	19:27	19:37	3	i_psm_size
water	19:27	0:0	4	i_psm_size
arg	19:39	19:55	3	p_hdr->p_buffer
water	19:39	0:0	4	p_hdr
op	19:44	0:0	4	->
water	19:46	0:0	4	p_buffer
water	19:56	0:0	2	;
call	20:4	20:34	2	bits_write
arg	20:16	20:21	3	&bits
op	20:16	0:0	4	&
water	20:17	0:0	4	bits
arg	20:23	20:25	3	32
water	20:23	0:0	4	32
arg	20:27	20:34	3	0x01bc
water	20:27	0:0	4	0
water	20:28	0:0	4	x01bc
water	20:35	0:0	2	;
call	21:4	21:42	2	bits_write
arg	21:16	21:21	3	&bits
op	21:16	0:0	4	&
water	21:17	0:0	4	bits
arg	21:23	21:25	3	16
water	21:23	0:0	4	16
arg	21:27	21:42	3	i_psm_size-6
water	21:27	0:0	4	i_psm_size
op	21:38	0:0	4	-
water	21:40	0:0	4	6
water	21:43	0:0	2	;
call	22:4	22:28	2	bits_write
arg	22:16	22:21	3	&bits
op	22:16	0:0	4	&
water	22:17	0:0	4	bits
arg	22:23	22:24	3	1
water	22:23	0:0	4	1
arg	22:26	22:28	3	1
water	22:26	0:0	4	1
water	22:29	0:0	2	;
call	23:4	23:30	2	bits_write
arg	23:16	23:21	3	&bits
op	23:16	0:0	4	&
water	23:17	0:0	4	bits
arg	23:23	23:24	3	2
water	23:23	0:0	4	2
arg	23:26	23:30	3	0xF
water	23:26	0:0	4	0
water	23:27	0:0	4	xF
water	23:31	0:0	2	;
call	24:4	24:47	2	bits_write
arg	24:16	24:21	3	&bits
op	24:16	0:0	4	&
water	24:17	0:0	4	bits
arg	24:23	24:24	3	5
water	24:23	0:0	4	5
arg	24:26	24:47	3	p_sys->i_psm_version
water	24:26	0:0	4	p_sys
op	24:31	0:0	4	->
water	24:33	0:0	4	i_psm_version
water	24:48	0:0	2	;
call	25:4	25:31	2	bits_write
arg	25:16	25:21	3	&bits
op	25:16	0:0	4	&
water	25:17	0:0	4	bits
arg	25:23	25:24	3	7
water	25:23	0:0	4	7
arg	25:26	25:31	3	0xFF
water	25:26	0:0	4	0
water	25:27	0:0	4	xFF
water	25:32	0:0	2	;
call	26:4	26:28	2	bits_write
arg	26:16	26:21	3	&bits
op	26:16	0:0	4	&
water	26:17	0:0	4	bits
arg	26:23	26:24	3	1
water	26:23	0:0	4	1
arg	26:26	26:28	3	1
water	26:26	0:0	4	1
water	26:29	0:0	2	;
call	27:4	27:29	2	bits_write
arg	27:16	27:21	3	&bits
op	27:16	0:0	4	&
water	27:17	0:0	4	bits
arg	27:23	27:25	3	16
water	27:23	0:0	4	16
arg	27:27	27:29	3	0
water	27:27	0:0	4	0
water	27:30	0:0	2	;
call	29:4	29:41	2	bits_write
arg	29:16	29:21	3	&bits
op	29:16	0:0	4	&
water	29:17	0:0	4	bits
arg	29:23	29:25	3	16
water	29:23	0:0	4	16
arg	29:27	29:41	3	i_es_map_size
water	29:27	0:0	4	i_es_map_size
water	29:42	0:0	2	;
for	30:4	51:4	2	(i = 0 ;i < p_mux -> i_nb_inputs;i ++)
forinit	30:9	30:14	3	i = 0 ;
water	30:9	0:0	4	i
op	30:11	0:0	4	=
water	30:13	0:0	4	0
water	30:14	0:0	4	;
cond	30:16	30:27	3	i < p_mux -> i_nb_inputs
water	30:16	0:0	4	i
op	30:18	0:0	4	<
water	30:20	0:0	4	p_mux
op	30:25	0:0	4	->
water	30:27	0:0	4	i_nb_inputs
forexpr	30:40	30:41	3	i ++
water	30:40	0:0	4	i
op	30:41	0:0	4	++
stmts	31:4	51:4	3	
water	31:4	0:0	4	{
decl	32:8	32:51	4	sout_input_t	*p_input
op	32:30	0:0	4	=
water	32:32	0:0	4	p_mux
op	32:37	0:0	4	->
water	32:39	0:0	4	pp_inputs
op	32:48	0:0	4	[
water	32:49	0:0	4	i
op	32:50	0:0	4	]
decl	33:8	33:46	4	ps_stream_t	*p_stream
op	33:30	0:0	4	=
water	33:32	0:0	4	p_input
op	33:39	0:0	4	->
water	33:41	0:0	4	p_sys
call	34:8	34:54	4	bits_write
arg	34:20	34:25	5	&bits
op	34:20	0:0	6	&
water	34:21	0:0	6	bits
arg	34:27	34:28	5	8
water	34:27	0:0	6	8
arg	34:30	34:54	5	p_stream->i_stream_type
water	34:30	0:0	6	p_stream
op	34:38	0:0	6	->
water	34:40	0:0	6	i_stream_type
water	34:55	0:0	4	;
call	35:8	35:52	4	bits_write
arg	35:20	35:25	5	&bits
op	35:20	0:0	6	&
water	35:21	0:0	6	bits
arg	35:27	35:28	5	8
water	35:27	0:0	6	8
arg	35:30	35:52	5	p_stream->i_stream_id
water	35:30	0:0	6	p_stream
op	35:38	0:0	6	->
water	35:40	0:0	6	i_stream_id
water	35:53	0:0	4	;
if	37:8	46:8	4	(p_stream -> lang [ 0 ] != 0)
cond	37:12	37:33	5	p_stream -> lang [ 0 ] != 0
water	37:12	0:0	6	p_stream
op	37:20	0:0	6	->
water	37:22	0:0	6	lang
op	37:26	0:0	6	[
water	37:27	0:0	6	0
op	37:28	0:0	6	]
op	37:30	0:0	6	!=
water	37:33	0:0	6	0
stmts	38:8	46:8	5	
water	38:8	0:0	6	{
call	39:12	39:37	6	bits_write
arg	39:24	39:29	7	&bits
op	39:24	0:0	8	&
water	39:25	0:0	8	bits
arg	39:31	39:33	7	16
water	39:31	0:0	8	16
arg	39:35	39:37	7	6
water	39:35	0:0	8	6
water	39:38	0:0	6	;
call	40:12	40:39	6	bits_write
arg	40:24	40:29	7	&bits
op	40:24	0:0	8	&
water	40:25	0:0	8	bits
arg	40:31	40:32	7	8
water	40:31	0:0	8	8
arg	40:34	40:39	7	0x0a
water	40:34	0:0	8	0
water	40:35	0:0	8	x0a
water	40:40	0:0	6	;
call	41:12	41:36	6	bits_write
arg	41:24	41:29	7	&bits
op	41:24	0:0	8	&
water	41:25	0:0	8	bits
arg	41:31	41:32	7	8
water	41:31	0:0	8	8
arg	41:34	41:36	7	4
water	41:34	0:0	8	4
water	41:37	0:0	6	;
call	42:12	42:52	6	bits_write
arg	42:24	42:29	7	&bits
op	42:24	0:0	8	&
water	42:25	0:0	8	bits
arg	42:31	42:32	7	8
water	42:31	0:0	8	8
arg	42:34	42:52	7	p_stream->lang[0]
water	42:34	0:0	8	p_stream
op	42:42	0:0	8	->
water	42:44	0:0	8	lang
op	42:48	0:0	8	[
water	42:49	0:0	8	0
op	42:50	0:0	8	]
water	42:53	0:0	6	;
call	43:12	43:52	6	bits_write
arg	43:24	43:29	7	&bits
op	43:24	0:0	8	&
water	43:25	0:0	8	bits
arg	43:31	43:32	7	8
water	43:31	0:0	8	8
arg	43:34	43:52	7	p_stream->lang[1]
water	43:34	0:0	8	p_stream
op	43:42	0:0	8	->
water	43:44	0:0	8	lang
op	43:48	0:0	8	[
water	43:49	0:0	8	1
op	43:50	0:0	8	]
water	43:53	0:0	6	;
call	44:12	44:52	6	bits_write
arg	44:24	44:29	7	&bits
op	44:24	0:0	8	&
water	44:25	0:0	8	bits
arg	44:31	44:32	7	8
water	44:31	0:0	8	8
arg	44:34	44:52	7	p_stream->lang[2]
water	44:34	0:0	8	p_stream
op	44:42	0:0	8	->
water	44:44	0:0	8	lang
op	44:48	0:0	8	[
water	44:49	0:0	8	2
op	44:50	0:0	8	]
water	44:53	0:0	6	;
call	45:12	45:36	6	bits_write
arg	45:24	45:29	7	&bits
op	45:24	0:0	8	&
water	45:25	0:0	8	bits
arg	45:31	45:32	7	8
water	45:31	0:0	8	8
arg	45:34	45:36	7	0
water	45:34	0:0	8	0
water	45:37	0:0	6	;
water	46:8	0:0	6	}
else	47:8	50:8	4
stmts	48:8	50:8	5	
water	48:8	0:0	6	{
call	49:12	49:37	6	bits_write
arg	49:24	49:29	7	&bits
op	49:24	0:0	8	&
water	49:25	0:0	8	bits
arg	49:31	49:33	7	16
water	49:31	0:0	8	16
arg	49:35	49:37	7	0
water	49:35	0:0	8	0
water	49:38	0:0	6	;
water	50:8	0:0	6	}
water	51:4	0:0	4	}
water	53:4	0:0	2	{
decl	54:8	54:35	2	uint32_t	i_crc
op	54:23	0:0	2	=
water	54:25	0:0	2	0
water	54:26	0:0	2	xffffffff
for	55:8	57:75	2	(i = 0 ;( size_t ) i < p_hdr -> i_buffer;i ++)
forinit	55:13	55:18	3	i = 0 ;
water	55:13	0:0	4	i
op	55:15	0:0	4	=
water	55:17	0:0	4	0
water	55:18	0:0	4	;
cond	55:20	55:39	3	( size_t ) i < p_hdr -> i_buffer
water	55:20	0:0	4	(
water	55:21	0:0	4	size_t
water	55:27	0:0	4	)
water	55:28	0:0	4	i
op	55:30	0:0	4	<
water	55:32	0:0	4	p_hdr
op	55:37	0:0	4	->
water	55:39	0:0	4	i_buffer
forexpr	55:49	55:50	3	i ++
water	55:49	0:0	4	i
op	55:50	0:0	4	++
stmts	56:8	57:75	3	
water	56:8	0:0	4	i_crc
op	56:14	0:0	4	=
water	56:16	0:0	4	(
water	56:17	0:0	4	i_crc
op	56:23	0:0	4	<<
water	56:26	0:0	4	8
water	56:27	0:0	4	)
op	56:29	0:0	4	^
water	57:12	0:0	4	p_sys
op	57:17	0:0	4	->
water	57:19	0:0	4	crc32_table
op	57:30	0:0	4	[
water	57:31	0:0	4	(
water	57:32	0:0	4	(
water	57:33	0:0	4	i_crc
op	57:39	0:0	4	>>
water	57:42	0:0	4	24
water	57:44	0:0	4	)
op	57:46	0:0	4	^
water	57:48	0:0	4	p_hdr
op	57:53	0:0	4	->
water	57:55	0:0	4	p_buffer
op	57:63	0:0	4	[
water	57:64	0:0	4	i
op	57:65	0:0	4	]
water	57:66	0:0	4	)
op	57:68	0:0	4	&
water	57:70	0:0	4	0
water	57:71	0:0	4	xff
op	57:74	0:0	4	]
water	57:75	0:0	4	;
call	58:8	58:37	2	bits_write
arg	58:20	58:25	3	&bits
op	58:20	0:0	4	&
water	58:21	0:0	4	bits
arg	58:27	58:29	3	32
water	58:27	0:0	4	32
arg	58:31	58:37	3	i_crc
water	58:31	0:0	4	i_crc
water	58:38	0:0	2	;
water	59:4	0:0	2	}
call	60:4	60:36	2	block_ChainAppend
arg	60:23	60:28	3	p_buf
water	60:23	0:0	4	p_buf
arg	60:30	60:36	3	p_hdr
water	60:30	0:0	4	p_hdr
water	60:37	0:0	2	;

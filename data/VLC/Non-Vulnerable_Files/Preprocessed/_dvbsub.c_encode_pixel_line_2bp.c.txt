func	2:0	83:0	0	static void	encode_pixel_line_2bp
params	2:33	0:0	1	
param	2:35	2:42	2	bs_t *	s
param	2:44	2:73	2	subpicture_region_t *	p_region
param	3:35	3:46	2	int	i_line
stmnts	0:0	82:19	1	
decl	5:4	5:32	2	unsigned int	i
water	5:18	0:0	2	,
decl	5:4	5:32	2	unsigned int	i_length
op	5:29	0:0	2	=
water	5:31	0:0	2	0
decl	6:4	6:49	2	int	i_pitch
op	6:16	0:0	2	=
water	6:18	0:0	2	p_region
op	6:26	0:0	2	->
water	6:28	0:0	2	p_picture
op	6:37	0:0	2	->
water	6:39	0:0	2	p
op	6:40	0:0	2	->
water	6:42	0:0	2	i_pitch
decl	7:4	7:75	2	uint8_t	*p_data
op	7:20	0:0	2	=
op	7:22	0:0	2	&
water	7:23	0:0	2	p_region
op	7:31	0:0	2	->
water	7:33	0:0	2	p_picture
op	7:42	0:0	2	->
water	7:44	0:0	2	p
op	7:45	0:0	2	->
water	7:47	0:0	2	p_pixels
op	7:55	0:0	2	[
water	7:57	0:0	2	i_pitch
op	7:65	0:0	2	*
water	7:67	0:0	2	i_line
op	7:74	0:0	2	]
decl	8:4	8:32	2	int	i_last_pixel
op	8:21	0:0	2	=
water	8:23	0:0	2	p_data
op	8:29	0:0	2	[
water	8:30	0:0	2	0
op	8:31	0:0	2	]
for	9:4	75:4	2	(i = 0 ;i <= p_region -> fmt . i_visible_width;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:35	3	i <= p_region -> fmt . i_visible_width
water	9:16	0:0	4	i
op	9:18	0:0	4	<=
water	9:21	0:0	4	p_region
op	9:29	0:0	4	->
water	9:31	0:0	4	fmt
op	9:34	0:0	4	.
water	9:35	0:0	4	i_visible_width
forexpr	9:52	9:53	3	i ++
water	9:52	0:0	4	i
op	9:53	0:0	4	++
stmts	10:4	75:4	3	
water	10:4	0:0	4	{
if	11:8	16:8	4	(( i != p_region -> fmt . i_visible_width ) && ( p_data [ i ] == i_last_pixel ) && ( i_length != 284 ))
cond	11:12	12:63	5	( i != p_region -> fmt . i_visible_width ) && ( p_data [ i ] == i_last_pixel ) && ( i_length != 284 )
water	11:12	0:0	6	(
water	11:14	0:0	6	i
op	11:16	0:0	6	!=
water	11:19	0:0	6	p_region
op	11:27	0:0	6	->
water	11:29	0:0	6	fmt
op	11:32	0:0	6	.
water	11:33	0:0	6	i_visible_width
water	11:49	0:0	6	)
op	11:51	0:0	6	&&
water	12:12	0:0	6	(
water	12:14	0:0	6	p_data
op	12:20	0:0	6	[
water	12:21	0:0	6	i
op	12:22	0:0	6	]
op	12:24	0:0	6	==
water	12:27	0:0	6	i_last_pixel
water	12:40	0:0	6	)
op	12:42	0:0	6	&&
water	12:45	0:0	6	(
water	12:47	0:0	6	i_length
op	12:56	0:0	6	!=
water	12:59	0:0	6	284
water	12:63	0:0	6	)
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
water	14:12	0:0	6	i_length
op	14:20	0:0	6	++
water	14:22	0:0	6	;
continue	15:12	15:20	6	
water	16:8	0:0	6	}
if	17:8	29:8	4	(( i_length == 1 ) || ( i_length == 11 ) || ( i_length == 28 ))
cond	17:12	17:72	5	( i_length == 1 ) || ( i_length == 11 ) || ( i_length == 28 )
water	17:12	0:0	6	(
water	17:14	0:0	6	i_length
op	17:23	0:0	6	==
water	17:26	0:0	6	1
water	17:28	0:0	6	)
op	17:30	0:0	6	||
water	17:33	0:0	6	(
water	17:35	0:0	6	i_length
op	17:44	0:0	6	==
water	17:47	0:0	6	11
water	17:50	0:0	6	)
op	17:52	0:0	6	||
water	17:55	0:0	6	(
water	17:57	0:0	6	i_length
op	17:66	0:0	6	==
water	17:69	0:0	6	28
water	17:72	0:0	6	)
stmts	18:8	29:8	5	
water	18:8	0:0	6	{
if	20:12	21:46	6	(i_last_pixel)
cond	20:16	20:16	7	i_last_pixel
water	20:16	0:0	8	i_last_pixel
stmts	21:16	21:46	7	
call	21:16	21:45	8	bs_write
arg	21:26	21:27	9	s
water	21:26	0:0	10	s
arg	21:29	21:30	9	2
water	21:29	0:0	10	2
arg	21:32	21:45	9	i_last_pixel
water	21:32	0:0	10	i_last_pixel
water	21:46	0:0	8	;
else	22:12	27:12	6
stmts	23:12	27:12	7	
water	23:12	0:0	8	{
call	24:16	24:34	8	bs_write
arg	24:26	24:27	9	s
water	24:26	0:0	10	s
arg	24:29	24:30	9	2
water	24:29	0:0	10	2
arg	24:32	24:34	9	0
water	24:32	0:0	10	0
water	24:35	0:0	8	;
call	25:16	25:34	8	bs_write
arg	25:26	25:27	9	s
water	25:26	0:0	10	s
arg	25:29	25:30	9	1
water	25:29	0:0	10	1
arg	25:32	25:34	9	0
water	25:32	0:0	10	0
water	25:35	0:0	8	;
call	26:16	26:34	8	bs_write
arg	26:26	26:27	9	s
water	26:26	0:0	10	s
arg	26:29	26:30	9	1
water	26:29	0:0	10	1
arg	26:32	26:34	9	1
water	26:32	0:0	10	1
water	26:35	0:0	8	;
water	27:12	0:0	8	}
water	28:12	0:0	6	i_length
op	28:20	0:0	6	--
water	28:22	0:0	6	;
water	29:8	0:0	6	}
if	30:8	44:8	4	(i_length == 2)
cond	30:12	30:24	5	i_length == 2
water	30:12	0:0	6	i_length
op	30:21	0:0	6	==
water	30:24	0:0	6	2
stmts	31:8	44:8	5	
water	31:8	0:0	6	{
if	32:12	36:12	6	(i_last_pixel)
cond	32:16	32:16	7	i_last_pixel
water	32:16	0:0	8	i_last_pixel
stmts	33:12	36:12	7	
water	33:12	0:0	8	{
call	34:16	34:45	8	bs_write
arg	34:26	34:27	9	s
water	34:26	0:0	10	s
arg	34:29	34:30	9	2
water	34:29	0:0	10	2
arg	34:32	34:45	9	i_last_pixel
water	34:32	0:0	10	i_last_pixel
water	34:46	0:0	8	;
call	35:16	35:45	8	bs_write
arg	35:26	35:27	9	s
water	35:26	0:0	10	s
arg	35:29	35:30	9	2
water	35:29	0:0	10	2
arg	35:32	35:45	9	i_last_pixel
water	35:32	0:0	10	i_last_pixel
water	35:46	0:0	8	;
water	36:12	0:0	8	}
else	37:12	43:12	6
stmts	38:12	43:12	7	
water	38:12	0:0	8	{
call	39:16	39:34	8	bs_write
arg	39:26	39:27	9	s
water	39:26	0:0	10	s
arg	39:29	39:30	9	2
water	39:29	0:0	10	2
arg	39:32	39:34	9	0
water	39:32	0:0	10	0
water	39:35	0:0	8	;
call	40:16	40:34	8	bs_write
arg	40:26	40:27	9	s
water	40:26	0:0	10	s
arg	40:29	40:30	9	1
water	40:29	0:0	10	1
arg	40:32	40:34	9	0
water	40:32	0:0	10	0
water	40:35	0:0	8	;
call	41:16	41:34	8	bs_write
arg	41:26	41:27	9	s
water	41:26	0:0	10	s
arg	41:29	41:30	9	1
water	41:29	0:0	10	1
arg	41:32	41:34	9	0
water	41:32	0:0	10	0
water	41:35	0:0	8	;
call	42:16	42:34	8	bs_write
arg	42:26	42:27	9	s
water	42:26	0:0	10	s
arg	42:29	42:30	9	2
water	42:29	0:0	10	2
arg	42:32	42:34	9	1
water	42:32	0:0	10	1
water	42:35	0:0	8	;
water	43:12	0:0	8	}
water	44:8	0:0	6	}
else	45:8	71:8	4
stmts	45:13	71:8	5	
if	45:13	71:8	6	(i_length > 2)
cond	45:17	45:28	7	i_length > 2
water	45:17	0:0	8	i_length
op	45:26	0:0	8	>
water	45:28	0:0	8	2
stmts	46:8	71:8	7	
water	46:8	0:0	8	{
call	47:12	47:30	8	bs_write
arg	47:22	47:23	9	s
water	47:22	0:0	10	s
arg	47:25	47:26	9	2
water	47:25	0:0	10	2
arg	47:28	47:30	9	0
water	47:28	0:0	10	0
water	47:31	0:0	8	;
if	48:12	53:12	8	(i_length <= 10)
cond	48:16	48:28	9	i_length <= 10
water	48:16	0:0	10	i_length
op	48:25	0:0	10	<=
water	48:28	0:0	10	10
stmts	49:12	53:12	9	
water	49:12	0:0	10	{
call	50:16	50:34	10	bs_write
arg	50:26	50:27	11	s
water	50:26	0:0	12	s
arg	50:29	50:30	11	1
water	50:29	0:0	12	1
arg	50:32	50:34	11	1
water	50:32	0:0	12	1
water	50:35	0:0	10	;
call	51:16	51:45	10	bs_write
arg	51:26	51:27	11	s
water	51:26	0:0	12	s
arg	51:29	51:30	11	3
water	51:29	0:0	12	3
arg	51:32	51:45	11	i_length-3
water	51:32	0:0	12	i_length
op	51:41	0:0	12	-
water	51:43	0:0	12	3
water	51:46	0:0	10	;
call	52:16	52:45	10	bs_write
arg	52:26	52:27	11	s
water	52:26	0:0	12	s
arg	52:29	52:30	11	2
water	52:29	0:0	12	2
arg	52:32	52:45	11	i_last_pixel
water	52:32	0:0	12	i_last_pixel
water	52:46	0:0	10	;
water	53:12	0:0	10	}
else	54:12	70:12	8
stmts	55:12	70:12	9	
water	55:12	0:0	10	{
call	56:16	56:34	10	bs_write
arg	56:26	56:27	11	s
water	56:26	0:0	12	s
arg	56:29	56:30	11	1
water	56:29	0:0	12	1
arg	56:32	56:34	11	0
water	56:32	0:0	12	0
water	56:35	0:0	10	;
call	57:16	57:34	10	bs_write
arg	57:26	57:27	11	s
water	57:26	0:0	12	s
arg	57:29	57:30	11	1
water	57:29	0:0	12	1
arg	57:32	57:34	11	0
water	57:32	0:0	12	0
water	57:35	0:0	10	;
if	58:16	63:16	10	(i_length <= 27)
cond	58:20	58:32	11	i_length <= 27
water	58:20	0:0	12	i_length
op	58:29	0:0	12	<=
water	58:32	0:0	12	27
stmts	59:16	63:16	11	
water	59:16	0:0	12	{
call	60:20	60:38	12	bs_write
arg	60:30	60:31	13	s
water	60:30	0:0	14	s
arg	60:33	60:34	13	2
water	60:33	0:0	14	2
arg	60:36	60:38	13	2
water	60:36	0:0	14	2
water	60:39	0:0	12	;
call	61:20	61:50	12	bs_write
arg	61:30	61:31	13	s
water	61:30	0:0	14	s
arg	61:33	61:34	13	4
water	61:33	0:0	14	4
arg	61:36	61:50	13	i_length-12
water	61:36	0:0	14	i_length
op	61:45	0:0	14	-
water	61:47	0:0	14	12
water	61:51	0:0	12	;
call	62:20	62:49	12	bs_write
arg	62:30	62:31	13	s
water	62:30	0:0	14	s
arg	62:33	62:34	13	2
water	62:33	0:0	14	2
arg	62:36	62:49	13	i_last_pixel
water	62:36	0:0	14	i_last_pixel
water	62:50	0:0	12	;
water	63:16	0:0	12	}
else	64:16	69:16	10
stmts	65:16	69:16	11	
water	65:16	0:0	12	{
call	66:20	66:38	12	bs_write
arg	66:30	66:31	13	s
water	66:30	0:0	14	s
arg	66:33	66:34	13	2
water	66:33	0:0	14	2
arg	66:36	66:38	13	3
water	66:36	0:0	14	3
water	66:39	0:0	12	;
call	67:20	67:50	12	bs_write
arg	67:30	67:31	13	s
water	67:30	0:0	14	s
arg	67:33	67:34	13	8
water	67:33	0:0	14	8
arg	67:36	67:50	13	i_length-29
water	67:36	0:0	14	i_length
op	67:45	0:0	14	-
water	67:47	0:0	14	29
water	67:51	0:0	12	;
call	68:20	68:49	12	bs_write
arg	68:30	68:31	13	s
water	68:30	0:0	14	s
arg	68:33	68:34	13	2
water	68:33	0:0	14	2
arg	68:36	68:49	13	i_last_pixel
water	68:36	0:0	14	i_last_pixel
water	68:50	0:0	12	;
water	69:16	0:0	12	}
water	70:12	0:0	10	}
water	71:8	0:0	8	}
if	72:8	72:54	4	(i == p_region -> fmt . i_visible_width)
cond	72:12	72:31	5	i == p_region -> fmt . i_visible_width
water	72:12	0:0	6	i
op	72:14	0:0	6	==
water	72:17	0:0	6	p_region
op	72:25	0:0	6	->
water	72:27	0:0	6	fmt
op	72:30	0:0	6	.
water	72:31	0:0	6	i_visible_width
stmts	72:49	72:54	5	
break	72:49	72:54	6	
water	73:8	0:0	4	i_last_pixel
op	73:21	0:0	4	=
water	73:23	0:0	4	p_data
op	73:29	0:0	4	[
water	73:30	0:0	4	i
op	73:31	0:0	4	]
water	73:32	0:0	4	;
water	74:8	0:0	4	i_length
op	74:17	0:0	4	=
water	74:19	0:0	4	1
water	74:20	0:0	4	;
water	75:4	0:0	4	}
call	77:4	77:22	2	bs_write
arg	77:14	77:15	3	s
water	77:14	0:0	4	s
arg	77:17	77:18	3	2
water	77:17	0:0	4	2
arg	77:20	77:22	3	0
water	77:20	0:0	4	0
water	77:23	0:0	2	;
call	78:4	78:22	2	bs_write
arg	78:14	78:15	3	s
water	78:14	0:0	4	s
arg	78:17	78:18	3	1
water	78:17	0:0	4	1
arg	78:20	78:22	3	0
water	78:20	0:0	4	0
water	78:23	0:0	2	;
call	79:4	79:22	2	bs_write
arg	79:14	79:15	3	s
water	79:14	0:0	4	s
arg	79:17	79:18	3	1
water	79:17	0:0	4	1
arg	79:20	79:22	3	0
water	79:20	0:0	4	0
water	79:23	0:0	2	;
call	80:4	80:22	2	bs_write
arg	80:14	80:15	3	s
water	80:14	0:0	4	s
arg	80:17	80:18	3	2
water	80:17	0:0	4	2
arg	80:20	80:22	3	0
water	80:20	0:0	4	0
water	80:23	0:0	2	;
call	82:4	82:18	2	bs_align_0
arg	82:16	82:18	3	s
water	82:16	0:0	4	s
water	82:19	0:0	2	;

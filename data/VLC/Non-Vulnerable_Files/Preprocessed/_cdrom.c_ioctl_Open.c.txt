func	2:0	67:0	0	vcddev_t *	ioctl_Open
params	2:20	0:0	1	
param	2:22	2:42	2	vlc_object_t *	p_this
param	2:44	2:64	2	const char *	psz_dev
stmnts	0:0	66:19	1	
decl	4:4	4:13	2	int	i_ret
decl	5:4	5:17	2	int	b_is_file
decl	6:4	6:22	2	vcddev_t	*p_vcddev
decl	8:4	8:24	2	struct stat	fileinfo
if	10:4	10:30	2	(! psz_dev)
cond	10:8	10:9	3	! psz_dev
op	10:8	0:0	4	!
water	10:9	0:0	4	psz_dev
stmts	10:19	10:30	3	
return	10:19	10:30	4	NULL
water	10:26	0:0	5	NULL
water	14:4	0:0	2	p_vcddev
op	14:13	0:0	2	=
call	14:15	14:41	2	malloc
arg	14:23	14:41	3	sizeof(*p_vcddev)
op	14:23	0:0	4	sizeof
water	14:29	0:0	4	(
op	14:30	0:0	4	*
water	14:31	0:0	4	p_vcddev
water	14:39	0:0	4	)
water	14:42	0:0	2	;
if	15:4	16:19	2	(p_vcddev == NULL)
cond	15:8	15:20	3	p_vcddev == NULL
water	15:8	0:0	4	p_vcddev
op	15:17	0:0	4	==
water	15:20	0:0	4	NULL
stmts	16:8	16:19	3	
return	16:8	16:19	4	NULL
water	16:15	0:0	5	NULL
water	17:4	0:0	2	p_vcddev
op	17:12	0:0	2	->
water	17:14	0:0	2	i_vcdimage_handle
op	17:32	0:0	2	=
op	17:34	0:0	2	-
water	17:35	0:0	2	1
water	17:36	0:0	2	;
water	18:4	0:0	2	p_vcddev
op	18:12	0:0	2	->
water	18:14	0:0	2	psz_dev
op	18:22	0:0	2	=
water	18:24	0:0	2	NULL
water	18:28	0:0	2	;
water	19:4	0:0	2	b_is_file
op	19:14	0:0	2	=
water	19:16	0:0	2	1
water	19:17	0:0	2	;
if	24:4	27:4	2	((strlen (psz_dev ) == 2 && psz_dev [ 1 ] == ':' ))
cond	24:8	24:52	3	(strlen (psz_dev ) == 2 && psz_dev [ 1 ] == ':' )
water	24:8	0:0	4	(
call	24:9	24:25	4	strlen
arg	24:17	24:25	5	psz_dev
water	24:17	0:0	6	psz_dev
op	24:27	0:0	4	==
water	24:30	0:0	4	2
op	24:32	0:0	4	&&
water	24:35	0:0	4	psz_dev
op	24:42	0:0	4	[
water	24:43	0:0	4	1
op	24:44	0:0	4	]
op	24:46	0:0	4	==
water	24:49	0:0	4	':'
water	24:52	0:0	4	)
stmts	25:4	27:4	3	
water	25:4	0:0	4	{
water	26:8	0:0	4	b_is_file
op	26:18	0:0	4	=
water	26:20	0:0	4	0
water	26:21	0:0	4	;
water	27:4	0:0	4	}
if	29:4	33:4	2	(vlc_stat (psz_dev ,& fileinfo ) < 0)
cond	29:8	29:41	3	vlc_stat (psz_dev ,& fileinfo ) < 0
call	29:8	29:37	4	vlc_stat
arg	29:18	29:25	5	psz_dev
water	29:18	0:0	6	psz_dev
arg	29:27	29:37	5	&fileinfo
op	29:27	0:0	6	&
water	29:28	0:0	6	fileinfo
op	29:39	0:0	4	<
water	29:41	0:0	4	0
stmts	30:4	33:4	3	
water	30:4	0:0	4	{
call	31:8	31:23	4	free
arg	31:14	31:23	5	p_vcddev
water	31:14	0:0	6	p_vcddev
water	31:24	0:0	4	;
return	32:8	32:19	4	NULL
water	32:15	0:0	5	NULL
water	33:4	0:0	4	}
if	35:4	36:21	2	(S_ISBLK (fileinfo . st_mode ) ||S_ISCHR (fileinfo . st_mode ))
cond	35:8	35:65	3	S_ISBLK (fileinfo . st_mode ) ||S_ISCHR (fileinfo . st_mode )
call	35:8	35:34	4	S_ISBLK
arg	35:17	35:34	5	fileinfo.st_mode
water	35:17	0:0	6	fileinfo
op	35:25	0:0	6	.
water	35:26	0:0	6	st_mode
op	35:36	0:0	4	||
call	35:39	35:65	4	S_ISCHR
arg	35:48	35:65	5	fileinfo.st_mode
water	35:48	0:0	6	fileinfo
op	35:56	0:0	6	.
water	35:57	0:0	6	st_mode
stmts	36:8	36:21	3	
water	36:8	0:0	4	b_is_file
op	36:18	0:0	4	=
water	36:20	0:0	4	0
water	36:21	0:0	4	;
if	38:4	41:4	2	(b_is_file)
cond	38:8	38:8	3	b_is_file
water	38:8	0:0	4	b_is_file
stmts	39:4	41:4	3	
water	39:4	0:0	4	{
water	40:8	0:0	4	i_ret
op	40:14	0:0	4	=
call	40:16	40:56	4	OpenVCDImage
arg	40:30	40:36	5	p_this
water	40:30	0:0	6	p_this
arg	40:38	40:45	5	psz_dev
water	40:38	0:0	6	psz_dev
arg	40:47	40:56	5	p_vcddev
water	40:47	0:0	6	p_vcddev
water	40:57	0:0	4	;
water	41:4	0:0	4	}
else	42:4	56:4	2
stmts	43:4	56:4	3	
water	43:4	0:0	4	{
water	48:8	0:0	4	i_ret
op	48:14	0:0	4	=
call	48:16	48:58	4	win32_vcd_open
arg	48:32	48:38	5	p_this
water	48:32	0:0	6	p_this
arg	48:40	48:47	5	psz_dev
water	48:40	0:0	6	psz_dev
arg	48:49	48:58	5	p_vcddev
water	48:49	0:0	6	p_vcddev
water	48:59	0:0	4	;
water	50:8	0:0	4	i_ret
op	50:14	0:0	4	=
call	50:16	50:56	4	os2_vcd_open
arg	50:30	50:36	5	p_this
water	50:30	0:0	6	p_this
arg	50:38	50:45	5	psz_dev
water	50:38	0:0	6	psz_dev
arg	50:47	50:56	5	p_vcddev
water	50:47	0:0	6	p_vcddev
water	50:57	0:0	4	;
water	52:8	0:0	4	p_vcddev
op	52:16	0:0	4	->
water	52:18	0:0	4	i_device_handle
op	52:34	0:0	4	=
op	52:36	0:0	4	-
water	52:37	0:0	4	1
water	52:38	0:0	4	;
water	53:8	0:0	4	p_vcddev
op	53:16	0:0	4	->
water	53:18	0:0	4	i_device_handle
op	53:34	0:0	4	=
call	53:36	53:77	4	vlc_open
arg	53:46	53:53	5	psz_dev
water	53:46	0:0	6	psz_dev
arg	53:55	53:77	5	O_RDONLY|O_NONBLOCK
water	53:55	0:0	6	O_RDONLY
op	53:64	0:0	6	|
water	53:66	0:0	6	O_NONBLOCK
water	53:78	0:0	4	;
water	54:8	0:0	4	i_ret
op	54:14	0:0	4	=
water	54:16	0:0	4	(
water	54:17	0:0	4	p_vcddev
op	54:25	0:0	4	->
water	54:27	0:0	4	i_device_handle
op	54:43	0:0	4	==
op	54:46	0:0	4	-
water	54:47	0:0	4	1
water	54:48	0:0	4	)
water	54:50	0:0	4	?
op	54:52	0:0	4	-
water	54:53	0:0	4	1
water	54:55	0:0	4	:
water	54:57	0:0	4	0
water	54:58	0:0	4	;
water	56:4	0:0	4	}
if	57:4	60:4	2	(i_ret == 0)
cond	57:8	57:17	3	i_ret == 0
water	57:8	0:0	4	i_ret
op	57:14	0:0	4	==
water	57:17	0:0	4	0
stmts	58:4	60:4	3	
water	58:4	0:0	4	{
water	59:8	0:0	4	p_vcddev
op	59:16	0:0	4	->
water	59:18	0:0	4	psz_dev
op	59:26	0:0	4	=
water	59:28	0:0	4	(
water	59:29	0:0	4	char
op	59:34	0:0	4	*
water	59:35	0:0	4	)
call	59:36	59:52	4	strdup
arg	59:44	59:52	5	psz_dev
water	59:44	0:0	6	psz_dev
water	59:53	0:0	4	;
water	60:4	0:0	4	}
else	61:4	65:4	2
stmts	62:4	65:4	3	
water	62:4	0:0	4	{
call	63:8	63:23	4	free
arg	63:14	63:23	5	p_vcddev
water	63:14	0:0	6	p_vcddev
water	63:24	0:0	4	;
water	64:8	0:0	4	p_vcddev
op	64:17	0:0	4	=
water	64:19	0:0	4	NULL
water	64:23	0:0	4	;
water	65:4	0:0	4	}
return	66:4	66:19	2	p_vcddev
water	66:11	0:0	3	p_vcddev

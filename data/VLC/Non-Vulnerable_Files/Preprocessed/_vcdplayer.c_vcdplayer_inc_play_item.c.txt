func	1:0	24:0	0	static bool	vcdplayer_inc_play_item
params	2:23	0:0	1	
param	2:24	2:42	2	access_t *	p_access
stmnts	0:0	23:59	1	
decl	4:2	4:59	2	vcdplayer_t	*p_vcdplayer
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	vcdplayer_t
op	4:42	0:0	2	*
water	4:43	0:0	2	)
water	4:44	0:0	2	p_access
op	4:52	0:0	2	->
water	4:54	0:0	2	p_sys
decl	5:2	5:9	2	int	noi
call	6:2	6:62	2	dbg_print
arg	6:12	6:26	3	INPUT_DBG_CALL
water	6:12	0:0	4	INPUT_DBG_CALL
arg	6:28	6:44	3	"called pli: %d"
water	6:28	0:0	4	"called pli: %d"
arg	6:46	6:62	3	p_vcdplayer->pdi
water	6:46	0:0	4	p_vcdplayer
op	6:57	0:0	4	->
water	6:59	0:0	4	pdi
water	6:63	0:0	2	;
if	7:2	8:16	2	(NULL == p_vcdplayer || NULL == p_vcdplayer -> pxd . pld)
cond	7:7	7:55	3	NULL == p_vcdplayer || NULL == p_vcdplayer -> pxd . pld
water	7:7	0:0	4	NULL
op	7:12	0:0	4	==
water	7:15	0:0	4	p_vcdplayer
op	7:27	0:0	4	||
water	7:30	0:0	4	NULL
op	7:35	0:0	4	==
water	7:38	0:0	4	p_vcdplayer
op	7:49	0:0	4	->
water	7:51	0:0	4	pxd
op	7:54	0:0	4	.
water	7:55	0:0	4	pld
stmts	8:4	8:16	3	
return	8:4	8:16	4	false
water	8:11	0:0	5	false
water	9:2	0:0	2	noi
op	9:6	0:0	2	=
call	9:8	9:47	2	vcdinf_pld_get_noi
arg	9:27	9:47	3	p_vcdplayer->pxd.pld
water	9:27	0:0	4	p_vcdplayer
op	9:38	0:0	4	->
water	9:40	0:0	4	pxd
op	9:43	0:0	4	.
water	9:44	0:0	4	pld
water	9:48	0:0	2	;
if	10:2	11:16	2	(noi <= 0)
cond	10:7	10:14	3	noi <= 0
water	10:7	0:0	4	noi
op	10:11	0:0	4	<=
water	10:14	0:0	4	0
stmts	11:4	11:16	3	
return	11:4	11:16	4	false
water	11:11	0:0	5	false
water	13:2	0:0	2	p_vcdplayer
op	13:13	0:0	2	->
water	13:15	0:0	2	pdi
op	13:18	0:0	2	++
water	13:20	0:0	2	;
if	14:2	15:16	2	(p_vcdplayer -> pdi < 0 || p_vcdplayer -> pdi >= noi)
cond	14:7	14:51	3	p_vcdplayer -> pdi < 0 || p_vcdplayer -> pdi >= noi
water	14:7	0:0	4	p_vcdplayer
op	14:18	0:0	4	->
water	14:20	0:0	4	pdi
op	14:24	0:0	4	<
water	14:26	0:0	4	0
op	14:28	0:0	4	||
water	14:31	0:0	4	p_vcdplayer
op	14:42	0:0	4	->
water	14:44	0:0	4	pdi
op	14:48	0:0	4	>=
water	14:51	0:0	4	noi
stmts	15:4	15:16	3	
return	15:4	15:16	4	false
water	15:11	0:0	5	false
decl	16:2	17:70	2	uint16_t	trans_itemid_num
op	16:27	0:0	2	=
call	16:28	17:69	3	vcdinf_pld_get_play_item
arg	16:53	16:73	4	p_vcdplayer->pxd.pld
water	16:53	0:0	5	p_vcdplayer
op	16:64	0:0	5	->
water	16:66	0:0	5	pxd
op	16:69	0:0	5	.
water	16:70	0:0	5	pld
arg	17:53	17:69	4	p_vcdplayer->pdi
water	17:53	0:0	5	p_vcdplayer
op	17:64	0:0	5	->
water	17:66	0:0	5	pdi
decl	18:2	18:31	2	vcdinfo_itemid_t	trans_itemid
if	19:2	19:62	2	(VCDINFO_INVALID_ITEMID == trans_itemid_num)
cond	19:6	19:32	3	VCDINFO_INVALID_ITEMID == trans_itemid_num
water	19:6	0:0	4	VCDINFO_INVALID_ITEMID
op	19:29	0:0	4	==
water	19:32	0:0	4	trans_itemid_num
stmts	19:50	19:62	3	
return	19:50	19:62	4	false
water	19:57	0:0	5	false
call	20:2	20:57	2	vcdinfo_classify_itemid
arg	20:26	20:42	3	trans_itemid_num
water	20:26	0:0	4	trans_itemid_num
arg	20:44	20:57	3	&trans_itemid
op	20:44	0:0	4	&
water	20:45	0:0	4	trans_itemid
water	20:58	0:0	2	;
call	21:2	22:64	2	dbg_print
arg	21:12	21:25	3	INPUT_DBG_PBC
water	21:12	0:0	4	INPUT_DBG_PBC
arg	21:27	21:48	3	"  play-item[%d]: %s"
water	21:27	0:0	4	"  play-item[%d]: %s"
arg	22:12	22:28	3	p_vcdplayer->pdi
water	22:12	0:0	4	p_vcdplayer
op	22:23	0:0	4	->
water	22:25	0:0	4	pdi
arg	22:30	22:64	3	vcdinfo_pin2str(trans_itemid_num)
call	22:30	22:63	4	vcdinfo_pin2str
arg	22:47	22:63	5	trans_itemid_num
water	22:47	0:0	6	trans_itemid_num
water	22:65	0:0	2	;
return	23:2	23:59	2	vcdplayer_play_single_item(p_access,trans_itemid)
call	23:9	23:58	3	vcdplayer_play_single_item
arg	23:36	23:44	4	p_access
water	23:36	0:0	5	p_access
arg	23:46	23:58	4	trans_itemid
water	23:46	0:0	5	trans_itemid

func	2:0	28:0	0	static int	BandwidthAdaptation
params	2:30	0:0	1	
param	2:31	2:42	2	stream_t *	s
param	2:44	2:54	2	int	progid
param	2:56	2:75	2	uint64_t *	bandwidth
stmnts	0:0	27:20	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	5:4	5:22	2	int	candidate
op	5:18	0:0	2	=
op	5:20	0:0	2	-
water	5:21	0:0	2	1
decl	6:4	6:28	2	uint64_t	bw
op	6:16	0:0	2	=
op	6:18	0:0	2	*
water	6:19	0:0	2	bandwidth
decl	7:4	7:29	2	uint64_t	bw_candidate
op	7:26	0:0	2	=
water	7:28	0:0	2	0
decl	8:4	8:50	2	int	count
op	8:14	0:0	2	=
call	8:16	8:49	3	vlc_array_count
arg	8:32	8:49	4	p_sys->hls_stream
water	8:32	0:0	5	p_sys
op	8:37	0:0	5	->
water	8:39	0:0	5	hls_stream
for	9:4	25:4	2	( int n = 0 ;n < count;n ++)
forinit	0:0	9:18	3	 int n = 0 ;
decl	9:9	9:18	4	int	n
op	9:15	0:0	4	=
water	9:17	0:0	4	0
cond	9:20	9:24	3	n < count
water	9:20	0:0	4	n
op	9:22	0:0	4	<
water	9:24	0:0	4	count
forexpr	9:31	9:32	3	n ++
water	9:31	0:0	4	n
op	9:32	0:0	4	++
stmts	10:4	25:4	3	
water	10:4	0:0	4	{
decl	12:8	12:57	4	hls_stream_t	*hls
op	12:26	0:0	4	=
call	12:28	12:56	5	hls_Get
arg	12:36	12:53	6	p_sys->hls_stream
water	12:36	0:0	7	p_sys
op	12:41	0:0	7	->
water	12:43	0:0	7	hls_stream
arg	12:55	12:56	6	n
water	12:55	0:0	7	n
if	13:8	13:30	4	(hls == NULL)
cond	13:12	13:19	5	hls == NULL
water	13:12	0:0	6	hls
op	13:16	0:0	6	==
water	13:19	0:0	6	NULL
stmts	13:25	13:30	5	
break	13:25	13:30	6	
if	15:8	24:8	4	(hls -> id == progid)
cond	15:12	15:23	5	hls -> id == progid
water	15:12	0:0	6	hls
op	15:15	0:0	6	->
water	15:17	0:0	6	id
op	15:20	0:0	6	==
water	15:23	0:0	6	progid
stmts	16:8	24:8	5	
water	16:8	0:0	6	{
if	17:12	23:12	6	(( bw >= hls -> bandwidth ) && ( bw_candidate < hls -> bandwidth ))
cond	17:16	17:72	7	( bw >= hls -> bandwidth ) && ( bw_candidate < hls -> bandwidth )
water	17:16	0:0	8	(
water	17:17	0:0	8	bw
op	17:20	0:0	8	>=
water	17:23	0:0	8	hls
op	17:26	0:0	8	->
water	17:28	0:0	8	bandwidth
water	17:37	0:0	8	)
op	17:39	0:0	8	&&
water	17:42	0:0	8	(
water	17:43	0:0	8	bw_candidate
op	17:56	0:0	8	<
water	17:58	0:0	8	hls
op	17:61	0:0	8	->
water	17:63	0:0	8	bandwidth
water	17:72	0:0	8	)
stmts	18:12	23:12	7	
water	18:12	0:0	8	{
call	19:16	20:46	8	msg_Dbg
arg	19:24	19:25	9	s
water	19:24	0:0	10	s
arg	19:27	19:81	9	"candidate %d bandwidth (bits/s) %"PRIu64" >= %"PRIu64
water	19:27	0:0	10	"candidate %d bandwidth (bits/s) %"
water	19:62	0:0	10	PRIu64
water	19:68	0:0	10	" >= %"
water	19:75	0:0	10	PRIu64
arg	20:25	20:26	9	n
water	20:25	0:0	10	n
arg	20:28	20:30	9	bw
water	20:28	0:0	10	bw
arg	20:32	20:46	9	hls->bandwidth
water	20:32	0:0	10	hls
op	20:35	0:0	10	->
water	20:37	0:0	10	bandwidth
water	20:47	0:0	8	;
water	21:16	0:0	8	bw_candidate
op	21:29	0:0	8	=
water	21:31	0:0	8	hls
op	21:34	0:0	8	->
water	21:36	0:0	8	bandwidth
water	21:45	0:0	8	;
water	22:16	0:0	8	candidate
op	22:26	0:0	8	=
water	22:28	0:0	8	n
water	22:29	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}
op	26:4	0:0	2	*
water	26:5	0:0	2	bandwidth
op	26:15	0:0	2	=
water	26:17	0:0	2	bw_candidate
water	26:29	0:0	2	;
return	27:4	27:20	2	candidate
water	27:11	0:0	3	candidate

func	2:0	49:0	0	int	aout_DecPlay
params	2:17	0:0	1	
param	2:18	2:38	2	audio_output_t *	aout
param	2:40	2:54	2	block_t *	block
param	2:56	2:70	2	int	input_rate
stmnts	0:0	48:12	1	
decl	4:4	4:43	2	aout_owner_t	*owner
op	4:24	0:0	2	=
call	4:26	4:42	3	aout_owner
arg	4:38	4:42	4	aout
water	4:38	0:0	5	aout
call	5:4	5:66	2	assert
arg	5:12	5:66	3	input_rate>=INPUT_RATE_DEFAULT/AOUT_MAX_INPUT_RATE
water	5:12	0:0	4	input_rate
op	5:23	0:0	4	>=
water	5:26	0:0	4	INPUT_RATE_DEFAULT
op	5:45	0:0	4	/
water	5:47	0:0	4	AOUT_MAX_INPUT_RATE
water	5:67	0:0	2	;
call	6:4	6:66	2	assert
arg	6:12	6:66	3	input_rate<=INPUT_RATE_DEFAULT*AOUT_MAX_INPUT_RATE
water	6:12	0:0	4	input_rate
op	6:23	0:0	4	<=
water	6:26	0:0	4	INPUT_RATE_DEFAULT
op	6:45	0:0	4	*
water	6:47	0:0	4	AOUT_MAX_INPUT_RATE
water	6:67	0:0	2	;
call	7:4	7:36	2	assert
arg	7:12	7:36	3	block->i_pts>=VLC_TS_0
water	7:12	0:0	4	block
op	7:17	0:0	4	->
water	7:19	0:0	4	i_pts
op	7:25	0:0	4	>=
water	7:28	0:0	4	VLC_TS_0
water	7:37	0:0	2	;
water	8:4	0:0	2	block
op	8:9	0:0	2	->
water	8:11	0:0	2	i_length
op	8:20	0:0	2	=
water	8:22	0:0	2	CLOCK_FREQ
op	8:33	0:0	2	*
water	8:35	0:0	2	block
op	8:40	0:0	2	->
water	8:42	0:0	2	i_nb_samples
op	9:33	0:0	2	/
water	9:35	0:0	2	owner
op	9:40	0:0	2	->
water	9:42	0:0	2	input_format
op	9:54	0:0	2	.
water	9:55	0:0	2	i_rate
water	9:61	0:0	2	;
call	10:4	10:25	2	aout_OutputLock
arg	10:21	10:25	3	aout
water	10:21	0:0	4	aout
water	10:26	0:0	2	;
if	11:4	12:17	2	(unlikely (aout_CheckReady (aout ) ))
cond	11:8	11:39	3	unlikely (aout_CheckReady (aout ) )
call	11:8	11:39	4	unlikely
arg	11:17	11:39	5	aout_CheckReady(aout)
call	11:17	11:38	6	aout_CheckReady
arg	11:34	11:38	7	aout
water	11:34	0:0	8	aout
stmts	12:8	12:17	3	
goto	12:8	12:17	4	drop
water	12:13	0:0	5	drop
decl	13:4	13:62	2	const mtime_t	now
op	13:22	0:0	2	=
call	13:24	13:31	3	mdate
water	13:32	0:0	2	,
decl	13:4	13:62	2	const mtime_t	advance
op	13:42	0:0	2	=
water	13:44	0:0	2	block
op	13:49	0:0	2	->
water	13:51	0:0	2	i_pts
op	13:57	0:0	2	-
water	13:59	0:0	2	now
if	14:4	21:4	2	(advance < - AOUT_MAX_PTS_DELAY)
cond	14:8	14:19	3	advance < - AOUT_MAX_PTS_DELAY
water	14:8	0:0	4	advance
op	14:16	0:0	4	<
op	14:18	0:0	4	-
water	14:19	0:0	4	AOUT_MAX_PTS_DELAY
stmts	15:4	21:4	3	
water	15:4	0:0	4	{
call	19:8	19:74	4	msg_Warn
arg	19:18	19:22	5	aout
water	19:18	0:0	6	aout
arg	19:24	19:65	5	"buffer too late (%"PRId64" us): dropped"
water	19:24	0:0	6	"buffer too late (%"
water	19:44	0:0	6	PRId64
water	19:50	0:0	6	" us): dropped"
arg	19:67	19:74	5	advance
water	19:67	0:0	6	advance
water	19:75	0:0	4	;
goto	20:8	20:17	4	drop
water	20:13	0:0	5	drop
water	21:4	0:0	4	}
if	22:4	26:4	2	(advance > AOUT_MAX_ADVANCE_TIME)
cond	22:8	22:18	3	advance > AOUT_MAX_ADVANCE_TIME
water	22:8	0:0	4	advance
op	22:16	0:0	4	>
water	22:18	0:0	4	AOUT_MAX_ADVANCE_TIME
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:74	4	msg_Err
arg	24:17	24:21	5	aout
water	24:17	0:0	6	aout
arg	24:23	24:65	5	"buffer too early (%"PRId64" us): dropped"
water	24:23	0:0	6	"buffer too early (%"
water	24:44	0:0	6	PRId64
water	24:50	0:0	6	" us): dropped"
arg	24:67	24:74	5	advance
water	24:67	0:0	6	advance
water	24:75	0:0	4	;
goto	25:8	25:17	4	drop
water	25:13	0:0	5	drop
water	26:4	0:0	4	}
if	27:4	28:40	2	(block -> i_flags & BLOCK_FLAG_DISCONTINUITY)
cond	27:8	27:25	3	block -> i_flags & BLOCK_FLAG_DISCONTINUITY
water	27:8	0:0	4	block
op	27:13	0:0	4	->
water	27:15	0:0	4	i_flags
op	27:23	0:0	4	&
water	27:25	0:0	4	BLOCK_FLAG_DISCONTINUITY
stmts	28:8	28:40	3	
water	28:8	0:0	4	owner
op	28:13	0:0	4	->
water	28:15	0:0	4	sync
op	28:19	0:0	4	.
water	28:20	0:0	4	discontinuity
op	28:34	0:0	4	=
water	28:36	0:0	4	true
water	28:40	0:0	4	;
water	29:4	0:0	2	block
op	29:10	0:0	2	=
call	29:12	29:63	2	aout_FiltersPlay
arg	29:30	29:44	3	owner->filters
water	29:30	0:0	4	owner
op	29:35	0:0	4	->
water	29:37	0:0	4	filters
arg	29:46	29:51	3	block
water	29:46	0:0	4	block
arg	29:53	29:63	3	input_rate
water	29:53	0:0	4	input_rate
water	29:64	0:0	2	;
if	30:4	31:17	2	(block == NULL)
cond	30:8	30:17	3	block == NULL
water	30:8	0:0	4	block
op	30:14	0:0	4	==
water	30:17	0:0	4	NULL
stmts	31:8	31:17	3	
goto	31:8	31:17	4	lost
water	31:13	0:0	5	lost
call	33:4	33:45	2	aout_volume_Amplify
arg	33:25	33:38	3	owner->volume
water	33:25	0:0	4	owner
op	33:30	0:0	4	->
water	33:32	0:0	4	volume
arg	33:40	33:45	3	block
water	33:40	0:0	4	block
water	33:46	0:0	2	;
call	35:4	35:55	2	aout_DecSynchronize
arg	35:25	35:29	3	aout
water	35:25	0:0	4	aout
arg	35:31	35:43	3	block->i_pts
water	35:31	0:0	4	block
op	35:36	0:0	4	->
water	35:38	0:0	4	i_pts
arg	35:45	35:55	3	input_rate
water	35:45	0:0	4	input_rate
water	35:56	0:0	2	;
water	37:4	0:0	2	owner
op	37:9	0:0	2	->
water	37:11	0:0	2	sync
op	37:15	0:0	2	.
water	37:16	0:0	2	end
op	37:20	0:0	2	=
water	37:22	0:0	2	block
op	37:27	0:0	2	->
water	37:29	0:0	2	i_pts
op	37:35	0:0	2	+
water	37:37	0:0	2	block
op	37:42	0:0	2	->
water	37:44	0:0	2	i_length
op	37:53	0:0	2	+
water	37:55	0:0	2	1
water	37:56	0:0	2	;
water	38:4	0:0	2	owner
op	38:9	0:0	2	->
water	38:11	0:0	2	sync
op	38:15	0:0	2	.
water	38:16	0:0	2	discontinuity
op	38:30	0:0	2	=
water	38:32	0:0	2	false
water	38:37	0:0	2	;
call	39:4	39:32	2	aout_OutputPlay
arg	39:21	39:25	3	aout
water	39:21	0:0	4	aout
arg	39:27	39:32	3	block
water	39:27	0:0	4	block
water	39:33	0:0	2	;
label	40:0	40:3	2	out :
call	41:4	41:27	2	aout_OutputUnlock
arg	41:23	41:27	3	aout
water	41:23	0:0	4	aout
water	41:28	0:0	2	;
return	42:4	42:12	2	0
water	42:11	0:0	3	0
label	43:0	43:4	2	drop :
water	44:4	0:0	2	owner
op	44:9	0:0	2	->
water	44:11	0:0	2	sync
op	44:15	0:0	2	.
water	44:16	0:0	2	discontinuity
op	44:30	0:0	2	=
water	44:32	0:0	2	true
water	44:36	0:0	2	;
call	45:4	45:24	2	block_Release
arg	45:19	45:24	3	block
water	45:19	0:0	4	block
water	45:25	0:0	2	;
label	46:0	46:4	2	lost :
call	47:4	47:44	2	atomic_fetch_add
arg	47:21	47:41	3	&owner->buffers_lost
op	47:21	0:0	4	&
water	47:22	0:0	4	owner
op	47:27	0:0	4	->
water	47:29	0:0	4	buffers_lost
arg	47:43	47:44	3	1
water	47:43	0:0	4	1
water	47:45	0:0	2	;
goto	48:4	48:12	2	out
water	48:9	0:0	3	out

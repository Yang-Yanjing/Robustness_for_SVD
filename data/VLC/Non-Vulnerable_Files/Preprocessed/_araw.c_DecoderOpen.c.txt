func	2:0	180:0	0	static int	DecoderOpen
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	179:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:47	2	vlc_fourcc_t	format
op	5:24	0:0	2	=
water	5:26	0:0	2	p_dec
op	5:31	0:0	2	->
water	5:33	0:0	2	fmt_in
op	5:39	0:0	2	.
water	5:40	0:0	2	i_codec
switch	6:4	23:4	2	(p_dec -> fmt_in . i_codec)
cond	6:12	6:26	3	p_dec -> fmt_in . i_codec
water	6:12	0:0	4	p_dec
op	6:17	0:0	4	->
water	6:19	0:0	4	fmt_in
op	6:25	0:0	4	.
water	6:26	0:0	4	i_codec
stmts	7:4	23:4	3	
water	7:4	0:0	4	{
water	8:4	0:0	4	case
call	8:9	8:35	4	VLC_FOURCC
arg	8:20	8:23	5	'a'
water	8:20	0:0	6	'a'
arg	8:24	8:27	5	'r'
water	8:24	0:0	6	'r'
arg	8:28	8:31	5	'a'
water	8:28	0:0	6	'a'
arg	8:32	8:35	5	'w'
water	8:32	0:0	6	'w'
water	8:36	0:0	4	:
water	9:4	0:0	4	case
call	9:9	9:35	4	VLC_FOURCC
arg	9:20	9:23	5	'a'
water	9:20	0:0	6	'a'
arg	9:24	9:27	5	'f'
water	9:24	0:0	6	'f'
arg	9:28	9:31	5	'l'
water	9:28	0:0	6	'l'
arg	9:32	9:35	5	't'
water	9:32	0:0	6	't'
water	9:36	0:0	4	:
water	11:4	0:0	4	case
call	11:9	11:35	4	VLC_FOURCC
arg	11:20	11:23	5	't'
water	11:20	0:0	6	't'
arg	11:24	11:27	5	'w'
water	11:24	0:0	6	'w'
arg	11:28	11:31	5	'o'
water	11:28	0:0	6	'o'
arg	11:32	11:35	5	's'
water	11:32	0:0	6	's'
water	11:36	0:0	4	:
water	13:4	0:0	4	case
call	13:9	13:35	4	VLC_FOURCC
arg	13:20	13:23	5	's'
water	13:20	0:0	6	's'
arg	13:24	13:27	5	'o'
water	13:24	0:0	6	'o'
arg	13:28	13:31	5	'w'
water	13:28	0:0	6	'w'
arg	13:32	13:35	5	't'
water	13:32	0:0	6	't'
water	13:36	0:0	4	:
water	14:8	0:0	4	format
op	14:15	0:0	4	=
call	15:12	16:74	4	vlc_fourcc_GetCodecAudio
arg	15:38	15:59	5	p_dec->fmt_in.i_codec
water	15:38	0:0	6	p_dec
op	15:43	0:0	6	->
water	15:45	0:0	6	fmt_in
op	15:51	0:0	6	.
water	15:52	0:0	6	i_codec
arg	16:38	16:74	5	p_dec->fmt_in.audio.i_bitspersample
water	16:38	0:0	6	p_dec
op	16:43	0:0	6	->
water	16:45	0:0	6	fmt_in
op	16:51	0:0	6	.
water	16:52	0:0	6	audio
op	16:57	0:0	6	.
water	16:58	0:0	6	i_bitspersample
water	16:75	0:0	4	;
if	17:8	21:8	4	(! format)
cond	17:12	17:13	5	! format
op	17:12	0:0	6	!
water	17:13	0:0	6	format
stmts	18:8	21:8	5	
water	18:8	0:0	6	{
call	19:12	19:58	6	msg_Err
arg	19:21	19:26	7	p_dec
water	19:21	0:0	8	p_dec
arg	19:28	19:58	7	"bad parameters(bits/sample)"
water	19:28	0:0	8	"bad parameters(bits/sample)"
water	19:59	0:0	6	;
return	20:12	20:31	6	VLC_EGENERIC
water	20:19	0:0	7	VLC_EGENERIC
water	21:8	0:0	6	}
break	22:8	22:13	4	
water	23:4	0:0	4	}
call	24:4	24:17	2	void
arg	24:10	24:17	3	*decode
op	24:10	0:0	4	*
water	24:11	0:0	4	decode
water	24:19	0:0	2	(
water	24:20	0:0	2	void
op	24:25	0:0	2	*
water	24:26	0:0	2	,
water	24:28	0:0	2	const
water	24:34	0:0	2	uint8_t
op	24:42	0:0	2	*
water	24:43	0:0	2	,
water	24:45	0:0	2	unsigned
water	24:53	0:0	2	)
op	24:55	0:0	2	=
water	24:57	0:0	2	NULL
water	24:61	0:0	2	;
decl	25:4	25:21	2	uint_fast8_t	bits
switch	26:4	134:4	2	(format)
cond	26:12	26:12	3	format
water	26:12	0:0	4	format
stmts	27:4	134:4	3	
water	27:4	0:0	4	{
label	29:4	29:23	4	case VLC_CODEC_F64L :
label	31:4	31:23	4	case VLC_CODEC_F64B :
water	33:8	0:0	4	format
op	33:15	0:0	4	=
water	33:17	0:0	4	VLC_CODEC_FL64
water	33:31	0:0	4	;
water	34:8	0:0	4	decode
op	34:15	0:0	4	=
water	34:17	0:0	4	F64IDecode
water	34:27	0:0	4	;
water	35:8	0:0	4	bits
op	35:13	0:0	4	=
water	35:15	0:0	4	64
water	35:17	0:0	4	;
break	36:8	36:13	4	
label	37:4	37:23	4	case VLC_CODEC_FL64 :
water	38:8	0:0	4	decode
op	38:15	0:0	4	=
water	38:17	0:0	4	F64NDecode
water	38:27	0:0	4	;
water	39:8	0:0	4	bits
op	39:13	0:0	4	=
water	39:15	0:0	4	64
water	39:17	0:0	4	;
break	40:8	40:13	4	
label	42:4	42:23	4	case VLC_CODEC_F32L :
label	44:4	44:23	4	case VLC_CODEC_F32B :
water	46:8	0:0	4	format
op	46:15	0:0	4	=
water	46:17	0:0	4	VLC_CODEC_FL32
water	46:31	0:0	4	;
water	47:8	0:0	4	decode
op	47:15	0:0	4	=
water	47:17	0:0	4	F32IDecode
water	47:27	0:0	4	;
water	48:8	0:0	4	bits
op	48:13	0:0	4	=
water	48:15	0:0	4	32
water	48:17	0:0	4	;
break	49:8	49:13	4	
label	50:4	50:23	4	case VLC_CODEC_FL32 :
water	51:8	0:0	4	decode
op	51:15	0:0	4	=
water	51:17	0:0	4	F32NDecode
water	51:27	0:0	4	;
water	52:8	0:0	4	bits
op	52:13	0:0	4	=
water	52:15	0:0	4	32
water	52:17	0:0	4	;
break	53:8	53:13	4	
label	54:4	54:23	4	case VLC_CODEC_U32B :
water	55:8	0:0	4	format
op	55:15	0:0	4	=
water	55:17	0:0	4	VLC_CODEC_S32N
water	55:31	0:0	4	;
water	56:8	0:0	4	decode
op	56:15	0:0	4	=
water	56:17	0:0	4	U32BDecode
water	56:27	0:0	4	;
water	57:8	0:0	4	bits
op	57:13	0:0	4	=
water	57:15	0:0	4	32
water	57:17	0:0	4	;
break	58:8	58:13	4	
label	59:4	59:23	4	case VLC_CODEC_U32L :
water	60:8	0:0	4	format
op	60:15	0:0	4	=
water	60:17	0:0	4	VLC_CODEC_S32N
water	60:31	0:0	4	;
water	61:8	0:0	4	decode
op	61:15	0:0	4	=
water	61:17	0:0	4	U32LDecode
water	61:27	0:0	4	;
water	62:8	0:0	4	bits
op	62:13	0:0	4	=
water	62:15	0:0	4	32
water	62:17	0:0	4	;
break	63:8	63:13	4	
label	64:4	64:23	4	case VLC_CODEC_S32I :
water	65:8	0:0	4	format
op	65:15	0:0	4	=
water	65:17	0:0	4	VLC_CODEC_S32N
water	65:31	0:0	4	;
water	66:8	0:0	4	decode
op	66:15	0:0	4	=
water	66:17	0:0	4	S32IDecode
water	66:27	0:0	4	;
label	67:4	67:23	4	case VLC_CODEC_S32N :
water	68:8	0:0	4	bits
op	68:13	0:0	4	=
water	68:15	0:0	4	32
water	68:17	0:0	4	;
break	69:8	69:13	4	
label	70:4	70:25	4	case VLC_CODEC_S24B32 :
water	71:8	0:0	4	format
op	71:15	0:0	4	=
water	71:17	0:0	4	VLC_CODEC_S32N
water	71:31	0:0	4	;
water	72:8	0:0	4	decode
op	72:15	0:0	4	=
water	72:17	0:0	4	S24B32Decode
water	72:29	0:0	4	;
water	73:8	0:0	4	bits
op	73:13	0:0	4	=
water	73:15	0:0	4	32
water	73:17	0:0	4	;
break	74:8	74:13	4	
label	75:4	75:25	4	case VLC_CODEC_S24L32 :
water	76:8	0:0	4	format
op	76:15	0:0	4	=
water	76:17	0:0	4	VLC_CODEC_S32N
water	76:31	0:0	4	;
water	77:8	0:0	4	decode
op	77:15	0:0	4	=
water	77:17	0:0	4	S24L32Decode
water	77:29	0:0	4	;
water	78:8	0:0	4	bits
op	78:13	0:0	4	=
water	78:15	0:0	4	32
water	78:17	0:0	4	;
break	79:8	79:13	4	
label	80:4	80:23	4	case VLC_CODEC_U24B :
water	81:8	0:0	4	format
op	81:15	0:0	4	=
water	81:17	0:0	4	VLC_CODEC_S32N
water	81:31	0:0	4	;
water	82:8	0:0	4	decode
op	82:15	0:0	4	=
water	82:17	0:0	4	U24BDecode
water	82:27	0:0	4	;
water	83:8	0:0	4	bits
op	83:13	0:0	4	=
water	83:15	0:0	4	24
water	83:17	0:0	4	;
break	84:8	84:13	4	
label	85:4	85:23	4	case VLC_CODEC_U24L :
water	86:8	0:0	4	format
op	86:15	0:0	4	=
water	86:17	0:0	4	VLC_CODEC_S32N
water	86:31	0:0	4	;
water	87:8	0:0	4	decode
op	87:15	0:0	4	=
water	87:17	0:0	4	U24LDecode
water	87:27	0:0	4	;
water	88:8	0:0	4	bits
op	88:13	0:0	4	=
water	88:15	0:0	4	24
water	88:17	0:0	4	;
break	89:8	89:13	4	
label	90:4	90:23	4	case VLC_CODEC_S24B :
water	91:8	0:0	4	format
op	91:15	0:0	4	=
water	91:17	0:0	4	VLC_CODEC_S32N
water	91:31	0:0	4	;
water	92:8	0:0	4	decode
op	92:15	0:0	4	=
water	92:17	0:0	4	S24BDecode
water	92:27	0:0	4	;
water	93:8	0:0	4	bits
op	93:13	0:0	4	=
water	93:15	0:0	4	24
water	93:17	0:0	4	;
break	94:8	94:13	4	
label	95:4	95:23	4	case VLC_CODEC_S24L :
water	96:8	0:0	4	format
op	96:15	0:0	4	=
water	96:17	0:0	4	VLC_CODEC_S32N
water	96:31	0:0	4	;
water	97:8	0:0	4	decode
op	97:15	0:0	4	=
water	97:17	0:0	4	S24LDecode
water	97:27	0:0	4	;
water	98:8	0:0	4	bits
op	98:13	0:0	4	=
water	98:15	0:0	4	24
water	98:17	0:0	4	;
break	99:8	99:13	4	
label	100:4	100:23	4	case VLC_CODEC_S20B :
water	101:8	0:0	4	format
op	101:15	0:0	4	=
water	101:17	0:0	4	VLC_CODEC_S32N
water	101:31	0:0	4	;
water	102:8	0:0	4	decode
op	102:15	0:0	4	=
water	102:17	0:0	4	S20BDecode
water	102:27	0:0	4	;
water	103:8	0:0	4	bits
op	103:13	0:0	4	=
water	103:15	0:0	4	20
water	103:17	0:0	4	;
break	104:8	104:13	4	
label	105:4	105:23	4	case VLC_CODEC_U16B :
water	106:8	0:0	4	format
op	106:15	0:0	4	=
water	106:17	0:0	4	VLC_CODEC_S16N
water	106:31	0:0	4	;
water	107:8	0:0	4	decode
op	107:15	0:0	4	=
water	107:17	0:0	4	U16BDecode
water	107:27	0:0	4	;
water	108:8	0:0	4	bits
op	108:13	0:0	4	=
water	108:15	0:0	4	16
water	108:17	0:0	4	;
break	109:8	109:13	4	
label	110:4	110:23	4	case VLC_CODEC_U16L :
water	111:8	0:0	4	format
op	111:15	0:0	4	=
water	111:17	0:0	4	VLC_CODEC_S16N
water	111:31	0:0	4	;
water	112:8	0:0	4	decode
op	112:15	0:0	4	=
water	112:17	0:0	4	U16LDecode
water	112:27	0:0	4	;
water	113:8	0:0	4	bits
op	113:13	0:0	4	=
water	113:15	0:0	4	16
water	113:17	0:0	4	;
break	114:8	114:13	4	
label	115:4	115:23	4	case VLC_CODEC_S16I :
water	116:8	0:0	4	format
op	116:15	0:0	4	=
water	116:17	0:0	4	VLC_CODEC_S16N
water	116:31	0:0	4	;
water	117:8	0:0	4	decode
op	117:15	0:0	4	=
water	117:17	0:0	4	S16IDecode
water	117:27	0:0	4	;
label	118:4	118:23	4	case VLC_CODEC_S16N :
water	119:8	0:0	4	bits
op	119:13	0:0	4	=
water	119:15	0:0	4	16
water	119:17	0:0	4	;
break	120:8	120:13	4	
label	121:4	121:24	4	case VLC_CODEC_DAT12 :
water	122:8	0:0	4	format
op	122:15	0:0	4	=
water	122:17	0:0	4	VLC_CODEC_S16N
water	122:31	0:0	4	;
water	123:8	0:0	4	decode
op	123:15	0:0	4	=
water	123:17	0:0	4	DAT12Decode
water	123:28	0:0	4	;
water	124:8	0:0	4	bits
op	124:13	0:0	4	=
water	124:15	0:0	4	12
water	124:17	0:0	4	;
break	125:8	125:13	4	
label	126:4	126:21	4	case VLC_CODEC_S8 :
water	127:8	0:0	4	decode
op	127:15	0:0	4	=
water	127:17	0:0	4	S8Decode
water	127:25	0:0	4	;
water	128:8	0:0	4	format
op	128:15	0:0	4	=
water	128:17	0:0	4	VLC_CODEC_U8
water	128:29	0:0	4	;
label	129:4	129:21	4	case VLC_CODEC_U8 :
water	130:8	0:0	4	bits
op	130:13	0:0	4	=
water	130:15	0:0	4	8
water	130:16	0:0	4	;
break	131:8	131:13	4	
label	132:4	132:11	4	default :
return	133:8	133:27	4	VLC_EGENERIC
water	133:15	0:0	5	VLC_EGENERIC
water	134:4	0:0	4	}
if	135:4	141:4	2	(p_dec -> fmt_in . audio . i_channels <= 0 || p_dec -> fmt_in . audio . i_channels > AOUT_CHAN_MAX)
cond	135:8	136:41	3	p_dec -> fmt_in . audio . i_channels <= 0 || p_dec -> fmt_in . audio . i_channels > AOUT_CHAN_MAX
water	135:8	0:0	4	p_dec
op	135:13	0:0	4	->
water	135:15	0:0	4	fmt_in
op	135:21	0:0	4	.
water	135:22	0:0	4	audio
op	135:27	0:0	4	.
water	135:28	0:0	4	i_channels
op	135:39	0:0	4	<=
water	135:42	0:0	4	0
op	135:44	0:0	4	||
water	136:8	0:0	4	p_dec
op	136:13	0:0	4	->
water	136:15	0:0	4	fmt_in
op	136:21	0:0	4	.
water	136:22	0:0	4	audio
op	136:27	0:0	4	.
water	136:28	0:0	4	i_channels
op	136:39	0:0	4	>
water	136:41	0:0	4	AOUT_CHAN_MAX
stmts	137:4	141:4	3	
water	137:4	0:0	4	{
call	138:8	139:48	4	msg_Err
arg	138:17	138:22	5	p_dec
water	138:17	0:0	6	p_dec
arg	138:24	138:54	5	"bad channels count (1-9): %i"
water	138:24	0:0	6	"bad channels count (1-9): %i"
arg	139:17	139:48	5	p_dec->fmt_in.audio.i_channels
water	139:17	0:0	6	p_dec
op	139:22	0:0	6	->
water	139:24	0:0	6	fmt_in
op	139:30	0:0	6	.
water	139:31	0:0	6	audio
op	139:36	0:0	6	.
water	139:37	0:0	6	i_channels
water	139:49	0:0	4	;
return	140:8	140:27	4	VLC_EGENERIC
water	140:15	0:0	5	VLC_EGENERIC
water	141:4	0:0	4	}
if	142:4	146:4	2	(p_dec -> fmt_in . audio . i_rate <= 0)
cond	142:8	142:38	3	p_dec -> fmt_in . audio . i_rate <= 0
water	142:8	0:0	4	p_dec
op	142:13	0:0	4	->
water	142:15	0:0	4	fmt_in
op	142:21	0:0	4	.
water	142:22	0:0	4	audio
op	142:27	0:0	4	.
water	142:28	0:0	4	i_rate
op	142:35	0:0	4	<=
water	142:38	0:0	4	0
stmts	143:4	146:4	3	
water	143:4	0:0	4	{
call	144:8	144:76	4	msg_Err
arg	144:17	144:22	5	p_dec
water	144:17	0:0	6	p_dec
arg	144:24	144:47	5	"bad samplerate: %d Hz"
water	144:24	0:0	6	"bad samplerate: %d Hz"
arg	144:49	144:76	5	p_dec->fmt_in.audio.i_rate
water	144:49	0:0	6	p_dec
op	144:54	0:0	6	->
water	144:56	0:0	6	fmt_in
op	144:62	0:0	6	.
water	144:63	0:0	6	audio
op	144:68	0:0	6	.
water	144:69	0:0	6	i_rate
water	144:77	0:0	4	;
return	145:8	145:27	4	VLC_EGENERIC
water	145:15	0:0	5	VLC_EGENERIC
water	146:4	0:0	4	}
call	147:4	149:49	2	msg_Dbg
arg	147:13	147:18	3	p_dec
water	147:13	0:0	4	p_dec
arg	147:20	147:64	3	"samplerate:%dHz channels:%d bits/sample:%d"
water	147:20	0:0	4	"samplerate:%dHz channels:%d bits/sample:%d"
arg	148:13	148:39	3	p_dec->fmt_in.audio.i_rate
water	148:13	0:0	4	p_dec
op	148:18	0:0	4	->
water	148:20	0:0	4	fmt_in
op	148:26	0:0	4	.
water	148:27	0:0	4	audio
op	148:32	0:0	4	.
water	148:33	0:0	4	i_rate
arg	148:41	148:71	3	p_dec->fmt_in.audio.i_channels
water	148:41	0:0	4	p_dec
op	148:46	0:0	4	->
water	148:48	0:0	4	fmt_in
op	148:54	0:0	4	.
water	148:55	0:0	4	audio
op	148:60	0:0	4	.
water	148:61	0:0	4	i_channels
arg	149:13	149:49	3	p_dec->fmt_in.audio.i_bitspersample
water	149:13	0:0	4	p_dec
op	149:18	0:0	4	->
water	149:20	0:0	4	fmt_in
op	149:26	0:0	4	.
water	149:27	0:0	4	audio
op	149:32	0:0	4	.
water	149:33	0:0	4	i_bitspersample
water	149:50	0:0	2	;
decl	151:4	151:49	2	decoder_sys_t	*p_sys
op	151:25	0:0	2	=
call	151:27	151:48	3	malloc
arg	151:34	151:48	4	sizeof(*p_sys)
op	151:34	0:0	5	sizeof
water	151:40	0:0	5	(
op	151:41	0:0	5	*
water	151:42	0:0	5	p_sys
water	151:47	0:0	5	)
if	152:4	153:25	2	(unlikely (p_sys == NULL ))
cond	152:8	152:30	3	unlikely (p_sys == NULL )
call	152:8	152:30	4	unlikely
arg	152:17	152:30	5	p_sys==NULL
water	152:17	0:0	6	p_sys
op	152:23	0:0	6	==
water	152:26	0:0	6	NULL
stmts	153:8	153:25	3	
return	153:8	153:25	4	VLC_ENOMEM
water	153:15	0:0	5	VLC_ENOMEM
water	155:4	0:0	2	p_dec
op	155:9	0:0	2	->
water	155:11	0:0	2	fmt_out
op	155:18	0:0	2	.
water	155:19	0:0	2	i_cat
op	155:25	0:0	2	=
water	155:27	0:0	2	AUDIO_ES
water	155:35	0:0	2	;
water	156:4	0:0	2	p_dec
op	156:9	0:0	2	->
water	156:11	0:0	2	fmt_out
op	156:18	0:0	2	.
water	156:19	0:0	2	i_codec
op	156:27	0:0	2	=
water	156:29	0:0	2	format
water	156:35	0:0	2	;
water	157:4	0:0	2	p_dec
op	157:9	0:0	2	->
water	157:11	0:0	2	fmt_out
op	157:18	0:0	2	.
water	157:19	0:0	2	audio
op	157:24	0:0	2	.
water	157:25	0:0	2	i_format
op	157:34	0:0	2	=
water	157:36	0:0	2	format
water	157:42	0:0	2	;
water	158:4	0:0	2	p_dec
op	158:9	0:0	2	->
water	158:11	0:0	2	fmt_out
op	158:18	0:0	2	.
water	158:19	0:0	2	audio
op	158:24	0:0	2	.
water	158:25	0:0	2	i_rate
op	158:32	0:0	2	=
water	158:34	0:0	2	p_dec
op	158:39	0:0	2	->
water	158:41	0:0	2	fmt_in
op	158:47	0:0	2	.
water	158:48	0:0	2	audio
op	158:53	0:0	2	.
water	158:54	0:0	2	i_rate
water	158:60	0:0	2	;
if	159:4	161:78	2	(p_dec -> fmt_in . audio . i_physical_channels)
cond	159:8	159:28	3	p_dec -> fmt_in . audio . i_physical_channels
water	159:8	0:0	4	p_dec
op	159:13	0:0	4	->
water	159:15	0:0	4	fmt_in
op	159:21	0:0	4	.
water	159:22	0:0	4	audio
op	159:27	0:0	4	.
water	159:28	0:0	4	i_physical_channels
stmts	160:8	161:78	3	
water	160:8	0:0	4	p_dec
op	160:13	0:0	4	->
water	160:15	0:0	4	fmt_out
op	160:22	0:0	4	.
water	160:23	0:0	4	audio
op	160:28	0:0	4	.
water	160:29	0:0	4	i_physical_channels
op	160:49	0:0	4	=
water	161:39	0:0	4	p_dec
op	161:44	0:0	4	->
water	161:46	0:0	4	fmt_in
op	161:52	0:0	4	.
water	161:53	0:0	4	audio
op	161:58	0:0	4	.
water	161:59	0:0	4	i_physical_channels
water	161:78	0:0	4	;
else	162:4	164:78	2
stmts	163:8	164:78	3	
water	163:8	0:0	4	p_dec
op	163:13	0:0	4	->
water	163:15	0:0	4	fmt_out
op	163:22	0:0	4	.
water	163:23	0:0	4	audio
op	163:28	0:0	4	.
water	163:29	0:0	4	i_physical_channels
op	163:49	0:0	4	=
water	164:30	0:0	4	pi_channels_maps
op	164:46	0:0	4	[
water	164:47	0:0	4	p_dec
op	164:52	0:0	4	->
water	164:54	0:0	4	fmt_in
op	164:60	0:0	4	.
water	164:61	0:0	4	audio
op	164:66	0:0	4	.
water	164:67	0:0	4	i_channels
op	164:77	0:0	4	]
water	164:78	0:0	4	;
if	165:4	167:78	2	(p_dec -> fmt_in . audio . i_original_channels)
cond	165:8	165:28	3	p_dec -> fmt_in . audio . i_original_channels
water	165:8	0:0	4	p_dec
op	165:13	0:0	4	->
water	165:15	0:0	4	fmt_in
op	165:21	0:0	4	.
water	165:22	0:0	4	audio
op	165:27	0:0	4	.
water	165:28	0:0	4	i_original_channels
stmts	166:8	167:78	3	
water	166:8	0:0	4	p_dec
op	166:13	0:0	4	->
water	166:15	0:0	4	fmt_out
op	166:22	0:0	4	.
water	166:23	0:0	4	audio
op	166:28	0:0	4	.
water	166:29	0:0	4	i_original_channels
op	166:49	0:0	4	=
water	167:39	0:0	4	p_dec
op	167:44	0:0	4	->
water	167:46	0:0	4	fmt_in
op	167:52	0:0	4	.
water	167:53	0:0	4	audio
op	167:58	0:0	4	.
water	167:59	0:0	4	i_original_channels
water	167:78	0:0	4	;
else	168:4	170:78	2
stmts	169:8	170:78	3	
water	169:8	0:0	4	p_dec
op	169:13	0:0	4	->
water	169:15	0:0	4	fmt_out
op	169:22	0:0	4	.
water	169:23	0:0	4	audio
op	169:28	0:0	4	.
water	169:29	0:0	4	i_original_channels
op	169:49	0:0	4	=
water	170:38	0:0	4	p_dec
op	170:43	0:0	4	->
water	170:45	0:0	4	fmt_out
op	170:52	0:0	4	.
water	170:53	0:0	4	audio
op	170:58	0:0	4	.
water	170:59	0:0	4	i_physical_channels
water	170:78	0:0	4	;
call	171:4	171:46	2	aout_FormatPrepare
arg	171:24	171:46	3	&p_dec->fmt_out.audio
op	171:24	0:0	4	&
water	171:25	0:0	4	p_dec
op	171:30	0:0	4	->
water	171:32	0:0	4	fmt_out
op	171:39	0:0	4	.
water	171:40	0:0	4	audio
water	171:47	0:0	2	;
water	172:4	0:0	2	p_sys
op	172:9	0:0	2	->
water	172:11	0:0	2	decode
op	172:18	0:0	2	=
water	172:20	0:0	2	decode
water	172:26	0:0	2	;
water	173:4	0:0	2	p_sys
op	173:9	0:0	2	->
water	173:11	0:0	2	framebits
op	173:21	0:0	2	=
water	173:23	0:0	2	bits
op	173:28	0:0	2	*
water	173:30	0:0	2	p_dec
op	173:35	0:0	2	->
water	173:37	0:0	2	fmt_out
op	173:44	0:0	2	.
water	173:45	0:0	2	audio
op	173:50	0:0	2	.
water	173:51	0:0	2	i_channels
water	173:61	0:0	2	;
call	174:4	174:29	2	assert
arg	174:12	174:29	3	p_sys->framebits
water	174:12	0:0	4	p_sys
op	174:17	0:0	4	->
water	174:19	0:0	4	framebits
water	174:30	0:0	2	;
call	175:4	175:64	2	date_Init
arg	175:15	175:31	3	&p_sys->end_date
op	175:15	0:0	4	&
water	175:16	0:0	4	p_sys
op	175:21	0:0	4	->
water	175:23	0:0	4	end_date
arg	175:33	175:60	3	p_dec->fmt_out.audio.i_rate
water	175:33	0:0	4	p_dec
op	175:38	0:0	4	->
water	175:40	0:0	4	fmt_out
op	175:47	0:0	4	.
water	175:48	0:0	4	audio
op	175:53	0:0	4	.
water	175:54	0:0	4	i_rate
arg	175:62	175:64	3	1
water	175:62	0:0	4	1
water	175:65	0:0	2	;
call	176:4	176:34	2	date_Set
arg	176:14	176:30	3	&p_sys->end_date
op	176:14	0:0	4	&
water	176:15	0:0	4	p_sys
op	176:20	0:0	4	->
water	176:22	0:0	4	end_date
arg	176:32	176:34	3	0
water	176:32	0:0	4	0
water	176:35	0:0	2	;
water	177:4	0:0	2	p_dec
op	177:9	0:0	2	->
water	177:11	0:0	2	pf_decode_audio
op	177:27	0:0	2	=
water	177:29	0:0	2	DecodeBlock
water	177:40	0:0	2	;
water	178:4	0:0	2	p_dec
op	178:9	0:0	2	->
water	178:11	0:0	2	p_sys
op	178:17	0:0	2	=
water	178:19	0:0	2	p_sys
water	178:24	0:0	2	;
return	179:4	179:22	2	VLC_SUCCESS
water	179:11	0:0	3	VLC_SUCCESS

func	2:0	118:0	0	static void	Eia608TextLine
params	2:26	0:0	1	
param	2:28	2:56	2	struct eia608_screen *	screen
param	2:58	2:72	2	char *	psz_text
param	2:74	2:88	2	int	i_text_max
param	2:90	2:99	2	int	i_row
param	2:101	2:113	2	bool	b_html
stmnts	0:0	116:4	1	
decl	4:4	4:53	2	const uint8_t	*p_char
op	4:26	0:0	2	=
water	4:28	0:0	2	screen
op	4:34	0:0	2	->
water	4:36	0:0	2	characters
op	4:46	0:0	2	[
water	4:47	0:0	2	i_row
op	4:52	0:0	2	]
decl	5:4	5:57	2	const eia608_color_t	*p_color
op	5:34	0:0	2	=
water	5:36	0:0	2	screen
op	5:42	0:0	2	->
water	5:44	0:0	2	colors
op	5:50	0:0	2	[
water	5:51	0:0	2	i_row
op	5:56	0:0	2	]
decl	6:4	6:54	2	const eia608_font_t	*p_font
op	6:32	0:0	2	=
water	6:34	0:0	2	screen
op	6:40	0:0	2	->
water	6:42	0:0	2	fonts
op	6:47	0:0	2	[
water	6:48	0:0	2	i_row
op	6:53	0:0	2	]
decl	7:4	7:15	2	int	i_start
decl	8:4	8:13	2	int	i_end
decl	9:4	9:9	2	int	x
decl	10:4	10:52	2	eia608_color_t	last_color
op	10:30	0:0	2	=
water	10:32	0:0	2	EIA608_COLOR_DEFAULT
decl	11:4	11:35	2	bool	b_last_italics
op	11:28	0:0	2	=
water	11:30	0:0	2	false
decl	12:4	12:37	2	bool	b_last_underline
op	12:30	0:0	2	=
water	12:32	0:0	2	false
decl	13:4	13:16	2	char	utf8[4]
water	15:4	0:0	2	i_start
op	15:12	0:0	2	=
water	15:14	0:0	2	0
water	15:15	0:0	2	;
if	17:4	18:21	2	(b_html)
cond	17:8	17:8	3	b_html
water	17:8	0:0	4	b_html
stmts	18:8	18:21	3	
call	18:8	18:20	4	CAT
arg	18:13	18:20	5	"<tt>"
water	18:13	0:0	6	"<tt>"
water	18:21	0:0	4	;
while	21:4	25:4	2	(i_start < EIA608_SCREEN_COLUMNS && p_char [ i_start ] == ' ')
cond	21:11	21:65	3	i_start < EIA608_SCREEN_COLUMNS && p_char [ i_start ] == ' '
water	21:11	0:0	4	i_start
op	21:19	0:0	4	<
water	21:21	0:0	4	EIA608_SCREEN_COLUMNS
op	21:43	0:0	4	&&
water	21:46	0:0	4	p_char
op	21:52	0:0	4	[
water	21:53	0:0	4	i_start
op	21:60	0:0	4	]
op	21:62	0:0	4	==
water	21:65	0:0	4	' '
stmts	21:71	25:4	3	
water	21:71	0:0	4	{
call	22:8	22:35	4	Eia608TextUtf8
arg	22:24	22:28	5	utf8
water	22:24	0:0	6	utf8
arg	22:30	22:35	5	0x89
water	22:30	0:0	6	0
water	22:31	0:0	6	x89
water	22:36	0:0	4	;
call	23:8	23:18	4	CAT
arg	23:13	23:18	5	utf8
water	23:13	0:0	6	utf8
water	23:19	0:0	4	;
water	24:8	0:0	4	i_start
op	24:15	0:0	4	++
water	24:17	0:0	4	;
water	25:4	0:0	4	}
water	27:4	0:0	2	i_end
op	27:10	0:0	2	=
water	27:12	0:0	2	EIA608_SCREEN_COLUMNS
op	27:33	0:0	2	-
water	27:34	0:0	2	1
water	27:35	0:0	2	;
while	28:4	29:15	2	(i_end > i_start && p_char [ i_end ] == ' ')
cond	28:11	28:47	3	i_end > i_start && p_char [ i_end ] == ' '
water	28:11	0:0	4	i_end
op	28:17	0:0	4	>
water	28:19	0:0	4	i_start
op	28:27	0:0	4	&&
water	28:30	0:0	4	p_char
op	28:36	0:0	4	[
water	28:37	0:0	4	i_end
op	28:42	0:0	4	]
op	28:44	0:0	4	==
water	28:47	0:0	4	' '
stmts	29:8	29:15	3	
water	29:8	0:0	4	i_end
op	29:13	0:0	4	--
water	29:15	0:0	4	;
for	31:4	106:4	2	(x = i_start ;x <= i_end;x ++)
forinit	31:9	31:20	3	x = i_start ;
water	31:9	0:0	4	x
op	31:11	0:0	4	=
water	31:13	0:0	4	i_start
water	31:20	0:0	4	;
cond	31:22	31:27	3	x <= i_end
water	31:22	0:0	4	x
op	31:24	0:0	4	<=
water	31:27	0:0	4	i_end
forexpr	31:34	31:35	3	x ++
water	31:34	0:0	4	x
op	31:35	0:0	4	++
stmts	32:4	106:4	3	
water	32:4	0:0	4	{
decl	33:8	33:41	4	eia608_color_t	color
op	33:29	0:0	4	=
water	33:31	0:0	4	p_color
op	33:38	0:0	4	[
water	33:39	0:0	4	x
op	33:40	0:0	4	]
decl	34:8	34:56	4	bool	b_italics
op	34:23	0:0	4	=
water	34:25	0:0	4	p_font
op	34:31	0:0	4	[
water	34:32	0:0	4	x
op	34:33	0:0	4	]
op	34:35	0:0	4	&
water	34:37	0:0	4	EIA608_FONT_ITALICS
decl	35:8	35:60	4	bool	b_underline
op	35:25	0:0	4	=
water	35:27	0:0	4	p_font
op	35:33	0:0	4	[
water	35:34	0:0	4	x
op	35:35	0:0	4	]
op	35:37	0:0	4	&
water	35:39	0:0	4	EIA608_FONT_UNDERLINE
if	37:8	73:8	4	(b_html)
cond	37:12	37:12	5	b_html
water	37:12	0:0	6	b_html
stmts	38:8	73:8	5	
water	38:8	0:0	6	{
decl	39:12	39:66	6	bool	b_close_color
water	39:30	0:0	6	,
decl	39:12	39:66	6	bool	b_close_italics
water	39:47	0:0	6	,
decl	39:12	39:66	6	bool	b_close_underline
water	41:12	0:0	6	b_close_color
op	41:26	0:0	6	=
water	41:28	0:0	6	color
op	41:34	0:0	6	!=
water	41:37	0:0	6	last_color
op	41:48	0:0	6	&&
water	41:51	0:0	6	last_color
op	41:62	0:0	6	!=
water	41:65	0:0	6	EIA608_COLOR_DEFAULT
water	41:85	0:0	6	;
water	42:12	0:0	6	b_close_italics
op	42:28	0:0	6	=
op	42:30	0:0	6	!
water	42:31	0:0	6	b_italics
op	42:41	0:0	6	&&
water	42:44	0:0	6	b_last_italics
water	42:58	0:0	6	;
water	43:12	0:0	6	b_close_underline
op	43:30	0:0	6	=
op	43:32	0:0	6	!
water	43:33	0:0	6	b_underline
op	43:45	0:0	6	&&
water	43:48	0:0	6	b_last_underline
water	43:64	0:0	6	;
water	45:12	0:0	6	b_close_italics
op	45:28	0:0	6	|=
water	45:31	0:0	6	b_last_italics
op	45:46	0:0	6	&&
water	45:49	0:0	6	b_close_color
water	45:62	0:0	6	;
water	46:12	0:0	6	b_close_underline
op	46:30	0:0	6	|=
water	46:33	0:0	6	b_last_underline
op	46:50	0:0	6	&&
water	46:53	0:0	6	(
water	46:55	0:0	6	b_close_italics
op	46:71	0:0	6	||
water	46:74	0:0	6	b_close_color
water	46:88	0:0	6	)
water	46:89	0:0	6	;
if	47:12	48:29	6	(b_close_underline)
cond	47:16	47:16	7	b_close_underline
water	47:16	0:0	8	b_close_underline
stmts	48:16	48:29	7	
call	48:16	48:28	8	CAT
arg	48:21	48:28	9	"</u>"
water	48:21	0:0	10	"</u>"
water	48:29	0:0	8	;
if	49:12	50:29	6	(b_close_italics)
cond	49:16	49:16	7	b_close_italics
water	49:16	0:0	8	b_close_italics
stmts	50:16	50:29	7	
call	50:16	50:28	8	CAT
arg	50:21	50:28	9	"</i>"
water	50:21	0:0	10	"</i>"
water	50:29	0:0	8	;
if	51:12	52:32	6	(b_close_color)
cond	51:16	51:16	7	b_close_color
water	51:16	0:0	8	b_close_color
stmts	52:16	52:32	7	
call	52:16	52:31	8	CAT
arg	52:21	52:31	9	"</font>"
water	52:21	0:0	10	"</font>"
water	52:32	0:0	8	;
if	53:12	68:12	6	(color != EIA608_COLOR_DEFAULT && color != last_color)
cond	53:16	53:58	7	color != EIA608_COLOR_DEFAULT && color != last_color
water	53:16	0:0	8	color
op	53:22	0:0	8	!=
water	53:25	0:0	8	EIA608_COLOR_DEFAULT
op	53:46	0:0	8	&&
water	53:49	0:0	8	color
op	53:55	0:0	8	!=
water	53:58	0:0	8	last_color
stmts	54:12	68:12	7	
water	54:12	0:0	8	{
water	55:16	0:0	8	static
water	55:23	0:0	8	const
water	55:29	0:0	8	char
op	55:34	0:0	8	*
water	55:35	0:0	8	ppsz_color
op	55:45	0:0	8	[
op	55:46	0:0	8	]
op	55:48	0:0	8	=
water	55:50	0:0	8	{
water	56:20	0:0	8	"#ffffff"
water	56:29	0:0	8	,
water	57:20	0:0	8	"#00ff00"
water	57:29	0:0	8	,
water	58:20	0:0	8	"#0000ff"
water	58:29	0:0	8	,
water	59:20	0:0	8	"#00ffff"
water	59:29	0:0	8	,
water	60:20	0:0	8	"#ff0000"
water	60:29	0:0	8	,
water	61:20	0:0	8	"#ffff00"
water	61:29	0:0	8	,
water	62:20	0:0	8	"#ff00ff"
water	62:29	0:0	8	,
water	63:20	0:0	8	"#ffffff"
water	63:29	0:0	8	,
water	64:16	0:0	8	}
water	64:17	0:0	8	;
call	65:16	65:38	8	CAT
arg	65:21	65:38	9	"<font color=\""
water	65:21	0:0	10	"<font color=\""
water	65:39	0:0	8	;
call	66:16	66:39	8	CAT
arg	66:21	66:39	9	ppsz_color[color]
water	66:21	0:0	10	ppsz_color
op	66:31	0:0	10	[
water	66:32	0:0	10	color
op	66:37	0:0	10	]
water	66:40	0:0	8	;
call	67:16	67:27	8	CAT
arg	67:21	67:27	9	"\">"
water	67:21	0:0	10	"\">"
water	67:28	0:0	8	;
water	68:12	0:0	8	}
if	69:12	70:28	6	(( b_close_italics && b_italics ) || ( b_italics && ! b_last_italics ))
cond	69:16	69:83	7	( b_close_italics && b_italics ) || ( b_italics && ! b_last_italics )
water	69:16	0:0	8	(
water	69:18	0:0	8	b_close_italics
op	69:34	0:0	8	&&
water	69:37	0:0	8	b_italics
water	69:47	0:0	8	)
op	69:49	0:0	8	||
water	69:52	0:0	8	(
water	69:54	0:0	8	b_italics
op	69:64	0:0	8	&&
op	69:67	0:0	8	!
water	69:68	0:0	8	b_last_italics
water	69:83	0:0	8	)
stmts	70:16	70:28	7	
call	70:16	70:27	8	CAT
arg	70:21	70:27	9	"<i>"
water	70:21	0:0	10	"<i>"
water	70:28	0:0	8	;
if	71:12	72:28	6	(( b_close_underline && b_underline ) || ( b_underline && ! b_last_underline ))
cond	71:16	71:91	7	( b_close_underline && b_underline ) || ( b_underline && ! b_last_underline )
water	71:16	0:0	8	(
water	71:18	0:0	8	b_close_underline
op	71:36	0:0	8	&&
water	71:39	0:0	8	b_underline
water	71:51	0:0	8	)
op	71:53	0:0	8	||
water	71:56	0:0	8	(
water	71:58	0:0	8	b_underline
op	71:70	0:0	8	&&
op	71:73	0:0	8	!
water	71:74	0:0	8	b_last_underline
water	71:91	0:0	8	)
stmts	72:16	72:28	7	
call	72:16	72:27	8	CAT
arg	72:21	72:27	9	"<u>"
water	72:21	0:0	10	"<u>"
water	72:28	0:0	8	;
water	73:8	0:0	6	}
if	74:8	98:8	4	(b_html)
cond	74:12	74:12	5	b_html
water	74:12	0:0	6	b_html
stmts	74:21	98:8	5	
water	74:21	0:0	6	{
switch	77:12	97:12	6	(p_char [ x ])
cond	77:20	77:28	7	p_char [ x ]
water	77:20	0:0	8	p_char
op	77:26	0:0	8	[
water	77:27	0:0	8	x
op	77:28	0:0	8	]
stmts	77:31	97:12	7	
water	77:31	0:0	8	{
water	78:12	0:0	8	case
water	78:17	0:0	8	'>'
water	78:20	0:0	8	:
call	79:16	79:28	8	CAT
arg	79:21	79:28	9	"&gt;"
water	79:21	0:0	10	"&gt;"
water	79:29	0:0	8	;
break	80:16	80:21	8	
water	81:12	0:0	8	case
water	81:17	0:0	8	'<'
water	81:20	0:0	8	:
call	82:16	82:28	8	CAT
arg	82:21	82:28	9	"&lt;"
water	82:21	0:0	10	"&lt;"
water	82:29	0:0	8	;
break	83:16	83:21	8	
water	84:12	0:0	8	case
water	84:17	0:0	8	'"'
water	84:20	0:0	8	:
call	85:16	85:30	8	CAT
arg	85:21	85:30	9	"&quot;"
water	85:21	0:0	10	"&quot;"
water	85:31	0:0	8	;
break	86:16	86:21	8	
water	87:12	0:0	8	case
water	87:17	0:0	8	'\''
water	87:21	0:0	8	:
call	88:16	88:30	8	CAT
arg	88:21	88:30	9	"&apos;"
water	88:21	0:0	10	"&apos;"
water	88:31	0:0	8	;
break	89:16	89:21	8	
water	90:12	0:0	8	case
water	90:17	0:0	8	'&'
water	90:20	0:0	8	:
call	91:16	91:29	8	CAT
arg	91:21	91:29	9	"&amp;"
water	91:21	0:0	10	"&amp;"
water	91:30	0:0	8	;
break	92:16	92:21	8	
label	93:12	93:19	8	default :
call	94:16	94:48	8	Eia608TextUtf8
arg	94:32	94:36	9	utf8
water	94:32	0:0	10	utf8
arg	94:38	94:48	9	p_char[x]
water	94:38	0:0	10	p_char
op	94:44	0:0	10	[
water	94:45	0:0	10	x
op	94:46	0:0	10	]
water	94:49	0:0	8	;
call	95:16	95:26	8	CAT
arg	95:21	95:26	9	utf8
water	95:21	0:0	10	utf8
water	95:27	0:0	8	;
break	96:16	96:21	8	
water	97:12	0:0	8	}
water	98:8	0:0	6	}
else	98:10	101:8	4
stmts	98:15	101:8	5	
water	98:15	0:0	6	{
call	99:12	99:44	6	Eia608TextUtf8
arg	99:28	99:32	7	utf8
water	99:28	0:0	8	utf8
arg	99:34	99:44	7	p_char[x]
water	99:34	0:0	8	p_char
op	99:40	0:0	8	[
water	99:41	0:0	8	x
op	99:42	0:0	8	]
water	99:45	0:0	6	;
call	100:12	100:22	6	CAT
arg	100:17	100:22	7	utf8
water	100:17	0:0	8	utf8
water	100:23	0:0	6	;
water	101:8	0:0	6	}
water	103:8	0:0	4	b_last_underline
op	103:25	0:0	4	=
water	103:27	0:0	4	b_underline
water	103:38	0:0	4	;
water	104:8	0:0	4	b_last_italics
op	104:23	0:0	4	=
water	104:25	0:0	4	b_italics
water	104:34	0:0	4	;
water	105:8	0:0	4	last_color
op	105:19	0:0	4	=
water	105:21	0:0	4	color
water	105:26	0:0	4	;
water	106:4	0:0	4	}
if	107:4	116:4	2	(b_html)
cond	107:8	107:8	3	b_html
water	107:8	0:0	4	b_html
stmts	108:4	116:4	3	
water	108:4	0:0	4	{
if	109:8	110:25	4	(b_last_underline)
cond	109:12	109:12	5	b_last_underline
water	109:12	0:0	6	b_last_underline
stmts	110:12	110:25	5	
call	110:12	110:24	6	CAT
arg	110:17	110:24	7	"</u>"
water	110:17	0:0	8	"</u>"
water	110:25	0:0	6	;
if	111:8	112:25	4	(b_last_italics)
cond	111:12	111:12	5	b_last_italics
water	111:12	0:0	6	b_last_italics
stmts	112:12	112:25	5	
call	112:12	112:24	6	CAT
arg	112:17	112:24	7	"</i>"
water	112:17	0:0	8	"</i>"
water	112:25	0:0	6	;
if	113:8	114:28	4	(last_color != EIA608_COLOR_DEFAULT)
cond	113:12	113:26	5	last_color != EIA608_COLOR_DEFAULT
water	113:12	0:0	6	last_color
op	113:23	0:0	6	!=
water	113:26	0:0	6	EIA608_COLOR_DEFAULT
stmts	114:12	114:28	5	
call	114:12	114:27	6	CAT
arg	114:17	114:27	7	"</font>"
water	114:17	0:0	8	"</font>"
water	114:28	0:0	6	;
call	115:8	115:21	4	CAT
arg	115:13	115:21	5	"</tt>"
water	115:13	0:0	6	"</tt>"
water	115:22	0:0	4	;
water	116:4	0:0	4	}

func	2:0	71:0	0	static picture_t *	DecodeVideo
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:68	2	block_t * *	pp_block
stmnts	0:0	70:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:24	2	picture_t	*p_pic
decl	7:4	7:23	2	mtime_t	i_pts
decl	8:4	8:24	2	ComponentResult	cres
if	12:4	21:4	2	(p_sys == NULL)
cond	12:8	12:17	3	p_sys == NULL
water	12:8	0:0	4	p_sys
op	12:14	0:0	4	==
water	12:17	0:0	4	NULL
stmts	13:4	21:4	3	
water	13:4	0:0	4	{
if	14:8	19:8	4	(OpenVideo (p_dec ))
cond	14:12	14:29	5	OpenVideo (p_dec )
call	14:12	14:29	6	OpenVideo
arg	14:23	14:29	7	p_dec
water	14:23	0:0	8	p_dec
stmts	15:8	19:8	5	
water	15:8	0:0	6	{
water	17:12	0:0	6	p_dec
op	17:17	0:0	6	->
water	17:19	0:0	6	b_error
op	17:27	0:0	6	=
water	17:29	0:0	6	true
water	17:33	0:0	6	;
return	18:12	18:23	6	NULL
water	18:19	0:0	7	NULL
water	19:8	0:0	6	}
water	20:8	0:0	4	p_sys
op	20:14	0:0	4	=
water	20:16	0:0	4	p_dec
op	20:21	0:0	4	->
water	20:23	0:0	4	p_sys
water	20:28	0:0	4	;
water	21:4	0:0	4	}
if	23:4	26:4	2	(pp_block == NULL || * pp_block == NULL)
cond	23:8	23:41	3	pp_block == NULL || * pp_block == NULL
water	23:8	0:0	4	pp_block
op	23:17	0:0	4	==
water	23:20	0:0	4	NULL
op	23:25	0:0	4	||
op	23:28	0:0	4	*
water	23:29	0:0	4	pp_block
op	23:38	0:0	4	==
water	23:41	0:0	4	NULL
stmts	24:4	26:4	3	
water	24:4	0:0	4	{
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	26:4	0:0	4	}
water	27:4	0:0	2	p_block
op	27:12	0:0	2	=
op	27:14	0:0	2	*
water	27:15	0:0	2	pp_block
water	27:23	0:0	2	;
op	28:4	0:0	2	*
water	28:5	0:0	2	pp_block
op	28:14	0:0	2	=
water	28:16	0:0	2	NULL
water	28:20	0:0	2	;
water	29:4	0:0	2	i_pts
op	29:10	0:0	2	=
water	29:12	0:0	2	p_block
op	29:19	0:0	2	->
water	29:21	0:0	2	i_pts
op	29:27	0:0	2	>
water	29:29	0:0	2	VLC_TS_INVALID
water	29:44	0:0	2	?
water	29:46	0:0	2	p_block
op	29:53	0:0	2	->
water	29:55	0:0	2	i_pts
water	29:61	0:0	2	:
water	29:63	0:0	2	p_block
op	29:70	0:0	2	->
water	29:72	0:0	2	i_dts
water	29:77	0:0	2	;
decl	30:4	30:30	2	mtime_t	i_display_date
op	30:27	0:0	2	=
water	30:29	0:0	2	0
if	31:4	32:63	2	(! ( p_block -> i_flags & BLOCK_FLAG_PREROLL ))
cond	31:8	31:47	3	! ( p_block -> i_flags & BLOCK_FLAG_PREROLL )
op	31:8	0:0	4	!
water	31:9	0:0	4	(
water	31:10	0:0	4	p_block
op	31:17	0:0	4	->
water	31:19	0:0	4	i_flags
op	31:27	0:0	4	&
water	31:29	0:0	4	BLOCK_FLAG_PREROLL
water	31:47	0:0	4	)
stmts	32:8	32:63	3	
water	32:8	0:0	4	i_display_date
op	32:23	0:0	4	=
call	32:25	32:62	4	decoder_GetDisplayDate
arg	32:49	32:54	5	p_dec
water	32:49	0:0	6	p_dec
arg	32:56	32:62	5	i_pts
water	32:56	0:0	6	i_pts
water	32:63	0:0	4	;
if	33:4	36:4	2	(i_display_date > 0 && i_display_date <mdate ( ))
cond	33:8	33:53	3	i_display_date > 0 && i_display_date <mdate ( )
water	33:8	0:0	4	i_display_date
op	33:23	0:0	4	>
water	33:25	0:0	4	0
op	33:27	0:0	4	&&
water	33:30	0:0	4	i_display_date
op	33:45	0:0	4	<
call	33:47	33:53	4	mdate
stmts	34:4	36:4	3	
water	34:4	0:0	4	{
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	i_late
op	35:21	0:0	4	++
water	35:23	0:0	4	;
water	36:4	0:0	4	}
else	37:4	40:4	2
stmts	38:4	40:4	3	
water	38:4	0:0	4	{
water	39:8	0:0	4	p_sys
op	39:13	0:0	4	->
water	39:15	0:0	4	i_late
op	39:22	0:0	4	=
water	39:24	0:0	4	0
water	39:25	0:0	4	;
water	40:4	0:0	4	}
call	42:4	42:53	2	msg_Dbg
arg	42:13	42:18	3	p_dec
water	42:13	0:0	4	p_dec
arg	42:20	42:34	3	"bufsize: %zu"
water	42:20	0:0	4	"bufsize: %zu"
arg	42:36	42:53	3	p_block->i_buffer
water	42:36	0:0	4	p_block
op	42:43	0:0	4	->
water	42:45	0:0	4	i_buffer
water	42:54	0:0	2	;
if	44:4	49:4	2	(p_sys -> i_late > 10)
cond	44:8	44:24	3	p_sys -> i_late > 10
water	44:8	0:0	4	p_sys
op	44:13	0:0	4	->
water	44:15	0:0	4	i_late
op	44:22	0:0	4	>
water	44:24	0:0	4	10
stmts	45:4	49:4	3	
water	45:4	0:0	4	{
call	46:8	46:65	4	msg_Dbg
arg	46:17	46:22	5	p_dec
water	46:17	0:0	6	p_dec
arg	46:24	46:57	5	"late buffer dropped (%"PRId64")"
water	46:24	0:0	6	"late buffer dropped (%"
water	46:48	0:0	6	PRId64
water	46:54	0:0	6	")"
arg	46:59	46:65	5	i_pts
water	46:59	0:0	6	i_pts
water	46:66	0:0	4	;
call	47:8	47:31	4	block_Release
arg	47:23	47:31	5	p_block
water	47:23	0:0	6	p_block
water	47:32	0:0	4	;
return	48:8	48:19	4	NULL
water	48:15	0:0	5	NULL
water	49:4	0:0	4	}
call	50:4	50:30	2	vlc_mutex_lock
arg	50:20	50:30	3	&qt_mutex
op	50:20	0:0	4	&
water	50:21	0:0	4	qt_mutex
water	50:31	0:0	2	;
if	51:4	67:4	2	(( p_pic =decoder_NewPicture (p_dec ) ))
cond	51:8	51:46	3	( p_pic =decoder_NewPicture (p_dec ) )
water	51:8	0:0	4	(
water	51:10	0:0	4	p_pic
op	51:16	0:0	4	=
call	51:18	51:44	4	decoder_NewPicture
arg	51:38	51:44	5	p_dec
water	51:38	0:0	6	p_dec
water	51:46	0:0	4	)
stmts	52:4	67:4	3	
water	52:4	0:0	4	{
water	53:8	0:0	4	p_sys
op	53:13	0:0	4	->
water	53:15	0:0	4	decpar
op	53:21	0:0	4	.
water	53:22	0:0	4	data
op	53:44	0:0	4	=
water	53:46	0:0	4	(
water	53:47	0:0	4	Ptr
water	53:50	0:0	4	)
water	53:51	0:0	4	p_block
op	53:58	0:0	4	->
water	53:60	0:0	4	p_buffer
water	53:68	0:0	4	;
water	54:8	0:0	4	p_sys
op	54:13	0:0	4	->
water	54:15	0:0	4	decpar
op	54:21	0:0	4	.
water	54:22	0:0	4	bufferSize
op	54:44	0:0	4	=
water	54:46	0:0	4	p_block
op	54:53	0:0	4	->
water	54:55	0:0	4	i_buffer
water	54:63	0:0	4	;
water	55:8	0:0	4	(
op	55:9	0:0	4	*
op	55:10	0:0	4	*
water	55:11	0:0	4	p_sys
op	55:16	0:0	4	->
water	55:18	0:0	4	framedescHandle
water	55:33	0:0	4	)
op	55:34	0:0	4	.
water	55:35	0:0	4	dataSize
op	55:44	0:0	4	=
water	55:46	0:0	4	p_block
op	55:53	0:0	4	->
water	55:55	0:0	4	i_buffer
water	55:63	0:0	4	;
water	56:8	0:0	4	cres
op	56:13	0:0	4	=
call	56:15	56:74	4	p_sys->ImageCodecBandDecompress
arg	56:48	56:57	5	p_sys->ci
water	56:48	0:0	6	p_sys
op	56:53	0:0	6	->
water	56:55	0:0	6	ci
arg	56:59	56:74	5	&p_sys->decpar
op	56:59	0:0	6	&
water	56:60	0:0	6	p_sys
op	56:65	0:0	6	->
water	56:67	0:0	6	decpar
water	56:75	0:0	4	;
op	57:8	0:0	4	++
water	57:10	0:0	4	p_sys
op	57:15	0:0	4	->
water	57:17	0:0	4	decpar
op	57:23	0:0	4	.
water	57:24	0:0	4	frameNumber
water	57:35	0:0	4	;
if	58:8	63:8	4	(cres & 0 xFFFF)
cond	58:12	58:19	5	cres & 0 xFFFF
water	58:12	0:0	6	cres
op	58:17	0:0	6	&
water	58:18	0:0	6	0
water	58:19	0:0	6	xFFFF
stmts	59:8	63:8	5	
water	59:8	0:0	6	{
call	60:12	62:53	6	msg_Dbg
arg	60:21	60:26	7	p_dec
water	60:21	0:0	8	p_dec
arg	60:28	61:47	7	"quicktime_video: ImageCodecBandDecompress"" cres=0x%X (-0x%X) %d :("
water	60:28	0:0	8	"quicktime_video: ImageCodecBandDecompress"
water	61:21	0:0	8	" cres=0x%X (-0x%X) %d :("
arg	62:21	62:30	7	(int)cres
water	62:21	0:0	8	(
water	62:22	0:0	8	int
water	62:25	0:0	8	)
water	62:26	0:0	8	cres
arg	62:31	62:41	7	(int)-cres
water	62:31	0:0	8	(
water	62:32	0:0	8	int
water	62:35	0:0	8	)
op	62:36	0:0	8	-
water	62:37	0:0	8	cres
arg	62:43	62:53	7	(int)cres
water	62:43	0:0	8	(
water	62:44	0:0	8	int
water	62:47	0:0	8	)
water	62:48	0:0	8	cres
water	62:54	0:0	6	;
water	63:8	0:0	6	}
call	64:8	65:79	4	memcpy
arg	64:16	64:36	5	p_pic->p[0].p_pixels
water	64:16	0:0	6	p_pic
op	64:21	0:0	6	->
water	64:23	0:0	6	p
op	64:24	0:0	6	[
water	64:25	0:0	6	0
op	64:26	0:0	6	]
op	64:27	0:0	6	.
water	64:28	0:0	6	p_pixels
arg	64:38	64:50	5	p_sys->plane
water	64:38	0:0	6	p_sys
op	64:43	0:0	6	->
water	64:45	0:0	6	plane
arg	65:16	65:79	5	p_dec->fmt_in.video.i_width*p_dec->fmt_in.video.i_height*2
water	65:16	0:0	6	p_dec
op	65:21	0:0	6	->
water	65:23	0:0	6	fmt_in
op	65:29	0:0	6	.
water	65:30	0:0	6	video
op	65:35	0:0	6	.
water	65:36	0:0	6	i_width
op	65:44	0:0	6	*
water	65:46	0:0	6	p_dec
op	65:51	0:0	6	->
water	65:53	0:0	6	fmt_in
op	65:59	0:0	6	.
water	65:60	0:0	6	video
op	65:65	0:0	6	.
water	65:66	0:0	6	i_height
op	65:75	0:0	6	*
water	65:77	0:0	6	2
water	65:80	0:0	4	;
water	66:8	0:0	4	p_pic
op	66:13	0:0	4	->
water	66:15	0:0	4	date
op	66:20	0:0	4	=
water	66:22	0:0	4	i_pts
water	66:27	0:0	4	;
water	67:4	0:0	4	}
call	68:4	68:32	2	vlc_mutex_unlock
arg	68:22	68:32	3	&qt_mutex
op	68:22	0:0	4	&
water	68:23	0:0	4	qt_mutex
water	68:33	0:0	2	;
call	69:4	69:27	2	block_Release
arg	69:19	69:27	3	p_block
water	69:19	0:0	4	p_block
water	69:28	0:0	2	;
return	70:4	70:16	2	p_pic
water	70:11	0:0	3	p_pic

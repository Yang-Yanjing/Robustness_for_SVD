func	2:0	43:0	0	static int	net_SetupDgramSocket
params	2:32	0:0	1	
param	2:33	2:52	2	vlc_object_t *	p_obj
param	2:54	2:60	2	int	fd
param	3:33	3:59	2	const struct addrinfo *	ptr
stmnts	6:4	42:13	1	
call	6:4	6:71	2	setsockopt
arg	6:16	6:18	3	fd
water	6:16	0:0	4	fd
arg	6:20	6:30	3	SOL_SOCKET
water	6:20	0:0	4	SOL_SOCKET
arg	6:32	6:44	3	SO_REUSEPORT
water	6:32	0:0	4	SO_REUSEPORT
arg	6:46	6:57	3	&(int){1}
op	6:46	0:0	4	&
water	6:47	0:0	4	(
water	6:48	0:0	4	int
water	6:51	0:0	4	)
water	6:52	0:0	4	{
water	6:54	0:0	4	1
water	6:56	0:0	4	}
arg	6:59	6:71	3	sizeof(int)
op	6:59	0:0	4	sizeof
water	6:66	0:0	4	(
water	6:67	0:0	4	int
water	6:70	0:0	4	)
water	6:72	0:0	2	;
decl	14:4	14:65	2	HINSTANCE	h_Network
op	14:24	0:0	2	=
call	14:26	14:64	3	LoadLibraryW
arg	14:39	14:64	4	L"Windows.Networking.dll"
water	14:39	0:0	5	L
water	14:40	0:0	5	"Windows.Networking.dll"
if	15:4	20:4	2	(( h_Network == NULL ) || (GetProcAddress (h_Network ,"SetSocketMediaStreamingMode" ) == NULL ))
cond	15:8	16:76	3	( h_Network == NULL ) || (GetProcAddress (h_Network ,"SetSocketMediaStreamingMode" ) == NULL )
water	15:8	0:0	4	(
water	15:9	0:0	4	h_Network
op	15:19	0:0	4	==
water	15:22	0:0	4	NULL
water	15:26	0:0	4	)
op	15:28	0:0	4	||
water	16:8	0:0	4	(
call	16:9	16:66	4	GetProcAddress
arg	16:25	16:34	5	h_Network
water	16:25	0:0	6	h_Network
arg	16:36	16:66	5	"SetSocketMediaStreamingMode"
water	16:36	0:0	6	"SetSocketMediaStreamingMode"
op	16:68	0:0	4	==
water	16:71	0:0	4	NULL
water	16:76	0:0	4	)
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	19:64	4	setsockopt
arg	18:20	18:22	5	fd
water	18:20	0:0	6	fd
arg	18:24	18:34	5	SOL_SOCKET
water	18:24	0:0	6	SOL_SOCKET
arg	18:36	18:45	5	SO_RCVBUF
water	18:36	0:0	6	SO_RCVBUF
arg	19:25	19:50	5	(void*)&(int){0x80000}
water	19:25	0:0	6	(
water	19:26	0:0	6	void
op	19:31	0:0	6	*
water	19:32	0:0	6	)
op	19:33	0:0	6	&
water	19:34	0:0	6	(
water	19:35	0:0	6	int
water	19:38	0:0	6	)
water	19:39	0:0	6	{
water	19:41	0:0	6	0
water	19:42	0:0	6	x80000
water	19:49	0:0	6	}
arg	19:52	19:64	5	sizeof(int)
op	19:52	0:0	6	sizeof
water	19:59	0:0	6	(
water	19:60	0:0	6	int
water	19:63	0:0	6	)
water	19:65	0:0	4	;
water	20:4	0:0	4	}
if	21:4	22:32	2	(h_Network)
cond	21:8	21:8	3	h_Network
water	21:8	0:0	4	h_Network
stmts	22:8	22:32	3	
call	22:8	22:31	4	FreeLibrary
arg	22:21	22:31	5	h_Network
water	22:21	0:0	6	h_Network
water	22:32	0:0	4	;
if	23:4	33:4	2	(net_SockAddrIsMulticast (ptr -> ai_addr ,ptr -> ai_addrlen ) && ( sizeof ( struct sockaddr_storage ) >= ptr -> ai_addrlen ))
cond	23:8	24:60	3	net_SockAddrIsMulticast (ptr -> ai_addr ,ptr -> ai_addrlen ) && ( sizeof ( struct sockaddr_storage ) >= ptr -> ai_addrlen )
call	23:8	23:62	4	net_SockAddrIsMulticast
arg	23:33	23:45	5	ptr->ai_addr
water	23:33	0:0	6	ptr
op	23:36	0:0	6	->
water	23:38	0:0	6	ai_addr
arg	23:47	23:62	5	ptr->ai_addrlen
water	23:47	0:0	6	ptr
op	23:50	0:0	6	->
water	23:52	0:0	6	ai_addrlen
op	24:5	0:0	4	&&
water	24:8	0:0	4	(
op	24:9	0:0	4	sizeof
water	24:16	0:0	4	(
water	24:17	0:0	4	struct
water	24:24	0:0	4	sockaddr_storage
water	24:40	0:0	4	)
op	24:42	0:0	4	>=
water	24:45	0:0	4	ptr
op	24:48	0:0	4	->
water	24:50	0:0	4	ai_addrlen
water	24:60	0:0	4	)
stmts	25:4	33:4	3	
water	25:4	0:0	4	{
decl	27:8	31:9	4	struct sockaddr_in6	dumb
op	27:33	0:0	4	=
water	28:8	0:0	4	{
op	29:12	0:0	4	.
water	29:13	0:0	4	sin6_family
op	29:25	0:0	4	=
water	29:27	0:0	4	ptr
op	29:30	0:0	4	->
water	29:32	0:0	4	ai_addr
op	29:39	0:0	4	->
water	29:41	0:0	4	sa_family
water	29:50	0:0	4	,
op	30:12	0:0	4	.
water	30:13	0:0	4	sin6_port
op	30:23	0:0	4	=
water	30:26	0:0	4	(
call	30:27	30:62	5	(structsockaddr_in*)
arg	30:50	30:62	6	ptr->ai_addr
water	30:50	0:0	7	ptr
op	30:53	0:0	7	->
water	30:55	0:0	7	ai_addr
water	30:63	0:0	4	)
op	30:64	0:0	4	->
water	30:66	0:0	4	sin_port
water	31:8	0:0	4	}
call	32:8	32:59	4	bind
arg	32:14	32:16	5	fd
water	32:14	0:0	6	fd
arg	32:18	32:42	5	(structsockaddr*)&dumb
water	32:18	0:0	6	(
water	32:19	0:0	6	struct
water	32:26	0:0	6	sockaddr
op	32:35	0:0	6	*
water	32:36	0:0	6	)
op	32:37	0:0	6	&
water	32:38	0:0	6	dumb
arg	32:44	32:59	5	ptr->ai_addrlen
water	32:44	0:0	6	ptr
op	32:47	0:0	6	->
water	32:49	0:0	6	ai_addrlen
water	32:60	0:0	4	;
water	33:4	0:0	4	}
else	34:4	41:4	2
stmts	36:4	41:4	3	
if	36:4	41:4	4	(bind (fd ,ptr -> ai_addr ,ptr -> ai_addrlen ))
cond	36:8	36:47	5	bind (fd ,ptr -> ai_addr ,ptr -> ai_addrlen )
call	36:8	36:47	6	bind
arg	36:14	36:16	7	fd
water	36:14	0:0	8	fd
arg	36:18	36:30	7	ptr->ai_addr
water	36:18	0:0	8	ptr
op	36:21	0:0	8	->
water	36:23	0:0	8	ai_addr
arg	36:32	36:47	7	ptr->ai_addrlen
water	36:32	0:0	8	ptr
op	36:35	0:0	8	->
water	36:37	0:0	8	ai_addrlen
stmts	37:4	41:4	5	
water	37:4	0:0	6	{
call	38:8	38:75	6	msg_Err
arg	38:17	38:22	7	p_obj
water	38:17	0:0	8	p_obj
arg	38:24	38:47	7	"socket bind error: %s"
water	38:24	0:0	8	"socket bind error: %s"
arg	38:49	38:75	7	vlc_strerror_c(net_errno)
call	38:49	38:73	8	vlc_strerror_c
arg	38:64	38:73	9	net_errno
water	38:64	0:0	10	net_errno
water	38:76	0:0	6	;
call	39:8	39:21	6	net_Close
arg	39:19	39:21	7	fd
water	39:19	0:0	8	fd
water	39:22	0:0	6	;
return	40:8	40:17	6	-1
op	40:15	0:0	7	-
water	40:16	0:0	7	1
water	41:4	0:0	6	}
return	42:4	42:13	2	fd
water	42:11	0:0	3	fd

func	2:0	35:0	0	void	input_ControlPush
params	2:22	0:0	1	
param	2:24	2:47	2	input_thread_t *	p_input
param	3:24	3:34	2	int	i_type
param	3:36	3:55	2	vlc_value_t *	p_val
stmnts	5:4	34:49	1	
call	5:4	5:46	2	vlc_mutex_lock
arg	5:20	5:46	3	&p_input->p->lock_control
op	5:20	0:0	4	&
water	5:21	0:0	4	p_input
op	5:28	0:0	4	->
water	5:30	0:0	4	p
op	5:31	0:0	4	->
water	5:33	0:0	4	lock_control
water	5:47	0:0	2	;
if	6:4	15:4	2	(i_type == INPUT_CONTROL_SET_DIE)
cond	6:8	6:18	3	i_type == INPUT_CONTROL_SET_DIE
water	6:8	0:0	4	i_type
op	6:15	0:0	4	==
water	6:18	0:0	4	INPUT_CONTROL_SET_DIE
stmts	7:4	15:4	3	
water	7:4	0:0	4	{
for	9:8	13:8	4	( int i = 0 ;i < p_input -> p -> i_control;i ++)
forinit	0:0	9:22	5	 int i = 0 ;
decl	9:13	9:22	6	int	i
op	9:19	0:0	6	=
water	9:21	0:0	6	0
cond	9:24	9:40	5	i < p_input -> p -> i_control
water	9:24	0:0	6	i
op	9:26	0:0	6	<
water	9:28	0:0	6	p_input
op	9:35	0:0	6	->
water	9:37	0:0	6	p
op	9:38	0:0	6	->
water	9:40	0:0	6	i_control
forexpr	9:51	9:52	5	i ++
water	9:51	0:0	6	i
op	9:52	0:0	6	++
stmts	10:8	13:8	5	
water	10:8	0:0	6	{
decl	11:12	11:61	6	input_control_t	*p_ctrl
op	11:36	0:0	6	=
op	11:38	0:0	6	&
water	11:39	0:0	6	p_input
op	11:46	0:0	6	->
water	11:48	0:0	6	p
op	11:49	0:0	6	->
water	11:51	0:0	6	control
op	11:58	0:0	6	[
water	11:59	0:0	6	i
op	11:60	0:0	6	]
call	12:12	12:56	6	ControlRelease
arg	12:28	12:42	7	p_ctrl->i_type
water	12:28	0:0	8	p_ctrl
op	12:34	0:0	8	->
water	12:36	0:0	8	i_type
arg	12:44	12:56	7	p_ctrl->val
water	12:44	0:0	8	p_ctrl
op	12:50	0:0	8	->
water	12:52	0:0	8	val
water	12:57	0:0	6	;
water	13:8	0:0	6	}
water	14:8	0:0	4	p_input
op	14:15	0:0	4	->
water	14:17	0:0	4	p
op	14:18	0:0	4	->
water	14:20	0:0	4	i_control
op	14:30	0:0	4	=
water	14:32	0:0	4	0
water	14:33	0:0	4	;
water	15:4	0:0	4	}
if	16:4	22:4	2	(p_input -> p -> i_control >= INPUT_CONTROL_FIFO_SIZE)
cond	16:8	16:33	3	p_input -> p -> i_control >= INPUT_CONTROL_FIFO_SIZE
water	16:8	0:0	4	p_input
op	16:15	0:0	4	->
water	16:17	0:0	4	p
op	16:18	0:0	4	->
water	16:20	0:0	4	i_control
op	16:30	0:0	4	>=
water	16:33	0:0	4	INPUT_CONTROL_FIFO_SIZE
stmts	17:4	22:4	3	
water	17:4	0:0	4	{
call	18:8	19:24	4	msg_Err
arg	18:17	18:24	5	p_input
water	18:17	0:0	6	p_input
arg	18:26	18:73	5	"input control fifo overflow, trashing type=%d"
water	18:26	0:0	6	"input control fifo overflow, trashing type=%d"
arg	19:17	19:24	5	i_type
water	19:17	0:0	6	i_type
water	19:25	0:0	4	;
if	20:8	21:44	4	(p_val)
cond	20:12	20:12	5	p_val
water	20:12	0:0	6	p_val
stmts	21:12	21:44	5	
call	21:12	21:43	6	ControlRelease
arg	21:28	21:34	7	i_type
water	21:28	0:0	8	i_type
arg	21:36	21:43	7	*p_val
op	21:36	0:0	8	*
water	21:37	0:0	8	p_val
water	21:44	0:0	6	;
water	22:4	0:0	4	}
else	23:4	32:4	2
stmts	24:4	32:4	3	
water	24:4	0:0	4	{
decl	25:8	25:25	4	input_control_t	c
water	26:8	0:0	4	c
op	26:9	0:0	4	.
water	26:10	0:0	4	i_type
op	26:17	0:0	4	=
water	26:19	0:0	4	i_type
water	26:25	0:0	4	;
if	27:8	28:26	4	(p_val)
cond	27:12	27:12	5	p_val
water	27:12	0:0	6	p_val
stmts	28:12	28:26	5	
water	28:12	0:0	6	c
op	28:13	0:0	6	.
water	28:14	0:0	6	val
op	28:18	0:0	6	=
op	28:20	0:0	6	*
water	28:21	0:0	6	p_val
water	28:26	0:0	6	;
else	29:8	30:46	4
stmts	30:12	30:46	5	
call	30:12	30:45	6	memset
arg	30:20	30:26	7	&c.val
op	30:20	0:0	8	&
water	30:21	0:0	8	c
op	30:22	0:0	8	.
water	30:23	0:0	8	val
arg	30:28	30:29	7	0
water	30:28	0:0	8	0
arg	30:31	30:45	7	sizeof(c.val)
op	30:31	0:0	8	sizeof
water	30:37	0:0	8	(
water	30:38	0:0	8	c
op	30:39	0:0	8	.
water	30:40	0:0	8	val
water	30:43	0:0	8	)
water	30:46	0:0	6	;
water	31:8	0:0	4	p_input
op	31:15	0:0	4	->
water	31:17	0:0	4	p
op	31:18	0:0	4	->
water	31:20	0:0	4	control
op	31:27	0:0	4	[
water	31:28	0:0	4	p_input
op	31:35	0:0	4	->
water	31:37	0:0	4	p
op	31:38	0:0	4	->
water	31:40	0:0	4	i_control
op	31:49	0:0	4	++
op	31:51	0:0	4	]
op	31:53	0:0	4	=
water	31:55	0:0	4	c
water	31:56	0:0	4	;
water	32:4	0:0	4	}
call	33:4	33:47	2	vlc_cond_signal
arg	33:21	33:47	3	&p_input->p->wait_control
op	33:21	0:0	4	&
water	33:22	0:0	4	p_input
op	33:29	0:0	4	->
water	33:31	0:0	4	p
op	33:32	0:0	4	->
water	33:34	0:0	4	wait_control
water	33:48	0:0	2	;
call	34:4	34:48	2	vlc_mutex_unlock
arg	34:22	34:48	3	&p_input->p->lock_control
op	34:22	0:0	4	&
water	34:23	0:0	4	p_input
op	34:30	0:0	4	->
water	34:32	0:0	4	p
op	34:33	0:0	4	->
water	34:35	0:0	4	lock_control
water	34:49	0:0	2	;

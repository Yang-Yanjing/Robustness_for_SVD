func	2:0	63:0	0	int	lua_ExecuteFunctionVa
params	2:25	0:0	1	
param	2:27	2:54	2	extensions_manager_t *	p_mgr
param	2:56	2:74	2	extension_t *	p_ext
param	3:27	3:51	2	const char *	psz_function
param	3:53	3:66	2	va_list	args
stmnts	0:0	62:16	1	
decl	5:4	5:27	2	int	i_ret
op	5:14	0:0	2	=
water	5:16	0:0	2	VLC_SUCCESS
decl	6:4	6:18	2	int	i_args
op	6:15	0:0	2	=
water	6:17	0:0	2	0
call	7:4	7:26	2	assert
arg	7:12	7:26	3	p_mgr!=NULL
water	7:12	0:0	4	p_mgr
op	7:18	0:0	4	!=
water	7:21	0:0	4	NULL
water	7:27	0:0	2	;
call	8:4	8:26	2	assert
arg	8:12	8:26	3	p_ext!=NULL
water	8:12	0:0	4	p_ext
op	8:18	0:0	4	!=
water	8:21	0:0	4	NULL
water	8:27	0:0	2	;
decl	9:4	9:46	2	lua_State	*L
op	9:17	0:0	2	=
call	9:19	9:45	3	GetLuaState
arg	9:32	9:37	4	p_mgr
water	9:32	0:0	5	p_mgr
arg	9:39	9:45	4	p_ext
water	9:39	0:0	5	p_ext
if	10:4	11:17	2	(! L)
cond	10:8	10:9	3	! L
op	10:8	0:0	4	!
water	10:9	0:0	4	L
stmts	11:8	11:17	3	
return	11:8	11:17	4	-1
op	11:15	0:0	5	-
water	11:16	0:0	5	1
if	12:4	13:40	2	(psz_function)
cond	12:8	12:8	3	psz_function
water	12:8	0:0	4	psz_function
stmts	13:8	13:40	3	
call	13:8	13:39	4	lua_getglobal
arg	13:23	13:24	5	L
water	13:23	0:0	6	L
arg	13:26	13:39	5	psz_function
water	13:26	0:0	6	psz_function
water	13:40	0:0	4	;
if	14:4	19:4	2	(!lua_isfunction (L ,- 1 ))
cond	14:8	14:31	3	!lua_isfunction (L ,- 1 )
op	14:8	0:0	4	!
call	14:9	14:31	4	lua_isfunction
arg	14:25	14:26	5	L
water	14:25	0:0	6	L
arg	14:28	14:31	5	-1
op	14:28	0:0	6	-
water	14:29	0:0	6	1
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
call	16:8	17:75	4	msg_Warn
arg	16:18	16:23	5	p_mgr
water	16:18	0:0	6	p_mgr
arg	16:25	17:43	5	"Error while running script %s, ""function %s() not found"
water	16:25	0:0	6	"Error while running script %s, "
water	17:18	0:0	6	"function %s() not found"
arg	17:45	17:60	5	p_ext->psz_name
water	17:45	0:0	6	p_ext
op	17:50	0:0	6	->
water	17:52	0:0	6	psz_name
arg	17:62	17:75	5	psz_function
water	17:62	0:0	6	psz_function
water	17:76	0:0	4	;
goto	18:8	18:17	4	exit
water	18:13	0:0	5	exit
water	19:4	0:0	4	}
decl	20:4	20:33	2	lua_datatype_e	type
op	20:24	0:0	2	=
water	20:26	0:0	2	LUA_END
while	21:4	38:4	2	(( type =va_arg (args ,int ) ) != LUA_END)
cond	21:11	21:45	3	( type =va_arg (args ,int ) ) != LUA_END
water	21:11	0:0	4	(
water	21:13	0:0	4	type
op	21:18	0:0	4	=
call	21:20	21:38	4	va_arg
arg	21:28	21:32	5	args
water	21:28	0:0	6	args
arg	21:34	21:38	5	int
water	21:34	0:0	6	int
water	21:40	0:0	4	)
op	21:42	0:0	4	!=
water	21:45	0:0	4	LUA_END
stmts	22:4	38:4	3	
water	22:4	0:0	4	{
if	23:8	26:8	4	(type == LUA_NUM)
cond	23:12	23:20	5	type == LUA_NUM
water	23:12	0:0	6	type
op	23:17	0:0	6	==
water	23:20	0:0	6	LUA_NUM
stmts	24:8	26:8	5	
water	24:8	0:0	6	{
call	25:12	25:60	6	lua_pushnumber
arg	25:28	25:30	7	L
water	25:28	0:0	8	L
arg	25:32	25:60	7	(int)va_arg(args,int)
water	25:32	0:0	8	(
water	25:34	0:0	8	int
water	25:38	0:0	8	)
call	25:40	25:58	8	va_arg
arg	25:48	25:52	9	args
water	25:48	0:0	10	args
arg	25:54	25:58	9	int
water	25:54	0:0	10	int
water	25:61	0:0	6	;
water	26:8	0:0	6	}
else	27:8	30:8	4
stmts	27:13	30:8	5	
if	27:13	30:8	6	(type == LUA_TEXT)
cond	27:17	27:25	7	type == LUA_TEXT
water	27:17	0:0	8	type
op	27:22	0:0	8	==
water	27:25	0:0	8	LUA_TEXT
stmts	28:8	30:8	7	
water	28:8	0:0	8	{
call	29:12	29:65	8	lua_pushstring
arg	29:28	29:30	9	L
water	29:28	0:0	10	L
arg	29:32	29:65	9	(char*)va_arg(args,char*)
water	29:32	0:0	10	(
water	29:34	0:0	10	char
op	29:39	0:0	10	*
water	29:41	0:0	10	)
call	29:43	29:63	10	va_arg
arg	29:51	29:55	11	args
water	29:51	0:0	12	args
arg	29:57	29:63	11	char*
water	29:57	0:0	12	char
op	29:61	0:0	12	*
water	29:66	0:0	8	;
water	30:8	0:0	8	}
else	31:8	36:8	4
stmts	32:8	36:8	5	
water	32:8	0:0	6	{
call	33:12	34:73	6	msg_Warn
arg	33:22	33:27	7	p_mgr
water	33:22	0:0	8	p_mgr
arg	33:29	34:35	7	"Undefined argument type %d to lua function %s""from script %s"
water	33:29	0:0	8	"Undefined argument type %d to lua function %s"
water	34:19	0:0	8	"from script %s"
arg	34:37	34:41	7	type
water	34:37	0:0	8	type
arg	34:43	34:55	7	psz_function
water	34:43	0:0	8	psz_function
arg	34:57	34:73	7	p_ext->psz_name
water	34:57	0:0	8	p_ext
op	34:62	0:0	8	->
water	34:64	0:0	8	psz_name
water	34:74	0:0	6	;
goto	35:12	35:21	6	exit
water	35:17	0:0	7	exit
water	36:8	0:0	6	}
water	37:8	0:0	4	i_args
op	37:15	0:0	4	++
water	37:17	0:0	4	;
water	38:4	0:0	4	}
call	40:4	40:48	2	vlc_mutex_lock
arg	40:20	40:48	3	&p_ext->p_sys->command_lock
op	40:20	0:0	4	&
water	40:21	0:0	4	p_ext
op	40:26	0:0	4	->
water	40:28	0:0	4	p_sys
op	40:33	0:0	4	->
water	40:35	0:0	4	command_lock
water	40:49	0:0	2	;
call	41:4	41:74	2	vlc_timer_schedule
arg	41:24	41:43	3	p_ext->p_sys->timer
water	41:24	0:0	4	p_ext
op	41:29	0:0	4	->
water	41:31	0:0	4	p_sys
op	41:36	0:0	4	->
water	41:38	0:0	4	timer
arg	41:45	41:50	3	false
water	41:45	0:0	4	false
arg	41:52	41:70	3	WATCH_TIMER_PERIOD
water	41:52	0:0	4	WATCH_TIMER_PERIOD
arg	41:72	41:74	3	0
water	41:72	0:0	4	0
water	41:75	0:0	2	;
call	42:4	42:50	2	vlc_mutex_unlock
arg	42:22	42:50	3	&p_ext->p_sys->command_lock
op	42:22	0:0	4	&
water	42:23	0:0	4	p_ext
op	42:28	0:0	4	->
water	42:30	0:0	4	p_sys
op	42:35	0:0	4	->
water	42:37	0:0	4	command_lock
water	42:51	0:0	2	;
if	44:4	50:4	2	(lua_pcall (L ,i_args ,1 ,0 ))
cond	44:8	44:35	3	lua_pcall (L ,i_args ,1 ,0 )
call	44:8	44:35	4	lua_pcall
arg	44:19	44:20	5	L
water	44:19	0:0	6	L
arg	44:22	44:28	5	i_args
water	44:22	0:0	6	i_args
arg	44:30	44:31	5	1
water	44:30	0:0	6	1
arg	44:33	44:35	5	0
water	44:33	0:0	6	0
stmts	45:4	50:4	3	
water	45:4	0:0	4	{
call	46:8	48:53	4	msg_Warn
arg	46:18	46:23	5	p_mgr
water	46:18	0:0	6	p_mgr
arg	46:25	47:37	5	"Error while running script %s, ""function %s(): %s"
water	46:25	0:0	6	"Error while running script %s, "
water	47:18	0:0	6	"function %s(): %s"
arg	47:39	47:54	5	p_ext->psz_name
water	47:39	0:0	6	p_ext
op	47:44	0:0	6	->
water	47:46	0:0	6	psz_name
arg	47:56	47:68	5	psz_function
water	47:56	0:0	6	psz_function
arg	48:18	48:53	5	lua_tostring(L,lua_gettop(L))
call	48:18	48:51	6	lua_tostring
arg	48:32	48:33	7	L
water	48:32	0:0	8	L
arg	48:35	48:51	7	lua_gettop(L)
call	48:35	48:49	8	lua_gettop
arg	48:47	48:49	9	L
water	48:47	0:0	10	L
water	48:54	0:0	4	;
water	49:8	0:0	4	i_ret
op	49:14	0:0	4	=
water	49:16	0:0	4	VLC_EGENERIC
water	49:28	0:0	4	;
water	50:4	0:0	4	}
call	52:4	52:48	2	vlc_mutex_lock
arg	52:20	52:48	3	&p_ext->p_sys->command_lock
op	52:20	0:0	4	&
water	52:21	0:0	4	p_ext
op	52:26	0:0	4	->
water	52:28	0:0	4	p_sys
op	52:33	0:0	4	->
water	52:35	0:0	4	command_lock
water	52:49	0:0	2	;
if	53:4	57:4	2	(p_ext -> p_sys -> progress)
cond	53:8	53:22	3	p_ext -> p_sys -> progress
water	53:8	0:0	4	p_ext
op	53:13	0:0	4	->
water	53:15	0:0	4	p_sys
op	53:20	0:0	4	->
water	53:22	0:0	4	progress
stmts	54:4	57:4	3	
water	54:4	0:0	4	{
call	55:8	55:55	4	dialog_ProgressDestroy
arg	55:32	55:55	5	p_ext->p_sys->progress
water	55:32	0:0	6	p_ext
op	55:37	0:0	6	->
water	55:39	0:0	6	p_sys
op	55:44	0:0	6	->
water	55:46	0:0	6	progress
water	55:56	0:0	4	;
water	56:8	0:0	4	p_ext
op	56:13	0:0	4	->
water	56:15	0:0	4	p_sys
op	56:20	0:0	4	->
water	56:22	0:0	4	progress
op	56:31	0:0	4	=
water	56:33	0:0	4	NULL
water	56:37	0:0	4	;
water	57:4	0:0	4	}
call	58:4	58:57	2	vlc_timer_schedule
arg	58:24	58:43	3	p_ext->p_sys->timer
water	58:24	0:0	4	p_ext
op	58:29	0:0	4	->
water	58:31	0:0	4	p_sys
op	58:36	0:0	4	->
water	58:38	0:0	4	timer
arg	58:45	58:50	3	false
water	58:45	0:0	4	false
arg	58:52	58:53	3	0
water	58:52	0:0	4	0
arg	58:55	58:57	3	0
water	58:55	0:0	4	0
water	58:58	0:0	2	;
call	59:4	59:50	2	vlc_mutex_unlock
arg	59:22	59:50	3	&p_ext->p_sys->command_lock
op	59:22	0:0	4	&
water	59:23	0:0	4	p_ext
op	59:28	0:0	4	->
water	59:30	0:0	4	p_sys
op	59:35	0:0	4	->
water	59:37	0:0	4	command_lock
water	59:51	0:0	2	;
water	60:4	0:0	2	i_ret
op	60:10	0:0	2	|=
call	60:13	60:32	2	lua_DialogFlush
arg	60:30	60:32	3	L
water	60:30	0:0	4	L
water	60:33	0:0	2	;
label	61:0	61:4	2	exit :
return	62:4	62:16	2	i_ret
water	62:11	0:0	3	i_ret

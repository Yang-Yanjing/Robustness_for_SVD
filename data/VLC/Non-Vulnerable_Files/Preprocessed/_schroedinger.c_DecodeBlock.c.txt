func	2:0	96:0	0	static picture_t *	DecodeBlock
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:68	2	block_t * *	pp_block
stmnts	0:0	95:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	5:31	2	(! pp_block)
cond	5:8	5:9	3	! pp_block
op	5:8	0:0	4	!
water	5:9	0:0	4	pp_block
stmts	5:20	5:31	3	
return	5:20	5:31	4	NULL
water	5:27	0:0	5	NULL
if	6:4	34:4	2	(* pp_block)
cond	6:9	6:10	3	* pp_block
op	6:9	0:0	4	*
water	6:10	0:0	4	pp_block
stmts	6:21	34:4	3	
water	6:21	0:0	4	{
decl	7:8	7:36	4	block_t	*p_block
op	7:25	0:0	4	=
op	7:27	0:0	4	*
water	7:28	0:0	4	pp_block
if	10:8	16:8	4	(p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY)
cond	10:12	10:31	5	p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY
water	10:12	0:0	6	p_block
op	10:19	0:0	6	->
water	10:21	0:0	6	i_flags
op	10:29	0:0	6	&
water	10:31	0:0	6	BLOCK_FLAG_DISCONTINUITY
stmts	10:58	16:8	5	
water	10:58	0:0	6	{
call	11:12	11:48	6	schro_decoder_reset
arg	11:33	11:48	7	p_sys->p_schro
water	11:33	0:0	8	p_sys
op	11:38	0:0	8	->
water	11:40	0:0	8	p_schro
water	11:49	0:0	6	;
water	12:12	0:0	6	p_sys
op	12:17	0:0	6	->
water	12:19	0:0	6	i_lastpts
op	12:29	0:0	6	=
water	12:31	0:0	6	VLC_TS_INVALID
water	12:45	0:0	6	;
call	13:12	13:35	6	block_Release
arg	13:27	13:35	7	p_block
water	13:27	0:0	8	p_block
water	13:36	0:0	6	;
op	14:12	0:0	6	*
water	14:13	0:0	6	pp_block
op	14:22	0:0	6	=
water	14:24	0:0	6	NULL
water	14:28	0:0	6	;
return	15:12	15:23	6	NULL
water	15:19	0:0	7	NULL
water	16:8	0:0	6	}
decl	17:8	17:34	4	SchroBuffer	*p_schrobuffer
water	18:8	0:0	4	p_schrobuffer
op	18:22	0:0	4	=
call	18:24	18:89	4	schro_buffer_new_with_data
arg	18:52	18:69	5	p_block->p_buffer
water	18:52	0:0	6	p_block
op	18:59	0:0	6	->
water	18:61	0:0	6	p_buffer
arg	18:71	18:89	5	p_block->i_buffer
water	18:71	0:0	6	p_block
op	18:78	0:0	6	->
water	18:80	0:0	6	i_buffer
water	18:90	0:0	4	;
water	19:8	0:0	4	p_schrobuffer
op	19:21	0:0	4	->
water	19:23	0:0	4	free
op	19:28	0:0	4	=
water	19:30	0:0	4	SchroBufferFree
water	19:45	0:0	4	;
water	20:8	0:0	4	p_schrobuffer
op	20:21	0:0	4	->
water	20:23	0:0	4	priv
op	20:28	0:0	4	=
water	20:30	0:0	4	p_block
water	20:37	0:0	4	;
if	21:8	28:8	4	(p_block -> i_pts > VLC_TS_INVALID)
cond	21:12	21:29	5	p_block -> i_pts > VLC_TS_INVALID
water	21:12	0:0	6	p_block
op	21:19	0:0	6	->
water	21:21	0:0	6	i_pts
op	21:27	0:0	6	>
water	21:29	0:0	6	VLC_TS_INVALID
stmts	21:46	28:8	5	
water	21:46	0:0	6	{
decl	22:12	22:53	6	mtime_t	*p_pts
op	22:27	0:0	6	=
call	22:29	22:52	7	malloc
arg	22:37	22:52	8	sizeof(*p_pts)
op	22:37	0:0	9	sizeof
water	22:43	0:0	9	(
op	22:44	0:0	9	*
water	22:45	0:0	9	p_pts
water	22:50	0:0	9	)
if	23:12	27:12	6	(p_pts)
cond	23:16	23:16	7	p_pts
water	23:16	0:0	8	p_pts
stmts	23:24	27:12	7	
water	23:24	0:0	8	{
op	24:16	0:0	8	*
water	24:17	0:0	8	p_pts
op	24:23	0:0	8	=
water	24:25	0:0	8	p_block
op	24:32	0:0	8	->
water	24:34	0:0	8	i_pts
water	24:39	0:0	8	;
water	26:16	0:0	8	p_schrobuffer
op	26:29	0:0	8	->
water	26:31	0:0	8	tag
op	26:35	0:0	8	=
call	26:37	26:64	8	schro_tag_new
arg	26:52	26:57	9	p_pts
water	26:52	0:0	10	p_pts
arg	26:59	26:64	9	free
water	26:59	0:0	10	free
water	26:65	0:0	8	;
water	27:12	0:0	8	}
water	28:8	0:0	6	}
op	31:8	0:0	4	*
water	31:9	0:0	4	pp_block
op	31:18	0:0	4	=
water	31:20	0:0	4	NULL
water	31:24	0:0	4	;
call	32:8	32:68	4	schro_decoder_autoparse_push
arg	32:38	32:52	5	p_sys->p_schro
water	32:38	0:0	6	p_sys
op	32:43	0:0	6	->
water	32:45	0:0	6	p_schro
arg	32:54	32:68	5	p_schrobuffer
water	32:54	0:0	6	p_schrobuffer
water	32:69	0:0	4	;
water	34:4	0:0	4	}
while	35:4	95:4	2	(1)
cond	35:11	35:11	3	1
water	35:11	0:0	4	1
stmts	36:4	95:4	3	
water	36:4	0:0	4	{
decl	37:8	37:32	4	SchroFrame	*p_schroframe
decl	38:8	38:24	4	picture_t	*p_pic
decl	39:8	39:66	4	int	state
op	39:18	0:0	4	=
call	39:20	39:65	5	schro_decoder_autoparse_wait
arg	39:50	39:65	6	p_sys->p_schro
water	39:50	0:0	7	p_sys
op	39:55	0:0	7	->
water	39:57	0:0	7	p_schro
switch	40:8	94:8	4	(state)
cond	40:16	40:16	5	state
water	40:16	0:0	6	state
stmts	41:8	94:8	5	
water	41:8	0:0	6	{
label	42:8	42:44	6	case SCHRO_DECODER_FIRST_ACCESS_UNIT :
call	43:12	43:34	6	SetVideoFormat
arg	43:28	43:34	7	p_dec
water	43:28	0:0	8	p_dec
water	43:35	0:0	6	;
break	44:12	44:17	6	
label	45:8	45:36	6	case SCHRO_DECODER_NEED_BITS :
return	46:12	46:23	6	NULL
water	46:19	0:0	7	NULL
label	47:8	47:37	6	case SCHRO_DECODER_NEED_FRAME :
water	48:12	0:0	6	p_schroframe
op	48:25	0:0	6	=
call	48:27	48:58	6	CreateSchroFrameFromPic
arg	48:52	48:58	7	p_dec
water	48:52	0:0	8	p_dec
water	48:59	0:0	6	;
if	49:12	53:12	6	(! p_schroframe)
cond	49:16	49:17	7	! p_schroframe
op	49:16	0:0	8	!
water	49:17	0:0	8	p_schroframe
stmts	50:12	53:12	7	
water	50:12	0:0	8	{
call	51:16	51:72	8	msg_Err
arg	51:25	51:30	9	p_dec
water	51:25	0:0	10	p_dec
arg	51:32	51:72	9	"Could not allocate picture for decoder"
water	51:32	0:0	10	"Could not allocate picture for decoder"
water	51:73	0:0	8	;
return	52:16	52:27	8	NULL
water	52:23	0:0	9	NULL
water	53:12	0:0	8	}
call	54:12	54:74	6	schro_decoder_add_output_picture
arg	54:46	54:60	7	p_sys->p_schro
water	54:46	0:0	8	p_sys
op	54:51	0:0	8	->
water	54:53	0:0	8	p_schro
arg	54:62	54:74	7	p_schroframe
water	54:62	0:0	8	p_schroframe
water	54:75	0:0	6	;
break	55:12	55:17	6	
label	56:8	56:29	6	case SCHRO_DECODER_OK :
water	56:31	0:0	6	{
decl	57:12	57:77	6	SchroTag	*p_tag
op	57:28	0:0	6	=
call	57:30	57:76	7	schro_decoder_get_picture_tag
arg	57:61	57:76	8	p_sys->p_schro
water	57:61	0:0	9	p_sys
op	57:66	0:0	9	->
water	57:68	0:0	9	p_schro
water	58:12	0:0	6	p_schroframe
op	58:25	0:0	6	=
call	58:27	58:62	6	schro_decoder_pull
arg	58:47	58:62	7	p_sys->p_schro
water	58:47	0:0	8	p_sys
op	58:52	0:0	8	->
water	58:54	0:0	8	p_schro
water	58:63	0:0	6	;
if	59:12	66:12	6	(! p_schroframe || ! p_schroframe -> priv)
cond	59:16	59:48	7	! p_schroframe || ! p_schroframe -> priv
op	59:16	0:0	8	!
water	59:17	0:0	8	p_schroframe
op	59:30	0:0	8	||
op	59:33	0:0	8	!
water	59:34	0:0	8	p_schroframe
op	59:46	0:0	8	->
water	59:48	0:0	8	priv
stmts	60:12	66:12	7	
water	60:12	0:0	8	{
if	63:16	63:51	8	(p_tag)
cond	63:20	63:20	9	p_tag
water	63:20	0:0	10	p_tag
stmts	63:28	63:51	9	
call	63:28	63:50	10	schro_tag_free
arg	63:44	63:50	11	p_tag
water	63:44	0:0	12	p_tag
water	63:51	0:0	10	;
if	64:16	64:68	8	(p_schroframe)
cond	64:20	64:20	9	p_schroframe
water	64:20	0:0	10	p_schroframe
stmts	64:35	64:68	9	
call	64:35	64:67	10	schro_frame_unref
arg	64:54	64:67	11	p_schroframe
water	64:54	0:0	12	p_schroframe
water	64:68	0:0	10	;
break	65:16	65:21	8	
water	66:12	0:0	8	}
water	67:12	0:0	6	p_pic
op	67:18	0:0	6	=
water	67:20	0:0	6	(
water	67:21	0:0	6	(
water	67:22	0:0	6	struct
water	67:29	0:0	6	picture_free_t
op	67:43	0:0	6	*
water	67:44	0:0	6	)
water	67:46	0:0	6	p_schroframe
op	67:58	0:0	6	->
water	67:60	0:0	6	priv
water	67:64	0:0	6	)
op	67:65	0:0	6	->
water	67:67	0:0	6	p_pic
water	67:72	0:0	6	;
water	68:12	0:0	6	p_schroframe
op	68:24	0:0	6	->
water	68:26	0:0	6	priv
op	68:31	0:0	6	=
water	68:33	0:0	6	NULL
water	68:37	0:0	6	;
if	69:12	74:12	6	(p_tag)
cond	69:16	69:16	7	p_tag
water	69:16	0:0	8	p_tag
stmts	70:12	74:12	7	
water	70:12	0:0	8	{
water	72:16	0:0	8	p_pic
op	72:21	0:0	8	->
water	72:23	0:0	8	date
op	72:28	0:0	8	=
op	72:30	0:0	8	*
water	72:31	0:0	8	(
water	72:32	0:0	8	mtime_t
op	72:39	0:0	8	*
water	72:40	0:0	8	)
water	72:42	0:0	8	p_tag
op	72:47	0:0	8	->
water	72:49	0:0	8	value
water	72:54	0:0	8	;
call	73:16	73:38	8	schro_tag_free
arg	73:32	73:38	9	p_tag
water	73:32	0:0	10	p_tag
water	73:39	0:0	8	;
water	74:12	0:0	8	}
else	75:12	83:12	6
stmts	75:17	83:12	7	
if	75:17	83:12	8	(p_sys -> i_lastpts > VLC_TS_INVALID)
cond	75:21	75:40	9	p_sys -> i_lastpts > VLC_TS_INVALID
water	75:21	0:0	10	p_sys
op	75:26	0:0	10	->
water	75:28	0:0	10	i_lastpts
op	75:38	0:0	10	>
water	75:40	0:0	10	VLC_TS_INVALID
stmts	76:12	83:12	9	
water	76:12	0:0	10	{
water	82:16	0:0	10	p_pic
op	82:21	0:0	10	->
water	82:23	0:0	10	date
op	82:28	0:0	10	=
water	82:30	0:0	10	p_sys
op	82:35	0:0	10	->
water	82:37	0:0	10	i_lastpts
op	82:47	0:0	10	+
water	82:49	0:0	10	p_sys
op	82:54	0:0	10	->
water	82:56	0:0	10	i_frame_pts_delta
water	82:73	0:0	10	;
water	83:12	0:0	10	}
water	84:12	0:0	6	p_sys
op	84:17	0:0	6	->
water	84:19	0:0	6	i_lastpts
op	84:29	0:0	6	=
water	84:31	0:0	6	p_pic
op	84:36	0:0	6	->
water	84:38	0:0	6	date
water	84:42	0:0	6	;
call	85:12	85:44	6	schro_frame_unref
arg	85:31	85:44	7	p_schroframe
water	85:31	0:0	8	p_schroframe
water	85:45	0:0	6	;
return	86:12	86:24	6	p_pic
water	86:19	0:0	7	p_pic
water	87:8	0:0	6	}
label	88:8	88:30	6	case SCHRO_DECODER_EOS :
break	90:12	90:17	6	
label	91:8	91:32	6	case SCHRO_DECODER_ERROR :
call	92:12	92:49	6	msg_Err
arg	92:21	92:26	7	p_dec
water	92:21	0:0	8	p_dec
arg	92:28	92:49	7	"SCHRO_DECODER_ERROR"
water	92:28	0:0	8	"SCHRO_DECODER_ERROR"
water	92:50	0:0	6	;
return	93:12	93:23	6	NULL
water	93:19	0:0	7	NULL
water	94:8	0:0	6	}
water	95:4	0:0	4	}

func	2:0	21:0	0	static void	EsOutDelete
params	2:23	0:0	1	
param	2:25	2:39	2	es_out_t *	out
stmnts	0:0	20:15	1	
decl	4:4	4:36	2	es_out_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	out
op	4:29	0:0	2	->
water	4:31	0:0	2	p_sys
call	5:4	5:61	2	assert
arg	5:12	5:61	3	!p_sys->i_es&&!p_sys->i_pgrm&&!p_sys->p_pgrm
op	5:12	0:0	4	!
water	5:13	0:0	4	p_sys
op	5:18	0:0	4	->
water	5:20	0:0	4	i_es
op	5:25	0:0	4	&&
op	5:28	0:0	4	!
water	5:29	0:0	4	p_sys
op	5:34	0:0	4	->
water	5:36	0:0	4	i_pgrm
op	5:43	0:0	4	&&
op	5:46	0:0	4	!
water	5:47	0:0	4	p_sys
op	5:52	0:0	4	->
water	5:54	0:0	4	p_pgrm
water	5:62	0:0	2	;
if	6:4	11:4	2	(p_sys -> ppsz_audio_language)
cond	6:8	6:15	3	p_sys -> ppsz_audio_language
water	6:8	0:0	4	p_sys
op	6:13	0:0	4	->
water	6:15	0:0	4	ppsz_audio_language
stmts	7:4	11:4	3	
water	7:4	0:0	4	{
for	8:8	9:49	4	( int i = 0 ;p_sys -> ppsz_audio_language [ i ];i ++)
forinit	0:0	8:22	5	 int i = 0 ;
decl	8:13	8:22	6	int	i
op	8:19	0:0	6	=
water	8:21	0:0	6	0
cond	8:24	8:52	5	p_sys -> ppsz_audio_language [ i ]
water	8:24	0:0	6	p_sys
op	8:29	0:0	6	->
water	8:31	0:0	6	ppsz_audio_language
op	8:50	0:0	6	[
water	8:51	0:0	6	i
op	8:52	0:0	6	]
forexpr	8:55	8:56	5	i ++
water	8:55	0:0	6	i
op	8:56	0:0	6	++
stmts	9:12	9:49	5	
call	9:12	9:48	6	free
arg	9:18	9:48	7	p_sys->ppsz_audio_language[i]
water	9:18	0:0	8	p_sys
op	9:23	0:0	8	->
water	9:25	0:0	8	ppsz_audio_language
op	9:44	0:0	8	[
water	9:45	0:0	8	i
op	9:46	0:0	8	]
water	9:49	0:0	6	;
call	10:8	10:41	4	free
arg	10:14	10:41	5	p_sys->ppsz_audio_language
water	10:14	0:0	6	p_sys
op	10:19	0:0	6	->
water	10:21	0:0	6	ppsz_audio_language
water	10:42	0:0	4	;
water	11:4	0:0	4	}
if	12:4	17:4	2	(p_sys -> ppsz_sub_language)
cond	12:8	12:15	3	p_sys -> ppsz_sub_language
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	ppsz_sub_language
stmts	13:4	17:4	3	
water	13:4	0:0	4	{
for	14:8	15:47	4	( int i = 0 ;p_sys -> ppsz_sub_language [ i ];i ++)
forinit	0:0	14:22	5	 int i = 0 ;
decl	14:13	14:22	6	int	i
op	14:19	0:0	6	=
water	14:21	0:0	6	0
cond	14:24	14:50	5	p_sys -> ppsz_sub_language [ i ]
water	14:24	0:0	6	p_sys
op	14:29	0:0	6	->
water	14:31	0:0	6	ppsz_sub_language
op	14:48	0:0	6	[
water	14:49	0:0	6	i
op	14:50	0:0	6	]
forexpr	14:53	14:54	5	i ++
water	14:53	0:0	6	i
op	14:54	0:0	6	++
stmts	15:12	15:47	5	
call	15:12	15:46	6	free
arg	15:18	15:46	7	p_sys->ppsz_sub_language[i]
water	15:18	0:0	8	p_sys
op	15:23	0:0	8	->
water	15:25	0:0	8	ppsz_sub_language
op	15:42	0:0	8	[
water	15:43	0:0	8	i
op	15:44	0:0	8	]
water	15:47	0:0	6	;
call	16:8	16:39	4	free
arg	16:14	16:39	5	p_sys->ppsz_sub_language
water	16:14	0:0	6	p_sys
op	16:19	0:0	6	->
water	16:21	0:0	6	ppsz_sub_language
water	16:40	0:0	4	;
water	17:4	0:0	4	}
call	18:4	18:36	2	vlc_mutex_destroy
arg	18:23	18:36	3	&p_sys->lock
op	18:23	0:0	4	&
water	18:24	0:0	4	p_sys
op	18:29	0:0	4	->
water	18:31	0:0	4	lock
water	18:37	0:0	2	;
call	19:4	19:16	2	free
arg	19:10	19:16	3	p_sys
water	19:10	0:0	4	p_sys
water	19:17	0:0	2	;
call	20:4	20:14	2	free
arg	20:10	20:14	3	out
water	20:10	0:0	4	out
water	20:15	0:0	2	;

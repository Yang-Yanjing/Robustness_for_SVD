func	2:0	118:0	0	static int	OpenAudio
params	2:20	0:0	1	
param	2:22	2:39	2	decoder_t *	p_dec
stmnts	0:0	117:23	1	
decl	4:4	4:24	2	decoder_sys_t	*p_sys
decl	5:4	5:27	2	int	i_error
decl	6:4	6:26	2	char	fcc[4]
decl	7:4	7:36	2	unsigned long	WantedBufferSize
decl	8:4	8:39	2	unsigned long	InputBufferSize
op	8:36	0:0	2	=
water	8:38	0:0	2	0
decl	9:4	9:40	2	unsigned long	OutputBufferSize
op	9:37	0:0	2	=
water	9:39	0:0	2	0
call	11:4	11:30	2	vlc_mutex_lock
arg	11:20	11:30	3	&qt_mutex
op	11:20	0:0	4	&
water	11:21	0:0	4	qt_mutex
water	11:31	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:10	0:0	2	=
call	12:12	12:47	2	calloc
arg	12:20	12:21	3	1
water	12:20	0:0	4	1
arg	12:23	12:47	3	sizeof(decoder_sys_t)
op	12:23	0:0	4	sizeof
water	12:29	0:0	4	(
water	12:31	0:0	4	decoder_sys_t
water	12:45	0:0	4	)
water	12:48	0:0	2	;
water	13:4	0:0	2	p_dec
op	13:9	0:0	2	->
water	13:11	0:0	2	p_sys
op	13:17	0:0	2	=
water	13:19	0:0	2	p_sys
water	13:24	0:0	2	;
water	14:4	0:0	2	p_dec
op	14:9	0:0	2	->
water	14:11	0:0	2	pf_decode_audio
op	14:27	0:0	2	=
water	14:29	0:0	2	DecodeAudio
water	14:40	0:0	2	;
if	15:4	16:58	2	(p_dec -> fmt_in . i_original_fourcc)
cond	15:8	15:22	3	p_dec -> fmt_in . i_original_fourcc
water	15:8	0:0	4	p_dec
op	15:13	0:0	4	->
water	15:15	0:0	4	fmt_in
op	15:21	0:0	4	.
water	15:22	0:0	4	i_original_fourcc
stmts	16:8	16:58	3	
call	16:8	16:57	4	memcpy
arg	16:16	16:19	5	fcc
water	16:16	0:0	6	fcc
arg	16:21	16:53	5	&p_dec->fmt_in.i_original_fourcc
op	16:21	0:0	6	&
water	16:22	0:0	6	p_dec
op	16:27	0:0	6	->
water	16:29	0:0	6	fmt_in
op	16:35	0:0	6	.
water	16:36	0:0	6	i_original_fourcc
arg	16:55	16:57	5	4
water	16:55	0:0	6	4
water	16:58	0:0	4	;
else	17:4	18:48	2
stmts	18:8	18:48	3	
call	18:8	18:47	4	memcpy
arg	18:16	18:19	5	fcc
water	18:16	0:0	6	fcc
arg	18:21	18:43	5	&p_dec->fmt_in.i_codec
op	18:21	0:0	6	&
water	18:22	0:0	6	p_dec
op	18:27	0:0	6	->
water	18:29	0:0	6	fmt_in
op	18:35	0:0	6	.
water	18:36	0:0	6	i_codec
arg	18:45	18:47	5	4
water	18:45	0:0	6	4
water	18:48	0:0	4	;
call	20:4	20:16	2	EnterMovies
water	20:17	0:0	2	;
if	22:4	26:4	2	(QTAudioInit (p_dec ))
cond	22:8	22:27	3	QTAudioInit (p_dec )
call	22:8	22:27	4	QTAudioInit
arg	22:21	22:27	5	p_dec
water	22:21	0:0	6	p_dec
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:46	4	msg_Err
arg	24:17	24:22	5	p_dec
water	24:17	0:0	6	p_dec
arg	24:24	24:46	5	"cannot initialize QT"
water	24:24	0:0	6	"cannot initialize QT"
water	24:47	0:0	4	;
goto	25:8	25:23	4	exit_error
water	25:13	0:0	5	exit_error
water	26:4	0:0	4	}
if	28:4	32:4	2	(( i_error =p_sys -> InitializeQTML (6 + 16 ) ))
cond	28:8	28:52	3	( i_error =p_sys -> InitializeQTML (6 + 16 ) )
water	28:8	0:0	4	(
water	28:10	0:0	4	i_error
op	28:18	0:0	4	=
call	28:20	28:50	4	p_sys->InitializeQTML
arg	28:43	28:50	5	6+16
water	28:43	0:0	6	6
op	28:45	0:0	6	+
water	28:47	0:0	6	16
water	28:52	0:0	4	)
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:64	4	msg_Dbg
arg	30:17	30:22	5	p_dec
water	30:17	0:0	6	p_dec
arg	30:24	30:54	5	"error on InitializeQTML = %d"
water	30:24	0:0	6	"error on InitializeQTML = %d"
arg	30:56	30:64	5	i_error
water	30:56	0:0	6	i_error
water	30:65	0:0	4	;
goto	31:8	31:23	4	exit_error
water	31:13	0:0	5	exit_error
water	32:4	0:0	4	}
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	InputFormatInfo
op	35:26	0:0	2	.
water	35:27	0:0	2	flags
op	35:39	0:0	2	=
water	35:41	0:0	2	0
water	35:42	0:0	2	;
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	InputFormatInfo
op	36:26	0:0	2	.
water	36:27	0:0	2	sampleCount
op	36:39	0:0	2	=
water	36:41	0:0	2	0
water	36:42	0:0	2	;
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	InputFormatInfo
op	37:26	0:0	2	.
water	37:27	0:0	2	buffer
op	37:39	0:0	2	=
water	37:41	0:0	2	NULL
water	37:45	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	InputFormatInfo
op	38:26	0:0	2	.
water	38:27	0:0	2	reserved
op	38:39	0:0	2	=
water	38:41	0:0	2	0
water	38:42	0:0	2	;
water	39:4	0:0	2	p_sys
op	39:9	0:0	2	->
water	39:11	0:0	2	InputFormatInfo
op	39:26	0:0	2	.
water	39:27	0:0	2	numChannels
op	39:39	0:0	2	=
water	39:41	0:0	2	p_dec
op	39:46	0:0	2	->
water	39:48	0:0	2	fmt_in
op	39:54	0:0	2	.
water	39:55	0:0	2	audio
op	39:60	0:0	2	.
water	39:61	0:0	2	i_channels
water	39:71	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	InputFormatInfo
op	40:26	0:0	2	.
water	40:27	0:0	2	sampleSize
op	40:39	0:0	2	=
water	40:41	0:0	2	p_dec
op	40:46	0:0	2	->
water	40:48	0:0	2	fmt_in
op	40:54	0:0	2	.
water	40:55	0:0	2	audio
op	40:60	0:0	2	.
water	40:61	0:0	2	i_bitspersample
water	40:76	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	InputFormatInfo
op	41:26	0:0	2	.
water	41:27	0:0	2	sampleRate
op	41:39	0:0	2	=
water	41:41	0:0	2	p_dec
op	41:46	0:0	2	->
water	41:48	0:0	2	fmt_in
op	41:54	0:0	2	.
water	41:55	0:0	2	audio
op	41:60	0:0	2	.
water	41:61	0:0	2	i_rate
water	41:67	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	InputFormatInfo
op	42:26	0:0	2	.
water	42:27	0:0	2	format
op	42:39	0:0	2	=
call	42:41	42:77	2	FCC
arg	42:46	42:52	3	fcc[0]
water	42:46	0:0	4	fcc
op	42:49	0:0	4	[
water	42:50	0:0	4	0
op	42:51	0:0	4	]
arg	42:54	42:60	3	fcc[1]
water	42:54	0:0	4	fcc
op	42:57	0:0	4	[
water	42:58	0:0	4	1
op	42:59	0:0	4	]
arg	42:62	42:68	3	fcc[2]
water	42:62	0:0	4	fcc
op	42:65	0:0	4	[
water	42:66	0:0	4	2
op	42:67	0:0	4	]
arg	42:70	42:77	3	fcc[3]
water	42:70	0:0	4	fcc
op	42:73	0:0	4	[
water	42:74	0:0	4	3
op	42:75	0:0	4	]
water	42:78	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	OutputFormatInfo
op	44:27	0:0	2	.
water	44:28	0:0	2	flags
op	44:40	0:0	2	=
water	44:42	0:0	2	0
water	44:43	0:0	2	;
water	45:4	0:0	2	p_sys
op	45:9	0:0	2	->
water	45:11	0:0	2	OutputFormatInfo
op	45:27	0:0	2	.
water	45:28	0:0	2	sampleCount
op	45:40	0:0	2	=
water	45:42	0:0	2	0
water	45:43	0:0	2	;
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	OutputFormatInfo
op	46:27	0:0	2	.
water	46:28	0:0	2	buffer
op	46:40	0:0	2	=
water	46:42	0:0	2	NULL
water	46:46	0:0	2	;
water	47:4	0:0	2	p_sys
op	47:9	0:0	2	->
water	47:11	0:0	2	OutputFormatInfo
op	47:27	0:0	2	.
water	47:28	0:0	2	reserved
op	47:40	0:0	2	=
water	47:42	0:0	2	0
water	47:43	0:0	2	;
water	48:4	0:0	2	p_sys
op	48:9	0:0	2	->
water	48:11	0:0	2	OutputFormatInfo
op	48:27	0:0	2	.
water	48:28	0:0	2	numChannels
op	48:40	0:0	2	=
water	48:42	0:0	2	p_dec
op	48:47	0:0	2	->
water	48:49	0:0	2	fmt_in
op	48:55	0:0	2	.
water	48:56	0:0	2	audio
op	48:61	0:0	2	.
water	48:62	0:0	2	i_channels
water	48:72	0:0	2	;
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	OutputFormatInfo
op	49:27	0:0	2	.
water	49:28	0:0	2	sampleSize
op	49:40	0:0	2	=
water	49:42	0:0	2	16
water	49:44	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	OutputFormatInfo
op	50:27	0:0	2	.
water	50:28	0:0	2	sampleRate
op	50:40	0:0	2	=
water	50:42	0:0	2	p_dec
op	50:47	0:0	2	->
water	50:49	0:0	2	fmt_in
op	50:55	0:0	2	.
water	50:56	0:0	2	audio
op	50:61	0:0	2	.
water	50:62	0:0	2	i_rate
water	50:68	0:0	2	;
water	51:4	0:0	2	p_sys
op	51:9	0:0	2	->
water	51:11	0:0	2	OutputFormatInfo
op	51:27	0:0	2	.
water	51:28	0:0	2	format
op	51:40	0:0	2	=
call	51:42	51:66	2	FCC
arg	51:47	51:50	3	'N'
water	51:47	0:0	4	'N'
arg	51:52	51:55	3	'O'
water	51:52	0:0	4	'O'
arg	51:57	51:60	3	'N'
water	51:57	0:0	4	'N'
arg	51:62	51:66	3	'E'
water	51:62	0:0	4	'E'
water	51:67	0:0	2	;
water	52:4	0:0	2	i_error
op	52:12	0:0	2	=
call	52:14	54:61	2	p_sys->SoundConverterOpen
arg	52:41	52:64	3	&p_sys->InputFormatInfo
op	52:41	0:0	4	&
water	52:42	0:0	4	p_sys
op	52:47	0:0	4	->
water	52:49	0:0	4	InputFormatInfo
arg	53:41	53:65	3	&p_sys->OutputFormatInfo
op	53:41	0:0	4	&
water	53:42	0:0	4	p_sys
op	53:47	0:0	4	->
water	53:49	0:0	4	OutputFormatInfo
arg	54:41	54:61	3	&p_sys->myConverter
op	54:41	0:0	4	&
water	54:42	0:0	4	p_sys
op	54:47	0:0	4	->
water	54:49	0:0	4	myConverter
water	54:62	0:0	2	;
if	55:4	59:4	2	(i_error)
cond	55:8	55:8	3	i_error
water	55:8	0:0	4	i_error
stmts	56:4	59:4	3	
water	56:4	0:0	4	{
call	57:8	57:68	4	msg_Err
arg	57:17	57:22	5	p_dec
water	57:17	0:0	6	p_dec
arg	57:24	57:58	5	"error on SoundConverterOpen = %d"
water	57:24	0:0	6	"error on SoundConverterOpen = %d"
arg	57:60	57:68	5	i_error
water	57:60	0:0	6	i_error
water	57:69	0:0	4	;
goto	58:8	58:23	4	exit_error
water	58:13	0:0	5	exit_error
water	59:4	0:0	4	}
water	62:4	0:0	2	i_error
op	62:12	0:0	2	=
call	62:14	63:50	2	SoundConverterSetInfo
arg	62:37	62:55	3	p_dec->myConverter
water	62:37	0:0	4	p_dec
op	62:42	0:0	4	->
water	62:44	0:0	4	myConverter
arg	62:57	62:75	3	siClientAcceptsVBR
water	62:57	0:0	4	siClientAcceptsVBR
arg	63:37	63:50	3	(void*)true
water	63:37	0:0	4	(
water	63:38	0:0	4	void
op	63:43	0:0	4	*
water	63:44	0:0	4	)
water	63:45	0:0	4	true
water	63:51	0:0	2	;
if	65:4	71:4	2	(p_dec -> fmt_in . i_extra > 36 + 8)
cond	65:8	65:37	3	p_dec -> fmt_in . i_extra > 36 + 8
water	65:8	0:0	4	p_dec
op	65:13	0:0	4	->
water	65:15	0:0	4	fmt_in
op	65:21	0:0	4	.
water	65:22	0:0	4	i_extra
op	65:30	0:0	4	>
water	65:32	0:0	4	36
op	65:35	0:0	4	+
water	65:37	0:0	4	8
stmts	66:4	71:4	3	
water	66:4	0:0	4	{
water	67:8	0:0	4	i_error
op	67:16	0:0	4	=
call	67:18	69:91	4	p_sys->SoundConverterSetInfo
arg	67:48	67:66	5	p_sys->myConverter
water	67:48	0:0	6	p_sys
op	67:53	0:0	6	->
water	67:55	0:0	6	myConverter
arg	68:48	68:73	5	FCC('w','a','v','e')
call	68:48	68:72	6	FCC
arg	68:53	68:56	7	'w'
water	68:53	0:0	8	'w'
arg	68:58	68:61	7	'a'
water	68:58	0:0	8	'a'
arg	68:63	68:66	7	'v'
water	68:63	0:0	8	'v'
arg	68:68	68:72	7	'e'
water	68:68	0:0	8	'e'
arg	69:48	69:91	5	((uint8_t*)p_dec->fmt_in.p_extra)+36+8
water	69:48	0:0	6	(
water	69:49	0:0	6	(
water	69:50	0:0	6	uint8_t
op	69:57	0:0	6	*
water	69:58	0:0	6	)
water	69:59	0:0	6	p_dec
op	69:64	0:0	6	->
water	69:66	0:0	6	fmt_in
op	69:72	0:0	6	.
water	69:73	0:0	6	p_extra
water	69:80	0:0	6	)
op	69:82	0:0	6	+
water	69:84	0:0	6	36
op	69:87	0:0	6	+
water	69:89	0:0	6	8
water	69:92	0:0	4	;
call	70:8	70:71	4	msg_Dbg
arg	70:17	70:22	5	p_dec
water	70:17	0:0	6	p_dec
arg	70:24	70:61	5	"error on SoundConverterSetInfo = %d"
water	70:24	0:0	6	"error on SoundConverterSetInfo = %d"
arg	70:63	70:71	5	i_error
water	70:63	0:0	6	i_error
water	70:72	0:0	4	;
water	71:4	0:0	4	}
water	72:4	0:0	2	WantedBufferSize
op	72:21	0:0	2	=
water	72:23	0:0	2	p_sys
op	72:28	0:0	2	->
water	72:30	0:0	2	OutputFormatInfo
op	72:46	0:0	2	.
water	72:47	0:0	2	numChannels
op	72:59	0:0	2	*
water	73:23	0:0	2	p_sys
op	73:28	0:0	2	->
water	73:30	0:0	2	OutputFormatInfo
op	73:46	0:0	2	.
water	73:47	0:0	2	sampleRate
op	73:58	0:0	2	*
water	73:60	0:0	2	2
water	73:61	0:0	2	;
water	74:4	0:0	2	p_sys
op	74:9	0:0	2	->
water	74:11	0:0	2	FramesToGet
op	74:23	0:0	2	=
water	74:25	0:0	2	0
water	74:26	0:0	2	;
water	75:4	0:0	2	i_error
op	75:12	0:0	2	=
call	75:14	79:69	2	p_sys->SoundConverterGetBufferSizes
arg	75:51	75:69	3	p_sys->myConverter
water	75:51	0:0	4	p_sys
op	75:56	0:0	4	->
water	75:58	0:0	4	myConverter
arg	76:51	76:67	3	WantedBufferSize
water	76:51	0:0	4	WantedBufferSize
arg	77:51	77:70	3	&p_sys->FramesToGet
op	77:51	0:0	4	&
water	77:52	0:0	4	p_sys
op	77:57	0:0	4	->
water	77:59	0:0	4	FramesToGet
arg	78:51	78:67	3	&InputBufferSize
op	78:51	0:0	4	&
water	78:52	0:0	4	InputBufferSize
arg	79:51	79:69	3	&OutputBufferSize
op	79:51	0:0	4	&
water	79:52	0:0	4	OutputBufferSize
water	79:70	0:0	2	;
call	80:4	83:32	2	msg_Dbg
arg	80:13	80:18	3	p_dec
water	80:13	0:0	4	p_dec
arg	80:20	81:51	3	"WantedBufferSize=%li InputBufferSize=%li ""OutputBufferSize=%li FramesToGet=%li"
water	80:20	0:0	4	"WantedBufferSize=%li InputBufferSize=%li "
water	81:13	0:0	4	"OutputBufferSize=%li FramesToGet=%li"
arg	82:13	82:29	3	WantedBufferSize
water	82:13	0:0	4	WantedBufferSize
arg	82:31	82:46	3	InputBufferSize
water	82:31	0:0	4	InputBufferSize
arg	82:48	82:64	3	OutputBufferSize
water	82:48	0:0	4	OutputBufferSize
arg	83:13	83:32	3	p_sys->FramesToGet
water	83:13	0:0	4	p_sys
op	83:18	0:0	4	->
water	83:20	0:0	4	FramesToGet
water	83:33	0:0	2	;
water	84:4	0:0	2	p_sys
op	84:9	0:0	2	->
water	84:11	0:0	2	InFrameSize
op	84:24	0:0	2	=
water	84:26	0:0	2	(
water	84:27	0:0	2	InputBufferSize
op	84:43	0:0	2	+
water	84:45	0:0	2	p_sys
op	84:50	0:0	2	->
water	84:52	0:0	2	FramesToGet
op	84:64	0:0	2	-
water	84:66	0:0	2	1
water	84:68	0:0	2	)
op	84:70	0:0	2	/
water	85:28	0:0	2	p_sys
op	85:33	0:0	2	->
water	85:35	0:0	2	FramesToGet
water	85:46	0:0	2	;
water	86:4	0:0	2	p_sys
op	86:9	0:0	2	->
water	86:11	0:0	2	OutFrameSize
op	86:24	0:0	2	=
water	86:26	0:0	2	OutputBufferSize
op	86:43	0:0	2	/
water	86:45	0:0	2	p_sys
op	86:50	0:0	2	->
water	86:52	0:0	2	FramesToGet
water	86:63	0:0	2	;
call	87:4	88:53	2	msg_Dbg
arg	87:13	87:18	3	p_dec
water	87:13	0:0	4	p_dec
arg	87:20	87:41	3	"frame size %d -> %d"
water	87:20	0:0	4	"frame size %d -> %d"
arg	88:13	88:31	3	p_sys->InFrameSize
water	88:13	0:0	4	p_sys
op	88:18	0:0	4	->
water	88:20	0:0	4	InFrameSize
arg	88:33	88:53	3	p_sys->OutFrameSize
water	88:33	0:0	4	p_sys
op	88:38	0:0	4	->
water	88:40	0:0	4	OutFrameSize
water	88:54	0:0	2	;
if	89:4	94:4	2	(( i_error =p_sys -> SoundConverterBeginConversion (p_sys -> myConverter ) ))
cond	89:8	89:75	3	( i_error =p_sys -> SoundConverterBeginConversion (p_sys -> myConverter ) )
water	89:8	0:0	4	(
water	89:9	0:0	4	i_error
op	89:17	0:0	4	=
call	89:19	89:74	4	p_sys->SoundConverterBeginConversion
arg	89:56	89:74	5	p_sys->myConverter
water	89:56	0:0	6	p_sys
op	89:61	0:0	6	->
water	89:63	0:0	6	myConverter
water	89:75	0:0	4	)
stmts	90:4	94:4	3	
water	90:4	0:0	4	{
call	91:8	92:72	4	msg_Err
arg	91:17	91:22	5	p_dec
water	91:17	0:0	6	p_dec
arg	92:17	92:62	5	"error on SoundConverterBeginConversion = %d"
water	92:17	0:0	6	"error on SoundConverterBeginConversion = %d"
arg	92:64	92:72	5	i_error
water	92:64	0:0	6	i_error
water	92:73	0:0	4	;
goto	93:8	93:23	4	exit_error
water	93:13	0:0	5	exit_error
water	94:4	0:0	4	}
call	95:4	95:62	2	es_format_Init
arg	95:20	95:35	3	&p_dec->fmt_out
op	95:20	0:0	4	&
water	95:21	0:0	4	p_dec
op	95:26	0:0	4	->
water	95:28	0:0	4	fmt_out
arg	95:37	95:45	3	AUDIO_ES
water	95:37	0:0	4	AUDIO_ES
arg	95:47	95:62	3	VLC_CODEC_S16N
water	95:47	0:0	4	VLC_CODEC_S16N
water	95:63	0:0	2	;
water	96:4	0:0	2	p_dec
op	96:9	0:0	2	->
water	96:11	0:0	2	fmt_out
op	96:18	0:0	2	.
water	96:19	0:0	2	audio
op	96:24	0:0	2	.
water	96:25	0:0	2	i_rate
op	96:32	0:0	2	=
water	96:34	0:0	2	p_sys
op	96:39	0:0	2	->
water	96:41	0:0	2	OutputFormatInfo
op	96:57	0:0	2	.
water	96:58	0:0	2	sampleRate
water	96:68	0:0	2	;
water	97:4	0:0	2	p_dec
op	97:9	0:0	2	->
water	97:11	0:0	2	fmt_out
op	97:18	0:0	2	.
water	97:19	0:0	2	audio
op	97:24	0:0	2	.
water	97:25	0:0	2	i_channels
op	97:36	0:0	2	=
water	97:38	0:0	2	p_sys
op	97:43	0:0	2	->
water	97:45	0:0	2	OutputFormatInfo
op	97:61	0:0	2	.
water	97:62	0:0	2	numChannels
water	97:73	0:0	2	;
water	98:4	0:0	2	p_dec
op	98:9	0:0	2	->
water	98:11	0:0	2	fmt_out
op	98:18	0:0	2	.
water	98:19	0:0	2	audio
op	98:24	0:0	2	.
water	98:25	0:0	2	i_physical_channels
op	98:45	0:0	2	=
water	99:4	0:0	2	p_dec
op	99:9	0:0	2	->
water	99:11	0:0	2	fmt_out
op	99:18	0:0	2	.
water	99:19	0:0	2	audio
op	99:24	0:0	2	.
water	99:25	0:0	2	i_original_channels
op	99:45	0:0	2	=
water	100:8	0:0	2	pi_channels_maps
op	100:24	0:0	2	[
water	100:25	0:0	2	p_sys
op	100:30	0:0	2	->
water	100:32	0:0	2	OutputFormatInfo
op	100:48	0:0	2	.
water	100:49	0:0	2	numChannels
op	100:60	0:0	2	]
water	100:61	0:0	2	;
call	101:4	101:60	2	date_Init
arg	101:15	101:27	3	&p_sys->date
op	101:15	0:0	4	&
water	101:16	0:0	4	p_sys
op	101:21	0:0	4	->
water	101:23	0:0	4	date
arg	101:29	101:56	3	p_dec->fmt_out.audio.i_rate
water	101:29	0:0	4	p_dec
op	101:34	0:0	4	->
water	101:36	0:0	4	fmt_out
op	101:43	0:0	4	.
water	101:44	0:0	4	audio
op	101:49	0:0	4	.
water	101:50	0:0	4	i_rate
arg	101:58	101:60	3	1
water	101:58	0:0	4	1
water	101:61	0:0	2	;
water	102:4	0:0	2	p_sys
op	102:9	0:0	2	->
water	102:11	0:0	2	i_buffer
op	102:25	0:0	2	=
water	102:27	0:0	2	0
water	102:28	0:0	2	;
water	103:4	0:0	2	p_sys
op	103:9	0:0	2	->
water	103:11	0:0	2	i_buffer_size
op	103:25	0:0	2	=
water	103:27	0:0	2	100
op	103:30	0:0	2	*
water	103:31	0:0	2	1000
water	103:35	0:0	2	;
water	104:4	0:0	2	p_sys
op	104:9	0:0	2	->
water	104:11	0:0	2	p_buffer
op	104:25	0:0	2	=
call	104:27	104:56	2	malloc
arg	104:35	104:56	3	p_sys->i_buffer_size
water	104:35	0:0	4	p_sys
op	104:40	0:0	4	->
water	104:42	0:0	4	i_buffer_size
water	104:57	0:0	2	;
if	105:4	106:23	2	(! p_sys -> p_buffer)
cond	105:8	105:16	3	! p_sys -> p_buffer
op	105:8	0:0	4	!
water	105:9	0:0	4	p_sys
op	105:14	0:0	4	->
water	105:16	0:0	4	p_buffer
stmts	106:8	106:23	3	
goto	106:8	106:23	4	exit_error
water	106:13	0:0	5	exit_error
water	107:4	0:0	2	p_sys
op	107:9	0:0	2	->
water	107:11	0:0	2	i_out
op	107:17	0:0	2	=
water	107:19	0:0	2	0
water	107:20	0:0	2	;
water	108:4	0:0	2	p_sys
op	108:9	0:0	2	->
water	108:11	0:0	2	i_out_frames
op	108:24	0:0	2	=
water	108:26	0:0	2	0
water	108:27	0:0	2	;
call	109:4	109:32	2	vlc_mutex_unlock
arg	109:22	109:32	3	&qt_mutex
op	109:22	0:0	4	&
water	109:23	0:0	4	qt_mutex
water	109:33	0:0	2	;
return	110:4	110:22	2	VLC_SUCCESS
water	110:11	0:0	3	VLC_SUCCESS
label	111:0	111:10	2	exit_error :
call	113:4	113:38	2	Restore_LDT_Keeper
arg	113:24	113:38	3	p_sys->ldt_fs
water	113:24	0:0	4	p_sys
op	113:29	0:0	4	->
water	113:31	0:0	4	ldt_fs
water	113:39	0:0	2	;
call	115:4	115:32	2	vlc_mutex_unlock
arg	115:22	115:32	3	&qt_mutex
op	115:22	0:0	4	&
water	115:23	0:0	4	qt_mutex
water	115:33	0:0	2	;
call	116:4	116:16	2	free
arg	116:10	116:16	3	p_sys
water	116:10	0:0	4	p_sys
water	116:17	0:0	2	;
return	117:4	117:23	2	VLC_EGENERIC
water	117:11	0:0	3	VLC_EGENERIC

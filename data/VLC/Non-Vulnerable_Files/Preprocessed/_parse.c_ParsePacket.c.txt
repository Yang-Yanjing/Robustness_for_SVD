func	2:0	47:0	0	subpicture_t *	ParsePacket
params	2:26	0:0	1	
param	2:28	2:45	2	decoder_t *	p_dec
stmnts	0:0	46:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:23	2	subpicture_t	*p_spu
decl	6:4	6:30	2	subpicture_data_t	spu_data
decl	7:4	7:35	2	spu_properties_t	spu_properties
water	9:4	0:0	2	p_spu
op	9:10	0:0	2	=
call	9:12	9:47	2	decoder_NewSubpicture
arg	9:35	9:40	3	p_dec
water	9:35	0:0	4	p_dec
arg	9:42	9:47	3	NULL
water	9:42	0:0	4	NULL
water	9:48	0:0	2	;
if	10:4	10:28	2	(! p_spu)
cond	10:8	10:9	3	! p_spu
op	10:8	0:0	4	!
water	10:9	0:0	4	p_spu
stmts	10:17	10:28	3	
return	10:17	10:28	4	NULL
water	10:24	0:0	5	NULL
water	11:4	0:0	2	p_spu
op	11:9	0:0	2	->
water	11:11	0:0	2	i_original_picture_width
op	11:36	0:0	2	=
water	12:8	0:0	2	p_dec
op	12:13	0:0	2	->
water	12:15	0:0	2	fmt_in
op	12:21	0:0	2	.
water	12:22	0:0	2	subs
op	12:26	0:0	2	.
water	12:27	0:0	2	spu
op	12:30	0:0	2	.
water	12:31	0:0	2	i_original_frame_width
water	12:53	0:0	2	;
water	13:4	0:0	2	p_spu
op	13:9	0:0	2	->
water	13:11	0:0	2	i_original_picture_height
op	13:37	0:0	2	=
water	14:8	0:0	2	p_dec
op	14:13	0:0	2	->
water	14:15	0:0	2	fmt_in
op	14:21	0:0	2	.
water	14:22	0:0	2	subs
op	14:26	0:0	2	.
water	14:27	0:0	2	spu
op	14:30	0:0	2	.
water	14:31	0:0	2	i_original_frame_height
water	14:54	0:0	2	;
if	16:4	21:4	2	(ParseControlSeq (p_dec ,p_spu ,& spu_data ,& spu_properties ,p_sys -> i_pts ))
cond	16:8	16:80	3	ParseControlSeq (p_dec ,p_spu ,& spu_data ,& spu_properties ,p_sys -> i_pts )
call	16:8	16:80	4	ParseControlSeq
arg	16:25	16:30	5	p_dec
water	16:25	0:0	6	p_dec
arg	16:32	16:37	5	p_spu
water	16:32	0:0	6	p_spu
arg	16:39	16:48	5	&spu_data
op	16:39	0:0	6	&
water	16:40	0:0	6	spu_data
arg	16:50	16:65	5	&spu_properties
op	16:50	0:0	6	&
water	16:51	0:0	6	spu_properties
arg	16:67	16:80	5	p_sys->i_pts
water	16:67	0:0	6	p_sys
op	16:72	0:0	6	->
water	16:74	0:0	6	i_pts
stmts	17:4	21:4	3	
water	17:4	0:0	4	{
call	19:8	19:47	4	decoder_DeleteSubpicture
arg	19:34	19:39	5	p_dec
water	19:34	0:0	6	p_dec
arg	19:41	19:47	5	p_spu
water	19:41	0:0	6	p_spu
water	19:48	0:0	4	;
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
water	21:4	0:0	4	}
water	30:4	0:0	2	spu_data
op	30:12	0:0	2	.
water	30:13	0:0	2	p_data
op	30:20	0:0	2	=
call	30:22	30:83	2	malloc
arg	30:30	30:83	3	sizeof(*spu_data.p_data)*2*2*p_sys->i_rle_size
op	30:30	0:0	4	sizeof
water	30:36	0:0	4	(
op	30:37	0:0	4	*
water	30:38	0:0	4	spu_data
op	30:46	0:0	4	.
water	30:47	0:0	4	p_data
water	30:53	0:0	4	)
op	30:55	0:0	4	*
water	30:57	0:0	4	2
op	30:59	0:0	4	*
water	30:61	0:0	4	2
op	30:63	0:0	4	*
water	30:65	0:0	4	p_sys
op	30:70	0:0	4	->
water	30:72	0:0	4	i_rle_size
water	30:84	0:0	2	;
if	32:4	38:4	2	(ParseRLE (p_dec ,& spu_data ,& spu_properties ))
cond	32:8	32:52	3	ParseRLE (p_dec ,& spu_data ,& spu_properties )
call	32:8	32:52	4	ParseRLE
arg	32:18	32:23	5	p_dec
water	32:18	0:0	6	p_dec
arg	32:25	32:34	5	&spu_data
op	32:25	0:0	6	&
water	32:26	0:0	6	spu_data
arg	32:36	32:52	5	&spu_properties
op	32:36	0:0	6	&
water	32:37	0:0	6	spu_properties
stmts	33:4	38:4	3	
water	33:4	0:0	4	{
call	35:8	35:47	4	decoder_DeleteSubpicture
arg	35:34	35:39	5	p_dec
water	35:34	0:0	6	p_dec
arg	35:41	35:47	5	p_spu
water	35:41	0:0	6	p_spu
water	35:48	0:0	4	;
call	36:8	36:30	4	free
arg	36:14	36:30	5	spu_data.p_data
water	36:14	0:0	6	spu_data
op	36:22	0:0	6	.
water	36:23	0:0	6	p_data
water	36:31	0:0	4	;
return	37:8	37:19	4	NULL
water	37:15	0:0	5	NULL
water	38:4	0:0	4	}
call	40:4	42:58	2	msg_Dbg
arg	40:13	40:18	3	p_dec
water	40:13	0:0	4	p_dec
arg	40:20	40:62	3	"total size: 0x%x, RLE offsets: 0x%x 0x%x"
water	40:20	0:0	4	"total size: 0x%x, RLE offsets: 0x%x 0x%x"
arg	41:13	41:30	3	p_sys->i_spu_size
water	41:13	0:0	4	p_sys
op	41:18	0:0	4	->
water	41:20	0:0	4	i_spu_size
arg	42:13	42:34	3	spu_data.pi_offset[0]
water	42:13	0:0	4	spu_data
op	42:21	0:0	4	.
water	42:22	0:0	4	pi_offset
op	42:31	0:0	4	[
water	42:32	0:0	4	0
op	42:33	0:0	4	]
arg	42:36	42:58	3	spu_data.pi_offset[1]
water	42:36	0:0	4	spu_data
op	42:44	0:0	4	.
water	42:45	0:0	4	pi_offset
op	42:54	0:0	4	[
water	42:55	0:0	4	1
op	42:56	0:0	4	]
water	42:59	0:0	2	;
call	44:4	44:53	2	Render
arg	44:12	44:17	3	p_dec
water	44:12	0:0	4	p_dec
arg	44:19	44:24	3	p_spu
water	44:19	0:0	4	p_spu
arg	44:26	44:35	3	&spu_data
op	44:26	0:0	4	&
water	44:27	0:0	4	spu_data
arg	44:37	44:53	3	&spu_properties
op	44:37	0:0	4	&
water	44:38	0:0	4	spu_properties
water	44:54	0:0	2	;
call	45:4	45:26	2	free
arg	45:10	45:26	3	spu_data.p_data
water	45:10	0:0	4	spu_data
op	45:18	0:0	4	.
water	45:19	0:0	4	p_data
water	45:27	0:0	2	;
return	46:4	46:16	2	p_spu
water	46:11	0:0	3	p_spu

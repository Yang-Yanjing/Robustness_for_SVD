func	2:0	58:0	0	static int	InOpen
params	2:17	0:0	1	
param	2:19	2:40	2	vlc_object_t *	p_this
stmnts	0:0	57:23	1	
decl	4:4	4:46	2	access_t	*p_access
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	access_t
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:40	0:0	2	p_this
decl	5:4	5:23	2	access_sys_t	*p_sys
decl	6:4	6:25	2	char	*psz_arg
water	8:4	0:0	2	STANDARD_READ_ACCESS_INIT
water	9:4	0:0	2	p_sys
op	9:9	0:0	2	->
water	9:11	0:0	2	data
op	9:15	0:0	2	.
water	9:16	0:0	2	fd
op	9:19	0:0	2	=
op	9:21	0:0	2	-
water	9:22	0:0	2	1
water	9:23	0:0	2	;
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	out
op	10:15	0:0	2	=
water	10:17	0:0	2	false
water	10:22	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	directory
op	11:21	0:0	2	=
water	11:23	0:0	2	false
water	11:28	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	size
op	12:16	0:0	2	=
water	12:18	0:0	2	0
water	12:19	0:0	2	;
call	13:4	13:45	2	readTLSMode
arg	13:17	13:22	3	p_sys
water	13:17	0:0	4	p_sys
arg	13:24	13:45	3	p_access->psz_access
water	13:24	0:0	4	p_access
op	13:32	0:0	4	->
water	13:34	0:0	4	psz_access
water	13:46	0:0	2	;
if	14:4	15:23	2	(parseURL (& p_sys -> url ,p_access -> psz_location ,p_sys -> tlsmode ))
cond	14:8	14:70	3	parseURL (& p_sys -> url ,p_access -> psz_location ,p_sys -> tlsmode )
call	14:8	14:70	4	parseURL
arg	14:18	14:29	5	&p_sys->url
op	14:18	0:0	6	&
water	14:19	0:0	6	p_sys
op	14:24	0:0	6	->
water	14:26	0:0	6	url
arg	14:31	14:53	5	p_access->psz_location
water	14:31	0:0	6	p_access
op	14:39	0:0	6	->
water	14:41	0:0	6	psz_location
arg	14:55	14:70	5	p_sys->tlsmode
water	14:55	0:0	6	p_sys
op	14:60	0:0	6	->
water	14:62	0:0	6	tlsmode
stmts	15:8	15:23	3	
goto	15:8	15:23	4	exit_error
water	15:13	0:0	5	exit_error
if	16:4	17:23	2	(Connect (p_this ,p_sys ))
cond	16:8	16:31	3	Connect (p_this ,p_sys )
call	16:8	16:31	4	Connect
arg	16:17	16:23	5	p_this
water	16:17	0:0	6	p_this
arg	16:25	16:31	5	p_sys
water	16:25	0:0	6	p_sys
stmts	17:8	17:23	3	
goto	17:8	17:23	4	exit_error
water	17:13	0:0	5	exit_error
if	19:4	20:31	2	(p_sys -> url . psz_path == NULL)
cond	19:8	19:31	3	p_sys -> url . psz_path == NULL
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	url
op	19:18	0:0	4	.
water	19:19	0:0	4	psz_path
op	19:28	0:0	4	==
water	19:31	0:0	4	NULL
stmts	20:8	20:31	3	
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	directory
op	20:25	0:0	4	=
water	20:27	0:0	4	true
water	20:31	0:0	4	;
else	21:4	23:18	2
stmts	22:4	23:18	3	
if	22:4	23:18	4	(ftp_SendCommand (p_this ,p_sys ,"SIZE %s" ,p_sys -> url . psz_path ) < 0)
cond	22:8	22:75	5	ftp_SendCommand (p_this ,p_sys ,"SIZE %s" ,p_sys -> url . psz_path ) < 0
call	22:8	22:71	6	ftp_SendCommand
arg	22:25	22:31	7	p_this
water	22:25	0:0	8	p_this
arg	22:33	22:38	7	p_sys
water	22:33	0:0	8	p_sys
arg	22:40	22:49	7	"SIZE %s"
water	22:40	0:0	8	"SIZE %s"
arg	22:51	22:71	7	p_sys->url.psz_path
water	22:51	0:0	8	p_sys
op	22:56	0:0	8	->
water	22:58	0:0	8	url
op	22:61	0:0	8	.
water	22:62	0:0	8	psz_path
op	22:73	0:0	6	<
water	22:75	0:0	6	0
stmts	23:8	23:18	5	
goto	23:8	23:18	6	error
water	23:13	0:0	7	error
else	24:4	30:4	2
stmts	25:4	30:4	3	
if	25:4	30:4	4	(ftp_RecvCommand (p_this ,p_sys ,NULL ,& psz_arg ) == 2)
cond	25:9	25:61	5	ftp_RecvCommand (p_this ,p_sys ,NULL ,& psz_arg ) == 2
call	25:9	25:56	6	ftp_RecvCommand
arg	25:26	25:32	7	p_this
water	25:26	0:0	8	p_this
arg	25:34	25:39	7	p_sys
water	25:34	0:0	8	p_sys
arg	25:41	25:45	7	NULL
water	25:41	0:0	8	NULL
arg	25:47	25:56	7	&psz_arg
op	25:47	0:0	8	&
water	25:48	0:0	8	psz_arg
op	25:58	0:0	6	==
water	25:61	0:0	6	2
stmts	26:4	30:4	5	
water	26:4	0:0	6	{
water	27:8	0:0	6	p_sys
op	27:13	0:0	6	->
water	27:15	0:0	6	size
op	27:20	0:0	6	=
call	27:22	27:41	6	atoll
arg	27:29	27:41	7	&psz_arg[4]
op	27:29	0:0	8	&
water	27:30	0:0	8	psz_arg
op	27:37	0:0	8	[
water	27:38	0:0	8	4
op	27:39	0:0	8	]
water	27:42	0:0	6	;
call	28:8	28:22	6	free
arg	28:14	28:22	7	psz_arg
water	28:14	0:0	8	psz_arg
water	28:23	0:0	6	;
call	29:8	29:61	6	msg_Dbg
arg	29:17	29:25	7	p_access
water	29:17	0:0	8	p_access
arg	29:27	29:47	7	"file size: %"PRIu64
water	29:27	0:0	8	"file size: %"
water	29:41	0:0	8	PRIu64
arg	29:49	29:61	7	p_sys->size
water	29:49	0:0	8	p_sys
op	29:54	0:0	8	->
water	29:56	0:0	8	size
water	29:62	0:0	6	;
water	30:4	0:0	6	}
else	31:4	33:18	2
stmts	32:4	33:18	3	
if	32:4	33:18	4	(ftp_SendCommand (p_this ,p_sys ,"CWD %s" ,p_sys -> url . psz_path ) < 0)
cond	32:8	32:74	5	ftp_SendCommand (p_this ,p_sys ,"CWD %s" ,p_sys -> url . psz_path ) < 0
call	32:8	32:70	6	ftp_SendCommand
arg	32:25	32:31	7	p_this
water	32:25	0:0	8	p_this
arg	32:33	32:38	7	p_sys
water	32:33	0:0	8	p_sys
arg	32:40	32:48	7	"CWD %s"
water	32:40	0:0	8	"CWD %s"
arg	32:50	32:70	7	p_sys->url.psz_path
water	32:50	0:0	8	p_sys
op	32:55	0:0	8	->
water	32:57	0:0	8	url
op	32:60	0:0	8	.
water	32:61	0:0	8	psz_path
op	32:72	0:0	6	<
water	32:74	0:0	6	0
stmts	33:8	33:18	5	
goto	33:8	33:18	6	error
water	33:13	0:0	7	error
else	34:4	39:4	2
stmts	35:4	39:4	3	
if	35:4	39:4	4	(ftp_RecvCommand (p_this ,p_sys ,NULL ,NULL ) != 2)
cond	35:8	35:56	5	ftp_RecvCommand (p_this ,p_sys ,NULL ,NULL ) != 2
call	35:8	35:51	6	ftp_RecvCommand
arg	35:25	35:31	7	p_this
water	35:25	0:0	8	p_this
arg	35:33	35:38	7	p_sys
water	35:33	0:0	8	p_sys
arg	35:40	35:44	7	NULL
water	35:40	0:0	8	NULL
arg	35:46	35:51	7	NULL
water	35:46	0:0	8	NULL
op	35:53	0:0	6	!=
water	35:56	0:0	6	2
stmts	36:4	39:4	5	
water	36:4	0:0	6	{
call	37:8	37:60	6	msg_Err
arg	37:17	37:23	7	p_this
water	37:17	0:0	8	p_this
arg	37:25	37:60	7	"file or directory does not exist"
water	37:25	0:0	8	"file or directory does not exist"
water	37:61	0:0	6	;
goto	38:8	38:18	6	error
water	38:13	0:0	7	error
water	39:4	0:0	6	}
else	40:4	41:31	2
stmts	41:8	41:31	3	
water	41:8	0:0	4	p_sys
op	41:13	0:0	4	->
water	41:15	0:0	4	directory
op	41:25	0:0	4	=
water	41:27	0:0	4	true
water	41:31	0:0	4	;
if	43:4	49:4	2	(ftp_StartStream (p_this ,p_sys ,0 ) < 0)
cond	43:8	43:46	3	ftp_StartStream (p_this ,p_sys ,0 ) < 0
call	43:8	43:42	4	ftp_StartStream
arg	43:25	43:31	5	p_this
water	43:25	0:0	6	p_this
arg	43:33	43:38	5	p_sys
water	43:33	0:0	6	p_sys
arg	43:40	43:42	5	0
water	43:40	0:0	6	0
op	43:44	0:0	4	<
water	43:46	0:0	4	0
stmts	44:4	49:4	3	
water	44:4	0:0	4	{
call	45:8	45:48	4	msg_Err
arg	45:17	45:23	5	p_this
water	45:17	0:0	6	p_this
arg	45:25	45:48	5	"cannot retrieve file"
water	45:25	0:0	6	"cannot retrieve file"
water	45:49	0:0	4	;
call	46:8	46:27	4	clearCmdTLS
arg	46:21	46:27	5	p_sys
water	46:21	0:0	6	p_sys
water	46:28	0:0	4	;
call	47:8	47:33	4	net_Close
arg	47:19	47:33	5	p_sys->cmd.fd
water	47:19	0:0	6	p_sys
op	47:24	0:0	6	->
water	47:26	0:0	6	cmd
op	47:29	0:0	6	.
water	47:30	0:0	6	fd
water	47:34	0:0	4	;
goto	48:8	48:23	4	exit_error
water	48:13	0:0	5	exit_error
water	49:4	0:0	4	}
return	50:4	50:22	2	VLC_SUCCESS
water	50:11	0:0	3	VLC_SUCCESS
label	51:0	51:5	2	error :
call	52:4	52:23	2	clearCmdTLS
arg	52:17	52:23	3	p_sys
water	52:17	0:0	4	p_sys
water	52:24	0:0	2	;
call	53:4	53:29	2	net_Close
arg	53:15	53:29	3	p_sys->cmd.fd
water	53:15	0:0	4	p_sys
op	53:20	0:0	4	->
water	53:22	0:0	4	cmd
op	53:25	0:0	4	.
water	53:26	0:0	4	fd
water	53:30	0:0	2	;
label	54:0	54:10	2	exit_error :
call	55:4	55:30	2	vlc_UrlClean
arg	55:18	55:30	3	&p_sys->url
op	55:18	0:0	4	&
water	55:19	0:0	4	p_sys
op	55:24	0:0	4	->
water	55:26	0:0	4	url
water	55:31	0:0	2	;
call	56:4	56:16	2	free
arg	56:10	56:16	3	p_sys
water	56:10	0:0	4	p_sys
water	56:17	0:0	2	;
return	57:4	57:23	2	VLC_EGENERIC
water	57:11	0:0	3	VLC_EGENERIC

func	1:0	83:0	0	static xcb_xv_query_image_attributes_reply_t *	FindFormat
params	2:11	0:0	1	
param	2:12	2:29	2	vlc_object_t *	obj
param	2:31	2:53	2	xcb_connection_t *	conn
param	2:55	2:74	2	video_format_t *	fmt
param	3:12	3:42	2	const xcb_xv_adaptor_info_t *	a
param	3:44	3:57	2	uint32_t *	idp
stmnts	0:0	82:15	1	
decl	6:4	6:23	2	vlc_fourcc_t	tab[7]
decl	7:4	7:37	2	const vlc_fourcc_t	*chromav
op	7:32	0:0	2	=
water	7:34	0:0	2	tab
decl	8:4	8:70	2	vlc_fourcc_t	chroma
op	8:24	0:0	2	=
call	8:26	8:69	3	var_InheritInteger
arg	8:46	8:49	4	obj
water	8:46	0:0	5	obj
arg	8:51	8:69	4	"xvideo-format-id"
water	8:51	0:0	5	"xvideo-format-id"
if	9:4	13:4	2	(chroma != 0)
cond	9:8	9:18	3	chroma != 0
water	9:8	0:0	4	chroma
op	9:15	0:0	4	!=
water	9:18	0:0	4	0
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	tab
op	11:11	0:0	4	[
water	11:12	0:0	4	0
op	11:13	0:0	4	]
op	11:15	0:0	4	=
water	11:17	0:0	4	chroma
water	11:23	0:0	4	;
water	12:8	0:0	4	tab
op	12:11	0:0	4	[
water	12:12	0:0	4	1
op	12:13	0:0	4	]
op	12:15	0:0	4	=
water	12:17	0:0	4	0
water	12:18	0:0	4	;
water	13:4	0:0	4	}
else	14:4	17:4	2
stmts	14:9	17:4	3	
if	14:9	17:4	4	(vlc_fourcc_IsYUV (fmt -> i_chroma ))
cond	14:13	14:44	5	vlc_fourcc_IsYUV (fmt -> i_chroma )
call	14:13	14:44	6	vlc_fourcc_IsYUV
arg	14:31	14:44	7	fmt->i_chroma
water	14:31	0:0	8	fmt
op	14:34	0:0	8	->
water	14:36	0:0	8	i_chroma
stmts	15:4	17:4	5	
water	15:4	0:0	6	{
water	16:8	0:0	6	chromav
op	16:16	0:0	6	=
call	16:18	16:58	6	vlc_fourcc_GetYUVFallback
arg	16:45	16:58	7	fmt->i_chroma
water	16:45	0:0	8	fmt
op	16:48	0:0	8	->
water	16:50	0:0	8	i_chroma
water	16:59	0:0	6	;
water	17:4	0:0	6	}
else	18:4	27:4	2
stmts	19:4	27:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	tab
op	20:11	0:0	4	[
water	20:12	0:0	4	0
op	20:13	0:0	4	]
op	20:15	0:0	4	=
water	20:17	0:0	4	fmt
op	20:20	0:0	4	->
water	20:22	0:0	4	i_chroma
water	20:30	0:0	4	;
water	21:8	0:0	4	tab
op	21:11	0:0	4	[
water	21:12	0:0	4	1
op	21:13	0:0	4	]
op	21:15	0:0	4	=
water	21:17	0:0	4	VLC_CODEC_RGB32
water	21:32	0:0	4	;
water	22:8	0:0	4	tab
op	22:11	0:0	4	[
water	22:12	0:0	4	2
op	22:13	0:0	4	]
op	22:15	0:0	4	=
water	22:17	0:0	4	VLC_CODEC_RGB24
water	22:32	0:0	4	;
water	23:8	0:0	4	tab
op	23:11	0:0	4	[
water	23:12	0:0	4	3
op	23:13	0:0	4	]
op	23:15	0:0	4	=
water	23:17	0:0	4	VLC_CODEC_RGB16
water	23:32	0:0	4	;
water	24:8	0:0	4	tab
op	24:11	0:0	4	[
water	24:12	0:0	4	4
op	24:13	0:0	4	]
op	24:15	0:0	4	=
water	24:17	0:0	4	VLC_CODEC_RGB15
water	24:32	0:0	4	;
water	25:8	0:0	4	tab
op	25:11	0:0	4	[
water	25:12	0:0	4	5
op	25:13	0:0	4	]
op	25:15	0:0	4	=
water	25:17	0:0	4	VLC_CODEC_YUYV
water	25:31	0:0	4	;
water	26:8	0:0	4	tab
op	26:11	0:0	4	[
water	26:12	0:0	4	6
op	26:13	0:0	4	]
op	26:15	0:0	4	=
water	26:17	0:0	4	0
water	26:18	0:0	4	;
water	27:4	0:0	4	}
decl	29:4	31:63	2	xcb_xv_list_image_formats_reply_t	*list
op	29:44	0:0	2	=
call	30:8	31:62	3	xcb_xv_list_image_formats_reply
arg	30:41	30:45	4	conn
water	30:41	0:0	5	conn
arg	31:12	31:56	4	xcb_xv_list_image_formats(conn,a->base_id)
call	31:12	31:55	5	xcb_xv_list_image_formats
arg	31:39	31:43	6	conn
water	31:39	0:0	7	conn
arg	31:45	31:55	6	a->base_id
water	31:45	0:0	7	a
op	31:46	0:0	7	->
water	31:48	0:0	7	base_id
arg	31:58	31:62	4	NULL
water	31:58	0:0	5	NULL
if	32:4	33:19	2	(list == NULL)
cond	32:8	32:16	3	list == NULL
water	32:8	0:0	4	list
op	32:13	0:0	4	==
water	32:16	0:0	4	NULL
stmts	33:8	33:19	3	
return	33:8	33:19	4	NULL
water	33:15	0:0	5	NULL
decl	35:4	35:54	2	xcb_xv_query_image_attributes_reply_t	*attr
op	35:48	0:0	2	=
water	35:50	0:0	2	NULL
water	36:4	0:0	2	unsigned
water	36:13	0:0	2	rank
op	36:18	0:0	2	=
water	36:20	0:0	2	UINT_MAX
water	36:28	0:0	2	;
for	37:4	80:4	2	( const xcb_xv_image_format_info_t * f =xcb_xv_list_image_formats_format (list ) ,* f_end = f +xcb_xv_list_image_formats_format_length (list ) ;f < f_end;f ++)
forinit	0:0	40:63	3	 const xcb_xv_image_format_info_t * f =xcb_xv_list_image_formats_format (list ) ,* f_end = f +xcb_xv_list_image_formats_format_length (list ) ;
decl	37:9	40:63	4	const xcb_xv_image_format_info_t	*f
op	37:45	0:0	4	=
call	38:13	38:51	5	xcb_xv_list_image_formats_format
arg	38:47	38:51	6	list
water	38:47	0:0	7	list
water	38:52	0:0	4	,
decl	37:9	40:63	4	const xcb_xv_image_format_info_t	*f_end
op	39:49	0:0	4	=
water	40:13	0:0	4	f
op	40:15	0:0	4	+
call	40:17	40:62	5	xcb_xv_list_image_formats_format_length
arg	40:58	40:62	6	list
water	40:58	0:0	7	list
cond	41:9	41:13	3	f < f_end
water	41:9	0:0	4	f
op	41:11	0:0	4	<
water	41:13	0:0	4	f_end
forexpr	42:9	42:10	3	f ++
water	42:9	0:0	4	f
op	42:10	0:0	4	++
stmts	43:4	80:4	3	
water	43:4	0:0	4	{
water	44:8	0:0	4	chroma
op	44:15	0:0	4	=
call	44:17	44:36	4	ParseFormat
arg	44:30	44:33	5	obj
water	44:30	0:0	6	obj
arg	44:35	44:36	5	f
water	44:35	0:0	6	f
water	44:37	0:0	4	;
if	45:8	46:20	4	(chroma == 0)
cond	45:12	45:22	5	chroma == 0
water	45:12	0:0	6	chroma
op	45:19	0:0	6	==
water	45:22	0:0	6	0
stmts	46:12	46:20	5	
continue	46:12	46:20	6	
if	48:8	54:8	4	(( chroma == VLC_CODEC_I420 || chroma == VLC_CODEC_YV12 ) && a -> name_size >= 4 && !memcmp ("OMAP" ,xcb_xv_adaptor_info_name (a ) ,4 ))
cond	48:12	50:60	5	( chroma == VLC_CODEC_I420 || chroma == VLC_CODEC_YV12 ) && a -> name_size >= 4 && !memcmp ("OMAP" ,xcb_xv_adaptor_info_name (a ) ,4 )
water	48:12	0:0	6	(
water	48:13	0:0	6	chroma
op	48:20	0:0	6	==
water	48:23	0:0	6	VLC_CODEC_I420
op	48:38	0:0	6	||
water	48:41	0:0	6	chroma
op	48:48	0:0	6	==
water	48:51	0:0	6	VLC_CODEC_YV12
water	48:65	0:0	6	)
op	49:9	0:0	6	&&
water	49:12	0:0	6	a
op	49:13	0:0	6	->
water	49:15	0:0	6	name_size
op	49:25	0:0	6	>=
water	49:28	0:0	6	4
op	50:9	0:0	6	&&
op	50:12	0:0	6	!
call	50:13	50:60	6	memcmp
arg	50:21	50:27	7	"OMAP"
water	50:21	0:0	8	"OMAP"
arg	50:29	50:57	7	xcb_xv_adaptor_info_name(a)
call	50:29	50:56	8	xcb_xv_adaptor_info_name
arg	50:55	50:56	9	a
water	50:55	0:0	10	a
arg	50:59	50:60	7	4
water	50:59	0:0	8	4
stmts	51:8	54:8	5	
water	51:8	0:0	6	{
call	52:12	52:53	6	msg_Dbg
arg	52:21	52:24	7	obj
water	52:21	0:0	8	obj
arg	52:26	52:53	7	"skipping slow I420 format"
water	52:26	0:0	8	"skipping slow I420 format"
water	52:54	0:0	6	;
continue	53:12	53:20	6	
water	54:8	0:0	6	}
if	55:8	56:20	4	(!BetterFormat (chroma ,chromav ,& rank ))
cond	55:12	55:49	5	!BetterFormat (chroma ,chromav ,& rank )
op	55:12	0:0	6	!
call	55:13	55:49	6	BetterFormat
arg	55:27	55:33	7	chroma
water	55:27	0:0	8	chroma
arg	55:35	55:42	7	chromav
water	55:35	0:0	8	chromav
arg	55:44	55:49	7	&rank
op	55:44	0:0	8	&
water	55:45	0:0	8	rank
stmts	56:12	56:20	5	
continue	56:12	56:20	6	
decl	57:8	57:48	4	xcb_xv_query_image_attributes_reply_t	*i
water	58:8	0:0	4	i
op	58:10	0:0	4	=
call	58:12	61:71	4	xcb_xv_query_image_attributes_reply
arg	58:49	58:53	5	conn
water	58:49	0:0	6	conn
arg	59:12	61:65	5	xcb_xv_query_image_attributes(conn,a->base_id,f->id,fmt->i_visible_width,fmt->i_visible_height)
call	59:12	61:64	6	xcb_xv_query_image_attributes
arg	59:43	59:47	7	conn
water	59:43	0:0	8	conn
arg	59:49	59:59	7	a->base_id
water	59:49	0:0	8	a
op	59:50	0:0	8	->
water	59:52	0:0	8	base_id
arg	59:61	59:66	7	f->id
water	59:61	0:0	8	f
op	59:62	0:0	8	->
water	59:64	0:0	8	id
arg	60:43	60:63	7	fmt->i_visible_width
water	60:43	0:0	8	fmt
op	60:46	0:0	8	->
water	60:48	0:0	8	i_visible_width
arg	61:43	61:64	7	fmt->i_visible_height
water	61:43	0:0	8	fmt
op	61:46	0:0	8	->
water	61:48	0:0	8	i_visible_height
arg	61:67	61:71	5	NULL
water	61:67	0:0	6	NULL
water	61:72	0:0	4	;
if	62:8	63:20	4	(i == NULL)
cond	62:12	62:17	5	i == NULL
water	62:12	0:0	6	i
op	62:14	0:0	6	==
water	62:17	0:0	6	NULL
stmts	63:12	63:20	5	
continue	63:12	63:20	6	
water	64:8	0:0	4	fmt
op	64:11	0:0	4	->
water	64:13	0:0	4	i_chroma
op	64:22	0:0	4	=
water	64:24	0:0	4	chroma
water	64:30	0:0	4	;
water	65:8	0:0	4	fmt
op	65:11	0:0	4	->
water	65:13	0:0	4	i_x_offset
op	65:24	0:0	4	=
water	65:26	0:0	4	0
water	65:27	0:0	4	;
water	66:8	0:0	4	fmt
op	66:11	0:0	4	->
water	66:13	0:0	4	i_y_offset
op	66:24	0:0	4	=
water	66:26	0:0	4	0
water	66:27	0:0	4	;
water	67:8	0:0	4	fmt
op	67:11	0:0	4	->
water	67:13	0:0	4	i_width
op	67:21	0:0	4	=
water	67:23	0:0	4	i
op	67:24	0:0	4	->
water	67:26	0:0	4	width
water	67:31	0:0	4	;
water	68:8	0:0	4	fmt
op	68:11	0:0	4	->
water	68:13	0:0	4	i_height
op	68:22	0:0	4	=
water	68:24	0:0	4	i
op	68:25	0:0	4	->
water	68:27	0:0	4	height
water	68:33	0:0	4	;
if	69:8	74:8	4	(f -> type == XCB_XV_IMAGE_FORMAT_INFO_TYPE_RGB)
cond	69:12	69:23	5	f -> type == XCB_XV_IMAGE_FORMAT_INFO_TYPE_RGB
water	69:12	0:0	6	f
op	69:13	0:0	6	->
water	69:15	0:0	6	type
op	69:20	0:0	6	==
water	69:23	0:0	6	XCB_XV_IMAGE_FORMAT_INFO_TYPE_RGB
stmts	70:8	74:8	5	
water	70:8	0:0	6	{
water	71:12	0:0	6	fmt
op	71:15	0:0	6	->
water	71:17	0:0	6	i_rmask
op	71:25	0:0	6	=
water	71:27	0:0	6	f
op	71:28	0:0	6	->
water	71:30	0:0	6	red_mask
water	71:38	0:0	6	;
water	72:12	0:0	6	fmt
op	72:15	0:0	6	->
water	72:17	0:0	6	i_gmask
op	72:25	0:0	6	=
water	72:27	0:0	6	f
op	72:28	0:0	6	->
water	72:30	0:0	6	green_mask
water	72:40	0:0	6	;
water	73:12	0:0	6	fmt
op	73:15	0:0	6	->
water	73:17	0:0	6	i_bmask
op	73:25	0:0	6	=
water	73:27	0:0	6	f
op	73:28	0:0	6	->
water	73:30	0:0	6	blue_mask
water	73:39	0:0	6	;
water	74:8	0:0	6	}
op	75:8	0:0	4	*
water	75:9	0:0	4	idp
op	75:13	0:0	4	=
water	75:15	0:0	4	f
op	75:16	0:0	4	->
water	75:18	0:0	4	id
water	75:20	0:0	4	;
call	76:8	76:18	4	free
arg	76:14	76:18	5	attr
water	76:14	0:0	6	attr
water	76:19	0:0	4	;
water	77:8	0:0	4	attr
op	77:13	0:0	4	=
water	77:15	0:0	4	i
water	77:16	0:0	4	;
if	78:8	79:17	4	(rank == 0)
cond	78:12	78:20	5	rank == 0
water	78:12	0:0	6	rank
op	78:17	0:0	6	==
water	78:20	0:0	6	0
stmts	79:12	79:17	5	
break	79:12	79:17	6	
water	80:4	0:0	4	}
call	81:4	81:14	2	free
arg	81:10	81:14	3	list
water	81:10	0:0	4	list
water	81:15	0:0	2	;
return	82:4	82:15	2	attr
water	82:11	0:0	3	attr

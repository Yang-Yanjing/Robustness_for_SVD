func	2:0	33:0	0	static int	string_to_IV
params	2:23	0:0	1	
param	2:24	2:41	2	char *	string_hexa
param	2:43	2:69	2	uint8_t	iv[AES_BLOCK_SIZE]
stmnts	4:4	32:22	1	
water	4:4	0:0	2	unsigned
water	4:13	0:0	2	long
water	4:18	0:0	2	long
water	4:23	0:0	2	iv_hi
water	4:28	0:0	2	,
water	4:30	0:0	2	iv_lo
water	4:35	0:0	2	;
decl	5:4	5:20	2	char	*end
op	5:14	0:0	2	=
water	5:16	0:0	2	NULL
if	6:4	7:27	2	(* string_hexa ++ != '0')
cond	6:8	6:26	3	* string_hexa ++ != '0'
op	6:8	0:0	4	*
water	6:9	0:0	4	string_hexa
op	6:20	0:0	4	++
op	6:23	0:0	4	!=
water	6:26	0:0	4	'0'
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
if	8:4	9:27	2	(* string_hexa != 'x' && * string_hexa != 'X')
cond	8:8	8:47	3	* string_hexa != 'x' && * string_hexa != 'X'
op	8:8	0:0	4	*
water	8:9	0:0	4	string_hexa
op	8:21	0:0	4	!=
water	8:24	0:0	4	'x'
op	8:28	0:0	4	&&
op	8:31	0:0	4	*
water	8:32	0:0	4	string_hexa
op	8:44	0:0	4	!=
water	8:47	0:0	4	'X'
stmts	9:8	9:27	3	
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
water	10:4	0:0	2	string_hexa
op	10:15	0:0	2	++
water	10:17	0:0	2	;
decl	11:4	11:36	2	size_t	len
op	11:15	0:0	2	=
call	11:17	11:35	3	strlen
arg	11:24	11:35	4	string_hexa
water	11:24	0:0	5	string_hexa
if	12:4	17:4	2	(len <= 16)
cond	12:8	12:15	3	len <= 16
water	12:8	0:0	4	len
op	12:12	0:0	4	<=
water	12:15	0:0	4	16
stmts	12:19	17:4	3	
water	12:19	0:0	4	{
water	13:8	0:0	4	iv_hi
op	13:14	0:0	4	=
water	13:16	0:0	4	0
water	13:17	0:0	4	;
water	14:8	0:0	4	iv_lo
op	14:14	0:0	4	=
call	14:16	14:46	4	strtoull
arg	14:25	14:36	5	string_hexa
water	14:25	0:0	6	string_hexa
arg	14:38	14:42	5	&end
op	14:38	0:0	6	&
water	14:39	0:0	6	end
arg	14:44	14:46	5	16
water	14:44	0:0	6	16
water	14:47	0:0	4	;
if	15:8	16:31	4	(* end)
cond	15:12	15:13	5	* end
op	15:12	0:0	6	*
water	15:13	0:0	6	end
stmts	16:12	16:31	5	
return	16:12	16:31	6	VLC_EGENERIC
water	16:19	0:0	7	VLC_EGENERIC
water	17:4	0:0	4	}
else	17:6	25:4	2
stmts	17:11	25:4	3	
water	17:11	0:0	4	{
water	18:8	0:0	4	iv_lo
op	18:14	0:0	4	=
call	18:16	18:55	4	strtoull
arg	18:25	18:45	5	&string_hexa[len-16]
op	18:25	0:0	6	&
water	18:26	0:0	6	string_hexa
op	18:37	0:0	6	[
water	18:38	0:0	6	len
op	18:41	0:0	6	-
water	18:42	0:0	6	16
op	18:44	0:0	6	]
arg	18:47	18:51	5	&end
op	18:47	0:0	6	&
water	18:48	0:0	6	end
arg	18:53	18:55	5	16
water	18:53	0:0	6	16
water	18:56	0:0	4	;
if	19:8	20:31	4	(* end)
cond	19:12	19:13	5	* end
op	19:12	0:0	6	*
water	19:13	0:0	6	end
stmts	20:12	20:31	5	
return	20:12	20:31	6	VLC_EGENERIC
water	20:19	0:0	7	VLC_EGENERIC
water	21:8	0:0	4	string_hexa
op	21:19	0:0	4	[
water	21:20	0:0	4	len
op	21:23	0:0	4	-
water	21:24	0:0	4	16
op	21:26	0:0	4	]
op	21:28	0:0	4	=
water	21:30	0:0	4	'\0'
water	21:34	0:0	4	;
water	22:8	0:0	4	iv_hi
op	22:14	0:0	4	=
call	22:16	22:46	4	strtoull
arg	22:25	22:36	5	string_hexa
water	22:25	0:0	6	string_hexa
arg	22:38	22:42	5	&end
op	22:38	0:0	6	&
water	22:39	0:0	6	end
arg	22:44	22:46	5	16
water	22:44	0:0	6	16
water	22:47	0:0	4	;
if	23:8	24:31	4	(* end)
cond	23:12	23:13	5	* end
op	23:12	0:0	6	*
water	23:13	0:0	6	end
stmts	24:12	24:31	5	
return	24:12	24:31	6	VLC_EGENERIC
water	24:19	0:0	7	VLC_EGENERIC
water	25:4	0:0	4	}
for	26:4	31:4	2	( int i = 7 ;i >= 0;-- i)
forinit	0:0	26:18	3	 int i = 7 ;
decl	26:9	26:18	4	int	i
op	26:15	0:0	4	=
water	26:17	0:0	4	7
cond	26:20	26:25	3	i >= 0
water	26:20	0:0	4	i
op	26:22	0:0	4	>=
water	26:25	0:0	4	0
forexpr	26:29	26:31	3	-- i
op	26:29	0:0	4	--
water	26:31	0:0	4	i
stmts	26:34	31:4	3	
water	26:34	0:0	4	{
water	27:8	0:0	4	iv
op	27:10	0:0	4	[
water	27:13	0:0	4	i
op	27:14	0:0	4	]
op	27:16	0:0	4	=
water	27:18	0:0	4	iv_hi
op	27:24	0:0	4	&
water	27:26	0:0	4	0
water	27:27	0:0	4	xff
water	27:30	0:0	4	;
water	28:8	0:0	4	iv
op	28:10	0:0	4	[
water	28:11	0:0	4	8
op	28:12	0:0	4	+
water	28:13	0:0	4	i
op	28:14	0:0	4	]
op	28:16	0:0	4	=
water	28:18	0:0	4	iv_lo
op	28:24	0:0	4	&
water	28:26	0:0	4	0
water	28:27	0:0	4	xff
water	28:30	0:0	4	;
water	29:8	0:0	4	iv_hi
op	29:14	0:0	4	>>=
water	29:18	0:0	4	8
water	29:19	0:0	4	;
water	30:8	0:0	4	iv_lo
op	30:14	0:0	4	>>=
water	30:18	0:0	4	8
water	30:19	0:0	4	;
water	31:4	0:0	4	}
return	32:4	32:22	2	VLC_SUCCESS
water	32:11	0:0	3	VLC_SUCCESS

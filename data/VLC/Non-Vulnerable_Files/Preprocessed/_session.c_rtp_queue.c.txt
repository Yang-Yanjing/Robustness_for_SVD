func	1:0	124:0	0	void	rtp_queue
params	2:10	0:0	1	
param	2:11	2:25	2	demux_t *	demux
param	2:27	2:49	2	rtp_session_t *	session
param	2:51	2:65	2	block_t *	block
stmnts	0:0	123:25	1	
decl	4:4	4:37	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	demux
op	4:30	0:0	2	->
water	4:32	0:0	2	p_sys
if	6:4	7:17	2	(block -> i_buffer < 12)
cond	6:8	6:26	3	block -> i_buffer < 12
water	6:8	0:0	4	block
op	6:13	0:0	4	->
water	6:15	0:0	4	i_buffer
op	6:24	0:0	4	<
water	6:26	0:0	4	12
stmts	7:8	7:17	3	
goto	7:8	7:17	4	drop
water	7:13	0:0	5	drop
if	8:4	9:17	2	(( block -> p_buffer [ 0 ] >> 6 ) != 2)
cond	8:8	8:38	3	( block -> p_buffer [ 0 ] >> 6 ) != 2
water	8:8	0:0	4	(
water	8:9	0:0	4	block
op	8:14	0:0	4	->
water	8:16	0:0	4	p_buffer
op	8:24	0:0	4	[
water	8:25	0:0	4	0
op	8:26	0:0	4	]
op	8:28	0:0	4	>>
water	8:31	0:0	4	6
water	8:33	0:0	4	)
op	8:35	0:0	4	!=
water	8:38	0:0	4	2
stmts	9:8	9:17	3	
goto	9:8	9:17	4	drop
water	9:13	0:0	5	drop
if	11:4	17:4	2	(block -> p_buffer [ 0 ] & 0 x20)
cond	11:8	11:30	3	block -> p_buffer [ 0 ] & 0 x20
water	11:8	0:0	4	block
op	11:13	0:0	4	->
water	11:15	0:0	4	p_buffer
op	11:23	0:0	4	[
water	11:24	0:0	4	0
op	11:25	0:0	4	]
op	11:27	0:0	4	&
water	11:29	0:0	4	0
water	11:30	0:0	4	x20
stmts	12:4	17:4	3	
water	12:4	0:0	4	{
decl	13:8	13:62	4	uint8_t	padding
op	13:24	0:0	4	=
water	13:26	0:0	4	block
op	13:31	0:0	4	->
water	13:33	0:0	4	p_buffer
op	13:41	0:0	4	[
water	13:42	0:0	4	block
op	13:47	0:0	4	->
water	13:49	0:0	4	i_buffer
op	13:58	0:0	4	-
water	13:60	0:0	4	1
op	13:61	0:0	4	]
if	14:8	15:21	4	(( padding == 0 ) || ( block -> i_buffer < ( 12 u + padding ) ))
cond	14:12	14:64	5	( padding == 0 ) || ( block -> i_buffer < ( 12 u + padding ) )
water	14:12	0:0	6	(
water	14:13	0:0	6	padding
op	14:21	0:0	6	==
water	14:24	0:0	6	0
water	14:25	0:0	6	)
op	14:27	0:0	6	||
water	14:30	0:0	6	(
water	14:31	0:0	6	block
op	14:36	0:0	6	->
water	14:38	0:0	6	i_buffer
op	14:47	0:0	6	<
water	14:49	0:0	6	(
water	14:50	0:0	6	12
water	14:52	0:0	6	u
op	14:54	0:0	6	+
water	14:56	0:0	6	padding
water	14:63	0:0	6	)
water	14:64	0:0	6	)
stmts	15:12	15:21	5	
goto	15:12	15:21	6	drop
water	15:17	0:0	7	drop
water	16:8	0:0	4	block
op	16:13	0:0	4	->
water	16:15	0:0	4	i_buffer
op	16:24	0:0	4	-=
water	16:27	0:0	4	padding
water	16:34	0:0	4	;
water	17:4	0:0	4	}
decl	18:4	18:33	2	mtime_t	now
op	18:23	0:0	2	=
call	18:25	18:32	3	mdate
decl	19:4	19:30	2	rtp_source_t	*src
op	19:24	0:0	2	=
water	19:26	0:0	2	NULL
decl	20:4	20:41	2	const uint16_t	seq
op	20:24	0:0	2	=
call	20:26	20:40	3	rtp_seq
arg	20:35	20:40	4	block
water	20:35	0:0	5	block
decl	21:4	21:55	2	const uint32_t	ssrc
op	21:24	0:0	2	=
call	21:26	21:54	3	GetDWBE
arg	21:35	21:54	4	block->p_buffer+8
water	21:35	0:0	5	block
op	21:40	0:0	5	->
water	21:42	0:0	5	p_buffer
op	21:51	0:0	5	+
water	21:53	0:0	5	8
for	23:4	38:4	2	(unsigned i = 0 , max = session -> srcc ;i < max;i ++)
forinit	23:9	23:44	3	unsigned i = 0 , max = session -> srcc ;
water	23:9	0:0	4	unsigned
water	23:18	0:0	4	i
op	23:20	0:0	4	=
water	23:22	0:0	4	0
water	23:23	0:0	4	,
water	23:25	0:0	4	max
op	23:29	0:0	4	=
water	23:31	0:0	4	session
op	23:38	0:0	4	->
water	23:40	0:0	4	srcc
water	23:44	0:0	4	;
cond	23:46	23:50	3	i < max
water	23:46	0:0	4	i
op	23:48	0:0	4	<
water	23:50	0:0	4	max
forexpr	23:55	23:56	3	i ++
water	23:55	0:0	4	i
op	23:56	0:0	4	++
stmts	24:4	38:4	3	
water	24:4	0:0	4	{
decl	25:8	25:44	4	rtp_source_t	*tmp
op	25:26	0:0	4	=
water	25:28	0:0	4	session
op	25:35	0:0	4	->
water	25:37	0:0	4	srcv
op	25:41	0:0	4	[
water	25:42	0:0	4	i
op	25:43	0:0	4	]
if	26:8	30:8	4	(tmp -> ssrc == ssrc)
cond	26:12	26:25	5	tmp -> ssrc == ssrc
water	26:12	0:0	6	tmp
op	26:15	0:0	6	->
water	26:17	0:0	6	ssrc
op	26:22	0:0	6	==
water	26:25	0:0	6	ssrc
stmts	27:8	30:8	5	
water	27:8	0:0	6	{
water	28:12	0:0	6	src
op	28:16	0:0	6	=
water	28:18	0:0	6	tmp
water	28:21	0:0	6	;
break	29:12	29:17	6	
water	30:8	0:0	6	}
if	32:8	37:8	4	(( tmp -> last_rx + p_sys -> timeout ) < now)
cond	32:12	32:46	5	( tmp -> last_rx + p_sys -> timeout ) < now
water	32:12	0:0	6	(
water	32:13	0:0	6	tmp
op	32:16	0:0	6	->
water	32:18	0:0	6	last_rx
op	32:26	0:0	6	+
water	32:28	0:0	6	p_sys
op	32:33	0:0	6	->
water	32:35	0:0	6	timeout
water	32:42	0:0	6	)
op	32:44	0:0	6	<
water	32:46	0:0	6	now
stmts	33:8	37:8	5	
water	33:8	0:0	6	{
call	34:12	34:51	6	rtp_source_destroy
arg	34:32	34:37	7	demux
water	34:32	0:0	8	demux
arg	34:39	34:46	7	session
water	34:39	0:0	8	session
arg	34:48	34:51	7	tmp
water	34:48	0:0	8	tmp
water	34:52	0:0	6	;
if	35:12	36:67	6	(-- session -> srcc > 0)
cond	35:16	35:34	7	-- session -> srcc > 0
op	35:16	0:0	8	--
water	35:18	0:0	8	session
op	35:25	0:0	8	->
water	35:27	0:0	8	srcc
op	35:32	0:0	8	>
water	35:34	0:0	8	0
stmts	36:16	36:67	7	
water	36:16	0:0	8	session
op	36:23	0:0	8	->
water	36:25	0:0	8	srcv
op	36:29	0:0	8	[
water	36:30	0:0	8	i
op	36:31	0:0	8	]
op	36:33	0:0	8	=
water	36:35	0:0	8	session
op	36:42	0:0	8	->
water	36:44	0:0	8	srcv
op	36:48	0:0	8	[
water	36:49	0:0	8	session
op	36:56	0:0	8	->
water	36:58	0:0	8	srcc
op	36:63	0:0	8	-
water	36:65	0:0	8	1
op	36:66	0:0	8	]
water	36:67	0:0	8	;
water	37:8	0:0	6	}
water	38:4	0:0	4	}
if	39:4	57:4	2	(src == NULL)
cond	39:8	39:15	3	src == NULL
water	39:8	0:0	4	src
op	39:12	0:0	4	==
water	39:15	0:0	4	NULL
stmts	40:4	57:4	3	
water	40:4	0:0	4	{
if	42:8	46:8	4	(session -> srcc >= p_sys -> max_src)
cond	42:12	42:36	5	session -> srcc >= p_sys -> max_src
water	42:12	0:0	6	session
op	42:19	0:0	6	->
water	42:21	0:0	6	srcc
op	42:26	0:0	6	>=
water	42:29	0:0	6	p_sys
op	42:34	0:0	6	->
water	42:36	0:0	6	max_src
stmts	43:8	46:8	5	
water	43:8	0:0	6	{
call	44:12	44:52	6	msg_Warn
arg	44:22	44:27	7	demux
water	44:22	0:0	8	demux
arg	44:29	44:52	7	"too many RTP sessions"
water	44:29	0:0	8	"too many RTP sessions"
water	44:53	0:0	6	;
goto	45:12	45:21	6	drop
water	45:17	0:0	7	drop
water	46:8	0:0	6	}
decl	47:8	47:26	4	rtp_source_t	**tab
water	48:8	0:0	4	tab
op	48:12	0:0	4	=
call	48:14	48:73	4	realloc
arg	48:23	48:36	5	session->srcv
water	48:23	0:0	6	session
op	48:30	0:0	6	->
water	48:32	0:0	6	srcv
arg	48:38	48:73	5	(session->srcc+1)*sizeof(*tab)
water	48:38	0:0	6	(
water	48:39	0:0	6	session
op	48:46	0:0	6	->
water	48:48	0:0	6	srcc
op	48:53	0:0	6	+
water	48:55	0:0	6	1
water	48:56	0:0	6	)
op	48:58	0:0	6	*
op	48:60	0:0	6	sizeof
water	48:67	0:0	6	(
op	48:68	0:0	6	*
water	48:69	0:0	6	tab
water	48:72	0:0	6	)
water	48:74	0:0	4	;
if	49:8	50:21	4	(tab == NULL)
cond	49:12	49:19	5	tab == NULL
water	49:12	0:0	6	tab
op	49:16	0:0	6	==
water	49:19	0:0	6	NULL
stmts	50:12	50:21	5	
goto	50:12	50:21	6	drop
water	50:17	0:0	7	drop
water	51:8	0:0	4	session
op	51:15	0:0	4	->
water	51:17	0:0	4	srcv
op	51:22	0:0	4	=
water	51:24	0:0	4	tab
water	51:27	0:0	4	;
water	52:8	0:0	4	src
op	52:12	0:0	4	=
call	52:14	52:58	4	rtp_source_create
arg	52:33	52:38	5	demux
water	52:33	0:0	6	demux
arg	52:40	52:47	5	session
water	52:40	0:0	6	session
arg	52:49	52:53	5	ssrc
water	52:49	0:0	6	ssrc
arg	52:55	52:58	5	seq
water	52:55	0:0	6	seq
water	52:59	0:0	4	;
if	53:8	54:21	4	(src == NULL)
cond	53:12	53:19	5	src == NULL
water	53:12	0:0	6	src
op	53:16	0:0	6	==
water	53:19	0:0	6	NULL
stmts	54:12	54:21	5	
goto	54:12	54:21	6	drop
water	54:17	0:0	7	drop
water	55:8	0:0	4	tab
op	55:11	0:0	4	[
water	55:12	0:0	4	session
op	55:19	0:0	4	->
water	55:21	0:0	4	srcc
op	55:25	0:0	4	++
op	55:27	0:0	4	]
op	55:29	0:0	4	=
water	55:31	0:0	4	src
water	55:34	0:0	4	;
water	57:4	0:0	4	}
else	58:4	73:4	2
stmts	59:4	73:4	3	
water	59:4	0:0	4	{
decl	60:8	60:71	4	const rtp_pt_t	*pt
op	60:27	0:0	4	=
call	60:29	60:70	5	rtp_find_ptype
arg	60:45	60:52	6	session
water	60:45	0:0	7	session
arg	60:54	60:57	6	src
water	60:54	0:0	7	src
arg	60:59	60:64	6	block
water	60:59	0:0	7	block
arg	60:66	60:70	6	NULL
water	60:66	0:0	7	NULL
if	61:8	72:8	4	(pt != NULL)
cond	61:12	61:18	5	pt != NULL
water	61:12	0:0	6	pt
op	61:15	0:0	6	!=
water	61:18	0:0	6	NULL
stmts	62:8	72:8	5	
water	62:8	0:0	6	{
decl	66:12	66:41	6	uint32_t	freq
op	66:26	0:0	6	=
water	66:28	0:0	6	pt
op	66:30	0:0	6	->
water	66:32	0:0	6	frequency
decl	67:12	67:46	6	int64_t	ts
op	67:23	0:0	6	=
call	67:25	67:45	7	rtp_timestamp
arg	67:40	67:45	8	block
water	67:40	0:0	9	block
decl	68:12	68:66	6	int64_t	d
op	68:22	0:0	6	=
water	68:24	0:0	6	(
water	68:25	0:0	6	(
water	68:26	0:0	6	now
op	68:30	0:0	6	-
water	68:32	0:0	6	src
op	68:35	0:0	6	->
water	68:37	0:0	6	last_rx
water	68:44	0:0	6	)
op	68:46	0:0	6	*
water	68:48	0:0	6	freq
water	68:52	0:0	6	)
op	68:54	0:0	6	/
water	68:56	0:0	6	CLOCK_FREQ
water	69:12	0:0	6	d
op	69:21	0:0	6	-=
water	69:27	0:0	6	ts
op	69:30	0:0	6	-
water	69:32	0:0	6	src
op	69:35	0:0	6	->
water	69:37	0:0	6	last_ts
water	69:44	0:0	6	;
if	70:12	70:29	6	(d < 0)
cond	70:16	70:20	7	d < 0
water	70:16	0:0	8	d
op	70:18	0:0	8	<
water	70:20	0:0	8	0
stmts	70:23	70:29	7	
water	70:23	0:0	8	d
op	70:25	0:0	8	=
op	70:27	0:0	8	-
water	70:28	0:0	8	d
water	70:29	0:0	8	;
water	71:12	0:0	6	src
op	71:15	0:0	6	->
water	71:17	0:0	6	jitter
op	71:24	0:0	6	+=
water	71:27	0:0	6	(
water	71:28	0:0	6	(
water	71:29	0:0	6	d
op	71:31	0:0	6	-
water	71:33	0:0	6	src
op	71:36	0:0	6	->
water	71:38	0:0	6	jitter
water	71:44	0:0	6	)
op	71:46	0:0	6	+
water	71:48	0:0	6	8
water	71:49	0:0	6	)
op	71:51	0:0	6	>>
water	71:54	0:0	6	4
water	71:55	0:0	6	;
water	72:8	0:0	6	}
water	73:4	0:0	4	}
water	74:4	0:0	2	src
op	74:7	0:0	2	->
water	74:9	0:0	2	last_rx
op	74:17	0:0	2	=
water	74:19	0:0	2	now
water	74:22	0:0	2	;
water	75:4	0:0	2	block
op	75:9	0:0	2	->
water	75:11	0:0	2	i_pts
op	75:17	0:0	2	=
water	75:19	0:0	2	now
water	75:22	0:0	2	;
water	76:4	0:0	2	src
op	76:7	0:0	2	->
water	76:9	0:0	2	last_ts
op	76:17	0:0	2	=
call	76:19	76:39	2	rtp_timestamp
arg	76:34	76:39	3	block
water	76:34	0:0	4	block
water	76:40	0:0	2	;
decl	80:4	80:42	2	int16_t	delta_seq
op	80:22	0:0	2	=
water	80:24	0:0	2	seq
op	80:28	0:0	2	-
water	80:30	0:0	2	src
op	80:33	0:0	2	->
water	80:35	0:0	2	max_seq
if	81:4	99:4	2	(( delta_seq > 0 ) ? ( delta_seq > p_sys -> max_dropout ) : ( - delta_seq > p_sys -> max_misorder ))
cond	81:8	82:59	3	( delta_seq > 0 ) ? ( delta_seq > p_sys -> max_dropout ) : ( - delta_seq > p_sys -> max_misorder )
water	81:8	0:0	4	(
water	81:9	0:0	4	delta_seq
op	81:19	0:0	4	>
water	81:21	0:0	4	0
water	81:22	0:0	4	)
water	81:24	0:0	4	?
water	81:26	0:0	4	(
water	81:27	0:0	4	delta_seq
op	81:37	0:0	4	>
water	81:39	0:0	4	p_sys
op	81:44	0:0	4	->
water	81:46	0:0	4	max_dropout
water	81:57	0:0	4	)
water	82:24	0:0	4	:
water	82:26	0:0	4	(
op	82:27	0:0	4	-
water	82:28	0:0	4	delta_seq
op	82:38	0:0	4	>
water	82:40	0:0	4	p_sys
op	82:45	0:0	4	->
water	82:47	0:0	4	max_misorder
water	82:59	0:0	4	)
stmts	83:4	99:4	3	
water	83:4	0:0	4	{
call	84:8	85:76	4	msg_Dbg
arg	84:17	84:22	5	demux
water	84:17	0:0	6	demux
arg	84:24	85:57	5	"sequence discontinuity"" (got: %"PRIu16", expected: %"PRIu16")"
water	84:24	0:0	6	"sequence discontinuity"
water	85:17	0:0	6	" (got: %"
water	85:27	0:0	6	PRIu16
water	85:33	0:0	6	", expected: %"
water	85:48	0:0	6	PRIu16
water	85:54	0:0	6	")"
arg	85:59	85:62	5	seq
water	85:59	0:0	6	seq
arg	85:64	85:76	5	src->max_seq
water	85:64	0:0	6	src
op	85:67	0:0	6	->
water	85:69	0:0	6	max_seq
water	85:77	0:0	4	;
if	86:8	93:8	4	(seq == src -> bad_seq)
cond	86:12	86:24	5	seq == src -> bad_seq
water	86:12	0:0	6	seq
op	86:16	0:0	6	==
water	86:19	0:0	6	src
op	86:22	0:0	6	->
water	86:24	0:0	6	bad_seq
stmts	87:8	93:8	5	
water	87:8	0:0	6	{
water	88:12	0:0	6	src
op	88:15	0:0	6	->
water	88:17	0:0	6	max_seq
op	88:25	0:0	6	=
water	88:27	0:0	6	src
op	88:30	0:0	6	->
water	88:32	0:0	6	bad_seq
op	88:40	0:0	6	=
water	88:42	0:0	6	seq
op	88:46	0:0	6	+
water	88:48	0:0	6	1
water	88:49	0:0	6	;
water	89:12	0:0	6	src
op	89:15	0:0	6	->
water	89:17	0:0	6	last_seq
op	89:26	0:0	6	=
water	89:28	0:0	6	seq
op	89:32	0:0	6	-
water	89:34	0:0	6	0
water	89:35	0:0	6	x7fffe
water	89:41	0:0	6	;
call	90:12	90:54	6	msg_Warn
arg	90:22	90:27	7	demux
water	90:22	0:0	8	demux
arg	90:29	90:54	7	"sequence resynchronized"
water	90:29	0:0	8	"sequence resynchronized"
water	90:55	0:0	6	;
call	91:12	91:43	6	block_ChainRelease
arg	91:32	91:43	7	src->blocks
water	91:32	0:0	8	src
op	91:35	0:0	8	->
water	91:37	0:0	8	blocks
water	91:44	0:0	6	;
water	92:12	0:0	6	src
op	92:15	0:0	6	->
water	92:17	0:0	6	blocks
op	92:24	0:0	6	=
water	92:26	0:0	6	NULL
water	92:30	0:0	6	;
water	93:8	0:0	6	}
else	94:8	98:8	4
stmts	95:8	98:8	5	
water	95:8	0:0	6	{
water	96:12	0:0	6	src
op	96:15	0:0	6	->
water	96:17	0:0	6	bad_seq
op	96:25	0:0	6	=
water	96:27	0:0	6	seq
op	96:31	0:0	6	+
water	96:33	0:0	6	1
water	96:34	0:0	6	;
goto	97:12	97:21	6	drop
water	97:17	0:0	7	drop
water	98:8	0:0	6	}
water	99:4	0:0	4	}
else	100:4	102:30	2
stmts	101:4	102:30	3	
if	101:4	102:30	4	(delta_seq >= 0)
cond	101:8	101:21	5	delta_seq >= 0
water	101:8	0:0	6	delta_seq
op	101:18	0:0	6	>=
water	101:21	0:0	6	0
stmts	102:8	102:30	5	
water	102:8	0:0	6	src
op	102:11	0:0	6	->
water	102:13	0:0	6	max_seq
op	102:21	0:0	6	=
water	102:23	0:0	6	seq
op	102:27	0:0	6	+
water	102:29	0:0	6	1
water	102:30	0:0	6	;
decl	105:4	105:31	2	block_t	**pp
op	105:17	0:0	2	=
op	105:19	0:0	2	&
water	105:20	0:0	2	src
op	105:23	0:0	2	->
water	105:25	0:0	2	blocks
for	106:4	117:4	2	( block_t * prev = * pp ;prev != NULL;prev = * pp)
forinit	0:0	106:28	3	 block_t * prev = * pp ;
decl	106:9	106:28	4	block_t	*prev
op	106:23	0:0	4	=
op	106:25	0:0	4	*
water	106:26	0:0	4	pp
cond	106:30	106:38	3	prev != NULL
water	106:30	0:0	4	prev
op	106:35	0:0	4	!=
water	106:38	0:0	4	NULL
forexpr	106:44	106:52	3	prev = * pp
water	106:44	0:0	4	prev
op	106:49	0:0	4	=
op	106:51	0:0	4	*
water	106:52	0:0	4	pp
stmts	107:4	117:4	3	
water	107:4	0:0	4	{
decl	108:8	108:48	4	int16_t	delta_seq
op	108:26	0:0	4	=
water	108:28	0:0	4	seq
op	108:32	0:0	4	-
call	108:34	108:47	5	rtp_seq
arg	108:43	108:47	6	prev
water	108:43	0:0	7	prev
if	109:8	110:17	4	(delta_seq < 0)
cond	109:12	109:24	5	delta_seq < 0
water	109:12	0:0	6	delta_seq
op	109:22	0:0	6	<
water	109:24	0:0	6	0
stmts	110:12	110:17	5	
break	110:12	110:17	6	
if	111:8	115:8	4	(delta_seq == 0)
cond	111:12	111:25	5	delta_seq == 0
water	111:12	0:0	6	delta_seq
op	111:22	0:0	6	==
water	111:25	0:0	6	0
stmts	112:8	115:8	5	
water	112:8	0:0	6	{
call	113:12	113:73	6	msg_Dbg
arg	113:21	113:26	7	demux
water	113:21	0:0	8	demux
arg	113:28	113:68	7	"duplicate packet (sequence: %"PRIu16")"
water	113:28	0:0	8	"duplicate packet (sequence: %"
water	113:59	0:0	8	PRIu16
water	113:65	0:0	8	")"
arg	113:70	113:73	7	seq
water	113:70	0:0	8	seq
water	113:74	0:0	6	;
goto	114:12	114:21	6	drop
water	114:17	0:0	7	drop
water	115:8	0:0	6	}
water	116:8	0:0	4	pp
op	116:11	0:0	4	=
op	116:13	0:0	4	&
water	116:14	0:0	4	prev
op	116:18	0:0	4	->
water	116:20	0:0	4	p_next
water	116:26	0:0	4	;
water	117:4	0:0	4	}
water	118:4	0:0	2	block
op	118:9	0:0	2	->
water	118:11	0:0	2	p_next
op	118:18	0:0	2	=
op	118:20	0:0	2	*
water	118:21	0:0	2	pp
water	118:23	0:0	2	;
op	119:4	0:0	2	*
water	119:5	0:0	2	pp
op	119:8	0:0	2	=
water	119:10	0:0	2	block
water	119:15	0:0	2	;
return	121:4	121:10	2	
label	122:0	122:4	2	drop :
call	123:4	123:24	2	block_Release
arg	123:19	123:24	3	block
water	123:19	0:0	4	block
water	123:25	0:0	2	;

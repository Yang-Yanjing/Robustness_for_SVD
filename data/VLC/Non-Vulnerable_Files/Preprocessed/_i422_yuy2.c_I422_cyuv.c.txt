func	2:0	84:0	0	static void	I422_cyuv
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	81:12	1	
decl	5:4	5:91	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_dest
op	5:28	0:0	2	->
water	5:30	0:0	2	p
op	5:31	0:0	2	->
water	5:33	0:0	2	p_pixels
op	5:42	0:0	2	+
water	5:44	0:0	2	p_dest
op	5:50	0:0	2	->
water	5:52	0:0	2	p
op	5:53	0:0	2	->
water	5:55	0:0	2	i_visible_lines
op	5:71	0:0	2	*
water	5:73	0:0	2	p_dest
op	5:79	0:0	2	->
water	5:81	0:0	2	p
op	5:82	0:0	2	->
water	5:84	0:0	2	i_pitch
decl	6:4	6:37	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_source
op	6:27	0:0	2	->
water	6:29	0:0	2	Y_PIXELS
decl	7:4	7:37	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_source
op	7:27	0:0	2	->
water	7:29	0:0	2	U_PIXELS
decl	8:4	8:37	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_source
op	8:27	0:0	2	->
water	8:29	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	11:65	2	const int	i_source_margin
op	10:30	0:0	2	=
water	10:32	0:0	2	p_source
op	10:40	0:0	2	->
water	10:42	0:0	2	p
op	10:43	0:0	2	[
water	10:44	0:0	2	0
op	10:45	0:0	2	]
op	10:46	0:0	2	.
water	10:47	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_source
op	11:43	0:0	2	->
water	11:45	0:0	2	p
op	11:46	0:0	2	[
water	11:47	0:0	2	0
op	11:48	0:0	2	]
op	11:49	0:0	2	.
water	11:50	0:0	2	i_visible_pitch
decl	12:4	13:65	2	const int	i_source_margin_c
op	12:32	0:0	2	=
water	12:34	0:0	2	p_source
op	12:42	0:0	2	->
water	12:44	0:0	2	p
op	12:45	0:0	2	[
water	12:46	0:0	2	1
op	12:47	0:0	2	]
op	12:48	0:0	2	.
water	12:49	0:0	2	i_pitch
op	13:33	0:0	2	-
water	13:35	0:0	2	p_source
op	13:43	0:0	2	->
water	13:45	0:0	2	p
op	13:46	0:0	2	[
water	13:47	0:0	2	1
op	13:48	0:0	2	]
op	13:49	0:0	2	.
water	13:50	0:0	2	i_visible_pitch
decl	14:4	15:59	2	const int	i_dest_margin
op	14:28	0:0	2	=
water	14:30	0:0	2	p_dest
op	14:36	0:0	2	->
water	14:38	0:0	2	p
op	14:39	0:0	2	->
water	14:41	0:0	2	i_pitch
op	15:31	0:0	2	-
water	15:33	0:0	2	p_dest
op	15:39	0:0	2	->
water	15:41	0:0	2	p
op	15:42	0:0	2	->
water	15:44	0:0	2	i_visible_pitch
if	17:4	37:4	2	(0 == ( 15 & ( p_source -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_line | ( intptr_t ) p_y ) ) ))
cond	17:8	18:41	3	0 == ( 15 & ( p_source -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_line | ( intptr_t ) p_y ) ) )
water	17:8	0:0	4	0
op	17:10	0:0	4	==
water	17:13	0:0	4	(
water	17:14	0:0	4	15
op	17:17	0:0	4	&
water	17:19	0:0	4	(
water	17:20	0:0	4	p_source
op	17:28	0:0	4	->
water	17:30	0:0	4	p
op	17:31	0:0	4	[
water	17:32	0:0	4	Y_PLANE
op	17:39	0:0	4	]
op	17:40	0:0	4	.
water	17:41	0:0	4	i_pitch
op	17:48	0:0	4	|
water	17:49	0:0	4	p_dest
op	17:55	0:0	4	->
water	17:57	0:0	4	p
op	17:58	0:0	4	->
water	17:60	0:0	4	i_pitch
op	17:67	0:0	4	|
water	18:8	0:0	4	(
water	18:9	0:0	4	(
water	18:10	0:0	4	intptr_t
water	18:18	0:0	4	)
water	18:19	0:0	4	p_line
op	18:25	0:0	4	|
water	18:26	0:0	4	(
water	18:27	0:0	4	intptr_t
water	18:35	0:0	4	)
water	18:36	0:0	4	p_y
water	18:39	0:0	4	)
water	18:40	0:0	4	)
water	18:41	0:0	4	)
stmts	19:4	37:4	3	
water	19:4	0:0	4	{
for	21:8	36:8	4	(i_y = p_filter -> fmt_in . video . i_height ;i_y --;)
forinit	21:13	21:51	5	i_y = p_filter -> fmt_in . video . i_height ;
water	21:13	0:0	6	i_y
op	21:17	0:0	6	=
water	21:19	0:0	6	p_filter
op	21:27	0:0	6	->
water	21:29	0:0	6	fmt_in
op	21:35	0:0	6	.
water	21:36	0:0	6	video
op	21:41	0:0	6	.
water	21:42	0:0	6	i_height
water	21:51	0:0	6	;
cond	21:53	21:56	5	i_y --
water	21:53	0:0	6	i_y
op	21:56	0:0	6	--
forexpr	0:0	0:0	5	
stmts	22:8	36:8	5	
water	22:8	0:0	6	{
water	23:12	0:0	6	p_line
op	23:19	0:0	6	-=
water	23:22	0:0	6	2
op	23:24	0:0	6	*
water	23:26	0:0	6	p_dest
op	23:32	0:0	6	->
water	23:34	0:0	6	p
op	23:35	0:0	6	->
water	23:37	0:0	6	i_pitch
water	23:44	0:0	6	;
for	24:12	27:12	6	(i_x = p_filter -> fmt_in . video . i_width / 16 ;i_x --;)
forinit	24:17	24:59	7	i_x = p_filter -> fmt_in . video . i_width / 16 ;
water	24:17	0:0	8	i_x
op	24:21	0:0	8	=
water	24:23	0:0	8	p_filter
op	24:31	0:0	8	->
water	24:33	0:0	8	fmt_in
op	24:39	0:0	8	.
water	24:40	0:0	8	video
op	24:45	0:0	8	.
water	24:46	0:0	8	i_width
op	24:54	0:0	8	/
water	24:56	0:0	8	16
water	24:59	0:0	8	;
cond	24:61	24:64	7	i_x --
water	24:61	0:0	8	i_x
op	24:64	0:0	8	--
forexpr	0:0	0:0	7	
stmts	25:12	27:12	7	
water	25:12	0:0	8	{
call	26:16	26:52	8	SSE2_CALL
arg	26:27	26:52	9	SSE2_YUV422_UYVY_ALIGNED
water	26:27	0:0	10	SSE2_YUV422_UYVY_ALIGNED
water	26:53	0:0	8	;
water	27:12	0:0	8	}
for	28:12	31:12	6	(i_x = ( p_filter -> fmt_in . video . i_width % 16 ) / 2 ;i_x --;)
forinit	28:17	28:66	7	i_x = ( p_filter -> fmt_in . video . i_width % 16 ) / 2 ;
water	28:17	0:0	8	i_x
op	28:21	0:0	8	=
water	28:23	0:0	8	(
water	28:25	0:0	8	p_filter
op	28:33	0:0	8	->
water	28:35	0:0	8	fmt_in
op	28:41	0:0	8	.
water	28:42	0:0	8	video
op	28:47	0:0	8	.
water	28:48	0:0	8	i_width
op	28:56	0:0	8	%
water	28:58	0:0	8	16
water	28:61	0:0	8	)
op	28:63	0:0	8	/
water	28:65	0:0	8	2
water	28:66	0:0	8	;
cond	28:68	28:71	7	i_x --
water	28:68	0:0	8	i_x
op	28:71	0:0	8	--
forexpr	0:0	0:0	7	
stmts	29:12	31:12	7	
water	29:12	0:0	8	{
call	30:16	30:53	8	C_YUV422_UYVY
arg	30:31	30:37	9	p_line
water	30:31	0:0	10	p_line
arg	30:39	30:42	9	p_y
water	30:39	0:0	10	p_y
arg	30:44	30:47	9	p_u
water	30:44	0:0	10	p_u
arg	30:49	30:53	9	p_v
water	30:49	0:0	10	p_v
water	30:54	0:0	8	;
water	31:12	0:0	8	}
water	32:12	0:0	6	p_y
op	32:16	0:0	6	+=
water	32:19	0:0	6	i_source_margin
water	32:34	0:0	6	;
water	33:12	0:0	6	p_u
op	33:16	0:0	6	+=
water	33:19	0:0	6	i_source_margin_c
water	33:36	0:0	6	;
water	34:12	0:0	6	p_v
op	34:16	0:0	6	+=
water	34:19	0:0	6	i_source_margin_c
water	34:36	0:0	6	;
water	35:12	0:0	6	p_line
op	35:19	0:0	6	+=
water	35:22	0:0	6	i_dest_margin
water	35:35	0:0	6	;
water	36:8	0:0	6	}
water	37:4	0:0	4	}
else	38:4	56:4	2
stmts	38:9	56:4	3	
water	38:9	0:0	4	{
for	40:8	55:8	4	(i_y = p_filter -> fmt_in . video . i_height ;i_y --;)
forinit	40:13	40:51	5	i_y = p_filter -> fmt_in . video . i_height ;
water	40:13	0:0	6	i_y
op	40:17	0:0	6	=
water	40:19	0:0	6	p_filter
op	40:27	0:0	6	->
water	40:29	0:0	6	fmt_in
op	40:35	0:0	6	.
water	40:36	0:0	6	video
op	40:41	0:0	6	.
water	40:42	0:0	6	i_height
water	40:51	0:0	6	;
cond	40:53	40:56	5	i_y --
water	40:53	0:0	6	i_y
op	40:56	0:0	6	--
forexpr	0:0	0:0	5	
stmts	41:8	55:8	5	
water	41:8	0:0	6	{
water	42:12	0:0	6	p_line
op	42:19	0:0	6	-=
water	42:22	0:0	6	2
op	42:24	0:0	6	*
water	42:26	0:0	6	p_dest
op	42:32	0:0	6	->
water	42:34	0:0	6	p
op	42:35	0:0	6	->
water	42:37	0:0	6	i_pitch
water	42:44	0:0	6	;
for	43:12	46:12	6	(i_x = p_filter -> fmt_in . video . i_width / 16 ;i_x --;)
forinit	43:17	43:59	7	i_x = p_filter -> fmt_in . video . i_width / 16 ;
water	43:17	0:0	8	i_x
op	43:21	0:0	8	=
water	43:23	0:0	8	p_filter
op	43:31	0:0	8	->
water	43:33	0:0	8	fmt_in
op	43:39	0:0	8	.
water	43:40	0:0	8	video
op	43:45	0:0	8	.
water	43:46	0:0	8	i_width
op	43:54	0:0	8	/
water	43:56	0:0	8	16
water	43:59	0:0	8	;
cond	43:61	43:64	7	i_x --
water	43:61	0:0	8	i_x
op	43:64	0:0	8	--
forexpr	0:0	0:0	7	
stmts	44:12	46:12	7	
water	44:12	0:0	8	{
call	45:16	45:54	8	SSE2_CALL
arg	45:27	45:54	9	SSE2_YUV422_UYVY_UNALIGNED
water	45:27	0:0	10	SSE2_YUV422_UYVY_UNALIGNED
water	45:55	0:0	8	;
water	46:12	0:0	8	}
for	47:12	50:12	6	(i_x = ( p_filter -> fmt_in . video . i_width % 16 ) / 2 ;i_x --;)
forinit	47:17	47:66	7	i_x = ( p_filter -> fmt_in . video . i_width % 16 ) / 2 ;
water	47:17	0:0	8	i_x
op	47:21	0:0	8	=
water	47:23	0:0	8	(
water	47:25	0:0	8	p_filter
op	47:33	0:0	8	->
water	47:35	0:0	8	fmt_in
op	47:41	0:0	8	.
water	47:42	0:0	8	video
op	47:47	0:0	8	.
water	47:48	0:0	8	i_width
op	47:56	0:0	8	%
water	47:58	0:0	8	16
water	47:61	0:0	8	)
op	47:63	0:0	8	/
water	47:65	0:0	8	2
water	47:66	0:0	8	;
cond	47:68	47:71	7	i_x --
water	47:68	0:0	8	i_x
op	47:71	0:0	8	--
forexpr	0:0	0:0	7	
stmts	48:12	50:12	7	
water	48:12	0:0	8	{
call	49:16	49:53	8	C_YUV422_UYVY
arg	49:31	49:37	9	p_line
water	49:31	0:0	10	p_line
arg	49:39	49:42	9	p_y
water	49:39	0:0	10	p_y
arg	49:44	49:47	9	p_u
water	49:44	0:0	10	p_u
arg	49:49	49:53	9	p_v
water	49:49	0:0	10	p_v
water	49:54	0:0	8	;
water	50:12	0:0	8	}
water	51:12	0:0	6	p_y
op	51:16	0:0	6	+=
water	51:19	0:0	6	i_source_margin
water	51:34	0:0	6	;
water	52:12	0:0	6	p_u
op	52:16	0:0	6	+=
water	52:19	0:0	6	i_source_margin_c
water	52:36	0:0	6	;
water	53:12	0:0	6	p_v
op	53:16	0:0	6	+=
water	53:19	0:0	6	i_source_margin_c
water	53:36	0:0	6	;
water	54:12	0:0	6	p_line
op	54:19	0:0	6	+=
water	54:22	0:0	6	i_dest_margin
water	54:35	0:0	6	;
water	55:8	0:0	6	}
water	56:4	0:0	4	}
water	57:4	0:0	2	SSE2_END
water	57:12	0:0	2	;
for	59:4	77:4	2	(i_y = p_filter -> fmt_in . video . i_height ;i_y --;)
forinit	59:9	59:47	3	i_y = p_filter -> fmt_in . video . i_height ;
water	59:9	0:0	4	i_y
op	59:13	0:0	4	=
water	59:15	0:0	4	p_filter
op	59:23	0:0	4	->
water	59:25	0:0	4	fmt_in
op	59:31	0:0	4	.
water	59:32	0:0	4	video
op	59:37	0:0	4	.
water	59:38	0:0	4	i_height
water	59:47	0:0	4	;
cond	59:49	59:52	3	i_y --
water	59:49	0:0	4	i_y
op	59:52	0:0	4	--
forexpr	0:0	0:0	3	
stmts	60:4	77:4	3	
water	60:4	0:0	4	{
for	61:8	72:8	4	(i_x = p_filter -> fmt_in . video . i_width / 8 ;i_x --;)
forinit	61:13	61:54	5	i_x = p_filter -> fmt_in . video . i_width / 8 ;
water	61:13	0:0	6	i_x
op	61:17	0:0	6	=
water	61:19	0:0	6	p_filter
op	61:27	0:0	6	->
water	61:29	0:0	6	fmt_in
op	61:35	0:0	6	.
water	61:36	0:0	6	video
op	61:41	0:0	6	.
water	61:42	0:0	6	i_width
op	61:50	0:0	6	/
water	61:52	0:0	6	8
water	61:54	0:0	6	;
cond	61:56	61:59	5	i_x --
water	61:56	0:0	6	i_x
op	61:59	0:0	6	--
forexpr	0:0	0:0	5	
stmts	62:8	72:8	5	
water	62:8	0:0	6	{
water	63:12	0:0	6	p_line
op	63:19	0:0	6	-=
water	63:22	0:0	6	2
op	63:24	0:0	6	*
water	63:26	0:0	6	p_dest
op	63:32	0:0	6	->
water	63:34	0:0	6	p
op	63:35	0:0	6	->
water	63:37	0:0	6	i_pitch
water	63:44	0:0	6	;
call	65:12	65:49	6	C_YUV422_UYVY
arg	65:27	65:33	7	p_line
water	65:27	0:0	8	p_line
arg	65:35	65:38	7	p_y
water	65:35	0:0	8	p_y
arg	65:40	65:43	7	p_u
water	65:40	0:0	8	p_u
arg	65:45	65:49	7	p_v
water	65:45	0:0	8	p_v
water	65:50	0:0	6	;
call	66:12	66:49	6	C_YUV422_UYVY
arg	66:27	66:33	7	p_line
water	66:27	0:0	8	p_line
arg	66:35	66:38	7	p_y
water	66:35	0:0	8	p_y
arg	66:40	66:43	7	p_u
water	66:40	0:0	8	p_u
arg	66:45	66:49	7	p_v
water	66:45	0:0	8	p_v
water	66:50	0:0	6	;
call	67:12	67:49	6	C_YUV422_UYVY
arg	67:27	67:33	7	p_line
water	67:27	0:0	8	p_line
arg	67:35	67:38	7	p_y
water	67:35	0:0	8	p_y
arg	67:40	67:43	7	p_u
water	67:40	0:0	8	p_u
arg	67:45	67:49	7	p_v
water	67:45	0:0	8	p_v
water	67:50	0:0	6	;
call	68:12	68:49	6	C_YUV422_UYVY
arg	68:27	68:33	7	p_line
water	68:27	0:0	8	p_line
arg	68:35	68:38	7	p_y
water	68:35	0:0	8	p_y
arg	68:40	68:43	7	p_u
water	68:40	0:0	8	p_u
arg	68:45	68:49	7	p_v
water	68:45	0:0	8	p_v
water	68:50	0:0	6	;
call	70:12	70:38	6	MMX_CALL
arg	70:22	70:38	7	MMX_YUV422_UYVY
water	70:22	0:0	8	MMX_YUV422_UYVY
water	70:39	0:0	6	;
water	72:8	0:0	6	}
water	73:8	0:0	4	p_y
op	73:12	0:0	4	+=
water	73:15	0:0	4	i_source_margin
water	73:30	0:0	4	;
water	74:8	0:0	4	p_u
op	74:12	0:0	4	+=
water	74:15	0:0	4	i_source_margin_c
water	74:32	0:0	4	;
water	75:8	0:0	4	p_v
op	75:12	0:0	4	+=
water	75:15	0:0	4	i_source_margin_c
water	75:32	0:0	4	;
water	76:8	0:0	4	p_line
op	76:15	0:0	4	+=
water	76:18	0:0	4	i_dest_margin
water	76:31	0:0	4	;
water	77:4	0:0	4	}
water	79:4	0:0	2	MMX_END
water	79:11	0:0	2	;
water	81:4	0:0	2	SSE2_END
water	81:12	0:0	2	;

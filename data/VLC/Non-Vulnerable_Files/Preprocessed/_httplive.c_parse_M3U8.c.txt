func	2:0	201:0	0	static int	parse_M3U8
params	2:21	0:0	1	
param	2:22	2:33	2	stream_t *	s
param	2:35	2:55	2	vlc_array_t *	streams
param	2:57	2:72	2	uint8_t *	buffer
param	3:22	3:39	2	const ssize_t	len
param	3:41	3:62	2	bool	b_parent_is_meta
stmnts	0:0	200:14	1	
decl	5:4	5:34	2	stream_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	s
op	5:27	0:0	2	->
water	5:29	0:0	2	p_sys
decl	6:4	6:37	2	uint8_t	*p_read
water	6:19	0:0	2	,
decl	6:4	6:37	2	uint8_t	*p_begin
water	6:29	0:0	2	,
decl	6:4	6:37	2	uint8_t	*p_end
call	7:4	7:18	2	assert
arg	7:11	7:18	3	streams
water	7:11	0:0	4	streams
water	7:19	0:0	2	;
call	8:4	8:17	2	assert
arg	8:11	8:17	3	buffer
water	8:11	0:0	4	buffer
water	8:18	0:0	2	;
call	9:4	9:39	2	msg_Dbg
arg	9:12	9:13	3	s
water	9:12	0:0	4	s
arg	9:15	9:31	3	"parse_M3U8\n%s"
water	9:15	0:0	4	"parse_M3U8\n%s"
arg	9:33	9:39	3	buffer
water	9:33	0:0	4	buffer
water	9:40	0:0	2	;
water	10:4	0:0	2	p_begin
op	10:12	0:0	2	=
water	10:14	0:0	2	buffer
water	10:20	0:0	2	;
water	11:4	0:0	2	p_end
op	11:10	0:0	2	=
water	11:12	0:0	2	p_begin
op	11:20	0:0	2	+
water	11:22	0:0	2	len
water	11:25	0:0	2	;
decl	12:4	12:60	2	char	*line
op	12:15	0:0	2	=
call	12:17	12:59	3	ReadLine
arg	12:26	12:33	4	p_begin
water	12:26	0:0	5	p_begin
arg	12:35	12:42	4	&p_read
op	12:35	0:0	5	&
water	12:36	0:0	5	p_read
arg	12:44	12:59	4	p_end-p_begin
water	12:44	0:0	5	p_end
op	12:50	0:0	5	-
water	12:52	0:0	5	p_begin
if	13:4	14:25	2	(line == NULL)
cond	13:8	13:16	3	line == NULL
water	13:8	0:0	4	line
op	13:13	0:0	4	==
water	13:16	0:0	4	NULL
stmts	14:8	14:25	3	
return	14:8	14:25	4	VLC_ENOMEM
water	14:15	0:0	5	VLC_ENOMEM
water	15:4	0:0	2	p_begin
op	15:12	0:0	2	=
water	15:14	0:0	2	p_read
water	15:20	0:0	2	;
if	16:4	21:4	2	(strncmp (line ,"#EXTM3U" ,7 ) != 0)
cond	16:8	16:39	3	strncmp (line ,"#EXTM3U" ,7 ) != 0
call	16:8	16:34	4	strncmp
arg	16:16	16:20	5	line
water	16:16	0:0	6	line
arg	16:22	16:31	5	"#EXTM3U"
water	16:22	0:0	6	"#EXTM3U"
arg	16:33	16:34	5	7
water	16:33	0:0	6	7
op	16:36	0:0	4	!=
water	16:39	0:0	4	0
stmts	17:4	21:4	3	
water	17:4	0:0	4	{
call	18:8	18:52	4	msg_Err
arg	18:16	18:17	5	s
water	18:16	0:0	6	s
arg	18:19	18:52	5	"missing #EXTM3U tag .. aborting"
water	18:19	0:0	6	"missing #EXTM3U tag .. aborting"
water	18:53	0:0	4	;
call	19:8	19:17	4	free
arg	19:13	19:17	5	line
water	19:13	0:0	6	line
water	19:18	0:0	4	;
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
water	21:4	0:0	4	}
call	22:4	22:13	2	free
arg	22:9	22:13	3	line
water	22:9	0:0	4	line
water	22:14	0:0	2	;
water	23:4	0:0	2	line
op	23:9	0:0	2	=
water	23:11	0:0	2	NULL
water	23:15	0:0	2	;
decl	25:4	25:19	2	int	version
op	25:16	0:0	2	=
water	25:18	0:0	2	1
decl	26:4	26:75	2	uint8_t	*p
op	26:15	0:0	2	=
water	26:17	0:0	2	(
water	26:18	0:0	2	uint8_t
op	26:26	0:0	2	*
water	26:27	0:0	2	)
call	26:28	26:74	3	strstr
arg	26:35	26:55	4	(constchar*)buffer
water	26:35	0:0	5	(
water	26:36	0:0	5	const
water	26:42	0:0	5	char
op	26:47	0:0	5	*
water	26:48	0:0	5	)
water	26:49	0:0	5	buffer
arg	26:57	26:74	4	"#EXT-X-VERSION:"
water	26:57	0:0	5	"#EXT-X-VERSION:"
if	27:4	41:4	2	(p != NULL)
cond	27:8	27:13	3	p != NULL
water	27:8	0:0	4	p
op	27:10	0:0	4	!=
water	27:13	0:0	4	NULL
stmts	28:4	41:4	3	
water	28:4	0:0	4	{
decl	29:8	29:27	4	uint8_t	*tmp
op	29:21	0:0	4	=
water	29:23	0:0	4	NULL
decl	30:8	30:56	4	char	*psz_version
op	30:26	0:0	4	=
call	30:28	30:55	5	ReadLine
arg	30:37	30:38	6	p
water	30:37	0:0	7	p
arg	30:40	30:44	6	&tmp
op	30:40	0:0	7	&
water	30:41	0:0	7	tmp
arg	30:46	30:55	6	p_end-p
water	30:46	0:0	7	p_end
op	30:52	0:0	7	-
water	30:54	0:0	7	p
if	31:8	32:29	4	(psz_version == NULL)
cond	31:12	31:27	5	psz_version == NULL
water	31:12	0:0	6	psz_version
op	31:24	0:0	6	==
water	31:27	0:0	6	NULL
stmts	32:12	32:29	5	
return	32:12	32:29	6	VLC_ENOMEM
water	32:19	0:0	7	VLC_ENOMEM
decl	33:8	33:81	4	int	ret
op	33:16	0:0	4	=
call	33:18	33:80	5	sscanf
arg	33:25	33:49	6	(constchar*)psz_version
water	33:25	0:0	7	(
water	33:26	0:0	7	const
water	33:32	0:0	7	char
op	33:36	0:0	7	*
water	33:37	0:0	7	)
water	33:38	0:0	7	psz_version
arg	33:51	33:70	6	"#EXT-X-VERSION:%d"
water	33:51	0:0	7	"#EXT-X-VERSION:%d"
arg	33:72	33:80	6	&version
op	33:72	0:0	7	&
water	33:73	0:0	7	version
if	34:8	38:8	4	(ret != 1)
cond	34:12	34:19	5	ret != 1
water	34:12	0:0	6	ret
op	34:16	0:0	6	!=
water	34:19	0:0	6	1
stmts	35:8	38:8	5	
water	35:8	0:0	6	{
call	36:12	36:88	6	msg_Warn
arg	36:21	36:22	7	s
water	36:21	0:0	8	s
arg	36:24	36:88	7	"#EXT-X-VERSION: no protocol version found, assuming version 1."
water	36:24	0:0	8	"#EXT-X-VERSION: no protocol version found, assuming version 1."
water	36:89	0:0	6	;
water	37:12	0:0	6	version
op	37:20	0:0	6	=
water	37:22	0:0	6	1
water	37:23	0:0	6	;
water	38:8	0:0	6	}
call	39:8	39:24	4	free
arg	39:13	39:24	5	psz_version
water	39:13	0:0	6	psz_version
water	39:25	0:0	4	;
water	40:8	0:0	4	p
op	40:10	0:0	4	=
water	40:12	0:0	4	NULL
water	40:16	0:0	4	;
water	41:4	0:0	4	}
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	b_live
op	43:18	0:0	2	=
water	43:20	0:0	2	(
call	43:21	43:66	2	strstr
arg	43:28	43:48	3	(constchar*)buffer
water	43:28	0:0	4	(
water	43:29	0:0	4	const
water	43:35	0:0	4	char
op	43:40	0:0	4	*
water	43:41	0:0	4	)
water	43:42	0:0	4	buffer
arg	43:50	43:66	3	"#EXT-X-ENDLIST"
water	43:50	0:0	4	"#EXT-X-ENDLIST"
op	43:68	0:0	2	==
water	43:71	0:0	2	NULL
water	43:75	0:0	2	)
water	43:77	0:0	2	?
water	43:79	0:0	2	true
water	43:84	0:0	2	:
water	43:86	0:0	2	false
water	43:91	0:0	2	;
decl	45:4	45:92	2	bool	b_meta
op	45:16	0:0	2	=
water	45:18	0:0	2	(
call	45:19	45:67	3	strstr
arg	45:26	45:46	4	(constchar*)buffer
water	45:26	0:0	5	(
water	45:27	0:0	5	const
water	45:33	0:0	5	char
op	45:38	0:0	5	*
water	45:39	0:0	5	)
water	45:40	0:0	5	buffer
arg	45:48	45:67	4	"#EXT-X-STREAM-INF"
water	45:48	0:0	5	"#EXT-X-STREAM-INF"
op	45:69	0:0	2	==
water	45:72	0:0	2	NULL
water	45:76	0:0	2	)
water	45:78	0:0	2	?
water	45:80	0:0	2	false
water	45:86	0:0	2	:
water	45:88	0:0	2	true
if	46:4	47:27	2	(b_meta && b_parent_is_meta)
cond	46:7	46:17	3	b_meta && b_parent_is_meta
water	46:7	0:0	4	b_meta
op	46:14	0:0	4	&&
water	46:17	0:0	4	b_parent_is_meta
stmts	47:8	47:27	3	
return	47:8	47:27	4	VLC_EGENERIC
water	47:15	0:0	5	VLC_EGENERIC
decl	48:4	48:25	2	int	err
op	48:12	0:0	2	=
water	48:14	0:0	2	VLC_SUCCESS
if	49:4	121:4	2	(b_meta)
cond	49:8	49:8	3	b_meta
water	49:8	0:0	4	b_meta
stmts	50:4	121:4	3	
water	50:4	0:0	4	{
call	51:8	51:34	4	msg_Dbg
arg	51:16	51:17	5	s
water	51:16	0:0	6	s
arg	51:19	51:34	5	"Meta playlist"
water	51:19	0:0	6	"Meta playlist"
water	51:35	0:0	4	;
do	53:8	113:8	4	(err == VLC_SUCCESS)
cond	113:17	113:24	5	err == VLC_SUCCESS
water	113:17	0:0	6	err
op	113:21	0:0	6	==
water	113:24	0:0	6	VLC_SUCCESS
stmts	53:11	113:8	5	
water	53:11	0:0	6	{
water	55:12	0:0	6	line
op	55:17	0:0	6	=
call	55:19	55:61	6	ReadLine
arg	55:28	55:35	7	p_begin
water	55:28	0:0	8	p_begin
arg	55:37	55:44	7	&p_read
op	55:37	0:0	8	&
water	55:38	0:0	8	p_read
arg	55:46	55:61	7	p_end-p_begin
water	55:46	0:0	8	p_end
op	55:52	0:0	8	-
water	55:54	0:0	8	p_begin
water	55:62	0:0	6	;
if	56:12	57:21	6	(line == NULL)
cond	56:16	56:24	7	line == NULL
water	56:16	0:0	8	line
op	56:21	0:0	8	==
water	56:24	0:0	8	NULL
stmts	57:16	57:21	7	
break	57:16	57:21	8	
water	58:12	0:0	6	p_begin
op	58:20	0:0	6	=
water	58:22	0:0	6	p_read
water	58:28	0:0	6	;
if	60:12	108:12	6	(strncmp (line ,"#EXT-X-STREAM-INF" ,17 ) == 0)
cond	60:16	60:58	7	strncmp (line ,"#EXT-X-STREAM-INF" ,17 ) == 0
call	60:16	60:53	8	strncmp
arg	60:24	60:28	9	line
water	60:24	0:0	10	line
arg	60:30	60:49	9	"#EXT-X-STREAM-INF"
water	60:30	0:0	10	"#EXT-X-STREAM-INF"
arg	60:51	60:53	9	17
water	60:51	0:0	10	17
op	60:55	0:0	8	==
water	60:58	0:0	8	0
stmts	61:12	108:12	7	
water	61:12	0:0	8	{
water	62:16	0:0	8	p_sys
op	62:21	0:0	8	->
water	62:23	0:0	8	b_meta
op	62:30	0:0	8	=
water	62:32	0:0	8	true
water	62:36	0:0	8	;
decl	63:16	63:71	8	char	*uri
op	63:26	0:0	8	=
call	63:28	63:70	9	ReadLine
arg	63:37	63:44	10	p_begin
water	63:37	0:0	11	p_begin
arg	63:46	63:53	10	&p_read
op	63:46	0:0	11	&
water	63:47	0:0	11	p_read
arg	63:55	63:70	10	p_end-p_begin
water	63:55	0:0	11	p_end
op	63:61	0:0	11	-
water	63:63	0:0	11	p_begin
if	64:16	65:36	8	(uri == NULL)
cond	64:20	64:27	9	uri == NULL
water	64:20	0:0	10	uri
op	64:24	0:0	10	==
water	64:27	0:0	10	NULL
stmts	65:20	65:36	9	
water	65:20	0:0	10	err
op	65:24	0:0	10	=
water	65:26	0:0	10	VLC_ENOMEM
water	65:36	0:0	10	;
else	66:16	106:16	8
stmts	67:16	106:16	9	
water	67:16	0:0	10	{
if	68:20	72:20	10	(* uri == '#')
cond	68:24	68:32	11	* uri == '#'
op	68:24	0:0	12	*
water	68:25	0:0	12	uri
op	68:29	0:0	12	==
water	68:32	0:0	12	'#'
stmts	69:20	72:20	11	
water	69:20	0:0	12	{
call	70:24	70:74	12	msg_Warn
arg	70:33	70:34	13	s
water	70:33	0:0	14	s
arg	70:36	70:69	13	"Skipping invalid stream-inf: %s"
water	70:36	0:0	14	"Skipping invalid stream-inf: %s"
arg	70:71	70:74	13	uri
water	70:71	0:0	14	uri
water	70:75	0:0	12	;
call	71:24	71:32	12	free
arg	71:29	71:32	13	uri
water	71:29	0:0	14	uri
water	71:33	0:0	12	;
water	72:20	0:0	12	}
else	73:20	105:20	10
stmts	74:20	105:20	11	
water	74:20	0:0	12	{
decl	75:24	75:53	12	bool	new_stream_added
op	75:46	0:0	12	=
water	75:48	0:0	12	false
decl	76:24	76:48	12	hls_stream_t	*hls
op	76:42	0:0	12	=
water	76:44	0:0	12	NULL
water	77:24	0:0	12	err
op	77:28	0:0	12	=
call	77:30	77:82	12	parse_StreamInformation
arg	77:54	77:55	13	s
water	77:54	0:0	14	s
arg	77:57	77:65	13	&streams
op	77:57	0:0	14	&
water	77:58	0:0	14	streams
arg	77:67	77:71	13	&hls
op	77:67	0:0	14	&
water	77:68	0:0	14	hls
arg	77:73	77:77	13	line
water	77:73	0:0	14	line
arg	77:79	77:82	13	uri
water	77:79	0:0	14	uri
water	77:83	0:0	12	;
if	78:24	79:51	12	(err == VLC_SUCCESS)
cond	78:28	78:35	13	err == VLC_SUCCESS
water	78:28	0:0	14	err
op	78:32	0:0	14	==
water	78:35	0:0	14	VLC_SUCCESS
stmts	79:28	79:51	13	
water	79:28	0:0	14	new_stream_added
op	79:45	0:0	14	=
water	79:47	0:0	14	true
water	79:51	0:0	14	;
call	80:24	80:32	12	free
arg	80:29	80:32	13	uri
water	80:29	0:0	14	uri
water	80:33	0:0	12	;
if	81:24	104:24	12	(hls)
cond	81:28	81:28	13	hls
water	81:28	0:0	14	hls
stmts	82:24	104:24	13	
water	82:24	0:0	14	{
decl	84:28	84:47	14	uint8_t	*buf
op	84:41	0:0	14	=
water	84:43	0:0	14	NULL
decl	85:28	85:79	14	ssize_t	len
op	85:40	0:0	14	=
call	85:42	85:78	15	read_M3U8_from_url
arg	85:61	85:62	16	s
water	85:61	0:0	17	s
arg	85:64	85:72	16	hls->url
water	85:64	0:0	17	hls
op	85:67	0:0	17	->
water	85:69	0:0	17	url
arg	85:74	85:78	16	&buf
op	85:74	0:0	17	&
water	85:75	0:0	17	buf
if	86:28	94:28	14	(len < 0)
cond	86:32	86:38	15	len < 0
water	86:32	0:0	16	len
op	86:36	0:0	16	<
water	86:38	0:0	16	0
stmts	87:28	94:28	15	
water	87:28	0:0	16	{
call	88:32	88:101	16	msg_Warn
arg	88:41	88:42	17	s
water	88:41	0:0	18	s
arg	88:44	88:91	17	"failed to read %s, continue for other streams"
water	88:44	0:0	18	"failed to read %s, continue for other streams"
arg	88:93	88:101	17	hls->url
water	88:93	0:0	18	hls
op	88:96	0:0	18	->
water	88:98	0:0	18	url
water	88:102	0:0	16	;
if	90:32	91:91	16	(new_stream_added)
cond	90:36	90:36	17	new_stream_added
water	90:36	0:0	18	new_stream_added
stmts	91:36	91:91	17	
call	91:36	91:90	18	vlc_array_remove
arg	91:53	91:60	19	streams
water	91:53	0:0	20	streams
arg	91:62	91:90	19	vlc_array_count(streams)-1
call	91:62	91:85	20	vlc_array_count
arg	91:78	91:85	21	streams
water	91:78	0:0	22	streams
op	91:87	0:0	20	-
water	91:89	0:0	20	1
water	91:91	0:0	18	;
water	93:32	0:0	16	err
op	93:36	0:0	16	=
water	93:38	0:0	16	VLC_SUCCESS
water	93:49	0:0	16	;
water	94:28	0:0	16	}
else	95:28	100:28	14
stmts	96:28	100:28	15	
water	96:28	0:0	16	{
water	98:32	0:0	16	err
op	98:36	0:0	16	=
call	98:38	98:77	16	parse_M3U8
arg	98:49	98:50	17	s
water	98:49	0:0	18	s
arg	98:52	98:59	17	streams
water	98:52	0:0	18	streams
arg	98:61	98:64	17	buf
water	98:61	0:0	18	buf
arg	98:66	98:69	17	len
water	98:66	0:0	18	len
arg	98:71	98:77	17	b_meta
water	98:71	0:0	18	b_meta
water	98:78	0:0	16	;
call	99:32	99:40	16	free
arg	99:37	99:40	17	buf
water	99:37	0:0	18	buf
water	99:41	0:0	16	;
water	100:28	0:0	16	}
water	101:28	0:0	14	hls
op	101:31	0:0	14	->
water	101:33	0:0	14	version
op	101:41	0:0	14	=
water	101:43	0:0	14	version
water	101:50	0:0	14	;
if	102:28	103:66	14	(! p_sys -> b_live)
cond	102:32	102:40	15	! p_sys -> b_live
op	102:32	0:0	16	!
water	102:33	0:0	16	p_sys
op	102:38	0:0	16	->
water	102:40	0:0	16	b_live
stmts	103:32	103:66	15	
water	103:32	0:0	16	hls
op	103:35	0:0	16	->
water	103:37	0:0	16	size
op	103:42	0:0	16	=
call	103:44	103:65	16	hls_GetStreamSize
arg	103:62	103:65	17	hls
water	103:62	0:0	18	hls
water	103:66	0:0	16	;
water	104:24	0:0	14	}
water	105:20	0:0	12	}
water	106:16	0:0	10	}
water	107:16	0:0	8	p_begin
op	107:24	0:0	8	=
water	107:26	0:0	8	p_read
water	107:32	0:0	8	;
water	108:12	0:0	8	}
call	109:12	109:21	6	free
arg	109:17	109:21	7	line
water	109:17	0:0	8	line
water	109:22	0:0	6	;
water	110:12	0:0	6	line
op	110:17	0:0	6	=
water	110:19	0:0	6	NULL
water	110:23	0:0	6	;
if	111:12	112:21	6	(p_begin >= p_end)
cond	111:16	111:27	7	p_begin >= p_end
water	111:16	0:0	8	p_begin
op	111:24	0:0	8	>=
water	111:27	0:0	8	p_end
stmts	112:16	112:21	7	
break	112:16	112:21	8	
water	113:8	0:0	6	}
water	113:36	0:0	4	;
decl	114:8	114:54	4	size_t	stream_count
op	114:28	0:0	4	=
call	114:30	114:53	5	vlc_array_count
arg	114:46	114:53	6	streams
water	114:46	0:0	7	streams
call	115:8	115:74	4	msg_Dbg
arg	115:16	115:17	5	s
water	115:16	0:0	6	s
arg	115:19	115:55	5	"%d streams loaded in Meta playlist"
water	115:19	0:0	6	"%d streams loaded in Meta playlist"
arg	115:57	115:74	5	(int)stream_count
water	115:57	0:0	6	(
water	115:58	0:0	6	int
water	115:61	0:0	6	)
water	115:62	0:0	6	stream_count
water	115:75	0:0	4	;
if	116:8	120:8	4	(stream_count == 0)
cond	116:12	116:28	5	stream_count == 0
water	116:12	0:0	6	stream_count
op	116:25	0:0	6	==
water	116:28	0:0	6	0
stmts	117:8	120:8	5	
water	117:8	0:0	6	{
call	118:12	118:67	6	msg_Err
arg	118:20	118:21	7	s
water	118:20	0:0	8	s
arg	118:23	118:67	7	"No playable streams found in Meta playlist"
water	118:23	0:0	8	"No playable streams found in Meta playlist"
water	118:68	0:0	6	;
water	119:12	0:0	6	err
op	119:16	0:0	6	=
water	119:18	0:0	6	VLC_EGENERIC
water	119:30	0:0	6	;
water	120:8	0:0	6	}
water	121:4	0:0	4	}
else	122:4	199:4	2
stmts	123:4	199:4	3	
water	123:4	0:0	4	{
call	124:8	124:97	4	msg_Dbg
arg	124:16	124:17	5	s
water	124:16	0:0	6	s
arg	124:19	124:57	5	"%s Playlist HLS protocol version: %d"
water	124:19	0:0	6	"%s Playlist HLS protocol version: %d"
arg	124:59	124:88	5	p_sys->b_live?"Live":"VOD"
water	124:59	0:0	6	p_sys
op	124:64	0:0	6	->
water	124:66	0:0	6	b_live
water	124:73	0:0	6	?
water	124:75	0:0	6	"Live"
water	124:81	0:0	6	:
water	124:83	0:0	6	"VOD"
arg	124:90	124:97	5	version
water	124:90	0:0	6	version
water	124:98	0:0	4	;
decl	125:8	125:32	4	hls_stream_t	*hls
op	125:26	0:0	4	=
water	125:28	0:0	4	NULL
if	126:8	127:38	4	(p_sys -> b_meta)
cond	126:12	126:19	5	p_sys -> b_meta
water	126:12	0:0	6	p_sys
op	126:17	0:0	6	->
water	126:19	0:0	6	b_meta
stmts	127:12	127:38	5	
water	127:12	0:0	6	hls
op	127:16	0:0	6	=
call	127:18	127:37	6	hls_GetLast
arg	127:30	127:37	7	streams
water	127:30	0:0	8	streams
water	127:38	0:0	6	;
else	128:8	150:8	4
stmts	129:8	150:8	5	
water	129:8	0:0	6	{
water	131:12	0:0	6	hls
op	131:16	0:0	6	=
call	131:18	131:52	6	hls_New
arg	131:26	131:33	7	streams
water	131:26	0:0	8	streams
arg	131:35	131:36	7	0
water	131:35	0:0	8	0
arg	131:38	131:39	7	0
water	131:38	0:0	8	0
arg	131:41	131:52	7	p_sys->m3u8
water	131:41	0:0	8	p_sys
op	131:46	0:0	8	->
water	131:48	0:0	8	m3u8
water	131:53	0:0	6	;
if	132:12	148:12	6	(hls)
cond	132:16	132:16	7	hls
water	132:16	0:0	8	hls
stmts	133:12	148:12	7	
water	133:12	0:0	8	{
water	135:16	0:0	8	p
op	135:18	0:0	8	=
water	135:20	0:0	8	(
water	135:21	0:0	8	uint8_t
op	135:29	0:0	8	*
water	135:30	0:0	8	)
call	135:31	135:84	8	strstr
arg	135:38	135:58	9	(constchar*)buffer
water	135:38	0:0	10	(
water	135:39	0:0	10	const
water	135:45	0:0	10	char
op	135:50	0:0	10	*
water	135:51	0:0	10	)
water	135:52	0:0	10	buffer
arg	135:60	135:84	9	"#EXT-X-TARGETDURATION:"
water	135:60	0:0	10	"#EXT-X-TARGETDURATION:"
water	135:85	0:0	8	;
if	136:16	145:16	8	(p)
cond	136:20	136:20	9	p
water	136:20	0:0	10	p
stmts	137:16	145:16	9	
water	137:16	0:0	10	{
decl	138:20	138:42	10	uint8_t	*p_rest
op	138:36	0:0	10	=
water	138:38	0:0	10	NULL
decl	139:20	139:73	10	char	*psz_duration
op	139:39	0:0	10	=
call	139:41	139:72	11	ReadLine
arg	139:50	139:51	12	p
water	139:50	0:0	13	p
arg	139:53	139:60	12	&p_rest
op	139:53	0:0	13	&
water	139:54	0:0	13	p_rest
arg	139:63	139:72	12	p_end-p
water	139:63	0:0	13	p_end
op	139:69	0:0	13	-
water	139:71	0:0	13	p
if	140:20	141:43	10	(psz_duration == NULL)
cond	140:24	140:40	11	psz_duration == NULL
water	140:24	0:0	12	psz_duration
op	140:37	0:0	12	==
water	140:40	0:0	12	NULL
stmts	141:24	141:43	11	
return	141:24	141:43	12	VLC_EGENERIC
water	141:31	0:0	13	VLC_EGENERIC
water	142:20	0:0	10	err
op	142:24	0:0	10	=
call	142:26	142:67	10	parse_TargetDuration
arg	142:47	142:48	11	s
water	142:47	0:0	12	s
arg	142:50	142:53	11	hls
water	142:50	0:0	12	hls
arg	142:55	142:67	11	psz_duration
water	142:55	0:0	12	psz_duration
water	142:68	0:0	10	;
call	143:20	143:37	10	free
arg	143:25	143:37	11	psz_duration
water	143:25	0:0	12	psz_duration
water	143:38	0:0	10	;
water	144:20	0:0	10	p
op	144:22	0:0	10	=
water	144:24	0:0	10	NULL
water	144:28	0:0	10	;
water	145:16	0:0	10	}
water	147:16	0:0	8	hls
op	147:19	0:0	8	->
water	147:21	0:0	8	version
op	147:29	0:0	8	=
water	147:31	0:0	8	version
water	147:38	0:0	8	;
water	148:12	0:0	8	}
else	149:12	149:34	6
stmts	149:17	149:34	7	
return	149:17	149:34	8	VLC_ENOMEM
water	149:24	0:0	9	VLC_ENOMEM
water	150:8	0:0	6	}
call	151:8	151:18	4	assert
arg	151:15	151:18	5	hls
water	151:15	0:0	6	hls
water	151:19	0:0	4	;
decl	153:8	153:42	4	bool	media_sequence_loaded
op	153:35	0:0	4	=
water	153:37	0:0	4	false
decl	154:8	154:33	4	int	segment_duration
op	154:29	0:0	4	=
op	154:31	0:0	4	-
water	154:32	0:0	4	1
do	155:8	197:8	4	(err == VLC_SUCCESS)
cond	197:17	197:24	5	err == VLC_SUCCESS
water	197:17	0:0	6	err
op	197:21	0:0	6	==
water	197:24	0:0	6	VLC_SUCCESS
stmts	156:8	197:8	5	
water	156:8	0:0	6	{
water	158:12	0:0	6	line
op	158:17	0:0	6	=
call	158:19	158:61	6	ReadLine
arg	158:28	158:35	7	p_begin
water	158:28	0:0	8	p_begin
arg	158:37	158:44	7	&p_read
op	158:37	0:0	8	&
water	158:38	0:0	8	p_read
arg	158:46	158:61	7	p_end-p_begin
water	158:46	0:0	8	p_end
op	158:52	0:0	8	-
water	158:54	0:0	8	p_begin
water	158:62	0:0	6	;
if	159:12	160:21	6	(line == NULL)
cond	159:16	159:24	7	line == NULL
water	159:16	0:0	8	line
op	159:21	0:0	8	==
water	159:24	0:0	8	NULL
stmts	160:16	160:21	7	
break	160:16	160:21	8	
water	161:12	0:0	6	p_begin
op	161:20	0:0	6	=
water	161:22	0:0	6	p_read
water	161:28	0:0	6	;
if	162:12	163:76	6	(strncmp (line ,"#EXTINF" ,7 ) == 0)
cond	162:16	162:47	7	strncmp (line ,"#EXTINF" ,7 ) == 0
call	162:16	162:42	8	strncmp
arg	162:24	162:28	9	line
water	162:24	0:0	10	line
arg	162:30	162:39	9	"#EXTINF"
water	162:30	0:0	10	"#EXTINF"
arg	162:41	162:42	9	7
water	162:41	0:0	10	7
op	162:44	0:0	8	==
water	162:47	0:0	8	0
stmts	163:16	163:76	7	
water	163:16	0:0	8	err
op	163:20	0:0	8	=
call	163:22	163:75	8	parse_SegmentInformation
arg	163:47	163:50	9	hls
water	163:47	0:0	10	hls
arg	163:52	163:56	9	line
water	163:52	0:0	10	line
arg	163:58	163:75	9	&segment_duration
op	163:58	0:0	10	&
water	163:59	0:0	10	segment_duration
water	163:76	0:0	8	;
else	164:12	165:56	6
stmts	164:17	165:56	7	
if	164:17	165:56	8	(strncmp (line ,"#EXT-X-TARGETDURATION" ,21 ) == 0)
cond	164:21	164:67	9	strncmp (line ,"#EXT-X-TARGETDURATION" ,21 ) == 0
call	164:21	164:62	10	strncmp
arg	164:29	164:33	11	line
water	164:29	0:0	12	line
arg	164:35	164:58	11	"#EXT-X-TARGETDURATION"
water	164:35	0:0	12	"#EXT-X-TARGETDURATION"
arg	164:60	164:62	11	21
water	164:60	0:0	12	21
op	164:64	0:0	10	==
water	164:67	0:0	10	0
stmts	165:16	165:56	9	
water	165:16	0:0	10	err
op	165:20	0:0	10	=
call	165:22	165:55	10	parse_TargetDuration
arg	165:43	165:44	11	s
water	165:43	0:0	12	s
arg	165:46	165:49	11	hls
water	165:46	0:0	12	hls
arg	165:51	165:55	11	line
water	165:51	0:0	12	line
water	165:56	0:0	10	;
else	166:12	175:12	6
stmts	166:17	175:12	7	
if	166:17	175:12	8	(strncmp (line ,"#EXT-X-MEDIA-SEQUENCE" ,21 ) == 0)
cond	166:21	166:67	9	strncmp (line ,"#EXT-X-MEDIA-SEQUENCE" ,21 ) == 0
call	166:21	166:62	10	strncmp
arg	166:29	166:33	11	line
water	166:29	0:0	12	line
arg	166:35	166:58	11	"#EXT-X-MEDIA-SEQUENCE"
water	166:35	0:0	12	"#EXT-X-MEDIA-SEQUENCE"
arg	166:60	166:62	11	21
water	166:60	0:0	12	21
op	166:64	0:0	10	==
water	166:67	0:0	10	0
stmts	167:12	175:12	9	
water	167:12	0:0	10	{
if	170:16	174:16	10	(! media_sequence_loaded)
cond	170:20	170:21	11	! media_sequence_loaded
op	170:20	0:0	12	!
water	170:21	0:0	12	media_sequence_loaded
stmts	171:16	174:16	11	
water	171:16	0:0	12	{
water	172:20	0:0	12	err
op	172:24	0:0	12	=
call	172:26	172:58	12	parse_MediaSequence
arg	172:46	172:47	13	s
water	172:46	0:0	14	s
arg	172:49	172:52	13	hls
water	172:49	0:0	14	hls
arg	172:54	172:58	13	line
water	172:54	0:0	14	line
water	172:59	0:0	12	;
water	173:20	0:0	12	media_sequence_loaded
op	173:42	0:0	12	=
water	173:44	0:0	12	true
water	173:48	0:0	12	;
water	174:16	0:0	12	}
water	175:12	0:0	10	}
else	176:12	177:45	6
stmts	176:17	177:45	7	
if	176:17	177:45	8	(strncmp (line ,"#EXT-X-KEY" ,10 ) == 0)
cond	176:21	176:56	9	strncmp (line ,"#EXT-X-KEY" ,10 ) == 0
call	176:21	176:51	10	strncmp
arg	176:29	176:33	11	line
water	176:29	0:0	12	line
arg	176:35	176:47	11	"#EXT-X-KEY"
water	176:35	0:0	12	"#EXT-X-KEY"
arg	176:49	176:51	11	10
water	176:49	0:0	12	10
op	176:53	0:0	10	==
water	176:56	0:0	10	0
stmts	177:16	177:45	9	
water	177:16	0:0	10	err
op	177:20	0:0	10	=
call	177:22	177:44	10	parse_Key
arg	177:32	177:33	11	s
water	177:32	0:0	12	s
arg	177:35	177:38	11	hls
water	177:35	0:0	12	hls
arg	177:40	177:44	11	line
water	177:40	0:0	12	line
water	177:45	0:0	10	;
else	178:12	179:57	6
stmts	178:17	179:57	7	
if	178:17	179:57	8	(strncmp (line ,"#EXT-X-PROGRAM-DATE-TIME" ,24 ) == 0)
cond	178:21	178:70	9	strncmp (line ,"#EXT-X-PROGRAM-DATE-TIME" ,24 ) == 0
call	178:21	178:65	10	strncmp
arg	178:29	178:33	11	line
water	178:29	0:0	12	line
arg	178:35	178:61	11	"#EXT-X-PROGRAM-DATE-TIME"
water	178:35	0:0	12	"#EXT-X-PROGRAM-DATE-TIME"
arg	178:63	178:65	11	24
water	178:63	0:0	12	24
op	178:67	0:0	10	==
water	178:70	0:0	10	0
stmts	179:16	179:57	9	
water	179:16	0:0	10	err
op	179:20	0:0	10	=
call	179:22	179:56	10	parse_ProgramDateTime
arg	179:44	179:45	11	s
water	179:44	0:0	12	s
arg	179:47	179:50	11	hls
water	179:47	0:0	12	hls
arg	179:52	179:56	11	line
water	179:52	0:0	12	line
water	179:57	0:0	10	;
else	180:12	181:52	6
stmts	180:17	181:52	7	
if	180:17	181:52	8	(strncmp (line ,"#EXT-X-ALLOW-CACHE" ,18 ) == 0)
cond	180:21	180:64	9	strncmp (line ,"#EXT-X-ALLOW-CACHE" ,18 ) == 0
call	180:21	180:59	10	strncmp
arg	180:29	180:33	11	line
water	180:29	0:0	12	line
arg	180:35	180:55	11	"#EXT-X-ALLOW-CACHE"
water	180:35	0:0	12	"#EXT-X-ALLOW-CACHE"
arg	180:57	180:59	11	18
water	180:57	0:0	12	18
op	180:61	0:0	10	==
water	180:64	0:0	10	0
stmts	181:16	181:52	9	
water	181:16	0:0	10	err
op	181:20	0:0	10	=
call	181:22	181:51	10	parse_AllowCache
arg	181:39	181:40	11	s
water	181:39	0:0	12	s
arg	181:42	181:45	11	hls
water	181:42	0:0	12	hls
arg	181:47	181:51	11	line
water	181:47	0:0	12	line
water	181:52	0:0	10	;
else	182:12	183:55	6
stmts	182:17	183:55	7	
if	182:17	183:55	8	(strncmp (line ,"#EXT-X-DISCONTINUITY" ,20 ) == 0)
cond	182:21	182:66	9	strncmp (line ,"#EXT-X-DISCONTINUITY" ,20 ) == 0
call	182:21	182:61	10	strncmp
arg	182:29	182:33	11	line
water	182:29	0:0	12	line
arg	182:35	182:57	11	"#EXT-X-DISCONTINUITY"
water	182:35	0:0	12	"#EXT-X-DISCONTINUITY"
arg	182:59	182:61	11	20
water	182:59	0:0	12	20
op	182:63	0:0	10	==
water	182:66	0:0	10	0
stmts	183:16	183:55	9	
water	183:16	0:0	10	err
op	183:20	0:0	10	=
call	183:22	183:54	10	parse_Discontinuity
arg	183:42	183:43	11	s
water	183:42	0:0	12	s
arg	183:45	183:48	11	hls
water	183:45	0:0	12	hls
arg	183:50	183:54	11	line
water	183:50	0:0	12	line
water	183:55	0:0	10	;
else	184:12	185:49	6
stmts	184:17	185:49	7	
if	184:17	185:49	8	(strncmp (line ,"#EXT-X-VERSION" ,14 ) == 0)
cond	184:21	184:60	9	strncmp (line ,"#EXT-X-VERSION" ,14 ) == 0
call	184:21	184:55	10	strncmp
arg	184:29	184:33	11	line
water	184:29	0:0	12	line
arg	184:35	184:51	11	"#EXT-X-VERSION"
water	184:35	0:0	12	"#EXT-X-VERSION"
arg	184:53	184:55	11	14
water	184:53	0:0	12	14
op	184:57	0:0	10	==
water	184:60	0:0	10	0
stmts	185:16	185:49	9	
water	185:16	0:0	10	err
op	185:20	0:0	10	=
call	185:22	185:48	10	parse_Version
arg	185:36	185:37	11	s
water	185:36	0:0	12	s
arg	185:39	185:42	11	hls
water	185:39	0:0	12	hls
arg	185:44	185:48	11	line
water	185:44	0:0	12	line
water	185:49	0:0	10	;
else	186:12	187:43	6
stmts	186:17	187:43	7	
if	186:17	187:43	8	(strncmp (line ,"#EXT-X-ENDLIST" ,14 ) == 0)
cond	186:21	186:60	9	strncmp (line ,"#EXT-X-ENDLIST" ,14 ) == 0
call	186:21	186:55	10	strncmp
arg	186:29	186:33	11	line
water	186:29	0:0	12	line
arg	186:35	186:51	11	"#EXT-X-ENDLIST"
water	186:35	0:0	12	"#EXT-X-ENDLIST"
arg	186:53	186:55	11	14
water	186:53	0:0	12	14
op	186:57	0:0	10	==
water	186:60	0:0	10	0
stmts	187:16	187:43	9	
water	187:16	0:0	10	err
op	187:20	0:0	10	=
call	187:22	187:42	10	parse_EndList
arg	187:36	187:37	11	s
water	187:36	0:0	12	s
arg	187:39	187:42	11	hls
water	187:39	0:0	12	hls
water	187:43	0:0	10	;
else	188:12	192:12	6
stmts	188:17	192:12	7	
if	188:17	192:12	8	((strncmp (line ,"#" ,1 ) != 0 ) && ( * line != '\0' ))
cond	188:21	188:67	9	(strncmp (line ,"#" ,1 ) != 0 ) && ( * line != '\0' )
water	188:21	0:0	10	(
call	188:22	188:42	10	strncmp
arg	188:30	188:34	11	line
water	188:30	0:0	12	line
arg	188:36	188:39	11	"#"
water	188:36	0:0	12	"#"
arg	188:41	188:42	11	1
water	188:41	0:0	12	1
op	188:44	0:0	10	!=
water	188:47	0:0	10	0
water	188:48	0:0	10	)
op	188:50	0:0	10	&&
water	188:53	0:0	10	(
op	188:54	0:0	10	*
water	188:55	0:0	10	line
op	188:60	0:0	10	!=
water	188:63	0:0	10	'\0'
water	188:67	0:0	10	)
stmts	189:12	192:12	9	
water	189:12	0:0	10	{
water	190:16	0:0	10	err
op	190:20	0:0	10	=
call	190:22	190:66	10	parse_AddSegment
arg	190:39	190:42	11	hls
water	190:39	0:0	12	hls
arg	190:44	190:60	11	segment_duration
water	190:44	0:0	12	segment_duration
arg	190:62	190:66	11	line
water	190:62	0:0	12	line
water	190:67	0:0	10	;
water	191:16	0:0	10	segment_duration
op	191:33	0:0	10	=
op	191:35	0:0	10	-
water	191:36	0:0	10	1
water	191:37	0:0	10	;
water	192:12	0:0	10	}
call	193:12	193:21	6	free
arg	193:17	193:21	7	line
water	193:17	0:0	8	line
water	193:22	0:0	6	;
water	194:12	0:0	6	line
op	194:17	0:0	6	=
water	194:19	0:0	6	NULL
water	194:23	0:0	6	;
if	195:12	196:21	6	(p_begin >= p_end)
cond	195:16	195:27	7	p_begin >= p_end
water	195:16	0:0	8	p_begin
op	195:24	0:0	8	>=
water	195:27	0:0	8	p_end
stmts	196:16	196:21	7	
break	196:16	196:21	8	
water	197:8	0:0	6	}
water	197:36	0:0	4	;
call	198:8	198:17	4	free
arg	198:13	198:17	5	line
water	198:13	0:0	6	line
water	198:18	0:0	4	;
water	199:4	0:0	4	}
return	200:4	200:14	2	err
water	200:11	0:0	3	err

func	2:0	84:0	0	static int	ThreadControl
params	2:24	0:0	1	
param	2:25	2:44	2	vout_thread_t *	vout
param	2:46	2:68	2	vout_control_cmd_t	cmd
stmnts	4:4	83:12	1	
switch	4:4	81:4	2	(cmd . type)
cond	4:11	4:15	3	cmd . type
water	4:11	0:0	4	cmd
op	4:14	0:0	4	.
water	4:15	0:0	4	type
stmts	4:21	81:4	3	
water	4:21	0:0	4	{
label	5:4	5:26	4	case VOUT_CONTROL_INIT :
call	6:8	6:23	4	ThreadInit
arg	6:19	6:23	5	vout
water	6:19	0:0	6	vout
water	6:24	0:0	4	;
if	7:8	8:17	4	(!ThreadStart (vout ,NULL ))
cond	7:12	7:35	5	!ThreadStart (vout ,NULL )
op	7:12	0:0	6	!
call	7:13	7:35	6	ThreadStart
arg	7:25	7:29	7	vout
water	7:25	0:0	8	vout
arg	7:31	7:35	7	NULL
water	7:31	0:0	8	NULL
stmts	8:12	8:17	5	
break	8:12	8:17	6	
label	9:4	9:27	4	case VOUT_CONTROL_CLEAN :
call	10:8	10:29	4	ThreadStop
arg	10:19	10:23	5	vout
water	10:19	0:0	6	vout
arg	10:25	10:29	5	NULL
water	10:25	0:0	6	NULL
water	10:30	0:0	4	;
call	11:8	11:24	4	ThreadClean
arg	11:20	11:24	5	vout
water	11:20	0:0	6	vout
water	11:25	0:0	4	;
return	12:8	12:16	4	1
water	12:15	0:0	5	1
label	13:4	13:28	4	case VOUT_CONTROL_REINIT :
if	14:8	15:20	4	(ThreadReinit (vout ,cmd . u . cfg ))
cond	14:12	14:40	5	ThreadReinit (vout ,cmd . u . cfg )
call	14:12	14:40	6	ThreadReinit
arg	14:25	14:29	7	vout
water	14:25	0:0	8	vout
arg	14:31	14:40	7	cmd.u.cfg
water	14:31	0:0	8	cmd
op	14:34	0:0	8	.
water	14:35	0:0	8	u
op	14:36	0:0	8	.
water	14:37	0:0	8	cfg
stmts	15:12	15:20	5	
return	15:12	15:20	6	1
water	15:19	0:0	7	1
break	16:8	16:13	4	
label	17:4	17:32	4	case VOUT_CONTROL_SUBPICTURE :
call	18:8	18:54	4	ThreadDisplaySubpicture
arg	18:32	18:36	5	vout
water	18:32	0:0	6	vout
arg	18:38	18:54	5	cmd.u.subpicture
water	18:38	0:0	6	cmd
op	18:41	0:0	6	.
water	18:42	0:0	6	u
op	18:43	0:0	6	.
water	18:44	0:0	6	subpicture
water	18:55	0:0	4	;
water	19:8	0:0	4	cmd
op	19:11	0:0	4	.
water	19:12	0:0	4	u
op	19:13	0:0	4	.
water	19:14	0:0	4	subpicture
op	19:25	0:0	4	=
water	19:27	0:0	4	NULL
water	19:31	0:0	4	;
break	20:8	20:13	4	
label	21:4	21:38	4	case VOUT_CONTROL_FLUSH_SUBPICTURE :
call	22:8	22:49	4	ThreadFlushSubpicture
arg	22:30	22:34	5	vout
water	22:30	0:0	6	vout
arg	22:36	22:49	5	cmd.u.integer
water	22:36	0:0	6	cmd
op	22:39	0:0	6	.
water	22:40	0:0	6	u
op	22:41	0:0	6	.
water	22:42	0:0	6	integer
water	22:50	0:0	4	;
break	23:8	23:13	4	
label	24:4	24:31	4	case VOUT_CONTROL_OSD_TITLE :
call	25:8	25:48	4	ThreadDisplayOsdTitle
arg	25:30	25:34	5	vout
water	25:30	0:0	6	vout
arg	25:36	25:48	5	cmd.u.string
water	25:36	0:0	6	cmd
op	25:39	0:0	6	.
water	25:40	0:0	6	u
op	25:41	0:0	6	.
water	25:42	0:0	6	string
water	25:49	0:0	4	;
break	26:8	26:13	4	
label	27:4	27:36	4	case VOUT_CONTROL_CHANGE_FILTERS :
call	28:8	28:59	4	ThreadChangeFilters
arg	28:28	28:32	5	vout
water	28:28	0:0	6	vout
arg	28:34	28:38	5	NULL
water	28:34	0:0	6	NULL
arg	28:40	28:52	5	cmd.u.string
water	28:40	0:0	6	cmd
op	28:43	0:0	6	.
water	28:44	0:0	6	u
op	28:45	0:0	6	.
water	28:46	0:0	6	string
arg	28:54	28:59	5	false
water	28:54	0:0	6	false
water	28:60	0:0	4	;
break	29:8	29:13	4	
label	30:4	30:40	4	case VOUT_CONTROL_CHANGE_SUB_SOURCES :
call	31:8	31:49	4	ThreadChangeSubSources
arg	31:31	31:35	5	vout
water	31:31	0:0	6	vout
arg	31:37	31:49	5	cmd.u.string
water	31:37	0:0	6	cmd
op	31:40	0:0	6	.
water	31:41	0:0	6	u
op	31:42	0:0	6	.
water	31:43	0:0	6	string
water	31:50	0:0	4	;
break	32:8	32:13	4	
label	33:4	33:40	4	case VOUT_CONTROL_CHANGE_SUB_FILTERS :
call	34:8	34:49	4	ThreadChangeSubFilters
arg	34:31	34:35	5	vout
water	34:31	0:0	6	vout
arg	34:37	34:49	5	cmd.u.string
water	34:37	0:0	6	cmd
op	34:40	0:0	6	.
water	34:41	0:0	6	u
op	34:42	0:0	6	.
water	34:43	0:0	6	string
water	34:50	0:0	4	;
break	35:8	35:13	4	
label	36:4	36:39	4	case VOUT_CONTROL_CHANGE_SUB_MARGIN :
call	37:8	37:49	4	ThreadChangeSubMargin
arg	37:30	37:34	5	vout
water	37:30	0:0	6	vout
arg	37:36	37:49	5	cmd.u.integer
water	37:36	0:0	6	cmd
op	37:39	0:0	6	.
water	37:40	0:0	6	u
op	37:41	0:0	6	.
water	37:42	0:0	6	integer
water	37:50	0:0	4	;
break	38:8	38:13	4	
label	39:4	39:27	4	case VOUT_CONTROL_PAUSE :
call	40:8	40:67	4	ThreadChangePause
arg	40:26	40:30	5	vout
water	40:26	0:0	6	vout
arg	40:32	40:49	5	cmd.u.pause.is_on
water	40:32	0:0	6	cmd
op	40:35	0:0	6	.
water	40:36	0:0	6	u
op	40:37	0:0	6	.
water	40:38	0:0	6	pause
op	40:43	0:0	6	.
water	40:44	0:0	6	is_on
arg	40:51	40:67	5	cmd.u.pause.date
water	40:51	0:0	6	cmd
op	40:54	0:0	6	.
water	40:55	0:0	6	u
op	40:56	0:0	6	.
water	40:57	0:0	6	pause
op	40:62	0:0	6	.
water	40:63	0:0	6	date
water	40:68	0:0	4	;
break	41:8	41:13	4	
label	42:4	42:27	4	case VOUT_CONTROL_FLUSH :
call	43:8	43:43	4	ThreadFlush
arg	43:20	43:24	5	vout
water	43:20	0:0	6	vout
arg	43:26	43:31	5	false
water	43:26	0:0	6	false
arg	43:33	43:43	5	cmd.u.time
water	43:33	0:0	6	cmd
op	43:36	0:0	6	.
water	43:37	0:0	6	u
op	43:38	0:0	6	.
water	43:39	0:0	6	time
water	43:44	0:0	4	;
break	44:8	44:13	4	
label	45:4	45:27	4	case VOUT_CONTROL_RESET :
call	46:8	46:24	4	ThreadReset
arg	46:20	46:24	5	vout
water	46:20	0:0	6	vout
water	46:25	0:0	4	;
break	47:8	47:13	4	
label	48:4	48:26	4	case VOUT_CONTROL_STEP :
call	49:8	49:39	4	ThreadStep
arg	49:19	49:23	5	vout
water	49:19	0:0	6	vout
arg	49:25	49:39	5	cmd.u.time_ptr
water	49:25	0:0	6	cmd
op	49:28	0:0	6	.
water	49:29	0:0	6	u
op	49:30	0:0	6	.
water	49:31	0:0	6	time_ptr
water	49:40	0:0	4	;
break	50:8	50:13	4	
label	51:4	51:32	4	case VOUT_CONTROL_FULLSCREEN :
call	52:8	52:50	4	ThreadChangeFullscreen
arg	52:31	52:35	5	vout
water	52:31	0:0	6	vout
arg	52:37	52:50	5	cmd.u.boolean
water	52:37	0:0	6	cmd
op	52:40	0:0	6	.
water	52:41	0:0	6	u
op	52:42	0:0	6	.
water	52:43	0:0	6	boolean
water	52:51	0:0	4	;
break	53:8	53:13	4	
label	54:4	54:34	4	case VOUT_CONTROL_WINDOW_STATE :
call	55:8	55:51	4	ThreadChangeWindowState
arg	55:32	55:36	5	vout
water	55:32	0:0	6	vout
arg	55:38	55:51	5	cmd.u.integer
water	55:38	0:0	6	cmd
op	55:41	0:0	6	.
water	55:42	0:0	6	u
op	55:43	0:0	6	.
water	55:44	0:0	6	integer
water	55:52	0:0	4	;
break	56:8	56:13	4	
label	57:4	57:36	4	case VOUT_CONTROL_DISPLAY_FILLED :
call	58:8	58:53	4	ThreadChangeDisplayFilled
arg	58:34	58:38	5	vout
water	58:34	0:0	6	vout
arg	58:40	58:53	5	cmd.u.boolean
water	58:40	0:0	6	cmd
op	58:43	0:0	6	.
water	58:44	0:0	6	u
op	58:45	0:0	6	.
water	58:46	0:0	6	boolean
water	58:54	0:0	4	;
break	59:8	59:13	4	
label	60:4	60:26	4	case VOUT_CONTROL_ZOOM :
call	61:8	61:57	4	ThreadChangeZoom
arg	61:25	61:29	5	vout
water	61:25	0:0	6	vout
arg	61:31	61:43	5	cmd.u.pair.a
water	61:31	0:0	6	cmd
op	61:34	0:0	6	.
water	61:35	0:0	6	u
op	61:36	0:0	6	.
water	61:37	0:0	6	pair
op	61:41	0:0	6	.
water	61:42	0:0	6	a
arg	61:45	61:57	5	cmd.u.pair.b
water	61:45	0:0	6	cmd
op	61:48	0:0	6	.
water	61:49	0:0	6	u
op	61:50	0:0	6	.
water	61:51	0:0	6	pair
op	61:55	0:0	6	.
water	61:56	0:0	6	b
water	61:58	0:0	4	;
break	62:8	62:13	4	
label	63:4	63:34	4	case VOUT_CONTROL_ASPECT_RATIO :
call	64:8	64:64	4	ThreadChangeAspectRatio
arg	64:32	64:36	5	vout
water	64:32	0:0	6	vout
arg	64:38	64:50	5	cmd.u.pair.a
water	64:38	0:0	6	cmd
op	64:41	0:0	6	.
water	64:42	0:0	6	u
op	64:43	0:0	6	.
water	64:44	0:0	6	pair
op	64:48	0:0	6	.
water	64:49	0:0	6	a
arg	64:52	64:64	5	cmd.u.pair.b
water	64:52	0:0	6	cmd
op	64:55	0:0	6	.
water	64:56	0:0	6	u
op	64:57	0:0	6	.
water	64:58	0:0	6	pair
op	64:62	0:0	6	.
water	64:63	0:0	6	b
water	64:65	0:0	4	;
break	65:8	65:13	4	
label	66:4	66:32	4	case VOUT_CONTROL_CROP_RATIO :
call	67:8	67:63	4	ThreadExecuteCropRatio
arg	67:31	67:35	5	vout
water	67:31	0:0	6	vout
arg	67:37	67:49	5	cmd.u.pair.a
water	67:37	0:0	6	cmd
op	67:40	0:0	6	.
water	67:41	0:0	6	u
op	67:42	0:0	6	.
water	67:43	0:0	6	pair
op	67:47	0:0	6	.
water	67:48	0:0	6	a
arg	67:51	67:63	5	cmd.u.pair.b
water	67:51	0:0	6	cmd
op	67:54	0:0	6	.
water	67:55	0:0	6	u
op	67:56	0:0	6	.
water	67:57	0:0	6	pair
op	67:61	0:0	6	.
water	67:62	0:0	6	b
water	67:64	0:0	4	;
break	68:8	68:13	4	
label	69:4	69:33	4	case VOUT_CONTROL_CROP_WINDOW :
call	70:8	72:55	4	ThreadExecuteCropWindow
arg	70:32	70:36	5	vout
water	70:32	0:0	6	vout
arg	71:16	71:30	5	cmd.u.window.x
water	71:16	0:0	6	cmd
op	71:19	0:0	6	.
water	71:20	0:0	6	u
op	71:21	0:0	6	.
water	71:22	0:0	6	window
op	71:28	0:0	6	.
water	71:29	0:0	6	x
arg	71:32	71:46	5	cmd.u.window.y
water	71:32	0:0	6	cmd
op	71:35	0:0	6	.
water	71:36	0:0	6	u
op	71:37	0:0	6	.
water	71:38	0:0	6	window
op	71:44	0:0	6	.
water	71:45	0:0	6	y
arg	72:16	72:34	5	cmd.u.window.width
water	72:16	0:0	6	cmd
op	72:19	0:0	6	.
water	72:20	0:0	6	u
op	72:21	0:0	6	.
water	72:22	0:0	6	window
op	72:28	0:0	6	.
water	72:29	0:0	6	width
arg	72:36	72:55	5	cmd.u.window.height
water	72:36	0:0	6	cmd
op	72:39	0:0	6	.
water	72:40	0:0	6	u
op	72:41	0:0	6	.
water	72:42	0:0	6	window
op	72:48	0:0	6	.
water	72:49	0:0	6	height
water	72:56	0:0	4	;
break	73:8	73:13	4	
label	74:4	74:33	4	case VOUT_CONTROL_CROP_BORDER :
call	75:8	77:55	4	ThreadExecuteCropBorder
arg	75:32	75:36	5	vout
water	75:32	0:0	6	vout
arg	76:16	76:33	5	cmd.u.border.left
water	76:16	0:0	6	cmd
op	76:19	0:0	6	.
water	76:20	0:0	6	u
op	76:21	0:0	6	.
water	76:22	0:0	6	border
op	76:28	0:0	6	.
water	76:29	0:0	6	left
arg	76:36	76:52	5	cmd.u.border.top
water	76:36	0:0	6	cmd
op	76:39	0:0	6	.
water	76:40	0:0	6	u
op	76:41	0:0	6	.
water	76:42	0:0	6	border
op	76:48	0:0	6	.
water	76:49	0:0	6	top
arg	77:16	77:34	5	cmd.u.border.right
water	77:16	0:0	6	cmd
op	77:19	0:0	6	.
water	77:20	0:0	6	u
op	77:21	0:0	6	.
water	77:22	0:0	6	border
op	77:28	0:0	6	.
water	77:29	0:0	6	right
arg	77:36	77:55	5	cmd.u.border.bottom
water	77:36	0:0	6	cmd
op	77:39	0:0	6	.
water	77:40	0:0	6	u
op	77:41	0:0	6	.
water	77:42	0:0	6	border
op	77:48	0:0	6	.
water	77:49	0:0	6	bottom
water	77:56	0:0	4	;
break	78:8	78:13	4	
label	79:4	79:11	4	default :
break	80:8	80:13	4	
water	81:4	0:0	4	}
call	82:4	82:31	2	vout_control_cmd_Clean
arg	82:27	82:31	3	&cmd
op	82:27	0:0	4	&
water	82:28	0:0	4	cmd
water	82:32	0:0	2	;
return	83:4	83:12	2	0
water	83:11	0:0	3	0

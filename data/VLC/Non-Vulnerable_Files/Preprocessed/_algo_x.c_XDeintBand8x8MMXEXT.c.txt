func	2:0	29:0	0	static inline void	XDeintBand8x8MMXEXT
params	2:38	0:0	1	
param	2:40	2:52	2	uint8_t *	dst
param	2:54	2:63	2	int	i_dst
param	3:40	3:52	2	uint8_t *	src
param	3:54	3:63	2	int	i_src
param	4:40	4:55	2	const int	i_mbx
param	4:57	4:68	2	int	i_modx
stmnts	0:0	28:54	1	
decl	6:4	6:9	2	int	x
for	8:4	26:4	2	(x = 0 ;x < i_mbx;x ++)
forinit	8:9	8:14	3	x = 0 ;
water	8:9	0:0	4	x
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	x < i_mbx
water	8:16	0:0	4	x
op	8:18	0:0	4	<
water	8:20	0:0	4	i_mbx
forexpr	8:27	8:28	3	x ++
water	8:27	0:0	4	x
op	8:28	0:0	4	++
stmts	9:4	26:4	3	
water	9:4	0:0	4	{
decl	10:8	10:13	4	int	s
if	11:8	17:8	4	(( s =XDeint8x8DetectMMXEXT (src ,i_src ) ))
cond	11:12	11:54	5	( s =XDeint8x8DetectMMXEXT (src ,i_src ) )
water	11:12	0:0	6	(
water	11:14	0:0	6	s
op	11:16	0:0	6	=
call	11:18	11:52	6	XDeint8x8DetectMMXEXT
arg	11:41	11:44	7	src
water	11:41	0:0	8	src
arg	11:46	11:52	7	i_src
water	11:46	0:0	8	i_src
water	11:54	0:0	6	)
stmts	12:8	17:8	5	
water	12:8	0:0	6	{
if	13:12	14:63	6	(x == 0 || x == i_mbx - 1)
cond	13:16	13:39	7	x == 0 || x == i_mbx - 1
water	13:16	0:0	8	x
op	13:18	0:0	8	==
water	13:21	0:0	8	0
op	13:23	0:0	8	||
water	13:26	0:0	8	x
op	13:28	0:0	8	==
water	13:31	0:0	8	i_mbx
op	13:37	0:0	8	-
water	13:39	0:0	8	1
stmts	14:16	14:63	7	
call	14:16	14:62	8	XDeint8x8FieldEMMXEXT
arg	14:39	14:42	9	dst
water	14:39	0:0	10	dst
arg	14:44	14:49	9	i_dst
water	14:44	0:0	10	i_dst
arg	14:51	14:54	9	src
water	14:51	0:0	10	src
arg	14:56	14:62	9	i_src
water	14:56	0:0	10	i_src
water	14:63	0:0	8	;
else	15:12	16:62	6
stmts	16:16	16:62	7	
call	16:16	16:61	8	XDeint8x8FieldMMXEXT
arg	16:38	16:41	9	dst
water	16:38	0:0	10	dst
arg	16:43	16:48	9	i_dst
water	16:43	0:0	10	i_dst
arg	16:50	16:53	9	src
water	16:50	0:0	10	src
arg	16:55	16:61	9	i_src
water	16:55	0:0	10	i_src
water	16:62	0:0	8	;
water	17:8	0:0	6	}
else	18:8	23:8	4
stmts	19:8	23:8	5	
water	19:8	0:0	6	{
call	20:12	22:57	6	XDeint8x8MergeMMXEXT
arg	20:34	20:37	7	dst
water	20:34	0:0	8	dst
arg	20:39	20:44	7	i_dst
water	20:39	0:0	8	i_dst
arg	21:34	21:47	7	&src[0*i_src]
op	21:34	0:0	8	&
water	21:35	0:0	8	src
op	21:38	0:0	8	[
water	21:39	0:0	8	0
op	21:40	0:0	8	*
water	21:41	0:0	8	i_src
op	21:46	0:0	8	]
arg	21:49	21:56	7	2*i_src
water	21:49	0:0	8	2
op	21:50	0:0	8	*
water	21:51	0:0	8	i_src
arg	22:34	22:47	7	&src[1*i_src]
op	22:34	0:0	8	&
water	22:35	0:0	8	src
op	22:38	0:0	8	[
water	22:39	0:0	8	1
op	22:40	0:0	8	*
water	22:41	0:0	8	i_src
op	22:46	0:0	8	]
arg	22:49	22:57	7	2*i_src
water	22:49	0:0	8	2
op	22:50	0:0	8	*
water	22:51	0:0	8	i_src
water	22:58	0:0	6	;
water	23:8	0:0	6	}
water	24:8	0:0	4	dst
op	24:12	0:0	4	+=
water	24:15	0:0	4	8
water	24:16	0:0	4	;
water	25:8	0:0	4	src
op	25:12	0:0	4	+=
water	25:15	0:0	4	8
water	25:16	0:0	4	;
water	26:4	0:0	4	}
if	27:4	28:54	2	(i_modx)
cond	27:8	27:8	3	i_modx
water	27:8	0:0	4	i_modx
stmts	28:8	28:54	3	
call	28:8	28:53	4	XDeintNxN
arg	28:19	28:22	5	dst
water	28:19	0:0	6	dst
arg	28:24	28:29	5	i_dst
water	28:24	0:0	6	i_dst
arg	28:31	28:34	5	src
water	28:31	0:0	6	src
arg	28:36	28:41	5	i_src
water	28:36	0:0	6	i_src
arg	28:43	28:49	5	i_modx
water	28:43	0:0	6	i_modx
arg	28:51	28:53	5	8
water	28:51	0:0	6	8
water	28:54	0:0	4	;
decl	35:4	35:9	0	int	x
decl	39:8	39:13	0	int	s

func	2:0	48:0	0	static block_t *	DecodeBlock
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	47:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	6:19	2	(pp_block == NULL)
cond	5:8	5:20	3	pp_block == NULL
water	5:8	0:0	4	pp_block
op	5:17	0:0	4	==
water	5:20	0:0	4	NULL
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
decl	7:4	7:32	2	block_t	*p_block
op	7:21	0:0	2	=
op	7:23	0:0	2	*
water	7:24	0:0	2	pp_block
op	8:4	0:0	2	*
water	8:5	0:0	2	pp_block
op	8:14	0:0	2	=
water	8:16	0:0	2	NULL
water	8:20	0:0	2	;
if	9:4	10:19	2	(p_block == NULL)
cond	9:8	9:19	3	p_block == NULL
water	9:8	0:0	4	p_block
op	9:16	0:0	4	==
water	9:19	0:0	4	NULL
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
if	11:4	15:4	2	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date ))
cond	11:8	12:53	3	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date )
water	11:8	0:0	4	p_block
op	11:15	0:0	4	->
water	11:17	0:0	4	i_pts
op	11:23	0:0	4	>
water	11:25	0:0	4	VLC_TS_INVALID
op	11:40	0:0	4	&&
water	12:8	0:0	4	p_block
op	12:15	0:0	4	->
water	12:17	0:0	4	i_pts
op	12:23	0:0	4	!=
call	12:26	12:53	4	date_Get
arg	12:36	12:53	5	&p_sys->end_date
op	12:36	0:0	6	&
water	12:37	0:0	6	p_sys
op	12:42	0:0	6	->
water	12:44	0:0	6	end_date
stmts	13:4	15:4	3	
water	13:4	0:0	4	{
call	14:8	14:51	4	date_Set
arg	14:18	14:34	5	&p_sys->end_date
op	14:18	0:0	6	&
water	14:19	0:0	6	p_sys
op	14:24	0:0	6	->
water	14:26	0:0	6	end_date
arg	14:36	14:51	5	p_block->i_pts
water	14:36	0:0	6	p_block
op	14:43	0:0	6	->
water	14:45	0:0	6	i_pts
water	14:52	0:0	4	;
water	15:4	0:0	4	}
else	16:4	21:4	2
stmts	16:9	21:4	3	
if	16:9	21:4	4	(!date_Get (& p_sys -> end_date ))
cond	16:13	16:41	5	!date_Get (& p_sys -> end_date )
op	16:13	0:0	6	!
call	16:14	16:41	6	date_Get
arg	16:24	16:41	7	&p_sys->end_date
op	16:24	0:0	8	&
water	16:25	0:0	8	p_sys
op	16:30	0:0	8	->
water	16:32	0:0	8	end_date
stmts	17:4	21:4	5	
water	17:4	0:0	6	{
call	19:8	19:31	6	block_Release
arg	19:23	19:31	7	p_block
water	19:23	0:0	8	p_block
water	19:32	0:0	6	;
return	20:8	20:19	6	NULL
water	20:15	0:0	7	NULL
water	21:4	0:0	6	}
water	23:4	0:0	2	p_block
op	23:11	0:0	2	->
water	23:13	0:0	2	i_pts
op	23:19	0:0	2	=
water	23:21	0:0	2	VLC_TS_INVALID
water	23:35	0:0	2	;
water	24:4	0:0	2	unsigned
water	24:13	0:0	2	samples
op	24:21	0:0	2	=
water	24:23	0:0	2	p_block
op	24:30	0:0	2	->
water	24:32	0:0	2	i_buffer
op	24:41	0:0	2	/
water	24:43	0:0	2	p_dec
op	24:48	0:0	2	->
water	24:50	0:0	2	fmt_in
op	24:56	0:0	2	.
water	24:57	0:0	2	audio
op	24:62	0:0	2	.
water	24:63	0:0	2	i_channels
water	24:73	0:0	2	;
if	25:4	29:4	2	(samples == 0)
cond	25:8	25:19	3	samples == 0
water	25:8	0:0	4	samples
op	25:16	0:0	4	==
water	25:19	0:0	4	0
stmts	26:4	29:4	3	
water	26:4	0:0	4	{
call	27:8	27:31	4	block_Release
arg	27:23	27:31	5	p_block
water	27:23	0:0	6	p_block
water	27:32	0:0	4	;
return	28:8	28:19	4	NULL
water	28:15	0:0	5	NULL
water	29:4	0:0	4	}
decl	30:4	30:61	2	block_t	*p_out
op	30:19	0:0	2	=
call	30:21	30:60	3	decoder_NewAudioBuffer
arg	30:45	30:50	4	p_dec
water	30:45	0:0	5	p_dec
arg	30:52	30:60	4	samples
water	30:52	0:0	5	samples
if	31:4	35:4	2	(p_out == NULL)
cond	31:8	31:17	3	p_out == NULL
water	31:8	0:0	4	p_out
op	31:14	0:0	4	==
water	31:17	0:0	4	NULL
stmts	32:4	35:4	3	
water	32:4	0:0	4	{
call	33:8	33:31	4	block_Release
arg	33:23	33:31	5	p_block
water	33:23	0:0	6	p_block
water	33:32	0:0	4	;
return	34:8	34:19	4	NULL
water	34:15	0:0	5	NULL
water	35:4	0:0	4	}
call	36:4	36:43	2	assert
arg	36:12	36:43	3	p_out->i_nb_samples==samples
water	36:12	0:0	4	p_out
op	36:17	0:0	4	->
water	36:19	0:0	4	i_nb_samples
op	36:32	0:0	4	==
water	36:35	0:0	4	samples
water	36:44	0:0	2	;
call	37:4	37:76	2	assert
arg	37:12	37:76	3	p_out->i_buffer==samples*2*p_dec->fmt_in.audio.i_channels
water	37:12	0:0	4	p_out
op	37:17	0:0	4	->
water	37:19	0:0	4	i_buffer
op	37:28	0:0	4	==
water	37:31	0:0	4	samples
op	37:39	0:0	4	*
water	37:41	0:0	4	2
op	37:43	0:0	4	*
water	37:45	0:0	4	p_dec
op	37:50	0:0	4	->
water	37:52	0:0	4	fmt_in
op	37:58	0:0	4	.
water	37:59	0:0	4	audio
op	37:64	0:0	4	.
water	37:65	0:0	4	i_channels
water	37:77	0:0	2	;
water	38:4	0:0	2	p_out
op	38:9	0:0	2	->
water	38:11	0:0	2	i_pts
op	38:17	0:0	2	=
call	38:19	38:46	2	date_Get
arg	38:29	38:46	3	&p_sys->end_date
op	38:29	0:0	4	&
water	38:30	0:0	4	p_sys
op	38:35	0:0	4	->
water	38:37	0:0	4	end_date
water	38:47	0:0	2	;
water	39:4	0:0	2	p_out
op	39:9	0:0	2	->
water	39:11	0:0	2	i_length
op	39:20	0:0	2	=
call	39:22	39:64	2	date_Increment
arg	39:38	39:54	3	&p_sys->end_date
op	39:38	0:0	4	&
water	39:39	0:0	4	p_sys
op	39:44	0:0	4	->
water	39:46	0:0	4	end_date
arg	39:56	39:64	3	samples
water	39:56	0:0	4	samples
op	40:22	0:0	2	-
water	40:24	0:0	2	p_out
op	40:29	0:0	2	->
water	40:31	0:0	2	i_pts
water	40:36	0:0	2	;
decl	41:4	41:42	2	const uint8_t	*src
op	41:23	0:0	2	=
water	41:25	0:0	2	p_block
op	41:32	0:0	2	->
water	41:34	0:0	2	p_buffer
decl	42:4	42:45	2	int16_t	*dst
op	42:17	0:0	2	=
water	42:19	0:0	2	(
water	42:20	0:0	2	int16_t
op	42:28	0:0	2	*
water	42:29	0:0	2	)
water	42:30	0:0	2	p_out
op	42:35	0:0	2	->
water	42:37	0:0	2	p_buffer
water	43:4	0:0	2	samples
op	43:12	0:0	2	*=
water	43:15	0:0	2	p_dec
op	43:20	0:0	2	->
water	43:22	0:0	2	fmt_in
op	43:28	0:0	2	.
water	43:29	0:0	2	audio
op	43:34	0:0	2	.
water	43:35	0:0	2	i_channels
water	43:45	0:0	2	;
for	44:4	45:40	2	(unsigned i = 0 ;i < samples;i ++)
forinit	44:9	44:23	3	unsigned i = 0 ;
water	44:9	0:0	4	unsigned
water	44:18	0:0	4	i
op	44:20	0:0	4	=
water	44:22	0:0	4	0
water	44:23	0:0	4	;
cond	44:25	44:29	3	i < samples
water	44:25	0:0	4	i
op	44:27	0:0	4	<
water	44:29	0:0	4	samples
forexpr	44:38	44:39	3	i ++
water	44:38	0:0	4	i
op	44:39	0:0	4	++
stmts	45:7	45:40	3	
op	45:7	0:0	4	*
water	45:8	0:0	4	(
water	45:9	0:0	4	dst
op	45:12	0:0	4	++
water	45:14	0:0	4	)
op	45:16	0:0	4	=
water	45:18	0:0	4	p_sys
op	45:23	0:0	4	->
water	45:25	0:0	4	table
op	45:30	0:0	4	[
op	45:31	0:0	4	*
water	45:32	0:0	4	(
water	45:33	0:0	4	src
op	45:36	0:0	4	++
water	45:38	0:0	4	)
op	45:39	0:0	4	]
water	45:40	0:0	4	;
call	46:4	46:27	2	block_Release
arg	46:19	46:27	3	p_block
water	46:19	0:0	4	p_block
water	46:28	0:0	2	;
return	47:4	47:16	2	p_out
water	47:11	0:0	3	p_out

func	2:0	90:0	0	static int	Control
params	2:18	0:0	1	
param	2:19	2:37	2	vout_display_t *	vd
param	2:39	2:48	2	int	query
param	2:50	2:62	2	va_list	args
stmnts	0:0	89:4	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
switch	5:4	89:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	89:4	3	
water	6:4	0:0	4	{
label	7:4	7:32	4	case VOUT_DISPLAY_HIDE_MOUSE :
call	8:8	8:24	4	SDL_ShowCursor
arg	8:23	8:24	5	0
water	8:23	0:0	6	0
water	8:25	0:0	4	;
return	9:8	9:26	4	VLC_SUCCESS
water	9:15	0:0	5	VLC_SUCCESS
label	10:4	10:41	4	case VOUT_DISPLAY_CHANGE_DISPLAY_SIZE :
water	10:43	0:0	4	{
decl	11:8	11:80	4	const vout_display_cfg_t	*cfg
op	11:38	0:0	4	=
call	11:40	11:79	5	va_arg
arg	11:47	11:51	6	args
water	11:47	0:0	7	args
arg	11:53	11:79	6	constvout_display_cfg_t*
water	11:53	0:0	7	const
water	11:59	0:0	7	vout_display_cfg_t
op	11:78	0:0	7	*
water	13:8	0:0	4	sys
op	13:11	0:0	4	->
water	13:13	0:0	4	display
op	13:21	0:0	4	=
call	13:23	15:76	4	SDL_SetVideoMode
arg	13:40	13:58	5	cfg->display.width
water	13:40	0:0	6	cfg
op	13:43	0:0	6	->
water	13:45	0:0	6	display
op	13:52	0:0	6	.
water	13:53	0:0	6	width
arg	14:40	14:59	5	cfg->display.height
water	14:40	0:0	6	cfg
op	14:43	0:0	6	->
water	14:45	0:0	6	display
op	14:52	0:0	6	.
water	14:53	0:0	6	height
arg	15:40	15:56	5	sys->display_bpp
water	15:40	0:0	6	sys
op	15:43	0:0	6	->
water	15:45	0:0	6	display_bpp
arg	15:58	15:76	5	sys->display_flags
water	15:58	0:0	6	sys
op	15:61	0:0	6	->
water	15:63	0:0	6	display_flags
water	15:77	0:0	4	;
if	16:8	21:8	4	(! sys -> display)
cond	16:12	16:18	5	! sys -> display
op	16:12	0:0	6	!
water	16:13	0:0	6	sys
op	16:16	0:0	6	->
water	16:18	0:0	6	display
stmts	16:27	21:8	5	
water	16:27	0:0	6	{
water	17:12	0:0	6	sys
op	17:15	0:0	6	->
water	17:17	0:0	6	display
op	17:25	0:0	6	=
call	17:27	19:80	6	SDL_SetVideoMode
arg	17:44	17:66	7	vd->cfg->display.width
water	17:44	0:0	8	vd
op	17:46	0:0	8	->
water	17:48	0:0	8	cfg
op	17:51	0:0	8	->
water	17:53	0:0	8	display
op	17:60	0:0	8	.
water	17:61	0:0	8	width
arg	18:44	18:67	7	vd->cfg->display.height
water	18:44	0:0	8	vd
op	18:46	0:0	8	->
water	18:48	0:0	8	cfg
op	18:51	0:0	8	->
water	18:53	0:0	8	display
op	18:60	0:0	8	.
water	18:61	0:0	8	height
arg	19:44	19:60	7	sys->display_bpp
water	19:44	0:0	8	sys
op	19:47	0:0	8	->
water	19:49	0:0	8	display_bpp
arg	19:62	19:80	7	sys->display_flags
water	19:62	0:0	8	sys
op	19:65	0:0	8	->
water	19:67	0:0	8	display_flags
water	19:81	0:0	6	;
return	20:12	20:31	6	VLC_EGENERIC
water	20:19	0:0	7	VLC_EGENERIC
water	21:8	0:0	6	}
if	22:8	23:83	4	(sys -> overlay)
cond	22:12	22:17	5	sys -> overlay
water	22:12	0:0	6	sys
op	22:15	0:0	6	->
water	22:17	0:0	6	overlay
stmts	23:12	23:83	5	
call	23:12	23:82	6	vout_display_PlacePicture
arg	23:38	23:49	7	&sys->place
op	23:38	0:0	8	&
water	23:39	0:0	8	sys
op	23:42	0:0	8	->
water	23:44	0:0	8	place
arg	23:51	23:62	7	&vd->source
op	23:51	0:0	8	&
water	23:52	0:0	8	vd
op	23:54	0:0	8	->
water	23:56	0:0	8	source
arg	23:64	23:67	7	cfg
water	23:64	0:0	8	cfg
arg	23:69	23:82	7	!sys->overlay
op	23:69	0:0	8	!
water	23:70	0:0	8	sys
op	23:73	0:0	8	->
water	23:75	0:0	8	overlay
water	23:83	0:0	6	;
else	24:8	25:53	4
stmts	25:12	25:53	5	
call	25:12	25:52	6	vout_display_SendEventPicturesInvalid
arg	25:50	25:52	7	vd
water	25:50	0:0	8	vd
water	25:53	0:0	6	;
return	26:8	26:26	4	VLC_SUCCESS
water	26:15	0:0	5	VLC_SUCCESS
water	27:4	0:0	4	}
label	28:4	28:39	4	case VOUT_DISPLAY_CHANGE_FULLSCREEN :
water	28:41	0:0	4	{
decl	29:8	29:74	4	vout_display_cfg_t	cfg
op	29:31	0:0	4	=
call	29:33	29:73	5	*va_arg
arg	29:41	29:45	6	args
water	29:41	0:0	7	args
arg	29:47	29:73	6	constvout_display_cfg_t*
water	29:47	0:0	7	const
water	29:53	0:0	7	vout_display_cfg_t
op	29:72	0:0	7	*
water	31:8	0:0	4	sys
op	31:11	0:0	4	->
water	31:13	0:0	4	display_flags
op	31:27	0:0	4	&=
op	31:30	0:0	4	~
water	31:31	0:0	4	(
water	31:32	0:0	4	SDL_FULLSCREEN
op	31:47	0:0	4	|
water	31:49	0:0	4	SDL_RESIZABLE
water	31:62	0:0	4	)
water	31:63	0:0	4	;
water	32:8	0:0	4	sys
op	32:11	0:0	4	->
water	32:13	0:0	4	display_flags
op	32:27	0:0	4	|=
water	32:30	0:0	4	cfg
op	32:33	0:0	4	.
water	32:34	0:0	4	is_fullscreen
water	32:48	0:0	4	?
water	32:50	0:0	4	SDL_FULLSCREEN
water	32:65	0:0	4	:
water	32:67	0:0	4	SDL_RESIZABLE
water	32:80	0:0	4	;
if	33:8	36:8	4	(cfg . is_fullscreen)
cond	33:12	33:16	5	cfg . is_fullscreen
water	33:12	0:0	6	cfg
op	33:15	0:0	6	.
water	33:16	0:0	6	is_fullscreen
stmts	33:31	36:8	5	
water	33:31	0:0	6	{
water	34:12	0:0	6	cfg
op	34:15	0:0	6	.
water	34:16	0:0	6	display
op	34:23	0:0	6	.
water	34:24	0:0	6	width
op	34:30	0:0	6	=
water	34:32	0:0	6	sys
op	34:35	0:0	6	->
water	34:37	0:0	6	desktop_width
water	34:50	0:0	6	;
water	35:12	0:0	6	cfg
op	35:15	0:0	6	.
water	35:16	0:0	6	display
op	35:23	0:0	6	.
water	35:24	0:0	6	height
op	35:31	0:0	6	=
water	35:33	0:0	6	sys
op	35:36	0:0	6	->
water	35:38	0:0	6	desktop_height
water	35:52	0:0	6	;
water	36:8	0:0	6	}
if	37:8	41:8	4	(sys -> overlay)
cond	37:12	37:17	5	sys -> overlay
water	37:12	0:0	6	sys
op	37:15	0:0	6	->
water	37:17	0:0	6	overlay
stmts	37:26	41:8	5	
water	37:26	0:0	6	{
water	38:12	0:0	6	sys
op	38:15	0:0	6	->
water	38:17	0:0	6	display
op	38:25	0:0	6	=
call	38:27	39:80	6	SDL_SetVideoMode
arg	38:44	38:61	7	cfg.display.width
water	38:44	0:0	8	cfg
op	38:47	0:0	8	.
water	38:48	0:0	8	display
op	38:55	0:0	8	.
water	38:56	0:0	8	width
arg	38:63	38:81	7	cfg.display.height
water	38:63	0:0	8	cfg
op	38:66	0:0	8	.
water	38:67	0:0	8	display
op	38:74	0:0	8	.
water	38:75	0:0	8	height
arg	39:44	39:60	7	sys->display_bpp
water	39:44	0:0	8	sys
op	39:47	0:0	8	->
water	39:49	0:0	8	display_bpp
arg	39:62	39:80	7	sys->display_flags
water	39:62	0:0	8	sys
op	39:65	0:0	8	->
water	39:67	0:0	8	display_flags
water	39:81	0:0	6	;
call	40:12	40:83	6	vout_display_PlacePicture
arg	40:38	40:49	7	&sys->place
op	40:38	0:0	8	&
water	40:39	0:0	8	sys
op	40:42	0:0	8	->
water	40:44	0:0	8	place
arg	40:51	40:62	7	&vd->source
op	40:51	0:0	8	&
water	40:52	0:0	8	vd
op	40:54	0:0	8	->
water	40:56	0:0	8	source
arg	40:64	40:68	7	&cfg
op	40:64	0:0	8	&
water	40:65	0:0	8	cfg
arg	40:70	40:83	7	!sys->overlay
op	40:70	0:0	8	!
water	40:71	0:0	8	sys
op	40:74	0:0	8	->
water	40:76	0:0	8	overlay
water	40:84	0:0	6	;
water	41:8	0:0	6	}
call	42:8	42:102	4	vout_display_SendEventDisplaySize
arg	42:42	42:44	5	vd
water	42:42	0:0	6	vd
arg	42:46	42:63	5	cfg.display.width
water	42:46	0:0	6	cfg
op	42:49	0:0	6	.
water	42:50	0:0	6	display
op	42:57	0:0	6	.
water	42:58	0:0	6	width
arg	42:65	42:83	5	cfg.display.height
water	42:65	0:0	6	cfg
op	42:68	0:0	6	.
water	42:69	0:0	6	display
op	42:76	0:0	6	.
water	42:77	0:0	6	height
arg	42:85	42:102	5	cfg.is_fullscreen
water	42:85	0:0	6	cfg
op	42:88	0:0	6	.
water	42:89	0:0	6	is_fullscreen
water	42:103	0:0	4	;
return	43:8	43:26	4	VLC_SUCCESS
water	43:15	0:0	5	VLC_SUCCESS
water	44:4	0:0	4	}
label	45:4	45:33	4	case VOUT_DISPLAY_CHANGE_ZOOM :
label	46:4	46:43	4	case VOUT_DISPLAY_CHANGE_DISPLAY_FILLED :
label	47:4	47:42	4	case VOUT_DISPLAY_CHANGE_SOURCE_ASPECT :
water	47:44	0:0	4	{
decl	48:8	48:37	4	const vout_display_cfg_t	*cfg
decl	49:8	49:36	4	const video_format_t	*source
if	50:8	53:8	4	(query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT)
cond	50:12	50:21	5	query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
water	50:12	0:0	6	query
op	50:18	0:0	6	==
water	50:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
stmts	50:56	53:8	5	
water	50:56	0:0	6	{
water	51:12	0:0	6	source
op	51:19	0:0	6	=
call	51:21	51:56	6	va_arg
arg	51:28	51:32	7	args
water	51:28	0:0	8	args
arg	51:34	51:56	7	constvideo_format_t*
water	51:34	0:0	8	const
water	51:40	0:0	8	video_format_t
op	51:55	0:0	8	*
water	51:57	0:0	6	;
water	52:12	0:0	6	cfg
op	52:16	0:0	6	=
water	52:18	0:0	6	vd
op	52:20	0:0	6	->
water	52:22	0:0	6	cfg
water	52:25	0:0	6	;
water	53:8	0:0	6	}
else	53:10	56:8	4
stmts	53:15	56:8	5	
water	53:15	0:0	6	{
water	54:12	0:0	6	source
op	54:19	0:0	6	=
op	54:21	0:0	6	&
water	54:22	0:0	6	vd
op	54:24	0:0	6	->
water	54:26	0:0	6	source
water	54:32	0:0	6	;
water	55:12	0:0	6	cfg
op	55:16	0:0	6	=
call	55:18	55:57	6	va_arg
arg	55:25	55:29	7	args
water	55:25	0:0	8	args
arg	55:31	55:57	7	constvout_display_cfg_t*
water	55:31	0:0	8	const
water	55:37	0:0	8	vout_display_cfg_t
op	55:56	0:0	8	*
water	55:58	0:0	6	;
water	56:8	0:0	6	}
if	57:8	61:8	4	(sys -> overlay)
cond	57:12	57:17	5	sys -> overlay
water	57:12	0:0	6	sys
op	57:15	0:0	6	->
water	57:17	0:0	6	overlay
stmts	57:26	61:8	5	
water	57:26	0:0	6	{
water	58:12	0:0	6	sys
op	58:15	0:0	6	->
water	58:17	0:0	6	display
op	58:25	0:0	6	=
call	58:27	59:80	6	SDL_SetVideoMode
arg	58:44	58:62	7	cfg->display.width
water	58:44	0:0	8	cfg
op	58:47	0:0	8	->
water	58:49	0:0	8	display
op	58:56	0:0	8	.
water	58:57	0:0	8	width
arg	58:64	58:83	7	cfg->display.height
water	58:64	0:0	8	cfg
op	58:67	0:0	8	->
water	58:69	0:0	8	display
op	58:76	0:0	8	.
water	58:77	0:0	8	height
arg	59:44	59:60	7	sys->display_bpp
water	59:44	0:0	8	sys
op	59:47	0:0	8	->
water	59:49	0:0	8	display_bpp
arg	59:62	59:80	7	sys->display_flags
water	59:62	0:0	8	sys
op	59:65	0:0	8	->
water	59:67	0:0	8	display_flags
water	59:81	0:0	6	;
call	60:12	60:77	6	vout_display_PlacePicture
arg	60:38	60:49	7	&sys->place
op	60:38	0:0	8	&
water	60:39	0:0	8	sys
op	60:42	0:0	8	->
water	60:44	0:0	8	place
arg	60:51	60:57	7	source
water	60:51	0:0	8	source
arg	60:59	60:62	7	cfg
water	60:59	0:0	8	cfg
arg	60:64	60:77	7	!sys->overlay
op	60:64	0:0	8	!
water	60:65	0:0	8	sys
op	60:68	0:0	8	->
water	60:70	0:0	8	overlay
water	60:78	0:0	6	;
water	61:8	0:0	6	}
else	61:10	63:8	4
stmts	61:15	63:8	5	
water	61:15	0:0	6	{
call	62:12	62:52	6	vout_display_SendEventPicturesInvalid
arg	62:50	62:52	7	vd
water	62:50	0:0	8	vd
water	62:53	0:0	6	;
water	63:8	0:0	6	}
return	64:8	64:26	4	VLC_SUCCESS
water	64:15	0:0	5	VLC_SUCCESS
water	65:4	0:0	4	}
label	66:4	66:36	4	case VOUT_DISPLAY_RESET_PICTURES :
water	66:38	0:0	4	{
call	68:8	68:28	4	assert
arg	68:15	68:28	5	!sys->overlay
op	68:15	0:0	6	!
water	68:16	0:0	6	sys
op	68:19	0:0	6	->
water	68:21	0:0	6	overlay
water	68:29	0:0	4	;
if	70:8	71:42	4	(sys -> pool)
cond	70:12	70:17	5	sys -> pool
water	70:12	0:0	6	sys
op	70:15	0:0	6	->
water	70:17	0:0	6	pool
stmts	71:12	71:42	5	
call	71:12	71:41	6	picture_pool_Delete
arg	71:32	71:41	7	sys->pool
water	71:32	0:0	8	sys
op	71:35	0:0	8	->
water	71:37	0:0	8	pool
water	71:42	0:0	6	;
water	72:8	0:0	4	sys
op	72:11	0:0	4	->
water	72:13	0:0	4	pool
op	72:18	0:0	4	=
water	72:20	0:0	4	NULL
water	72:24	0:0	4	;
call	73:8	73:82	4	vout_display_PlacePicture
arg	73:34	73:45	5	&sys->place
op	73:34	0:0	6	&
water	73:35	0:0	6	sys
op	73:38	0:0	6	->
water	73:40	0:0	6	place
arg	73:47	73:58	5	&vd->source
op	73:47	0:0	6	&
water	73:48	0:0	6	vd
op	73:50	0:0	6	->
water	73:52	0:0	6	source
arg	73:60	73:67	5	vd->cfg
water	73:60	0:0	6	vd
op	73:62	0:0	6	->
water	73:64	0:0	6	cfg
arg	73:69	73:82	5	!sys->overlay
op	73:69	0:0	6	!
water	73:70	0:0	6	sys
op	73:73	0:0	6	->
water	73:75	0:0	6	overlay
water	73:83	0:0	4	;
water	75:8	0:0	4	vd
op	75:10	0:0	4	->
water	75:12	0:0	4	fmt
op	75:15	0:0	4	.
water	75:16	0:0	4	i_width
op	75:25	0:0	4	=
water	75:27	0:0	4	sys
op	75:30	0:0	4	->
water	75:32	0:0	4	place
op	75:37	0:0	4	.
water	75:38	0:0	4	width
water	75:43	0:0	4	;
water	76:8	0:0	4	vd
op	76:10	0:0	4	->
water	76:12	0:0	4	fmt
op	76:15	0:0	4	.
water	76:16	0:0	4	i_height
op	76:25	0:0	4	=
water	76:27	0:0	4	sys
op	76:30	0:0	4	->
water	76:32	0:0	4	place
op	76:37	0:0	4	.
water	76:38	0:0	4	height
water	76:44	0:0	4	;
return	77:8	77:26	4	VLC_SUCCESS
water	77:15	0:0	5	VLC_SUCCESS
water	78:4	0:0	4	}
label	79:4	79:40	4	case VOUT_DISPLAY_CHANGE_SOURCE_CROP :
label	80:4	80:41	4	case VOUT_DISPLAY_CHANGE_WINDOW_STATE :
return	85:8	85:27	4	VLC_EGENERIC
water	85:15	0:0	5	VLC_EGENERIC
label	86:4	86:11	4	default :
call	87:8	87:59	4	msg_Err
arg	87:16	87:18	5	vd
water	87:16	0:0	6	vd
arg	87:20	87:59	5	"Unsupported query in vout display SDL"
water	87:20	0:0	6	"Unsupported query in vout display SDL"
water	87:60	0:0	4	;
return	88:8	88:27	4	VLC_EGENERIC
water	88:15	0:0	5	VLC_EGENERIC
water	89:4	0:0	4	}

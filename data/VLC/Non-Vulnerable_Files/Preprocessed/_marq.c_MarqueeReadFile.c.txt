func	2:0	22:0	0	static char *	MarqueeReadFile
params	2:28	0:0	1	
param	2:30	2:43	2	filter_t *	obj
param	2:45	2:62	2	const char *	path
stmnts	0:0	21:15	1	
decl	4:4	4:42	2	FILE	*stream
op	4:17	0:0	2	=
call	4:19	4:41	3	vlc_fopen
arg	4:30	4:34	4	path
water	4:30	0:0	5	path
arg	4:36	4:41	4	"rt"
water	4:36	0:0	5	"rt"
if	5:4	9:4	2	(stream == NULL)
cond	5:8	5:18	3	stream == NULL
water	5:8	0:0	4	stream
op	5:15	0:0	4	==
water	5:18	0:0	4	NULL
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:72	4	msg_Err
arg	7:17	7:20	5	obj
water	7:17	0:0	6	obj
arg	7:22	7:42	5	"cannot open %s: %s"
water	7:22	0:0	6	"cannot open %s: %s"
arg	7:44	7:48	5	path
water	7:44	0:0	6	path
arg	7:50	7:72	5	vlc_strerror_c(errno)
call	7:50	7:70	6	vlc_strerror_c
arg	7:65	7:70	7	errno
water	7:65	0:0	8	errno
water	7:73	0:0	4	;
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	4	}
decl	10:4	10:21	2	char	*line
op	10:15	0:0	2	=
water	10:17	0:0	2	NULL
decl	11:4	11:58	2	ssize_t	len
op	11:16	0:0	2	=
call	11:18	11:57	3	getline
arg	11:27	11:32	4	&line
op	11:27	0:0	5	&
water	11:28	0:0	5	line
arg	11:34	11:48	4	&(size_t){0}
op	11:34	0:0	5	&
water	11:35	0:0	5	(
water	11:36	0:0	5	size_t
water	11:42	0:0	5	)
water	11:43	0:0	5	{
water	11:45	0:0	5	0
water	11:47	0:0	5	}
arg	11:50	11:57	4	stream
water	11:50	0:0	5	stream
if	12:4	17:4	2	(len == - 1)
cond	12:8	12:16	3	len == - 1
water	12:8	0:0	4	len
op	12:12	0:0	4	==
op	12:15	0:0	4	-
water	12:16	0:0	4	1
stmts	13:4	17:4	3	
water	13:4	0:0	4	{
call	14:8	14:72	4	msg_Err
arg	14:17	14:20	5	obj
water	14:17	0:0	6	obj
arg	14:22	14:42	5	"cannot read %s: %s"
water	14:22	0:0	6	"cannot read %s: %s"
arg	14:44	14:48	5	path
water	14:44	0:0	6	path
arg	14:50	14:72	5	vlc_strerror_c(errno)
call	14:50	14:70	6	vlc_strerror_c
arg	14:65	14:70	7	errno
water	14:65	0:0	8	errno
water	14:73	0:0	4	;
call	15:8	15:25	4	clearerr
arg	15:18	15:25	5	stream
water	15:18	0:0	6	stream
water	15:26	0:0	4	;
water	16:8	0:0	4	line
op	16:13	0:0	4	=
water	16:15	0:0	4	NULL
water	16:19	0:0	4	;
water	17:4	0:0	4	}
call	18:4	18:19	2	fclose
arg	18:12	18:19	3	stream
water	18:12	0:0	4	stream
water	18:20	0:0	2	;
if	19:4	20:27	2	(len >= 1 && line [ len - 1 ] == '\n')
cond	19:8	19:37	3	len >= 1 && line [ len - 1 ] == '\n'
water	19:8	0:0	4	len
op	19:12	0:0	4	>=
water	19:15	0:0	4	1
op	19:17	0:0	4	&&
water	19:20	0:0	4	line
op	19:24	0:0	4	[
water	19:25	0:0	4	len
op	19:29	0:0	4	-
water	19:31	0:0	4	1
op	19:32	0:0	4	]
op	19:34	0:0	4	==
water	19:37	0:0	4	'\n'
stmts	20:8	20:27	3	
water	20:8	0:0	4	line
op	20:12	0:0	4	[
op	20:13	0:0	4	--
water	20:15	0:0	4	len
op	20:18	0:0	4	]
op	20:21	0:0	4	=
water	20:23	0:0	4	'\0'
water	20:27	0:0	4	;
return	21:4	21:15	2	line
water	21:11	0:0	3	line

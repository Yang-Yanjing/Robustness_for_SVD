func	2:0	13:0	0	static void	BlockBlend
params	2:22	0:0	1	
param	2:23	2:35	2	uint8_t *	dst
param	2:37	2:53	2	size_t	dst_pitch
param	3:23	3:41	2	const uint8_t *	src
param	3:43	3:59	2	size_t	src_pitch
param	4:23	4:43	2	const int16_t *	noise
param	5:23	5:28	2	int	w
param	5:30	5:35	2	int	h
stmnts	7:4	12:4	1	
for	7:4	12:4	2	( int y = 0 ;y < h;y ++)
forinit	0:0	7:18	3	 int y = 0 ;
decl	7:9	7:18	4	int	y
op	7:15	0:0	4	=
water	7:17	0:0	4	0
cond	7:20	7:24	3	y < h
water	7:20	0:0	4	y
op	7:22	0:0	4	<
water	7:24	0:0	4	h
forexpr	7:27	7:28	3	y ++
water	7:27	0:0	4	y
op	7:28	0:0	4	++
stmts	7:32	12:4	3	
water	7:32	0:0	4	{
for	8:8	11:8	4	( int x = 0 ;x < w;x ++)
forinit	0:0	8:22	5	 int x = 0 ;
decl	8:13	8:22	6	int	x
op	8:19	0:0	6	=
water	8:21	0:0	6	0
cond	8:24	8:28	5	x < w
water	8:24	0:0	6	x
op	8:26	0:0	6	<
water	8:28	0:0	6	w
forexpr	8:31	8:32	5	x ++
water	8:31	0:0	6	x
op	8:32	0:0	6	++
stmts	8:36	11:8	5	
water	8:36	0:0	6	{
water	9:12	0:0	6	dst
op	9:15	0:0	6	[
water	9:16	0:0	6	y
op	9:18	0:0	6	*
water	9:20	0:0	6	dst_pitch
op	9:30	0:0	6	+
water	9:32	0:0	6	x
op	9:33	0:0	6	]
op	9:35	0:0	6	=
call	10:16	10:79	6	clip_uint8_vlc
arg	10:31	10:79	7	src[y*src_pitch+x]+noise[y*BANK_SIZE+x]
water	10:31	0:0	8	src
op	10:34	0:0	8	[
water	10:35	0:0	8	y
op	10:37	0:0	8	*
water	10:39	0:0	8	src_pitch
op	10:49	0:0	8	+
water	10:51	0:0	8	x
op	10:52	0:0	8	]
op	10:54	0:0	8	+
water	10:56	0:0	8	noise
op	10:61	0:0	8	[
water	10:62	0:0	8	y
op	10:64	0:0	8	*
water	10:66	0:0	8	BANK_SIZE
op	10:76	0:0	8	+
water	10:77	0:0	8	x
op	10:78	0:0	8	]
water	10:80	0:0	6	;
water	11:8	0:0	6	}
water	12:4	0:0	4	}
decl	20:9	20:18	0	int	y
op	20:15	0:0	0	=
water	20:17	0:0	0	0
decl	21:13	21:22	0	int	x
op	21:19	0:0	0	=
water	21:21	0:0	0	0

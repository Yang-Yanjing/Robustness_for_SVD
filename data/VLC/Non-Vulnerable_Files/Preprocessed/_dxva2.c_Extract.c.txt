func	2:0	56:0	0	static int	Extract
params	2:18	0:0	1	
param	2:19	2:31	2	vlc_va_t *	va
param	2:33	2:51	2	picture_t *	picture
param	2:53	2:65	2	void *	opaque
param	3:19	3:32	2	uint8_t *	data
stmnts	0:0	55:22	1	
decl	5:4	5:31	2	vlc_va_sys_t	*sys
op	5:22	0:0	2	=
water	5:24	0:0	2	va
op	5:26	0:0	2	->
water	5:28	0:0	2	sys
decl	6:4	6:64	2	LPDIRECT3DSURFACE9	d3d
op	6:27	0:0	2	=
call	6:29	6:59	3	(LPDIRECT3DSURFACE9)
arg	6:50	6:59	4	uintptr_t
water	6:50	0:0	5	uintptr_t
water	6:60	0:0	2	data
if	7:4	8:27	2	(! sys -> surface_cache . buffer)
cond	7:8	7:28	3	! sys -> surface_cache . buffer
op	7:8	0:0	4	!
water	7:9	0:0	4	sys
op	7:12	0:0	4	->
water	7:14	0:0	4	surface_cache
op	7:27	0:0	4	.
water	7:28	0:0	4	buffer
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
call	10:4	10:53	2	assert
arg	10:11	10:53	3	sys->output==MAKEFOURCC('Y','V','1','2')
water	10:11	0:0	4	sys
op	10:14	0:0	4	->
water	10:16	0:0	4	output
op	10:23	0:0	4	==
call	10:26	10:52	4	MAKEFOURCC
arg	10:37	10:40	5	'Y'
water	10:37	0:0	6	'Y'
arg	10:41	10:44	5	'V'
water	10:41	0:0	6	'V'
arg	10:45	10:48	5	'1'
water	10:45	0:0	6	'1'
arg	10:49	10:52	5	'2'
water	10:49	0:0	6	'2'
water	10:54	0:0	2	;
decl	12:4	12:23	2	D3DLOCKED_RECT	lock
if	13:4	16:4	2	(FAILED (IDirect3DSurface9_LockRect (d3d ,& lock ,NULL ,D3DLOCK_READONLY ) ))
cond	13:8	13:77	3	FAILED (IDirect3DSurface9_LockRect (d3d ,& lock ,NULL ,D3DLOCK_READONLY ) )
call	13:8	13:77	4	FAILED
arg	13:15	13:77	5	IDirect3DSurface9_LockRect(d3d,&lock,NULL,D3DLOCK_READONLY)
call	13:15	13:76	6	IDirect3DSurface9_LockRect
arg	13:42	13:45	7	d3d
water	13:42	0:0	8	d3d
arg	13:47	13:52	7	&lock
op	13:47	0:0	8	&
water	13:48	0:0	8	lock
arg	13:54	13:58	7	NULL
water	13:54	0:0	8	NULL
arg	13:60	13:76	7	D3DLOCK_READONLY
water	13:60	0:0	8	D3DLOCK_READONLY
stmts	13:80	16:4	3	
water	13:80	0:0	4	{
call	14:8	14:44	4	msg_Err
arg	14:16	14:18	5	va
water	14:16	0:0	6	va
arg	14:20	14:44	5	"Failed to lock surface"
water	14:20	0:0	6	"Failed to lock surface"
water	14:45	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
if	17:4	39:4	2	(sys -> render ==MAKEFOURCC ('Y' ,'V' ,'1' ,'2' ) || sys -> render ==MAKEFOURCC ('I' ,'M' ,'C' ,'3' ))
cond	17:8	18:49	3	sys -> render ==MAKEFOURCC ('Y' ,'V' ,'1' ,'2' ) || sys -> render ==MAKEFOURCC ('I' ,'M' ,'C' ,'3' )
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	render
op	17:20	0:0	4	==
call	17:23	17:49	4	MAKEFOURCC
arg	17:34	17:37	5	'Y'
water	17:34	0:0	6	'Y'
arg	17:38	17:41	5	'V'
water	17:38	0:0	6	'V'
arg	17:42	17:45	5	'1'
water	17:42	0:0	6	'1'
arg	17:46	17:49	5	'2'
water	17:46	0:0	6	'2'
op	17:51	0:0	4	||
water	18:8	0:0	4	sys
op	18:11	0:0	4	->
water	18:13	0:0	4	render
op	18:20	0:0	4	==
call	18:23	18:49	4	MAKEFOURCC
arg	18:34	18:37	5	'I'
water	18:34	0:0	6	'I'
arg	18:38	18:41	5	'M'
water	18:38	0:0	6	'M'
arg	18:42	18:45	5	'C'
water	18:42	0:0	6	'C'
arg	18:46	18:49	5	'3'
water	18:46	0:0	6	'3'
stmts	18:52	39:4	3	
water	18:52	0:0	4	{
decl	19:8	19:62	4	bool	imc3
op	19:18	0:0	4	=
water	19:20	0:0	4	sys
op	19:23	0:0	4	->
water	19:25	0:0	4	render
op	19:32	0:0	4	==
call	19:35	19:61	5	MAKEFOURCC
arg	19:46	19:49	6	'I'
water	19:46	0:0	7	'I'
arg	19:50	19:53	6	'M'
water	19:50	0:0	7	'M'
arg	19:54	19:57	6	'C'
water	19:54	0:0	7	'C'
arg	19:58	19:61	6	'3'
water	19:58	0:0	7	'3'
decl	20:8	20:66	4	size_t	chroma_pitch
op	20:28	0:0	4	=
water	20:30	0:0	4	imc3
water	20:35	0:0	4	?
water	20:37	0:0	4	lock
op	20:41	0:0	4	.
water	20:42	0:0	4	Pitch
water	20:48	0:0	4	:
water	20:50	0:0	4	(
water	20:51	0:0	4	lock
op	20:55	0:0	4	.
water	20:56	0:0	4	Pitch
op	20:62	0:0	4	/
water	20:64	0:0	4	2
water	20:65	0:0	4	)
decl	21:8	25:9	4	size_t	pitch[3]
op	21:24	0:0	4	=
water	21:26	0:0	4	{
water	22:12	0:0	4	lock
op	22:16	0:0	4	.
water	22:17	0:0	4	Pitch
water	22:22	0:0	4	,
water	23:12	0:0	4	chroma_pitch
water	23:24	0:0	4	,
water	24:12	0:0	4	chroma_pitch
water	24:24	0:0	4	,
water	25:8	0:0	4	}
decl	26:8	31:9	4	uint8_t	*plane[3]
op	26:26	0:0	4	=
water	26:28	0:0	4	{
water	27:12	0:0	4	(
water	27:13	0:0	4	uint8_t
op	27:20	0:0	4	*
water	27:21	0:0	4	)
water	27:22	0:0	4	lock
op	27:26	0:0	4	.
water	27:27	0:0	4	pBits
water	27:32	0:0	4	,
water	28:12	0:0	4	(
water	28:13	0:0	4	uint8_t
op	28:20	0:0	4	*
water	28:21	0:0	4	)
water	28:22	0:0	4	lock
op	28:26	0:0	4	.
water	28:27	0:0	4	pBits
op	28:33	0:0	4	+
water	28:35	0:0	4	pitch
op	28:40	0:0	4	[
water	28:41	0:0	4	0
op	28:42	0:0	4	]
op	28:44	0:0	4	*
water	28:46	0:0	4	sys
op	28:49	0:0	4	->
water	28:51	0:0	4	surface_height
water	28:65	0:0	4	,
water	29:12	0:0	4	(
water	29:13	0:0	4	uint8_t
op	29:20	0:0	4	*
water	29:21	0:0	4	)
water	29:22	0:0	4	lock
op	29:26	0:0	4	.
water	29:27	0:0	4	pBits
op	29:33	0:0	4	+
water	29:35	0:0	4	pitch
op	29:40	0:0	4	[
water	29:41	0:0	4	0
op	29:42	0:0	4	]
op	29:44	0:0	4	*
water	29:46	0:0	4	sys
op	29:49	0:0	4	->
water	29:51	0:0	4	surface_height
op	30:33	0:0	4	+
water	30:35	0:0	4	pitch
op	30:40	0:0	4	[
water	30:41	0:0	4	1
op	30:42	0:0	4	]
op	30:44	0:0	4	*
water	30:46	0:0	4	sys
op	30:49	0:0	4	->
water	30:51	0:0	4	surface_height
op	30:66	0:0	4	/
water	30:68	0:0	4	2
water	30:69	0:0	4	,
water	31:8	0:0	4	}
if	32:8	36:8	4	(imc3)
cond	32:12	32:12	5	imc3
water	32:12	0:0	6	imc3
stmts	32:18	36:8	5	
water	32:18	0:0	6	{
decl	33:12	33:33	6	uint8_t	*V
op	33:23	0:0	6	=
water	33:25	0:0	6	plane
op	33:30	0:0	6	[
water	33:31	0:0	6	1
op	33:32	0:0	6	]
water	34:12	0:0	6	plane
op	34:17	0:0	6	[
water	34:18	0:0	6	1
op	34:19	0:0	6	]
op	34:21	0:0	6	=
water	34:23	0:0	6	plane
op	34:28	0:0	6	[
water	34:29	0:0	6	2
op	34:30	0:0	6	]
water	34:31	0:0	6	;
water	35:12	0:0	6	plane
op	35:17	0:0	6	[
water	35:18	0:0	6	2
op	35:19	0:0	6	]
op	35:21	0:0	6	=
water	35:23	0:0	6	V
water	35:24	0:0	6	;
water	36:8	0:0	6	}
call	37:8	38:40	4	CopyFromYv12
arg	37:21	37:28	5	picture
water	37:21	0:0	6	picture
arg	37:30	37:35	5	plane
water	37:30	0:0	6	plane
arg	37:37	37:42	5	pitch
water	37:37	0:0	6	pitch
arg	37:44	37:54	5	sys->width
water	37:44	0:0	6	sys
op	37:47	0:0	6	->
water	37:49	0:0	6	width
arg	37:56	37:67	5	sys->height
water	37:56	0:0	6	sys
op	37:59	0:0	6	->
water	37:61	0:0	6	height
arg	38:21	38:40	5	&sys->surface_cache
op	38:21	0:0	6	&
water	38:22	0:0	6	sys
op	38:25	0:0	6	->
water	38:27	0:0	6	surface_cache
water	38:41	0:0	4	;
water	39:4	0:0	4	}
else	39:6	51:4	2
stmts	39:11	51:4	3	
water	39:11	0:0	4	{
call	40:8	40:57	4	assert
arg	40:15	40:57	5	sys->render==MAKEFOURCC('N','V','1','2')
water	40:15	0:0	6	sys
op	40:18	0:0	6	->
water	40:20	0:0	6	render
op	40:27	0:0	6	==
call	40:30	40:56	6	MAKEFOURCC
arg	40:41	40:44	7	'N'
water	40:41	0:0	8	'N'
arg	40:45	40:48	7	'V'
water	40:45	0:0	8	'V'
arg	40:49	40:52	7	'1'
water	40:49	0:0	8	'1'
arg	40:53	40:56	7	'2'
water	40:53	0:0	8	'2'
water	40:58	0:0	4	;
decl	41:8	44:9	4	uint8_t	*plane[2]
op	41:26	0:0	4	=
water	41:28	0:0	4	{
water	42:12	0:0	4	lock
op	42:16	0:0	4	.
water	42:17	0:0	4	pBits
water	42:22	0:0	4	,
water	43:12	0:0	4	(
water	43:13	0:0	4	uint8_t
op	43:20	0:0	4	*
water	43:21	0:0	4	)
water	43:22	0:0	4	lock
op	43:26	0:0	4	.
water	43:27	0:0	4	pBits
op	43:33	0:0	4	+
water	43:35	0:0	4	lock
op	43:39	0:0	4	.
water	43:40	0:0	4	Pitch
op	43:46	0:0	4	*
water	43:48	0:0	4	sys
op	43:51	0:0	4	->
water	43:53	0:0	4	surface_height
water	44:8	0:0	4	}
decl	45:8	48:9	4	size_t	pitch[2]
op	45:25	0:0	4	=
water	45:27	0:0	4	{
water	46:12	0:0	4	lock
op	46:16	0:0	4	.
water	46:17	0:0	4	Pitch
water	46:22	0:0	4	,
water	47:12	0:0	4	lock
op	47:16	0:0	4	.
water	47:17	0:0	4	Pitch
water	47:22	0:0	4	,
water	48:8	0:0	4	}
call	49:8	50:40	4	CopyFromNv12
arg	49:21	49:28	5	picture
water	49:21	0:0	6	picture
arg	49:30	49:35	5	plane
water	49:30	0:0	6	plane
arg	49:37	49:42	5	pitch
water	49:37	0:0	6	pitch
arg	49:44	49:54	5	sys->width
water	49:44	0:0	6	sys
op	49:47	0:0	6	->
water	49:49	0:0	6	width
arg	49:56	49:67	5	sys->height
water	49:56	0:0	6	sys
op	49:59	0:0	6	->
water	49:61	0:0	6	height
arg	50:21	50:40	5	&sys->surface_cache
op	50:21	0:0	6	&
water	50:22	0:0	6	sys
op	50:25	0:0	6	->
water	50:27	0:0	6	surface_cache
water	50:41	0:0	4	;
water	51:4	0:0	4	}
call	53:4	53:36	2	IDirect3DSurface9_UnlockRect
arg	53:33	53:36	3	d3d
water	53:33	0:0	4	d3d
water	53:37	0:0	2	;
water	54:4	0:0	2	(
water	54:5	0:0	2	void
water	54:9	0:0	2	)
water	54:11	0:0	2	opaque
water	54:17	0:0	2	;
return	55:4	55:22	2	VLC_SUCCESS
water	55:11	0:0	3	VLC_SUCCESS

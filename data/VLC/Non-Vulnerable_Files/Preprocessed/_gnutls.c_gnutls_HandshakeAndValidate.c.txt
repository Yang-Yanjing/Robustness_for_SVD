func	2:0	64:0	0	static int	gnutls_HandshakeAndValidate
params	2:39	0:0	1	
param	2:40	2:58	2	vlc_tls_t *	session
param	2:60	2:76	2	const char *	host
param	3:40	3:59	2	const char *	service
stmnts	0:0	63:14	1	
decl	5:4	5:37	2	vlc_tls_sys_t	*sys
op	5:23	0:0	2	=
water	5:25	0:0	2	session
op	5:32	0:0	2	->
water	5:34	0:0	2	sys
decl	6:4	6:63	2	int	val
op	6:12	0:0	2	=
call	6:14	6:62	3	gnutls_ContinueHandshake
arg	6:40	6:47	4	session
water	6:40	0:0	5	session
arg	6:49	6:53	4	host
water	6:49	0:0	5	host
arg	6:55	6:62	4	service
water	6:55	0:0	5	service
if	7:4	8:18	2	(val)
cond	7:8	7:8	3	val
water	7:8	0:0	4	val
stmts	8:8	8:18	3	
return	8:8	8:18	4	val
water	8:15	0:0	5	val
water	10:4	0:0	2	unsigned
water	10:13	0:0	2	status
water	10:19	0:0	2	;
water	11:4	0:0	2	val
op	11:8	0:0	2	=
call	11:10	11:65	2	gnutls_certificate_verify_peers2
arg	11:44	11:56	3	sys->session
water	11:44	0:0	4	sys
op	11:47	0:0	4	->
water	11:49	0:0	4	session
arg	11:58	11:65	3	&status
op	11:58	0:0	4	&
water	11:59	0:0	4	status
water	11:66	0:0	2	;
if	12:4	17:4	2	(val)
cond	12:8	12:8	3	val
water	12:8	0:0	4	val
stmts	13:4	17:4	3	
water	13:4	0:0	4	{
call	14:8	15:38	4	msg_Err
arg	14:17	14:24	5	session
water	14:17	0:0	6	session
arg	14:26	14:62	5	"Certificate verification error: %s"
water	14:26	0:0	6	"Certificate verification error: %s"
arg	15:17	15:38	5	gnutls_strerror(val)
call	15:17	15:37	6	gnutls_strerror
arg	15:34	15:37	7	val
water	15:34	0:0	8	val
water	15:39	0:0	4	;
return	16:8	16:17	4	-1
op	16:15	0:0	5	-
water	16:16	0:0	5	1
water	17:4	0:0	4	}
if	18:4	26:4	2	(status)
cond	18:8	18:8	3	status
water	18:8	0:0	4	status
stmts	19:4	26:4	3	
water	19:4	0:0	4	{
call	20:8	20:77	4	msg_Err
arg	20:17	20:24	5	session
water	20:17	0:0	6	session
arg	20:26	20:69	5	"Certificate verification failure (0x%04X)"
water	20:26	0:0	6	"Certificate verification failure (0x%04X)"
arg	20:71	20:77	5	status
water	20:71	0:0	6	status
water	20:78	0:0	4	;
for	21:8	23:60	4	( size_t i = 0 ;i < sizeof ( cert_errs ) / sizeof ( cert_errs [ 0 ] );i ++)
forinit	0:0	21:25	5	 size_t i = 0 ;
decl	21:13	21:25	6	size_t	i
op	21:22	0:0	6	=
water	21:24	0:0	6	0
cond	21:27	21:72	5	i < sizeof ( cert_errs ) / sizeof ( cert_errs [ 0 ] )
water	21:27	0:0	6	i
op	21:29	0:0	6	<
op	21:31	0:0	6	sizeof
water	21:38	0:0	6	(
water	21:39	0:0	6	cert_errs
water	21:48	0:0	6	)
op	21:50	0:0	6	/
op	21:52	0:0	6	sizeof
water	21:59	0:0	6	(
water	21:60	0:0	6	cert_errs
op	21:69	0:0	6	[
water	21:70	0:0	6	0
op	21:71	0:0	6	]
water	21:72	0:0	6	)
forexpr	21:75	21:76	5	i ++
water	21:75	0:0	6	i
op	21:76	0:0	6	++
stmts	22:12	23:60	5	
if	22:12	23:60	6	(status & cert_errs [ i ] . flag)
cond	22:16	22:38	7	status & cert_errs [ i ] . flag
water	22:16	0:0	8	status
op	22:23	0:0	8	&
water	22:25	0:0	8	cert_errs
op	22:34	0:0	8	[
water	22:35	0:0	8	i
op	22:36	0:0	8	]
op	22:37	0:0	8	.
water	22:38	0:0	8	flag
stmts	23:16	23:60	7	
call	23:16	23:59	8	msg_Err
arg	23:25	23:32	9	session
water	23:25	0:0	10	session
arg	23:34	23:41	9	" * %s"
water	23:34	0:0	10	" * %s"
arg	23:43	23:59	9	cert_errs[i].msg
water	23:43	0:0	10	cert_errs
op	23:52	0:0	10	[
water	23:53	0:0	10	i
op	23:54	0:0	10	]
op	23:55	0:0	10	.
water	23:56	0:0	10	msg
water	23:60	0:0	8	;
if	24:8	25:21	4	(status & ~ ( GNUTLS_CERT_INVALID | GNUTLS_CERT_SIGNER_NOT_FOUND ))
cond	24:12	24:71	5	status & ~ ( GNUTLS_CERT_INVALID | GNUTLS_CERT_SIGNER_NOT_FOUND )
water	24:12	0:0	6	status
op	24:19	0:0	6	&
op	24:21	0:0	6	~
water	24:22	0:0	6	(
water	24:23	0:0	6	GNUTLS_CERT_INVALID
op	24:42	0:0	6	|
water	24:43	0:0	6	GNUTLS_CERT_SIGNER_NOT_FOUND
water	24:71	0:0	6	)
stmts	25:12	25:21	5	
return	25:12	25:21	6	-1
op	25:19	0:0	7	-
water	25:20	0:0	7	1
water	26:4	0:0	4	}
if	27:4	28:30	2	(host == NULL)
cond	27:8	27:16	3	host == NULL
water	27:8	0:0	4	host
op	27:13	0:0	4	==
water	27:16	0:0	4	NULL
stmts	28:8	28:30	3	
return	28:8	28:30	4	status?-1:0
water	28:15	0:0	5	status
water	28:22	0:0	5	?
op	28:24	0:0	5	-
water	28:25	0:0	5	1
water	28:27	0:0	5	:
water	28:29	0:0	5	0
decl	30:4	30:30	2	const gnutls_datum_t	*data
water	31:4	0:0	2	unsigned
water	31:13	0:0	2	count
water	31:18	0:0	2	;
water	32:4	0:0	2	data
op	32:9	0:0	2	=
call	32:11	32:61	2	gnutls_certificate_get_peers
arg	32:41	32:53	3	sys->session
water	32:41	0:0	4	sys
op	32:44	0:0	4	->
water	32:46	0:0	4	session
arg	32:55	32:61	3	&count
op	32:55	0:0	4	&
water	32:56	0:0	4	count
water	32:62	0:0	2	;
if	33:4	37:4	2	(data == NULL || count == 0)
cond	33:8	33:33	3	data == NULL || count == 0
water	33:8	0:0	4	data
op	33:13	0:0	4	==
water	33:16	0:0	4	NULL
op	33:21	0:0	4	||
water	33:24	0:0	4	count
op	33:30	0:0	4	==
water	33:33	0:0	4	0
stmts	34:4	37:4	3	
water	34:4	0:0	4	{
call	35:8	35:58	4	msg_Err
arg	35:17	35:24	5	session
water	35:17	0:0	6	session
arg	35:26	35:58	5	"Peer certificate not available"
water	35:26	0:0	6	"Peer certificate not available"
water	35:59	0:0	4	;
return	36:8	36:17	4	-1
op	36:15	0:0	5	-
water	36:16	0:0	5	1
water	37:4	0:0	4	}
call	38:4	38:60	2	msg_Dbg
arg	38:13	38:20	3	session
water	38:13	0:0	4	session
arg	38:22	38:53	3	"%u certificate(s) in the list"
water	38:22	0:0	4	"%u certificate(s) in the list"
arg	38:55	38:60	3	count
water	38:55	0:0	4	count
water	38:61	0:0	2	;
if	39:4	40:17	2	(status &&gnutls_CertSearch (session ,host ,service ,data ))
cond	39:8	39:65	3	status &&gnutls_CertSearch (session ,host ,service ,data )
water	39:8	0:0	4	status
op	39:15	0:0	4	&&
call	39:18	39:65	4	gnutls_CertSearch
arg	39:37	39:44	5	session
water	39:37	0:0	6	session
arg	39:46	39:50	5	host
water	39:46	0:0	6	host
arg	39:52	39:59	5	service
water	39:52	0:0	6	service
arg	39:61	39:65	5	data
water	39:61	0:0	6	data
stmts	40:8	40:17	3	
return	40:8	40:17	4	-1
op	40:15	0:0	5	-
water	40:16	0:0	5	1
decl	41:4	41:26	2	gnutls_x509_crt_t	cert
water	42:4	0:0	2	val
op	42:8	0:0	2	=
call	42:10	42:37	2	gnutls_x509_crt_init
arg	42:32	42:37	3	&cert
op	42:32	0:0	4	&
water	42:33	0:0	4	cert
water	42:38	0:0	2	;
if	43:4	47:4	2	(val)
cond	43:8	43:8	3	val
water	43:8	0:0	4	val
stmts	44:4	47:4	3	
water	44:4	0:0	4	{
call	45:8	45:72	4	msg_Err
arg	45:17	45:24	5	session
water	45:17	0:0	6	session
arg	45:26	45:49	5	"X.509 fatal error: %s"
water	45:26	0:0	6	"X.509 fatal error: %s"
arg	45:51	45:72	5	gnutls_strerror(val)
call	45:51	45:71	6	gnutls_strerror
arg	45:68	45:71	7	val
water	45:68	0:0	8	val
water	45:73	0:0	4	;
return	46:8	46:17	4	-1
op	46:15	0:0	5	-
water	46:16	0:0	5	1
water	47:4	0:0	4	}
water	48:4	0:0	2	val
op	48:8	0:0	2	=
call	48:10	48:65	2	gnutls_x509_crt_import
arg	48:34	48:38	3	cert
water	48:34	0:0	4	cert
arg	48:40	48:44	3	data
water	48:40	0:0	4	data
arg	48:46	48:65	3	GNUTLS_X509_FMT_DER
water	48:46	0:0	4	GNUTLS_X509_FMT_DER
water	48:66	0:0	2	;
if	49:4	54:4	2	(val)
cond	49:8	49:8	3	val
water	49:8	0:0	4	val
stmts	50:4	54:4	3	
water	50:4	0:0	4	{
call	51:8	52:38	4	msg_Err
arg	51:17	51:24	5	session
water	51:17	0:0	6	session
arg	51:26	51:56	5	"Certificate import error: %s"
water	51:26	0:0	6	"Certificate import error: %s"
arg	52:17	52:38	5	gnutls_strerror(val)
call	52:17	52:37	6	gnutls_strerror
arg	52:34	52:37	7	val
water	52:34	0:0	8	val
water	52:39	0:0	4	;
goto	53:8	53:18	4	error
water	53:13	0:0	5	error
water	54:4	0:0	4	}
water	55:4	0:0	2	val
op	55:8	0:0	2	=
op	55:10	0:0	2	!
call	55:11	55:53	2	gnutls_x509_crt_check_hostname
arg	55:43	55:47	3	cert
water	55:43	0:0	4	cert
arg	55:49	55:53	3	host
water	55:49	0:0	4	host
water	55:54	0:0	2	;
if	56:4	60:4	2	(val)
cond	56:8	56:8	3	val
water	56:8	0:0	4	val
stmts	57:4	60:4	3	
water	57:4	0:0	4	{
call	58:8	58:67	4	msg_Err
arg	58:17	58:24	5	session
water	58:17	0:0	6	session
arg	58:26	58:61	5	"Certificate does not match \"%s\""
water	58:26	0:0	6	"Certificate does not match \"%s\""
arg	58:63	58:67	5	host
water	58:63	0:0	6	host
water	58:68	0:0	4	;
water	59:8	0:0	4	val
op	59:12	0:0	4	=
call	59:14	59:61	4	gnutls_CertSearch
arg	59:33	59:40	5	session
water	59:33	0:0	6	session
arg	59:42	59:46	5	host
water	59:42	0:0	6	host
arg	59:48	59:55	5	service
water	59:48	0:0	6	service
arg	59:57	59:61	5	data
water	59:57	0:0	6	data
water	59:62	0:0	4	;
water	60:4	0:0	4	}
label	61:0	61:5	2	error :
call	62:4	62:32	2	gnutls_x509_crt_deinit
arg	62:28	62:32	3	cert
water	62:28	0:0	4	cert
water	62:33	0:0	2	;
return	63:4	63:14	2	val
water	63:11	0:0	3	val

func	2:0	32:0	0	void	module_EndBank
params	2:20	0:0	1	
param	2:21	2:35	2	bool	b_plugins
stmnts	0:0	31:4	1	
decl	4:4	4:25	2	module_t	*head
op	4:19	0:0	2	=
water	4:21	0:0	2	NULL
if	7:4	8:38	2	(b_plugins)
cond	7:8	7:8	3	b_plugins
water	7:8	0:0	4	b_plugins
stmts	8:8	8:38	3	
call	8:8	8:37	4	vlc_mutex_lock
arg	8:24	8:37	5	&modules.lock
op	8:24	0:0	6	&
water	8:25	0:0	6	modules
op	8:32	0:0	6	.
water	8:33	0:0	6	lock
water	8:38	0:0	4	;
call	11:4	11:29	2	assert
arg	11:12	11:29	3	modules.usage>0
water	11:12	0:0	4	modules
op	11:19	0:0	4	.
water	11:20	0:0	4	usage
op	11:26	0:0	4	>
water	11:28	0:0	4	0
water	11:30	0:0	2	;
if	12:4	17:4	2	(-- modules . usage == 0)
cond	12:8	12:27	3	-- modules . usage == 0
op	12:8	0:0	4	--
water	12:10	0:0	4	modules
op	12:17	0:0	4	.
water	12:18	0:0	4	usage
op	12:24	0:0	4	==
water	12:27	0:0	4	0
stmts	13:4	17:4	3	
water	13:4	0:0	4	{
call	14:8	14:29	4	config_UnsortConfig
water	14:30	0:0	4	;
water	15:8	0:0	4	head
op	15:13	0:0	4	=
water	15:15	0:0	4	modules
op	15:22	0:0	4	.
water	15:23	0:0	4	head
water	15:27	0:0	4	;
water	16:8	0:0	4	modules
op	16:15	0:0	4	.
water	16:16	0:0	4	head
op	16:21	0:0	4	=
water	16:23	0:0	4	NULL
water	16:27	0:0	4	;
water	17:4	0:0	4	}
call	18:4	18:35	2	vlc_mutex_unlock
arg	18:22	18:35	3	&modules.lock
op	18:22	0:0	4	&
water	18:23	0:0	4	modules
op	18:30	0:0	4	.
water	18:31	0:0	4	lock
water	18:36	0:0	2	;
while	19:4	31:4	2	(head != NULL)
cond	19:11	19:19	3	head != NULL
water	19:11	0:0	4	head
op	19:16	0:0	4	!=
water	19:19	0:0	4	NULL
stmts	20:4	31:4	3	
water	20:4	0:0	4	{
decl	21:8	21:31	4	module_t	*module
op	21:25	0:0	4	=
water	21:27	0:0	4	head
water	22:8	0:0	4	head
op	22:13	0:0	4	=
water	22:15	0:0	4	module
op	22:21	0:0	4	->
water	22:23	0:0	4	next
water	22:27	0:0	4	;
if	24:8	28:8	4	(module -> b_loaded && module -> b_unloadable)
cond	24:12	24:40	5	module -> b_loaded && module -> b_unloadable
water	24:12	0:0	6	module
op	24:18	0:0	6	->
water	24:20	0:0	6	b_loaded
op	24:29	0:0	6	&&
water	24:32	0:0	6	module
op	24:38	0:0	6	->
water	24:40	0:0	6	b_unloadable
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
call	26:12	26:41	6	module_Unload
arg	26:27	26:41	7	module->handle
water	26:27	0:0	8	module
op	26:33	0:0	8	->
water	26:35	0:0	8	handle
water	26:42	0:0	6	;
water	27:12	0:0	6	module
op	27:18	0:0	6	->
water	27:20	0:0	6	b_loaded
op	27:29	0:0	6	=
water	27:31	0:0	6	false
water	27:36	0:0	6	;
water	28:8	0:0	6	}
call	30:8	30:34	4	vlc_module_destroy
arg	30:28	30:34	5	module
water	30:28	0:0	6	module
water	30:35	0:0	4	;
water	31:4	0:0	4	}

func	2:0	201:0	0	void	I420_A8B8G8R8
params	2:18	0:0	1	
param	2:20	2:38	2	filter_t *	p_filter
param	2:40	2:56	2	picture_t *	p_src
param	2:58	2:76	2	picture_t *	p_dest
stmnts	0:0	199:11	1	
decl	5:4	5:52	2	uint32_t	*p_pic
op	5:20	0:0	2	=
water	5:22	0:0	2	(
water	5:23	0:0	2	uint32_t
op	5:31	0:0	2	*
water	5:32	0:0	2	)
water	5:33	0:0	2	p_dest
op	5:39	0:0	2	->
water	5:41	0:0	2	p
op	5:42	0:0	2	->
water	5:44	0:0	2	p_pixels
decl	6:4	6:37	2	uint8_t	*p_y
op	6:20	0:0	2	=
water	6:22	0:0	2	p_src
op	6:27	0:0	2	->
water	6:29	0:0	2	Y_PIXELS
decl	7:4	7:37	2	uint8_t	*p_u
op	7:20	0:0	2	=
water	7:22	0:0	2	p_src
op	7:27	0:0	2	->
water	7:29	0:0	2	U_PIXELS
decl	8:4	8:37	2	uint8_t	*p_v
op	8:20	0:0	2	=
water	8:22	0:0	2	p_src
op	8:27	0:0	2	->
water	8:29	0:0	2	V_PIXELS
decl	9:4	9:18	2	bool	b_hscale
decl	10:4	10:25	2	unsigned int	i_vscale
decl	11:4	11:25	2	unsigned int	i_x
water	11:20	0:0	2	,
decl	11:4	11:25	2	unsigned int	i_y
decl	12:4	12:30	2	int	i_right_margin
decl	13:4	13:24	2	int	i_rewind
decl	14:4	14:29	2	int	i_scale_count
decl	15:4	15:113	2	int	i_chroma_width
op	15:31	0:0	2	=
water	15:33	0:0	2	(
water	15:34	0:0	2	p_filter
op	15:42	0:0	2	->
water	15:44	0:0	2	fmt_in
op	15:50	0:0	2	.
water	15:51	0:0	2	video
op	15:56	0:0	2	.
water	15:57	0:0	2	i_x_offset
op	15:68	0:0	2	+
water	15:70	0:0	2	p_filter
op	15:78	0:0	2	->
water	15:80	0:0	2	fmt_in
op	15:86	0:0	2	.
water	15:87	0:0	2	video
op	15:92	0:0	2	.
water	15:93	0:0	2	i_visible_width
water	15:108	0:0	2	)
op	15:110	0:0	2	/
water	15:112	0:0	2	2
decl	16:4	16:27	2	uint32_t	*p_pic_start
decl	18:4	18:69	2	uint32_t	*p_buffer_start
op	18:31	0:0	2	=
water	18:33	0:0	2	(
water	18:34	0:0	2	uint32_t
op	18:42	0:0	2	*
water	18:43	0:0	2	)
water	18:44	0:0	2	p_filter
op	18:52	0:0	2	->
water	18:54	0:0	2	p_sys
op	18:59	0:0	2	->
water	18:61	0:0	2	p_buffer
decl	19:4	19:24	2	uint32_t	*p_buffer
decl	21:4	21:58	2	int	*p_offset_start
op	21:31	0:0	2	=
water	21:33	0:0	2	p_filter
op	21:41	0:0	2	->
water	21:43	0:0	2	p_sys
op	21:48	0:0	2	->
water	21:50	0:0	2	p_offset
decl	22:4	22:24	2	int	*p_offset
decl	23:4	25:68	2	const int	i_source_margin
op	23:30	0:0	2	=
water	23:32	0:0	2	p_src
op	23:37	0:0	2	->
water	23:39	0:0	2	p
op	23:40	0:0	2	[
water	23:41	0:0	2	0
op	23:42	0:0	2	]
op	23:43	0:0	2	.
water	23:44	0:0	2	i_pitch
op	24:33	0:0	2	-
water	24:35	0:0	2	p_src
op	24:40	0:0	2	->
water	24:42	0:0	2	p
op	24:43	0:0	2	[
water	24:44	0:0	2	0
op	24:45	0:0	2	]
op	24:46	0:0	2	.
water	24:47	0:0	2	i_visible_pitch
op	25:33	0:0	2	-
water	25:35	0:0	2	p_filter
op	25:43	0:0	2	->
water	25:45	0:0	2	fmt_in
op	25:51	0:0	2	.
water	25:52	0:0	2	video
op	25:57	0:0	2	.
water	25:58	0:0	2	i_x_offset
decl	26:4	28:76	2	const int	i_source_margin_c
op	26:32	0:0	2	=
water	26:34	0:0	2	p_src
op	26:39	0:0	2	->
water	26:41	0:0	2	p
op	26:42	0:0	2	[
water	26:43	0:0	2	1
op	26:44	0:0	2	]
op	26:45	0:0	2	.
water	26:46	0:0	2	i_pitch
op	27:33	0:0	2	-
water	27:35	0:0	2	p_src
op	27:40	0:0	2	->
water	27:42	0:0	2	p
op	27:43	0:0	2	[
water	27:44	0:0	2	1
op	27:45	0:0	2	]
op	27:46	0:0	2	.
water	27:47	0:0	2	i_visible_pitch
op	28:33	0:0	2	-
water	28:35	0:0	2	(
water	28:37	0:0	2	p_filter
op	28:45	0:0	2	->
water	28:47	0:0	2	fmt_in
op	28:53	0:0	2	.
water	28:54	0:0	2	video
op	28:59	0:0	2	.
water	28:60	0:0	2	i_x_offset
op	28:71	0:0	2	/
water	28:73	0:0	2	2
water	28:75	0:0	2	)
water	29:4	0:0	2	i_right_margin
op	29:19	0:0	2	=
water	29:21	0:0	2	p_dest
op	29:27	0:0	2	->
water	29:29	0:0	2	p
op	29:30	0:0	2	->
water	29:32	0:0	2	i_pitch
op	29:40	0:0	2	-
water	29:42	0:0	2	p_dest
op	29:48	0:0	2	->
water	29:50	0:0	2	p
op	29:51	0:0	2	->
water	29:53	0:0	2	i_visible_pitch
water	29:68	0:0	2	;
call	33:4	37:52	2	SetOffset
arg	33:15	33:91	3	(p_filter->fmt_in.video.i_x_offset+p_filter->fmt_in.video.i_visible_width)
water	33:15	0:0	4	(
water	33:16	0:0	4	p_filter
op	33:24	0:0	4	->
water	33:26	0:0	4	fmt_in
op	33:32	0:0	4	.
water	33:33	0:0	4	video
op	33:38	0:0	4	.
water	33:39	0:0	4	i_x_offset
op	33:50	0:0	4	+
water	33:52	0:0	4	p_filter
op	33:60	0:0	4	->
water	33:62	0:0	4	fmt_in
op	33:68	0:0	4	.
water	33:69	0:0	4	video
op	33:74	0:0	4	.
water	33:75	0:0	4	i_visible_width
water	33:90	0:0	4	)
arg	34:15	34:92	3	(p_filter->fmt_in.video.i_y_offset+p_filter->fmt_in.video.i_visible_height)
water	34:15	0:0	4	(
water	34:16	0:0	4	p_filter
op	34:24	0:0	4	->
water	34:26	0:0	4	fmt_in
op	34:32	0:0	4	.
water	34:33	0:0	4	video
op	34:38	0:0	4	.
water	34:39	0:0	4	i_y_offset
op	34:50	0:0	4	+
water	34:52	0:0	4	p_filter
op	34:60	0:0	4	->
water	34:62	0:0	4	fmt_in
op	34:68	0:0	4	.
water	34:69	0:0	4	video
op	34:74	0:0	4	.
water	34:75	0:0	4	i_visible_height
water	34:91	0:0	4	)
arg	35:15	35:93	3	(p_filter->fmt_out.video.i_x_offset+p_filter->fmt_out.video.i_visible_width)
water	35:15	0:0	4	(
water	35:16	0:0	4	p_filter
op	35:24	0:0	4	->
water	35:26	0:0	4	fmt_out
op	35:33	0:0	4	.
water	35:34	0:0	4	video
op	35:39	0:0	4	.
water	35:40	0:0	4	i_x_offset
op	35:51	0:0	4	+
water	35:53	0:0	4	p_filter
op	35:61	0:0	4	->
water	35:63	0:0	4	fmt_out
op	35:70	0:0	4	.
water	35:71	0:0	4	video
op	35:76	0:0	4	.
water	35:77	0:0	4	i_visible_width
water	35:92	0:0	4	)
arg	36:15	36:94	3	(p_filter->fmt_out.video.i_y_offset+p_filter->fmt_out.video.i_visible_height)
water	36:15	0:0	4	(
water	36:16	0:0	4	p_filter
op	36:24	0:0	4	->
water	36:26	0:0	4	fmt_out
op	36:33	0:0	4	.
water	36:34	0:0	4	video
op	36:39	0:0	4	.
water	36:40	0:0	4	i_y_offset
op	36:51	0:0	4	+
water	36:53	0:0	4	p_filter
op	36:61	0:0	4	->
water	36:63	0:0	4	fmt_out
op	36:70	0:0	4	.
water	36:71	0:0	4	video
op	36:76	0:0	4	.
water	36:77	0:0	4	i_visible_height
water	36:93	0:0	4	)
arg	37:15	37:24	3	&b_hscale
op	37:15	0:0	4	&
water	37:16	0:0	4	b_hscale
arg	37:26	37:35	3	&i_vscale
op	37:26	0:0	4	&
water	37:27	0:0	4	i_vscale
arg	37:37	37:52	3	p_offset_start
water	37:37	0:0	4	p_offset_start
water	37:53	0:0	2	;
water	41:4	0:0	2	i_scale_count
op	41:18	0:0	2	=
water	41:20	0:0	2	(
water	41:22	0:0	2	i_vscale
op	41:31	0:0	2	==
water	41:34	0:0	2	1
water	41:36	0:0	2	)
water	41:38	0:0	2	?
water	42:20	0:0	2	(
water	42:21	0:0	2	p_filter
op	42:29	0:0	2	->
water	42:31	0:0	2	fmt_out
op	42:38	0:0	2	.
water	42:39	0:0	2	video
op	42:44	0:0	2	.
water	42:45	0:0	2	i_y_offset
op	42:56	0:0	2	+
water	42:58	0:0	2	p_filter
op	42:66	0:0	2	->
water	42:68	0:0	2	fmt_out
op	42:75	0:0	2	.
water	42:76	0:0	2	video
op	42:81	0:0	2	.
water	42:82	0:0	2	i_visible_height
water	42:98	0:0	2	)
water	42:100	0:0	2	:
water	43:20	0:0	2	(
water	43:21	0:0	2	p_filter
op	43:29	0:0	2	->
water	43:31	0:0	2	fmt_in
op	43:37	0:0	2	.
water	43:38	0:0	2	video
op	43:43	0:0	2	.
water	43:44	0:0	2	i_y_offset
op	43:55	0:0	2	+
water	43:57	0:0	2	p_filter
op	43:65	0:0	2	->
water	43:67	0:0	2	fmt_in
op	43:73	0:0	2	.
water	43:74	0:0	2	video
op	43:79	0:0	2	.
water	43:80	0:0	2	i_visible_height
water	43:96	0:0	2	)
water	43:97	0:0	2	;
water	45:4	0:0	2	i_rewind
op	45:13	0:0	2	=
water	45:15	0:0	2	(
op	45:16	0:0	2	-
water	45:17	0:0	2	(
water	45:18	0:0	2	p_filter
op	45:26	0:0	2	->
water	45:28	0:0	2	fmt_in
op	45:34	0:0	2	.
water	45:35	0:0	2	video
op	45:40	0:0	2	.
water	45:41	0:0	2	i_x_offset
op	45:52	0:0	2	+
water	45:54	0:0	2	p_filter
op	45:62	0:0	2	->
water	45:64	0:0	2	fmt_in
op	45:70	0:0	2	.
water	45:71	0:0	2	video
op	45:76	0:0	2	.
water	45:77	0:0	2	i_visible_width
water	45:92	0:0	2	)
water	45:93	0:0	2	)
op	45:95	0:0	2	&
water	45:97	0:0	2	15
water	45:99	0:0	2	;
water	50:4	0:0	2	p_buffer
op	50:13	0:0	2	=
water	50:15	0:0	2	b_hscale
water	50:24	0:0	2	?
water	50:26	0:0	2	p_buffer_start
water	50:41	0:0	2	:
water	50:43	0:0	2	p_pic
water	50:48	0:0	2	;
if	51:4	101:4	2	(0 == ( 15 & ( p_src -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_y ) | ( ( intptr_t ) p_buffer ) ) ))
cond	51:8	54:41	3	0 == ( 15 & ( p_src -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_y ) | ( ( intptr_t ) p_buffer ) ) )
water	51:8	0:0	4	0
op	51:10	0:0	4	==
water	51:13	0:0	4	(
water	51:14	0:0	4	15
op	51:17	0:0	4	&
water	51:19	0:0	4	(
water	51:20	0:0	4	p_src
op	51:25	0:0	4	->
water	51:27	0:0	4	p
op	51:28	0:0	4	[
water	51:29	0:0	4	Y_PLANE
op	51:36	0:0	4	]
op	51:37	0:0	4	.
water	51:38	0:0	4	i_pitch
op	51:45	0:0	4	|
water	52:20	0:0	4	p_dest
op	52:26	0:0	4	->
water	52:28	0:0	4	p
op	52:29	0:0	4	->
water	52:31	0:0	4	i_pitch
op	52:38	0:0	4	|
water	53:20	0:0	4	(
water	53:21	0:0	4	(
water	53:22	0:0	4	intptr_t
water	53:30	0:0	4	)
water	53:31	0:0	4	p_y
water	53:34	0:0	4	)
op	53:35	0:0	4	|
water	54:20	0:0	4	(
water	54:21	0:0	4	(
water	54:22	0:0	4	intptr_t
water	54:30	0:0	4	)
water	54:31	0:0	4	p_buffer
water	54:39	0:0	4	)
water	54:40	0:0	4	)
water	54:41	0:0	4	)
stmts	55:4	101:4	3	
water	55:4	0:0	4	{
for	57:8	100:8	4	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	57:13	57:20	5	i_y = 0 ;
water	57:13	0:0	6	i_y
op	57:17	0:0	6	=
water	57:19	0:0	6	0
water	57:20	0:0	6	;
cond	57:22	57:104	5	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	57:22	0:0	6	i_y
op	57:26	0:0	6	<
water	57:28	0:0	6	(
water	57:29	0:0	6	p_filter
op	57:37	0:0	6	->
water	57:39	0:0	6	fmt_in
op	57:45	0:0	6	.
water	57:46	0:0	6	video
op	57:51	0:0	6	.
water	57:52	0:0	6	i_y_offset
op	57:63	0:0	6	+
water	57:65	0:0	6	p_filter
op	57:73	0:0	6	->
water	57:75	0:0	6	fmt_in
op	57:81	0:0	6	.
water	57:82	0:0	6	video
op	57:87	0:0	6	.
water	57:88	0:0	6	i_visible_height
water	57:104	0:0	6	)
forexpr	57:107	57:110	5	i_y ++
water	57:107	0:0	6	i_y
op	57:110	0:0	6	++
stmts	58:8	100:8	5	
water	58:8	0:0	6	{
water	59:12	0:0	6	p_pic_start
op	59:24	0:0	6	=
water	59:26	0:0	6	p_pic
water	59:31	0:0	6	;
for	60:12	72:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	60:18	60:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	60:18	0:0	8	i_x
op	60:22	0:0	8	=
water	60:24	0:0	8	(
water	60:25	0:0	8	p_filter
op	60:33	0:0	8	->
water	60:35	0:0	8	fmt_in
op	60:41	0:0	8	.
water	60:42	0:0	8	video
op	60:47	0:0	8	.
water	60:48	0:0	8	i_x_offset
op	60:59	0:0	8	+
water	60:61	0:0	8	p_filter
op	60:69	0:0	8	->
water	60:71	0:0	8	fmt_in
op	60:77	0:0	8	.
water	60:78	0:0	8	video
op	60:83	0:0	8	.
water	60:84	0:0	8	i_visible_width
water	60:99	0:0	8	)
op	60:101	0:0	8	/
water	60:103	0:0	8	16
water	60:105	0:0	8	;
cond	60:107	60:110	7	i_x --
water	60:107	0:0	8	i_x
op	60:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	61:12	72:12	7	
water	61:12	0:0	8	{
call	62:16	67:16	8	SSE2_CALL
arg	63:20	67:16	9	SSE2_INIT_32_ALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ABGR_ALIGNED
water	63:20	0:0	10	SSE2_INIT_32_ALIGNED
water	64:20	0:0	10	SSE2_YUV_MUL
water	65:20	0:0	10	SSE2_YUV_ADD
water	66:20	0:0	10	SSE2_UNPACK_32_ABGR_ALIGNED
water	67:17	0:0	8	;
water	68:16	0:0	8	p_y
op	68:20	0:0	8	+=
water	68:23	0:0	8	16
water	68:25	0:0	8	;
water	69:16	0:0	8	p_u
op	69:20	0:0	8	+=
water	69:23	0:0	8	8
water	69:24	0:0	8	;
water	70:16	0:0	8	p_v
op	70:20	0:0	8	+=
water	70:23	0:0	8	8
water	70:24	0:0	8	;
water	71:16	0:0	8	p_buffer
op	71:25	0:0	8	+=
water	71:28	0:0	8	16
water	71:30	0:0	8	;
water	72:12	0:0	8	}
if	75:12	90:12	6	(i_rewind)
cond	75:16	75:16	7	i_rewind
water	75:16	0:0	8	i_rewind
stmts	76:12	90:12	7	
water	76:12	0:0	8	{
water	77:16	0:0	8	p_y
op	77:20	0:0	8	-=
water	77:23	0:0	8	i_rewind
water	77:31	0:0	8	;
water	78:16	0:0	8	p_u
op	78:20	0:0	8	-=
water	78:23	0:0	8	i_rewind
op	78:32	0:0	8	>>
water	78:35	0:0	8	1
water	78:36	0:0	8	;
water	79:16	0:0	8	p_v
op	79:20	0:0	8	-=
water	79:23	0:0	8	i_rewind
op	79:32	0:0	8	>>
water	79:35	0:0	8	1
water	79:36	0:0	8	;
water	80:16	0:0	8	p_buffer
op	80:25	0:0	8	-=
water	80:28	0:0	8	i_rewind
water	80:36	0:0	8	;
call	81:16	86:16	8	SSE2_CALL
arg	82:20	86:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ABGR_UNALIGNED
water	82:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	83:20	0:0	10	SSE2_YUV_MUL
water	84:20	0:0	10	SSE2_YUV_ADD
water	85:20	0:0	10	SSE2_UNPACK_32_ABGR_UNALIGNED
water	86:17	0:0	8	;
water	87:16	0:0	8	p_y
op	87:20	0:0	8	+=
water	87:23	0:0	8	16
water	87:25	0:0	8	;
water	88:16	0:0	8	p_u
op	88:20	0:0	8	+=
water	88:23	0:0	8	4
water	88:24	0:0	8	;
water	89:16	0:0	8	p_v
op	89:20	0:0	8	+=
water	89:23	0:0	8	4
water	89:24	0:0	8	;
water	90:12	0:0	8	}
water	91:12	0:0	6	SCALE_WIDTH
water	91:23	0:0	6	;
call	92:12	92:33	6	SCALE_HEIGHT
arg	92:26	92:29	7	420
water	92:26	0:0	8	420
arg	92:31	92:33	7	4
water	92:31	0:0	8	4
water	92:34	0:0	6	;
water	93:12	0:0	6	p_y
op	93:16	0:0	6	+=
water	93:19	0:0	6	i_source_margin
water	93:34	0:0	6	;
if	94:12	98:12	6	(i_y % 2)
cond	94:16	94:22	7	i_y % 2
water	94:16	0:0	8	i_y
op	94:20	0:0	8	%
water	94:22	0:0	8	2
stmts	95:12	98:12	7	
water	95:12	0:0	8	{
water	96:16	0:0	8	p_u
op	96:20	0:0	8	+=
water	96:23	0:0	8	i_source_margin_c
water	96:40	0:0	8	;
water	97:16	0:0	8	p_v
op	97:20	0:0	8	+=
water	97:23	0:0	8	i_source_margin_c
water	97:40	0:0	8	;
water	98:12	0:0	8	}
water	99:12	0:0	6	p_buffer
op	99:21	0:0	6	=
water	99:23	0:0	6	b_hscale
water	99:32	0:0	6	?
water	99:34	0:0	6	p_buffer_start
water	99:49	0:0	6	:
water	99:51	0:0	6	p_pic
water	99:56	0:0	6	;
water	100:8	0:0	6	}
water	101:4	0:0	4	}
else	102:4	150:4	2
stmts	103:4	150:4	3	
water	103:4	0:0	4	{
for	105:8	149:8	4	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	105:13	105:20	5	i_y = 0 ;
water	105:13	0:0	6	i_y
op	105:17	0:0	6	=
water	105:19	0:0	6	0
water	105:20	0:0	6	;
cond	105:22	105:104	5	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	105:22	0:0	6	i_y
op	105:26	0:0	6	<
water	105:28	0:0	6	(
water	105:29	0:0	6	p_filter
op	105:37	0:0	6	->
water	105:39	0:0	6	fmt_in
op	105:45	0:0	6	.
water	105:46	0:0	6	video
op	105:51	0:0	6	.
water	105:52	0:0	6	i_y_offset
op	105:63	0:0	6	+
water	105:65	0:0	6	p_filter
op	105:73	0:0	6	->
water	105:75	0:0	6	fmt_in
op	105:81	0:0	6	.
water	105:82	0:0	6	video
op	105:87	0:0	6	.
water	105:88	0:0	6	i_visible_height
water	105:104	0:0	6	)
forexpr	105:107	105:110	5	i_y ++
water	105:107	0:0	6	i_y
op	105:110	0:0	6	++
stmts	106:8	149:8	5	
water	106:8	0:0	6	{
water	107:12	0:0	6	p_pic_start
op	107:24	0:0	6	=
water	107:26	0:0	6	p_pic
water	107:31	0:0	6	;
water	108:12	0:0	6	p_buffer
op	108:21	0:0	6	=
water	108:23	0:0	6	b_hscale
water	108:32	0:0	6	?
water	108:34	0:0	6	p_buffer_start
water	108:49	0:0	6	:
water	108:51	0:0	6	p_pic
water	108:56	0:0	6	;
for	109:12	121:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	109:18	109:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	109:18	0:0	8	i_x
op	109:22	0:0	8	=
water	109:24	0:0	8	(
water	109:25	0:0	8	p_filter
op	109:33	0:0	8	->
water	109:35	0:0	8	fmt_in
op	109:41	0:0	8	.
water	109:42	0:0	8	video
op	109:47	0:0	8	.
water	109:48	0:0	8	i_x_offset
op	109:59	0:0	8	+
water	109:61	0:0	8	p_filter
op	109:69	0:0	8	->
water	109:71	0:0	8	fmt_in
op	109:77	0:0	8	.
water	109:78	0:0	8	video
op	109:83	0:0	8	.
water	109:84	0:0	8	i_visible_width
water	109:99	0:0	8	)
op	109:101	0:0	8	/
water	109:103	0:0	8	16
water	109:105	0:0	8	;
cond	109:107	109:110	7	i_x --
water	109:107	0:0	8	i_x
op	109:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	110:12	121:12	7	
water	110:12	0:0	8	{
call	111:16	116:16	8	SSE2_CALL
arg	112:20	116:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ABGR_UNALIGNED
water	112:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	113:20	0:0	10	SSE2_YUV_MUL
water	114:20	0:0	10	SSE2_YUV_ADD
water	115:20	0:0	10	SSE2_UNPACK_32_ABGR_UNALIGNED
water	116:17	0:0	8	;
water	117:16	0:0	8	p_y
op	117:20	0:0	8	+=
water	117:23	0:0	8	16
water	117:25	0:0	8	;
water	118:16	0:0	8	p_u
op	118:20	0:0	8	+=
water	118:23	0:0	8	8
water	118:24	0:0	8	;
water	119:16	0:0	8	p_v
op	119:20	0:0	8	+=
water	119:23	0:0	8	8
water	119:24	0:0	8	;
water	120:16	0:0	8	p_buffer
op	120:25	0:0	8	+=
water	120:28	0:0	8	16
water	120:30	0:0	8	;
water	121:12	0:0	8	}
if	124:12	139:12	6	(i_rewind)
cond	124:16	124:16	7	i_rewind
water	124:16	0:0	8	i_rewind
stmts	125:12	139:12	7	
water	125:12	0:0	8	{
water	126:16	0:0	8	p_y
op	126:20	0:0	8	-=
water	126:23	0:0	8	i_rewind
water	126:31	0:0	8	;
water	127:16	0:0	8	p_u
op	127:20	0:0	8	-=
water	127:23	0:0	8	i_rewind
op	127:32	0:0	8	>>
water	127:35	0:0	8	1
water	127:36	0:0	8	;
water	128:16	0:0	8	p_v
op	128:20	0:0	8	-=
water	128:23	0:0	8	i_rewind
op	128:32	0:0	8	>>
water	128:35	0:0	8	1
water	128:36	0:0	8	;
water	129:16	0:0	8	p_buffer
op	129:25	0:0	8	-=
water	129:28	0:0	8	i_rewind
water	129:36	0:0	8	;
call	130:16	135:16	8	SSE2_CALL
arg	131:20	135:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ABGR_UNALIGNED
water	131:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	132:20	0:0	10	SSE2_YUV_MUL
water	133:20	0:0	10	SSE2_YUV_ADD
water	134:20	0:0	10	SSE2_UNPACK_32_ABGR_UNALIGNED
water	135:17	0:0	8	;
water	136:16	0:0	8	p_y
op	136:20	0:0	8	+=
water	136:23	0:0	8	16
water	136:25	0:0	8	;
water	137:16	0:0	8	p_u
op	137:20	0:0	8	+=
water	137:23	0:0	8	8
water	137:24	0:0	8	;
water	138:16	0:0	8	p_v
op	138:20	0:0	8	+=
water	138:23	0:0	8	8
water	138:24	0:0	8	;
water	139:12	0:0	8	}
water	140:12	0:0	6	SCALE_WIDTH
water	140:23	0:0	6	;
call	141:12	141:33	6	SCALE_HEIGHT
arg	141:26	141:29	7	420
water	141:26	0:0	8	420
arg	141:31	141:33	7	4
water	141:31	0:0	8	4
water	141:34	0:0	6	;
water	142:12	0:0	6	p_y
op	142:16	0:0	6	+=
water	142:19	0:0	6	i_source_margin
water	142:34	0:0	6	;
if	143:12	147:12	6	(i_y % 2)
cond	143:16	143:22	7	i_y % 2
water	143:16	0:0	8	i_y
op	143:20	0:0	8	%
water	143:22	0:0	8	2
stmts	144:12	147:12	7	
water	144:12	0:0	8	{
water	145:16	0:0	8	p_u
op	145:20	0:0	8	+=
water	145:23	0:0	8	i_source_margin_c
water	145:40	0:0	8	;
water	146:16	0:0	8	p_v
op	146:20	0:0	8	+=
water	146:23	0:0	8	i_source_margin_c
water	146:40	0:0	8	;
water	147:12	0:0	8	}
water	148:12	0:0	6	p_buffer
op	148:21	0:0	6	=
water	148:23	0:0	6	b_hscale
water	148:32	0:0	6	?
water	148:34	0:0	6	p_buffer_start
water	148:49	0:0	6	:
water	148:51	0:0	6	p_pic
water	148:56	0:0	6	;
water	149:8	0:0	6	}
water	150:4	0:0	4	}
water	152:4	0:0	2	i_rewind
op	152:13	0:0	2	=
water	152:15	0:0	2	(
op	152:16	0:0	2	-
water	152:17	0:0	2	(
water	152:18	0:0	2	p_filter
op	152:26	0:0	2	->
water	152:28	0:0	2	fmt_in
op	152:34	0:0	2	.
water	152:35	0:0	2	video
op	152:40	0:0	2	.
water	152:41	0:0	2	i_x_offset
op	152:52	0:0	2	+
water	152:54	0:0	2	p_filter
op	152:62	0:0	2	->
water	152:64	0:0	2	fmt_in
op	152:70	0:0	2	.
water	152:71	0:0	2	video
op	152:76	0:0	2	.
water	152:77	0:0	2	i_visible_width
water	152:92	0:0	2	)
water	152:93	0:0	2	)
op	152:95	0:0	2	&
water	152:97	0:0	2	7
water	152:98	0:0	2	;
for	153:4	197:4	2	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	153:9	153:16	3	i_y = 0 ;
water	153:9	0:0	4	i_y
op	153:13	0:0	4	=
water	153:15	0:0	4	0
water	153:16	0:0	4	;
cond	153:18	153:100	3	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	153:18	0:0	4	i_y
op	153:22	0:0	4	<
water	153:24	0:0	4	(
water	153:25	0:0	4	p_filter
op	153:33	0:0	4	->
water	153:35	0:0	4	fmt_in
op	153:41	0:0	4	.
water	153:42	0:0	4	video
op	153:47	0:0	4	.
water	153:48	0:0	4	i_y_offset
op	153:59	0:0	4	+
water	153:61	0:0	4	p_filter
op	153:69	0:0	4	->
water	153:71	0:0	4	fmt_in
op	153:77	0:0	4	.
water	153:78	0:0	4	video
op	153:83	0:0	4	.
water	153:84	0:0	4	i_visible_height
water	153:100	0:0	4	)
forexpr	153:103	153:106	3	i_y ++
water	153:103	0:0	4	i_y
op	153:106	0:0	4	++
stmts	154:4	197:4	3	
water	154:4	0:0	4	{
water	155:8	0:0	4	p_pic_start
op	155:20	0:0	4	=
water	155:22	0:0	4	p_pic
water	155:27	0:0	4	;
water	156:8	0:0	4	p_buffer
op	156:17	0:0	4	=
water	156:19	0:0	4	b_hscale
water	156:28	0:0	4	?
water	156:30	0:0	4	p_buffer_start
water	156:45	0:0	4	:
water	156:47	0:0	4	p_pic
water	156:52	0:0	4	;
for	157:8	169:8	4	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;i_x --;)
forinit	157:14	157:100	5	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;
water	157:14	0:0	6	i_x
op	157:18	0:0	6	=
water	157:20	0:0	6	(
water	157:21	0:0	6	p_filter
op	157:29	0:0	6	->
water	157:31	0:0	6	fmt_in
op	157:37	0:0	6	.
water	157:38	0:0	6	video
op	157:43	0:0	6	.
water	157:44	0:0	6	i_x_offset
op	157:55	0:0	6	+
water	157:57	0:0	6	p_filter
op	157:65	0:0	6	->
water	157:67	0:0	6	fmt_in
op	157:73	0:0	6	.
water	157:74	0:0	6	video
op	157:79	0:0	6	.
water	157:80	0:0	6	i_visible_width
water	157:95	0:0	6	)
op	157:97	0:0	6	/
water	157:99	0:0	6	8
water	157:100	0:0	6	;
cond	157:102	157:105	5	i_x --
water	157:102	0:0	6	i_x
op	157:105	0:0	6	--
forexpr	0:0	0:0	5	
stmts	158:8	169:8	5	
water	158:8	0:0	6	{
call	159:12	164:12	6	MMX_CALL
arg	160:16	164:12	7	MMX_INIT_32MMX_YUV_MULMMX_YUV_ADDMMX_UNPACK_32_ABGR
water	160:16	0:0	8	MMX_INIT_32
water	161:16	0:0	8	MMX_YUV_MUL
water	162:16	0:0	8	MMX_YUV_ADD
water	163:16	0:0	8	MMX_UNPACK_32_ABGR
water	164:13	0:0	6	;
water	165:12	0:0	6	p_y
op	165:16	0:0	6	+=
water	165:19	0:0	6	8
water	165:20	0:0	6	;
water	166:12	0:0	6	p_u
op	166:16	0:0	6	+=
water	166:19	0:0	6	4
water	166:20	0:0	6	;
water	167:12	0:0	6	p_v
op	167:16	0:0	6	+=
water	167:19	0:0	6	4
water	167:20	0:0	6	;
water	168:12	0:0	6	p_buffer
op	168:21	0:0	6	+=
water	168:24	0:0	6	8
water	168:25	0:0	6	;
water	169:8	0:0	6	}
if	172:8	188:8	4	(i_rewind)
cond	172:12	172:12	5	i_rewind
water	172:12	0:0	6	i_rewind
stmts	173:8	188:8	5	
water	173:8	0:0	6	{
water	174:12	0:0	6	p_y
op	174:16	0:0	6	-=
water	174:19	0:0	6	i_rewind
water	174:27	0:0	6	;
water	175:12	0:0	6	p_u
op	175:16	0:0	6	-=
water	175:19	0:0	6	i_rewind
op	175:28	0:0	6	>>
water	175:31	0:0	6	1
water	175:32	0:0	6	;
water	176:12	0:0	6	p_v
op	176:16	0:0	6	-=
water	176:19	0:0	6	i_rewind
op	176:28	0:0	6	>>
water	176:31	0:0	6	1
water	176:32	0:0	6	;
water	177:12	0:0	6	p_buffer
op	177:21	0:0	6	-=
water	177:24	0:0	6	i_rewind
water	177:32	0:0	6	;
call	178:12	183:12	6	MMX_CALL
arg	179:16	183:12	7	MMX_INIT_32MMX_YUV_MULMMX_YUV_ADDMMX_UNPACK_32_ABGR
water	179:16	0:0	8	MMX_INIT_32
water	180:16	0:0	8	MMX_YUV_MUL
water	181:16	0:0	8	MMX_YUV_ADD
water	182:16	0:0	8	MMX_UNPACK_32_ABGR
water	183:13	0:0	6	;
water	184:12	0:0	6	p_y
op	184:16	0:0	6	+=
water	184:19	0:0	6	8
water	184:20	0:0	6	;
water	185:12	0:0	6	p_u
op	185:16	0:0	6	+=
water	185:19	0:0	6	4
water	185:20	0:0	6	;
water	186:12	0:0	6	p_v
op	186:16	0:0	6	+=
water	186:19	0:0	6	4
water	186:20	0:0	6	;
water	187:12	0:0	6	p_buffer
op	187:21	0:0	6	+=
water	187:24	0:0	6	8
water	187:25	0:0	6	;
water	188:8	0:0	6	}
water	189:8	0:0	4	SCALE_WIDTH
water	189:19	0:0	4	;
call	190:8	190:29	4	SCALE_HEIGHT
arg	190:22	190:25	5	420
water	190:22	0:0	6	420
arg	190:27	190:29	5	4
water	190:27	0:0	6	4
water	190:30	0:0	4	;
water	191:8	0:0	4	p_y
op	191:12	0:0	4	+=
water	191:15	0:0	4	i_source_margin
water	191:30	0:0	4	;
if	192:8	196:8	4	(i_y % 2)
cond	192:12	192:18	5	i_y % 2
water	192:12	0:0	6	i_y
op	192:16	0:0	6	%
water	192:18	0:0	6	2
stmts	193:8	196:8	5	
water	193:8	0:0	6	{
water	194:12	0:0	6	p_u
op	194:16	0:0	6	+=
water	194:19	0:0	6	i_source_margin_c
water	194:36	0:0	6	;
water	195:12	0:0	6	p_v
op	195:16	0:0	6	+=
water	195:19	0:0	6	i_source_margin_c
water	195:36	0:0	6	;
water	196:8	0:0	6	}
water	197:4	0:0	4	}
water	199:4	0:0	2	MMX_END
water	199:11	0:0	2	;

func	2:0	40:0	0	static vout_display_t *	vout_display_New
params	2:39	0:0	1	
param	2:40	2:57	2	vlc_object_t *	obj
param	3:40	3:58	2	const char *	module
param	3:60	3:76	2	bool	load_module
param	4:40	4:65	2	const video_format_t *	fmt
param	5:40	5:69	2	const vout_display_cfg_t *	cfg
param	6:40	6:67	2	vout_display_owner_t *	owner
stmnts	0:0	39:13	1	
decl	9:4	9:77	2	vout_display_t	*vd
op	9:23	0:0	2	=
call	9:25	9:76	3	vlc_custom_create
arg	9:43	9:46	4	obj
water	9:43	0:0	5	obj
arg	9:48	9:59	4	sizeof(*vd)
op	9:48	0:0	5	sizeof
water	9:54	0:0	5	(
op	9:55	0:0	5	*
water	9:56	0:0	5	vd
water	9:58	0:0	5	)
arg	9:61	9:76	4	"vout display"
water	9:61	0:0	5	"vout display"
call	11:4	11:38	2	video_format_Copy
arg	11:22	11:33	3	&vd->source
op	11:22	0:0	4	&
water	11:23	0:0	4	vd
op	11:25	0:0	4	->
water	11:27	0:0	4	source
arg	11:35	11:38	3	fmt
water	11:35	0:0	4	fmt
water	11:39	0:0	2	;
call	13:4	13:35	2	video_format_Copy
arg	13:22	13:30	3	&vd->fmt
op	13:22	0:0	4	&
water	13:23	0:0	4	vd
op	13:25	0:0	4	->
water	13:27	0:0	4	fmt
arg	13:32	13:35	3	fmt
water	13:32	0:0	4	fmt
water	13:36	0:0	2	;
water	14:4	0:0	2	vd
op	14:6	0:0	2	->
water	14:8	0:0	2	fmt
op	14:11	0:0	2	.
water	14:12	0:0	2	i_sar_num
op	14:22	0:0	2	=
water	14:24	0:0	2	0
water	14:25	0:0	2	;
water	15:4	0:0	2	vd
op	15:6	0:0	2	->
water	15:8	0:0	2	fmt
op	15:11	0:0	2	.
water	15:12	0:0	2	i_sar_den
op	15:22	0:0	2	=
water	15:24	0:0	2	0
water	15:25	0:0	2	;
water	16:4	0:0	2	vd
op	16:6	0:0	2	->
water	16:8	0:0	2	info
op	16:12	0:0	2	.
water	16:13	0:0	2	is_slow
op	16:21	0:0	2	=
water	16:23	0:0	2	false
water	16:28	0:0	2	;
water	17:4	0:0	2	vd
op	17:6	0:0	2	->
water	17:8	0:0	2	info
op	17:12	0:0	2	.
water	17:13	0:0	2	has_double_click
op	17:30	0:0	2	=
water	17:32	0:0	2	false
water	17:37	0:0	2	;
water	18:4	0:0	2	vd
op	18:6	0:0	2	->
water	18:8	0:0	2	info
op	18:12	0:0	2	.
water	18:13	0:0	2	has_hide_mouse
op	18:28	0:0	2	=
water	18:30	0:0	2	false
water	18:35	0:0	2	;
water	19:4	0:0	2	vd
op	19:6	0:0	2	->
water	19:8	0:0	2	info
op	19:12	0:0	2	.
water	19:13	0:0	2	has_pictures_invalid
op	19:34	0:0	2	=
water	19:36	0:0	2	false
water	19:41	0:0	2	;
water	20:4	0:0	2	vd
op	20:6	0:0	2	->
water	20:8	0:0	2	info
op	20:12	0:0	2	.
water	20:13	0:0	2	has_event_thread
op	20:30	0:0	2	=
water	20:32	0:0	2	false
water	20:37	0:0	2	;
water	21:4	0:0	2	vd
op	21:6	0:0	2	->
water	21:8	0:0	2	info
op	21:12	0:0	2	.
water	21:13	0:0	2	subpicture_chromas
op	21:32	0:0	2	=
water	21:34	0:0	2	NULL
water	21:38	0:0	2	;
water	22:4	0:0	2	vd
op	22:6	0:0	2	->
water	22:8	0:0	2	cfg
op	22:12	0:0	2	=
water	22:14	0:0	2	cfg
water	22:17	0:0	2	;
water	23:4	0:0	2	vd
op	23:6	0:0	2	->
water	23:8	0:0	2	pool
op	23:13	0:0	2	=
water	23:15	0:0	2	NULL
water	23:19	0:0	2	;
water	24:4	0:0	2	vd
op	24:6	0:0	2	->
water	24:8	0:0	2	prepare
op	24:16	0:0	2	=
water	24:18	0:0	2	NULL
water	24:22	0:0	2	;
water	25:4	0:0	2	vd
op	25:6	0:0	2	->
water	25:8	0:0	2	display
op	25:16	0:0	2	=
water	25:18	0:0	2	NULL
water	25:22	0:0	2	;
water	26:4	0:0	2	vd
op	26:6	0:0	2	->
water	26:8	0:0	2	control
op	26:16	0:0	2	=
water	26:18	0:0	2	NULL
water	26:22	0:0	2	;
water	27:4	0:0	2	vd
op	27:6	0:0	2	->
water	27:8	0:0	2	manage
op	27:15	0:0	2	=
water	27:17	0:0	2	NULL
water	27:21	0:0	2	;
water	28:4	0:0	2	vd
op	28:6	0:0	2	->
water	28:8	0:0	2	sys
op	28:12	0:0	2	=
water	28:14	0:0	2	NULL
water	28:18	0:0	2	;
water	29:4	0:0	2	vd
op	29:6	0:0	2	->
water	29:8	0:0	2	owner
op	29:14	0:0	2	=
op	29:16	0:0	2	*
water	29:17	0:0	2	owner
water	29:22	0:0	2	;
if	30:4	36:4	2	(load_module)
cond	30:8	30:8	3	load_module
water	30:8	0:0	4	load_module
stmts	30:21	36:4	3	
water	30:21	0:0	4	{
water	31:8	0:0	4	vd
op	31:10	0:0	4	->
water	31:12	0:0	4	module
op	31:19	0:0	4	=
call	31:21	31:86	4	module_need
arg	31:33	31:35	5	vd
water	31:33	0:0	6	vd
arg	31:37	31:51	5	"vout display"
water	31:37	0:0	6	"vout display"
arg	31:53	31:59	5	module
water	31:53	0:0	6	module
arg	31:61	31:86	5	module&&*module!='\0'
water	31:61	0:0	6	module
op	31:68	0:0	6	&&
op	31:71	0:0	6	*
water	31:72	0:0	6	module
op	31:79	0:0	6	!=
water	31:82	0:0	6	'\0'
water	31:87	0:0	4	;
if	32:8	35:8	4	(! vd -> module)
cond	32:12	32:17	5	! vd -> module
op	32:12	0:0	6	!
water	32:13	0:0	6	vd
op	32:15	0:0	6	->
water	32:17	0:0	6	module
stmts	32:25	35:8	5	
water	32:25	0:0	6	{
call	33:12	33:33	6	vlc_object_release
arg	33:31	33:33	7	vd
water	33:31	0:0	8	vd
water	33:34	0:0	6	;
return	34:12	34:23	6	NULL
water	34:19	0:0	7	NULL
water	35:8	0:0	6	}
water	36:4	0:0	4	}
else	36:6	38:4	2
stmts	36:11	38:4	3	
water	36:11	0:0	4	{
water	37:8	0:0	4	vd
op	37:10	0:0	4	->
water	37:12	0:0	4	module
op	37:19	0:0	4	=
water	37:21	0:0	4	NULL
water	37:25	0:0	4	;
water	38:4	0:0	4	}
return	39:4	39:13	2	vd
water	39:11	0:0	3	vd

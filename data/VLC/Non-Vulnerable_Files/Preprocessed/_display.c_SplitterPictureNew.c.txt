func	2:0	20:0	0	static int	SplitterPictureNew
params	2:29	0:0	1	
param	2:30	2:56	2	video_splitter_t *	splitter
param	2:58	2:78	2	picture_t *	picture[]
stmnts	0:0	19:22	1	
decl	4:4	4:62	2	vout_display_sys_t	*wsys
op	4:29	0:0	2	=
water	4:31	0:0	2	splitter
op	4:39	0:0	2	->
water	4:41	0:0	2	p_owner
op	4:48	0:0	2	->
water	4:50	0:0	2	wrapper
op	4:57	0:0	2	->
water	4:59	0:0	2	sys
for	5:4	18:4	2	( int i = 0 ;i < wsys -> count;i ++)
forinit	0:0	5:18	3	 int i = 0 ;
decl	5:9	5:18	4	int	i
op	5:15	0:0	4	=
water	5:17	0:0	4	0
cond	5:20	5:30	3	i < wsys -> count
water	5:20	0:0	4	i
op	5:22	0:0	4	<
water	5:24	0:0	4	wsys
op	5:28	0:0	4	->
water	5:30	0:0	4	count
forexpr	5:37	5:38	3	i ++
water	5:37	0:0	4	i
op	5:38	0:0	4	++
stmts	5:42	18:4	3	
water	5:42	0:0	4	{
if	6:8	9:8	4	(vout_IsDisplayFiltered (wsys -> display [ i ] ))
cond	6:12	6:51	5	vout_IsDisplayFiltered (wsys -> display [ i ] )
call	6:12	6:51	6	vout_IsDisplayFiltered
arg	6:35	6:51	7	wsys->display[i]
water	6:35	0:0	8	wsys
op	6:39	0:0	8	->
water	6:41	0:0	8	display
op	6:48	0:0	8	[
water	6:49	0:0	8	i
op	6:50	0:0	8	]
stmts	6:54	9:8	5	
water	6:54	0:0	6	{
water	8:12	0:0	6	picture
op	8:19	0:0	6	[
water	8:20	0:0	6	i
op	8:21	0:0	6	]
op	8:23	0:0	6	=
call	8:25	8:72	6	picture_NewFromFormat
arg	8:47	8:72	7	&wsys->display[i]->source
op	8:47	0:0	8	&
water	8:48	0:0	8	wsys
op	8:52	0:0	8	->
water	8:54	0:0	8	display
op	8:61	0:0	8	[
water	8:62	0:0	8	i
op	8:63	0:0	8	]
op	8:64	0:0	8	->
water	8:66	0:0	8	source
water	8:73	0:0	6	;
water	9:8	0:0	6	}
else	9:10	12:8	4
stmts	9:15	12:8	5	
water	9:15	0:0	6	{
decl	10:12	10:73	6	picture_pool_t	*pool
op	10:33	0:0	6	=
call	10:35	10:72	7	vout_display_Pool
arg	10:53	10:69	8	wsys->display[i]
water	10:53	0:0	9	wsys
op	10:57	0:0	9	->
water	10:59	0:0	9	display
op	10:66	0:0	9	[
water	10:67	0:0	9	i
op	10:68	0:0	9	]
arg	10:71	10:72	8	1
water	10:71	0:0	9	1
water	11:12	0:0	6	picture
op	11:19	0:0	6	[
water	11:20	0:0	6	i
op	11:21	0:0	6	]
op	11:23	0:0	6	=
water	11:25	0:0	6	pool
water	11:30	0:0	6	?
call	11:32	11:53	6	picture_pool_Get
arg	11:49	11:53	7	pool
water	11:49	0:0	8	pool
water	11:55	0:0	6	:
water	11:57	0:0	6	NULL
water	11:61	0:0	6	;
water	12:8	0:0	6	}
if	13:8	17:8	4	(! picture [ i ])
cond	13:12	13:22	5	! picture [ i ]
op	13:12	0:0	6	!
water	13:13	0:0	6	picture
op	13:20	0:0	6	[
water	13:21	0:0	6	i
op	13:22	0:0	6	]
stmts	13:25	17:8	5	
water	13:25	0:0	6	{
for	14:12	15:43	6	( int j = 0 ;j < i;j ++)
forinit	0:0	14:26	7	 int j = 0 ;
decl	14:17	14:26	8	int	j
op	14:23	0:0	8	=
water	14:25	0:0	8	0
cond	14:28	14:32	7	j < i
water	14:28	0:0	8	j
op	14:30	0:0	8	<
water	14:32	0:0	8	i
forexpr	14:35	14:36	7	j ++
water	14:35	0:0	8	j
op	14:36	0:0	8	++
stmts	15:16	15:43	7	
call	15:16	15:42	8	picture_Release
arg	15:32	15:42	9	picture[j]
water	15:32	0:0	10	picture
op	15:39	0:0	10	[
water	15:40	0:0	10	j
op	15:41	0:0	10	]
water	15:43	0:0	8	;
return	16:12	16:31	6	VLC_EGENERIC
water	16:19	0:0	7	VLC_EGENERIC
water	17:8	0:0	6	}
water	18:4	0:0	4	}
return	19:4	19:22	2	VLC_SUCCESS
water	19:11	0:0	3	VLC_SUCCESS

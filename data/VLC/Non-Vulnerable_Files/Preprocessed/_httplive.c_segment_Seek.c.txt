func	2:0	87:0	0	static int	segment_Seek
params	2:23	0:0	1	
param	2:24	2:35	2	stream_t *	s
param	2:37	2:55	2	const uint64_t	pos
stmnts	0:0	86:47	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	5:4	5:74	2	hls_stream_t	*hls
op	5:22	0:0	2	=
call	5:24	5:73	3	hls_Get
arg	5:32	5:49	4	p_sys->hls_stream
water	5:32	0:0	5	p_sys
op	5:37	0:0	5	->
water	5:39	0:0	5	hls_stream
arg	5:51	5:73	4	p_sys->playback.stream
water	5:51	0:0	5	p_sys
op	5:56	0:0	5	->
water	5:58	0:0	5	playback
op	5:66	0:0	5	.
water	5:67	0:0	5	stream
if	6:4	7:27	2	(hls == NULL)
cond	6:8	6:15	3	hls == NULL
water	6:8	0:0	4	hls
op	6:12	0:0	4	==
water	6:15	0:0	4	NULL
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
call	8:4	8:29	2	vlc_mutex_lock
arg	8:19	8:29	3	&hls->lock
op	8:19	0:0	4	&
water	8:20	0:0	4	hls
op	8:23	0:0	4	->
water	8:25	0:0	4	lock
water	8:30	0:0	2	;
decl	9:4	9:24	2	bool	b_found
op	9:17	0:0	2	=
water	9:19	0:0	2	false
decl	10:4	10:23	2	uint64_t	length
op	10:20	0:0	2	=
water	10:22	0:0	2	0
decl	11:4	11:29	2	uint64_t	size
op	11:18	0:0	2	=
water	11:20	0:0	2	hls
op	11:23	0:0	2	->
water	11:25	0:0	2	size
decl	12:4	12:46	2	int	count
op	12:14	0:0	2	=
call	12:16	12:45	3	vlc_array_count
arg	12:32	12:45	4	hls->segments
water	12:32	0:0	5	hls
op	12:35	0:0	5	->
water	12:37	0:0	5	segments
decl	13:4	13:80	2	segment_t	*currentSegment
op	13:30	0:0	2	=
call	13:32	13:79	3	segment_GetSegment
arg	13:51	13:54	4	hls
water	13:51	0:0	5	hls
arg	13:56	13:79	4	p_sys->playback.segment
water	13:56	0:0	5	p_sys
op	13:61	0:0	5	->
water	13:63	0:0	5	playback
op	13:71	0:0	5	.
water	13:72	0:0	5	segment
if	14:4	18:4	2	(currentSegment == NULL)
cond	14:8	14:26	3	currentSegment == NULL
water	14:8	0:0	4	currentSegment
op	14:23	0:0	4	==
water	14:26	0:0	4	NULL
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:35	4	vlc_mutex_unlock
arg	16:25	16:35	5	&hls->lock
op	16:25	0:0	6	&
water	16:26	0:0	6	hls
op	16:29	0:0	6	->
water	16:31	0:0	6	lock
water	16:36	0:0	4	;
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
water	18:4	0:0	4	}
for	19:4	42:4	2	( int n = 0 ;n < count;n ++)
forinit	0:0	19:18	3	 int n = 0 ;
decl	19:9	19:18	4	int	n
op	19:15	0:0	4	=
water	19:17	0:0	4	0
cond	19:20	19:24	3	n < count
water	19:20	0:0	4	n
op	19:22	0:0	4	<
water	19:24	0:0	4	count
forexpr	19:31	19:32	3	n ++
water	19:31	0:0	4	n
op	19:32	0:0	4	++
stmts	20:4	42:4	3	
water	20:4	0:0	4	{
decl	21:8	21:55	4	segment_t	*segment
op	21:27	0:0	4	=
call	21:29	21:54	5	segment_GetSegment
arg	21:48	21:51	6	hls
water	21:48	0:0	7	hls
arg	21:53	21:54	6	n
water	21:53	0:0	7	n
if	22:8	26:8	4	(segment == NULL)
cond	22:12	22:23	5	segment == NULL
water	22:12	0:0	6	segment
op	22:20	0:0	6	==
water	22:23	0:0	6	NULL
stmts	23:8	26:8	5	
water	23:8	0:0	6	{
call	24:12	24:39	6	vlc_mutex_unlock
arg	24:29	24:39	7	&hls->lock
op	24:29	0:0	8	&
water	24:30	0:0	8	hls
op	24:33	0:0	8	->
water	24:35	0:0	8	lock
water	24:40	0:0	6	;
return	25:12	25:31	6	VLC_EGENERIC
water	25:19	0:0	7	VLC_EGENERIC
water	26:8	0:0	6	}
call	27:8	27:37	4	vlc_mutex_lock
arg	27:23	27:37	5	&segment->lock
op	27:23	0:0	6	&
water	27:24	0:0	6	segment
op	27:31	0:0	6	->
water	27:33	0:0	6	lock
water	27:38	0:0	4	;
water	28:8	0:0	4	length
op	28:15	0:0	4	+=
water	28:18	0:0	4	segment
op	28:25	0:0	4	->
water	28:27	0:0	4	duration
op	28:36	0:0	4	*
water	28:38	0:0	4	(
water	28:39	0:0	4	hls
op	28:42	0:0	4	->
water	28:44	0:0	4	bandwidth
op	28:53	0:0	4	/
water	28:54	0:0	4	8
water	28:55	0:0	4	)
water	28:56	0:0	4	;
call	29:8	29:39	4	vlc_mutex_unlock
arg	29:25	29:39	5	&segment->lock
op	29:25	0:0	6	&
water	29:26	0:0	6	segment
op	29:33	0:0	6	->
water	29:35	0:0	6	lock
water	29:40	0:0	4	;
if	30:8	41:8	4	(pos <= length)
cond	30:12	30:19	5	pos <= length
water	30:12	0:0	6	pos
op	30:16	0:0	6	<=
water	30:19	0:0	6	length
stmts	31:8	41:8	5	
water	31:8	0:0	6	{
if	32:12	37:12	6	(count - n >= 3)
cond	32:16	32:29	7	count - n >= 3
water	32:16	0:0	8	count
op	32:22	0:0	8	-
water	32:24	0:0	8	n
op	32:26	0:0	8	>=
water	32:29	0:0	8	3
stmts	33:12	37:12	7	
water	33:12	0:0	8	{
water	34:16	0:0	8	p_sys
op	34:21	0:0	8	->
water	34:23	0:0	8	playback
op	34:31	0:0	8	.
water	34:32	0:0	8	segment
op	34:40	0:0	8	=
water	34:42	0:0	8	n
water	34:43	0:0	8	;
water	35:16	0:0	8	b_found
op	35:24	0:0	8	=
water	35:26	0:0	8	true
water	35:30	0:0	8	;
break	36:16	36:21	8	
water	37:12	0:0	8	}
call	39:12	39:39	6	vlc_mutex_unlock
arg	39:29	39:39	7	&hls->lock
op	39:29	0:0	8	&
water	39:30	0:0	8	hls
op	39:33	0:0	8	->
water	39:35	0:0	8	lock
water	39:40	0:0	6	;
return	40:12	40:31	6	VLC_EGENERIC
water	40:19	0:0	7	VLC_EGENERIC
water	41:8	0:0	6	}
water	42:4	0:0	4	}
if	44:4	48:4	2	(! b_found && ( pos >= size ))
cond	44:8	44:32	3	! b_found && ( pos >= size )
op	44:8	0:0	4	!
water	44:9	0:0	4	b_found
op	44:17	0:0	4	&&
water	44:20	0:0	4	(
water	44:21	0:0	4	pos
op	44:25	0:0	4	>=
water	44:28	0:0	4	size
water	44:32	0:0	4	)
stmts	45:4	48:4	3	
water	45:4	0:0	4	{
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	playback
op	46:23	0:0	4	.
water	46:24	0:0	4	segment
op	46:32	0:0	4	=
water	46:34	0:0	4	count
op	46:40	0:0	4	-
water	46:42	0:0	4	1
water	46:43	0:0	4	;
water	47:8	0:0	4	b_found
op	47:16	0:0	4	=
water	47:18	0:0	4	true
water	47:22	0:0	4	;
water	48:4	0:0	4	}
if	50:4	84:4	2	(b_found)
cond	50:8	50:8	3	b_found
water	50:8	0:0	4	b_found
stmts	51:4	84:4	3	
water	51:4	0:0	4	{
call	53:8	53:44	4	vlc_mutex_lock
arg	53:23	53:44	5	&currentSegment->lock
op	53:23	0:0	6	&
water	53:24	0:0	6	currentSegment
op	53:38	0:0	6	->
water	53:40	0:0	6	lock
water	53:45	0:0	4	;
call	54:8	54:41	4	segment_RestorePos
arg	54:27	54:41	5	currentSegment
water	54:27	0:0	6	currentSegment
water	54:42	0:0	4	;
call	55:8	55:46	4	vlc_mutex_unlock
arg	55:25	55:46	5	&currentSegment->lock
op	55:25	0:0	6	&
water	55:26	0:0	6	currentSegment
op	55:40	0:0	6	->
water	55:42	0:0	6	lock
water	55:47	0:0	4	;
decl	57:8	57:77	4	segment_t	*segment
op	57:27	0:0	4	=
call	57:29	57:76	5	segment_GetSegment
arg	57:48	57:51	6	hls
water	57:48	0:0	7	hls
arg	57:53	57:76	6	p_sys->playback.segment
water	57:53	0:0	7	p_sys
op	57:58	0:0	7	->
water	57:60	0:0	7	playback
op	57:68	0:0	7	.
water	57:69	0:0	7	segment
if	58:8	62:8	4	(segment == NULL)
cond	58:12	58:23	5	segment == NULL
water	58:12	0:0	6	segment
op	58:20	0:0	6	==
water	58:23	0:0	6	NULL
stmts	59:8	62:8	5	
water	59:8	0:0	6	{
call	60:12	60:39	6	vlc_mutex_unlock
arg	60:29	60:39	7	&hls->lock
op	60:29	0:0	8	&
water	60:30	0:0	8	hls
op	60:33	0:0	8	->
water	60:35	0:0	8	lock
water	60:40	0:0	6	;
return	61:12	61:31	6	VLC_EGENERIC
water	61:19	0:0	7	VLC_EGENERIC
water	62:8	0:0	6	}
call	63:8	63:37	4	vlc_mutex_lock
arg	63:23	63:37	5	&segment->lock
op	63:23	0:0	6	&
water	63:24	0:0	6	segment
op	63:31	0:0	6	->
water	63:33	0:0	6	lock
water	63:38	0:0	4	;
call	64:8	64:34	4	segment_RestorePos
arg	64:27	64:34	5	segment
water	64:27	0:0	6	segment
water	64:35	0:0	4	;
call	65:8	65:39	4	vlc_mutex_unlock
arg	65:25	65:39	5	&segment->lock
op	65:25	0:0	6	&
water	65:26	0:0	6	segment
op	65:33	0:0	6	->
water	65:35	0:0	6	lock
water	65:40	0:0	4	;
call	67:8	67:35	4	vlc_mutex_unlock
arg	67:25	67:35	5	&hls->lock
op	67:25	0:0	6	&
water	67:26	0:0	6	hls
op	67:29	0:0	6	->
water	67:31	0:0	6	lock
water	67:36	0:0	4	;
call	69:8	69:49	4	vlc_mutex_lock
arg	69:23	69:49	5	&p_sys->download.lock_wait
op	69:23	0:0	6	&
water	69:24	0:0	6	p_sys
op	69:29	0:0	6	->
water	69:31	0:0	6	download
op	69:39	0:0	6	.
water	69:40	0:0	6	lock_wait
water	69:50	0:0	4	;
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	download
op	70:23	0:0	4	.
water	70:24	0:0	4	seek
op	70:29	0:0	4	=
water	70:31	0:0	4	p_sys
op	70:36	0:0	4	->
water	70:38	0:0	4	playback
op	70:46	0:0	4	.
water	70:47	0:0	4	segment
water	70:54	0:0	4	;
call	71:8	71:45	4	vlc_cond_signal
arg	71:24	71:45	5	&p_sys->download.wait
op	71:24	0:0	6	&
water	71:25	0:0	6	p_sys
op	71:30	0:0	6	->
water	71:32	0:0	6	download
op	71:40	0:0	6	.
water	71:41	0:0	6	wait
water	71:46	0:0	4	;
call	73:8	73:64	4	msg_Dbg
arg	73:16	73:17	5	s
water	73:16	0:0	6	s
arg	73:19	73:39	5	"seek to segment %d"
water	73:19	0:0	6	"seek to segment %d"
arg	73:41	73:64	5	p_sys->playback.segment
water	73:41	0:0	6	p_sys
op	73:46	0:0	6	->
water	73:48	0:0	6	playback
op	73:56	0:0	6	.
water	73:57	0:0	6	segment
water	73:65	0:0	4	;
while	74:8	81:8	4	(( p_sys -> download . seek != - 1 ) || ( ( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && ( p_sys -> download . segment < count ) ))
cond	74:15	76:49	5	( p_sys -> download . seek != - 1 ) || ( ( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && ( p_sys -> download . segment < count ) )
water	74:15	0:0	6	(
water	74:16	0:0	6	p_sys
op	74:21	0:0	6	->
water	74:23	0:0	6	download
op	74:31	0:0	6	.
water	74:32	0:0	6	seek
op	74:37	0:0	6	!=
op	74:40	0:0	6	-
water	74:41	0:0	6	1
water	74:42	0:0	6	)
op	74:44	0:0	6	||
water	75:11	0:0	6	(
water	75:12	0:0	6	(
water	75:13	0:0	6	p_sys
op	75:18	0:0	6	->
water	75:20	0:0	6	download
op	75:28	0:0	6	.
water	75:29	0:0	6	segment
op	75:37	0:0	6	-
water	75:39	0:0	6	p_sys
op	75:44	0:0	6	->
water	75:46	0:0	6	playback
op	75:54	0:0	6	.
water	75:55	0:0	6	segment
op	75:63	0:0	6	<
water	75:65	0:0	6	3
water	75:66	0:0	6	)
op	75:68	0:0	6	&&
water	76:16	0:0	6	(
water	76:17	0:0	6	p_sys
op	76:22	0:0	6	->
water	76:24	0:0	6	download
op	76:32	0:0	6	.
water	76:33	0:0	6	segment
op	76:41	0:0	6	<
water	76:43	0:0	6	count
water	76:48	0:0	6	)
water	76:49	0:0	6	)
stmts	77:8	81:8	5	
water	77:8	0:0	6	{
call	78:12	78:75	6	vlc_cond_wait
arg	78:26	78:47	7	&p_sys->download.wait
op	78:26	0:0	8	&
water	78:27	0:0	8	p_sys
op	78:32	0:0	8	->
water	78:34	0:0	8	download
op	78:42	0:0	8	.
water	78:43	0:0	8	wait
arg	78:49	78:75	7	&p_sys->download.lock_wait
op	78:49	0:0	8	&
water	78:50	0:0	8	p_sys
op	78:55	0:0	8	->
water	78:57	0:0	8	download
op	78:65	0:0	8	.
water	78:66	0:0	8	lock_wait
water	78:76	0:0	6	;
if	79:12	80:21	6	(p_sys -> b_error ||atomic_load (& p_sys -> closing ))
cond	79:16	79:61	7	p_sys -> b_error ||atomic_load (& p_sys -> closing )
water	79:16	0:0	8	p_sys
op	79:21	0:0	8	->
water	79:23	0:0	8	b_error
op	79:31	0:0	8	||
call	79:34	79:61	8	atomic_load
arg	79:46	79:61	9	&p_sys->closing
op	79:46	0:0	10	&
water	79:47	0:0	10	p_sys
op	79:52	0:0	10	->
water	79:54	0:0	10	closing
stmts	80:16	80:21	7	
break	80:16	80:21	8	
water	81:8	0:0	6	}
call	82:8	82:51	4	vlc_mutex_unlock
arg	82:25	82:51	5	&p_sys->download.lock_wait
op	82:25	0:0	6	&
water	82:26	0:0	6	p_sys
op	82:31	0:0	6	->
water	82:33	0:0	6	download
op	82:41	0:0	6	.
water	82:42	0:0	6	lock_wait
water	82:52	0:0	4	;
return	83:8	83:26	4	VLC_SUCCESS
water	83:15	0:0	5	VLC_SUCCESS
water	84:4	0:0	4	}
call	85:4	85:31	2	vlc_mutex_unlock
arg	85:21	85:31	3	&hls->lock
op	85:21	0:0	4	&
water	85:22	0:0	4	hls
op	85:25	0:0	4	->
water	85:27	0:0	4	lock
water	85:32	0:0	2	;
return	86:4	86:47	2	b_found?VLC_SUCCESS:VLC_EGENERIC
water	86:11	0:0	3	b_found
water	86:19	0:0	3	?
water	86:21	0:0	3	VLC_SUCCESS
water	86:33	0:0	3	:
water	86:35	0:0	3	VLC_EGENERIC

func	2:0	118:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:39	2	vlc_object_t *	p_this
stmnts	0:0	117:23	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:25	2	const uint8_t	*p_peek
decl	7:4	7:21	2	frame_header_t	fh
if	9:4	12:27	2	(stream_Peek (p_demux -> s ,& p_peek ,12 ) != 12 || (strncmp (( char * ) p_peek ,"MythTVVideo" ,11 ) &&strncmp (( char * ) p_peek ,"NuppelVideo" ,11 ) ))
cond	9:8	11:55	3	stream_Peek (p_demux -> s ,& p_peek ,12 ) != 12 || (strncmp (( char * ) p_peek ,"MythTVVideo" ,11 ) &&strncmp (( char * ) p_peek ,"NuppelVideo" ,11 ) )
call	9:8	9:45	4	stream_Peek
arg	9:21	9:31	5	p_demux->s
water	9:21	0:0	6	p_demux
op	9:28	0:0	6	->
water	9:30	0:0	6	s
arg	9:33	9:40	5	&p_peek
op	9:33	0:0	6	&
water	9:34	0:0	6	p_peek
arg	9:42	9:45	5	12
water	9:42	0:0	6	12
op	9:47	0:0	4	!=
water	9:50	0:0	4	12
op	9:53	0:0	4	||
water	10:8	0:0	4	(
call	10:10	10:53	4	strncmp
arg	10:19	10:33	5	(char*)p_peek
water	10:19	0:0	6	(
water	10:20	0:0	6	char
op	10:25	0:0	6	*
water	10:26	0:0	6	)
water	10:27	0:0	6	p_peek
arg	10:35	10:48	5	"MythTVVideo"
water	10:35	0:0	6	"MythTVVideo"
arg	10:50	10:53	5	11
water	10:50	0:0	6	11
op	10:55	0:0	4	&&
call	11:10	11:53	4	strncmp
arg	11:19	11:33	5	(char*)p_peek
water	11:19	0:0	6	(
water	11:20	0:0	6	char
op	11:25	0:0	6	*
water	11:26	0:0	6	)
water	11:27	0:0	6	p_peek
arg	11:35	11:48	5	"NuppelVideo"
water	11:35	0:0	6	"NuppelVideo"
arg	11:50	11:53	5	11
water	11:50	0:0	6	11
water	11:55	0:0	4	)
stmts	12:8	12:27	3	
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	13:4	0:0	2	p_sys
op	13:10	0:0	2	=
call	13:12	13:42	2	malloc
arg	13:20	13:42	3	sizeof(demux_sys_t)
op	13:20	0:0	4	sizeof
water	13:26	0:0	4	(
water	13:28	0:0	4	demux_sys_t
water	13:40	0:0	4	)
water	13:43	0:0	2	;
if	14:4	15:25	2	(p_sys == NULL)
cond	14:8	14:17	3	p_sys == NULL
water	14:8	0:0	4	p_sys
op	14:14	0:0	4	==
water	14:17	0:0	4	NULL
stmts	15:8	15:25	3	
return	15:8	15:25	4	VLC_ENOMEM
water	15:15	0:0	5	VLC_ENOMEM
call	16:4	16:44	2	memset
arg	16:12	16:17	3	p_sys
water	16:12	0:0	4	p_sys
arg	16:19	16:20	3	0
water	16:19	0:0	4	0
arg	16:22	16:44	3	sizeof(demux_sys_t)
op	16:22	0:0	4	sizeof
water	16:28	0:0	4	(
water	16:30	0:0	4	demux_sys_t
water	16:42	0:0	4	)
water	16:45	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	p_es_video
op	17:22	0:0	2	=
water	17:24	0:0	2	NULL
water	17:28	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	p_es_audio
op	18:22	0:0	2	=
water	18:24	0:0	2	NULL
water	18:28	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	p_extra_f
op	19:21	0:0	2	=
water	19:23	0:0	2	NULL
water	19:27	0:0	2	;
water	20:4	0:0	2	p_sys
op	20:9	0:0	2	->
water	20:11	0:0	2	i_pcr
op	20:17	0:0	2	=
op	20:19	0:0	2	-
water	20:20	0:0	2	1
water	20:21	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	b_index
op	21:19	0:0	2	=
water	21:21	0:0	2	false
water	21:26	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	i_total_frames
op	22:26	0:0	2	=
op	22:28	0:0	2	-
water	22:29	0:0	2	1
water	22:30	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	i_total_length
op	23:26	0:0	2	=
op	23:28	0:0	2	-
water	23:29	0:0	2	1
water	23:30	0:0	2	;
call	24:4	24:33	2	demux_IndexInit
arg	24:21	24:33	3	&p_sys->idx
op	24:21	0:0	4	&
water	24:22	0:0	4	p_sys
op	24:27	0:0	4	->
water	24:29	0:0	4	idx
water	24:34	0:0	2	;
water	25:4	0:0	2	p_demux
op	25:11	0:0	2	->
water	25:13	0:0	2	p_sys
op	25:19	0:0	2	=
water	25:21	0:0	2	p_sys
water	25:26	0:0	2	;
call	27:4	27:68	2	stream_Control
arg	27:20	27:30	3	p_demux->s
water	27:20	0:0	4	p_demux
op	27:27	0:0	4	->
water	27:29	0:0	4	s
arg	27:32	27:47	3	STREAM_CAN_SEEK
water	27:32	0:0	4	STREAM_CAN_SEEK
arg	27:49	27:68	3	&p_sys->b_seekable
op	27:49	0:0	4	&
water	27:50	0:0	4	p_sys
op	27:55	0:0	4	->
water	27:57	0:0	4	b_seekable
water	27:69	0:0	2	;
if	29:4	30:48	2	(p_sys -> b_seekable)
cond	29:8	29:15	3	p_sys -> b_seekable
water	29:8	0:0	4	p_sys
op	29:13	0:0	4	->
water	29:15	0:0	4	b_seekable
stmts	30:8	30:48	3	
call	30:8	30:47	4	msg_Dbg
arg	30:17	30:24	5	p_demux
water	30:17	0:0	6	p_demux
arg	30:26	30:47	5	"stream is seekable"
water	30:26	0:0	6	"stream is seekable"
water	30:48	0:0	4	;
else	31:4	32:52	2
stmts	32:8	32:52	3	
call	32:8	32:51	4	msg_Dbg
arg	32:17	32:24	5	p_demux
water	32:17	0:0	6	p_demux
arg	32:26	32:51	5	"stream is NOT seekable"
water	32:26	0:0	6	"stream is NOT seekable"
water	32:52	0:0	4	;
if	34:4	35:18	2	(HeaderLoad (p_demux ,& p_sys -> hdr ))
cond	34:8	34:41	3	HeaderLoad (p_demux ,& p_sys -> hdr )
call	34:8	34:41	4	HeaderLoad
arg	34:20	34:27	5	p_demux
water	34:20	0:0	6	p_demux
arg	34:29	34:41	5	&p_sys->hdr
op	34:29	0:0	6	&
water	34:30	0:0	6	p_sys
op	34:35	0:0	6	->
water	34:37	0:0	6	hdr
stmts	35:8	35:18	3	
goto	35:8	35:18	4	error
water	35:13	0:0	5	error
if	37:4	38:18	2	(FrameHeaderLoad (p_demux ,& fh ) || fh . i_type != 'D')
cond	37:8	37:56	3	FrameHeaderLoad (p_demux ,& fh ) || fh . i_type != 'D'
call	37:8	37:38	4	FrameHeaderLoad
arg	37:25	37:32	5	p_demux
water	37:25	0:0	6	p_demux
arg	37:34	37:38	5	&fh
op	37:34	0:0	6	&
water	37:35	0:0	6	fh
op	37:40	0:0	4	||
water	37:43	0:0	4	fh
op	37:45	0:0	4	.
water	37:46	0:0	4	i_type
op	37:53	0:0	4	!=
water	37:56	0:0	4	'D'
stmts	38:8	38:18	3	
goto	38:8	38:18	4	error
water	38:13	0:0	5	error
if	39:4	56:4	2	(fh . i_length > 0)
cond	39:8	39:22	3	fh . i_length > 0
water	39:8	0:0	4	fh
op	39:10	0:0	4	.
water	39:11	0:0	4	i_length
op	39:20	0:0	4	>
water	39:22	0:0	4	0
stmts	40:4	56:4	3	
water	40:4	0:0	4	{
if	41:8	49:8	4	(fh . i_compression == 'F' || fh . i_compression == 'R')
cond	41:12	41:59	5	fh . i_compression == 'F' || fh . i_compression == 'R'
water	41:12	0:0	6	fh
op	41:14	0:0	6	.
water	41:15	0:0	6	i_compression
op	41:29	0:0	6	==
water	41:32	0:0	6	'F'
op	41:36	0:0	6	||
water	41:39	0:0	6	fh
op	41:41	0:0	6	.
water	41:42	0:0	6	i_compression
op	41:56	0:0	6	==
water	41:59	0:0	6	'R'
stmts	42:8	49:8	5	
water	42:8	0:0	6	{
water	44:12	0:0	6	p_sys
op	44:17	0:0	6	->
water	44:19	0:0	6	i_extra_f
op	44:29	0:0	6	=
water	44:31	0:0	6	fh
op	44:33	0:0	6	.
water	44:34	0:0	6	i_length
water	44:42	0:0	6	;
water	45:12	0:0	6	p_sys
op	45:17	0:0	6	->
water	45:19	0:0	6	p_extra_f
op	45:29	0:0	6	=
call	45:31	45:51	6	malloc
arg	45:39	45:51	7	fh.i_length
water	45:39	0:0	8	fh
op	45:41	0:0	8	.
water	45:42	0:0	8	i_length
water	45:52	0:0	6	;
if	46:12	48:26	6	(p_sys -> p_extra_f == NULL ||stream_Read (p_demux -> s ,p_sys -> p_extra_f ,fh . i_length ) != fh . i_length)
cond	46:16	47:67	7	p_sys -> p_extra_f == NULL ||stream_Read (p_demux -> s ,p_sys -> p_extra_f ,fh . i_length ) != fh . i_length
water	46:16	0:0	8	p_sys
op	46:21	0:0	8	->
water	46:23	0:0	8	p_extra_f
op	46:33	0:0	8	==
water	46:36	0:0	8	NULL
op	46:41	0:0	8	||
call	46:44	47:59	8	stream_Read
arg	46:57	46:67	9	p_demux->s
water	46:57	0:0	10	p_demux
op	46:64	0:0	10	->
water	46:66	0:0	10	s
arg	47:29	47:45	9	p_sys->p_extra_f
water	47:29	0:0	10	p_sys
op	47:34	0:0	10	->
water	47:36	0:0	10	p_extra_f
arg	47:47	47:59	9	fh.i_length
water	47:47	0:0	10	fh
op	47:49	0:0	10	.
water	47:50	0:0	10	i_length
op	47:61	0:0	8	!=
water	47:64	0:0	8	fh
op	47:66	0:0	8	.
water	47:67	0:0	8	i_length
stmts	48:16	48:26	7	
goto	48:16	48:26	8	error
water	48:21	0:0	9	error
water	49:8	0:0	6	}
else	50:8	55:8	4
stmts	51:8	55:8	5	
water	51:8	0:0	6	{
call	52:12	52:80	6	msg_Warn
arg	52:22	52:29	7	p_demux
water	52:22	0:0	8	p_demux
arg	52:31	52:61	7	"unsupported 'D' frame (c=%c)"
water	52:31	0:0	8	"unsupported 'D' frame (c=%c)"
arg	52:63	52:80	7	fh.i_compression
water	52:63	0:0	8	fh
op	52:65	0:0	8	.
water	52:66	0:0	8	i_compression
water	52:81	0:0	6	;
if	53:12	54:26	6	(stream_Read (p_demux -> s ,NULL ,fh . i_length ) != fh . i_length)
cond	53:16	53:67	7	stream_Read (p_demux -> s ,NULL ,fh . i_length ) != fh . i_length
call	53:16	53:59	8	stream_Read
arg	53:29	53:39	9	p_demux->s
water	53:29	0:0	10	p_demux
op	53:36	0:0	10	->
water	53:38	0:0	10	s
arg	53:41	53:45	9	NULL
water	53:41	0:0	10	NULL
arg	53:47	53:59	9	fh.i_length
water	53:47	0:0	10	fh
op	53:49	0:0	10	.
water	53:50	0:0	10	i_length
op	53:61	0:0	8	!=
water	53:64	0:0	8	fh
op	53:66	0:0	8	.
water	53:67	0:0	8	i_length
stmts	54:16	54:26	7	
goto	54:16	54:26	8	error
water	54:21	0:0	9	error
water	55:8	0:0	6	}
water	56:4	0:0	4	}
if	58:4	59:18	2	(stream_Peek (p_demux -> s ,& p_peek ,1 ) != 1)
cond	58:8	58:49	3	stream_Peek (p_demux -> s ,& p_peek ,1 ) != 1
call	58:8	58:44	4	stream_Peek
arg	58:21	58:31	5	p_demux->s
water	58:21	0:0	6	p_demux
op	58:28	0:0	6	->
water	58:30	0:0	6	s
arg	58:33	58:40	5	&p_peek
op	58:33	0:0	6	&
water	58:34	0:0	6	p_peek
arg	58:42	58:44	5	1
water	58:42	0:0	6	1
op	58:46	0:0	4	!=
water	58:49	0:0	4	1
stmts	59:8	59:18	3	
goto	59:8	59:18	4	error
water	59:13	0:0	5	error
if	60:4	75:4	2	(p_peek [ 0 ] == 'X')
cond	60:8	60:21	3	p_peek [ 0 ] == 'X'
water	60:8	0:0	4	p_peek
op	60:14	0:0	4	[
water	60:15	0:0	4	0
op	60:16	0:0	4	]
op	60:18	0:0	4	==
water	60:21	0:0	4	'X'
stmts	61:4	75:4	3	
water	61:4	0:0	4	{
if	62:8	63:22	4	(FrameHeaderLoad (p_demux ,& fh ))
cond	62:12	62:42	5	FrameHeaderLoad (p_demux ,& fh )
call	62:12	62:42	6	FrameHeaderLoad
arg	62:29	62:36	7	p_demux
water	62:29	0:0	8	p_demux
arg	62:38	62:42	7	&fh
op	62:38	0:0	8	&
water	62:39	0:0	8	fh
stmts	63:12	63:22	5	
goto	63:12	63:22	6	error
water	63:17	0:0	7	error
if	64:8	65:22	4	(fh . i_length != 512)
cond	64:12	64:27	5	fh . i_length != 512
water	64:12	0:0	6	fh
op	64:14	0:0	6	.
water	64:15	0:0	6	i_length
op	64:24	0:0	6	!=
water	64:27	0:0	6	512
stmts	65:12	65:22	5	
goto	65:12	65:22	6	error
water	65:17	0:0	7	error
if	66:8	67:22	4	(ExtendedHeaderLoad (p_demux ,& p_sys -> exh ))
cond	66:12	66:53	5	ExtendedHeaderLoad (p_demux ,& p_sys -> exh )
call	66:12	66:53	6	ExtendedHeaderLoad
arg	66:32	66:39	7	p_demux
water	66:32	0:0	8	p_demux
arg	66:41	66:53	7	&p_sys->exh
op	66:41	0:0	8	&
water	66:42	0:0	8	p_sys
op	66:47	0:0	8	->
water	66:49	0:0	8	exh
stmts	67:12	67:22	5	
goto	67:12	67:22	6	error
water	67:17	0:0	7	error
if	68:8	69:77	4	(! p_sys -> b_seekable)
cond	68:12	68:20	5	! p_sys -> b_seekable
op	68:12	0:0	6	!
water	68:13	0:0	6	p_sys
op	68:18	0:0	6	->
water	68:20	0:0	6	b_seekable
stmts	69:12	69:77	5	
call	69:12	69:76	6	msg_Warn
arg	69:22	69:29	7	p_demux
water	69:22	0:0	8	p_demux
arg	69:31	69:76	7	"stream is not seekable, skipping seektable"
water	69:31	0:0	8	"stream is not seekable, skipping seektable"
water	69:77	0:0	6	;
else	70:8	74:8	4
stmts	70:13	74:8	5	
if	70:13	74:8	6	(SeekTableLoad (p_demux ,p_sys ))
cond	70:17	70:47	7	SeekTableLoad (p_demux ,p_sys )
call	70:17	70:47	8	SeekTableLoad
arg	70:32	70:39	9	p_demux
water	70:32	0:0	10	p_demux
arg	70:41	70:47	9	p_sys
water	70:41	0:0	10	p_sys
stmts	71:8	74:8	7	
water	71:8	0:0	8	{
water	72:12	0:0	8	p_sys
op	72:17	0:0	8	->
water	72:19	0:0	8	b_index
op	72:27	0:0	8	=
water	72:29	0:0	8	false
water	72:34	0:0	8	;
call	73:12	73:77	8	msg_Warn
arg	73:22	73:29	9	p_demux
water	73:22	0:0	10	p_demux
arg	73:31	73:77	9	"Seektable is broken, seek won't be accurate"
water	73:31	0:0	10	"Seektable is broken, seek won't be accurate"
water	73:78	0:0	8	;
water	74:8	0:0	8	}
water	75:4	0:0	4	}
else	76:4	82:4	2
stmts	77:4	82:4	3	
water	77:4	0:0	4	{
call	80:8	80:100	4	msg_Err
arg	80:17	80:24	5	p_demux
water	80:17	0:0	6	p_demux
arg	80:26	80:100	5	"VLC doesn't support NUV without extended chunks (please upload samples)"
water	80:26	0:0	6	"VLC doesn't support NUV without extended chunks (please upload samples)"
water	80:101	0:0	4	;
goto	81:8	81:18	4	error
water	81:13	0:0	5	error
water	82:4	0:0	4	}
if	84:4	95:4	2	(p_sys -> hdr . i_video_blocks != 0)
cond	84:8	84:37	3	p_sys -> hdr . i_video_blocks != 0
water	84:8	0:0	4	p_sys
op	84:13	0:0	4	->
water	84:15	0:0	4	hdr
op	84:18	0:0	4	.
water	84:19	0:0	4	i_video_blocks
op	84:34	0:0	4	!=
water	84:37	0:0	4	0
stmts	85:4	95:4	3	
water	85:4	0:0	4	{
decl	86:8	86:23	4	es_format_t	fmt
call	87:8	87:63	4	es_format_Init
arg	87:24	87:28	5	&fmt
op	87:24	0:0	6	&
water	87:25	0:0	6	fmt
arg	87:30	87:38	5	VIDEO_ES
water	87:30	0:0	6	VIDEO_ES
arg	87:40	87:63	5	p_sys->exh.i_video_fcc
water	87:40	0:0	6	p_sys
op	87:45	0:0	6	->
water	87:47	0:0	6	exh
op	87:50	0:0	6	.
water	87:51	0:0	6	i_video_fcc
water	87:64	0:0	4	;
water	88:8	0:0	4	fmt
op	88:11	0:0	4	.
water	88:12	0:0	4	video
op	88:17	0:0	4	.
water	88:18	0:0	4	i_width
op	88:26	0:0	4	=
water	88:28	0:0	4	p_sys
op	88:33	0:0	4	->
water	88:35	0:0	4	hdr
op	88:38	0:0	4	.
water	88:39	0:0	4	i_width
water	88:46	0:0	4	;
water	89:8	0:0	4	fmt
op	89:11	0:0	4	.
water	89:12	0:0	4	video
op	89:17	0:0	4	.
water	89:18	0:0	4	i_height
op	89:27	0:0	4	=
water	89:29	0:0	4	p_sys
op	89:34	0:0	4	->
water	89:36	0:0	4	hdr
op	89:39	0:0	4	.
water	89:40	0:0	4	i_height
water	89:48	0:0	4	;
water	90:8	0:0	4	fmt
op	90:11	0:0	4	.
water	90:12	0:0	4	i_extra
op	90:20	0:0	4	=
water	90:22	0:0	4	p_sys
op	90:27	0:0	4	->
water	90:29	0:0	4	i_extra_f
water	90:38	0:0	4	;
water	91:8	0:0	4	fmt
op	91:11	0:0	4	.
water	91:12	0:0	4	p_extra
op	91:20	0:0	4	=
water	91:22	0:0	4	p_sys
op	91:27	0:0	4	->
water	91:29	0:0	4	p_extra_f
water	91:38	0:0	4	;
water	92:8	0:0	4	fmt
op	92:11	0:0	4	.
water	92:12	0:0	4	video
op	92:17	0:0	4	.
water	92:18	0:0	4	i_sar_num
op	92:28	0:0	4	=
water	92:30	0:0	4	p_sys
op	92:35	0:0	4	->
water	92:37	0:0	4	hdr
op	92:40	0:0	4	.
water	92:41	0:0	4	d_aspect
op	92:50	0:0	4	*
water	92:52	0:0	4	fmt
op	92:55	0:0	4	.
water	92:56	0:0	4	video
op	92:61	0:0	4	.
water	92:62	0:0	4	i_height
water	92:70	0:0	4	;
water	93:8	0:0	4	fmt
op	93:11	0:0	4	.
water	93:12	0:0	4	video
op	93:17	0:0	4	.
water	93:18	0:0	4	i_sar_den
op	93:28	0:0	4	=
water	93:30	0:0	4	fmt
op	93:33	0:0	4	.
water	93:34	0:0	4	video
op	93:39	0:0	4	.
water	93:40	0:0	4	i_width
water	93:47	0:0	4	;
water	94:8	0:0	4	p_sys
op	94:13	0:0	4	->
water	94:15	0:0	4	p_es_video
op	94:26	0:0	4	=
call	94:28	94:59	4	es_out_Add
arg	94:40	94:52	5	p_demux->out
water	94:40	0:0	6	p_demux
op	94:47	0:0	6	->
water	94:49	0:0	6	out
arg	94:54	94:59	5	&fmt
op	94:54	0:0	6	&
water	94:55	0:0	6	fmt
water	94:60	0:0	4	;
water	95:4	0:0	4	}
if	96:4	103:4	2	(p_sys -> hdr . i_audio_blocks != 0)
cond	96:8	96:37	3	p_sys -> hdr . i_audio_blocks != 0
water	96:8	0:0	4	p_sys
op	96:13	0:0	4	->
water	96:15	0:0	4	hdr
op	96:18	0:0	4	.
water	96:19	0:0	4	i_audio_blocks
op	96:34	0:0	4	!=
water	96:37	0:0	4	0
stmts	97:4	103:4	3	
water	97:4	0:0	4	{
decl	98:8	98:23	4	es_format_t	fmt
call	99:8	99:55	4	es_format_Init
arg	99:24	99:28	5	&fmt
op	99:24	0:0	6	&
water	99:25	0:0	6	fmt
arg	99:30	99:38	5	AUDIO_ES
water	99:30	0:0	6	AUDIO_ES
arg	99:40	99:55	5	VLC_CODEC_MPGA
water	99:40	0:0	6	VLC_CODEC_MPGA
water	99:56	0:0	4	;
water	100:8	0:0	4	fmt
op	100:11	0:0	4	.
water	100:12	0:0	4	audio
op	100:17	0:0	4	.
water	100:18	0:0	4	i_rate
op	100:25	0:0	4	=
water	100:27	0:0	4	p_sys
op	100:32	0:0	4	->
water	100:34	0:0	4	exh
op	100:37	0:0	4	.
water	100:38	0:0	4	i_audio_sample_rate
water	100:57	0:0	4	;
water	101:8	0:0	4	fmt
op	101:11	0:0	4	.
water	101:12	0:0	4	audio
op	101:17	0:0	4	.
water	101:18	0:0	4	i_bitspersample
op	101:34	0:0	4	=
water	101:36	0:0	4	p_sys
op	101:41	0:0	4	->
water	101:43	0:0	4	exh
op	101:46	0:0	4	.
water	101:47	0:0	4	i_audio_bits_per_sample
water	101:70	0:0	4	;
water	102:8	0:0	4	p_sys
op	102:13	0:0	4	->
water	102:15	0:0	4	p_es_audio
op	102:26	0:0	4	=
call	102:28	102:59	4	es_out_Add
arg	102:40	102:52	5	p_demux->out
water	102:40	0:0	6	p_demux
op	102:47	0:0	6	->
water	102:49	0:0	6	out
arg	102:54	102:59	5	&fmt
op	102:54	0:0	6	&
water	102:55	0:0	6	fmt
water	102:60	0:0	4	;
water	103:4	0:0	4	}
if	104:4	107:4	2	(p_sys -> hdr . i_text_blocks != 0)
cond	104:8	104:36	3	p_sys -> hdr . i_text_blocks != 0
water	104:8	0:0	4	p_sys
op	104:13	0:0	4	->
water	104:15	0:0	4	hdr
op	104:18	0:0	4	.
water	104:19	0:0	4	i_text_blocks
op	104:33	0:0	4	!=
water	104:36	0:0	4	0
stmts	105:4	107:4	3	
water	105:4	0:0	4	{
call	106:8	106:69	4	msg_Warn
arg	106:18	106:25	5	p_demux
water	106:18	0:0	6	p_demux
arg	106:27	106:69	5	"text not yet supported (upload samples)"
water	106:27	0:0	6	"text not yet supported (upload samples)"
water	106:70	0:0	4	;
water	107:4	0:0	4	}
water	108:4	0:0	2	p_sys
op	108:9	0:0	2	->
water	108:11	0:0	2	i_first_frame_offset
op	108:32	0:0	2	=
call	108:34	108:58	2	stream_Tell
arg	108:47	108:58	3	p_demux->s
water	108:47	0:0	4	p_demux
op	108:54	0:0	4	->
water	108:56	0:0	4	s
water	108:59	0:0	2	;
water	110:4	0:0	2	p_demux
op	110:11	0:0	2	->
water	110:13	0:0	2	pf_demux
op	110:22	0:0	2	=
water	110:24	0:0	2	Demux
water	110:29	0:0	2	;
water	111:4	0:0	2	p_demux
op	111:11	0:0	2	->
water	111:13	0:0	2	pf_control
op	111:24	0:0	2	=
water	111:26	0:0	2	Control
water	111:33	0:0	2	;
return	112:4	112:22	2	VLC_SUCCESS
water	112:11	0:0	3	VLC_SUCCESS
label	113:0	113:5	2	error :
call	114:4	114:46	2	msg_Warn
arg	114:14	114:21	3	p_demux
water	114:14	0:0	4	p_demux
arg	114:23	114:46	3	"cannot load Nuv file"
water	114:23	0:0	4	"cannot load Nuv file"
water	114:47	0:0	2	;
water	115:4	0:0	2	p_demux
op	115:11	0:0	2	->
water	115:13	0:0	2	p_sys
op	115:19	0:0	2	=
water	115:21	0:0	2	NULL
water	115:25	0:0	2	;
call	116:4	116:16	2	free
arg	116:10	116:16	3	p_sys
water	116:10	0:0	4	p_sys
water	116:17	0:0	2	;
return	117:4	117:23	2	VLC_EGENERIC
water	117:11	0:0	3	VLC_EGENERIC

func	1:0	41:0	0	void	vcdplayer_play
params	2:14	0:0	1	
param	2:15	2:33	2	access_t *	p_access
param	2:35	2:58	2	vcdinfo_itemid_t	itemid
stmnts	0:0	40:2	1	
decl	4:2	4:59	2	vcdplayer_t	*p_vcdplayer
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	vcdplayer_t
op	4:42	0:0	2	*
water	4:43	0:0	2	)
water	4:44	0:0	2	p_access
op	4:52	0:0	2	->
water	4:54	0:0	2	p_sys
call	5:2	6:35	2	dbg_print
arg	5:12	5:26	3	INPUT_DBG_CALL
water	5:12	0:0	4	INPUT_DBG_CALL
arg	5:28	5:67	3	"called itemid.num: %d itemid.type: %d"
water	5:28	0:0	4	"called itemid.num: %d itemid.type: %d"
arg	6:12	6:22	3	itemid.num
water	6:12	0:0	4	itemid
op	6:18	0:0	4	.
water	6:19	0:0	4	num
arg	6:24	6:35	3	itemid.type
water	6:24	0:0	4	itemid
op	6:30	0:0	4	.
water	6:31	0:0	4	type
water	6:36	0:0	2	;
if	7:2	9:2	2	(!vcdplayer_pbc_is_on (p_vcdplayer ))
cond	7:7	7:39	3	!vcdplayer_pbc_is_on (p_vcdplayer )
op	7:7	0:0	4	!
call	7:8	7:39	4	vcdplayer_pbc_is_on
arg	7:28	7:39	5	p_vcdplayer
water	7:28	0:0	6	p_vcdplayer
stmts	7:42	9:2	3	
water	7:42	0:0	4	{
call	8:4	8:47	4	vcdplayer_play_single_item
arg	8:31	8:39	5	p_access
water	8:31	0:0	6	p_access
arg	8:41	8:47	5	itemid
water	8:41	0:0	6	itemid
water	8:48	0:0	4	;
water	9:2	0:0	4	}
else	9:4	40:2	2
stmts	9:9	40:2	3	
water	9:9	0:0	4	{
decl	11:4	11:47	4	vcdinfo_obj_t	*p_vcdinfo
op	11:29	0:0	4	=
water	11:31	0:0	4	p_vcdplayer
op	11:42	0:0	4	->
water	11:44	0:0	4	vcd
if	12:4	13:12	4	(p_vcdinfo == NULL)
cond	12:8	12:21	5	p_vcdinfo == NULL
water	12:8	0:0	6	p_vcdinfo
op	12:18	0:0	6	==
water	12:21	0:0	6	NULL
stmts	13:6	13:12	5	
return	13:6	13:12	6	
water	14:4	0:0	4	p_vcdplayer
op	14:15	0:0	4	->
water	14:17	0:0	4	i_lid
op	14:23	0:0	4	=
water	14:25	0:0	4	itemid
op	14:31	0:0	4	.
water	14:32	0:0	4	num
water	14:35	0:0	4	;
call	15:4	15:66	4	vcdinfo_lid_get_pxd
arg	15:24	15:33	5	p_vcdinfo
water	15:24	0:0	6	p_vcdinfo
arg	15:35	15:54	5	&(p_vcdplayer->pxd)
op	15:35	0:0	6	&
water	15:36	0:0	6	(
water	15:37	0:0	6	p_vcdplayer
op	15:48	0:0	6	->
water	15:50	0:0	6	pxd
water	15:53	0:0	6	)
arg	15:56	15:66	5	itemid.num
water	15:56	0:0	6	itemid
op	15:62	0:0	6	.
water	15:63	0:0	6	num
water	15:67	0:0	4	;
switch	16:4	39:4	4	(p_vcdplayer -> pxd . descriptor_type)
cond	16:12	16:29	5	p_vcdplayer -> pxd . descriptor_type
water	16:12	0:0	6	p_vcdplayer
op	16:23	0:0	6	->
water	16:25	0:0	6	pxd
op	16:28	0:0	6	.
water	16:29	0:0	6	descriptor_type
stmts	16:46	39:4	5	
water	16:46	0:0	6	{
label	17:4	17:32	6	case PSD_TYPE_SELECTION_LIST :
label	18:4	18:36	6	case PSD_TYPE_EXT_SELECTION_LIST :
water	18:38	0:0	6	{
decl	19:6	19:35	6	vcdinfo_itemid_t	trans_itemid
decl	20:6	20:31	6	uint16_t	trans_itemid_num
if	21:6	21:46	6	(p_vcdplayer -> pxd . psd == NULL)
cond	21:10	21:34	7	p_vcdplayer -> pxd . psd == NULL
water	21:10	0:0	8	p_vcdplayer
op	21:21	0:0	8	->
water	21:23	0:0	8	pxd
op	21:26	0:0	8	.
water	21:27	0:0	8	psd
op	21:31	0:0	8	==
water	21:34	0:0	8	NULL
stmts	21:40	21:46	7	
return	21:40	21:46	8	
water	22:6	0:0	6	trans_itemid_num
op	22:24	0:0	6	=
call	22:26	22:68	6	vcdinf_psd_get_itemid
arg	22:48	22:68	7	p_vcdplayer->pxd.psd
water	22:48	0:0	8	p_vcdplayer
op	22:59	0:0	8	->
water	22:61	0:0	8	pxd
op	22:64	0:0	8	.
water	22:65	0:0	8	psd
water	22:69	0:0	6	;
call	23:6	23:61	6	vcdinfo_classify_itemid
arg	23:30	23:46	7	trans_itemid_num
water	23:30	0:0	8	trans_itemid_num
arg	23:48	23:61	7	&trans_itemid
op	23:48	0:0	8	&
water	23:49	0:0	8	trans_itemid
water	23:62	0:0	6	;
water	24:6	0:0	6	p_vcdplayer
op	24:17	0:0	6	->
water	24:19	0:0	6	i_loop
op	24:30	0:0	6	=
water	24:32	0:0	6	1
water	24:33	0:0	6	;
water	25:6	0:0	6	p_vcdplayer
op	25:17	0:0	6	->
water	25:19	0:0	6	loop_item
op	25:30	0:0	6	=
water	25:32	0:0	6	trans_itemid
water	25:44	0:0	6	;
call	26:6	26:55	6	vcdplayer_play_single_item
arg	26:33	26:41	7	p_access
water	26:33	0:0	8	p_access
arg	26:43	26:55	7	trans_itemid
water	26:43	0:0	8	trans_itemid
water	26:56	0:0	6	;
break	27:6	27:11	6	
water	28:4	0:0	6	}
label	29:4	29:27	6	case PSD_TYPE_PLAY_LIST :
water	29:29	0:0	6	{
if	30:6	30:46	6	(p_vcdplayer -> pxd . pld == NULL)
cond	30:10	30:34	7	p_vcdplayer -> pxd . pld == NULL
water	30:10	0:0	8	p_vcdplayer
op	30:21	0:0	8	->
water	30:23	0:0	8	pxd
op	30:26	0:0	8	.
water	30:27	0:0	8	pld
op	30:31	0:0	8	==
water	30:34	0:0	8	NULL
stmts	30:40	30:46	7	
return	30:40	30:46	8	
water	31:6	0:0	6	p_vcdplayer
op	31:17	0:0	6	->
water	31:19	0:0	6	pdi
op	31:23	0:0	6	=
op	31:25	0:0	6	-
water	31:26	0:0	6	1
water	31:27	0:0	6	;
call	32:6	32:38	6	vcdplayer_inc_play_item
arg	32:30	32:38	7	p_access
water	32:30	0:0	8	p_access
water	32:39	0:0	6	;
break	33:6	33:11	6	
water	34:4	0:0	6	}
label	35:4	35:26	6	case PSD_TYPE_END_LIST :
label	36:4	36:30	6	case PSD_TYPE_COMMAND_LIST :
label	37:4	37:11	6	default :
water	38:6	0:0	6	;
water	39:4	0:0	6	}
water	40:2	0:0	4	}

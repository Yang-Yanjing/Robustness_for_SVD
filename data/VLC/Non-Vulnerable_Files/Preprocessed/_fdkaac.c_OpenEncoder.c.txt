func	2:0	67:4	0	static int	OpenEncoder
params	2:22	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
stmnts	0:0	66:8	1	
decl	4:4	4:42	2	encoder_t	*p_enc
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	encoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
call	5:4	5:75	2	config_ChainParse
arg	5:22	5:27	3	p_enc
water	5:22	0:0	4	p_enc
arg	5:29	5:43	3	ENC_CFG_PREFIX
water	5:29	0:0	4	ENC_CFG_PREFIX
arg	5:45	5:61	3	ppsz_enc_options
water	5:45	0:0	4	ppsz_enc_options
arg	5:63	5:75	3	p_enc->p_cfg
water	5:63	0:0	4	p_enc
op	5:68	0:0	4	->
water	5:70	0:0	4	p_cfg
water	5:76	0:0	2	;
decl	6:4	6:13	2	int	i_aot
switch	7:4	22:4	2	(p_enc -> fmt_out . i_codec)
cond	7:12	7:27	3	p_enc -> fmt_out . i_codec
water	7:12	0:0	4	p_enc
op	7:17	0:0	4	->
water	7:19	0:0	4	fmt_out
op	7:26	0:0	4	.
water	7:27	0:0	4	i_codec
stmts	7:36	22:4	3	
water	7:36	0:0	4	{
label	8:4	8:23	4	case VLC_CODEC_MP4A :
water	9:8	0:0	4	i_aot
op	9:14	0:0	4	=
call	9:16	9:66	4	var_InheritInteger
arg	9:35	9:40	5	p_enc
water	9:35	0:0	6	p_enc
arg	9:42	9:66	5	ENC_CFG_PREFIX"profile"
water	9:42	0:0	6	ENC_CFG_PREFIX
water	9:57	0:0	6	"profile"
water	9:67	0:0	4	;
break	10:8	10:13	4	
water	11:4	0:0	4	case
call	11:9	11:38	4	VLC_FOURCC
arg	11:20	11:23	5	'l'
water	11:20	0:0	6	'l'
arg	11:25	11:28	5	'a'
water	11:25	0:0	6	'a'
arg	11:30	11:33	5	'a'
water	11:30	0:0	6	'a'
arg	11:35	11:38	5	'c'
water	11:35	0:0	6	'c'
water	11:39	0:0	4	:
water	12:8	0:0	4	i_aot
op	12:14	0:0	4	=
water	12:16	0:0	4	PROFILE_AAC_LC
water	12:30	0:0	4	;
break	13:8	13:13	4	
water	14:4	0:0	4	case
call	14:9	14:38	4	VLC_FOURCC
arg	14:20	14:23	5	'h'
water	14:20	0:0	6	'h'
arg	14:25	14:28	5	'a'
water	14:25	0:0	6	'a'
arg	14:30	14:33	5	'a'
water	14:30	0:0	6	'a'
arg	14:35	14:38	5	'c'
water	14:35	0:0	6	'c'
water	14:39	0:0	4	:
water	15:8	0:0	4	i_aot
op	15:14	0:0	4	=
water	15:16	0:0	4	PROFILE_AAC_HE
water	15:30	0:0	4	;
break	16:8	16:13	4	
water	17:4	0:0	4	case
call	17:9	17:38	4	VLC_FOURCC
arg	17:20	17:23	5	's'
water	17:20	0:0	6	's'
arg	17:25	17:28	5	'a'
water	17:25	0:0	6	'a'
arg	17:30	17:33	5	'a'
water	17:30	0:0	6	'a'
arg	17:35	17:38	5	'c'
water	17:35	0:0	6	'c'
water	17:39	0:0	4	:
water	18:8	0:0	4	i_aot
op	18:14	0:0	4	=
water	18:16	0:0	4	PROFILE_AAC_HE_v2
water	18:33	0:0	4	;
break	19:8	19:13	4	
label	20:4	20:11	4	default :
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
if	23:4	27:8	2	(p_enc -> fmt_in . audio . i_channels != 2)
cond	23:8	23:42	3	p_enc -> fmt_in . audio . i_channels != 2
water	23:8	0:0	4	p_enc
op	23:13	0:0	4	->
water	23:15	0:0	4	fmt_in
op	23:21	0:0	4	.
water	23:22	0:0	4	audio
op	23:27	0:0	4	.
water	23:28	0:0	4	i_channels
op	23:39	0:0	4	!=
water	23:42	0:0	4	2
stmts	24:8	27:8	3	
if	24:8	27:8	4	(i_aot == PROFILE_AAC_HE_v2 || i_aot == PROFILE_AAC_ELD)
cond	24:12	24:51	5	i_aot == PROFILE_AAC_HE_v2 || i_aot == PROFILE_AAC_ELD
water	24:12	0:0	6	i_aot
op	24:18	0:0	6	==
water	24:21	0:0	6	PROFILE_AAC_HE_v2
op	24:39	0:0	6	||
water	24:42	0:0	6	i_aot
op	24:48	0:0	6	==
water	24:51	0:0	6	PROFILE_AAC_ELD
stmts	24:68	27:8	5	
water	24:68	0:0	6	{
call	25:12	25:84	6	msg_Err
arg	25:20	25:25	7	p_enc
water	25:20	0:0	8	p_enc
arg	25:27	25:77	7	"Selected profile %d can only be used with stereo"
water	25:27	0:0	8	"Selected profile %d can only be used with stereo"
arg	25:79	25:84	7	i_aot
water	25:79	0:0	8	i_aot
water	25:85	0:0	6	;
return	26:12	26:31	6	VLC_EGENERIC
water	26:19	0:0	7	VLC_EGENERIC
water	27:8	0:0	6	}
decl	28:4	28:27	2	uint16_t	channel_config
decl	29:4	29:21	2	CHANNEL_MODE	mode
switch	30:4	42:4	2	(p_enc -> fmt_in . audio . i_channels)
cond	30:12	30:32	3	p_enc -> fmt_in . audio . i_channels
water	30:12	0:0	4	p_enc
op	30:17	0:0	4	->
water	30:19	0:0	4	fmt_in
op	30:25	0:0	4	.
water	30:26	0:0	4	audio
op	30:31	0:0	4	.
water	30:32	0:0	4	i_channels
stmts	30:44	42:4	3	
water	30:44	0:0	4	{
label	31:4	31:10	4	case 1 :
water	31:12	0:0	4	mode
op	31:17	0:0	4	=
water	31:19	0:0	4	MODE_1
water	31:25	0:0	4	;
water	31:27	0:0	4	channel_config
op	31:42	0:0	4	=
water	31:44	0:0	4	AOUT_CHAN_CENTER
water	31:60	0:0	4	;
break	31:62	31:67	4	
label	32:4	32:10	4	case 2 :
water	32:12	0:0	4	mode
op	32:17	0:0	4	=
water	32:19	0:0	4	MODE_2
water	32:25	0:0	4	;
water	32:27	0:0	4	channel_config
op	32:42	0:0	4	=
water	32:44	0:0	4	AOUT_CHANS_STEREO
water	32:61	0:0	4	;
break	32:63	32:68	4	
label	33:4	33:10	4	case 3 :
water	33:12	0:0	4	mode
op	33:17	0:0	4	=
water	33:19	0:0	4	MODE_1_2
water	33:27	0:0	4	;
water	33:29	0:0	4	channel_config
op	33:44	0:0	4	=
water	33:46	0:0	4	AOUT_CHANS_3_0
water	33:60	0:0	4	;
break	33:62	33:67	4	
label	34:4	34:10	4	case 4 :
water	34:12	0:0	4	mode
op	34:17	0:0	4	=
water	34:19	0:0	4	MODE_1_2_1
water	34:29	0:0	4	;
water	34:31	0:0	4	channel_config
op	34:46	0:0	4	=
water	34:48	0:0	4	AOUT_CHANS_4_CENTER_REAR
water	34:72	0:0	4	;
break	34:74	34:79	4	
label	35:4	35:10	4	case 5 :
water	35:12	0:0	4	mode
op	35:17	0:0	4	=
water	35:19	0:0	4	MODE_1_2_2
water	35:29	0:0	4	;
water	35:31	0:0	4	channel_config
op	35:46	0:0	4	=
water	35:48	0:0	4	AOUT_CHANS_5_0
water	35:62	0:0	4	;
break	35:64	35:69	4	
label	36:4	36:10	4	case 6 :
water	36:12	0:0	4	mode
op	36:17	0:0	4	=
water	36:19	0:0	4	MODE_1_2_2_1
water	36:31	0:0	4	;
water	36:33	0:0	4	channel_config
op	36:48	0:0	4	=
water	36:50	0:0	4	AOUT_CHANS_5_1
water	36:64	0:0	4	;
break	36:66	36:71	4	
label	37:4	37:10	4	case 8 :
water	37:12	0:0	4	mode
op	37:17	0:0	4	=
water	37:19	0:0	4	MODE_1_2_2_2_1
water	37:33	0:0	4	;
water	37:35	0:0	4	channel_config
op	37:50	0:0	4	=
water	37:52	0:0	4	AOUT_CHANS_7_1
water	37:66	0:0	4	;
break	37:68	37:73	4	
label	38:4	38:11	4	default :
call	39:8	40:54	4	msg_Err
arg	39:16	39:21	5	p_enc
water	39:16	0:0	6	p_enc
arg	39:23	39:80	5	"we do not support > 8 input channels, this input has %i"
water	39:23	0:0	6	"we do not support > 8 input channels, this input has %i"
arg	40:24	40:54	5	p_enc->fmt_in.audio.i_channels
water	40:24	0:0	6	p_enc
op	40:29	0:0	6	->
water	40:31	0:0	6	fmt_in
op	40:37	0:0	6	.
water	40:38	0:0	6	audio
op	40:43	0:0	6	.
water	40:44	0:0	6	i_channels
water	40:55	0:0	4	;
return	41:8	41:27	4	VLC_EGENERIC
water	41:15	0:0	5	VLC_EGENERIC
water	42:4	0:0	4	}
water	43:4	0:0	2	p_enc
op	43:9	0:0	2	->
water	43:11	0:0	2	fmt_in
op	43:17	0:0	2	.
water	43:18	0:0	2	audio
op	43:23	0:0	2	.
water	43:24	0:0	2	i_physical_channels
op	43:44	0:0	2	=
water	43:46	0:0	2	channel_config
water	43:60	0:0	2	;
call	44:4	44:91	2	msg_Info
arg	44:13	44:18	3	p_enc
water	44:13	0:0	4	p_enc
arg	44:20	44:59	3	"Initializing AAC Encoder, %i channels"
water	44:20	0:0	4	"Initializing AAC Encoder, %i channels"
arg	44:61	44:91	3	p_enc->fmt_in.audio.i_channels
water	44:61	0:0	4	p_enc
op	44:66	0:0	4	->
water	44:68	0:0	4	fmt_in
op	44:74	0:0	4	.
water	44:75	0:0	4	audio
op	44:80	0:0	4	.
water	44:81	0:0	4	i_channels
water	44:92	0:0	2	;
decl	46:4	46:73	2	encoder_sys_t	*p_sys
op	46:25	0:0	2	=
water	46:27	0:0	2	(
water	46:28	0:0	2	encoder_sys_t
op	46:42	0:0	2	*
water	46:43	0:0	2	)
call	46:44	46:72	3	malloc
arg	46:51	46:72	4	sizeof(encoder_sys_t)
op	46:51	0:0	5	sizeof
water	46:57	0:0	5	(
water	46:58	0:0	5	encoder_sys_t
water	46:71	0:0	5	)
if	47:4	48:25	2	(unlikely (! p_sys ))
cond	47:8	47:23	3	unlikely (! p_sys )
call	47:8	47:23	4	unlikely
arg	47:17	47:23	5	!p_sys
op	47:17	0:0	6	!
water	47:18	0:0	6	p_sys
stmts	48:8	48:25	3	
return	48:8	48:25	4	VLC_ENOMEM
water	48:15	0:0	5	VLC_ENOMEM
water	49:4	0:0	2	p_enc
op	49:9	0:0	2	->
water	49:11	0:0	2	p_sys
op	49:17	0:0	2	=
water	49:19	0:0	2	p_sys
water	49:24	0:0	2	;
water	50:4	0:0	2	p_enc
op	50:9	0:0	2	->
water	50:11	0:0	2	fmt_in
op	50:17	0:0	2	.
water	50:18	0:0	2	i_codec
op	50:26	0:0	2	=
water	50:28	0:0	2	VLC_CODEC_S16N
water	50:42	0:0	2	;
water	51:4	0:0	2	p_enc
op	51:9	0:0	2	->
water	51:11	0:0	2	fmt_out
op	51:18	0:0	2	.
water	51:19	0:0	2	i_cat
op	51:25	0:0	2	=
water	51:27	0:0	2	AUDIO_ES
water	51:35	0:0	2	;
water	52:4	0:0	2	p_enc
op	52:9	0:0	2	->
water	52:11	0:0	2	fmt_out
op	52:18	0:0	2	.
water	52:19	0:0	2	i_codec
op	52:27	0:0	2	=
water	52:29	0:0	2	VLC_CODEC_MP4A
water	52:43	0:0	2	;
water	53:4	0:0	2	p_sys
op	53:9	0:0	2	->
water	53:11	0:0	2	i_pts_last
op	53:22	0:0	2	=
water	53:24	0:0	2	0
water	53:25	0:0	2	;
decl	54:4	54:23	2	AACENC_ERROR	erraac
water	55:4	0:0	2	erraac
op	55:11	0:0	2	=
call	55:13	55:73	2	aacEncOpen
arg	55:24	55:38	3	&p_sys->handle
op	55:24	0:0	4	&
water	55:25	0:0	4	p_sys
op	55:30	0:0	4	->
water	55:32	0:0	4	handle
arg	55:40	55:41	3	0
water	55:40	0:0	4	0
arg	55:43	55:73	3	p_enc->fmt_in.audio.i_channels
water	55:43	0:0	4	p_enc
op	55:48	0:0	4	->
water	55:50	0:0	4	fmt_in
op	55:56	0:0	4	.
water	55:57	0:0	4	audio
op	55:62	0:0	4	.
water	55:63	0:0	4	i_channels
water	55:74	0:0	2	;
if	56:4	60:4	2	(erraac != AACENC_OK)
cond	56:8	56:18	3	erraac != AACENC_OK
water	56:8	0:0	4	erraac
op	56:15	0:0	4	!=
water	56:18	0:0	4	AACENC_OK
stmts	56:29	60:4	3	
water	56:29	0:0	4	{
call	57:8	57:73	4	msg_Err
arg	57:16	57:21	5	p_enc
water	57:16	0:0	6	p_enc
arg	57:23	57:51	5	"Unable to open encoder: %s"
water	57:23	0:0	6	"Unable to open encoder: %s"
arg	57:53	57:73	5	fdkaac_error(erraac)
call	57:53	57:72	6	fdkaac_error
arg	57:66	57:72	7	erraac
water	57:66	0:0	8	erraac
water	57:74	0:0	4	;
call	58:8	58:18	4	free
arg	58:13	58:18	5	p_sys
water	58:13	0:0	6	p_sys
water	58:19	0:0	4	;
return	59:8	59:27	4	VLC_EGENERIC
water	59:15	0:0	5	VLC_EGENERIC
water	60:4	0:0	4	}
water	62:8	0:0	2	AACENC_ERROR
water	62:21	0:0	2	err
op	62:25	0:0	2	=
water	62:27	0:0	2	aacEncoder_SetParam
water	62:46	0:0	2	(
water	62:47	0:0	2	p_sys
op	62:52	0:0	2	->
water	62:54	0:0	2	handle
water	62:60	0:0	2	,
water	62:62	0:0	2	AACENC_
if	63:8	66:8	2	(err != AACENC_OK)
cond	63:12	63:19	3	err != AACENC_OK
water	63:12	0:0	4	err
op	63:16	0:0	4	!=
water	63:19	0:0	4	AACENC_OK
stmts	63:30	66:8	3	
water	63:30	0:0	4	{
water	64:12	0:0	4	msg_Err
water	64:19	0:0	4	(
water	64:20	0:0	4	p_enc
water	64:25	0:0	4	,
water	64:27	0:0	4	"Couldn't set "
water	65:12	0:0	4	goto
water	65:17	0:0	4	error
water	65:22	0:0	4	;
water	66:8	0:0	4	}
decl	69:4	69:65	0	bool	b_eld_sbr
op	69:19	0:0	0	=
call	69:21	69:64	1	var_InheritBool
arg	69:37	69:42	2	p_enc
water	69:37	0:0	3	p_enc
arg	69:44	69:64	2	ENC_CFG_PREFIX"sbr"
water	69:44	0:0	3	ENC_CFG_PREFIX
water	69:59	0:0	3	"sbr"
decl	75:4	75:63	0	int	i_vbr
op	75:14	0:0	0	=
call	75:16	75:62	1	var_InheritInteger
arg	75:35	75:40	2	p_enc
water	75:35	0:0	3	p_enc
arg	75:42	75:62	2	ENC_CFG_PREFIX"vbr"
water	75:42	0:0	3	ENC_CFG_PREFIX
water	75:57	0:0	3	"vbr"
decl	83:8	83:48	0	int	i_bitrate
op	83:22	0:0	0	=
water	83:24	0:0	0	p_enc
op	83:29	0:0	0	->
water	83:31	0:0	0	fmt_out
op	83:38	0:0	0	.
water	83:39	0:0	0	i_bitrate
decl	102:4	102:34	0	AACENC_InfoStruct	info
op	102:27	0:0	0	=
water	102:29	0:0	0	{
water	102:31	0:0	0	0
water	102:33	0:0	0	}

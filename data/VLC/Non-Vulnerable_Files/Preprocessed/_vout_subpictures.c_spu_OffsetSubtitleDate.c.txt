func	2:0	17:0	0	void	spu_OffsetSubtitleDate
params	2:27	0:0	1	
param	2:28	2:38	2	spu_t *	spu
param	2:40	2:56	2	mtime_t	duration
stmnts	0:0	16:32	1	
decl	4:4	4:31	2	spu_private_t	*sys
op	4:23	0:0	2	=
water	4:25	0:0	2	spu
op	4:28	0:0	2	->
water	4:30	0:0	2	p
call	5:4	5:29	2	vlc_mutex_lock
arg	5:19	5:29	3	&sys->lock
op	5:19	0:0	4	&
water	5:20	0:0	4	sys
op	5:23	0:0	4	->
water	5:25	0:0	4	lock
water	5:30	0:0	2	;
for	6:4	15:4	2	( int i = 0 ;i < VOUT_MAX_SUBPICTURES;i ++)
forinit	0:0	6:18	3	 int i = 0 ;
decl	6:9	6:18	4	int	i
op	6:15	0:0	4	=
water	6:17	0:0	4	0
cond	6:20	6:24	3	i < VOUT_MAX_SUBPICTURES
water	6:20	0:0	4	i
op	6:22	0:0	4	<
water	6:24	0:0	4	VOUT_MAX_SUBPICTURES
forexpr	6:46	6:47	3	i ++
water	6:46	0:0	4	i
op	6:47	0:0	4	++
stmts	6:51	15:4	3	
water	6:51	0:0	4	{
decl	7:8	7:53	4	spu_heap_entry_t	*entry
op	7:32	0:0	4	=
op	7:34	0:0	4	&
water	7:35	0:0	4	sys
op	7:38	0:0	4	->
water	7:40	0:0	4	heap
op	7:44	0:0	4	.
water	7:45	0:0	4	entry
op	7:50	0:0	4	[
water	7:51	0:0	4	i
op	7:52	0:0	4	]
decl	8:8	8:49	4	subpicture_t	*current
op	8:30	0:0	4	=
water	8:32	0:0	4	entry
op	8:37	0:0	4	->
water	8:39	0:0	4	subpicture
if	9:8	14:8	4	(current && current -> b_subtitle)
cond	9:12	9:32	5	current && current -> b_subtitle
water	9:12	0:0	6	current
op	9:20	0:0	6	&&
water	9:23	0:0	6	current
op	9:30	0:0	6	->
water	9:32	0:0	6	b_subtitle
stmts	9:44	14:8	5	
water	9:44	0:0	6	{
if	10:12	11:44	6	(current -> i_start > 0)
cond	10:16	10:35	7	current -> i_start > 0
water	10:16	0:0	8	current
op	10:23	0:0	8	->
water	10:25	0:0	8	i_start
op	10:33	0:0	8	>
water	10:35	0:0	8	0
stmts	11:16	11:44	7	
water	11:16	0:0	8	current
op	11:23	0:0	8	->
water	11:25	0:0	8	i_start
op	11:33	0:0	8	+=
water	11:36	0:0	8	duration
water	11:44	0:0	8	;
if	12:12	13:44	6	(current -> i_stop > 0)
cond	12:16	12:34	7	current -> i_stop > 0
water	12:16	0:0	8	current
op	12:23	0:0	8	->
water	12:25	0:0	8	i_stop
op	12:32	0:0	8	>
water	12:34	0:0	8	0
stmts	13:16	13:44	7	
water	13:16	0:0	8	current
op	13:23	0:0	8	->
water	13:25	0:0	8	i_stop
op	13:33	0:0	8	+=
water	13:36	0:0	8	duration
water	13:44	0:0	8	;
water	14:8	0:0	6	}
water	15:4	0:0	4	}
call	16:4	16:31	2	vlc_mutex_unlock
arg	16:21	16:31	3	&sys->lock
op	16:21	0:0	4	&
water	16:22	0:0	4	sys
op	16:25	0:0	4	->
water	16:27	0:0	4	lock
water	16:32	0:0	2	;

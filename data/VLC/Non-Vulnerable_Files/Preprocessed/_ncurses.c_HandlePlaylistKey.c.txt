func	2:0	79:0	0	static bool	HandlePlaylistKey
params	2:29	0:0	1	
param	2:30	2:49	2	intf_thread_t *	intf
param	2:51	2:58	2	int	key
stmnts	0:0	78:16	1	
decl	4:4	4:33	2	intf_sys_t	*sys
op	4:20	0:0	2	=
water	4:22	0:0	2	intf
op	4:26	0:0	2	->
water	4:28	0:0	2	p_sys
decl	5:4	5:41	2	playlist_t	*p_playlist
op	5:27	0:0	2	=
call	5:29	5:40	3	pl_Get
arg	5:36	5:40	4	intf
water	5:36	0:0	5	intf
decl	6:4	6:31	2	struct pl_item_t	*p_pl_item
switch	7:4	77:4	2	(key)
cond	7:11	7:11	3	key
water	7:11	0:0	4	key
stmts	8:4	77:4	3	
water	8:4	0:0	4	{
water	10:4	0:0	4	case
water	10:9	0:0	4	'r'
water	10:12	0:0	4	:
call	10:14	10:49	4	var_ToggleBool
arg	10:29	10:39	5	p_playlist
water	10:29	0:0	6	p_playlist
arg	10:41	10:49	5	"random"
water	10:41	0:0	6	"random"
water	10:50	0:0	4	;
return	10:52	10:63	4	true
water	10:59	0:0	5	true
water	11:4	0:0	4	case
water	11:9	0:0	4	'l'
water	11:12	0:0	4	:
call	11:14	11:47	4	var_ToggleBool
arg	11:29	11:39	5	p_playlist
water	11:29	0:0	6	p_playlist
arg	11:41	11:47	5	"loop"
water	11:41	0:0	6	"loop"
water	11:48	0:0	4	;
return	11:52	11:63	4	true
water	11:59	0:0	5	true
water	12:4	0:0	4	case
water	12:9	0:0	4	'R'
water	12:12	0:0	4	:
call	12:14	12:49	4	var_ToggleBool
arg	12:29	12:39	5	p_playlist
water	12:29	0:0	6	p_playlist
arg	12:41	12:49	5	"repeat"
water	12:41	0:0	6	"repeat"
water	12:50	0:0	4	;
return	12:52	12:63	4	true
water	12:59	0:0	5	true
water	14:4	0:0	4	case
water	14:9	0:0	4	'o'
water	14:12	0:0	4	:
water	15:4	0:0	4	case
water	15:9	0:0	4	'O'
water	15:12	0:0	4	:
call	16:8	18:78	4	playlist_RecursiveNodeSort
arg	16:35	16:45	5	p_playlist
water	16:35	0:0	6	p_playlist
arg	16:47	16:74	5	p_playlist->p_root_onelevel
water	16:47	0:0	6	p_playlist
op	16:57	0:0	6	->
water	16:59	0:0	6	p_root_onelevel
arg	17:36	17:58	5	SORT_TITLE_NODES_FIRST
water	17:36	0:0	6	SORT_TITLE_NODES_FIRST
arg	18:36	18:78	5	(key=='o')?ORDER_NORMAL:ORDER_REVERSE
water	18:36	0:0	6	(
water	18:37	0:0	6	key
op	18:41	0:0	6	==
water	18:44	0:0	6	'o'
water	18:47	0:0	6	)
water	18:48	0:0	6	?
water	18:50	0:0	6	ORDER_NORMAL
water	18:63	0:0	6	:
water	18:65	0:0	6	ORDER_REVERSE
water	18:79	0:0	4	;
call	19:8	19:36	4	vlc_mutex_lock
arg	19:23	19:36	5	&sys->pl_lock
op	19:23	0:0	6	&
water	19:24	0:0	6	sys
op	19:27	0:0	6	->
water	19:29	0:0	6	pl_lock
water	19:37	0:0	4	;
water	20:8	0:0	4	sys
op	20:11	0:0	4	->
water	20:13	0:0	4	need_update
op	20:25	0:0	4	=
water	20:27	0:0	4	true
water	20:31	0:0	4	;
call	21:8	21:38	4	vlc_mutex_unlock
arg	21:25	21:38	5	&sys->pl_lock
op	21:25	0:0	6	&
water	21:26	0:0	6	sys
op	21:29	0:0	6	->
water	21:31	0:0	6	pl_lock
water	21:39	0:0	4	;
return	22:8	22:19	4	true
water	22:15	0:0	5	true
water	23:4	0:0	4	case
water	23:9	0:0	4	';'
water	23:12	0:0	4	:
call	24:8	24:26	4	SearchPlaylist
arg	24:23	24:26	5	sys
water	24:23	0:0	6	sys
water	24:27	0:0	4	;
return	25:8	25:19	4	true
water	25:15	0:0	5	true
water	26:4	0:0	4	case
water	26:9	0:0	4	'g'
water	26:12	0:0	4	:
call	27:8	27:33	4	FindIndex
arg	27:18	27:21	5	sys
water	27:18	0:0	6	sys
arg	27:23	27:33	5	p_playlist
water	27:23	0:0	6	p_playlist
water	27:34	0:0	4	;
return	28:8	28:19	4	true
water	28:15	0:0	5	true
water	30:4	0:0	4	case
water	30:9	0:0	4	'D'
water	30:12	0:0	4	:
water	31:4	0:0	4	case
water	31:9	0:0	4	KEY_BACKSPACE
water	31:22	0:0	4	:
water	32:4	0:0	4	case
water	32:9	0:0	4	0
water	32:10	0:0	4	x7f
water	32:13	0:0	4	:
water	33:4	0:0	4	case
water	33:9	0:0	4	KEY_DC
water	33:15	0:0	4	:
water	34:4	0:0	4	{
water	35:8	0:0	4	playlist_item_t
op	35:24	0:0	4	*
water	35:25	0:0	4	item
water	35:29	0:0	4	;
water	36:8	0:0	4	PL_LOCK
water	36:15	0:0	4	;
water	37:8	0:0	4	item
op	37:13	0:0	4	=
water	37:15	0:0	4	sys
op	37:18	0:0	4	->
water	37:20	0:0	4	plist
op	37:25	0:0	4	[
water	37:26	0:0	4	sys
op	37:29	0:0	4	->
water	37:31	0:0	4	box_idx
op	37:38	0:0	4	]
op	37:39	0:0	4	->
water	37:41	0:0	4	item
water	37:45	0:0	4	;
water	38:8	0:0	4	if
water	38:11	0:0	4	(
water	38:12	0:0	4	item
op	38:16	0:0	4	->
water	38:18	0:0	4	i_children
op	38:29	0:0	4	==
op	38:32	0:0	4	-
water	38:33	0:0	4	1
water	38:34	0:0	4	)
call	39:12	39:73	4	playlist_DeleteFromInput
arg	39:37	39:47	5	p_playlist
water	39:37	0:0	6	p_playlist
arg	39:49	39:62	5	item->p_input
water	39:49	0:0	6	item
op	39:53	0:0	6	->
water	39:55	0:0	6	p_input
arg	39:64	39:73	5	pl_Locked
water	39:64	0:0	6	pl_Locked
water	39:74	0:0	4	;
water	40:8	0:0	4	else
call	41:12	41:62	4	playlist_NodeDelete
arg	41:32	41:42	5	p_playlist
water	41:32	0:0	6	p_playlist
arg	41:44	41:48	5	item
water	41:44	0:0	6	item
arg	41:50	41:55	5	true
water	41:50	0:0	6	true
arg	41:57	41:62	5	false
water	41:57	0:0	6	false
water	41:63	0:0	4	;
water	42:8	0:0	4	PL_UNLOCK
water	42:17	0:0	4	;
call	43:8	43:36	4	vlc_mutex_lock
arg	43:23	43:36	5	&sys->pl_lock
op	43:23	0:0	6	&
water	43:24	0:0	6	sys
op	43:27	0:0	6	->
water	43:29	0:0	6	pl_lock
water	43:37	0:0	4	;
water	44:8	0:0	4	if
water	44:11	0:0	4	(
water	44:12	0:0	4	sys
op	44:15	0:0	4	->
water	44:17	0:0	4	box_idx
op	44:25	0:0	4	>=
water	44:28	0:0	4	sys
op	44:31	0:0	4	->
water	44:33	0:0	4	box_lines_total
op	44:49	0:0	4	-
water	44:51	0:0	4	1
water	44:52	0:0	4	)
water	45:12	0:0	4	sys
op	45:15	0:0	4	->
water	45:17	0:0	4	box_idx
op	45:25	0:0	4	=
water	45:27	0:0	4	sys
op	45:30	0:0	4	->
water	45:32	0:0	4	box_lines_total
op	45:48	0:0	4	-
water	45:50	0:0	4	2
water	45:51	0:0	4	;
water	46:8	0:0	4	sys
op	46:11	0:0	4	->
water	46:13	0:0	4	need_update
op	46:25	0:0	4	=
water	46:27	0:0	4	true
water	46:31	0:0	4	;
call	47:8	47:38	4	vlc_mutex_unlock
arg	47:25	47:38	5	&sys->pl_lock
op	47:25	0:0	6	&
water	47:26	0:0	6	sys
op	47:29	0:0	6	->
water	47:31	0:0	6	pl_lock
water	47:39	0:0	4	;
water	48:8	0:0	4	return
water	48:15	0:0	4	true
water	48:19	0:0	4	;
water	49:4	0:0	4	}
water	50:4	0:0	4	case
water	50:9	0:0	4	KEY_ENTER
water	50:18	0:0	4	:
water	51:4	0:0	4	case
water	51:9	0:0	4	'\r'
water	51:13	0:0	4	:
water	52:4	0:0	4	case
water	52:9	0:0	4	'\n'
water	52:13	0:0	4	:
water	53:8	0:0	4	if
water	53:11	0:0	4	(
op	53:12	0:0	4	!
water	53:13	0:0	4	(
water	53:14	0:0	4	p_pl_item
op	53:24	0:0	4	=
water	53:26	0:0	4	sys
op	53:29	0:0	4	->
water	53:31	0:0	4	plist
op	53:36	0:0	4	[
water	53:37	0:0	4	sys
op	53:40	0:0	4	->
water	53:42	0:0	4	box_idx
op	53:49	0:0	4	]
water	53:50	0:0	4	)
water	53:51	0:0	4	)
water	54:12	0:0	4	return
water	54:19	0:0	4	false
water	54:24	0:0	4	;
if	55:8	69:8	4	(p_pl_item -> item -> i_children)
cond	55:12	55:29	5	p_pl_item -> item -> i_children
water	55:12	0:0	6	p_pl_item
op	55:21	0:0	6	->
water	55:23	0:0	6	item
op	55:27	0:0	6	->
water	55:29	0:0	6	i_children
stmts	55:41	69:8	5	
water	55:41	0:0	6	{
decl	56:12	56:62	6	playlist_item_t	*item
water	56:33	0:0	6	,
decl	56:12	56:62	6	playlist_item_t	*p_parent
op	56:45	0:0	6	=
water	56:47	0:0	6	p_pl_item
op	56:56	0:0	6	->
water	56:58	0:0	6	item
if	57:12	61:12	6	(p_parent -> i_children == - 1)
cond	57:16	57:41	7	p_parent -> i_children == - 1
water	57:16	0:0	8	p_parent
op	57:24	0:0	8	->
water	57:26	0:0	8	i_children
op	57:37	0:0	8	==
op	57:40	0:0	8	-
water	57:41	0:0	8	1
stmts	57:44	61:12	7	
water	57:44	0:0	8	{
water	58:16	0:0	8	item
op	58:21	0:0	8	=
water	58:23	0:0	8	p_parent
water	58:31	0:0	8	;
while	59:16	60:49	8	(p_parent -> p_parent)
cond	59:23	59:33	9	p_parent -> p_parent
water	59:23	0:0	10	p_parent
op	59:31	0:0	10	->
water	59:33	0:0	10	p_parent
stmts	60:20	60:49	9	
water	60:20	0:0	10	p_parent
op	60:29	0:0	10	=
water	60:31	0:0	10	p_parent
op	60:39	0:0	10	->
water	60:41	0:0	10	p_parent
water	60:49	0:0	10	;
water	61:12	0:0	8	}
else	61:14	66:12	6
stmts	61:19	66:12	7	
water	61:19	0:0	8	{
call	62:16	62:44	8	vlc_mutex_lock
arg	62:31	62:44	9	&sys->pl_lock
op	62:31	0:0	10	&
water	62:32	0:0	10	sys
op	62:35	0:0	10	->
water	62:37	0:0	10	pl_lock
water	62:45	0:0	8	;
water	63:16	0:0	8	sys
op	63:19	0:0	8	->
water	63:21	0:0	8	node
op	63:26	0:0	8	=
water	63:28	0:0	8	p_parent
water	63:36	0:0	8	;
call	64:16	64:46	8	vlc_mutex_unlock
arg	64:33	64:46	9	&sys->pl_lock
op	64:33	0:0	10	&
water	64:34	0:0	10	sys
op	64:37	0:0	10	->
water	64:39	0:0	10	pl_lock
water	64:47	0:0	8	;
water	65:16	0:0	8	item
op	65:21	0:0	8	=
water	65:23	0:0	8	NULL
water	65:27	0:0	8	;
water	66:12	0:0	8	}
call	67:12	68:44	6	playlist_Control
arg	67:29	67:39	7	p_playlist
water	67:29	0:0	8	p_playlist
arg	67:41	67:58	7	PLAYLIST_VIEWPLAY
water	67:41	0:0	8	PLAYLIST_VIEWPLAY
arg	67:60	67:71	7	pl_Unlocked
water	67:60	0:0	8	pl_Unlocked
arg	68:30	68:38	7	p_parent
water	68:30	0:0	8	p_parent
arg	68:40	68:44	7	item
water	68:40	0:0	8	item
water	68:45	0:0	6	;
water	69:8	0:0	6	}
else	69:10	74:8	4
stmts	69:15	74:8	5	
water	69:15	0:0	6	{
call	70:12	70:36	6	playlist_Stop
arg	70:26	70:36	7	p_playlist
water	70:26	0:0	8	p_playlist
water	70:37	0:0	6	;
call	71:12	71:40	6	vlc_mutex_lock
arg	71:27	71:40	7	&sys->pl_lock
op	71:27	0:0	8	&
water	71:28	0:0	8	sys
op	71:31	0:0	8	->
water	71:33	0:0	8	pl_lock
water	71:41	0:0	6	;
water	72:12	0:0	6	sys
op	72:15	0:0	6	->
water	72:17	0:0	6	node
op	72:22	0:0	6	=
water	72:24	0:0	6	p_pl_item
op	72:33	0:0	6	->
water	72:35	0:0	6	item
water	72:39	0:0	6	;
call	73:12	73:42	6	vlc_mutex_unlock
arg	73:29	73:42	7	&sys->pl_lock
op	73:29	0:0	8	&
water	73:30	0:0	8	sys
op	73:33	0:0	8	->
water	73:35	0:0	8	pl_lock
water	73:43	0:0	6	;
water	74:8	0:0	6	}
water	75:8	0:0	4	sys
op	75:11	0:0	4	->
water	75:13	0:0	4	plidx_follow
op	75:26	0:0	4	=
water	75:28	0:0	4	true
water	75:32	0:0	4	;
return	76:8	76:19	4	true
water	76:15	0:0	5	true
water	77:4	0:0	4	}
return	78:4	78:16	2	false
water	78:11	0:0	3	false

func	2:0	48:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	47:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:54	2	int	i_simthres
op	6:19	0:0	2	=
call	6:21	6:53	3	atomic_load
arg	6:34	6:53	4	&p_sys->i_simthres
op	6:34	0:0	5	&
water	6:35	0:0	5	p_sys
op	6:40	0:0	5	->
water	6:42	0:0	5	i_simthres
decl	7:4	7:54	2	int	i_satthres
op	7:19	0:0	2	=
call	7:21	7:53	3	atomic_load
arg	7:34	7:53	4	&p_sys->i_satthres
op	7:34	0:0	5	&
water	7:35	0:0	5	p_sys
op	7:40	0:0	5	->
water	7:42	0:0	5	i_satthres
decl	8:4	8:48	2	int	i_color
op	8:16	0:0	2	=
call	8:18	8:47	3	atomic_load
arg	8:31	8:47	4	&p_sys->i_color
op	8:31	0:0	5	&
water	8:32	0:0	5	p_sys
op	8:37	0:0	5	->
water	8:39	0:0	5	i_color
if	9:4	9:28	2	(! p_pic)
cond	9:8	9:9	3	! p_pic
op	9:8	0:0	4	!
water	9:9	0:0	4	p_pic
stmts	9:17	9:28	3	
return	9:17	9:28	4	NULL
water	9:24	0:0	5	NULL
water	10:4	0:0	2	p_outpic
op	10:13	0:0	2	=
call	10:15	10:43	2	filter_NewPicture
arg	10:34	10:43	3	p_filter
water	10:34	0:0	4	p_filter
water	10:44	0:0	2	;
if	11:4	15:4	2	(! p_outpic)
cond	11:8	11:9	3	! p_outpic
op	11:8	0:0	4	!
water	11:9	0:0	4	p_outpic
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:31	4	picture_Release
arg	13:25	13:31	5	p_pic
water	13:25	0:0	6	p_pic
water	13:32	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
call	17:4	17:64	2	plane_CopyPixels
arg	17:22	17:43	3	&p_outpic->p[Y_PLANE]
op	17:22	0:0	4	&
water	17:23	0:0	4	p_outpic
op	17:31	0:0	4	->
water	17:33	0:0	4	p
op	17:34	0:0	4	[
water	17:35	0:0	4	Y_PLANE
op	17:42	0:0	4	]
arg	17:45	17:64	3	&p_pic->p[Y_PLANE]
op	17:45	0:0	4	&
water	17:46	0:0	4	p_pic
op	17:51	0:0	4	->
water	17:53	0:0	4	p
op	17:54	0:0	4	[
water	17:55	0:0	4	Y_PLANE
op	17:62	0:0	4	]
water	17:65	0:0	2	;
decl	21:4	21:29	2	int	refu
water	21:12	0:0	2	,
decl	21:4	21:29	2	int	refv
water	21:18	0:0	2	,
decl	21:4	21:29	2	int	reflength
call	22:4	22:52	2	GetReference
arg	22:18	22:23	3	&refu
op	22:18	0:0	4	&
water	22:19	0:0	4	refu
arg	22:25	22:30	3	&refv
op	22:25	0:0	4	&
water	22:26	0:0	4	refv
arg	22:32	22:42	3	&reflength
op	22:32	0:0	4	&
water	22:33	0:0	4	reflength
arg	22:44	22:52	3	i_color
water	22:44	0:0	4	i_color
water	22:53	0:0	2	;
for	23:4	46:4	2	( int y = 0 ;y < p_pic -> p [ U_PLANE ] . i_visible_lines;y ++)
forinit	0:0	23:18	3	 int y = 0 ;
decl	23:9	23:18	4	int	y
op	23:15	0:0	4	=
water	23:17	0:0	4	0
cond	23:20	23:42	3	y < p_pic -> p [ U_PLANE ] . i_visible_lines
water	23:20	0:0	4	y
op	23:22	0:0	4	<
water	23:24	0:0	4	p_pic
op	23:29	0:0	4	->
water	23:31	0:0	4	p
op	23:32	0:0	4	[
water	23:33	0:0	4	U_PLANE
op	23:40	0:0	4	]
op	23:41	0:0	4	.
water	23:42	0:0	4	i_visible_lines
forexpr	23:59	23:60	3	y ++
water	23:59	0:0	4	y
op	23:60	0:0	4	++
stmts	24:4	46:4	3	
water	24:4	0:0	4	{
decl	25:8	25:85	4	uint8_t	*p_src_u
op	25:25	0:0	4	=
op	25:27	0:0	4	&
water	25:28	0:0	4	p_pic
op	25:33	0:0	4	->
water	25:35	0:0	4	p
op	25:36	0:0	4	[
water	25:37	0:0	4	U_PLANE
op	25:44	0:0	4	]
op	25:45	0:0	4	.
water	25:46	0:0	4	p_pixels
op	25:54	0:0	4	[
water	25:55	0:0	4	y
op	25:57	0:0	4	*
water	25:59	0:0	4	p_pic
op	25:64	0:0	4	->
water	25:66	0:0	4	p
op	25:67	0:0	4	[
water	25:68	0:0	4	U_PLANE
op	25:75	0:0	4	]
op	25:76	0:0	4	.
water	25:77	0:0	4	i_pitch
op	25:84	0:0	4	]
decl	26:8	26:85	4	uint8_t	*p_src_v
op	26:25	0:0	4	=
op	26:27	0:0	4	&
water	26:28	0:0	4	p_pic
op	26:33	0:0	4	->
water	26:35	0:0	4	p
op	26:36	0:0	4	[
water	26:37	0:0	4	V_PLANE
op	26:44	0:0	4	]
op	26:45	0:0	4	.
water	26:46	0:0	4	p_pixels
op	26:54	0:0	4	[
water	26:55	0:0	4	y
op	26:57	0:0	4	*
water	26:59	0:0	4	p_pic
op	26:64	0:0	4	->
water	26:66	0:0	4	p
op	26:67	0:0	4	[
water	26:68	0:0	4	V_PLANE
op	26:75	0:0	4	]
op	26:76	0:0	4	.
water	26:77	0:0	4	i_pitch
op	26:84	0:0	4	]
decl	27:8	27:91	4	uint8_t	*p_dst_u
op	27:25	0:0	4	=
op	27:27	0:0	4	&
water	27:28	0:0	4	p_outpic
op	27:36	0:0	4	->
water	27:38	0:0	4	p
op	27:39	0:0	4	[
water	27:40	0:0	4	U_PLANE
op	27:47	0:0	4	]
op	27:48	0:0	4	.
water	27:49	0:0	4	p_pixels
op	27:57	0:0	4	[
water	27:58	0:0	4	y
op	27:60	0:0	4	*
water	27:62	0:0	4	p_outpic
op	27:70	0:0	4	->
water	27:72	0:0	4	p
op	27:73	0:0	4	[
water	27:74	0:0	4	U_PLANE
op	27:81	0:0	4	]
op	27:82	0:0	4	.
water	27:83	0:0	4	i_pitch
op	27:90	0:0	4	]
decl	28:8	28:91	4	uint8_t	*p_dst_v
op	28:25	0:0	4	=
op	28:27	0:0	4	&
water	28:28	0:0	4	p_outpic
op	28:36	0:0	4	->
water	28:38	0:0	4	p
op	28:39	0:0	4	[
water	28:40	0:0	4	V_PLANE
op	28:47	0:0	4	]
op	28:48	0:0	4	.
water	28:49	0:0	4	p_pixels
op	28:57	0:0	4	[
water	28:58	0:0	4	y
op	28:60	0:0	4	*
water	28:62	0:0	4	p_outpic
op	28:70	0:0	4	->
water	28:72	0:0	4	p
op	28:73	0:0	4	[
water	28:74	0:0	4	V_PLANE
op	28:81	0:0	4	]
op	28:82	0:0	4	.
water	28:83	0:0	4	i_pitch
op	28:90	0:0	4	]
for	29:8	45:8	4	( int x = 0 ;x < p_pic -> p [ U_PLANE ] . i_visible_pitch;x ++)
forinit	0:0	29:22	5	 int x = 0 ;
decl	29:13	29:22	6	int	x
op	29:19	0:0	6	=
water	29:21	0:0	6	0
cond	29:24	29:46	5	x < p_pic -> p [ U_PLANE ] . i_visible_pitch
water	29:24	0:0	6	x
op	29:26	0:0	6	<
water	29:28	0:0	6	p_pic
op	29:33	0:0	6	->
water	29:35	0:0	6	p
op	29:36	0:0	6	[
water	29:37	0:0	6	U_PLANE
op	29:44	0:0	6	]
op	29:45	0:0	6	.
water	29:46	0:0	6	i_visible_pitch
forexpr	29:63	29:64	5	x ++
water	29:63	0:0	6	x
op	29:64	0:0	6	++
stmts	30:8	45:8	5	
water	30:8	0:0	6	{
if	31:12	37:12	6	(IsSimilar (* p_src_u - 0 x80 ,* p_src_v - 0 x80 ,refu ,refv ,reflength ,i_satthres ,i_simthres ))
cond	31:16	33:50	7	IsSimilar (* p_src_u - 0 x80 ,* p_src_v - 0 x80 ,refu ,refv ,reflength ,i_satthres ,i_simthres )
call	31:16	33:50	8	IsSimilar
arg	31:27	31:42	9	*p_src_u-0x80
op	31:27	0:0	10	*
water	31:28	0:0	10	p_src_u
op	31:36	0:0	10	-
water	31:38	0:0	10	0
water	31:39	0:0	10	x80
arg	31:44	31:59	9	*p_src_v-0x80
op	31:44	0:0	10	*
water	31:45	0:0	10	p_src_v
op	31:53	0:0	10	-
water	31:55	0:0	10	0
water	31:56	0:0	10	x80
arg	32:27	32:31	9	refu
water	32:27	0:0	10	refu
arg	32:33	32:37	9	refv
water	32:33	0:0	10	refv
arg	32:39	32:48	9	reflength
water	32:39	0:0	10	reflength
arg	33:27	33:37	9	i_satthres
water	33:27	0:0	10	i_satthres
arg	33:39	33:50	9	i_simthres
water	33:39	0:0	10	i_simthres
stmts	34:12	37:12	7	
water	34:12	0:0	8	{
op	35:16	0:0	8	*
water	35:17	0:0	8	p_dst_u
op	35:24	0:0	8	++
op	35:27	0:0	8	=
op	35:29	0:0	8	*
water	35:30	0:0	8	p_src_u
water	35:37	0:0	8	;
op	36:16	0:0	8	*
water	36:17	0:0	8	p_dst_v
op	36:24	0:0	8	++
op	36:27	0:0	8	=
op	36:29	0:0	8	*
water	36:30	0:0	8	p_src_v
water	36:37	0:0	8	;
water	37:12	0:0	8	}
else	38:12	42:12	6
stmts	39:12	42:12	7	
water	39:12	0:0	8	{
op	40:16	0:0	8	*
water	40:17	0:0	8	p_dst_u
op	40:24	0:0	8	++
op	40:27	0:0	8	=
water	40:29	0:0	8	0
water	40:30	0:0	8	x80
water	40:33	0:0	8	;
op	41:16	0:0	8	*
water	41:17	0:0	8	p_dst_v
op	41:24	0:0	8	++
op	41:27	0:0	8	=
water	41:29	0:0	8	0
water	41:30	0:0	8	x80
water	41:33	0:0	8	;
water	42:12	0:0	8	}
water	43:12	0:0	6	p_src_u
op	43:19	0:0	6	++
water	43:21	0:0	6	;
water	44:12	0:0	6	p_src_v
op	44:19	0:0	6	++
water	44:21	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
return	47:4	47:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	47:11	47:47	3	CopyInfoAndRelease
arg	47:31	47:39	4	p_outpic
water	47:31	0:0	5	p_outpic
arg	47:41	47:47	4	p_pic
water	47:41	0:0	5	p_pic

func	2:0	49:0	0	static int	Init_FT
params	2:18	0:0	1	
param	2:20	2:40	2	vlc_object_t *	p_this
param	3:20	3:44	2	const char *	psz_fontfile
param	4:20	4:39	2	const int	fontindex
param	5:20	5:51	2	const float	f_outline_thickness
stmnts	0:0	48:23	1	
decl	7:4	7:48	2	filter_t	*p_filter
op	7:28	0:0	2	=
water	7:30	0:0	2	(
water	7:31	0:0	2	filter_t
op	7:40	0:0	2	*
water	7:41	0:0	2	)
water	7:42	0:0	2	p_this
decl	8:4	8:42	2	filter_sys_t	*p_sys
op	8:25	0:0	2	=
water	8:27	0:0	2	p_filter
op	8:35	0:0	2	->
water	8:37	0:0	2	p_sys
decl	10:4	10:55	2	int	i_error
op	10:16	0:0	2	=
call	10:18	10:54	3	FT_Init_FreeType
arg	10:36	10:54	4	&p_sys->p_library
op	10:36	0:0	5	&
water	10:37	0:0	5	p_sys
op	10:42	0:0	5	->
water	10:44	0:0	5	p_library
if	11:4	15:4	2	(i_error)
cond	11:8	11:8	3	i_error
water	11:8	0:0	4	i_error
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:58	4	msg_Err
arg	13:17	13:25	5	p_filter
water	13:17	0:0	6	p_filter
arg	13:27	13:58	5	"couldn't initialize freetype"
water	13:27	0:0	6	"couldn't initialize freetype"
water	13:59	0:0	4	;
goto	14:8	14:18	4	error
water	14:13	0:0	5	error
water	15:4	0:0	4	}
water	16:4	0:0	2	i_error
op	16:12	0:0	2	=
call	16:14	17:53	2	FT_New_Face
arg	16:27	16:43	3	p_sys->p_library
water	16:27	0:0	4	p_sys
op	16:32	0:0	4	->
water	16:34	0:0	4	p_library
arg	16:45	16:77	3	psz_fontfile?psz_fontfile:""
water	16:45	0:0	4	psz_fontfile
water	16:58	0:0	4	?
water	16:60	0:0	4	psz_fontfile
water	16:73	0:0	4	:
water	16:75	0:0	4	""
arg	17:27	17:36	3	fontindex
water	17:27	0:0	4	fontindex
arg	17:38	17:53	3	&p_sys->p_face
op	17:38	0:0	4	&
water	17:39	0:0	4	p_sys
op	17:44	0:0	4	->
water	17:46	0:0	4	p_face
water	17:54	0:0	2	;
if	18:4	23:4	2	(i_error == FT_Err_Unknown_File_Format)
cond	18:8	18:19	3	i_error == FT_Err_Unknown_File_Format
water	18:8	0:0	4	i_error
op	18:16	0:0	4	==
water	18:19	0:0	4	FT_Err_Unknown_File_Format
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
call	20:8	21:56	4	msg_Err
arg	20:17	20:25	5	p_filter
water	20:17	0:0	6	p_filter
arg	20:27	20:56	5	"file %s have unknown format"
water	20:27	0:0	6	"file %s have unknown format"
arg	21:17	21:56	5	psz_fontfile?psz_fontfile:"(null)"
water	21:17	0:0	6	psz_fontfile
water	21:30	0:0	6	?
water	21:32	0:0	6	psz_fontfile
water	21:45	0:0	6	:
water	21:47	0:0	6	"(null)"
water	21:57	0:0	4	;
goto	22:8	22:18	4	error
water	22:13	0:0	5	error
water	23:4	0:0	4	}
else	24:4	29:4	2
stmts	24:9	29:4	3	
if	24:9	29:4	4	(i_error)
cond	24:13	24:13	5	i_error
water	24:13	0:0	6	i_error
stmts	25:4	29:4	5	
water	25:4	0:0	6	{
call	26:8	27:56	6	msg_Err
arg	26:17	26:25	7	p_filter
water	26:17	0:0	8	p_filter
arg	26:27	26:56	7	"failed to load font file %s"
water	26:27	0:0	8	"failed to load font file %s"
arg	27:17	27:56	7	psz_fontfile?psz_fontfile:"(null)"
water	27:17	0:0	8	psz_fontfile
water	27:30	0:0	8	?
water	27:32	0:0	8	psz_fontfile
water	27:45	0:0	8	:
water	27:47	0:0	8	"(null)"
water	27:57	0:0	6	;
goto	28:8	28:18	6	error
water	28:13	0:0	7	error
water	29:4	0:0	6	}
water	30:4	0:0	2	i_error
op	30:12	0:0	2	=
call	30:14	30:68	2	FT_Select_Charmap
arg	30:33	30:46	3	p_sys->p_face
water	30:33	0:0	4	p_sys
op	30:38	0:0	4	->
water	30:40	0:0	4	p_face
arg	30:48	30:68	3	ft_encoding_unicode
water	30:48	0:0	4	ft_encoding_unicode
water	30:69	0:0	2	;
if	31:4	35:4	2	(i_error)
cond	31:8	31:8	3	i_error
water	31:8	0:0	4	i_error
stmts	32:4	35:4	3	
water	32:4	0:0	4	{
call	33:8	33:67	4	msg_Err
arg	33:17	33:25	5	p_filter
water	33:17	0:0	6	p_filter
arg	33:27	33:67	5	"font has no unicode translation table"
water	33:27	0:0	6	"font has no unicode translation table"
water	33:68	0:0	4	;
goto	34:8	34:18	4	error
water	34:13	0:0	5	error
water	35:4	0:0	4	}
if	36:4	36:62	2	(SetFontSize (p_filter ,0 ) != VLC_SUCCESS)
cond	36:8	36:38	3	SetFontSize (p_filter ,0 ) != VLC_SUCCESS
call	36:8	36:33	4	SetFontSize
arg	36:21	36:29	5	p_filter
water	36:21	0:0	6	p_filter
arg	36:31	36:33	5	0
water	36:31	0:0	6	0
op	36:35	0:0	4	!=
water	36:38	0:0	4	VLC_SUCCESS
stmts	36:52	36:62	3	
goto	36:52	36:62	4	error
water	36:57	0:0	5	error
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	p_stroker
op	37:21	0:0	2	=
water	37:23	0:0	2	NULL
water	37:27	0:0	2	;
if	38:4	43:4	2	(f_outline_thickness > 0 . 001)
cond	38:8	38:32	3	f_outline_thickness > 0 . 001
water	38:8	0:0	4	f_outline_thickness
op	38:28	0:0	4	>
water	38:30	0:0	4	0
op	38:31	0:0	4	.
water	38:32	0:0	4	001
stmts	39:4	43:4	3	
water	39:4	0:0	4	{
water	40:8	0:0	4	i_error
op	40:16	0:0	4	=
call	40:18	40:70	4	FT_Stroker_New
arg	40:34	40:50	5	p_sys->p_library
water	40:34	0:0	6	p_sys
op	40:39	0:0	6	->
water	40:41	0:0	6	p_library
arg	40:52	40:70	5	&p_sys->p_stroker
op	40:52	0:0	6	&
water	40:53	0:0	6	p_sys
op	40:58	0:0	6	->
water	40:60	0:0	6	p_stroker
water	40:71	0:0	4	;
if	41:8	42:73	4	(i_error)
cond	41:12	41:12	5	i_error
water	41:12	0:0	6	i_error
stmts	42:12	42:73	5	
call	42:12	42:72	6	msg_Err
arg	42:21	42:29	7	p_filter
water	42:21	0:0	8	p_filter
arg	42:31	42:72	7	"Failed to create stroker for outlining"
water	42:31	0:0	8	"Failed to create stroker for outlining"
water	42:73	0:0	6	;
water	43:4	0:0	4	}
return	44:4	44:22	2	VLC_SUCCESS
water	44:11	0:0	3	VLC_SUCCESS
label	45:0	45:5	2	error :
if	46:4	46:53	2	(p_sys -> p_face)
cond	46:8	46:15	3	p_sys -> p_face
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	p_face
stmts	46:24	46:53	3	
call	46:24	46:52	4	FT_Done_Face
arg	46:38	46:52	5	p_sys->p_face
water	46:38	0:0	6	p_sys
op	46:43	0:0	6	->
water	46:45	0:0	6	p_face
water	46:53	0:0	4	;
if	47:4	47:63	2	(p_sys -> p_library)
cond	47:8	47:15	3	p_sys -> p_library
water	47:8	0:0	4	p_sys
op	47:13	0:0	4	->
water	47:15	0:0	4	p_library
stmts	47:27	47:63	3	
call	47:27	47:62	4	FT_Done_FreeType
arg	47:45	47:62	5	p_sys->p_library
water	47:45	0:0	6	p_sys
op	47:50	0:0	6	->
water	47:52	0:0	6	p_library
water	47:63	0:0	4	;
return	48:4	48:23	2	VLC_EGENERIC
water	48:11	0:0	3	VLC_EGENERIC

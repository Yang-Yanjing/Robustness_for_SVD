func	2:0	32:0	0	static picture_t *	DecodePacket
params	2:30	0:0	1	
param	2:32	2:48	2	decoder_t *	p_dec
param	2:50	2:74	2	ogg_packet *	p_oggpacket
stmnts	0:0	31:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:20	2	picture_t	*p_pic
decl	6:4	6:25	2	th_ycbcr_buffer	ycbcr
if	11:4	12:19	2	(th_decode_packetin (p_sys -> tcx ,p_oggpacket ,NULL ) < 0)
cond	11:8	11:62	3	th_decode_packetin (p_sys -> tcx ,p_oggpacket ,NULL ) < 0
call	11:8	11:58	4	th_decode_packetin
arg	11:28	11:38	5	p_sys->tcx
water	11:28	0:0	6	p_sys
op	11:33	0:0	6	->
water	11:35	0:0	6	tcx
arg	11:40	11:51	5	p_oggpacket
water	11:40	0:0	6	p_oggpacket
arg	11:53	11:58	5	NULL
water	11:53	0:0	6	NULL
op	11:60	0:0	4	<
water	11:62	0:0	4	0
stmts	12:8	12:19	3	
return	12:8	12:19	4	NULL
water	12:15	0:0	5	NULL
if	14:4	16:46	2	(! ( p_oggpacket -> packet [ 0 ] & 0 x80 ) && ! ( p_oggpacket -> packet [ 0 ] & 0 x40 ))
cond	14:8	15:39	3	! ( p_oggpacket -> packet [ 0 ] & 0 x80 ) && ! ( p_oggpacket -> packet [ 0 ] & 0 x40 )
op	14:8	0:0	4	!
water	14:9	0:0	4	(
water	14:10	0:0	4	p_oggpacket
op	14:21	0:0	4	->
water	14:23	0:0	4	packet
op	14:29	0:0	4	[
water	14:30	0:0	4	0
op	14:31	0:0	4	]
op	14:33	0:0	4	&
water	14:35	0:0	4	0
water	14:36	0:0	4	x80
water	14:39	0:0	4	)
op	14:59	0:0	4	&&
op	15:8	0:0	4	!
water	15:9	0:0	4	(
water	15:10	0:0	4	p_oggpacket
op	15:21	0:0	4	->
water	15:23	0:0	4	packet
op	15:29	0:0	4	[
water	15:30	0:0	4	0
op	15:31	0:0	4	]
op	15:33	0:0	4	&
water	15:35	0:0	4	0
water	15:36	0:0	4	x40
water	15:39	0:0	4	)
stmts	16:8	16:46	3	
water	16:8	0:0	4	p_sys
op	16:13	0:0	4	->
water	16:15	0:0	4	b_decoded_first_keyframe
op	16:40	0:0	4	=
water	16:42	0:0	4	true
water	16:46	0:0	4	;
if	22:4	23:19	2	(! p_sys -> b_decoded_first_keyframe)
cond	22:8	22:16	3	! p_sys -> b_decoded_first_keyframe
op	22:8	0:0	4	!
water	22:9	0:0	4	p_sys
op	22:14	0:0	4	->
water	22:16	0:0	4	b_decoded_first_keyframe
stmts	23:8	23:19	3	
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
if	24:4	25:19	2	(th_decode_ycbcr_out (p_sys -> tcx ,ycbcr ))
cond	24:8	24:47	3	th_decode_ycbcr_out (p_sys -> tcx ,ycbcr )
call	24:8	24:47	4	th_decode_ycbcr_out
arg	24:29	24:39	5	p_sys->tcx
water	24:29	0:0	6	p_sys
op	24:34	0:0	6	->
water	24:36	0:0	6	tcx
arg	24:41	24:47	5	ycbcr
water	24:41	0:0	6	ycbcr
stmts	25:8	25:19	3	
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	27:4	0:0	2	p_pic
op	27:10	0:0	2	=
call	27:12	27:38	2	decoder_NewPicture
arg	27:32	27:38	3	p_dec
water	27:32	0:0	4	p_dec
water	27:39	0:0	2	;
if	28:4	28:28	2	(! p_pic)
cond	28:8	28:9	3	! p_pic
op	28:8	0:0	4	!
water	28:9	0:0	4	p_pic
stmts	28:17	28:28	3	
return	28:17	28:28	4	NULL
water	28:24	0:0	5	NULL
call	29:4	29:37	2	theora_CopyPicture
arg	29:24	29:29	3	p_pic
water	29:24	0:0	4	p_pic
arg	29:31	29:37	3	ycbcr
water	29:31	0:0	4	ycbcr
water	29:38	0:0	2	;
water	30:4	0:0	2	p_pic
op	30:9	0:0	2	->
water	30:11	0:0	2	date
op	30:16	0:0	2	=
water	30:18	0:0	2	p_sys
op	30:23	0:0	2	->
water	30:25	0:0	2	i_pts
water	30:30	0:0	2	;
return	31:4	31:16	2	p_pic
water	31:11	0:0	3	p_pic

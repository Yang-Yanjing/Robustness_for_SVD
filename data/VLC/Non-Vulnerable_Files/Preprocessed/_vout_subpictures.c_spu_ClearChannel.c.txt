func	2:0	17:0	0	void	spu_ClearChannel
params	2:21	0:0	1	
param	2:22	2:32	2	spu_t *	spu
param	2:34	2:45	2	int	channel
stmnts	0:0	16:32	1	
decl	4:4	4:31	2	spu_private_t	*sys
op	4:23	0:0	2	=
water	4:25	0:0	2	spu
op	4:28	0:0	2	->
water	4:30	0:0	2	p
call	5:4	5:29	2	vlc_mutex_lock
arg	5:19	5:29	3	&sys->lock
op	5:19	0:0	4	&
water	5:20	0:0	4	sys
op	5:23	0:0	4	->
water	5:25	0:0	4	lock
water	5:30	0:0	2	;
for	6:4	15:4	2	( int i = 0 ;i < VOUT_MAX_SUBPICTURES;i ++)
forinit	0:0	6:18	3	 int i = 0 ;
decl	6:9	6:18	4	int	i
op	6:15	0:0	4	=
water	6:17	0:0	4	0
cond	6:20	6:24	3	i < VOUT_MAX_SUBPICTURES
water	6:20	0:0	4	i
op	6:22	0:0	4	<
water	6:24	0:0	4	VOUT_MAX_SUBPICTURES
forexpr	6:46	6:47	3	i ++
water	6:46	0:0	4	i
op	6:47	0:0	4	++
stmts	6:51	15:4	3	
water	6:51	0:0	4	{
decl	7:8	7:53	4	spu_heap_entry_t	*entry
op	7:32	0:0	4	=
op	7:34	0:0	4	&
water	7:35	0:0	4	sys
op	7:38	0:0	4	->
water	7:40	0:0	4	heap
op	7:44	0:0	4	.
water	7:45	0:0	4	entry
op	7:50	0:0	4	[
water	7:51	0:0	4	i
op	7:52	0:0	4	]
decl	8:8	8:48	4	subpicture_t	*subpic
op	8:29	0:0	4	=
water	8:31	0:0	4	entry
op	8:36	0:0	4	->
water	8:38	0:0	4	subpicture
if	9:8	10:20	4	(! subpic)
cond	9:12	9:13	5	! subpic
op	9:12	0:0	6	!
water	9:13	0:0	6	subpic
stmts	10:12	10:20	5	
continue	10:12	10:20	6	
if	11:8	12:20	4	(subpic -> i_channel != channel && ( channel != - 1 || subpic -> i_channel == SPU_DEFAULT_CHANNEL ))
cond	11:12	11:102	5	subpic -> i_channel != channel && ( channel != - 1 || subpic -> i_channel == SPU_DEFAULT_CHANNEL )
water	11:12	0:0	6	subpic
op	11:18	0:0	6	->
water	11:20	0:0	6	i_channel
op	11:30	0:0	6	!=
water	11:33	0:0	6	channel
op	11:41	0:0	6	&&
water	11:44	0:0	6	(
water	11:45	0:0	6	channel
op	11:53	0:0	6	!=
op	11:56	0:0	6	-
water	11:57	0:0	6	1
op	11:59	0:0	6	||
water	11:62	0:0	6	subpic
op	11:68	0:0	6	->
water	11:70	0:0	6	i_channel
op	11:80	0:0	6	==
water	11:83	0:0	6	SPU_DEFAULT_CHANNEL
water	11:102	0:0	6	)
stmts	12:12	12:20	5	
continue	12:12	12:20	6	
water	14:8	0:0	4	entry
op	14:13	0:0	4	->
water	14:15	0:0	4	reject
op	14:22	0:0	4	=
water	14:24	0:0	4	true
water	14:28	0:0	4	;
water	15:4	0:0	4	}
call	16:4	16:31	2	vlc_mutex_unlock
arg	16:21	16:31	3	&sys->lock
op	16:21	0:0	4	&
water	16:22	0:0	4	sys
op	16:25	0:0	4	->
water	16:27	0:0	4	lock
water	16:32	0:0	2	;

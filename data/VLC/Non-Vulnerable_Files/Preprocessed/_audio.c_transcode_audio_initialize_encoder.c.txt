func	2:0	41:0	0	static int	transcode_audio_initialize_encoder
params	2:45	0:0	1	
param	2:47	2:71	2	sout_stream_id_sys_t *	id
param	2:73	2:97	2	sout_stream_t *	p_stream
stmnts	0:0	40:22	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
call	6:4	7:51	2	es_format_Init
arg	6:20	6:42	3	&id->p_encoder->fmt_in
op	6:20	0:0	4	&
water	6:21	0:0	4	id
op	6:23	0:0	4	->
water	6:25	0:0	4	p_encoder
op	6:34	0:0	4	->
water	6:36	0:0	4	fmt_in
arg	6:44	6:71	3	id->p_decoder->fmt_in.i_cat
water	6:44	0:0	4	id
op	6:46	0:0	4	->
water	6:48	0:0	4	p_decoder
op	6:57	0:0	4	->
water	6:59	0:0	4	fmt_in
op	6:65	0:0	4	.
water	6:66	0:0	4	i_cat
arg	7:20	7:51	3	id->p_decoder->fmt_out.i_codec
water	7:20	0:0	4	id
op	7:22	0:0	4	->
water	7:24	0:0	4	p_decoder
op	7:33	0:0	4	->
water	7:35	0:0	4	fmt_out
op	7:42	0:0	4	.
water	7:43	0:0	4	i_codec
water	7:52	0:0	2	;
water	8:4	0:0	2	id
op	8:6	0:0	2	->
water	8:8	0:0	2	p_encoder
op	8:17	0:0	2	->
water	8:19	0:0	2	fmt_in
op	8:25	0:0	2	.
water	8:26	0:0	2	audio
op	8:31	0:0	2	.
water	8:32	0:0	2	i_format
op	8:41	0:0	2	=
water	8:43	0:0	2	id
op	8:45	0:0	2	->
water	8:47	0:0	2	p_decoder
op	8:56	0:0	2	->
water	8:58	0:0	2	fmt_out
op	8:65	0:0	2	.
water	8:66	0:0	2	i_codec
water	8:73	0:0	2	;
water	9:4	0:0	2	id
op	9:6	0:0	2	->
water	9:8	0:0	2	p_encoder
op	9:17	0:0	2	->
water	9:19	0:0	2	fmt_in
op	9:25	0:0	2	.
water	9:26	0:0	2	audio
op	9:31	0:0	2	.
water	9:32	0:0	2	i_rate
op	9:39	0:0	2	=
water	9:41	0:0	2	id
op	9:43	0:0	2	->
water	9:45	0:0	2	p_encoder
op	9:54	0:0	2	->
water	9:56	0:0	2	fmt_out
op	9:63	0:0	2	.
water	9:64	0:0	2	audio
op	9:69	0:0	2	.
water	9:70	0:0	2	i_rate
water	9:76	0:0	2	;
water	10:4	0:0	2	id
op	10:6	0:0	2	->
water	10:8	0:0	2	p_encoder
op	10:17	0:0	2	->
water	10:19	0:0	2	fmt_in
op	10:25	0:0	2	.
water	10:26	0:0	2	audio
op	10:31	0:0	2	.
water	10:32	0:0	2	i_physical_channels
op	10:52	0:0	2	=
water	11:8	0:0	2	id
op	11:10	0:0	2	->
water	11:12	0:0	2	p_encoder
op	11:21	0:0	2	->
water	11:23	0:0	2	fmt_out
op	11:30	0:0	2	.
water	11:31	0:0	2	audio
op	11:36	0:0	2	.
water	11:37	0:0	2	i_physical_channels
water	11:56	0:0	2	;
call	12:4	12:53	2	aout_FormatPrepare
arg	12:24	12:53	3	&id->p_encoder->fmt_in.audio
op	12:24	0:0	4	&
water	12:25	0:0	4	id
op	12:27	0:0	4	->
water	12:29	0:0	4	p_encoder
op	12:38	0:0	4	->
water	12:40	0:0	4	fmt_in
op	12:46	0:0	4	.
water	12:47	0:0	4	audio
water	12:54	0:0	2	;
water	13:4	0:0	2	id
op	13:6	0:0	2	->
water	13:8	0:0	2	p_encoder
op	13:17	0:0	2	->
water	13:19	0:0	2	p_cfg
op	13:25	0:0	2	=
water	13:27	0:0	2	p_stream
op	13:35	0:0	2	->
water	13:37	0:0	2	p_sys
op	13:42	0:0	2	->
water	13:44	0:0	2	p_audio_cfg
water	13:55	0:0	2	;
water	14:4	0:0	2	id
op	14:6	0:0	2	->
water	14:8	0:0	2	p_encoder
op	14:17	0:0	2	->
water	14:19	0:0	2	p_module
op	14:28	0:0	2	=
call	15:8	15:69	2	module_need
arg	15:21	15:34	3	id->p_encoder
water	15:21	0:0	4	id
op	15:23	0:0	4	->
water	15:25	0:0	4	p_encoder
arg	15:36	15:45	3	"encoder"
water	15:36	0:0	4	"encoder"
arg	15:47	15:62	3	p_sys->psz_aenc
water	15:47	0:0	4	p_sys
op	15:52	0:0	4	->
water	15:54	0:0	4	psz_aenc
arg	15:64	15:69	3	true
water	15:64	0:0	4	true
water	15:70	0:0	2	;
if	17:4	26:4	2	(! id -> p_encoder -> p_module && p_sys -> i_acodec)
cond	17:8	17:43	3	! id -> p_encoder -> p_module && p_sys -> i_acodec
op	17:8	0:0	4	!
water	17:9	0:0	4	id
op	17:11	0:0	4	->
water	17:13	0:0	4	p_encoder
op	17:22	0:0	4	->
water	17:24	0:0	4	p_module
op	17:33	0:0	4	&&
water	17:36	0:0	4	p_sys
op	17:41	0:0	4	->
water	17:43	0:0	4	i_acodec
stmts	18:4	26:4	3	
water	18:4	0:0	4	{
call	19:8	22:42	4	msg_Err
arg	19:17	19:25	5	p_stream
water	19:17	0:0	6	p_stream
arg	19:27	20:82	5	"cannot find audio encoder (module:%s fourcc:%4.4s). ""Take a look few lines earlier to see possible reason."
water	19:27	0:0	6	"cannot find audio encoder (module:%s fourcc:%4.4s). "
water	20:27	0:0	6	"Take a look few lines earlier to see possible reason."
arg	21:17	21:58	5	p_sys->psz_aenc?p_sys->psz_aenc:"any"
water	21:17	0:0	6	p_sys
op	21:22	0:0	6	->
water	21:24	0:0	6	psz_aenc
water	21:33	0:0	6	?
water	21:35	0:0	6	p_sys
op	21:40	0:0	6	->
water	21:42	0:0	6	psz_aenc
water	21:51	0:0	6	:
water	21:53	0:0	6	"any"
arg	22:17	22:42	5	(char*)&p_sys->i_acodec
water	22:17	0:0	6	(
water	22:18	0:0	6	char
op	22:23	0:0	6	*
water	22:24	0:0	6	)
op	22:25	0:0	6	&
water	22:26	0:0	6	p_sys
op	22:31	0:0	6	->
water	22:33	0:0	6	i_acodec
water	22:43	0:0	4	;
call	23:8	23:62	4	module_unneed
arg	23:23	23:36	5	id->p_decoder
water	23:23	0:0	6	id
op	23:25	0:0	6	->
water	23:27	0:0	6	p_decoder
arg	23:38	23:62	5	id->p_decoder->p_module
water	23:38	0:0	6	id
op	23:40	0:0	6	->
water	23:42	0:0	6	p_decoder
op	23:51	0:0	6	->
water	23:53	0:0	6	p_module
water	23:63	0:0	4	;
water	24:8	0:0	4	id
op	24:10	0:0	4	->
water	24:12	0:0	4	p_decoder
op	24:21	0:0	4	->
water	24:23	0:0	4	p_module
op	24:32	0:0	4	=
water	24:34	0:0	4	NULL
water	24:38	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
water	27:4	0:0	2	id
op	27:6	0:0	2	->
water	27:8	0:0	2	p_encoder
op	27:17	0:0	2	->
water	27:19	0:0	2	fmt_out
op	27:26	0:0	2	.
water	27:27	0:0	2	i_codec
op	27:35	0:0	2	=
call	28:8	28:70	2	vlc_fourcc_GetCodec
arg	28:29	28:37	3	AUDIO_ES
water	28:29	0:0	4	AUDIO_ES
arg	28:39	28:70	3	id->p_encoder->fmt_out.i_codec
water	28:39	0:0	4	id
op	28:41	0:0	4	->
water	28:43	0:0	4	p_encoder
op	28:52	0:0	4	->
water	28:54	0:0	4	fmt_out
op	28:61	0:0	4	.
water	28:62	0:0	4	i_codec
water	28:71	0:0	2	;
water	30:4	0:0	2	id
op	30:6	0:0	2	->
water	30:8	0:0	2	p_encoder
op	30:17	0:0	2	->
water	30:19	0:0	2	fmt_in
op	30:25	0:0	2	.
water	30:26	0:0	2	audio
op	30:31	0:0	2	.
water	30:32	0:0	2	i_format
op	30:41	0:0	2	=
water	30:43	0:0	2	id
op	30:45	0:0	2	->
water	30:47	0:0	2	p_encoder
op	30:56	0:0	2	->
water	30:58	0:0	2	fmt_in
op	30:64	0:0	2	.
water	30:65	0:0	2	i_codec
water	30:72	0:0	2	;
if	31:4	38:4	2	(! id -> p_encoder -> fmt_in . audio . i_physical_channels || ! id -> p_encoder -> fmt_in . audio . i_original_channels)
cond	31:8	32:37	3	! id -> p_encoder -> fmt_in . audio . i_physical_channels || ! id -> p_encoder -> fmt_in . audio . i_original_channels
op	31:8	0:0	4	!
water	31:9	0:0	4	id
op	31:11	0:0	4	->
water	31:13	0:0	4	p_encoder
op	31:22	0:0	4	->
water	31:24	0:0	4	fmt_in
op	31:30	0:0	4	.
water	31:31	0:0	4	audio
op	31:36	0:0	4	.
water	31:37	0:0	4	i_physical_channels
op	32:5	0:0	4	||
op	32:8	0:0	4	!
water	32:9	0:0	4	id
op	32:11	0:0	4	->
water	32:13	0:0	4	p_encoder
op	32:22	0:0	4	->
water	32:24	0:0	4	fmt_in
op	32:30	0:0	4	.
water	32:31	0:0	4	audio
op	32:36	0:0	4	.
water	32:37	0:0	4	i_original_channels
stmts	33:4	38:4	3	
water	33:4	0:0	4	{
if	34:8	37:78	4	(id -> p_encoder -> fmt_in . audio . i_channels < ( sizeof ( pi_channels_maps ) / sizeof ( * pi_channels_maps ) ))
cond	34:12	34:106	5	id -> p_encoder -> fmt_in . audio . i_channels < ( sizeof ( pi_channels_maps ) / sizeof ( * pi_channels_maps ) )
water	34:12	0:0	6	id
op	34:14	0:0	6	->
water	34:16	0:0	6	p_encoder
op	34:25	0:0	6	->
water	34:27	0:0	6	fmt_in
op	34:33	0:0	6	.
water	34:34	0:0	6	audio
op	34:39	0:0	6	.
water	34:40	0:0	6	i_channels
op	34:51	0:0	6	<
water	34:53	0:0	6	(
op	34:54	0:0	6	sizeof
water	34:60	0:0	6	(
water	34:61	0:0	6	pi_channels_maps
water	34:77	0:0	6	)
op	34:79	0:0	6	/
op	34:81	0:0	6	sizeof
water	34:87	0:0	6	(
op	34:88	0:0	6	*
water	34:89	0:0	6	pi_channels_maps
water	34:105	0:0	6	)
water	34:106	0:0	6	)
stmts	35:12	37:78	5	
water	35:12	0:0	6	id
op	35:14	0:0	6	->
water	35:16	0:0	6	p_encoder
op	35:25	0:0	6	->
water	35:27	0:0	6	fmt_in
op	35:33	0:0	6	.
water	35:34	0:0	6	audio
op	35:39	0:0	6	.
water	35:40	0:0	6	i_physical_channels
op	35:60	0:0	6	=
water	36:12	0:0	6	id
op	36:14	0:0	6	->
water	36:16	0:0	6	p_encoder
op	36:25	0:0	6	->
water	36:27	0:0	6	fmt_in
op	36:33	0:0	6	.
water	36:34	0:0	6	audio
op	36:39	0:0	6	.
water	36:40	0:0	6	i_original_channels
op	36:60	0:0	6	=
water	37:22	0:0	6	pi_channels_maps
op	37:38	0:0	6	[
water	37:39	0:0	6	id
op	37:41	0:0	6	->
water	37:43	0:0	6	p_encoder
op	37:52	0:0	6	->
water	37:54	0:0	6	fmt_in
op	37:60	0:0	6	.
water	37:61	0:0	6	audio
op	37:66	0:0	6	.
water	37:67	0:0	6	i_channels
op	37:77	0:0	6	]
water	37:78	0:0	6	;
water	38:4	0:0	4	}
call	39:4	39:53	2	aout_FormatPrepare
arg	39:24	39:53	3	&id->p_encoder->fmt_in.audio
op	39:24	0:0	4	&
water	39:25	0:0	4	id
op	39:27	0:0	4	->
water	39:29	0:0	4	p_encoder
op	39:38	0:0	4	->
water	39:40	0:0	4	fmt_in
op	39:46	0:0	4	.
water	39:47	0:0	4	audio
water	39:54	0:0	2	;
return	40:4	40:22	2	VLC_SUCCESS
water	40:11	0:0	3	VLC_SUCCESS

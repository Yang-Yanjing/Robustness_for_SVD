func	2:0	71:0	0	static int	ReadDescChunk
params	2:24	0:0	1	
param	2:26	2:43	2	demux_t *	p_demux
stmnts	0:0	70:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	const uint8_t	*p_peek
if	6:4	9:4	2	(stream_Peek (p_demux -> s ,& p_peek ,8 + 6 * 4 ) < ( 8 + 6 * 4 ))
cond	6:9	6:69	3	stream_Peek (p_demux -> s ,& p_peek ,8 + 6 * 4 ) < ( 8 + 6 * 4 )
call	6:9	6:53	4	stream_Peek
arg	6:22	6:32	5	p_demux->s
water	6:22	0:0	6	p_demux
op	6:29	0:0	6	->
water	6:31	0:0	6	s
arg	6:34	6:41	5	&p_peek
op	6:34	0:0	6	&
water	6:35	0:0	6	p_peek
arg	6:43	6:53	5	8+6*4
water	6:43	0:0	6	8
op	6:45	0:0	6	+
water	6:47	0:0	6	6
op	6:49	0:0	6	*
water	6:51	0:0	6	4
op	6:55	0:0	4	<
water	6:57	0:0	4	(
water	6:59	0:0	4	8
op	6:61	0:0	4	+
water	6:63	0:0	4	6
op	6:65	0:0	4	*
water	6:67	0:0	4	4
water	6:69	0:0	4	)
stmts	7:4	9:4	3	
water	7:4	0:0	4	{
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
decl	10:4	10:49	2	vlc_fourcc_t	i_fmt
op	10:23	0:0	2	=
call	10:25	10:48	3	ReadFOURCC
arg	10:37	10:48	4	p_peek+8
water	10:37	0:0	5	p_peek
op	10:44	0:0	5	+
water	10:46	0:0	5	8
decl	11:4	11:49	2	uint32_t	i_fmt_flags
op	11:25	0:0	2	=
call	11:27	11:48	3	GetDWBE
arg	11:36	11:48	4	p_peek+12
water	11:36	0:0	5	p_peek
op	11:43	0:0	5	+
water	11:45	0:0	5	12
decl	12:4	12:56	2	uint32_t	i_bits_per_channel
op	12:32	0:0	2	=
call	12:34	12:55	3	GetDWBE
arg	12:43	12:55	4	p_peek+28
water	12:43	0:0	5	p_peek
op	12:50	0:0	5	+
water	12:52	0:0	5	28
decl	13:4	13:56	2	uint32_t	i_bytes_per_packet
op	13:32	0:0	2	=
call	13:34	13:55	3	GetDWBE
arg	13:43	13:55	4	p_peek+16
water	13:43	0:0	5	p_peek
op	13:50	0:0	5	+
water	13:52	0:0	5	16
decl	14:4	14:57	2	uint32_t	i_frames_per_packet
op	14:33	0:0	2	=
call	14:35	14:56	3	GetDWBE
arg	14:44	14:56	4	p_peek+20
water	14:44	0:0	5	p_peek
op	14:51	0:0	5	+
water	14:53	0:0	5	20
decl	15:4	15:58	2	uint32_t	i_channels_per_frame
op	15:34	0:0	2	=
call	15:36	15:57	3	GetDWBE
arg	15:45	15:57	4	p_peek+24
water	15:45	0:0	5	p_peek
op	15:52	0:0	5	+
water	15:54	0:0	5	24
if	16:4	41:4	2	(i_fmt == VLC_CODEC_DVD_LPCM)
cond	16:8	16:17	3	i_fmt == VLC_CODEC_DVD_LPCM
water	16:8	0:0	4	i_fmt
op	16:14	0:0	4	==
water	16:17	0:0	4	VLC_CODEC_DVD_LPCM
stmts	17:4	41:4	3	
water	17:4	0:0	4	{
if	18:8	22:8	4	(! i_frames_per_packet || ! i_channels_per_frame)
cond	18:12	18:37	5	! i_frames_per_packet || ! i_channels_per_frame
op	18:12	0:0	6	!
water	18:13	0:0	6	i_frames_per_packet
op	18:33	0:0	6	||
op	18:36	0:0	6	!
water	18:37	0:0	6	i_channels_per_frame
stmts	19:8	22:8	5	
water	19:8	0:0	6	{
call	20:12	20:147	6	msg_Err
arg	20:21	20:28	7	p_demux
water	20:21	0:0	8	p_demux
arg	20:30	20:103	7	"Absurd LPCM parameters (frames_per_packet: %u, channels_per_frame: %u)."
water	20:30	0:0	8	"Absurd LPCM parameters (frames_per_packet: %u, channels_per_frame: %u)."
arg	20:105	20:124	7	i_frames_per_packet
water	20:105	0:0	8	i_frames_per_packet
arg	20:126	20:147	7	i_channels_per_frame
water	20:126	0:0	8	i_channels_per_frame
water	20:148	0:0	6	;
return	21:12	21:31	6	VLC_EGENERIC
water	21:19	0:0	7	VLC_EGENERIC
water	22:8	0:0	6	}
decl	23:8	23:117	4	uint32_t	i_unpacked_bits_per_sample
op	23:44	0:0	4	=
water	23:46	0:0	4	(
water	23:48	0:0	4	i_bytes_per_packet
op	23:67	0:0	4	/
water	23:69	0:0	4	i_frames_per_packet
op	23:89	0:0	4	/
water	23:91	0:0	4	i_channels_per_frame
water	23:112	0:0	4	)
op	23:114	0:0	4	*
water	23:116	0:0	4	8
decl	24:8	24:56	4	bool	b_is_float
op	24:24	0:0	4	=
op	24:26	0:0	4	!
op	24:27	0:0	4	!
water	24:28	0:0	4	(
water	24:30	0:0	4	i_fmt_flags
op	24:42	0:0	4	&
water	24:44	0:0	4	(
water	24:46	0:0	4	1
op	24:48	0:0	4	<<
water	24:51	0:0	4	0
water	24:53	0:0	4	)
water	24:55	0:0	4	)
decl	25:8	25:52	4	bool	b_is_be
op	25:21	0:0	4	=
op	25:23	0:0	4	!
water	25:24	0:0	4	(
water	25:26	0:0	4	i_fmt_flags
op	25:38	0:0	4	&
water	25:40	0:0	4	(
water	25:42	0:0	4	1
op	25:44	0:0	4	<<
water	25:47	0:0	4	1
water	25:49	0:0	4	)
water	25:51	0:0	4	)
decl	26:8	26:38	4	vlc_fourcc_t	i_basic_codec
op	26:35	0:0	4	=
water	26:37	0:0	4	0
if	27:8	31:8	4	(! b_is_float)
cond	27:12	27:13	5	! b_is_float
op	27:12	0:0	6	!
water	27:13	0:0	6	b_is_float
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
water	29:12	0:0	6	i_basic_codec
op	29:26	0:0	6	=
water	29:28	0:0	6	b_is_be
water	29:36	0:0	6	?
call	29:38	29:69	6	VLC_FOURCC
arg	29:50	29:53	7	't'
water	29:50	0:0	8	't'
arg	29:55	29:58	7	'w'
water	29:55	0:0	8	'w'
arg	29:60	29:63	7	'o'
water	29:60	0:0	8	'o'
arg	29:65	29:69	7	's'
water	29:65	0:0	8	's'
water	29:71	0:0	6	:
call	29:73	29:104	6	VLC_FOURCC
arg	29:85	29:88	7	's'
water	29:85	0:0	8	's'
arg	29:90	29:93	7	'o'
water	29:90	0:0	8	'o'
arg	29:95	29:98	7	'w'
water	29:95	0:0	8	'w'
arg	29:100	29:104	7	't'
water	29:100	0:0	8	't'
water	29:105	0:0	6	;
call	30:12	30:120	6	es_format_Init
arg	30:28	30:39	7	&p_sys->fmt
op	30:28	0:0	8	&
water	30:29	0:0	8	p_sys
op	30:34	0:0	8	->
water	30:36	0:0	8	fmt
arg	30:41	30:49	7	AUDIO_ES
water	30:41	0:0	8	AUDIO_ES
arg	30:51	30:120	7	vlc_fourcc_GetCodecAudio(i_basic_codec,i_unpacked_bits_per_sample)
call	30:51	30:119	8	vlc_fourcc_GetCodecAudio
arg	30:77	30:90	9	i_basic_codec
water	30:77	0:0	10	i_basic_codec
arg	30:92	30:119	9	i_unpacked_bits_per_sample
water	30:92	0:0	10	i_unpacked_bits_per_sample
water	30:121	0:0	6	;
water	31:8	0:0	6	}
else	32:8	40:8	4
stmts	33:8	40:8	5	
water	33:8	0:0	6	{
if	34:12	35:73	6	(i_bits_per_channel == 32)
cond	34:16	34:38	7	i_bits_per_channel == 32
water	34:16	0:0	8	i_bits_per_channel
op	34:35	0:0	8	==
water	34:38	0:0	8	32
stmts	35:16	35:73	7	
water	35:16	0:0	8	i_basic_codec
op	35:30	0:0	8	=
water	35:32	0:0	8	b_is_be
water	35:40	0:0	8	?
water	35:42	0:0	8	VLC_CODEC_F32B
water	35:57	0:0	8	:
water	35:59	0:0	8	VLC_CODEC_F32L
water	35:73	0:0	8	;
else	36:12	37:73	6
stmts	36:17	37:73	7	
if	36:17	37:73	8	(i_bits_per_channel == 64)
cond	36:21	36:43	9	i_bits_per_channel == 64
water	36:21	0:0	10	i_bits_per_channel
op	36:40	0:0	10	==
water	36:43	0:0	10	64
stmts	37:16	37:73	9	
water	37:16	0:0	10	i_basic_codec
op	37:30	0:0	10	=
water	37:32	0:0	10	b_is_be
water	37:40	0:0	10	?
water	37:42	0:0	10	VLC_CODEC_F64B
water	37:57	0:0	10	:
water	37:59	0:0	10	VLC_CODEC_F64L
water	37:73	0:0	10	;
if	38:12	39:117	6	(i_basic_codec)
cond	38:16	38:16	7	i_basic_codec
water	38:16	0:0	8	i_basic_codec
stmts	39:16	39:117	7	
call	39:16	39:116	8	es_format_Init
arg	39:32	39:43	9	&p_sys->fmt
op	39:32	0:0	10	&
water	39:33	0:0	10	p_sys
op	39:38	0:0	10	->
water	39:40	0:0	10	fmt
arg	39:45	39:53	9	AUDIO_ES
water	39:45	0:0	10	AUDIO_ES
arg	39:55	39:116	9	vlc_fourcc_GetCodecAudio(i_basic_codec,i_bits_per_channel)
call	39:55	39:115	10	vlc_fourcc_GetCodecAudio
arg	39:81	39:94	11	i_basic_codec
water	39:81	0:0	12	i_basic_codec
arg	39:96	39:115	11	i_bits_per_channel
water	39:96	0:0	12	i_bits_per_channel
water	39:117	0:0	8	;
water	40:8	0:0	6	}
water	41:4	0:0	4	}
else	42:4	50:4	2
stmts	42:9	50:4	3	
if	42:9	50:4	4	(i_fmt ==VLC_FOURCC ('a' ,'a' ,'c' ,' ' ))
cond	42:13	42:53	5	i_fmt ==VLC_FOURCC ('a' ,'a' ,'c' ,' ' )
water	42:13	0:0	6	i_fmt
op	42:19	0:0	6	==
call	42:22	42:53	6	VLC_FOURCC
arg	42:34	42:37	7	'a'
water	42:34	0:0	8	'a'
arg	42:39	42:42	7	'a'
water	42:39	0:0	8	'a'
arg	42:44	42:47	7	'c'
water	42:44	0:0	8	'c'
arg	42:49	42:53	7	' '
water	42:49	0:0	8	' '
stmts	43:4	50:4	5	
water	43:4	0:0	6	{
decl	44:8	44:54	6	const uint32_t	kMP4Audio_AAC_LC_ObjectType
op	44:51	0:0	6	=
water	44:53	0:0	6	2
if	45:8	48:8	6	(i_fmt_flags != kMP4Audio_AAC_LC_ObjectType)
cond	45:12	45:27	7	i_fmt_flags != kMP4Audio_AAC_LC_ObjectType
water	45:12	0:0	8	i_fmt_flags
op	45:24	0:0	8	!=
water	45:27	0:0	8	kMP4Audio_AAC_LC_ObjectType
stmts	46:8	48:8	7	
water	46:8	0:0	8	{
call	47:12	47:153	8	msg_Warn
arg	47:22	47:29	9	p_demux
water	47:22	0:0	10	p_demux
arg	47:31	47:139	9	"The only documented format flag for aac is 2 (kMP4Audio_AAC_LC_ObjectType), but is %i. Continuing anyways."
water	47:31	0:0	10	"The only documented format flag for aac is 2 (kMP4Audio_AAC_LC_ObjectType), but is %i. Continuing anyways."
arg	47:141	47:153	9	i_fmt_flags
water	47:141	0:0	10	i_fmt_flags
water	47:154	0:0	8	;
water	48:8	0:0	8	}
call	49:8	49:92	6	es_format_Init
arg	49:24	49:35	7	&p_sys->fmt
op	49:24	0:0	8	&
water	49:25	0:0	8	p_sys
op	49:30	0:0	8	->
water	49:32	0:0	8	fmt
arg	49:37	49:45	7	AUDIO_ES
water	49:37	0:0	8	AUDIO_ES
arg	49:47	49:92	7	vlc_fourcc_GetCodecAudio(VLC_CODEC_MP4A,0)
call	49:47	49:91	8	vlc_fourcc_GetCodecAudio
arg	49:73	49:87	9	VLC_CODEC_MP4A
water	49:73	0:0	10	VLC_CODEC_MP4A
arg	49:89	49:91	9	0
water	49:89	0:0	10	0
water	49:93	0:0	6	;
water	50:4	0:0	6	}
else	51:4	54:4	2
stmts	52:4	54:4	3	
water	52:4	0:0	4	{
call	53:8	53:83	4	es_format_Init
arg	53:24	53:35	5	&p_sys->fmt
op	53:24	0:0	6	&
water	53:25	0:0	6	p_sys
op	53:30	0:0	6	->
water	53:32	0:0	6	fmt
arg	53:37	53:45	5	AUDIO_ES
water	53:37	0:0	6	AUDIO_ES
arg	53:47	53:83	5	vlc_fourcc_GetCodecAudio(i_fmt,0)
call	53:47	53:82	6	vlc_fourcc_GetCodecAudio
arg	53:73	53:78	7	i_fmt
water	53:73	0:0	8	i_fmt
arg	53:80	53:82	7	0
water	53:80	0:0	8	0
water	53:84	0:0	4	;
water	54:4	0:0	4	}
if	55:4	59:4	2	(! p_sys -> fmt . i_codec)
cond	55:8	55:20	3	! p_sys -> fmt . i_codec
op	55:8	0:0	4	!
water	55:9	0:0	4	p_sys
op	55:14	0:0	4	->
water	55:16	0:0	4	fmt
op	55:19	0:0	4	.
water	55:20	0:0	4	i_codec
stmts	56:4	59:4	3	
water	56:4	0:0	4	{
call	57:8	57:54	4	msg_Err
arg	57:17	57:24	5	p_demux
water	57:17	0:0	6	p_demux
arg	57:26	57:54	5	"could not determine codec"
water	57:26	0:0	6	"could not determine codec"
water	57:55	0:0	4	;
return	58:8	58:27	4	VLC_EGENERIC
water	58:15	0:0	5	VLC_EGENERIC
water	59:4	0:0	4	}
decl	60:4	60:46	2	double	d_rate
op	60:18	0:0	2	=
call	60:20	60:45	3	round
arg	60:27	60:45	4	GetDBLBE(p_peek)
call	60:27	60:44	5	GetDBLBE
arg	60:37	60:44	6	p_peek
water	60:37	0:0	7	p_peek
if	61:4	62:27	2	(d_rate <= 0 || d_rate > UINT_MAX)
cond	61:8	61:32	3	d_rate <= 0 || d_rate > UINT_MAX
water	61:8	0:0	4	d_rate
op	61:15	0:0	4	<=
water	61:18	0:0	4	0
op	61:20	0:0	4	||
water	61:23	0:0	4	d_rate
op	61:30	0:0	4	>
water	61:32	0:0	4	UINT_MAX
stmts	62:8	62:27	3	
return	62:8	62:27	4	VLC_EGENERIC
water	62:15	0:0	5	VLC_EGENERIC
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	fmt
op	63:14	0:0	2	.
water	63:15	0:0	2	audio
op	63:20	0:0	2	.
water	63:21	0:0	2	i_rate
op	63:28	0:0	2	=
water	63:30	0:0	2	(
water	63:31	0:0	2	unsigned
water	63:40	0:0	2	int
water	63:43	0:0	2	)
call	63:44	63:59	2	lround
arg	63:52	63:59	3	d_rate
water	63:52	0:0	4	d_rate
water	63:60	0:0	2	;
water	64:4	0:0	2	p_sys
op	64:9	0:0	2	->
water	64:11	0:0	2	fmt
op	64:14	0:0	2	.
water	64:15	0:0	2	audio
op	64:20	0:0	2	.
water	64:21	0:0	2	i_channels
op	64:32	0:0	2	=
water	64:34	0:0	2	i_channels_per_frame
water	64:54	0:0	2	;
water	65:4	0:0	2	p_sys
op	65:9	0:0	2	->
water	65:11	0:0	2	fmt
op	65:14	0:0	2	.
water	65:15	0:0	2	audio
op	65:20	0:0	2	.
water	65:21	0:0	2	i_bytes_per_frame
op	65:39	0:0	2	=
water	65:41	0:0	2	i_bytes_per_packet
water	65:59	0:0	2	;
water	66:4	0:0	2	p_sys
op	66:9	0:0	2	->
water	66:11	0:0	2	fmt
op	66:14	0:0	2	.
water	66:15	0:0	2	audio
op	66:20	0:0	2	.
water	66:21	0:0	2	i_frame_length
op	66:36	0:0	2	=
water	66:38	0:0	2	i_frames_per_packet
water	66:57	0:0	2	;
water	67:4	0:0	2	p_sys
op	67:9	0:0	2	->
water	67:11	0:0	2	fmt
op	67:14	0:0	2	.
water	67:15	0:0	2	audio
op	67:20	0:0	2	.
water	67:21	0:0	2	i_bitspersample
op	67:37	0:0	2	=
water	67:39	0:0	2	i_bits_per_channel
water	67:57	0:0	2	;
water	68:4	0:0	2	p_sys
op	68:9	0:0	2	->
water	68:11	0:0	2	fmt
op	68:14	0:0	2	.
water	68:15	0:0	2	audio
op	68:20	0:0	2	.
water	68:21	0:0	2	i_blockalign
op	68:34	0:0	2	=
water	68:36	0:0	2	i_bytes_per_packet
water	68:54	0:0	2	;
water	69:4	0:0	2	p_sys
op	69:9	0:0	2	->
water	69:11	0:0	2	fmt
op	69:14	0:0	2	.
water	69:15	0:0	2	i_bitrate
op	69:25	0:0	2	=
water	69:27	0:0	2	i_bits_per_channel
op	69:46	0:0	2	*
water	69:48	0:0	2	p_sys
op	69:53	0:0	2	->
water	69:55	0:0	2	fmt
op	69:58	0:0	2	.
water	69:59	0:0	2	audio
op	69:64	0:0	2	.
water	69:65	0:0	2	i_rate
op	69:72	0:0	2	*
water	69:74	0:0	2	i_channels_per_frame
water	69:94	0:0	2	;
return	70:4	70:22	2	VLC_SUCCESS
water	70:11	0:0	3	VLC_SUCCESS

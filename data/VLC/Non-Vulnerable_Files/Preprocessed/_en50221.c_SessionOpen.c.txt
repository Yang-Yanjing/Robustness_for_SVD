func	2:0	72:0	0	static void	SessionOpen
params	2:23	0:0	1	
param	2:25	2:38	2	cam_t *	p_cam
param	2:40	2:54	2	uint8_t	i_slot
param	3:25	3:40	2	uint8_t *	p_spdu
param	3:42	3:53	2	int	i_size
stmnts	5:4	71:4	1	
call	5:4	5:23	2	VLC_UNUSED
arg	5:16	5:23	3	i_size
water	5:16	0:0	4	i_size
water	5:24	0:0	2	;
decl	6:4	6:20	2	int	i_session_id
decl	7:4	7:53	2	int	i_resource_id
op	7:22	0:0	2	=
call	7:24	7:52	3	ResourceIdToInt
arg	7:41	7:52	4	&p_spdu[2]
op	7:41	0:0	5	&
water	7:42	0:0	5	p_spdu
op	7:48	0:0	5	[
water	7:49	0:0	5	2
op	7:50	0:0	5	]
decl	8:4	8:26	2	uint8_t	p_response[16]
decl	9:4	9:35	2	int	i_status
op	9:17	0:0	2	=
water	9:19	0:0	2	SS_NOT_ALLOCATED
decl	10:4	10:17	2	uint8_t	i_tag
for	11:4	15:4	2	(i_session_id = 1 ;i_session_id <= MAX_SESSIONS;i_session_id ++)
forinit	11:10	11:26	3	i_session_id = 1 ;
water	11:10	0:0	4	i_session_id
op	11:23	0:0	4	=
water	11:25	0:0	4	1
water	11:26	0:0	4	;
cond	11:28	11:44	3	i_session_id <= MAX_SESSIONS
water	11:28	0:0	4	i_session_id
op	11:41	0:0	4	<=
water	11:44	0:0	4	MAX_SESSIONS
forexpr	11:58	11:70	3	i_session_id ++
water	11:58	0:0	4	i_session_id
op	11:70	0:0	4	++
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
if	13:8	14:17	4	(! p_cam -> p_sessions [ i_session_id - 1 ] . i_resource_id)
cond	13:13	13:50	5	! p_cam -> p_sessions [ i_session_id - 1 ] . i_resource_id
op	13:13	0:0	6	!
water	13:14	0:0	6	p_cam
op	13:19	0:0	6	->
water	13:21	0:0	6	p_sessions
op	13:31	0:0	6	[
water	13:32	0:0	6	i_session_id
op	13:45	0:0	6	-
water	13:47	0:0	6	1
op	13:48	0:0	6	]
op	13:49	0:0	6	.
water	13:50	0:0	6	i_resource_id
stmts	14:12	14:17	5	
break	14:12	14:17	6	
water	15:4	0:0	4	}
if	16:4	20:4	2	(i_session_id > MAX_SESSIONS)
cond	16:9	16:24	3	i_session_id > MAX_SESSIONS
water	16:9	0:0	4	i_session_id
op	16:22	0:0	4	>
water	16:24	0:0	4	MAX_SESSIONS
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:51	4	msg_Err
arg	18:17	18:27	5	p_cam->obj
water	18:17	0:0	6	p_cam
op	18:22	0:0	6	->
water	18:24	0:0	6	obj
arg	18:29	18:51	5	"too many sessions !"
water	18:29	0:0	6	"too many sessions !"
water	18:52	0:0	4	;
return	19:8	19:14	4	
water	20:4	0:0	4	}
water	21:4	0:0	2	p_cam
op	21:9	0:0	2	->
water	21:11	0:0	2	p_sessions
op	21:21	0:0	2	[
water	21:22	0:0	2	i_session_id
op	21:35	0:0	2	-
water	21:37	0:0	2	1
op	21:38	0:0	2	]
op	21:39	0:0	2	.
water	21:40	0:0	2	i_slot
op	21:47	0:0	2	=
water	21:49	0:0	2	i_slot
water	21:55	0:0	2	;
water	22:4	0:0	2	p_cam
op	22:9	0:0	2	->
water	22:11	0:0	2	p_sessions
op	22:21	0:0	2	[
water	22:22	0:0	2	i_session_id
op	22:35	0:0	2	-
water	22:37	0:0	2	1
op	22:38	0:0	2	]
op	22:39	0:0	2	.
water	22:40	0:0	2	i_resource_id
op	22:54	0:0	2	=
water	22:56	0:0	2	i_resource_id
water	22:69	0:0	2	;
water	23:4	0:0	2	p_cam
op	23:9	0:0	2	->
water	23:11	0:0	2	p_sessions
op	23:21	0:0	2	[
water	23:22	0:0	2	i_session_id
op	23:35	0:0	2	-
water	23:37	0:0	2	1
op	23:38	0:0	2	]
op	23:39	0:0	2	.
water	23:40	0:0	2	pf_close
op	23:49	0:0	2	=
water	23:51	0:0	2	NULL
water	23:55	0:0	2	;
water	24:4	0:0	2	p_cam
op	24:9	0:0	2	->
water	24:11	0:0	2	p_sessions
op	24:21	0:0	2	[
water	24:22	0:0	2	i_session_id
op	24:35	0:0	2	-
water	24:37	0:0	2	1
op	24:38	0:0	2	]
op	24:39	0:0	2	.
water	24:40	0:0	2	pf_manage
op	24:50	0:0	2	=
water	24:52	0:0	2	NULL
water	24:56	0:0	2	;
if	25:4	32:4	2	(i_resource_id == RI_RESOURCE_MANAGER || i_resource_id == RI_APPLICATION_INFORMATION || i_resource_id == RI_CONDITIONAL_ACCESS_SUPPORT || i_resource_id == RI_DATE_TIME || i_resource_id == RI_MMI)
cond	25:9	29:30	3	i_resource_id == RI_RESOURCE_MANAGER || i_resource_id == RI_APPLICATION_INFORMATION || i_resource_id == RI_CONDITIONAL_ACCESS_SUPPORT || i_resource_id == RI_DATE_TIME || i_resource_id == RI_MMI
water	25:9	0:0	4	i_resource_id
op	25:23	0:0	4	==
water	25:26	0:0	4	RI_RESOURCE_MANAGER
op	26:10	0:0	4	||
water	26:13	0:0	4	i_resource_id
op	26:27	0:0	4	==
water	26:30	0:0	4	RI_APPLICATION_INFORMATION
op	27:10	0:0	4	||
water	27:13	0:0	4	i_resource_id
op	27:27	0:0	4	==
water	27:30	0:0	4	RI_CONDITIONAL_ACCESS_SUPPORT
op	28:10	0:0	4	||
water	28:13	0:0	4	i_resource_id
op	28:27	0:0	4	==
water	28:30	0:0	4	RI_DATE_TIME
op	29:10	0:0	4	||
water	29:13	0:0	4	i_resource_id
op	29:27	0:0	4	==
water	29:30	0:0	4	RI_MMI
stmts	30:4	32:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	i_status
op	31:17	0:0	4	=
water	31:19	0:0	4	SS_OK
water	31:24	0:0	4	;
water	32:4	0:0	4	}
water	33:4	0:0	2	p_response
op	33:14	0:0	2	[
water	33:15	0:0	2	0
op	33:16	0:0	2	]
op	33:18	0:0	2	=
water	33:20	0:0	2	ST_OPEN_SESSION_RESPONSE
water	33:44	0:0	2	;
water	34:4	0:0	2	p_response
op	34:14	0:0	2	[
water	34:15	0:0	2	1
op	34:16	0:0	2	]
op	34:18	0:0	2	=
water	34:20	0:0	2	0
water	34:21	0:0	2	x7
water	34:23	0:0	2	;
water	35:4	0:0	2	p_response
op	35:14	0:0	2	[
water	35:15	0:0	2	2
op	35:16	0:0	2	]
op	35:18	0:0	2	=
water	35:20	0:0	2	i_status
water	35:28	0:0	2	;
water	36:4	0:0	2	p_response
op	36:14	0:0	2	[
water	36:15	0:0	2	3
op	36:16	0:0	2	]
op	36:18	0:0	2	=
water	36:20	0:0	2	p_spdu
op	36:26	0:0	2	[
water	36:27	0:0	2	2
op	36:28	0:0	2	]
water	36:29	0:0	2	;
water	37:4	0:0	2	p_response
op	37:14	0:0	2	[
water	37:15	0:0	2	4
op	37:16	0:0	2	]
op	37:18	0:0	2	=
water	37:20	0:0	2	p_spdu
op	37:26	0:0	2	[
water	37:27	0:0	2	3
op	37:28	0:0	2	]
water	37:29	0:0	2	;
water	38:4	0:0	2	p_response
op	38:14	0:0	2	[
water	38:15	0:0	2	5
op	38:16	0:0	2	]
op	38:18	0:0	2	=
water	38:20	0:0	2	p_spdu
op	38:26	0:0	2	[
water	38:27	0:0	2	4
op	38:28	0:0	2	]
water	38:29	0:0	2	;
water	39:4	0:0	2	p_response
op	39:14	0:0	2	[
water	39:15	0:0	2	6
op	39:16	0:0	2	]
op	39:18	0:0	2	=
water	39:20	0:0	2	p_spdu
op	39:26	0:0	2	[
water	39:27	0:0	2	5
op	39:28	0:0	2	]
water	39:29	0:0	2	;
water	40:4	0:0	2	p_response
op	40:14	0:0	2	[
water	40:15	0:0	2	7
op	40:16	0:0	2	]
op	40:18	0:0	2	=
water	40:20	0:0	2	i_session_id
op	40:33	0:0	2	>>
water	40:36	0:0	2	8
water	40:37	0:0	2	;
water	41:4	0:0	2	p_response
op	41:14	0:0	2	[
water	41:15	0:0	2	8
op	41:16	0:0	2	]
op	41:18	0:0	2	=
water	41:20	0:0	2	i_session_id
op	41:33	0:0	2	&
water	41:35	0:0	2	0
water	41:36	0:0	2	xff
water	41:39	0:0	2	;
if	42:4	48:4	2	(TPDUSend (p_cam ,i_slot ,T_DATA_LAST ,p_response ,9 ) != VLC_SUCCESS)
cond	42:9	43:12	3	TPDUSend (p_cam ,i_slot ,T_DATA_LAST ,p_response ,9 ) != VLC_SUCCESS
call	42:9	42:61	4	TPDUSend
arg	42:19	42:24	5	p_cam
water	42:19	0:0	6	p_cam
arg	42:26	42:32	5	i_slot
water	42:26	0:0	6	i_slot
arg	42:34	42:45	5	T_DATA_LAST
water	42:34	0:0	6	T_DATA_LAST
arg	42:47	42:57	5	p_response
water	42:47	0:0	6	p_response
arg	42:59	42:61	5	9
water	42:59	0:0	6	9
op	42:63	0:0	4	!=
water	43:12	0:0	4	VLC_SUCCESS
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
call	45:8	46:70	4	msg_Err
arg	45:17	45:27	5	p_cam->obj
water	45:17	0:0	6	p_cam
op	45:22	0:0	6	->
water	45:24	0:0	6	obj
arg	46:17	46:61	5	"SessionOpen: couldn't send TPDU on slot %d"
water	46:17	0:0	6	"SessionOpen: couldn't send TPDU on slot %d"
arg	46:63	46:70	5	i_slot
water	46:63	0:0	6	i_slot
water	46:71	0:0	4	;
return	47:8	47:14	4	
water	48:4	0:0	4	}
if	49:4	54:4	2	(TPDURecv (p_cam ,i_slot ,& i_tag ,NULL ,NULL ) != VLC_SUCCESS)
cond	49:9	49:58	3	TPDURecv (p_cam ,i_slot ,& i_tag ,NULL ,NULL ) != VLC_SUCCESS
call	49:9	49:53	4	TPDURecv
arg	49:19	49:24	5	p_cam
water	49:19	0:0	6	p_cam
arg	49:26	49:32	5	i_slot
water	49:26	0:0	6	i_slot
arg	49:34	49:40	5	&i_tag
op	49:34	0:0	6	&
water	49:35	0:0	6	i_tag
arg	49:42	49:46	5	NULL
water	49:42	0:0	6	NULL
arg	49:48	49:53	5	NULL
water	49:48	0:0	6	NULL
op	49:55	0:0	4	!=
water	49:58	0:0	4	VLC_SUCCESS
stmts	50:4	54:4	3	
water	50:4	0:0	4	{
call	51:8	52:70	4	msg_Err
arg	51:17	51:27	5	p_cam->obj
water	51:17	0:0	6	p_cam
op	51:22	0:0	6	->
water	51:24	0:0	6	obj
arg	52:17	52:61	5	"SessionOpen: couldn't recv TPDU on slot %d"
water	52:17	0:0	6	"SessionOpen: couldn't recv TPDU on slot %d"
arg	52:63	52:70	5	i_slot
water	52:63	0:0	6	i_slot
water	52:71	0:0	4	;
return	53:8	53:14	4	
water	54:4	0:0	4	}
switch	55:4	71:4	2	(i_resource_id)
cond	55:13	55:13	3	i_resource_id
water	55:13	0:0	4	i_resource_id
stmts	56:4	71:4	3	
water	56:4	0:0	4	{
label	57:4	57:28	4	case RI_RESOURCE_MANAGER :
call	58:8	58:49	4	ResourceManagerOpen
arg	58:29	58:34	5	p_cam
water	58:29	0:0	6	p_cam
arg	58:36	58:49	5	i_session_id
water	58:36	0:0	6	i_session_id
water	58:50	0:0	4	;
break	58:52	58:57	4	
label	59:4	59:35	4	case RI_APPLICATION_INFORMATION :
call	60:8	60:56	4	ApplicationInformationOpen
arg	60:36	60:41	5	p_cam
water	60:36	0:0	6	p_cam
arg	60:43	60:56	5	i_session_id
water	60:43	0:0	6	i_session_id
water	60:57	0:0	4	;
break	60:59	60:64	4	
label	61:4	61:38	4	case RI_CONDITIONAL_ACCESS_SUPPORT :
call	62:8	62:51	4	ConditionalAccessOpen
arg	62:31	62:36	5	p_cam
water	62:31	0:0	6	p_cam
arg	62:38	62:51	5	i_session_id
water	62:38	0:0	6	i_session_id
water	62:52	0:0	4	;
break	62:54	62:59	4	
label	63:4	63:21	4	case RI_DATE_TIME :
call	64:8	64:42	4	DateTimeOpen
arg	64:22	64:27	5	p_cam
water	64:22	0:0	6	p_cam
arg	64:29	64:42	5	i_session_id
water	64:29	0:0	6	i_session_id
water	64:43	0:0	4	;
break	64:45	64:50	4	
label	65:4	65:15	4	case RI_MMI :
call	66:8	66:37	4	MMIOpen
arg	66:17	66:22	5	p_cam
water	66:17	0:0	6	p_cam
arg	66:24	66:37	5	i_session_id
water	66:24	0:0	6	i_session_id
water	66:38	0:0	4	;
break	66:40	66:45	4	
label	67:4	67:24	4	case RI_HOST_CONTROL :
label	68:4	68:11	4	default :
call	69:8	69:73	4	msg_Err
arg	69:17	69:27	5	p_cam->obj
water	69:17	0:0	6	p_cam
op	69:22	0:0	6	->
water	69:24	0:0	6	obj
arg	69:29	69:57	5	"unknown resource id (0x%x)"
water	69:29	0:0	6	"unknown resource id (0x%x)"
arg	69:59	69:73	5	i_resource_id
water	69:59	0:0	6	i_resource_id
water	69:74	0:0	4	;
water	70:8	0:0	4	p_cam
op	70:13	0:0	4	->
water	70:15	0:0	4	p_sessions
op	70:25	0:0	4	[
water	70:26	0:0	4	i_session_id
op	70:39	0:0	4	-
water	70:41	0:0	4	1
op	70:42	0:0	4	]
op	70:43	0:0	4	.
water	70:44	0:0	4	i_resource_id
op	70:58	0:0	4	=
water	70:60	0:0	4	0
water	70:61	0:0	4	;
water	71:4	0:0	4	}

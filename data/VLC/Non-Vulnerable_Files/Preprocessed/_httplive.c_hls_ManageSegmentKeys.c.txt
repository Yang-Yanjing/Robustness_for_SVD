func	2:0	30:0	0	static int	hls_ManageSegmentKeys
params	2:32	0:0	1	
param	2:33	2:44	2	stream_t *	s
param	2:46	2:63	2	hls_stream_t *	hls
stmnts	0:0	29:22	1	
decl	4:4	4:27	2	segment_t	*seg
op	4:21	0:0	2	=
water	4:23	0:0	2	NULL
decl	5:4	5:25	2	segment_t	*prev_seg
decl	6:4	6:54	2	int	count
op	6:22	0:0	2	=
call	6:24	6:53	3	vlc_array_count
arg	6:40	6:53	4	hls->segments
water	6:40	0:0	5	hls
op	6:43	0:0	5	->
water	6:45	0:0	5	segments
for	7:4	28:4	2	( int i = 0 ;i < count;i ++)
forinit	0:0	7:18	3	 int i = 0 ;
decl	7:9	7:18	4	int	i
op	7:15	0:0	4	=
water	7:17	0:0	4	0
cond	7:20	7:24	3	i < count
water	7:20	0:0	4	i
op	7:22	0:0	4	<
water	7:24	0:0	4	count
forexpr	7:31	7:32	3	i ++
water	7:31	0:0	4	i
op	7:32	0:0	4	++
stmts	8:4	28:4	3	
water	8:4	0:0	4	{
water	9:8	0:0	4	prev_seg
op	9:17	0:0	4	=
water	9:19	0:0	4	seg
water	9:22	0:0	4	;
water	10:8	0:0	4	seg
op	10:12	0:0	4	=
call	10:14	10:39	4	segment_GetSegment
arg	10:33	10:36	5	hls
water	10:33	0:0	6	hls
arg	10:38	10:39	5	i
water	10:38	0:0	6	i
water	10:40	0:0	4	;
if	11:8	12:20	4	(seg == NULL)
cond	11:12	11:19	5	seg == NULL
water	11:12	0:0	6	seg
op	11:16	0:0	6	==
water	11:19	0:0	6	NULL
stmts	12:12	12:20	5	
continue	12:12	12:20	6	
if	13:8	14:20	4	(seg -> psz_key_path == NULL)
cond	13:12	13:33	5	seg -> psz_key_path == NULL
water	13:12	0:0	6	seg
op	13:15	0:0	6	->
water	13:17	0:0	6	psz_key_path
op	13:30	0:0	6	==
water	13:33	0:0	6	NULL
stmts	14:12	14:20	5	
continue	14:12	14:20	6	
if	15:8	16:20	4	(seg -> b_key_loaded)
cond	15:12	15:17	5	seg -> b_key_loaded
water	15:12	0:0	6	seg
op	15:15	0:0	6	->
water	15:17	0:0	6	b_key_loaded
stmts	16:12	16:20	5	
continue	16:12	16:20	6	
if	19:8	24:8	4	(prev_seg && prev_seg -> b_key_loaded &&strcmp (seg -> psz_key_path ,prev_seg -> psz_key_path ) == 0)
cond	19:12	19:103	5	prev_seg && prev_seg -> b_key_loaded &&strcmp (seg -> psz_key_path ,prev_seg -> psz_key_path ) == 0
water	19:12	0:0	6	prev_seg
op	19:21	0:0	6	&&
water	19:24	0:0	6	prev_seg
op	19:32	0:0	6	->
water	19:34	0:0	6	b_key_loaded
op	19:47	0:0	6	&&
call	19:50	19:98	6	strcmp
arg	19:57	19:74	7	seg->psz_key_path
water	19:57	0:0	8	seg
op	19:60	0:0	8	->
water	19:62	0:0	8	psz_key_path
arg	19:76	19:98	7	prev_seg->psz_key_path
water	19:76	0:0	8	prev_seg
op	19:84	0:0	8	->
water	19:86	0:0	8	psz_key_path
op	19:100	0:0	6	==
water	19:103	0:0	6	0
stmts	20:8	24:8	5	
water	20:8	0:0	6	{
call	21:12	21:66	6	memcpy
arg	21:19	21:31	7	seg->aes_key
water	21:19	0:0	8	seg
op	21:22	0:0	8	->
water	21:24	0:0	8	aes_key
arg	21:33	21:50	7	prev_seg->aes_key
water	21:33	0:0	8	prev_seg
op	21:41	0:0	8	->
water	21:43	0:0	8	aes_key
arg	21:52	21:66	7	AES_BLOCK_SIZE
water	21:52	0:0	8	AES_BLOCK_SIZE
water	21:67	0:0	6	;
water	22:12	0:0	6	seg
op	22:15	0:0	6	->
water	22:17	0:0	6	b_key_loaded
op	22:30	0:0	6	=
water	22:32	0:0	6	true
water	22:36	0:0	6	;
continue	23:12	23:20	6	
water	24:8	0:0	6	}
if	25:8	26:31	4	(hls_DownloadSegmentKey (s ,seg ) != VLC_SUCCESS)
cond	25:12	25:46	5	hls_DownloadSegmentKey (s ,seg ) != VLC_SUCCESS
call	25:12	25:41	6	hls_DownloadSegmentKey
arg	25:35	25:36	7	s
water	25:35	0:0	8	s
arg	25:38	25:41	7	seg
water	25:38	0:0	8	seg
op	25:43	0:0	6	!=
water	25:46	0:0	6	VLC_SUCCESS
stmts	26:12	26:31	5	
return	26:12	26:31	6	VLC_EGENERIC
water	26:19	0:0	7	VLC_EGENERIC
water	27:7	0:0	4	seg
op	27:10	0:0	4	->
water	27:12	0:0	4	b_key_loaded
op	27:25	0:0	4	=
water	27:27	0:0	4	true
water	27:31	0:0	4	;
water	28:4	0:0	4	}
return	29:4	29:22	2	VLC_SUCCESS
water	29:11	0:0	3	VLC_SUCCESS

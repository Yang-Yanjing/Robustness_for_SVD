func	2:0	35:0	0	int	opus_write_header
params	2:21	0:0	1	
param	2:22	2:39	2	uint8_t * *	p_extra
param	2:41	2:53	2	int *	i_extra
param	2:55	2:73	2	OpusHeader *	header
param	2:75	2:93	2	const char *	vendor
stmnts	0:0	34:12	1	
decl	4:4	4:34	2	unsigned char	header_data[100]
decl	5:4	6:70	2	const int	packet_size
op	5:26	0:0	2	=
call	5:28	6:69	3	opus_header_to_packet
arg	5:50	5:56	4	header
water	5:50	0:0	5	header
arg	5:58	5:69	4	header_data
water	5:58	0:0	5	header_data
arg	6:50	6:69	4	sizeof(header_data)
op	6:50	0:0	5	sizeof
water	6:56	0:0	5	(
water	6:57	0:0	5	header_data
water	6:68	0:0	5	)
decl	7:4	7:26	2	unsigned char	*data[2]
decl	8:4	8:18	2	size_t	size[2]
water	9:4	0:0	2	data
op	9:8	0:0	2	[
water	9:9	0:0	2	0
op	9:10	0:0	2	]
op	9:12	0:0	2	=
water	9:14	0:0	2	header_data
water	9:25	0:0	2	;
water	10:4	0:0	2	size
op	10:8	0:0	2	[
water	10:9	0:0	2	0
op	10:10	0:0	2	]
op	10:12	0:0	2	=
water	10:14	0:0	2	packet_size
water	10:25	0:0	2	;
decl	11:4	11:26	2	size_t	comments_length
decl	12:4	12:59	2	char	*comments
op	12:19	0:0	2	=
call	12:21	12:58	3	comment_init
arg	12:34	12:50	4	&comments_length
op	12:34	0:0	5	&
water	12:35	0:0	5	comments_length
arg	12:52	12:58	4	vendor
water	12:52	0:0	5	vendor
if	13:4	14:16	2	(! comments)
cond	13:8	13:9	3	! comments
op	13:8	0:0	4	!
water	13:9	0:0	4	comments
stmts	14:8	14:16	3	
return	14:8	14:16	4	1
water	14:15	0:0	5	1
if	15:4	20:4	2	(comment_add (& comments ,& comments_length ,"ENCODER=" ,"VLC media player" ))
cond	15:8	16:38	3	comment_add (& comments ,& comments_length ,"ENCODER=" ,"VLC media player" )
call	15:8	16:38	4	comment_add
arg	15:20	15:29	5	&comments
op	15:20	0:0	6	&
water	15:21	0:0	6	comments
arg	15:31	15:47	5	&comments_length
op	15:31	0:0	6	&
water	15:32	0:0	6	comments_length
arg	15:49	15:59	5	"ENCODER="
water	15:49	0:0	6	"ENCODER="
arg	16:20	16:38	5	"VLC media player"
water	16:20	0:0	6	"VLC media player"
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:21	4	free
arg	18:13	18:21	5	comments
water	18:13	0:0	6	comments
water	18:22	0:0	4	;
return	19:8	19:16	4	1
water	19:15	0:0	5	1
water	20:4	0:0	4	}
if	21:4	25:4	2	(comment_pad (& comments ,& comments_length ))
cond	21:8	21:47	3	comment_pad (& comments ,& comments_length )
call	21:8	21:47	4	comment_pad
arg	21:20	21:29	5	&comments
op	21:20	0:0	6	&
water	21:21	0:0	6	comments
arg	21:31	21:47	5	&comments_length
op	21:31	0:0	6	&
water	21:32	0:0	6	comments_length
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:21	4	free
arg	23:13	23:21	5	comments
water	23:13	0:0	6	comments
water	23:22	0:0	4	;
return	24:8	24:16	4	1
water	24:15	0:0	5	1
water	25:4	0:0	4	}
water	26:4	0:0	2	data
op	26:8	0:0	2	[
water	26:9	0:0	2	1
op	26:10	0:0	2	]
op	26:12	0:0	2	=
water	26:14	0:0	2	(
water	26:15	0:0	2	unsigned
water	26:24	0:0	2	char
op	26:29	0:0	2	*
water	26:30	0:0	2	)
water	26:32	0:0	2	comments
water	26:40	0:0	2	;
water	27:4	0:0	2	size
op	27:8	0:0	2	[
water	27:9	0:0	2	1
op	27:10	0:0	2	]
op	27:12	0:0	2	=
water	27:14	0:0	2	comments_length
water	27:29	0:0	2	;
for	28:4	33:8	2	(unsigned i = 0 ;i <ARRAY_SIZE (data );++ i)
forinit	28:9	28:23	3	unsigned i = 0 ;
water	28:9	0:0	4	unsigned
water	28:18	0:0	4	i
op	28:20	0:0	4	=
water	28:22	0:0	4	0
water	28:23	0:0	4	;
cond	28:25	28:44	3	i <ARRAY_SIZE (data )
water	28:25	0:0	4	i
op	28:27	0:0	4	<
call	28:29	28:44	4	ARRAY_SIZE
arg	28:40	28:44	5	data
water	28:40	0:0	6	data
forexpr	28:47	28:49	3	++ i
op	28:47	0:0	4	++
water	28:49	0:0	4	i
stmts	29:8	33:8	3	
if	29:8	33:8	4	(xiph_AppendHeaders (i_extra ,( void * * ) p_extra ,size [ i ] ,data [ i ] ))
cond	29:12	29:75	5	xiph_AppendHeaders (i_extra ,( void * * ) p_extra ,size [ i ] ,data [ i ] )
call	29:12	29:75	6	xiph_AppendHeaders
arg	29:31	29:38	7	i_extra
water	29:31	0:0	8	i_extra
arg	29:40	29:57	7	(void**)p_extra
water	29:40	0:0	8	(
water	29:41	0:0	8	void
op	29:46	0:0	8	*
op	29:47	0:0	8	*
water	29:48	0:0	8	)
water	29:50	0:0	8	p_extra
arg	29:59	29:66	7	size[i]
water	29:59	0:0	8	size
op	29:63	0:0	8	[
water	29:64	0:0	8	i
op	29:65	0:0	8	]
arg	29:68	29:75	7	data[i]
water	29:68	0:0	8	data
op	29:72	0:0	8	[
water	29:73	0:0	8	i
op	29:74	0:0	8	]
stmts	30:8	33:8	5	
water	30:8	0:0	6	{
op	31:12	0:0	6	*
water	31:13	0:0	6	i_extra
op	31:21	0:0	6	=
water	31:23	0:0	6	0
water	31:24	0:0	6	;
op	32:12	0:0	6	*
water	32:13	0:0	6	p_extra
op	32:21	0:0	6	=
water	32:23	0:0	6	NULL
water	32:27	0:0	6	;
water	33:8	0:0	6	}
return	34:4	34:12	2	0
water	34:11	0:0	3	0

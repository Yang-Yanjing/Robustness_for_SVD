func	2:0	163:0	0	static subpicture_t *	render
params	2:27	0:0	1	
param	2:29	2:46	2	decoder_t *	p_dec
stmnts	0:0	162:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:23	2	subpicture_t	*p_spu
decl	6:4	6:39	2	subpicture_region_t	**pp_spu_region
decl	7:4	7:12	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	j
decl	8:4	8:16	2	int	i_base_x
decl	9:4	9:16	2	int	i_base_y
water	11:4	0:0	2	p_spu
op	11:10	0:0	2	=
call	11:12	11:47	2	decoder_NewSubpicture
arg	11:35	11:40	3	p_dec
water	11:35	0:0	4	p_dec
arg	11:42	11:47	3	NULL
water	11:42	0:0	4	NULL
water	11:48	0:0	2	;
if	12:4	13:19	2	(! p_spu)
cond	12:8	12:9	3	! p_spu
op	12:8	0:0	4	!
water	12:9	0:0	4	p_spu
stmts	13:8	13:19	3	
return	13:8	13:19	4	NULL
water	13:15	0:0	5	NULL
water	14:4	0:0	2	p_spu
op	14:9	0:0	2	->
water	14:11	0:0	2	b_absolute
op	14:22	0:0	2	=
water	14:24	0:0	2	p_sys
op	14:29	0:0	2	->
water	14:31	0:0	2	b_absolute
water	14:41	0:0	2	;
water	16:4	0:0	2	p_spu
op	16:9	0:0	2	->
water	16:11	0:0	2	i_start
op	16:19	0:0	2	=
water	16:21	0:0	2	p_sys
op	16:26	0:0	2	->
water	16:28	0:0	2	i_pts
water	16:33	0:0	2	;
water	18:4	0:0	2	p_spu
op	18:9	0:0	2	->
water	18:11	0:0	2	b_ephemer
op	18:21	0:0	2	=
water	18:23	0:0	2	true
water	18:27	0:0	2	;
water	21:4	0:0	2	p_spu
op	21:9	0:0	2	->
water	21:11	0:0	2	b_subtitle
op	21:22	0:0	2	=
water	21:24	0:0	2	true
water	21:28	0:0	2	;
water	23:4	0:0	2	i_base_x
op	23:13	0:0	2	=
water	23:15	0:0	2	p_sys
op	23:20	0:0	2	->
water	23:22	0:0	2	i_spu_x
water	23:29	0:0	2	;
water	24:4	0:0	2	i_base_y
op	24:13	0:0	2	=
water	24:15	0:0	2	p_sys
op	24:20	0:0	2	->
water	24:22	0:0	2	i_spu_y
water	24:29	0:0	2	;
water	25:4	0:0	2	p_spu
op	25:9	0:0	2	->
water	25:11	0:0	2	i_original_picture_width
op	25:36	0:0	2	=
water	25:38	0:0	2	720
water	25:41	0:0	2	;
water	26:4	0:0	2	p_spu
op	26:9	0:0	2	->
water	26:11	0:0	2	i_original_picture_height
op	26:37	0:0	2	=
water	26:39	0:0	2	576
water	26:42	0:0	2	;
water	27:4	0:0	2	p_spu
op	27:9	0:0	2	->
water	27:11	0:0	2	i_original_picture_width
op	27:36	0:0	2	=
water	27:38	0:0	2	p_sys
op	27:43	0:0	2	->
water	27:45	0:0	2	display
op	27:52	0:0	2	.
water	27:53	0:0	2	i_width
water	27:60	0:0	2	;
water	28:4	0:0	2	p_spu
op	28:9	0:0	2	->
water	28:11	0:0	2	i_original_picture_height
op	28:37	0:0	2	=
water	28:39	0:0	2	p_sys
op	28:44	0:0	2	->
water	28:46	0:0	2	display
op	28:53	0:0	2	.
water	28:54	0:0	2	i_height
water	28:62	0:0	2	;
if	29:4	40:4	2	(p_sys -> display . b_windowed)
cond	29:8	29:23	3	p_sys -> display . b_windowed
water	29:8	0:0	4	p_sys
op	29:13	0:0	4	->
water	29:15	0:0	4	display
op	29:22	0:0	4	.
water	29:23	0:0	4	b_windowed
stmts	30:4	40:4	3	
water	30:4	0:0	4	{
water	38:8	0:0	4	i_base_x
op	38:17	0:0	4	+=
water	38:20	0:0	4	p_sys
op	38:25	0:0	4	->
water	38:27	0:0	4	display
op	38:34	0:0	4	.
water	38:35	0:0	4	i_x
water	38:38	0:0	4	;
water	39:8	0:0	4	i_base_y
op	39:17	0:0	4	+=
water	39:20	0:0	4	p_sys
op	39:25	0:0	4	->
water	39:27	0:0	4	display
op	39:34	0:0	4	.
water	39:35	0:0	4	i_y
water	39:38	0:0	4	;
water	40:4	0:0	4	}
water	41:4	0:0	2	pp_spu_region
op	41:18	0:0	2	=
op	41:20	0:0	2	&
water	41:21	0:0	2	p_spu
op	41:26	0:0	2	->
water	41:28	0:0	2	p_region
water	41:36	0:0	2	;
if	44:4	45:78	2	(p_sys -> p_page)
cond	44:8	44:15	3	p_sys -> p_page
water	44:8	0:0	4	p_sys
op	44:13	0:0	4	->
water	44:15	0:0	4	p_page
stmts	45:8	45:78	3	
call	45:8	45:77	4	msg_Dbg
arg	45:17	45:22	5	p_dec
water	45:17	0:0	6	p_dec
arg	45:24	45:46	5	"rendering %i regions"
water	45:24	0:0	6	"rendering %i regions"
arg	45:48	45:77	5	p_sys->p_page->i_region_defs
water	45:48	0:0	6	p_sys
op	45:53	0:0	6	->
water	45:55	0:0	6	p_page
op	45:61	0:0	6	->
water	45:63	0:0	6	i_region_defs
water	45:78	0:0	4	;
for	47:4	161:4	2	(i = 0 ;p_sys -> p_page && ( i < p_sys -> p_page -> i_region_defs );i ++)
forinit	47:9	47:14	3	i = 0 ;
water	47:9	0:0	4	i
op	47:11	0:0	4	=
water	47:13	0:0	4	0
water	47:14	0:0	4	;
cond	47:16	47:68	3	p_sys -> p_page && ( i < p_sys -> p_page -> i_region_defs )
water	47:16	0:0	4	p_sys
op	47:21	0:0	4	->
water	47:23	0:0	4	p_page
op	47:30	0:0	4	&&
water	47:33	0:0	4	(
water	47:35	0:0	4	i
op	47:37	0:0	4	<
water	47:39	0:0	4	p_sys
op	47:44	0:0	4	->
water	47:46	0:0	4	p_page
op	47:52	0:0	4	->
water	47:54	0:0	4	i_region_defs
water	47:68	0:0	4	)
forexpr	47:71	47:72	3	i ++
water	47:71	0:0	4	i
op	47:72	0:0	4	++
stmts	48:4	161:4	3	
water	48:4	0:0	4	{
decl	49:8	49:37	4	dvbsub_region_t	*p_region
decl	50:8	50:40	4	dvbsub_regiondef_t	*p_regiondef
decl	51:8	51:35	4	dvbsub_clut_t	*p_clut
decl	52:8	52:36	4	dvbsub_color_t	*p_color
decl	53:8	53:41	4	subpicture_region_t	*p_spu_region
decl	54:8	54:30	4	uint8_t	*p_src
water	54:22	0:0	4	,
decl	54:8	54:30	4	uint8_t	*p_dst
decl	55:8	55:26	4	video_format_t	fmt
decl	56:8	56:31	4	video_palette_t	palette
decl	57:8	57:19	4	int	i_pitch
water	58:8	0:0	4	p_regiondef
op	58:20	0:0	4	=
op	58:22	0:0	4	&
water	58:23	0:0	4	p_sys
op	58:28	0:0	4	->
water	58:30	0:0	4	p_page
op	58:36	0:0	4	->
water	58:38	0:0	4	p_region_defs
op	58:51	0:0	4	[
water	58:52	0:0	4	i
op	58:53	0:0	4	]
water	58:54	0:0	4	;
for	60:8	64:8	4	(p_region = p_sys -> p_regions ;p_region != NULL;p_region = p_region -> p_next)
forinit	60:13	60:40	5	p_region = p_sys -> p_regions ;
water	60:13	0:0	6	p_region
op	60:22	0:0	6	=
water	60:24	0:0	6	p_sys
op	60:29	0:0	6	->
water	60:31	0:0	6	p_regions
water	60:40	0:0	6	;
cond	60:42	60:54	5	p_region != NULL
water	60:42	0:0	6	p_region
op	60:51	0:0	6	!=
water	60:54	0:0	6	NULL
forexpr	61:13	61:34	5	p_region = p_region -> p_next
water	61:13	0:0	6	p_region
op	61:22	0:0	6	=
water	61:24	0:0	6	p_region
op	61:32	0:0	6	->
water	61:34	0:0	6	p_next
stmts	62:8	64:8	5	
water	62:8	0:0	6	{
if	63:12	63:59	6	(p_regiondef -> i_id == p_region -> i_id)
cond	63:16	63:47	7	p_regiondef -> i_id == p_region -> i_id
water	63:16	0:0	8	p_regiondef
op	63:27	0:0	8	->
water	63:29	0:0	8	i_id
op	63:34	0:0	8	==
water	63:37	0:0	8	p_region
op	63:45	0:0	8	->
water	63:47	0:0	8	i_id
stmts	63:54	63:59	7	
break	63:54	63:59	8	
water	64:8	0:0	6	}
if	67:8	73:8	4	(p_region)
cond	67:12	67:12	5	p_region
water	67:12	0:0	6	p_region
stmts	68:8	73:8	5	
water	68:8	0:0	6	{
call	69:16	72:54	6	msg_Dbg
arg	69:25	69:30	7	p_dec
water	69:25	0:0	8	p_dec
arg	69:32	69:72	7	"rendering region %i (%i,%i) to (%i,%i)"
water	69:32	0:0	8	"rendering region %i (%i,%i) to (%i,%i)"
arg	69:74	69:75	7	i
water	69:74	0:0	8	i
arg	70:24	70:40	7	p_regiondef->i_x
water	70:24	0:0	8	p_regiondef
op	70:35	0:0	8	->
water	70:37	0:0	8	i_x
arg	70:42	70:58	7	p_regiondef->i_y
water	70:42	0:0	8	p_regiondef
op	70:53	0:0	8	->
water	70:55	0:0	8	i_y
arg	71:16	71:52	7	p_regiondef->i_x+p_region->i_width
water	71:16	0:0	8	p_regiondef
op	71:27	0:0	8	->
water	71:29	0:0	8	i_x
op	71:33	0:0	8	+
water	71:35	0:0	8	p_region
op	71:43	0:0	8	->
water	71:45	0:0	8	i_width
arg	72:16	72:54	7	p_regiondef->i_y+p_region->i_height
water	72:16	0:0	8	p_regiondef
op	72:27	0:0	8	->
water	72:29	0:0	8	i_y
op	72:33	0:0	8	+
water	72:35	0:0	8	p_region
op	72:43	0:0	8	->
water	72:45	0:0	8	i_height
water	72:55	0:0	6	;
water	73:8	0:0	6	}
else	74:8	78:8	4
stmts	75:8	78:8	5	
water	75:8	0:0	6	{
call	76:16	77:57	6	msg_Dbg
arg	76:25	76:30	7	p_dec
water	76:25	0:0	8	p_dec
arg	76:32	76:91	7	"rendering region %i (%i,%i) (no region matched to render)"
water	76:32	0:0	8	"rendering region %i (%i,%i) (no region matched to render)"
arg	76:93	76:94	7	i
water	76:93	0:0	8	i
arg	77:22	77:38	7	p_regiondef->i_x
water	77:22	0:0	8	p_regiondef
op	77:33	0:0	8	->
water	77:35	0:0	8	i_x
arg	77:40	77:57	7	p_regiondef->i_y
water	77:40	0:0	8	p_regiondef
op	77:51	0:0	8	->
water	77:53	0:0	8	i_y
water	77:58	0:0	6	;
water	78:8	0:0	6	}
if	80:8	84:8	4	(! p_region)
cond	80:12	80:13	5	! p_region
op	80:12	0:0	6	!
water	80:13	0:0	6	p_region
stmts	81:8	84:8	5	
water	81:8	0:0	6	{
call	82:12	82:69	6	msg_Dbg
arg	82:21	82:26	7	p_dec
water	82:21	0:0	8	p_dec
arg	82:28	82:49	7	"region %i not found"
water	82:28	0:0	8	"region %i not found"
arg	82:51	82:69	7	p_regiondef->i_id
water	82:51	0:0	8	p_regiondef
op	82:62	0:0	8	->
water	82:64	0:0	8	i_id
water	82:70	0:0	6	;
continue	83:12	83:20	6	
water	84:8	0:0	6	}
for	86:8	89:8	4	(p_clut = p_sys -> p_cluts ;p_clut != NULL;p_clut = p_clut -> p_next)
forinit	86:13	86:36	5	p_clut = p_sys -> p_cluts ;
water	86:13	0:0	6	p_clut
op	86:20	0:0	6	=
water	86:22	0:0	6	p_sys
op	86:27	0:0	6	->
water	86:29	0:0	6	p_cluts
water	86:36	0:0	6	;
cond	86:38	86:48	5	p_clut != NULL
water	86:38	0:0	6	p_clut
op	86:45	0:0	6	!=
water	86:48	0:0	6	NULL
forexpr	86:54	86:71	5	p_clut = p_clut -> p_next
water	86:54	0:0	6	p_clut
op	86:61	0:0	6	=
water	86:63	0:0	6	p_clut
op	86:69	0:0	6	->
water	86:71	0:0	6	p_next
stmts	87:8	89:8	5	
water	87:8	0:0	6	{
if	88:12	88:56	6	(p_region -> i_clut == p_clut -> i_id)
cond	88:16	88:44	7	p_region -> i_clut == p_clut -> i_id
water	88:16	0:0	8	p_region
op	88:24	0:0	8	->
water	88:26	0:0	8	i_clut
op	88:33	0:0	8	==
water	88:36	0:0	8	p_clut
op	88:42	0:0	8	->
water	88:44	0:0	8	i_id
stmts	88:51	88:56	7	
break	88:51	88:56	8	
water	89:8	0:0	6	}
if	90:8	94:8	4	(! p_clut)
cond	90:12	90:13	5	! p_clut
op	90:12	0:0	6	!
water	90:13	0:0	6	p_clut
stmts	91:8	94:8	5	
water	91:8	0:0	6	{
call	92:12	92:66	6	msg_Dbg
arg	92:21	92:26	7	p_dec
water	92:21	0:0	8	p_dec
arg	92:28	92:47	7	"clut %i not found"
water	92:28	0:0	8	"clut %i not found"
arg	92:49	92:66	7	p_region->i_clut
water	92:49	0:0	8	p_region
op	92:57	0:0	8	->
water	92:59	0:0	8	i_clut
water	92:67	0:0	6	;
continue	93:12	93:20	6	
water	94:8	0:0	6	}
call	98:8	98:48	4	memset
arg	98:16	98:20	5	&fmt
op	98:16	0:0	6	&
water	98:17	0:0	6	fmt
arg	98:22	98:23	5	0
water	98:22	0:0	6	0
arg	98:25	98:48	5	sizeof(video_format_t)
op	98:25	0:0	6	sizeof
water	98:31	0:0	6	(
water	98:32	0:0	6	video_format_t
water	98:46	0:0	6	)
water	98:49	0:0	4	;
water	99:8	0:0	4	fmt
op	99:11	0:0	4	.
water	99:12	0:0	4	i_chroma
op	99:21	0:0	4	=
water	99:23	0:0	4	VLC_CODEC_YUVP
water	99:37	0:0	4	;
water	100:8	0:0	4	fmt
op	100:11	0:0	4	.
water	100:12	0:0	4	i_sar_num
op	100:22	0:0	4	=
water	100:24	0:0	4	0
water	100:25	0:0	4	;
water	101:8	0:0	4	fmt
op	101:11	0:0	4	.
water	101:12	0:0	4	i_sar_den
op	101:22	0:0	4	=
water	101:24	0:0	4	1
water	101:25	0:0	4	;
water	102:8	0:0	4	fmt
op	102:11	0:0	4	.
water	102:12	0:0	4	i_width
op	102:20	0:0	4	=
water	102:22	0:0	4	fmt
op	102:25	0:0	4	.
water	102:26	0:0	4	i_visible_width
op	102:42	0:0	4	=
water	102:44	0:0	4	p_region
op	102:52	0:0	4	->
water	102:54	0:0	4	i_width
water	102:61	0:0	4	;
water	103:8	0:0	4	fmt
op	103:11	0:0	4	.
water	103:12	0:0	4	i_height
op	103:21	0:0	4	=
water	103:23	0:0	4	fmt
op	103:26	0:0	4	.
water	103:27	0:0	4	i_visible_height
op	103:44	0:0	4	=
water	103:46	0:0	4	p_region
op	103:54	0:0	4	->
water	103:56	0:0	4	i_height
water	103:64	0:0	4	;
water	104:8	0:0	4	fmt
op	104:11	0:0	4	.
water	104:12	0:0	4	i_x_offset
op	104:23	0:0	4	=
water	104:25	0:0	4	fmt
op	104:28	0:0	4	.
water	104:29	0:0	4	i_y_offset
op	104:40	0:0	4	=
water	104:42	0:0	4	0
water	104:43	0:0	4	;
water	105:8	0:0	4	fmt
op	105:11	0:0	4	.
water	105:12	0:0	4	p_palette
op	105:22	0:0	4	=
op	105:24	0:0	4	&
water	105:25	0:0	4	palette
water	105:32	0:0	4	;
water	106:8	0:0	4	fmt
op	106:11	0:0	4	.
water	106:12	0:0	4	p_palette
op	106:21	0:0	4	->
water	106:23	0:0	4	i_entries
op	106:33	0:0	4	=
water	106:35	0:0	4	(
water	106:37	0:0	4	p_region
op	106:45	0:0	4	->
water	106:47	0:0	4	i_depth
op	106:55	0:0	4	==
water	106:58	0:0	4	1
water	106:60	0:0	4	)
water	106:62	0:0	4	?
water	106:64	0:0	4	4
water	106:66	0:0	4	:
water	107:12	0:0	4	(
water	107:14	0:0	4	(
water	107:16	0:0	4	p_region
op	107:24	0:0	4	->
water	107:26	0:0	4	i_depth
op	107:34	0:0	4	==
water	107:37	0:0	4	2
water	107:39	0:0	4	)
water	107:41	0:0	4	?
water	107:43	0:0	4	16
water	107:46	0:0	4	:
water	107:48	0:0	4	256
water	107:52	0:0	4	)
water	107:53	0:0	4	;
water	108:8	0:0	4	p_color
op	108:16	0:0	4	=
water	108:18	0:0	4	(
water	108:20	0:0	4	p_region
op	108:28	0:0	4	->
water	108:30	0:0	4	i_depth
op	108:38	0:0	4	==
water	108:41	0:0	4	1
water	108:43	0:0	4	)
water	108:45	0:0	4	?
water	108:47	0:0	4	p_clut
op	108:53	0:0	4	->
water	108:55	0:0	4	c_2b
water	108:60	0:0	4	:
water	109:12	0:0	4	(
water	109:14	0:0	4	(
water	109:16	0:0	4	p_region
op	109:24	0:0	4	->
water	109:26	0:0	4	i_depth
op	109:34	0:0	4	==
water	109:37	0:0	4	2
water	109:39	0:0	4	)
water	109:41	0:0	4	?
water	109:43	0:0	4	p_clut
op	109:49	0:0	4	->
water	109:51	0:0	4	c_4b
water	109:56	0:0	4	:
water	109:58	0:0	4	p_clut
op	109:64	0:0	4	->
water	109:66	0:0	4	c_8b
water	109:71	0:0	4	)
water	109:72	0:0	4	;
for	110:8	116:8	4	(j = 0 ;j < fmt . p_palette -> i_entries;j ++)
forinit	110:13	110:18	5	j = 0 ;
water	110:13	0:0	6	j
op	110:15	0:0	6	=
water	110:17	0:0	6	0
water	110:18	0:0	6	;
cond	110:20	110:39	5	j < fmt . p_palette -> i_entries
water	110:20	0:0	6	j
op	110:22	0:0	6	<
water	110:24	0:0	6	fmt
op	110:27	0:0	6	.
water	110:28	0:0	6	p_palette
op	110:37	0:0	6	->
water	110:39	0:0	6	i_entries
forexpr	110:50	110:51	5	j ++
water	110:50	0:0	6	j
op	110:51	0:0	6	++
stmts	111:8	116:8	5	
water	111:8	0:0	6	{
water	112:12	0:0	6	fmt
op	112:15	0:0	6	.
water	112:16	0:0	6	p_palette
op	112:25	0:0	6	->
water	112:27	0:0	6	palette
op	112:34	0:0	6	[
water	112:35	0:0	6	j
op	112:36	0:0	6	]
op	112:37	0:0	6	[
water	112:38	0:0	6	0
op	112:39	0:0	6	]
op	112:41	0:0	6	=
water	112:43	0:0	6	p_color
op	112:50	0:0	6	[
water	112:51	0:0	6	j
op	112:52	0:0	6	]
op	112:53	0:0	6	.
water	112:54	0:0	6	Y
water	112:55	0:0	6	;
water	113:12	0:0	6	fmt
op	113:15	0:0	6	.
water	113:16	0:0	6	p_palette
op	113:25	0:0	6	->
water	113:27	0:0	6	palette
op	113:34	0:0	6	[
water	113:35	0:0	6	j
op	113:36	0:0	6	]
op	113:37	0:0	6	[
water	113:38	0:0	6	1
op	113:39	0:0	6	]
op	113:41	0:0	6	=
water	113:43	0:0	6	p_color
op	113:50	0:0	6	[
water	113:51	0:0	6	j
op	113:52	0:0	6	]
op	113:53	0:0	6	.
water	113:54	0:0	6	Cb
water	113:56	0:0	6	;
water	114:12	0:0	6	fmt
op	114:15	0:0	6	.
water	114:16	0:0	6	p_palette
op	114:25	0:0	6	->
water	114:27	0:0	6	palette
op	114:34	0:0	6	[
water	114:35	0:0	6	j
op	114:36	0:0	6	]
op	114:37	0:0	6	[
water	114:38	0:0	6	2
op	114:39	0:0	6	]
op	114:41	0:0	6	=
water	114:43	0:0	6	p_color
op	114:50	0:0	6	[
water	114:51	0:0	6	j
op	114:52	0:0	6	]
op	114:53	0:0	6	.
water	114:54	0:0	6	Cr
water	114:56	0:0	6	;
water	115:12	0:0	6	fmt
op	115:15	0:0	6	.
water	115:16	0:0	6	p_palette
op	115:25	0:0	6	->
water	115:27	0:0	6	palette
op	115:34	0:0	6	[
water	115:35	0:0	6	j
op	115:36	0:0	6	]
op	115:37	0:0	6	[
water	115:38	0:0	6	3
op	115:39	0:0	6	]
op	115:41	0:0	6	=
water	115:43	0:0	6	0
water	115:44	0:0	6	xff
op	115:48	0:0	6	-
water	115:50	0:0	6	p_color
op	115:57	0:0	6	[
water	115:58	0:0	6	j
op	115:59	0:0	6	]
op	115:60	0:0	6	.
water	115:61	0:0	6	T
water	115:62	0:0	6	;
water	116:8	0:0	6	}
water	117:8	0:0	4	p_spu_region
op	117:21	0:0	4	=
call	117:23	117:51	4	subpicture_region_New
arg	117:46	117:51	5	&fmt
op	117:46	0:0	6	&
water	117:47	0:0	6	fmt
water	117:52	0:0	4	;
if	118:8	122:8	4	(! p_spu_region)
cond	118:12	118:13	5	! p_spu_region
op	118:12	0:0	6	!
water	118:13	0:0	6	p_spu_region
stmts	119:8	122:8	5	
water	119:8	0:0	6	{
call	120:12	120:57	6	msg_Err
arg	120:21	120:26	7	p_dec
water	120:21	0:0	8	p_dec
arg	120:28	120:57	7	"cannot allocate SPU region"
water	120:28	0:0	8	"cannot allocate SPU region"
water	120:58	0:0	6	;
continue	121:12	121:20	6	
water	122:8	0:0	6	}
water	123:8	0:0	4	p_spu_region
op	123:20	0:0	4	->
water	123:22	0:0	4	i_x
op	123:26	0:0	4	=
water	123:28	0:0	4	i_base_x
op	123:37	0:0	4	+
water	123:39	0:0	4	p_regiondef
op	123:50	0:0	4	->
water	123:52	0:0	4	i_x
water	123:55	0:0	4	;
water	124:8	0:0	4	p_spu_region
op	124:20	0:0	4	->
water	124:22	0:0	4	i_y
op	124:26	0:0	4	=
water	124:28	0:0	4	i_base_y
op	124:37	0:0	4	+
water	124:39	0:0	4	p_regiondef
op	124:50	0:0	4	->
water	124:52	0:0	4	i_y
water	124:55	0:0	4	;
water	125:8	0:0	4	p_spu_region
op	125:20	0:0	4	->
water	125:22	0:0	4	i_align
op	125:30	0:0	4	=
water	125:32	0:0	4	p_sys
op	125:37	0:0	4	->
water	125:39	0:0	4	i_spu_position
water	125:53	0:0	4	;
op	126:8	0:0	4	*
water	126:9	0:0	4	pp_spu_region
op	126:23	0:0	4	=
water	126:25	0:0	4	p_spu_region
water	126:37	0:0	4	;
water	127:8	0:0	4	pp_spu_region
op	127:22	0:0	4	=
op	127:24	0:0	4	&
water	127:25	0:0	4	p_spu_region
op	127:37	0:0	4	->
water	127:39	0:0	4	p_next
water	127:45	0:0	4	;
water	128:8	0:0	4	p_src
op	128:14	0:0	4	=
water	128:16	0:0	4	p_region
op	128:24	0:0	4	->
water	128:26	0:0	4	p_pixbuf
water	128:34	0:0	4	;
water	129:8	0:0	4	p_dst
op	129:14	0:0	4	=
water	129:16	0:0	4	p_spu_region
op	129:28	0:0	4	->
water	129:30	0:0	4	p_picture
op	129:39	0:0	4	->
water	129:41	0:0	4	Y_PIXELS
water	129:49	0:0	4	;
water	130:8	0:0	4	i_pitch
op	130:16	0:0	4	=
water	130:18	0:0	4	p_spu_region
op	130:30	0:0	4	->
water	130:32	0:0	4	p_picture
op	130:41	0:0	4	->
water	130:43	0:0	4	Y_PITCH
water	130:50	0:0	4	;
for	132:8	137:8	4	(j = 0 ;j < p_region -> i_height;j ++)
forinit	132:13	132:18	5	j = 0 ;
water	132:13	0:0	6	j
op	132:15	0:0	6	=
water	132:17	0:0	6	0
water	132:18	0:0	6	;
cond	132:20	132:34	5	j < p_region -> i_height
water	132:20	0:0	6	j
op	132:22	0:0	6	<
water	132:24	0:0	6	p_region
op	132:32	0:0	6	->
water	132:34	0:0	6	i_height
forexpr	132:44	132:45	5	j ++
water	132:44	0:0	6	j
op	132:45	0:0	6	++
stmts	133:8	137:8	5	
water	133:8	0:0	6	{
call	134:12	134:52	6	memcpy
arg	134:20	134:25	7	p_dst
water	134:20	0:0	8	p_dst
arg	134:27	134:32	7	p_src
water	134:27	0:0	8	p_src
arg	134:34	134:52	7	p_region->i_width
water	134:34	0:0	8	p_region
op	134:42	0:0	8	->
water	134:44	0:0	8	i_width
water	134:53	0:0	6	;
water	135:12	0:0	6	p_src
op	135:18	0:0	6	+=
water	135:21	0:0	6	p_region
op	135:29	0:0	6	->
water	135:31	0:0	6	i_width
water	135:38	0:0	6	;
water	136:12	0:0	6	p_dst
op	136:18	0:0	6	+=
water	136:21	0:0	6	i_pitch
water	136:28	0:0	6	;
water	137:8	0:0	6	}
for	140:8	160:8	4	(j = 0 ;j < p_region -> i_object_defs;j ++)
forinit	140:13	140:18	5	j = 0 ;
water	140:13	0:0	6	j
op	140:15	0:0	6	=
water	140:17	0:0	6	0
water	140:18	0:0	6	;
cond	140:20	140:34	5	j < p_region -> i_object_defs
water	140:20	0:0	6	j
op	140:22	0:0	6	<
water	140:24	0:0	6	p_region
op	140:32	0:0	6	->
water	140:34	0:0	6	i_object_defs
forexpr	140:49	140:50	5	j ++
water	140:49	0:0	6	j
op	140:50	0:0	6	++
stmts	141:8	160:8	5	
water	141:8	0:0	6	{
decl	142:12	142:74	6	dvbsub_objectdef_t	*p_object_def
op	142:45	0:0	6	=
op	142:47	0:0	6	&
water	142:48	0:0	6	p_region
op	142:56	0:0	6	->
water	142:58	0:0	6	p_object_defs
op	142:71	0:0	6	[
water	142:72	0:0	6	j
op	142:73	0:0	6	]
if	143:12	144:24	6	(( p_object_def -> i_type != 1 ) || ! p_object_def -> psz_text)
cond	143:16	143:64	7	( p_object_def -> i_type != 1 ) || ! p_object_def -> psz_text
water	143:16	0:0	8	(
water	143:18	0:0	8	p_object_def
op	143:30	0:0	8	->
water	143:32	0:0	8	i_type
op	143:39	0:0	8	!=
water	143:42	0:0	8	1
water	143:44	0:0	8	)
op	143:46	0:0	8	||
op	143:49	0:0	8	!
water	143:50	0:0	8	p_object_def
op	143:62	0:0	8	->
water	143:64	0:0	8	psz_text
stmts	144:16	144:24	7	
continue	144:16	144:24	8	
call	146:12	146:52	6	memset
arg	146:20	146:24	7	&fmt
op	146:20	0:0	8	&
water	146:21	0:0	8	fmt
arg	146:26	146:27	7	0
water	146:26	0:0	8	0
arg	146:29	146:52	7	sizeof(video_format_t)
op	146:29	0:0	8	sizeof
water	146:35	0:0	8	(
water	146:36	0:0	8	video_format_t
water	146:50	0:0	8	)
water	146:53	0:0	6	;
water	147:12	0:0	6	fmt
op	147:15	0:0	6	.
water	147:16	0:0	6	i_chroma
op	147:25	0:0	6	=
water	147:27	0:0	6	VLC_CODEC_TEXT
water	147:41	0:0	6	;
water	148:12	0:0	6	fmt
op	148:15	0:0	6	.
water	148:16	0:0	6	i_sar_num
op	148:26	0:0	6	=
water	148:28	0:0	6	1
water	148:29	0:0	6	;
water	149:12	0:0	6	fmt
op	149:15	0:0	6	.
water	149:16	0:0	6	i_sar_den
op	149:26	0:0	6	=
water	149:28	0:0	6	1
water	149:29	0:0	6	;
water	150:12	0:0	6	fmt
op	150:15	0:0	6	.
water	150:16	0:0	6	i_width
op	150:24	0:0	6	=
water	150:26	0:0	6	fmt
op	150:29	0:0	6	.
water	150:30	0:0	6	i_visible_width
op	150:46	0:0	6	=
water	150:48	0:0	6	p_region
op	150:56	0:0	6	->
water	150:58	0:0	6	i_width
water	150:65	0:0	6	;
water	151:12	0:0	6	fmt
op	151:15	0:0	6	.
water	151:16	0:0	6	i_height
op	151:25	0:0	6	=
water	151:27	0:0	6	fmt
op	151:30	0:0	6	.
water	151:31	0:0	6	i_visible_height
op	151:48	0:0	6	=
water	151:50	0:0	6	p_region
op	151:58	0:0	6	->
water	151:60	0:0	6	i_height
water	151:68	0:0	6	;
water	152:12	0:0	6	fmt
op	152:15	0:0	6	.
water	152:16	0:0	6	i_x_offset
op	152:27	0:0	6	=
water	152:29	0:0	6	fmt
op	152:32	0:0	6	.
water	152:33	0:0	6	i_y_offset
op	152:44	0:0	6	=
water	152:46	0:0	6	0
water	152:47	0:0	6	;
water	153:12	0:0	6	p_spu_region
op	153:25	0:0	6	=
call	153:27	153:55	6	subpicture_region_New
arg	153:50	153:55	7	&fmt
op	153:50	0:0	8	&
water	153:51	0:0	8	fmt
water	153:56	0:0	6	;
water	154:12	0:0	6	p_spu_region
op	154:24	0:0	6	->
water	154:26	0:0	6	psz_text
op	154:35	0:0	6	=
call	154:37	154:68	6	strdup
arg	154:45	154:68	7	p_object_def->psz_text
water	154:45	0:0	8	p_object_def
op	154:57	0:0	8	->
water	154:59	0:0	8	psz_text
water	154:69	0:0	6	;
water	155:12	0:0	6	p_spu_region
op	155:24	0:0	6	->
water	155:26	0:0	6	i_x
op	155:30	0:0	6	=
water	155:32	0:0	6	i_base_x
op	155:41	0:0	6	+
water	155:43	0:0	6	p_regiondef
op	155:54	0:0	6	->
water	155:56	0:0	6	i_x
op	155:60	0:0	6	+
water	155:62	0:0	6	p_object_def
op	155:74	0:0	6	->
water	155:76	0:0	6	i_x
water	155:79	0:0	6	;
water	156:12	0:0	6	p_spu_region
op	156:24	0:0	6	->
water	156:26	0:0	6	i_y
op	156:30	0:0	6	=
water	156:32	0:0	6	i_base_y
op	156:41	0:0	6	+
water	156:43	0:0	6	p_regiondef
op	156:54	0:0	6	->
water	156:56	0:0	6	i_y
op	156:60	0:0	6	+
water	156:62	0:0	6	p_object_def
op	156:74	0:0	6	->
water	156:76	0:0	6	i_y
water	156:79	0:0	6	;
water	157:12	0:0	6	p_spu_region
op	157:24	0:0	6	->
water	157:26	0:0	6	i_align
op	157:34	0:0	6	=
water	157:36	0:0	6	p_sys
op	157:41	0:0	6	->
water	157:43	0:0	6	i_spu_position
water	157:57	0:0	6	;
op	158:12	0:0	6	*
water	158:13	0:0	6	pp_spu_region
op	158:27	0:0	6	=
water	158:29	0:0	6	p_spu_region
water	158:41	0:0	6	;
water	159:12	0:0	6	pp_spu_region
op	159:26	0:0	6	=
op	159:28	0:0	6	&
water	159:29	0:0	6	p_spu_region
op	159:41	0:0	6	->
water	159:43	0:0	6	p_next
water	159:49	0:0	6	;
water	160:8	0:0	6	}
water	161:4	0:0	4	}
return	162:4	162:16	2	p_spu
water	162:11	0:0	3	p_spu

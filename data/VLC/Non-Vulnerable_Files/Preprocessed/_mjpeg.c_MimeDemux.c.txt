func	2:0	71:0	0	static int	MimeDemux
params	2:20	0:0	1	
param	2:22	2:39	2	demux_t *	p_demux
stmnts	0:0	70:34	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	int	i_size
water	5:22	0:0	2	,
decl	5:4	5:25	2	int	i
decl	6:4	6:55	2	bool	b_match
op	6:18	0:0	2	=
call	6:20	6:54	3	CheckMimeHeader
arg	6:37	6:44	4	p_demux
water	6:37	0:0	5	p_demux
arg	6:46	6:54	4	&i_size
op	6:46	0:0	5	&
water	6:47	0:0	5	i_size
if	7:4	11:4	2	(i_size > 0)
cond	7:8	7:17	3	i_size > 0
water	7:8	0:0	4	i_size
op	7:15	0:0	4	>
water	7:17	0:0	4	0
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
if	9:8	10:20	4	(stream_Read (p_demux -> s ,NULL ,i_size ) != i_size)
cond	9:12	9:55	5	stream_Read (p_demux -> s ,NULL ,i_size ) != i_size
call	9:12	9:50	6	stream_Read
arg	9:25	9:35	7	p_demux->s
water	9:25	0:0	8	p_demux
op	9:32	0:0	8	->
water	9:34	0:0	8	s
arg	9:37	9:41	7	NULL
water	9:37	0:0	8	NULL
arg	9:43	9:50	7	i_size
water	9:43	0:0	8	i_size
op	9:52	0:0	6	!=
water	9:55	0:0	6	i_size
stmts	10:12	10:20	5	
return	10:12	10:20	6	0
water	10:19	0:0	7	0
water	11:4	0:0	4	}
else	12:4	15:4	2
stmts	12:9	15:4	3	
if	12:9	15:4	4	(i_size < 0)
cond	12:13	12:22	5	i_size < 0
water	12:13	0:0	6	i_size
op	12:20	0:0	6	<
water	12:22	0:0	6	0
stmts	13:4	15:4	5	
water	13:4	0:0	6	{
return	14:8	14:16	6	0
water	14:15	0:0	7	0
water	15:4	0:0	6	}
else	16:4	20:4	2
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
water	19:8	0:0	4	b_match
op	19:16	0:0	4	=
water	19:18	0:0	4	true
water	19:22	0:0	4	;
water	20:4	0:0	4	}
if	21:4	25:4	2	(!Peek (p_demux ,true ))
cond	21:8	21:29	3	!Peek (p_demux ,true )
op	21:8	0:0	4	!
call	21:9	21:29	4	Peek
arg	21:15	21:22	5	p_demux
water	21:15	0:0	6	p_demux
arg	21:24	21:29	5	true
water	21:24	0:0	6	true
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:46	4	msg_Warn
arg	23:18	23:25	5	p_demux
water	23:18	0:0	6	p_demux
arg	23:27	23:46	5	"cannot peek data"
water	23:27	0:0	6	"cannot peek data"
water	23:47	0:0	4	;
return	24:8	24:16	4	0
water	24:15	0:0	5	0
water	25:4	0:0	4	}
water	26:4	0:0	2	i
op	26:6	0:0	2	=
water	26:8	0:0	2	0
water	26:9	0:0	2	;
water	27:4	0:0	2	i_size
op	27:11	0:0	2	=
call	27:13	27:42	2	strlen
arg	27:21	27:42	3	p_sys->psz_separator
water	27:21	0:0	4	p_sys
op	27:26	0:0	4	->
water	27:28	0:0	4	psz_separator
op	27:44	0:0	2	+
water	27:46	0:0	2	2
water	27:47	0:0	2	;
if	28:4	32:4	2	(p_sys -> i_data_peeked < i_size)
cond	28:8	28:31	3	p_sys -> i_data_peeked < i_size
water	28:8	0:0	4	p_sys
op	28:13	0:0	4	->
water	28:15	0:0	4	i_data_peeked
op	28:29	0:0	4	<
water	28:31	0:0	4	i_size
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:43	4	msg_Warn
arg	30:18	30:25	5	p_demux
water	30:18	0:0	6	p_demux
arg	30:27	30:43	5	"data shortage"
water	30:27	0:0	6	"data shortage"
water	30:44	0:0	4	;
return	31:8	31:16	4	0
water	31:15	0:0	5	0
water	32:4	0:0	4	}
for	33:4	63:4	2	(;;)
forinit	33:9	33:9	3	;
water	33:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	34:4	63:4	3	
water	34:4	0:0	4	{
while	35:8	50:8	4	(! ( p_sys -> p_peek [ i ] == '-' && p_sys -> p_peek [ i + 1 ] == '-' ))
cond	35:15	35:71	5	! ( p_sys -> p_peek [ i ] == '-' && p_sys -> p_peek [ i + 1 ] == '-' )
op	35:15	0:0	6	!
water	35:16	0:0	6	(
water	35:18	0:0	6	p_sys
op	35:23	0:0	6	->
water	35:25	0:0	6	p_peek
op	35:31	0:0	6	[
water	35:32	0:0	6	i
op	35:33	0:0	6	]
op	35:35	0:0	6	==
water	35:38	0:0	6	'-'
op	35:42	0:0	6	&&
water	35:45	0:0	6	p_sys
op	35:50	0:0	6	->
water	35:52	0:0	6	p_peek
op	35:58	0:0	6	[
water	35:59	0:0	6	i
op	35:60	0:0	6	+
water	35:61	0:0	6	1
op	35:62	0:0	6	]
op	35:64	0:0	6	==
water	35:67	0:0	6	'-'
water	35:71	0:0	6	)
stmts	36:8	50:8	5	
water	36:8	0:0	6	{
water	37:12	0:0	6	i
op	37:13	0:0	6	++
water	37:15	0:0	6	;
water	38:12	0:0	6	i_size
op	38:18	0:0	6	++
water	38:20	0:0	6	;
if	39:12	49:12	6	(i_size >= p_sys -> i_data_peeked)
cond	39:16	39:33	7	i_size >= p_sys -> i_data_peeked
water	39:16	0:0	8	i_size
op	39:23	0:0	8	>=
water	39:26	0:0	8	p_sys
op	39:31	0:0	8	->
water	39:33	0:0	8	i_data_peeked
stmts	40:12	49:12	7	
water	40:12	0:0	8	{
call	41:16	42:54	8	msg_Dbg
arg	41:25	41:32	9	p_demux
water	41:25	0:0	10	p_demux
arg	41:34	42:31	9	"MIME boundary not found in %d bytes of ""data"
water	41:34	0:0	10	"MIME boundary not found in %d bytes of "
water	42:25	0:0	10	"data"
arg	42:33	42:54	9	p_sys->i_data_peeked
water	42:33	0:0	10	p_sys
op	42:38	0:0	10	->
water	42:40	0:0	10	i_data_peeked
water	42:55	0:0	8	;
if	43:16	48:16	8	(!Peek (p_demux ,false ))
cond	43:20	43:42	9	!Peek (p_demux ,false )
op	43:20	0:0	10	!
call	43:21	43:42	10	Peek
arg	43:27	43:34	11	p_demux
water	43:27	0:0	12	p_demux
arg	43:36	43:42	11	false
water	43:36	0:0	12	false
stmts	44:16	48:16	9	
water	44:16	0:0	10	{
call	45:20	46:39	10	msg_Warn
arg	45:30	45:37	11	p_demux
water	45:30	0:0	12	p_demux
arg	45:39	46:39	11	"no more data is available at the ""moment"
water	45:39	0:0	12	"no more data is available at the "
water	46:30	0:0	12	"moment"
water	46:40	0:0	10	;
return	47:20	47:28	10	0
water	47:27	0:0	11	0
water	48:16	0:0	10	}
water	49:12	0:0	8	}
water	50:8	0:0	6	}
if	52:8	60:8	4	(!strncmp (p_sys -> psz_separator ,( char * ) (p_sys -> p_peek + i + 2 ) ,strlen (p_sys -> psz_separator ) ) || ( (strlen (p_sys -> psz_separator ) > 4 ) && !strncmp (p_sys -> psz_separator ,"--" ,2 ) && !strncmp (p_sys -> psz_separator ,( char * ) (p_sys -> p_peek + i ) ,strlen (p_sys -> psz_separator ) ) ))
cond	52:12	57:52	5	!strncmp (p_sys -> psz_separator ,( char * ) (p_sys -> p_peek + i + 2 ) ,strlen (p_sys -> psz_separator ) ) || ( (strlen (p_sys -> psz_separator ) > 4 ) && !strncmp (p_sys -> psz_separator ,"--" ,2 ) && !strncmp (p_sys -> psz_separator ,( char * ) (p_sys -> p_peek + i ) ,strlen (p_sys -> psz_separator ) ) )
op	52:12	0:0	6	!
call	52:13	53:51	6	strncmp
arg	52:21	52:41	7	p_sys->psz_separator
water	52:21	0:0	8	p_sys
op	52:26	0:0	8	->
water	52:28	0:0	8	psz_separator
arg	52:43	52:74	7	(char*)(p_sys->p_peek+i+2)
call	52:43	52:73	8	(char*)
arg	52:52	52:73	9	p_sys->p_peek+i+2
water	52:52	0:0	10	p_sys
op	52:57	0:0	10	->
water	52:59	0:0	10	p_peek
op	52:66	0:0	10	+
water	52:68	0:0	10	i
op	52:70	0:0	10	+
water	52:72	0:0	10	2
arg	53:21	53:51	7	strlen(p_sys->psz_separator)
call	53:21	53:50	8	strlen
arg	53:29	53:50	9	p_sys->psz_separator
water	53:29	0:0	10	p_sys
op	53:34	0:0	10	->
water	53:36	0:0	10	psz_separator
op	54:9	0:0	6	||
water	54:12	0:0	6	(
water	54:13	0:0	6	(
call	54:14	54:41	6	strlen
arg	54:21	54:41	7	p_sys->psz_separator
water	54:21	0:0	8	p_sys
op	54:26	0:0	8	->
water	54:28	0:0	8	psz_separator
op	54:43	0:0	6	>
water	54:45	0:0	6	4
water	54:46	0:0	6	)
op	55:10	0:0	6	&&
op	55:13	0:0	6	!
call	55:14	55:51	6	strncmp
arg	55:22	55:42	7	p_sys->psz_separator
water	55:22	0:0	8	p_sys
op	55:27	0:0	8	->
water	55:29	0:0	8	psz_separator
arg	55:44	55:48	7	"--"
water	55:44	0:0	8	"--"
arg	55:50	55:51	7	2
water	55:50	0:0	8	2
op	56:10	0:0	6	&&
op	56:13	0:0	6	!
call	56:14	57:51	6	strncmp
arg	56:22	56:42	7	p_sys->psz_separator
water	56:22	0:0	8	p_sys
op	56:27	0:0	8	->
water	56:29	0:0	8	psz_separator
arg	56:44	56:71	7	(char*)(p_sys->p_peek+i)
call	56:44	56:70	8	(char*)
arg	56:53	56:70	9	p_sys->p_peek+i
water	56:53	0:0	10	p_sys
op	56:58	0:0	10	->
water	56:60	0:0	10	p_peek
op	56:67	0:0	10	+
water	56:69	0:0	10	i
arg	57:22	57:51	7	strlen(p_sys->psz_separator)
call	57:22	57:50	8	strlen
arg	57:30	57:50	9	p_sys->psz_separator
water	57:30	0:0	10	p_sys
op	57:35	0:0	10	->
water	57:37	0:0	10	psz_separator
water	57:52	0:0	6	)
stmts	58:8	60:8	5	
water	58:8	0:0	6	{
break	59:12	59:17	6	
water	60:8	0:0	6	}
water	61:8	0:0	4	i
op	61:9	0:0	4	++
water	61:11	0:0	4	;
water	62:8	0:0	4	i_size
op	62:14	0:0	4	++
water	62:16	0:0	4	;
water	63:4	0:0	4	}
if	64:4	69:4	2	(! b_match)
cond	64:8	64:9	3	! b_match
op	64:8	0:0	4	!
water	64:9	0:0	4	b_match
stmts	65:4	69:4	3	
water	65:4	0:0	4	{
call	66:8	66:50	4	msg_Err
arg	66:17	66:24	5	p_demux
water	66:17	0:0	6	p_demux
arg	66:26	66:50	5	"discard non-JPEG part"
water	66:26	0:0	6	"discard non-JPEG part"
water	66:51	0:0	4	;
call	67:8	67:41	4	stream_Read
arg	67:21	67:31	5	p_demux->s
water	67:21	0:0	6	p_demux
op	67:28	0:0	6	->
water	67:30	0:0	6	s
arg	67:33	67:37	5	NULL
water	67:33	0:0	6	NULL
arg	67:39	67:41	5	i
water	67:39	0:0	6	i
water	67:42	0:0	4	;
return	68:8	68:16	4	0
water	68:15	0:0	5	0
water	69:4	0:0	4	}
return	70:4	70:34	2	SendBlock(p_demux,i)
call	70:11	70:33	3	SendBlock
arg	70:22	70:29	4	p_demux
water	70:22	0:0	5	p_demux
arg	70:31	70:33	4	i
water	70:31	0:0	5	i

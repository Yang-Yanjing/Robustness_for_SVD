func	2:0	128:0	0	static block_t *	DoWork
params	2:23	0:0	1	
param	2:25	2:44	2	filter_t *	p_filter
param	2:46	2:65	2	block_t *	p_in_buf
stmnts	0:0	127:19	1	
decl	4:4	4:42	2	int	i_samples
op	4:18	0:0	2	=
water	4:20	0:0	2	p_in_buf
op	4:28	0:0	2	->
water	4:30	0:0	2	i_nb_samples
decl	5:4	5:69	2	int	i_channels
op	5:19	0:0	2	=
call	5:21	5:68	3	aout_FormatNbChannels
arg	5:44	5:68	4	&p_filter->fmt_in.audio
op	5:44	0:0	5	&
water	5:45	0:0	5	p_filter
op	5:53	0:0	5	->
water	5:55	0:0	5	fmt_in
op	5:61	0:0	5	.
water	5:62	0:0	5	audio
decl	6:4	6:46	2	float	*pf_buf
op	6:18	0:0	2	=
water	6:20	0:0	2	(
water	6:21	0:0	2	float
op	6:26	0:0	2	*
water	6:27	0:0	2	)
water	6:28	0:0	2	p_in_buf
op	6:36	0:0	2	->
water	6:38	0:0	2	p_buffer
decl	8:4	8:41	2	filter_sys_t	*p_sys
op	8:24	0:0	2	=
water	8:26	0:0	2	p_filter
op	8:34	0:0	2	->
water	8:36	0:0	2	p_sys
call	10:4	10:33	2	vlc_mutex_lock
arg	10:20	10:33	3	&p_sys->lock
op	10:20	0:0	4	&
water	10:21	0:0	4	p_sys
op	10:26	0:0	4	->
water	10:28	0:0	4	lock
water	10:34	0:0	2	;
decl	11:4	11:43	2	float	f_rms_peak
op	11:24	0:0	2	=
water	11:26	0:0	2	p_sys
op	11:31	0:0	2	->
water	11:33	0:0	2	f_rms_peak
decl	12:4	12:41	2	float	f_attack
op	12:24	0:0	2	=
water	12:26	0:0	2	p_sys
op	12:31	0:0	2	->
water	12:33	0:0	2	f_attack
decl	13:4	13:42	2	float	f_release
op	13:24	0:0	2	=
water	13:26	0:0	2	p_sys
op	13:31	0:0	2	->
water	13:33	0:0	2	f_release
decl	14:4	14:44	2	float	f_threshold
op	14:24	0:0	2	=
water	14:26	0:0	2	p_sys
op	14:31	0:0	2	->
water	14:33	0:0	2	f_threshold
decl	15:4	15:40	2	float	f_ratio
op	15:24	0:0	2	=
water	15:26	0:0	2	p_sys
op	15:31	0:0	2	->
water	15:33	0:0	2	f_ratio
decl	16:4	16:39	2	float	f_knee
op	16:24	0:0	2	=
water	16:26	0:0	2	p_sys
op	16:31	0:0	2	->
water	16:33	0:0	2	f_knee
decl	17:4	17:46	2	float	f_makeup_gain
op	17:24	0:0	2	=
water	17:26	0:0	2	p_sys
op	17:31	0:0	2	->
water	17:33	0:0	2	f_makeup_gain
call	18:4	18:35	2	vlc_mutex_unlock
arg	18:22	18:35	3	&p_sys->lock
op	18:22	0:0	4	&
water	18:23	0:0	4	p_sys
op	18:28	0:0	4	->
water	18:30	0:0	4	lock
water	18:36	0:0	2	;
decl	20:4	20:36	2	float	f_amp
op	20:21	0:0	2	=
water	20:24	0:0	2	p_sys
op	20:29	0:0	2	->
water	20:31	0:0	2	f_amp
decl	21:4	21:36	2	float	*pf_as
op	21:21	0:0	2	=
water	21:24	0:0	2	p_sys
op	21:29	0:0	2	->
water	21:31	0:0	2	pf_as
decl	22:4	22:36	2	float	f_env
op	22:21	0:0	2	=
water	22:24	0:0	2	p_sys
op	22:29	0:0	2	->
water	22:31	0:0	2	f_env
decl	23:4	23:41	2	float	f_env_peak
op	23:21	0:0	2	=
water	23:24	0:0	2	p_sys
op	23:29	0:0	2	->
water	23:31	0:0	2	f_env_peak
decl	24:4	24:40	2	float	f_env_rms
op	24:21	0:0	2	=
water	24:24	0:0	2	p_sys
op	24:29	0:0	2	->
water	24:31	0:0	2	f_env_rms
decl	25:4	25:37	2	float	f_gain
op	25:21	0:0	2	=
water	25:24	0:0	2	p_sys
op	25:29	0:0	2	->
water	25:31	0:0	2	f_gain
decl	26:4	26:41	2	float	f_gain_out
op	26:21	0:0	2	=
water	26:24	0:0	2	p_sys
op	26:29	0:0	2	->
water	26:31	0:0	2	f_gain_out
decl	27:4	27:34	2	rms_env	*p_rms
op	27:21	0:0	2	=
op	27:23	0:0	2	&
water	27:24	0:0	2	p_sys
op	27:29	0:0	2	->
water	27:31	0:0	2	rms
decl	28:4	28:36	2	float	f_sum
op	28:21	0:0	2	=
water	28:24	0:0	2	p_sys
op	28:29	0:0	2	->
water	28:31	0:0	2	f_sum
decl	29:4	29:33	2	lookahead	*p_la
op	29:21	0:0	2	=
op	29:23	0:0	2	&
water	29:24	0:0	2	p_sys
op	29:29	0:0	2	->
water	29:31	0:0	2	la
decl	31:4	32:73	2	float	f_ga
op	31:21	0:0	2	=
water	31:23	0:0	2	f_attack
op	31:32	0:0	2	<
water	31:34	0:0	2	2
op	31:35	0:0	2	.
water	31:36	0:0	2	0
water	31:37	0:0	2	f
water	31:39	0:0	2	?
water	31:41	0:0	2	0
op	31:42	0:0	2	.
water	31:43	0:0	2	0
water	31:44	0:0	2	f
water	31:46	0:0	2	:
water	32:23	0:0	2	pf_as
op	32:28	0:0	2	[
call	32:29	32:71	3	Round
arg	32:36	32:71	4	f_attack*0.001f*(A_TBL-1)
water	32:36	0:0	5	f_attack
op	32:46	0:0	5	*
water	32:48	0:0	5	0
op	32:49	0:0	5	.
water	32:50	0:0	5	001
water	32:53	0:0	5	f
op	32:55	0:0	5	*
water	32:57	0:0	5	(
water	32:59	0:0	5	A_TBL
op	32:65	0:0	5	-
water	32:67	0:0	5	1
water	32:69	0:0	5	)
op	32:72	0:0	2	]
decl	33:4	33:73	2	float	f_gr
op	33:21	0:0	2	=
water	33:23	0:0	2	pf_as
op	33:28	0:0	2	[
call	33:29	33:71	3	Round
arg	33:36	33:71	4	f_release*0.001f*(A_TBL-1)
water	33:36	0:0	5	f_release
op	33:46	0:0	5	*
water	33:48	0:0	5	0
op	33:49	0:0	5	.
water	33:50	0:0	5	001
water	33:53	0:0	5	f
op	33:55	0:0	5	*
water	33:57	0:0	5	(
water	33:59	0:0	5	A_TBL
op	33:65	0:0	5	-
water	33:67	0:0	5	1
water	33:69	0:0	5	)
op	33:72	0:0	2	]
decl	34:4	34:51	2	float	f_rs
op	34:21	0:0	2	=
water	34:23	0:0	2	(
water	34:25	0:0	2	f_ratio
op	34:33	0:0	2	-
water	34:35	0:0	2	1
op	34:36	0:0	2	.
water	34:37	0:0	2	0
water	34:38	0:0	2	f
water	34:40	0:0	2	)
op	34:42	0:0	2	/
water	34:44	0:0	2	f_ratio
decl	35:4	35:53	2	float	f_mug
op	35:21	0:0	2	=
call	35:23	35:52	3	Db2Lin
arg	35:31	35:44	4	f_makeup_gain
water	35:31	0:0	5	f_makeup_gain
arg	35:46	35:52	4	p_sys
water	35:46	0:0	5	p_sys
decl	36:4	36:60	2	float	f_knee_min
op	36:21	0:0	2	=
call	36:23	36:59	3	Db2Lin
arg	36:31	36:51	4	f_threshold-f_knee
water	36:31	0:0	5	f_threshold
op	36:43	0:0	5	-
water	36:45	0:0	5	f_knee
arg	36:53	36:59	4	p_sys
water	36:53	0:0	5	p_sys
decl	37:4	37:60	2	float	f_knee_max
op	37:21	0:0	2	=
call	37:23	37:59	3	Db2Lin
arg	37:31	37:51	4	f_threshold+f_knee
water	37:31	0:0	5	f_threshold
op	37:43	0:0	5	+
water	37:45	0:0	5	f_knee
arg	37:53	37:59	4	p_sys
water	37:53	0:0	5	p_sys
decl	38:4	38:35	2	float	f_ef_a
op	38:21	0:0	2	=
water	38:23	0:0	2	f_ga
op	38:28	0:0	2	*
water	38:30	0:0	2	0
op	38:31	0:0	2	.
water	38:32	0:0	2	25
water	38:34	0:0	2	f
decl	39:4	39:36	2	float	f_ef_ai
op	39:21	0:0	2	=
water	39:23	0:0	2	1
op	39:24	0:0	2	.
water	39:25	0:0	2	0
water	39:26	0:0	2	f
op	39:28	0:0	2	-
water	39:30	0:0	2	f_ef_a
for	41:4	118:4	2	( int i = 0 ;i < i_samples;i ++)
forinit	0:0	41:18	3	 int i = 0 ;
decl	41:9	41:18	4	int	i
op	41:15	0:0	4	=
water	41:17	0:0	4	0
cond	41:20	41:24	3	i < i_samples
water	41:20	0:0	4	i
op	41:22	0:0	4	<
water	41:24	0:0	4	i_samples
forexpr	41:35	41:36	3	i ++
water	41:35	0:0	4	i
op	41:36	0:0	4	++
stmts	42:4	118:4	3	
water	42:4	0:0	4	{
decl	43:8	43:40	4	float	f_lev_in_old
water	43:26	0:0	4	,
decl	43:8	43:40	4	float	f_lev_in_new
water	47:8	0:0	4	f_lev_in_old
op	47:21	0:0	4	=
water	47:23	0:0	4	p_la
op	47:27	0:0	4	->
water	47:29	0:0	4	p_buf
op	47:34	0:0	4	[
water	47:35	0:0	4	p_la
op	47:39	0:0	4	->
water	47:41	0:0	4	i_pos
op	47:46	0:0	4	]
op	47:47	0:0	4	.
water	47:48	0:0	4	f_lev_in
water	47:56	0:0	4	;
water	50:8	0:0	4	f_lev_in_new
op	50:21	0:0	4	=
call	50:23	50:39	4	fabs
arg	50:29	50:39	5	pf_buf[0]
water	50:29	0:0	6	pf_buf
op	50:35	0:0	6	[
water	50:36	0:0	6	0
op	50:37	0:0	6	]
water	50:40	0:0	4	;
for	51:8	54:8	4	( int i_chan = 1 ;i_chan < i_channels;i_chan ++)
forinit	0:0	51:27	5	 int i_chan = 1 ;
decl	51:13	51:27	6	int	i_chan
op	51:24	0:0	6	=
water	51:26	0:0	6	1
cond	51:29	51:38	5	i_chan < i_channels
water	51:29	0:0	6	i_chan
op	51:36	0:0	6	<
water	51:38	0:0	6	i_channels
forexpr	51:50	51:56	5	i_chan ++
water	51:50	0:0	6	i_chan
op	51:56	0:0	6	++
stmts	52:8	54:8	5	
water	52:8	0:0	6	{
water	53:12	0:0	6	f_lev_in_new
op	53:25	0:0	6	=
call	53:27	53:69	6	Max
arg	53:32	53:44	7	f_lev_in_new
water	53:32	0:0	8	f_lev_in_new
arg	53:46	53:69	7	fabs(pf_buf[i_chan])
call	53:46	53:67	8	fabs
arg	53:52	53:67	9	pf_buf[i_chan]
water	53:52	0:0	10	pf_buf
op	53:58	0:0	10	[
water	53:59	0:0	10	i_chan
op	53:65	0:0	10	]
water	53:70	0:0	6	;
water	54:8	0:0	6	}
water	55:8	0:0	4	p_la
op	55:12	0:0	4	->
water	55:14	0:0	4	p_buf
op	55:19	0:0	4	[
water	55:20	0:0	4	p_la
op	55:24	0:0	4	->
water	55:26	0:0	4	i_pos
op	55:31	0:0	4	]
op	55:32	0:0	4	.
water	55:33	0:0	4	f_lev_in
op	55:42	0:0	4	=
water	55:44	0:0	4	f_lev_in_new
water	55:56	0:0	4	;
water	57:8	0:0	4	f_sum
op	57:14	0:0	4	+=
water	57:17	0:0	4	f_lev_in_new
op	57:30	0:0	4	*
water	57:32	0:0	4	f_lev_in_new
water	57:44	0:0	4	;
if	59:8	62:8	4	(f_amp > f_env_rms)
cond	59:12	59:20	5	f_amp > f_env_rms
water	59:12	0:0	6	f_amp
op	59:18	0:0	6	>
water	59:20	0:0	6	f_env_rms
stmts	60:8	62:8	5	
water	60:8	0:0	6	{
water	61:12	0:0	6	f_env_rms
op	61:22	0:0	6	=
water	61:24	0:0	6	f_env_rms
op	61:34	0:0	6	*
water	61:36	0:0	6	f_ga
op	61:41	0:0	6	+
water	61:43	0:0	6	f_amp
op	61:49	0:0	6	*
water	61:51	0:0	6	(
water	61:53	0:0	6	1
op	61:54	0:0	6	.
water	61:55	0:0	6	0
water	61:56	0:0	6	f
op	61:58	0:0	6	-
water	61:60	0:0	6	f_ga
water	61:65	0:0	6	)
water	61:66	0:0	6	;
water	62:8	0:0	6	}
else	63:8	66:8	4
stmts	64:8	66:8	5	
water	64:8	0:0	6	{
water	65:12	0:0	6	f_env_rms
op	65:22	0:0	6	=
water	65:24	0:0	6	f_env_rms
op	65:34	0:0	6	*
water	65:36	0:0	6	f_gr
op	65:41	0:0	6	+
water	65:43	0:0	6	f_amp
op	65:49	0:0	6	*
water	65:51	0:0	6	(
water	65:53	0:0	6	1
op	65:54	0:0	6	.
water	65:55	0:0	6	0
water	65:56	0:0	6	f
op	65:58	0:0	6	-
water	65:60	0:0	6	f_gr
water	65:65	0:0	6	)
water	65:66	0:0	6	;
water	66:8	0:0	6	}
call	67:8	67:32	4	RoundToZero
arg	67:21	67:32	5	&f_env_rms
op	67:21	0:0	6	&
water	67:22	0:0	6	f_env_rms
water	67:33	0:0	4	;
if	69:8	72:8	4	(f_lev_in_old > f_env_peak)
cond	69:12	69:27	5	f_lev_in_old > f_env_peak
water	69:12	0:0	6	f_lev_in_old
op	69:25	0:0	6	>
water	69:27	0:0	6	f_env_peak
stmts	70:8	72:8	5	
water	70:8	0:0	6	{
water	71:12	0:0	6	f_env_peak
op	71:23	0:0	6	=
water	71:25	0:0	6	f_env_peak
op	71:36	0:0	6	*
water	71:38	0:0	6	f_ga
op	71:43	0:0	6	+
water	71:45	0:0	6	f_lev_in_old
op	71:58	0:0	6	*
water	71:60	0:0	6	(
water	71:62	0:0	6	1
op	71:63	0:0	6	.
water	71:64	0:0	6	0
water	71:65	0:0	6	f
op	71:67	0:0	6	-
water	71:69	0:0	6	f_ga
water	71:74	0:0	6	)
water	71:75	0:0	6	;
water	72:8	0:0	6	}
else	73:8	76:8	4
stmts	74:8	76:8	5	
water	74:8	0:0	6	{
water	75:12	0:0	6	f_env_peak
op	75:23	0:0	6	=
water	75:25	0:0	6	f_env_peak
op	75:36	0:0	6	*
water	75:38	0:0	6	f_gr
op	75:43	0:0	6	+
water	75:45	0:0	6	f_lev_in_old
op	75:58	0:0	6	*
water	75:60	0:0	6	(
water	75:62	0:0	6	1
op	75:63	0:0	6	.
water	75:64	0:0	6	0
water	75:65	0:0	6	f
op	75:67	0:0	6	-
water	75:69	0:0	6	f_gr
water	75:74	0:0	6	)
water	75:75	0:0	6	;
water	76:8	0:0	6	}
call	77:8	77:33	4	RoundToZero
arg	77:21	77:33	5	&f_env_peak
op	77:21	0:0	6	&
water	77:22	0:0	6	f_env_peak
water	77:34	0:0	4	;
if	79:8	112:8	4	(( p_sys -> i_count ++ & 3 ) == 3)
cond	79:12	79:40	5	( p_sys -> i_count ++ & 3 ) == 3
water	79:12	0:0	6	(
water	79:14	0:0	6	p_sys
op	79:19	0:0	6	->
water	79:21	0:0	6	i_count
op	79:28	0:0	6	++
op	79:31	0:0	6	&
water	79:33	0:0	6	3
water	79:35	0:0	6	)
op	79:37	0:0	6	==
water	79:40	0:0	6	3
stmts	80:8	112:8	5	
water	80:8	0:0	6	{
water	83:12	0:0	6	f_amp
op	83:18	0:0	6	=
call	83:20	83:56	6	RmsEnvProcess
arg	83:35	83:40	7	p_rms
water	83:35	0:0	8	p_rms
arg	83:42	83:56	7	f_sum*0.25f
water	83:42	0:0	8	f_sum
op	83:48	0:0	8	*
water	83:50	0:0	8	0
op	83:51	0:0	8	.
water	83:52	0:0	8	25
water	83:54	0:0	8	f
water	83:57	0:0	6	;
water	84:12	0:0	6	f_sum
op	84:18	0:0	6	=
water	84:20	0:0	6	0
op	84:21	0:0	6	.
water	84:22	0:0	6	0
water	84:23	0:0	6	f
water	84:24	0:0	6	;
if	85:12	89:12	6	(isnan (f_env_rms ))
cond	85:16	85:33	7	isnan (f_env_rms )
call	85:16	85:33	8	isnan
arg	85:23	85:33	9	f_env_rms
water	85:23	0:0	10	f_env_rms
stmts	86:12	89:12	7	
water	86:12	0:0	8	{
water	88:16	0:0	8	f_env_rms
op	88:26	0:0	8	=
water	88:28	0:0	8	0
op	88:29	0:0	8	.
water	88:30	0:0	8	0
water	88:31	0:0	8	f
water	88:32	0:0	8	;
water	89:12	0:0	8	}
water	91:12	0:0	6	f_env
op	91:18	0:0	6	=
call	91:20	91:66	6	LIN_INTERP
arg	91:32	91:42	7	f_rms_peak
water	91:32	0:0	8	f_rms_peak
arg	91:44	91:53	7	f_env_rms
water	91:44	0:0	8	f_env_rms
arg	91:55	91:66	7	f_env_peak
water	91:55	0:0	8	f_env_peak
water	91:67	0:0	6	;
if	93:12	97:12	6	(f_env <= f_knee_min)
cond	93:16	93:25	7	f_env <= f_knee_min
water	93:16	0:0	8	f_env
op	93:22	0:0	8	<=
water	93:25	0:0	8	f_knee_min
stmts	94:12	97:12	7	
water	94:12	0:0	8	{
water	96:16	0:0	8	f_gain_out
op	96:27	0:0	8	=
water	96:29	0:0	8	1
op	96:30	0:0	8	.
water	96:31	0:0	8	0
water	96:32	0:0	8	f
water	96:33	0:0	8	;
water	97:12	0:0	8	}
else	98:12	105:12	6
stmts	98:17	105:12	7	
if	98:17	105:12	8	(f_env < f_knee_max)
cond	98:21	98:29	9	f_env < f_knee_max
water	98:21	0:0	10	f_env
op	98:27	0:0	10	<
water	98:29	0:0	10	f_knee_max
stmts	99:12	105:12	9	
water	99:12	0:0	10	{
decl	101:16	102:79	10	const float	f_x
op	101:32	0:0	10	=
op	101:34	0:0	10	-
water	101:35	0:0	10	(
water	101:37	0:0	10	f_threshold
op	102:35	0:0	10	-
water	102:37	0:0	10	f_knee
op	102:44	0:0	10	-
call	102:46	102:67	11	Lin2Db
arg	102:54	102:59	12	f_env
water	102:54	0:0	13	f_env
arg	102:61	102:67	12	p_sys
water	102:61	0:0	13	p_sys
water	102:69	0:0	10	)
op	102:71	0:0	10	/
water	102:73	0:0	10	f_knee
water	103:16	0:0	10	f_gain_out
op	103:27	0:0	10	=
call	103:29	104:44	10	Db2Lin
arg	103:37	103:71	11	-f_knee*f_rs*f_x*f_x*0.25f
op	103:37	0:0	12	-
water	103:38	0:0	12	f_knee
op	103:45	0:0	12	*
water	103:47	0:0	12	f_rs
op	103:52	0:0	12	*
water	103:54	0:0	12	f_x
op	103:58	0:0	12	*
water	103:60	0:0	12	f_x
op	103:64	0:0	12	*
water	103:66	0:0	12	0
op	103:67	0:0	12	.
water	103:68	0:0	12	25
water	103:70	0:0	12	f
arg	104:38	104:44	11	p_sys
water	104:38	0:0	12	p_sys
water	104:45	0:0	10	;
water	105:12	0:0	10	}
else	106:12	111:12	6
stmts	107:12	111:12	7	
water	107:12	0:0	8	{
water	109:16	0:0	8	f_gain_out
op	109:27	0:0	8	=
call	109:29	110:51	8	Db2Lin
arg	109:37	110:43	9	(f_threshold-Lin2Db(f_env,p_sys))*f_rs
water	109:37	0:0	10	(
water	109:39	0:0	10	f_threshold
op	109:51	0:0	10	-
call	109:53	109:74	10	Lin2Db
arg	109:61	109:66	11	f_env
water	109:61	0:0	12	f_env
arg	109:68	109:74	11	p_sys
water	109:68	0:0	12	p_sys
water	109:76	0:0	10	)
op	110:37	0:0	10	*
water	110:39	0:0	10	f_rs
arg	110:45	110:51	9	p_sys
water	110:45	0:0	10	p_sys
water	110:52	0:0	8	;
water	111:12	0:0	8	}
water	112:8	0:0	6	}
water	114:8	0:0	4	f_gain
op	114:15	0:0	4	=
water	114:17	0:0	4	f_gain
op	114:24	0:0	4	*
water	114:26	0:0	4	f_ef_a
op	114:33	0:0	4	+
water	114:35	0:0	4	f_gain_out
op	114:46	0:0	4	*
water	114:48	0:0	4	f_ef_ai
water	114:55	0:0	4	;
call	116:8	116:63	4	BufferProcess
arg	116:23	116:29	5	pf_buf
water	116:23	0:0	6	pf_buf
arg	116:31	116:41	5	i_channels
water	116:31	0:0	6	i_channels
arg	116:43	116:49	5	f_gain
water	116:43	0:0	6	f_gain
arg	116:51	116:56	5	f_mug
water	116:51	0:0	6	f_mug
arg	116:58	116:63	5	p_la
water	116:58	0:0	6	p_la
water	116:64	0:0	4	;
water	117:8	0:0	4	pf_buf
op	117:15	0:0	4	+=
water	117:18	0:0	4	i_channels
water	117:28	0:0	4	;
water	118:4	0:0	4	}
water	120:4	0:0	2	p_sys
op	120:9	0:0	2	->
water	120:11	0:0	2	f_sum
op	120:22	0:0	2	=
water	120:24	0:0	2	f_sum
water	120:29	0:0	2	;
water	121:4	0:0	2	p_sys
op	121:9	0:0	2	->
water	121:11	0:0	2	f_amp
op	121:22	0:0	2	=
water	121:24	0:0	2	f_amp
water	121:29	0:0	2	;
water	122:4	0:0	2	p_sys
op	122:9	0:0	2	->
water	122:11	0:0	2	f_gain
op	122:22	0:0	2	=
water	122:24	0:0	2	f_gain
water	122:30	0:0	2	;
water	123:4	0:0	2	p_sys
op	123:9	0:0	2	->
water	123:11	0:0	2	f_gain_out
op	123:22	0:0	2	=
water	123:24	0:0	2	f_gain_out
water	123:34	0:0	2	;
water	124:4	0:0	2	p_sys
op	124:9	0:0	2	->
water	124:11	0:0	2	f_env
op	124:22	0:0	2	=
water	124:24	0:0	2	f_env
water	124:29	0:0	2	;
water	125:4	0:0	2	p_sys
op	125:9	0:0	2	->
water	125:11	0:0	2	f_env_rms
op	125:22	0:0	2	=
water	125:24	0:0	2	f_env_rms
water	125:33	0:0	2	;
water	126:4	0:0	2	p_sys
op	126:9	0:0	2	->
water	126:11	0:0	2	f_env_peak
op	126:22	0:0	2	=
water	126:24	0:0	2	f_env_peak
water	126:34	0:0	2	;
return	127:4	127:19	2	p_in_buf
water	127:11	0:0	3	p_in_buf

decl	1:7	1:29	0	uint32_t	cpu_flags
op	1:26	0:0	0	=
water	1:28	0:0	0	0
func	2:0	68:0	0	static void	vlc_CPU_init
params	2:25	0:0	1	
param	2:26	2:30	2	void
stmnts	0:0	67:24	1	
decl	4:4	4:47	2	FILE	*info
op	4:15	0:0	2	=
call	4:17	4:46	3	fopen
arg	4:24	4:39	4	"/proc/cpuinfo"
water	4:24	0:0	5	"/proc/cpuinfo"
arg	4:41	4:46	4	"rte"
water	4:41	0:0	5	"rte"
if	5:4	6:14	2	(info == NULL)
cond	5:8	5:16	3	info == NULL
water	5:8	0:0	4	info
op	5:13	0:0	4	==
water	5:16	0:0	4	NULL
stmts	6:8	6:14	3	
return	6:8	6:14	4	
decl	7:4	7:21	2	char	*line
op	7:15	0:0	2	=
water	7:17	0:0	2	NULL
decl	8:4	8:22	2	size_t	linelen
op	8:19	0:0	2	=
water	8:21	0:0	2	0
decl	9:4	9:39	2	uint_fast32_t	all_caps
op	9:27	0:0	2	=
water	9:29	0:0	2	0
water	9:30	0:0	2	xFFFFFFFF
while	10:4	62:4	2	(getline (& line ,& linelen ,info ) != - 1)
cond	10:11	10:47	3	getline (& line ,& linelen ,info ) != - 1
call	10:11	10:41	4	getline
arg	10:20	10:25	5	&line
op	10:20	0:0	6	&
water	10:21	0:0	6	line
arg	10:27	10:35	5	&linelen
op	10:27	0:0	6	&
water	10:28	0:0	6	linelen
arg	10:37	10:41	5	info
water	10:37	0:0	6	info
op	10:43	0:0	4	!=
op	10:46	0:0	4	-
water	10:47	0:0	4	1
stmts	11:4	62:4	3	
water	11:4	0:0	4	{
decl	12:8	12:28	4	char	*p
op	12:16	0:0	4	=
water	12:18	0:0	4	line
water	12:22	0:0	4	,
decl	12:8	12:28	4	char	*cap
decl	13:8	13:35	4	uint_fast32_t	core_caps
op	13:32	0:0	4	=
water	13:34	0:0	4	0
water	15:8	0:0	4	unsigned
water	15:17	0:0	4	ver
water	15:20	0:0	4	;
if	16:8	17:38	4	(sscanf (line ,"Processor\t: ARMv%u" ,& ver ) >= 1 && ver >= 6)
cond	16:12	16:70	5	sscanf (line ,"Processor\t: ARMv%u" ,& ver ) >= 1 && ver >= 6
call	16:12	16:53	6	sscanf
arg	16:20	16:24	7	line
water	16:20	0:0	8	line
arg	16:26	16:47	7	"Processor\t: ARMv%u"
water	16:26	0:0	8	"Processor\t: ARMv%u"
arg	16:49	16:53	7	&ver
op	16:49	0:0	8	&
water	16:50	0:0	8	ver
op	16:55	0:0	6	>=
water	16:58	0:0	6	1
op	16:60	0:0	6	&&
water	16:63	0:0	6	ver
op	16:67	0:0	6	>=
water	16:70	0:0	6	6
stmts	17:12	17:38	5	
water	17:12	0:0	6	core_caps
op	17:22	0:0	6	|=
water	17:25	0:0	6	VLC_CPU_ARMv6
water	17:38	0:0	6	;
if	19:8	20:20	4	(strncmp (line ,CPU_FLAGS ,strlen (CPU_FLAGS ) ))
cond	19:12	19:56	5	strncmp (line ,CPU_FLAGS ,strlen (CPU_FLAGS ) )
call	19:12	19:56	6	strncmp
arg	19:21	19:25	7	line
water	19:21	0:0	8	line
arg	19:27	19:36	7	CPU_FLAGS
water	19:27	0:0	8	CPU_FLAGS
arg	19:38	19:56	7	strlen(CPU_FLAGS)
call	19:38	19:55	8	strlen
arg	19:46	19:55	9	CPU_FLAGS
water	19:46	0:0	10	CPU_FLAGS
stmts	20:12	20:20	5	
continue	20:12	20:20	6	
while	21:8	59:8	4	(( cap =strsep (& p ," " ) ) != NULL)
cond	21:15	21:43	5	( cap =strsep (& p ," " ) ) != NULL
water	21:15	0:0	6	(
water	21:16	0:0	6	cap
op	21:20	0:0	6	=
call	21:22	21:37	6	strsep
arg	21:30	21:32	7	&p
op	21:30	0:0	8	&
water	21:31	0:0	8	p
arg	21:34	21:37	7	" "
water	21:34	0:0	8	" "
water	21:38	0:0	6	)
op	21:40	0:0	6	!=
water	21:43	0:0	6	NULL
stmts	22:8	59:8	5	
water	22:8	0:0	6	{
if	24:12	25:45	6	(!strcmp (cap ,"neon" ))
cond	24:16	24:36	7	!strcmp (cap ,"neon" )
op	24:16	0:0	8	!
call	24:17	24:36	8	strcmp
arg	24:25	24:28	9	cap
water	24:25	0:0	10	cap
arg	24:30	24:36	9	"neon"
water	24:30	0:0	10	"neon"
stmts	25:16	25:45	7	
water	25:16	0:0	8	core_caps
op	25:26	0:0	8	|=
water	25:29	0:0	8	VLC_CPU_ARM_NEON
water	25:45	0:0	8	;
if	27:12	28:40	6	(!strcmp (cap ,"mmx" ))
cond	27:16	27:35	7	!strcmp (cap ,"mmx" )
op	27:16	0:0	8	!
call	27:17	27:35	8	strcmp
arg	27:25	27:28	9	cap
water	27:25	0:0	10	cap
arg	27:30	27:35	9	"mmx"
water	27:30	0:0	10	"mmx"
stmts	28:16	28:40	7	
water	28:16	0:0	8	core_caps
op	28:26	0:0	8	|=
water	28:29	0:0	8	VLC_CPU_MMX
water	28:40	0:0	8	;
if	29:12	30:57	6	(!strcmp (cap ,"sse" ))
cond	29:16	29:35	7	!strcmp (cap ,"sse" )
op	29:16	0:0	8	!
call	29:17	29:35	8	strcmp
arg	29:25	29:28	9	cap
water	29:25	0:0	10	cap
arg	29:30	29:35	9	"sse"
water	29:30	0:0	10	"sse"
stmts	30:16	30:57	7	
water	30:16	0:0	8	core_caps
op	30:26	0:0	8	|=
water	30:29	0:0	8	VLC_CPU_SSE
op	30:41	0:0	8	|
water	30:43	0:0	8	VLC_CPU_MMXEXT
water	30:57	0:0	8	;
if	31:12	32:43	6	(!strcmp (cap ,"mmxext" ))
cond	31:16	31:38	7	!strcmp (cap ,"mmxext" )
op	31:16	0:0	8	!
call	31:17	31:38	8	strcmp
arg	31:25	31:28	9	cap
water	31:25	0:0	10	cap
arg	31:30	31:38	9	"mmxext"
water	31:30	0:0	10	"mmxext"
stmts	32:16	32:43	7	
water	32:16	0:0	8	core_caps
op	32:26	0:0	8	|=
water	32:29	0:0	8	VLC_CPU_MMXEXT
water	32:43	0:0	8	;
if	33:12	34:41	6	(!strcmp (cap ,"sse2" ))
cond	33:16	33:36	7	!strcmp (cap ,"sse2" )
op	33:16	0:0	8	!
call	33:17	33:36	8	strcmp
arg	33:25	33:28	9	cap
water	33:25	0:0	10	cap
arg	33:30	33:36	9	"sse2"
water	33:30	0:0	10	"sse2"
stmts	34:16	34:41	7	
water	34:16	0:0	8	core_caps
op	34:26	0:0	8	|=
water	34:29	0:0	8	VLC_CPU_SSE2
water	34:41	0:0	8	;
if	35:12	36:41	6	(!strcmp (cap ,"pni" ))
cond	35:16	35:35	7	!strcmp (cap ,"pni" )
op	35:16	0:0	8	!
call	35:17	35:35	8	strcmp
arg	35:25	35:28	9	cap
water	35:25	0:0	10	cap
arg	35:30	35:35	9	"pni"
water	35:30	0:0	10	"pni"
stmts	36:16	36:41	7	
water	36:16	0:0	8	core_caps
op	36:26	0:0	8	|=
water	36:29	0:0	8	VLC_CPU_SSE3
water	36:41	0:0	8	;
if	37:12	38:42	6	(!strcmp (cap ,"ssse3" ))
cond	37:16	37:37	7	!strcmp (cap ,"ssse3" )
op	37:16	0:0	8	!
call	37:17	37:37	8	strcmp
arg	37:25	37:28	9	cap
water	37:25	0:0	10	cap
arg	37:30	37:37	9	"ssse3"
water	37:30	0:0	10	"ssse3"
stmts	38:16	38:42	7	
water	38:16	0:0	8	core_caps
op	38:26	0:0	8	|=
water	38:29	0:0	8	VLC_CPU_SSSE3
water	38:42	0:0	8	;
if	39:12	40:43	6	(!strcmp (cap ,"sse4_1" ))
cond	39:16	39:38	7	!strcmp (cap ,"sse4_1" )
op	39:16	0:0	8	!
call	39:17	39:38	8	strcmp
arg	39:25	39:28	9	cap
water	39:25	0:0	10	cap
arg	39:30	39:38	9	"sse4_1"
water	39:30	0:0	10	"sse4_1"
stmts	40:16	40:43	7	
water	40:16	0:0	8	core_caps
op	40:26	0:0	8	|=
water	40:29	0:0	8	VLC_CPU_SSE4_1
water	40:43	0:0	8	;
if	41:12	42:43	6	(!strcmp (cap ,"sse4_2" ))
cond	41:16	41:38	7	!strcmp (cap ,"sse4_2" )
op	41:16	0:0	8	!
call	41:17	41:38	8	strcmp
arg	41:25	41:28	9	cap
water	41:25	0:0	10	cap
arg	41:30	41:38	9	"sse4_2"
water	41:30	0:0	10	"sse4_2"
stmts	42:16	42:43	7	
water	42:16	0:0	8	core_caps
op	42:26	0:0	8	|=
water	42:29	0:0	8	VLC_CPU_SSE4_2
water	42:43	0:0	8	;
if	43:12	44:42	6	(!strcmp (cap ,"sse4a" ))
cond	43:16	43:37	7	!strcmp (cap ,"sse4a" )
op	43:16	0:0	8	!
call	43:17	43:37	8	strcmp
arg	43:25	43:28	9	cap
water	43:25	0:0	10	cap
arg	43:30	43:37	9	"sse4a"
water	43:30	0:0	10	"sse4a"
stmts	44:16	44:42	7	
water	44:16	0:0	8	core_caps
op	44:26	0:0	8	|=
water	44:29	0:0	8	VLC_CPU_SSE4A
water	44:42	0:0	8	;
if	45:12	46:40	6	(!strcmp (cap ,"avx" ))
cond	45:16	45:35	7	!strcmp (cap ,"avx" )
op	45:16	0:0	8	!
call	45:17	45:35	8	strcmp
arg	45:25	45:28	9	cap
water	45:25	0:0	10	cap
arg	45:30	45:35	9	"avx"
water	45:30	0:0	10	"avx"
stmts	46:16	46:40	7	
water	46:16	0:0	8	core_caps
op	46:26	0:0	8	|=
water	46:29	0:0	8	VLC_CPU_AVX
water	46:40	0:0	8	;
if	47:12	48:41	6	(!strcmp (cap ,"avx2" ))
cond	47:16	47:36	7	!strcmp (cap ,"avx2" )
op	47:16	0:0	8	!
call	47:17	47:36	8	strcmp
arg	47:25	47:28	9	cap
water	47:25	0:0	10	cap
arg	47:30	47:36	9	"avx2"
water	47:30	0:0	10	"avx2"
stmts	48:16	48:41	7	
water	48:16	0:0	8	core_caps
op	48:26	0:0	8	|=
water	48:29	0:0	8	VLC_CPU_AVX2
water	48:41	0:0	8	;
if	49:12	50:42	6	(!strcmp (cap ,"3dnow" ))
cond	49:16	49:37	7	!strcmp (cap ,"3dnow" )
op	49:16	0:0	8	!
call	49:17	49:37	8	strcmp
arg	49:25	49:28	9	cap
water	49:25	0:0	10	cap
arg	49:30	49:37	9	"3dnow"
water	49:30	0:0	10	"3dnow"
stmts	50:16	50:42	7	
water	50:16	0:0	8	core_caps
op	50:26	0:0	8	|=
water	50:29	0:0	8	VLC_CPU_3dNOW
water	50:42	0:0	8	;
if	51:12	52:40	6	(!strcmp (cap ,"xop" ))
cond	51:16	51:35	7	!strcmp (cap ,"xop" )
op	51:16	0:0	8	!
call	51:17	51:35	8	strcmp
arg	51:25	51:28	9	cap
water	51:25	0:0	10	cap
arg	51:30	51:35	9	"xop"
water	51:30	0:0	10	"xop"
stmts	52:16	52:40	7	
water	52:16	0:0	8	core_caps
op	52:26	0:0	8	|=
water	52:29	0:0	8	VLC_CPU_XOP
water	52:40	0:0	8	;
if	53:12	54:41	6	(!strcmp (cap ,"fma4" ))
cond	53:16	53:36	7	!strcmp (cap ,"fma4" )
op	53:16	0:0	8	!
call	53:17	53:36	8	strcmp
arg	53:25	53:28	9	cap
water	53:25	0:0	10	cap
arg	53:30	53:36	9	"fma4"
water	53:30	0:0	10	"fma4"
stmts	54:16	54:41	7	
water	54:16	0:0	8	core_caps
op	54:26	0:0	8	|=
water	54:29	0:0	8	VLC_CPU_FMA4
water	54:41	0:0	8	;
if	56:12	57:44	6	(!strcmp (cap ,"altivec supported" ))
cond	56:16	56:49	7	!strcmp (cap ,"altivec supported" )
op	56:16	0:0	8	!
call	56:17	56:49	8	strcmp
arg	56:25	56:28	9	cap
water	56:25	0:0	10	cap
arg	56:30	56:49	9	"altivec supported"
water	56:30	0:0	10	"altivec supported"
stmts	57:16	57:44	7	
water	57:16	0:0	8	core_caps
op	57:26	0:0	8	|=
water	57:29	0:0	8	VLC_CPU_ALTIVEC
water	57:44	0:0	8	;
water	59:8	0:0	6	}
water	61:8	0:0	4	all_caps
op	61:17	0:0	4	&=
water	61:20	0:0	4	core_caps
water	61:29	0:0	4	;
water	62:4	0:0	4	}
call	63:4	63:16	2	fclose
arg	63:12	63:16	3	info
water	63:12	0:0	4	info
water	63:17	0:0	2	;
call	64:4	64:14	2	free
arg	64:10	64:14	3	line
water	64:10	0:0	4	line
water	64:15	0:0	2	;
if	65:4	66:20	2	(all_caps == 0 xFFFFFFFF)
cond	65:8	65:21	3	all_caps == 0 xFFFFFFFF
water	65:8	0:0	4	all_caps
op	65:17	0:0	4	==
water	65:20	0:0	4	0
water	65:21	0:0	4	xFFFFFFFF
stmts	66:8	66:20	3	
water	66:8	0:0	4	all_caps
op	66:17	0:0	4	=
water	66:19	0:0	4	0
water	66:20	0:0	4	;
water	67:4	0:0	2	cpu_flags
op	67:14	0:0	2	=
water	67:16	0:0	2	all_caps
water	67:24	0:0	2	;

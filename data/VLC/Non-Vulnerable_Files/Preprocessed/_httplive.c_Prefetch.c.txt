func	2:0	40:0	0	static int	Prefetch
params	2:19	0:0	1	
param	2:20	2:31	2	stream_t *	s
param	2:33	2:45	2	int *	current
stmnts	0:0	39:22	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	5:4	5:25	2	int	stream
op	5:15	0:0	2	=
op	5:17	0:0	2	*
water	5:18	0:0	2	current
decl	6:4	6:58	2	hls_stream_t	*hls
op	6:22	0:0	2	=
call	6:24	6:57	3	hls_Get
arg	6:32	6:49	4	p_sys->hls_stream
water	6:32	0:0	5	p_sys
op	6:37	0:0	5	->
water	6:39	0:0	5	hls_stream
arg	6:51	6:57	4	stream
water	6:51	0:0	5	stream
if	7:4	8:27	2	(hls == NULL)
cond	7:8	7:15	3	hls == NULL
water	7:8	0:0	4	hls
op	7:12	0:0	4	==
water	7:15	0:0	4	NULL
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	9:4	10:27	2	(vlc_array_count (hls -> segments ) == 0)
cond	9:8	9:42	3	vlc_array_count (hls -> segments ) == 0
call	9:8	9:37	4	vlc_array_count
arg	9:24	9:37	5	hls->segments
water	9:24	0:0	6	hls
op	9:27	0:0	6	->
water	9:29	0:0	6	segments
op	9:39	0:0	4	==
water	9:42	0:0	4	0
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
else	11:4	12:85	2
stmts	11:9	12:85	3	
if	11:9	12:85	4	(vlc_array_count (hls -> segments ) == 1 && p_sys -> b_live)
cond	11:13	11:59	5	vlc_array_count (hls -> segments ) == 1 && p_sys -> b_live
call	11:13	11:42	6	vlc_array_count
arg	11:29	11:42	7	hls->segments
water	11:29	0:0	8	hls
op	11:32	0:0	8	->
water	11:34	0:0	8	segments
op	11:44	0:0	6	==
water	11:47	0:0	6	1
op	11:49	0:0	6	&&
water	11:52	0:0	6	p_sys
op	11:57	0:0	6	->
water	11:59	0:0	6	b_live
stmts	12:8	12:85	5	
call	12:8	12:84	6	msg_Warn
arg	12:17	12:18	7	s
water	12:17	0:0	8	s
arg	12:20	12:84	7	"Only 1 segment available to prefetch in live stream; may stall"
water	12:20	0:0	8	"Only 1 segment available to prefetch in live stream; may stall"
water	12:85	0:0	6	;
water	14:4	0:0	2	unsigned
water	14:13	0:0	2	segment_amount
op	14:28	0:0	2	=
water	14:30	0:0	2	(
water	14:31	0:0	2	0
op	14:32	0:0	2	.
water	14:33	0:0	2	5
water	14:34	0:0	2	f
op	14:36	0:0	2	+
water	14:38	0:0	2	10
op	14:40	0:0	2	/
water	14:41	0:0	2	hls
op	14:44	0:0	2	->
water	14:46	0:0	2	duration
water	14:54	0:0	2	)
water	14:55	0:0	2	;
for	15:4	38:4	2	(unsigned i = 0 ;i <__MIN (( unsigned )vlc_array_count (hls -> segments ) ,segment_amount );i ++)
forinit	15:9	15:23	3	unsigned i = 0 ;
water	15:9	0:0	4	unsigned
water	15:18	0:0	4	i
op	15:20	0:0	4	=
water	15:22	0:0	4	0
water	15:23	0:0	4	;
cond	15:25	15:91	3	i <__MIN (( unsigned )vlc_array_count (hls -> segments ) ,segment_amount )
water	15:25	0:0	4	i
op	15:27	0:0	4	<
call	15:29	15:91	4	__MIN
arg	15:35	15:75	5	(unsigned)vlc_array_count(hls->segments)
water	15:35	0:0	6	(
water	15:36	0:0	6	unsigned
water	15:44	0:0	6	)
call	15:45	15:74	6	vlc_array_count
arg	15:61	15:74	7	hls->segments
water	15:61	0:0	8	hls
op	15:64	0:0	8	->
water	15:66	0:0	8	segments
arg	15:77	15:91	5	segment_amount
water	15:77	0:0	6	segment_amount
forexpr	15:94	15:95	3	i ++
water	15:94	0:0	4	i
op	15:95	0:0	4	++
stmts	16:4	38:4	3	
water	16:4	0:0	4	{
decl	17:8	17:77	4	segment_t	*segment
op	17:27	0:0	4	=
call	17:29	17:76	5	segment_GetSegment
arg	17:48	17:51	6	hls
water	17:48	0:0	7	hls
arg	17:53	17:76	6	p_sys->download.segment
water	17:53	0:0	7	p_sys
op	17:58	0:0	7	->
water	17:60	0:0	7	download
op	17:68	0:0	7	.
water	17:69	0:0	7	segment
if	18:8	19:31	4	(segment == NULL)
cond	18:12	18:23	5	segment == NULL
water	18:12	0:0	6	segment
op	18:20	0:0	6	==
water	18:23	0:0	6	NULL
stmts	19:12	19:31	5	
return	19:12	19:31	6	VLC_EGENERIC
water	19:19	0:0	7	VLC_EGENERIC
if	22:8	26:8	4	(segment -> data)
cond	22:12	22:21	5	segment -> data
water	22:12	0:0	6	segment
op	22:19	0:0	6	->
water	22:21	0:0	6	data
stmts	23:8	26:8	5	
water	23:8	0:0	6	{
water	24:12	0:0	6	p_sys
op	24:17	0:0	6	->
water	24:19	0:0	6	download
op	24:27	0:0	6	.
water	24:28	0:0	6	segment
op	24:35	0:0	6	++
water	24:37	0:0	6	;
continue	25:12	25:20	6	
water	26:8	0:0	6	}
if	27:8	28:31	4	(hls_DownloadSegmentData (s ,hls ,segment ,current ) != VLC_SUCCESS)
cond	27:12	27:65	5	hls_DownloadSegmentData (s ,hls ,segment ,current ) != VLC_SUCCESS
call	27:12	27:60	6	hls_DownloadSegmentData
arg	27:36	27:37	7	s
water	27:36	0:0	8	s
arg	27:39	27:42	7	hls
water	27:39	0:0	8	hls
arg	27:44	27:51	7	segment
water	27:44	0:0	8	segment
arg	27:53	27:60	7	current
water	27:53	0:0	8	current
op	27:62	0:0	6	!=
water	27:65	0:0	6	VLC_SUCCESS
stmts	28:12	28:31	5	
return	28:12	28:31	6	VLC_EGENERIC
water	28:19	0:0	7	VLC_EGENERIC
water	29:8	0:0	4	p_sys
op	29:13	0:0	4	->
water	29:15	0:0	4	download
op	29:23	0:0	4	.
water	29:24	0:0	4	segment
op	29:31	0:0	4	++
water	29:33	0:0	4	;
if	31:8	37:8	4	(* current != stream)
cond	31:12	31:24	5	* current != stream
op	31:12	0:0	6	*
water	31:13	0:0	6	current
op	31:21	0:0	6	!=
water	31:24	0:0	6	stream
stmts	32:8	37:8	5	
water	32:8	0:0	6	{
decl	33:12	33:68	6	hls_stream_t	*hls
op	33:30	0:0	6	=
call	33:32	33:67	7	hls_Get
arg	33:40	33:57	8	p_sys->hls_stream
water	33:40	0:0	9	p_sys
op	33:45	0:0	9	->
water	33:47	0:0	9	hls_stream
arg	33:59	33:67	8	*current
op	33:59	0:0	9	*
water	33:60	0:0	9	current
if	34:12	35:35	6	(hls == NULL)
cond	34:16	34:23	7	hls == NULL
water	34:16	0:0	8	hls
op	34:20	0:0	8	==
water	34:23	0:0	8	NULL
stmts	35:16	35:35	7	
return	35:16	35:35	8	VLC_EGENERIC
water	35:23	0:0	9	VLC_EGENERIC
water	36:13	0:0	6	stream
op	36:20	0:0	6	=
op	36:22	0:0	6	*
water	36:23	0:0	6	current
water	36:30	0:0	6	;
water	37:8	0:0	6	}
water	38:4	0:0	4	}
return	39:4	39:22	2	VLC_SUCCESS
water	39:11	0:0	3	VLC_SUCCESS

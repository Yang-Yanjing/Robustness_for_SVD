decl	1:7	1:40	0	int	asmrp_condition
water	1:27	0:0	0	(
water	1:28	0:0	0	asmrp_t
op	1:36	0:0	0	*
water	1:37	0:0	0	p
water	1:38	0:0	0	)
func	2:0	39:0	0	static int	asmrp_operand
params	2:25	0:0	1	
param	2:26	2:36	2	asmrp_t *	p
stmnts	0:0	38:12	1	
decl	3:2	3:12	2	int	i
water	3:7	0:0	2	,
decl	3:2	3:12	2	int	ret
call	4:2	4:22	2	lprintf
arg	4:11	4:22	3	"operand\n"
water	4:11	0:0	4	"operand\n"
water	4:23	0:0	2	;
water	5:2	0:0	2	ret
op	5:6	0:0	2	=
water	5:8	0:0	2	0
water	5:9	0:0	2	;
switch	6:2	36:2	2	(p -> sym)
cond	6:10	6:13	3	p -> sym
water	6:10	0:0	4	p
op	6:11	0:0	4	->
water	6:13	0:0	4	sym
stmts	6:18	36:2	3	
water	6:18	0:0	4	{
label	7:2	7:23	4	case ASMRP_SYM_DOLLAR :
call	8:4	8:20	4	asmrp_get_sym
arg	8:19	8:20	5	p
water	8:19	0:0	6	p
water	8:21	0:0	4	;
if	9:4	12:4	4	(p -> sym != ASMRP_SYM_ID)
cond	9:8	9:18	5	p -> sym != ASMRP_SYM_ID
water	9:8	0:0	6	p
op	9:9	0:0	6	->
water	9:11	0:0	6	sym
op	9:15	0:0	6	!=
water	9:18	0:0	6	ASMRP_SYM_ID
stmts	9:32	12:4	5	
water	9:32	0:0	6	{
call	10:6	10:45	6	printf
arg	10:14	10:45	7	"error: identifier expected.\n"
water	10:14	0:0	8	"error: identifier expected.\n"
water	10:46	0:0	6	;
break	11:6	11:11	6	
water	12:4	0:0	6	}
water	13:4	0:0	4	i
op	13:6	0:0	4	=
call	13:8	13:32	4	asmrp_find_id
arg	13:23	13:24	5	p
water	13:23	0:0	6	p
arg	13:26	13:32	5	p->str
water	13:26	0:0	6	p
op	13:27	0:0	6	->
water	13:29	0:0	6	str
water	13:33	0:0	4	;
if	14:4	16:4	4	(i < 0)
cond	14:8	14:10	5	i < 0
water	14:8	0:0	6	i
op	14:9	0:0	6	<
water	14:10	0:0	6	0
stmts	14:13	16:4	5	
water	14:13	0:0	6	{
call	15:6	15:55	6	lprintf
arg	15:15	15:47	7	"error: unknown identifier %s\n"
water	15:15	0:0	8	"error: unknown identifier %s\n"
arg	15:49	15:55	7	p->str
water	15:49	0:0	8	p
op	15:50	0:0	8	->
water	15:52	0:0	8	str
water	15:56	0:0	6	;
water	16:4	0:0	6	}
water	17:4	0:0	4	ret
op	17:8	0:0	4	=
water	17:10	0:0	4	p
op	17:11	0:0	4	->
water	17:13	0:0	4	sym_tab
op	17:20	0:0	4	[
water	17:21	0:0	4	i
op	17:22	0:0	4	]
op	17:23	0:0	4	.
water	17:24	0:0	4	v
water	17:25	0:0	4	;
call	18:4	18:20	4	asmrp_get_sym
arg	18:19	18:20	5	p
water	18:19	0:0	6	p
water	18:21	0:0	4	;
break	19:4	19:9	4	
label	20:2	20:20	4	case ASMRP_SYM_NUM :
water	21:4	0:0	4	ret
op	21:8	0:0	4	=
water	21:10	0:0	4	p
op	21:11	0:0	4	->
water	21:13	0:0	4	num
water	21:16	0:0	4	;
call	22:4	22:20	4	asmrp_get_sym
arg	22:19	22:20	5	p
water	22:19	0:0	6	p
water	22:21	0:0	4	;
break	23:4	23:9	4	
label	24:2	24:23	4	case ASMRP_SYM_LPAREN :
call	25:4	25:20	4	asmrp_get_sym
arg	25:19	25:20	5	p
water	25:19	0:0	6	p
water	25:21	0:0	4	;
water	26:4	0:0	4	ret
op	26:8	0:0	4	=
call	26:10	26:28	4	asmrp_condition
arg	26:27	26:28	5	p
water	26:27	0:0	6	p
water	26:29	0:0	4	;
if	27:4	30:4	4	(p -> sym != ASMRP_SYM_RPAREN)
cond	27:8	27:18	5	p -> sym != ASMRP_SYM_RPAREN
water	27:8	0:0	6	p
op	27:9	0:0	6	->
water	27:11	0:0	6	sym
op	27:15	0:0	6	!=
water	27:18	0:0	6	ASMRP_SYM_RPAREN
stmts	27:36	30:4	5	
water	27:36	0:0	6	{
call	28:6	28:36	6	printf
arg	28:14	28:36	7	"error: ) expected.\n"
water	28:14	0:0	8	"error: ) expected.\n"
water	28:37	0:0	6	;
break	29:6	29:11	6	
water	30:4	0:0	6	}
call	31:4	31:20	4	asmrp_get_sym
arg	31:19	31:20	5	p
water	31:19	0:0	6	p
water	31:21	0:0	4	;
break	32:4	32:9	4	
label	33:2	33:9	4	default :
call	34:4	34:53	4	lprintf
arg	34:13	34:53	5	"syntax error, $ number or ( expected\n"
water	34:13	0:0	6	"syntax error, $ number or ( expected\n"
water	34:54	0:0	4	;
break	35:4	35:9	4	
water	36:2	0:0	4	}
call	37:2	37:37	2	lprintf
arg	37:11	37:32	3	"operand done, =%d\n"
water	37:11	0:0	4	"operand done, =%d\n"
arg	37:34	37:37	3	ret
water	37:34	0:0	4	ret
water	37:38	0:0	2	;
return	38:2	38:12	2	ret
water	38:9	0:0	3	ret

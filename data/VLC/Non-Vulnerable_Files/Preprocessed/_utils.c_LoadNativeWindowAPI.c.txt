func	2:0	23:0	0	void *	LoadNativeWindowAPI
params	2:25	0:0	1	
param	2:26	2:53	2	native_window_api_t *	native
stmnts	0:0	22:15	1	
decl	4:4	4:55	2	void	*p_library
op	4:20	0:0	2	=
call	4:22	4:54	3	dlopen
arg	4:29	4:44	4	"libandroid.so"
water	4:29	0:0	5	"libandroid.so"
arg	4:46	4:54	4	RTLD_NOW
water	4:46	0:0	5	RTLD_NOW
if	5:4	6:19	2	(! p_library)
cond	5:8	5:9	3	! p_library
op	5:8	0:0	4	!
water	5:9	0:0	4	p_library
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
water	7:4	0:0	2	native
op	7:10	0:0	2	->
water	7:12	0:0	2	winFromSurface
op	7:27	0:0	2	=
call	8:8	8:85	2	(ptr_ANativeWindow_fromSurface)
arg	8:40	8:85	3	dlsym(p_library,"ANativeWindow_fromSurface")
call	8:40	8:84	4	dlsym
arg	8:46	8:55	5	p_library
water	8:46	0:0	6	p_library
arg	8:57	8:84	5	"ANativeWindow_fromSurface"
water	8:57	0:0	6	"ANativeWindow_fromSurface"
water	8:86	0:0	2	;
water	9:4	0:0	2	native
op	9:10	0:0	2	->
water	9:12	0:0	2	winRelease
op	9:23	0:0	2	=
call	10:8	10:77	2	(ptr_ANativeWindow_release)
arg	10:36	10:77	3	dlsym(p_library,"ANativeWindow_release")
call	10:36	10:76	4	dlsym
arg	10:42	10:51	5	p_library
water	10:42	0:0	6	p_library
arg	10:53	10:76	5	"ANativeWindow_release"
water	10:53	0:0	6	"ANativeWindow_release"
water	10:78	0:0	2	;
water	11:4	0:0	2	native
op	11:10	0:0	2	->
water	11:12	0:0	2	winLock
op	11:20	0:0	2	=
call	12:8	12:71	2	(ptr_ANativeWindow_lock)
arg	12:33	12:71	3	dlsym(p_library,"ANativeWindow_lock")
call	12:33	12:70	4	dlsym
arg	12:39	12:48	5	p_library
water	12:39	0:0	6	p_library
arg	12:50	12:70	5	"ANativeWindow_lock"
water	12:50	0:0	6	"ANativeWindow_lock"
water	12:72	0:0	2	;
water	13:4	0:0	2	native
op	13:10	0:0	2	->
water	13:12	0:0	2	unlockAndPost
op	13:26	0:0	2	=
call	14:8	14:89	2	(ptr_ANativeWindow_unlockAndPost)
arg	14:42	14:89	3	dlsym(p_library,"ANativeWindow_unlockAndPost")
call	14:42	14:88	4	dlsym
arg	14:48	14:57	5	p_library
water	14:48	0:0	6	p_library
arg	14:59	14:88	5	"ANativeWindow_unlockAndPost"
water	14:59	0:0	6	"ANativeWindow_unlockAndPost"
water	14:90	0:0	2	;
if	15:4	16:24	2	(native -> winFromSurface && native -> winRelease && native -> winLock && native -> unlockAndPost)
cond	15:8	15:83	3	native -> winFromSurface && native -> winRelease && native -> winLock && native -> unlockAndPost
water	15:8	0:0	4	native
op	15:14	0:0	4	->
water	15:16	0:0	4	winFromSurface
op	15:31	0:0	4	&&
water	15:34	0:0	4	native
op	15:40	0:0	4	->
water	15:42	0:0	4	winRelease
op	15:53	0:0	4	&&
water	15:56	0:0	4	native
op	15:62	0:0	4	->
water	15:64	0:0	4	winLock
op	15:72	0:0	4	&&
water	15:75	0:0	4	native
op	15:81	0:0	4	->
water	15:83	0:0	4	unlockAndPost
stmts	16:8	16:24	3	
return	16:8	16:24	4	p_library
water	16:15	0:0	5	p_library
water	17:4	0:0	2	native
op	17:10	0:0	2	->
water	17:12	0:0	2	winFromSurface
op	17:27	0:0	2	=
water	17:29	0:0	2	NULL
water	17:33	0:0	2	;
water	18:4	0:0	2	native
op	18:10	0:0	2	->
water	18:12	0:0	2	winRelease
op	18:23	0:0	2	=
water	18:25	0:0	2	NULL
water	18:29	0:0	2	;
water	19:4	0:0	2	native
op	19:10	0:0	2	->
water	19:12	0:0	2	winLock
op	19:20	0:0	2	=
water	19:22	0:0	2	NULL
water	19:26	0:0	2	;
water	20:4	0:0	2	native
op	20:10	0:0	2	->
water	20:12	0:0	2	unlockAndPost
op	20:26	0:0	2	=
water	20:28	0:0	2	NULL
water	20:32	0:0	2	;
call	21:4	21:21	2	dlclose
arg	21:12	21:21	3	p_library
water	21:12	0:0	4	p_library
water	21:22	0:0	2	;
return	22:4	22:15	2	NULL
water	22:11	0:0	3	NULL

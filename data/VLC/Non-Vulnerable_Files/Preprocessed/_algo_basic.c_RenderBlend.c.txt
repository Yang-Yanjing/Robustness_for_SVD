func	2:0	27:0	0	void	RenderBlend
params	2:16	0:0	1	
param	2:18	2:36	2	filter_t *	p_filter
param	3:18	3:37	2	picture_t *	p_outpic
param	3:39	3:56	2	picture_t *	p_pic
stmnts	0:0	26:14	1	
decl	5:4	5:15	2	int	i_plane
for	7:4	25:4	2	(i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	7:9	7:21	3	i_plane = 0 ;
water	7:9	0:0	4	i_plane
op	7:17	0:0	4	=
water	7:19	0:0	4	0
water	7:21	0:0	4	;
cond	7:23	7:40	3	i_plane < p_pic -> i_planes
water	7:23	0:0	4	i_plane
op	7:31	0:0	4	<
water	7:33	0:0	4	p_pic
op	7:38	0:0	4	->
water	7:40	0:0	4	i_planes
forexpr	7:51	7:58	3	i_plane ++
water	7:51	0:0	4	i_plane
op	7:58	0:0	4	++
stmts	8:4	25:4	3	
water	8:4	0:0	4	{
decl	9:8	9:41	4	uint8_t	*p_in
water	9:21	0:0	4	,
decl	9:8	9:41	4	uint8_t	*p_out_end
water	9:33	0:0	4	,
decl	9:8	9:41	4	uint8_t	*p_out
water	10:8	0:0	4	p_in
op	10:13	0:0	4	=
water	10:15	0:0	4	p_pic
op	10:20	0:0	4	->
water	10:22	0:0	4	p
op	10:23	0:0	4	[
water	10:24	0:0	4	i_plane
op	10:31	0:0	4	]
op	10:32	0:0	4	.
water	10:33	0:0	4	p_pixels
water	10:41	0:0	4	;
water	11:8	0:0	4	p_out
op	11:14	0:0	4	=
water	11:16	0:0	4	p_outpic
op	11:24	0:0	4	->
water	11:26	0:0	4	p
op	11:27	0:0	4	[
water	11:28	0:0	4	i_plane
op	11:35	0:0	4	]
op	11:36	0:0	4	.
water	11:37	0:0	4	p_pixels
water	11:45	0:0	4	;
water	12:8	0:0	4	p_out_end
op	12:18	0:0	4	=
water	12:20	0:0	4	p_out
op	12:26	0:0	4	+
water	12:28	0:0	4	p_outpic
op	12:36	0:0	4	->
water	12:38	0:0	4	p
op	12:39	0:0	4	[
water	12:40	0:0	4	i_plane
op	12:47	0:0	4	]
op	12:48	0:0	4	.
water	12:49	0:0	4	i_pitch
op	13:29	0:0	4	*
water	13:31	0:0	4	p_outpic
op	13:39	0:0	4	->
water	13:41	0:0	4	p
op	13:42	0:0	4	[
water	13:43	0:0	4	i_plane
op	13:50	0:0	4	]
op	13:51	0:0	4	.
water	13:52	0:0	4	i_visible_lines
water	13:67	0:0	4	;
call	15:8	15:55	4	memcpy
arg	15:16	15:21	5	p_out
water	15:16	0:0	6	p_out
arg	15:23	15:27	5	p_in
water	15:23	0:0	6	p_in
arg	15:29	15:55	5	p_pic->p[i_plane].i_pitch
water	15:29	0:0	6	p_pic
op	15:34	0:0	6	->
water	15:36	0:0	6	p
op	15:37	0:0	6	[
water	15:38	0:0	6	i_plane
op	15:45	0:0	6	]
op	15:46	0:0	6	.
water	15:47	0:0	6	i_pitch
water	15:56	0:0	4	;
water	16:8	0:0	4	p_out
op	16:14	0:0	4	+=
water	16:17	0:0	4	p_outpic
op	16:25	0:0	4	->
water	16:27	0:0	4	p
op	16:28	0:0	4	[
water	16:29	0:0	4	i_plane
op	16:36	0:0	4	]
op	16:37	0:0	4	.
water	16:38	0:0	4	i_pitch
water	16:45	0:0	4	;
for	18:8	24:8	4	(;p_out < p_out_end;)
forinit	18:13	18:13	5	;
water	18:13	0:0	6	;
cond	18:15	18:23	5	p_out < p_out_end
water	18:15	0:0	6	p_out
op	18:21	0:0	6	<
water	18:23	0:0	6	p_out_end
forexpr	0:0	0:0	5	
stmts	19:8	24:8	5	
water	19:8	0:0	6	{
call	20:12	21:45	6	Merge
arg	20:19	20:24	7	p_out
water	20:19	0:0	8	p_out
arg	20:26	20:30	7	p_in
water	20:26	0:0	8	p_in
arg	20:32	20:64	7	p_in+p_pic->p[i_plane].i_pitch
water	20:32	0:0	8	p_in
op	20:37	0:0	8	+
water	20:39	0:0	8	p_pic
op	20:44	0:0	8	->
water	20:46	0:0	8	p
op	20:47	0:0	8	[
water	20:48	0:0	8	i_plane
op	20:55	0:0	8	]
op	20:56	0:0	8	.
water	20:57	0:0	8	i_pitch
arg	21:19	21:45	7	p_pic->p[i_plane].i_pitch
water	21:19	0:0	8	p_pic
op	21:24	0:0	8	->
water	21:26	0:0	8	p
op	21:27	0:0	8	[
water	21:28	0:0	8	i_plane
op	21:35	0:0	8	]
op	21:36	0:0	8	.
water	21:37	0:0	8	i_pitch
water	21:46	0:0	6	;
water	22:12	0:0	6	p_out
op	22:18	0:0	6	+=
water	22:21	0:0	6	p_outpic
op	22:29	0:0	6	->
water	22:31	0:0	6	p
op	22:32	0:0	6	[
water	22:33	0:0	6	i_plane
op	22:40	0:0	6	]
op	22:41	0:0	6	.
water	22:42	0:0	6	i_pitch
water	22:49	0:0	6	;
water	23:12	0:0	6	p_in
op	23:18	0:0	6	+=
water	23:21	0:0	6	p_pic
op	23:26	0:0	6	->
water	23:28	0:0	6	p
op	23:29	0:0	6	[
water	23:30	0:0	6	i_plane
op	23:37	0:0	6	]
op	23:38	0:0	6	.
water	23:39	0:0	6	i_pitch
water	23:46	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}
call	26:4	26:13	2	EndMerge
water	26:14	0:0	2	;

func	2:0	46:0	0	void	vlc_object_release
params	2:23	0:0	1	
param	2:25	2:46	2	vlc_object_t *	p_this
stmnts	0:0	45:4	1	
decl	4:4	4:63	2	vlc_object_internals_t	*internals
op	4:38	0:0	2	=
call	4:40	4:62	3	vlc_internals
arg	4:55	4:62	4	p_this
water	4:55	0:0	5	p_this
decl	5:4	5:31	2	vlc_object_t	*parent
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	refs
op	6:18	0:0	2	=
call	6:20	6:49	2	atomic_load
arg	6:33	6:49	3	&internals->refs
op	6:33	0:0	4	&
water	6:34	0:0	4	internals
op	6:43	0:0	4	->
water	6:45	0:0	4	refs
water	6:50	0:0	2	;
while	8:4	13:4	2	(refs > 1)
cond	8:11	8:18	3	refs > 1
water	8:11	0:0	4	refs
op	8:16	0:0	4	>
water	8:18	0:0	4	1
stmts	9:4	13:4	3	
water	9:4	0:0	4	{
if	10:8	11:18	4	(atomic_compare_exchange_weak (& internals -> refs ,& refs ,refs - 1 ))
cond	10:12	10:75	5	atomic_compare_exchange_weak (& internals -> refs ,& refs ,refs - 1 )
call	10:12	10:75	6	atomic_compare_exchange_weak
arg	10:42	10:58	7	&internals->refs
op	10:42	0:0	8	&
water	10:43	0:0	8	internals
op	10:52	0:0	8	->
water	10:54	0:0	8	refs
arg	10:60	10:65	7	&refs
op	10:60	0:0	8	&
water	10:61	0:0	8	refs
arg	10:67	10:75	7	refs-1
water	10:67	0:0	8	refs
op	10:72	0:0	8	-
water	10:74	0:0	8	1
stmts	11:12	11:18	5	
return	11:12	11:18	6	
call	12:8	12:24	4	assert
arg	12:16	12:24	5	refs>0
water	12:16	0:0	6	refs
op	12:21	0:0	6	>
water	12:23	0:0	6	0
water	12:25	0:0	4	;
water	13:4	0:0	4	}
call	15:4	15:33	2	libvlc_lock
arg	15:17	15:33	3	p_this->p_libvlc
water	15:17	0:0	4	p_this
op	15:23	0:0	4	->
water	15:25	0:0	4	p_libvlc
water	15:34	0:0	2	;
water	16:4	0:0	2	refs
op	16:9	0:0	2	=
call	16:11	16:48	2	atomic_fetch_sub
arg	16:29	16:45	3	&internals->refs
op	16:29	0:0	4	&
water	16:30	0:0	4	internals
op	16:39	0:0	4	->
water	16:41	0:0	4	refs
arg	16:47	16:48	3	1
water	16:47	0:0	4	1
water	16:49	0:0	2	;
call	17:4	17:20	2	assert
arg	17:12	17:20	3	refs>0
water	17:12	0:0	4	refs
op	17:17	0:0	4	>
water	17:19	0:0	4	0
water	17:21	0:0	2	;
if	18:4	36:4	2	(likely (refs == 1 ))
cond	18:8	18:24	3	likely (refs == 1 )
call	18:8	18:24	4	likely
arg	18:15	18:24	5	refs==1
water	18:15	0:0	6	refs
op	18:20	0:0	6	==
water	18:23	0:0	6	1
stmts	19:4	36:4	3	
water	19:4	0:0	4	{
water	21:8	0:0	4	parent
op	21:15	0:0	4	=
water	21:17	0:0	4	p_this
op	21:23	0:0	4	->
water	21:25	0:0	4	p_parent
water	21:33	0:0	4	;
if	22:8	33:8	4	(likely (parent ))
cond	22:12	22:25	5	likely (parent )
call	22:12	22:25	6	likely
arg	22:19	22:25	7	parent
water	22:19	0:0	8	parent
stmts	23:8	33:8	5	
water	23:8	0:0	6	{
decl	25:11	25:57	6	vlc_object_internals_t	*prev
op	25:40	0:0	6	=
water	25:42	0:0	6	internals
op	25:51	0:0	6	->
water	25:53	0:0	6	prev
decl	26:11	26:57	6	vlc_object_internals_t	*next
op	26:40	0:0	6	=
water	26:42	0:0	6	internals
op	26:51	0:0	6	->
water	26:53	0:0	6	next
if	27:11	28:32	6	(prev != NULL)
cond	27:15	27:23	7	prev != NULL
water	27:15	0:0	8	prev
op	27:20	0:0	8	!=
water	27:23	0:0	8	NULL
stmts	28:15	28:32	7	
water	28:15	0:0	8	prev
op	28:19	0:0	8	->
water	28:21	0:0	8	next
op	28:26	0:0	8	=
water	28:28	0:0	8	next
water	28:32	0:0	8	;
else	29:11	30:51	6
stmts	30:15	30:51	7	
call	30:15	30:36	8	vlc_internals
arg	30:30	30:36	9	parent
water	30:30	0:0	10	parent
op	30:37	0:0	8	->
water	30:39	0:0	8	first
op	30:45	0:0	8	=
water	30:47	0:0	8	next
water	30:51	0:0	8	;
if	31:11	32:32	6	(next != NULL)
cond	31:15	31:23	7	next != NULL
water	31:15	0:0	8	next
op	31:20	0:0	8	!=
water	31:23	0:0	8	NULL
stmts	32:15	32:32	7	
water	32:15	0:0	8	next
op	32:19	0:0	8	->
water	32:21	0:0	8	prev
op	32:26	0:0	8	=
water	32:28	0:0	8	prev
water	32:32	0:0	8	;
water	33:8	0:0	6	}
call	35:8	35:40	4	assert
arg	35:16	35:40	5	internals->first==NULL
water	35:16	0:0	6	internals
op	35:25	0:0	6	->
water	35:27	0:0	6	first
op	35:33	0:0	6	==
water	35:36	0:0	6	NULL
water	35:41	0:0	4	;
water	36:4	0:0	4	}
call	37:4	37:35	2	libvlc_unlock
arg	37:19	37:35	3	p_this->p_libvlc
water	37:19	0:0	4	p_this
op	37:25	0:0	4	->
water	37:27	0:0	4	p_libvlc
water	37:36	0:0	2	;
if	38:4	45:4	2	(likely (refs == 1 ))
cond	38:8	38:24	3	likely (refs == 1 )
call	38:8	38:24	4	likely
arg	38:15	38:24	5	refs==1
water	38:15	0:0	6	refs
op	38:20	0:0	6	==
water	38:23	0:0	6	1
stmts	39:4	45:4	3	
water	39:4	0:0	4	{
decl	40:8	40:36	4	int	canc
op	40:17	0:0	4	=
call	40:19	40:35	5	vlc_savecancel
call	41:8	41:35	4	vlc_object_destroy
arg	41:28	41:35	5	p_this
water	41:28	0:0	6	p_this
water	41:36	0:0	4	;
call	42:8	42:31	4	vlc_restorecancel
arg	42:27	42:31	5	canc
water	42:27	0:0	6	canc
water	42:32	0:0	4	;
if	43:8	44:39	4	(parent)
cond	43:12	43:12	5	parent
water	43:12	0:0	6	parent
stmts	44:12	44:39	5	
call	44:12	44:38	6	vlc_object_release
arg	44:32	44:38	7	parent
water	44:32	0:0	8	parent
water	44:39	0:0	6	;
water	45:4	0:0	4	}

func	2:0	93:0	0	static block_t *	DecodeFrame
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	92:24	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:39	2	block_t	*p_aout_buffer
op	6:33	0:0	2	=
water	6:35	0:0	2	NULL
if	7:4	7:45	2	(! pp_block || ! * pp_block)
cond	7:8	7:23	3	! pp_block || ! * pp_block
op	7:8	0:0	4	!
water	7:9	0:0	4	pp_block
op	7:18	0:0	4	||
op	7:21	0:0	4	!
op	7:22	0:0	4	*
water	7:23	0:0	4	pp_block
stmts	7:34	7:45	3	
return	7:34	7:45	4	NULL
water	7:41	0:0	5	NULL
water	8:4	0:0	2	p_block
op	8:12	0:0	2	=
op	8:14	0:0	2	*
water	8:15	0:0	2	pp_block
water	8:23	0:0	2	;
if	9:4	15:4	2	(p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	9:8	9:71	3	p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	9:8	0:0	4	p_block
op	9:15	0:0	4	->
water	9:17	0:0	4	i_flags
op	9:24	0:0	4	&
water	9:25	0:0	4	(
water	9:26	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	9:50	0:0	4	|
water	9:51	0:0	4	BLOCK_FLAG_CORRUPTED
water	9:71	0:0	4	)
stmts	10:4	15:4	3	
water	10:4	0:0	4	{
call	11:8	11:38	4	date_Set
arg	11:18	11:34	5	&p_sys->end_date
op	11:18	0:0	6	&
water	11:19	0:0	6	p_sys
op	11:24	0:0	6	->
water	11:26	0:0	6	end_date
arg	11:36	11:38	5	0
water	11:36	0:0	6	0
water	11:39	0:0	4	;
call	12:8	12:31	4	block_Release
arg	12:23	12:31	5	p_block
water	12:23	0:0	6	p_block
water	12:32	0:0	4	;
op	13:8	0:0	4	*
water	13:9	0:0	4	pp_block
op	13:18	0:0	4	=
water	13:20	0:0	4	NULL
water	13:24	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
if	16:4	29:4	2	(p_block -> i_buffer <= 0)
cond	16:8	16:29	3	p_block -> i_buffer <= 0
water	16:8	0:0	4	p_block
op	16:15	0:0	4	->
water	16:17	0:0	4	i_buffer
op	16:26	0:0	4	<=
water	16:29	0:0	4	0
stmts	17:4	29:4	3	
water	17:4	0:0	4	{
if	19:8	20:48	4	(p_sys -> i_samples)
cond	19:12	19:19	5	p_sys -> i_samples
water	19:12	0:0	6	p_sys
op	19:17	0:0	6	->
water	19:19	0:0	6	i_samples
stmts	20:12	20:48	5	
water	20:12	0:0	6	p_aout_buffer
op	20:26	0:0	6	=
call	20:28	20:47	6	SplitBuffer
arg	20:41	20:47	7	p_dec
water	20:41	0:0	8	p_dec
water	20:48	0:0	6	;
if	21:8	27:8	4	(! p_sys -> i_samples)
cond	21:12	21:20	5	! p_sys -> i_samples
op	21:12	0:0	6	!
water	21:13	0:0	6	p_sys
op	21:18	0:0	6	->
water	21:20	0:0	6	i_samples
stmts	22:8	27:8	5	
water	22:8	0:0	6	{
call	23:12	23:34	6	free
arg	23:18	23:34	7	p_sys->p_output
water	23:18	0:0	8	p_sys
op	23:23	0:0	8	->
water	23:25	0:0	8	p_output
water	23:35	0:0	6	;
water	24:12	0:0	6	p_sys
op	24:17	0:0	6	->
water	24:19	0:0	6	p_output
op	24:28	0:0	6	=
water	24:30	0:0	6	NULL
water	24:34	0:0	6	;
call	25:12	25:35	6	block_Release
arg	25:27	25:35	7	p_block
water	25:27	0:0	8	p_block
water	25:36	0:0	6	;
op	26:12	0:0	6	*
water	26:13	0:0	6	pp_block
op	26:22	0:0	6	=
water	26:24	0:0	6	NULL
water	26:28	0:0	6	;
water	27:8	0:0	6	}
return	28:8	28:28	4	p_aout_buffer
water	28:15	0:0	5	p_aout_buffer
water	29:4	0:0	4	}
if	31:4	37:4	2	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date ))
cond	31:8	32:53	3	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date )
water	31:8	0:0	4	p_block
op	31:15	0:0	4	->
water	31:17	0:0	4	i_pts
op	31:23	0:0	4	>
water	31:25	0:0	4	VLC_TS_INVALID
op	31:40	0:0	4	&&
water	32:8	0:0	4	p_block
op	32:15	0:0	4	->
water	32:17	0:0	4	i_pts
op	32:23	0:0	4	!=
call	32:26	32:53	4	date_Get
arg	32:36	32:53	5	&p_sys->end_date
op	32:36	0:0	6	&
water	32:37	0:0	6	p_sys
op	32:42	0:0	6	->
water	32:44	0:0	6	end_date
stmts	33:4	37:4	3	
water	33:4	0:0	4	{
call	34:8	34:51	4	date_Set
arg	34:18	34:34	5	&p_sys->end_date
op	34:18	0:0	6	&
water	34:19	0:0	6	p_sys
op	34:24	0:0	6	->
water	34:26	0:0	6	end_date
arg	34:36	34:51	5	p_block->i_pts
water	34:36	0:0	6	p_block
op	34:43	0:0	6	->
water	34:45	0:0	6	i_pts
water	34:52	0:0	4	;
water	36:8	0:0	4	p_block
op	36:15	0:0	4	->
water	36:17	0:0	4	i_pts
op	36:23	0:0	4	=
water	36:25	0:0	4	VLC_TS_INVALID
water	36:39	0:0	4	;
water	37:4	0:0	4	}
else	38:4	43:4	2
stmts	38:9	43:4	3	
if	38:9	43:4	4	(!date_Get (& p_sys -> end_date ))
cond	38:13	38:41	5	!date_Get (& p_sys -> end_date )
op	38:13	0:0	6	!
call	38:14	38:41	6	date_Get
arg	38:24	38:41	7	&p_sys->end_date
op	38:24	0:0	8	&
water	38:25	0:0	8	p_sys
op	38:30	0:0	8	->
water	38:32	0:0	8	end_date
stmts	39:4	43:4	5	
water	39:4	0:0	6	{
call	41:8	41:31	6	block_Release
arg	41:23	41:31	7	p_block
water	41:23	0:0	8	p_block
water	41:32	0:0	6	;
return	42:8	42:19	6	NULL
water	42:15	0:0	7	NULL
water	43:4	0:0	6	}
if	44:4	51:4	2	(wma_decode_superframe_init (& p_sys -> wmadec ,p_block -> p_buffer ,p_block -> i_buffer ) == 0)
cond	44:8	45:35	3	wma_decode_superframe_init (& p_sys -> wmadec ,p_block -> p_buffer ,p_block -> i_buffer ) == 0
call	44:8	45:30	4	wma_decode_superframe_init
arg	44:36	44:50	5	&p_sys->wmadec
op	44:36	0:0	6	&
water	44:37	0:0	6	p_sys
op	44:42	0:0	6	->
water	44:44	0:0	6	wmadec
arg	44:52	44:69	5	p_block->p_buffer
water	44:52	0:0	6	p_block
op	44:59	0:0	6	->
water	44:61	0:0	6	p_buffer
arg	45:12	45:30	5	p_block->i_buffer
water	45:12	0:0	6	p_block
op	45:19	0:0	6	->
water	45:21	0:0	6	i_buffer
op	45:32	0:0	4	==
water	45:35	0:0	4	0
stmts	46:4	51:4	3	
water	46:4	0:0	4	{
call	47:8	47:63	4	msg_Err
arg	47:17	47:22	5	p_dec
water	47:17	0:0	6	p_dec
arg	47:24	47:63	5	"failed initializing wmafixed decoder"
water	47:24	0:0	6	"failed initializing wmafixed decoder"
water	47:64	0:0	4	;
call	48:8	48:31	4	block_Release
arg	48:23	48:31	5	p_block
water	48:23	0:0	6	p_block
water	48:32	0:0	4	;
op	49:8	0:0	4	*
water	49:9	0:0	4	pp_block
op	49:18	0:0	4	=
water	49:20	0:0	4	NULL
water	49:24	0:0	4	;
return	50:8	50:19	4	NULL
water	50:15	0:0	5	NULL
water	51:4	0:0	4	}
if	52:4	58:4	2	(p_sys -> wmadec . nb_frames <= 0)
cond	52:8	52:35	3	p_sys -> wmadec . nb_frames <= 0
water	52:8	0:0	4	p_sys
op	52:13	0:0	4	->
water	52:15	0:0	4	wmadec
op	52:21	0:0	4	.
water	52:22	0:0	4	nb_frames
op	52:32	0:0	4	<=
water	52:35	0:0	4	0
stmts	53:4	58:4	3	
water	53:4	0:0	4	{
call	54:8	54:63	4	msg_Err
arg	54:17	54:22	5	p_dec
water	54:17	0:0	6	p_dec
arg	54:24	54:63	5	"can not decode, invalid ASF packet ?"
water	54:24	0:0	6	"can not decode, invalid ASF packet ?"
water	54:64	0:0	4	;
call	55:8	55:31	4	block_Release
arg	55:23	55:31	5	p_block
water	55:23	0:0	6	p_block
water	55:32	0:0	4	;
op	56:8	0:0	4	*
water	56:9	0:0	4	pp_block
op	56:18	0:0	4	=
water	56:20	0:0	4	NULL
water	56:24	0:0	4	;
return	57:8	57:19	4	NULL
water	57:15	0:0	5	NULL
water	58:4	0:0	4	}
decl	60:4	60:77	2	size_t	i_buffer
op	60:20	0:0	2	=
water	60:22	0:0	2	BLOCK_MAX_SIZE
op	60:37	0:0	2	*
water	60:39	0:0	2	MAX_CHANNELS
op	60:52	0:0	2	*
water	60:54	0:0	2	p_sys
op	60:59	0:0	2	->
water	60:61	0:0	2	wmadec
op	60:67	0:0	2	.
water	60:68	0:0	2	nb_frames
call	61:4	61:26	2	free
arg	61:10	61:26	3	p_sys->p_output
water	61:10	0:0	4	p_sys
op	61:15	0:0	4	->
water	61:17	0:0	4	p_output
water	61:27	0:0	2	;
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	p_output
op	62:20	0:0	2	=
call	62:22	62:56	2	malloc
arg	62:29	62:56	3	i_buffer*sizeof(int32_t)
water	62:29	0:0	4	i_buffer
op	62:38	0:0	4	*
op	62:40	0:0	4	sizeof
water	62:46	0:0	4	(
water	62:47	0:0	4	int32_t
water	62:54	0:0	4	)
water	62:57	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	p_samples
op	63:21	0:0	2	=
water	63:23	0:0	2	(
water	63:24	0:0	2	int8_t
op	63:30	0:0	2	*
water	63:31	0:0	2	)
water	63:32	0:0	2	p_sys
op	63:37	0:0	2	->
water	63:39	0:0	2	p_output
water	63:47	0:0	2	;
if	64:4	69:4	2	(! p_sys -> p_output)
cond	64:8	64:16	3	! p_sys -> p_output
op	64:8	0:0	4	!
water	64:9	0:0	4	p_sys
op	64:14	0:0	4	->
water	64:16	0:0	4	p_output
stmts	65:4	69:4	3	
water	65:4	0:0	4	{
call	67:8	67:31	4	block_Release
arg	67:23	67:31	5	p_block
water	67:23	0:0	6	p_block
water	67:32	0:0	4	;
return	68:8	68:19	4	NULL
water	68:15	0:0	5	NULL
water	69:4	0:0	4	}
water	70:4	0:0	2	p_sys
op	70:9	0:0	2	->
water	70:11	0:0	2	i_samples
op	70:21	0:0	2	=
water	70:23	0:0	2	0
water	70:24	0:0	2	;
for	71:4	86:4	2	( int i = 0 ;i < p_sys -> wmadec . nb_frames;i ++)
forinit	0:0	71:19	3	 int i = 0 ;
decl	71:9	71:19	4	int	i
op	71:15	0:0	4	=
water	71:17	0:0	4	0
cond	71:21	71:39	3	i < p_sys -> wmadec . nb_frames
water	71:21	0:0	4	i
op	71:23	0:0	4	<
water	71:25	0:0	4	p_sys
op	71:30	0:0	4	->
water	71:32	0:0	4	wmadec
op	71:38	0:0	4	.
water	71:39	0:0	4	nb_frames
forexpr	71:50	71:51	3	i ++
water	71:50	0:0	4	i
op	71:51	0:0	4	++
stmts	72:4	86:4	3	
water	72:4	0:0	4	{
decl	73:8	73:25	4	int	i_samples
op	73:22	0:0	4	=
water	73:24	0:0	4	0
water	74:8	0:0	4	i_samples
op	74:18	0:0	4	=
call	74:20	76:54	4	wma_decode_superframe_frame
arg	74:49	74:63	5	&p_sys->wmadec
op	74:49	0:0	6	&
water	74:50	0:0	6	p_sys
op	74:55	0:0	6	->
water	74:57	0:0	6	wmadec
arg	75:17	75:79	5	p_sys->p_output+p_sys->i_samples*p_sys->wmadec.nb_channels
water	75:17	0:0	6	p_sys
op	75:22	0:0	6	->
water	75:24	0:0	6	p_output
op	75:33	0:0	6	+
water	75:35	0:0	6	p_sys
op	75:40	0:0	6	->
water	75:42	0:0	6	i_samples
op	75:52	0:0	6	*
water	75:54	0:0	6	p_sys
op	75:59	0:0	6	->
water	75:61	0:0	6	wmadec
op	75:67	0:0	6	.
water	75:68	0:0	6	nb_channels
arg	76:17	76:34	5	p_block->p_buffer
water	76:17	0:0	6	p_block
op	76:24	0:0	6	->
water	76:26	0:0	6	p_buffer
arg	76:36	76:54	5	p_block->i_buffer
water	76:36	0:0	6	p_block
op	76:43	0:0	6	->
water	76:45	0:0	6	i_buffer
water	76:55	0:0	4	;
if	77:8	84:8	4	(i_samples < 0)
cond	77:12	77:24	5	i_samples < 0
water	77:12	0:0	6	i_samples
op	77:22	0:0	6	<
water	77:24	0:0	6	0
stmts	78:8	84:8	5	
water	78:8	0:0	6	{
call	79:12	80:71	6	msg_Warn
arg	79:22	79:27	7	p_dec
water	79:22	0:0	8	p_dec
arg	80:16	80:67	7	"wma_decode_superframe_frame() failed for frame %d"
water	80:16	0:0	8	"wma_decode_superframe_frame() failed for frame %d"
arg	80:69	80:71	7	i
water	80:69	0:0	8	i
water	80:72	0:0	6	;
call	81:12	81:34	6	free
arg	81:18	81:34	7	p_sys->p_output
water	81:18	0:0	8	p_sys
op	81:23	0:0	8	->
water	81:25	0:0	8	p_output
water	81:35	0:0	6	;
water	82:12	0:0	6	p_sys
op	82:17	0:0	6	->
water	82:19	0:0	6	p_output
op	82:28	0:0	6	=
water	82:30	0:0	6	NULL
water	82:34	0:0	6	;
return	83:12	83:23	6	NULL
water	83:19	0:0	7	NULL
water	84:8	0:0	6	}
water	85:8	0:0	4	p_sys
op	85:13	0:0	4	->
water	85:15	0:0	4	i_samples
op	85:25	0:0	4	+=
water	85:28	0:0	4	i_samples
water	85:37	0:0	4	;
water	86:4	0:0	4	}
water	87:4	0:0	2	p_block
op	87:11	0:0	2	->
water	87:13	0:0	2	i_buffer
op	87:22	0:0	2	=
water	87:24	0:0	2	0
water	87:25	0:0	2	;
for	88:4	89:32	2	( size_t s = 0 ;s < i_buffer;s ++)
forinit	0:0	88:22	3	 size_t s = 0 ;
decl	88:9	88:22	4	size_t	s
op	88:18	0:0	4	=
water	88:20	0:0	4	0
cond	88:24	88:28	3	s < i_buffer
water	88:24	0:0	4	s
op	88:26	0:0	4	<
water	88:28	0:0	4	i_buffer
forexpr	88:38	88:39	3	s ++
water	88:38	0:0	4	s
op	88:39	0:0	4	++
stmts	89:8	89:32	3	
water	89:8	0:0	4	p_sys
op	89:13	0:0	4	->
water	89:15	0:0	4	p_output
op	89:23	0:0	4	[
water	89:24	0:0	4	s
op	89:25	0:0	4	]
op	89:27	0:0	4	<<=
water	89:31	0:0	4	2
water	89:32	0:0	4	;
water	90:4	0:0	2	p_aout_buffer
op	90:18	0:0	2	=
call	90:20	90:39	2	SplitBuffer
arg	90:33	90:39	3	p_dec
water	90:33	0:0	4	p_dec
water	90:40	0:0	2	;
call	91:4	91:26	2	assert
arg	91:12	91:26	3	p_aout_buffer
water	91:12	0:0	4	p_aout_buffer
water	91:27	0:0	2	;
return	92:4	92:24	2	p_aout_buffer
water	92:11	0:0	3	p_aout_buffer

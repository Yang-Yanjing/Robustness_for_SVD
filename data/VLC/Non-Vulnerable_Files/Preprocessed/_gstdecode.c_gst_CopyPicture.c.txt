func	2:0	26:0	0	static void	gst_CopyPicture
params	2:27	0:0	1	
param	2:29	2:45	2	picture_t *	p_pic
param	2:47	2:70	2	GstVideoFrame *	p_frame
stmnts	0:0	25:4	1	
decl	4:4	4:61	2	int	i_plane
water	4:15	0:0	2	,
decl	4:4	4:61	2	int	i_planes
water	4:25	0:0	2	,
decl	4:4	4:61	2	int	i_line
water	4:33	0:0	2	,
decl	4:4	4:61	2	int	i_dst_stride
water	4:47	0:0	2	,
decl	4:4	4:61	2	int	i_src_stride
decl	5:4	5:26	2	uint8_t	*p_dst
water	5:18	0:0	2	,
decl	5:4	5:26	2	uint8_t	*p_src
decl	6:4	6:16	2	int	i_w
water	6:11	0:0	2	,
decl	6:4	6:16	2	int	i_h
water	7:4	0:0	2	i_planes
op	7:13	0:0	2	=
water	7:15	0:0	2	p_pic
op	7:20	0:0	2	->
water	7:22	0:0	2	i_planes
water	7:30	0:0	2	;
for	8:4	25:4	2	(i_plane = 0 ;i_plane < i_planes;i_plane ++)
forinit	8:9	8:20	3	i_plane = 0 ;
water	8:9	0:0	4	i_plane
op	8:17	0:0	4	=
water	8:19	0:0	4	0
water	8:20	0:0	4	;
cond	8:22	8:32	3	i_plane < i_planes
water	8:22	0:0	4	i_plane
op	8:30	0:0	4	<
water	8:32	0:0	4	i_planes
forexpr	8:42	8:49	3	i_plane ++
water	8:42	0:0	4	i_plane
op	8:49	0:0	4	++
stmts	9:4	25:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	p_dst
op	10:14	0:0	4	=
water	10:16	0:0	4	p_pic
op	10:21	0:0	4	->
water	10:23	0:0	4	p
op	10:24	0:0	4	[
water	10:25	0:0	4	i_plane
op	10:32	0:0	4	]
op	10:33	0:0	4	.
water	10:34	0:0	4	p_pixels
water	10:42	0:0	4	;
water	11:8	0:0	4	p_src
op	11:14	0:0	4	=
call	11:16	11:61	4	GST_VIDEO_FRAME_PLANE_DATA
arg	11:44	11:51	5	p_frame
water	11:44	0:0	6	p_frame
arg	11:53	11:61	5	i_plane
water	11:53	0:0	6	i_plane
water	11:62	0:0	4	;
water	12:8	0:0	4	i_dst_stride
op	12:21	0:0	4	=
water	12:23	0:0	4	p_pic
op	12:28	0:0	4	->
water	12:30	0:0	4	p
op	12:31	0:0	4	[
water	12:32	0:0	4	i_plane
op	12:39	0:0	4	]
op	12:40	0:0	4	.
water	12:41	0:0	4	i_pitch
water	12:48	0:0	4	;
water	13:8	0:0	4	i_src_stride
op	13:21	0:0	4	=
call	13:23	13:70	4	GST_VIDEO_FRAME_PLANE_STRIDE
arg	13:53	13:60	5	p_frame
water	13:53	0:0	6	p_frame
arg	13:62	13:70	5	i_plane
water	13:62	0:0	6	i_plane
water	13:71	0:0	4	;
water	14:8	0:0	4	i_w
op	14:12	0:0	4	=
call	14:14	15:24	4	GST_VIDEO_FRAME_COMP_WIDTH
arg	14:42	14:49	5	p_frame
water	14:42	0:0	6	p_frame
arg	15:16	15:24	5	i_plane
water	15:16	0:0	6	i_plane
call	15:26	15:75	4	*GST_VIDEO_FRAME_COMP_PSTRIDE
arg	15:58	15:65	5	p_frame
water	15:58	0:0	6	p_frame
arg	15:67	15:75	5	i_plane
water	15:67	0:0	6	i_plane
water	15:76	0:0	4	;
water	16:8	0:0	4	i_h
op	16:12	0:0	4	=
call	16:14	16:60	4	GST_VIDEO_FRAME_COMP_HEIGHT
arg	16:43	16:50	5	p_frame
water	16:43	0:0	6	p_frame
arg	16:52	16:60	5	i_plane
water	16:52	0:0	6	i_plane
water	16:61	0:0	4	;
for	17:8	24:8	4	(i_line = 0 ;i_line <__MIN (p_pic -> p [ i_plane ] . i_lines ,i_h );i_line ++)
forinit	17:13	17:23	5	i_line = 0 ;
water	17:13	0:0	6	i_line
op	17:20	0:0	6	=
water	17:22	0:0	6	0
water	17:23	0:0	6	;
cond	18:16	18:63	5	i_line <__MIN (p_pic -> p [ i_plane ] . i_lines ,i_h )
water	18:16	0:0	6	i_line
op	18:23	0:0	6	<
call	18:25	18:63	6	__MIN
arg	18:32	18:57	7	p_pic->p[i_plane].i_lines
water	18:32	0:0	8	p_pic
op	18:37	0:0	8	->
water	18:39	0:0	8	p
op	18:40	0:0	8	[
water	18:41	0:0	8	i_plane
op	18:48	0:0	8	]
op	18:49	0:0	8	.
water	18:50	0:0	8	i_lines
arg	18:59	18:63	7	i_h
water	18:59	0:0	8	i_h
forexpr	19:16	19:22	5	i_line ++
water	19:16	0:0	6	i_line
op	19:22	0:0	6	++
stmts	20:8	24:8	5	
water	20:8	0:0	6	{
call	21:12	21:38	6	memcpy
arg	21:20	21:25	7	p_dst
water	21:20	0:0	8	p_dst
arg	21:27	21:32	7	p_src
water	21:27	0:0	8	p_src
arg	21:34	21:38	7	i_w
water	21:34	0:0	8	i_w
water	21:39	0:0	6	;
water	22:12	0:0	6	p_src
op	22:18	0:0	6	+=
water	22:21	0:0	6	i_src_stride
water	22:33	0:0	6	;
water	23:12	0:0	6	p_dst
op	23:18	0:0	6	+=
water	23:21	0:0	6	i_dst_stride
water	23:33	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}

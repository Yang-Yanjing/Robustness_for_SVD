func	2:0	36:0	0	vout_thread_t *	vout_Request
params	2:27	0:0	1	
param	2:28	2:48	2	vlc_object_t *	object
param	3:30	3:61	2	const vout_configuration_t *	cfg
stmnts	0:0	35:34	1	
decl	5:4	5:35	2	vout_thread_t	*vout
op	5:24	0:0	2	=
water	5:26	0:0	2	cfg
op	5:29	0:0	2	->
water	5:31	0:0	2	vout
if	6:4	10:4	2	(cfg -> change_fmt && ! cfg -> fmt)
cond	6:8	6:33	3	cfg -> change_fmt && ! cfg -> fmt
water	6:8	0:0	4	cfg
op	6:11	0:0	4	->
water	6:13	0:0	4	change_fmt
op	6:24	0:0	4	&&
op	6:27	0:0	4	!
water	6:28	0:0	4	cfg
op	6:31	0:0	4	->
water	6:33	0:0	4	fmt
stmts	6:38	10:4	3	
water	6:38	0:0	4	{
if	7:8	8:38	4	(vout)
cond	7:12	7:12	5	vout
water	7:12	0:0	6	vout
stmts	8:12	8:38	5	
call	8:12	8:37	6	vout_CloseAndRelease
arg	8:33	8:37	7	vout
water	8:33	0:0	8	vout
water	8:38	0:0	6	;
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	4	}
if	12:4	34:4	2	(vout)
cond	12:8	12:8	3	vout
water	12:8	0:0	4	vout
stmts	12:14	34:4	3	
water	12:14	0:0	4	{
if	13:8	19:8	4	(vout -> p -> input != cfg -> input)
cond	13:12	13:35	5	vout -> p -> input != cfg -> input
water	13:12	0:0	6	vout
op	13:16	0:0	6	->
water	13:18	0:0	6	p
op	13:19	0:0	6	->
water	13:21	0:0	6	input
op	13:27	0:0	6	!=
water	13:30	0:0	6	cfg
op	13:33	0:0	6	->
water	13:35	0:0	6	input
stmts	13:42	19:8	5	
water	13:42	0:0	6	{
if	14:12	15:63	6	(vout -> p -> input)
cond	14:16	14:25	7	vout -> p -> input
water	14:16	0:0	8	vout
op	14:20	0:0	8	->
water	14:22	0:0	8	p
op	14:23	0:0	8	->
water	14:25	0:0	8	input
stmts	15:16	15:63	7	
call	15:16	15:62	8	spu_Attach
arg	15:27	15:39	9	vout->p->spu
water	15:27	0:0	10	vout
op	15:31	0:0	10	->
water	15:33	0:0	10	p
op	15:34	0:0	10	->
water	15:36	0:0	10	spu
arg	15:41	15:55	9	vout->p->input
water	15:41	0:0	10	vout
op	15:45	0:0	10	->
water	15:47	0:0	10	p
op	15:48	0:0	10	->
water	15:50	0:0	10	input
arg	15:57	15:62	9	false
water	15:57	0:0	10	false
water	15:63	0:0	8	;
water	16:12	0:0	6	vout
op	16:16	0:0	6	->
water	16:18	0:0	6	p
op	16:19	0:0	6	->
water	16:21	0:0	6	input
op	16:27	0:0	6	=
water	16:29	0:0	6	cfg
op	16:32	0:0	6	->
water	16:34	0:0	6	input
water	16:39	0:0	6	;
if	17:12	18:62	6	(vout -> p -> input)
cond	17:16	17:25	7	vout -> p -> input
water	17:16	0:0	8	vout
op	17:20	0:0	8	->
water	17:22	0:0	8	p
op	17:23	0:0	8	->
water	17:25	0:0	8	input
stmts	18:16	18:62	7	
call	18:16	18:61	8	spu_Attach
arg	18:27	18:39	9	vout->p->spu
water	18:27	0:0	10	vout
op	18:31	0:0	10	->
water	18:33	0:0	10	p
op	18:34	0:0	10	->
water	18:36	0:0	10	spu
arg	18:41	18:55	9	vout->p->input
water	18:41	0:0	10	vout
op	18:45	0:0	10	->
water	18:47	0:0	10	p
op	18:48	0:0	10	->
water	18:50	0:0	10	input
arg	18:57	18:61	9	true
water	18:57	0:0	10	true
water	18:62	0:0	8	;
water	19:8	0:0	6	}
if	20:8	26:8	4	(cfg -> change_fmt)
cond	20:12	20:17	5	cfg -> change_fmt
water	20:12	0:0	6	cfg
op	20:15	0:0	6	->
water	20:17	0:0	6	change_fmt
stmts	20:29	26:8	5	
water	20:29	0:0	6	{
decl	21:12	21:34	6	vout_control_cmd_t	cmd
call	22:12	22:59	6	vout_control_cmd_Init
arg	22:34	22:38	7	&cmd
op	22:34	0:0	8	&
water	22:35	0:0	8	cmd
arg	22:40	22:59	7	VOUT_CONTROL_REINIT
water	22:40	0:0	8	VOUT_CONTROL_REINIT
water	22:60	0:0	6	;
water	23:12	0:0	6	cmd
op	23:15	0:0	6	.
water	23:16	0:0	6	u
op	23:17	0:0	6	.
water	23:18	0:0	6	cfg
op	23:22	0:0	6	=
water	23:24	0:0	6	cfg
water	23:27	0:0	6	;
call	24:12	24:53	6	vout_control_Push
arg	24:30	24:47	7	&vout->p->control
op	24:30	0:0	8	&
water	24:31	0:0	8	vout
op	24:35	0:0	8	->
water	24:37	0:0	8	p
op	24:38	0:0	8	->
water	24:40	0:0	8	control
arg	24:49	24:53	7	&cmd
op	24:49	0:0	8	&
water	24:50	0:0	8	cmd
water	24:54	0:0	6	;
call	25:12	25:52	6	vout_control_WaitEmpty
arg	25:35	25:52	7	&vout->p->control
op	25:35	0:0	8	&
water	25:36	0:0	8	vout
op	25:40	0:0	8	->
water	25:42	0:0	8	p
op	25:43	0:0	8	->
water	25:45	0:0	8	control
water	25:53	0:0	6	;
water	26:8	0:0	6	}
if	27:8	31:8	4	(! vout -> p -> dead)
cond	27:12	27:22	5	! vout -> p -> dead
op	27:12	0:0	6	!
water	27:13	0:0	6	vout
op	27:17	0:0	6	->
water	27:19	0:0	6	p
op	27:20	0:0	6	->
water	27:22	0:0	6	dead
stmts	27:28	31:8	5	
water	27:28	0:0	6	{
call	28:12	28:51	6	msg_Dbg
arg	28:20	28:26	7	object
water	28:20	0:0	8	object
arg	28:28	28:51	7	"reusing provided vout"
water	28:28	0:0	8	"reusing provided vout"
water	28:52	0:0	6	;
call	29:12	29:32	6	vout_IntfReinit
arg	29:28	29:32	7	vout
water	29:28	0:0	8	vout
water	29:33	0:0	6	;
return	30:12	30:23	6	vout
water	30:19	0:0	7	vout
water	31:8	0:0	6	}
call	32:8	32:33	4	vout_CloseAndRelease
arg	32:29	32:33	5	vout
water	32:29	0:0	6	vout
water	32:34	0:0	4	;
call	33:8	33:53	4	msg_Warn
arg	33:17	33:23	5	object
water	33:17	0:0	6	object
arg	33:25	33:53	5	"cannot reuse provided vout"
water	33:25	0:0	6	"cannot reuse provided vout"
water	33:54	0:0	4	;
water	34:4	0:0	4	}
return	35:4	35:34	2	VoutCreate(object,cfg)
call	35:11	35:33	3	VoutCreate
arg	35:22	35:28	4	object
water	35:22	0:0	5	object
arg	35:30	35:33	4	cfg
water	35:30	0:0	5	cfg

func	2:0	52:0	0	static int	configure_display
params	2:28	0:0	1	
param	2:29	2:47	2	vout_display_t *	vd
param	2:49	2:78	2	const vout_display_cfg_t *	cfg
param	3:16	3:41	2	const video_format_t *	fmt
stmnts	0:0	51:12	1	
decl	5:4	5:37	2	vout_display_sys_t	*sys
op	5:28	0:0	2	=
water	5:30	0:0	2	vd
op	5:32	0:0	2	->
water	5:34	0:0	2	sys
decl	6:4	6:30	2	vout_display_place_t	place
decl	7:4	7:39	2	MMAL_DISPLAYREGION_T	display_region
decl	8:4	8:24	2	MMAL_STATUS_T	status
if	9:4	10:22	2	(! cfg && ! fmt)
cond	9:8	9:17	3	! cfg && ! fmt
op	9:8	0:0	4	!
water	9:9	0:0	4	cfg
op	9:13	0:0	4	&&
op	9:16	0:0	4	!
water	9:17	0:0	4	fmt
stmts	10:8	10:22	3	
return	10:8	10:22	4	-EINVAL
op	10:15	0:0	5	-
water	10:16	0:0	5	EINVAL
if	11:4	20:4	2	(fmt)
cond	11:8	11:8	3	fmt
water	11:8	0:0	4	fmt
stmts	11:13	20:4	3	
water	11:13	0:0	4	{
water	12:8	0:0	4	sys
op	12:11	0:0	4	->
water	12:13	0:0	4	input
op	12:18	0:0	4	->
water	12:20	0:0	4	format
op	12:26	0:0	4	->
water	12:28	0:0	4	es
op	12:30	0:0	4	->
water	12:32	0:0	4	video
op	12:37	0:0	4	.
water	12:38	0:0	4	par
op	12:41	0:0	4	.
water	12:42	0:0	4	num
op	12:46	0:0	4	=
water	12:48	0:0	4	fmt
op	12:51	0:0	4	->
water	12:53	0:0	4	i_sar_num
water	12:62	0:0	4	;
water	13:8	0:0	4	sys
op	13:11	0:0	4	->
water	13:13	0:0	4	input
op	13:18	0:0	4	->
water	13:20	0:0	4	format
op	13:26	0:0	4	->
water	13:28	0:0	4	es
op	13:30	0:0	4	->
water	13:32	0:0	4	video
op	13:37	0:0	4	.
water	13:38	0:0	4	par
op	13:41	0:0	4	.
water	13:42	0:0	4	den
op	13:46	0:0	4	=
water	13:48	0:0	4	fmt
op	13:51	0:0	4	->
water	13:53	0:0	4	i_sar_den
water	13:62	0:0	4	;
water	14:8	0:0	4	status
op	14:15	0:0	4	=
call	14:17	14:51	4	mmal_port_format_commit
arg	14:41	14:51	5	sys->input
water	14:41	0:0	6	sys
op	14:44	0:0	6	->
water	14:46	0:0	6	input
water	14:52	0:0	4	;
if	15:8	19:8	4	(status != MMAL_SUCCESS)
cond	15:12	15:22	5	status != MMAL_SUCCESS
water	15:12	0:0	6	status
op	15:19	0:0	6	!=
water	15:22	0:0	6	MMAL_SUCCESS
stmts	15:36	19:8	5	
water	15:36	0:0	6	{
call	16:12	17:83	6	msg_Err
arg	16:20	16:22	7	vd
water	16:20	0:0	8	vd
arg	16:24	16:89	7	"Failed to commit format for input port %s (status=%"PRIx32" %s)"
water	16:24	0:0	8	"Failed to commit format for input port %s (status=%"
water	16:77	0:0	8	PRIx32
water	16:83	0:0	8	" %s)"
arg	17:28	17:44	7	sys->input->name
water	17:28	0:0	8	sys
op	17:31	0:0	8	->
water	17:33	0:0	8	input
op	17:38	0:0	8	->
water	17:40	0:0	8	name
arg	17:46	17:52	7	status
water	17:46	0:0	8	status
arg	17:54	17:83	7	mmal_status_to_string(status)
call	17:54	17:82	8	mmal_status_to_string
arg	17:76	17:82	9	status
water	17:76	0:0	10	status
water	17:84	0:0	6	;
return	18:12	18:26	6	-EINVAL
op	18:19	0:0	7	-
water	18:20	0:0	7	EINVAL
water	19:8	0:0	6	}
water	20:4	0:0	4	}
else	20:6	22:4	2
stmts	20:11	22:4	3	
water	20:11	0:0	4	{
water	21:8	0:0	4	fmt
op	21:12	0:0	4	=
op	21:14	0:0	4	&
water	21:15	0:0	4	vd
op	21:17	0:0	4	->
water	21:19	0:0	4	fmt
water	21:22	0:0	4	;
water	22:4	0:0	4	}
if	23:4	24:21	2	(! cfg)
cond	23:8	23:9	3	! cfg
op	23:8	0:0	4	!
water	23:9	0:0	4	cfg
stmts	24:8	24:21	3	
water	24:8	0:0	4	cfg
op	24:12	0:0	4	=
water	24:14	0:0	4	vd
op	24:16	0:0	4	->
water	24:18	0:0	4	cfg
water	24:21	0:0	4	;
call	25:4	25:53	2	vout_display_PlacePicture
arg	25:30	25:36	3	&place
op	25:30	0:0	4	&
water	25:31	0:0	4	place
arg	25:38	25:41	3	fmt
water	25:38	0:0	4	fmt
arg	25:43	25:46	3	cfg
water	25:43	0:0	4	cfg
arg	25:48	25:53	3	false
water	25:48	0:0	4	false
water	25:54	0:0	2	;
water	26:4	0:0	2	display_region
op	26:18	0:0	2	.
water	26:19	0:0	2	hdr
op	26:22	0:0	2	.
water	26:23	0:0	2	id
op	26:26	0:0	2	=
water	26:28	0:0	2	MMAL_PARAMETER_DISPLAYREGION
water	26:56	0:0	2	;
water	27:4	0:0	2	display_region
op	27:18	0:0	2	.
water	27:19	0:0	2	hdr
op	27:22	0:0	2	.
water	27:23	0:0	2	size
op	27:28	0:0	2	=
op	27:30	0:0	2	sizeof
water	27:36	0:0	2	(
water	27:37	0:0	2	MMAL_DISPLAYREGION_T
water	27:57	0:0	2	)
water	27:58	0:0	2	;
water	28:4	0:0	2	display_region
op	28:18	0:0	2	.
water	28:19	0:0	2	fullscreen
op	28:30	0:0	2	=
water	28:32	0:0	2	MMAL_FALSE
water	28:42	0:0	2	;
water	29:4	0:0	2	display_region
op	29:18	0:0	2	.
water	29:19	0:0	2	src_rect
op	29:27	0:0	2	.
water	29:28	0:0	2	x
op	29:30	0:0	2	=
water	29:32	0:0	2	fmt
op	29:35	0:0	2	->
water	29:37	0:0	2	i_x_offset
water	29:47	0:0	2	;
water	30:4	0:0	2	display_region
op	30:18	0:0	2	.
water	30:19	0:0	2	src_rect
op	30:27	0:0	2	.
water	30:28	0:0	2	y
op	30:30	0:0	2	=
water	30:32	0:0	2	fmt
op	30:35	0:0	2	->
water	30:37	0:0	2	i_y_offset
water	30:47	0:0	2	;
water	31:4	0:0	2	display_region
op	31:18	0:0	2	.
water	31:19	0:0	2	src_rect
op	31:27	0:0	2	.
water	31:28	0:0	2	width
op	31:34	0:0	2	=
water	31:36	0:0	2	fmt
op	31:39	0:0	2	->
water	31:41	0:0	2	i_visible_width
water	31:56	0:0	2	;
water	32:4	0:0	2	display_region
op	32:18	0:0	2	.
water	32:19	0:0	2	src_rect
op	32:27	0:0	2	.
water	32:28	0:0	2	height
op	32:35	0:0	2	=
water	32:37	0:0	2	fmt
op	32:40	0:0	2	->
water	32:42	0:0	2	i_visible_height
water	32:58	0:0	2	;
water	33:4	0:0	2	display_region
op	33:18	0:0	2	.
water	33:19	0:0	2	dest_rect
op	33:28	0:0	2	.
water	33:29	0:0	2	x
op	33:31	0:0	2	=
water	33:33	0:0	2	place
op	33:38	0:0	2	.
water	33:39	0:0	2	x
water	33:40	0:0	2	;
water	34:4	0:0	2	display_region
op	34:18	0:0	2	.
water	34:19	0:0	2	dest_rect
op	34:28	0:0	2	.
water	34:29	0:0	2	y
op	34:31	0:0	2	=
water	34:33	0:0	2	place
op	34:38	0:0	2	.
water	34:39	0:0	2	y
water	34:40	0:0	2	;
water	35:4	0:0	2	display_region
op	35:18	0:0	2	.
water	35:19	0:0	2	dest_rect
op	35:28	0:0	2	.
water	35:29	0:0	2	width
op	35:35	0:0	2	=
water	35:37	0:0	2	place
op	35:42	0:0	2	.
water	35:43	0:0	2	width
water	35:48	0:0	2	;
water	36:4	0:0	2	display_region
op	36:18	0:0	2	.
water	36:19	0:0	2	dest_rect
op	36:28	0:0	2	.
water	36:29	0:0	2	height
op	36:36	0:0	2	=
water	36:38	0:0	2	place
op	36:43	0:0	2	.
water	36:44	0:0	2	height
water	36:50	0:0	2	;
water	37:4	0:0	2	display_region
op	37:18	0:0	2	.
water	37:19	0:0	2	layer
op	37:25	0:0	2	=
water	37:27	0:0	2	sys
op	37:30	0:0	2	->
water	37:32	0:0	2	layer
water	37:37	0:0	2	;
water	38:4	0:0	2	display_region
op	38:18	0:0	2	.
water	38:19	0:0	2	set
op	38:23	0:0	2	=
water	38:25	0:0	2	MMAL_DISPLAY_SET_FULLSCREEN
op	38:53	0:0	2	|
water	38:55	0:0	2	MMAL_DISPLAY_SET_SRC_RECT
op	38:81	0:0	2	|
water	39:12	0:0	2	MMAL_DISPLAY_SET_DEST_RECT
op	39:39	0:0	2	|
water	39:41	0:0	2	MMAL_DISPLAY_SET_LAYER
water	39:63	0:0	2	;
water	40:4	0:0	2	status
op	40:11	0:0	2	=
call	40:13	40:68	2	mmal_port_parameter_set
arg	40:37	40:47	3	sys->input
water	40:37	0:0	4	sys
op	40:40	0:0	4	->
water	40:42	0:0	4	input
arg	40:49	40:68	3	&display_region.hdr
op	40:49	0:0	4	&
water	40:50	0:0	4	display_region
op	40:64	0:0	4	.
water	40:65	0:0	4	hdr
water	40:69	0:0	2	;
if	41:4	45:4	2	(status != MMAL_SUCCESS)
cond	41:8	41:18	3	status != MMAL_SUCCESS
water	41:8	0:0	4	status
op	41:15	0:0	4	!=
water	41:18	0:0	4	MMAL_SUCCESS
stmts	41:32	45:4	3	
water	41:32	0:0	4	{
call	42:8	43:61	4	msg_Err
arg	42:16	42:18	5	vd
water	42:16	0:0	6	vd
arg	42:20	42:72	5	"Failed to set display region (status=%"PRIx32" %s)"
water	42:20	0:0	6	"Failed to set display region (status=%"
water	42:60	0:0	6	PRIx32
water	42:66	0:0	6	" %s)"
arg	43:24	43:30	5	status
water	43:24	0:0	6	status
arg	43:32	43:61	5	mmal_status_to_string(status)
call	43:32	43:60	6	mmal_status_to_string
arg	43:54	43:60	7	status
water	43:54	0:0	8	status
water	43:62	0:0	4	;
return	44:8	44:22	4	-EINVAL
op	44:15	0:0	5	-
water	44:16	0:0	5	EINVAL
water	45:4	0:0	4	}
call	46:4	46:42	2	show_background
arg	46:20	46:22	3	vd
water	46:20	0:0	4	vd
arg	46:24	46:42	3	cfg->is_fullscreen
water	46:24	0:0	4	cfg
op	46:27	0:0	4	->
water	46:29	0:0	4	is_fullscreen
water	46:43	0:0	2	;
if	47:4	48:31	2	(var_InheritBool (vd ,MMAL_ADJUST_REFRESHRATE_NAME ))
cond	47:8	47:56	3	var_InheritBool (vd ,MMAL_ADJUST_REFRESHRATE_NAME )
call	47:8	47:56	4	var_InheritBool
arg	47:24	47:26	5	vd
water	47:24	0:0	6	vd
arg	47:28	47:56	5	MMAL_ADJUST_REFRESHRATE_NAME
water	47:28	0:0	6	MMAL_ADJUST_REFRESHRATE_NAME
stmts	48:8	48:31	3	
call	48:8	48:30	4	adjust_refresh_rate
arg	48:28	48:30	5	vd
water	48:28	0:0	6	vd
water	48:31	0:0	4	;
if	49:4	50:53	2	(fmt != & vd -> fmt)
cond	49:8	49:20	3	fmt != & vd -> fmt
water	49:8	0:0	4	fmt
op	49:12	0:0	4	!=
op	49:15	0:0	4	&
water	49:16	0:0	4	vd
op	49:18	0:0	4	->
water	49:20	0:0	4	fmt
stmts	50:8	50:53	3	
call	50:8	50:52	4	memcpy
arg	50:15	50:23	5	&vd->fmt
op	50:15	0:0	6	&
water	50:16	0:0	6	vd
op	50:18	0:0	6	->
water	50:20	0:0	6	fmt
arg	50:25	50:28	5	fmt
water	50:25	0:0	6	fmt
arg	50:30	50:52	5	sizeof(video_format_t)
op	50:30	0:0	6	sizeof
water	50:36	0:0	6	(
water	50:37	0:0	6	video_format_t
water	50:51	0:0	6	)
water	50:53	0:0	4	;
return	51:4	51:12	2	0
water	51:11	0:0	3	0

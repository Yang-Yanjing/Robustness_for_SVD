func	2:0	31:0	0	int	vout_OpenWrapper
params	2:20	0:0	1	
param	2:21	2:40	2	vout_thread_t *	vout
param	3:21	3:46	2	const char *	splitter_name
param	3:48	3:81	2	const vout_display_state_t *	state
stmnts	0:0	30:22	1	
decl	5:4	5:36	2	vout_thread_sys_t	*sys
op	5:27	0:0	2	=
water	5:29	0:0	2	vout
op	5:33	0:0	2	->
water	5:35	0:0	2	p
call	6:4	6:48	2	msg_Dbg
arg	6:12	6:16	3	vout
water	6:12	0:0	4	vout
arg	6:18	6:48	3	"Opening vout display wrapper"
water	6:18	0:0	4	"Opening vout display wrapper"
water	6:49	0:0	2	;
water	8:4	0:0	2	sys
op	8:7	0:0	2	->
water	8:9	0:0	2	display
op	8:16	0:0	2	.
water	8:17	0:0	2	title
op	8:23	0:0	2	=
call	8:25	8:62	2	var_InheritString
arg	8:43	8:47	3	vout
water	8:43	0:0	4	vout
arg	8:49	8:62	3	"video-title"
water	8:49	0:0	4	"video-title"
water	8:63	0:0	2	;
decl	10:4	10:47	2	const mtime_t	double_click_timeout
op	10:39	0:0	2	=
water	10:41	0:0	2	300000
decl	11:4	11:88	2	const mtime_t	hide_timeout
op	11:31	0:0	2	=
call	11:33	11:80	3	var_CreateGetInteger
arg	11:54	11:58	4	vout
water	11:54	0:0	5	vout
arg	11:60	11:80	4	"mouse-hide-timeout"
water	11:60	0:0	5	"mouse-hide-timeout"
op	11:82	0:0	2	*
water	11:84	0:0	2	1000
if	12:4	15:4	2	(splitter_name)
cond	12:8	12:8	3	splitter_name
water	12:8	0:0	4	splitter_name
stmts	12:23	15:4	3	
water	12:23	0:0	4	{
water	13:8	0:0	4	sys
op	13:11	0:0	4	->
water	13:13	0:0	4	display
op	13:20	0:0	4	.
water	13:21	0:0	4	vd
op	13:24	0:0	4	=
call	13:26	14:77	4	vout_NewSplitter
arg	13:43	13:47	5	vout
water	13:43	0:0	6	vout
arg	13:49	13:67	5	&vout->p->original
op	13:49	0:0	6	&
water	13:50	0:0	6	vout
op	13:54	0:0	6	->
water	13:56	0:0	6	p
op	13:57	0:0	6	->
water	13:59	0:0	6	original
arg	13:69	13:74	5	state
water	13:69	0:0	6	state
arg	13:76	13:83	5	"$vout"
water	13:76	0:0	6	"$vout"
arg	13:85	13:98	5	splitter_name
water	13:85	0:0	6	splitter_name
arg	14:43	14:63	5	double_click_timeout
water	14:43	0:0	6	double_click_timeout
arg	14:65	14:77	5	hide_timeout
water	14:65	0:0	6	hide_timeout
water	14:78	0:0	4	;
water	15:4	0:0	4	}
else	15:6	18:4	2
stmts	15:11	18:4	3	
water	15:11	0:0	4	{
water	16:8	0:0	4	sys
op	16:11	0:0	4	->
water	16:13	0:0	4	display
op	16:20	0:0	4	.
water	16:21	0:0	4	vd
op	16:24	0:0	4	=
call	16:26	17:76	4	vout_NewDisplay
arg	16:42	16:46	5	vout
water	16:42	0:0	6	vout
arg	16:48	16:66	5	&vout->p->original
op	16:48	0:0	6	&
water	16:49	0:0	6	vout
op	16:53	0:0	6	->
water	16:55	0:0	6	p
op	16:56	0:0	6	->
water	16:58	0:0	6	original
arg	16:68	16:73	5	state
water	16:68	0:0	6	state
arg	16:75	16:82	5	"$vout"
water	16:75	0:0	6	"$vout"
arg	17:42	17:62	5	double_click_timeout
water	17:42	0:0	6	double_click_timeout
arg	17:64	17:76	5	hide_timeout
water	17:64	0:0	6	hide_timeout
water	17:77	0:0	4	;
water	18:4	0:0	4	}
if	19:4	22:4	2	(! sys -> display . vd)
cond	19:8	19:22	3	! sys -> display . vd
op	19:8	0:0	4	!
water	19:9	0:0	4	sys
op	19:12	0:0	4	->
water	19:14	0:0	4	display
op	19:21	0:0	4	.
water	19:22	0:0	4	vd
stmts	19:26	22:4	3	
water	19:26	0:0	4	{
call	20:8	20:31	4	free
arg	20:13	20:31	5	sys->display.title
water	20:13	0:0	6	sys
op	20:16	0:0	6	->
water	20:18	0:0	6	display
op	20:25	0:0	6	.
water	20:26	0:0	6	title
water	20:32	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
call	25:4	25:70	2	var_Create
arg	25:15	25:19	3	vout
water	25:15	0:0	4	vout
arg	25:21	25:38	3	"video-wallpaper"
water	25:21	0:0	4	"video-wallpaper"
arg	25:40	25:70	3	VLC_VAR_BOOL|VLC_VAR_DOINHERIT
water	25:40	0:0	4	VLC_VAR_BOOL
op	25:52	0:0	4	|
water	25:53	0:0	4	VLC_VAR_DOINHERIT
water	25:71	0:0	2	;
call	26:4	26:58	2	var_AddCallback
arg	26:20	26:24	3	vout
water	26:20	0:0	4	vout
arg	26:26	26:43	3	"video-wallpaper"
water	26:26	0:0	4	"video-wallpaper"
arg	26:45	26:52	3	Forward
water	26:45	0:0	4	Forward
arg	26:54	26:58	3	NULL
water	26:54	0:0	4	NULL
water	26:59	0:0	2	;
water	29:4	0:0	2	sys
op	29:7	0:0	2	->
water	29:9	0:0	2	decoder_pool
op	29:22	0:0	2	=
water	29:24	0:0	2	NULL
water	29:28	0:0	2	;
return	30:4	30:22	2	VLC_SUCCESS
water	30:11	0:0	3	VLC_SUCCESS

func	2:0	35:0	0	void	input_UpdateStatistic
params	2:26	0:0	1	
param	2:28	2:51	2	input_thread_t *	p_input
param	3:28	3:52	2	input_statistic_t	i_type
param	3:54	3:66	2	int	i_delta
stmnts	5:4	34:58	1	
call	5:4	5:42	2	assert
arg	5:12	5:42	3	p_input->p->i_state!=INIT_S
water	5:12	0:0	4	p_input
op	5:19	0:0	4	->
water	5:21	0:0	4	p
op	5:22	0:0	4	->
water	5:24	0:0	4	i_state
op	5:32	0:0	4	!=
water	5:35	0:0	4	INIT_S
water	5:43	0:0	2	;
call	6:4	6:55	2	vlc_mutex_lock
arg	6:20	6:55	3	&p_input->p->counters.counters_lock
op	6:20	0:0	4	&
water	6:21	0:0	4	p_input
op	6:28	0:0	4	->
water	6:30	0:0	4	p
op	6:31	0:0	4	->
water	6:33	0:0	4	counters
op	6:41	0:0	4	.
water	6:42	0:0	4	counters_lock
water	6:56	0:0	2	;
switch	7:4	33:4	2	(i_type)
cond	7:12	7:12	3	i_type
water	7:12	0:0	4	i_type
stmts	8:4	33:4	3	
water	8:4	0:0	4	{
label	10:4	10:38	4	case INPUT_STATISTIC_DECODED_VIDEO :
call	11:8	11:25	4	I
arg	11:10	11:25	5	p_decoded_video
water	11:10	0:0	6	p_decoded_video
water	11:26	0:0	4	;
break	12:8	12:13	4	
label	13:4	13:38	4	case INPUT_STATISTIC_DECODED_AUDIO :
call	14:8	14:25	4	I
arg	14:10	14:25	5	p_decoded_audio
water	14:10	0:0	6	p_decoded_audio
water	14:26	0:0	4	;
break	15:8	15:13	4	
label	16:4	16:41	4	case INPUT_STATISTIC_DECODED_SUBTITLE :
call	17:8	17:23	4	I
arg	17:10	17:23	5	p_decoded_sub
water	17:10	0:0	6	p_decoded_sub
water	17:24	0:0	4	;
break	18:8	18:13	4	
label	19:4	19:36	4	case INPUT_STATISTIC_SENT_PACKET :
call	20:8	20:29	4	I
arg	20:10	20:29	5	p_sout_sent_packets
water	20:10	0:0	6	p_sout_sent_packets
water	20:30	0:0	4	;
break	21:8	21:13	4	
label	23:4	23:34	4	case INPUT_STATISTIC_SENT_BYTE :
water	24:4	0:0	4	{
decl	25:8	25:22	4	uint64_t	bytes
call	26:8	26:78	4	stats_Update
arg	26:22	26:60	5	p_input->p->counters.p_sout_sent_bytes
water	26:22	0:0	6	p_input
op	26:29	0:0	6	->
water	26:31	0:0	6	p
op	26:32	0:0	6	->
water	26:34	0:0	6	counters
op	26:42	0:0	6	.
water	26:43	0:0	6	p_sout_sent_bytes
arg	26:62	26:69	5	i_delta
water	26:62	0:0	6	i_delta
arg	26:71	26:78	5	&bytes
op	26:71	0:0	6	&
water	26:72	0:0	6	bytes
water	26:79	0:0	4	;
call	27:8	27:76	4	stats_Update
arg	27:22	27:62	5	p_input->p->counters.p_sout_send_bitrate
water	27:22	0:0	6	p_input
op	27:29	0:0	6	->
water	27:31	0:0	6	p
op	27:32	0:0	6	->
water	27:34	0:0	6	counters
op	27:42	0:0	6	.
water	27:43	0:0	6	p_sout_send_bitrate
arg	27:64	27:69	5	bytes
water	27:64	0:0	6	bytes
arg	27:71	27:76	5	NULL
water	27:71	0:0	6	NULL
water	27:77	0:0	4	;
break	28:8	28:13	4	
water	29:4	0:0	4	}
label	30:4	30:11	4	default :
call	31:8	31:79	4	msg_Err
arg	31:17	31:24	5	p_input
water	31:17	0:0	6	p_input
arg	31:26	31:70	5	"Invalid statistic type %d (internal error)"
water	31:26	0:0	6	"Invalid statistic type %d (internal error)"
arg	31:72	31:79	5	i_type
water	31:72	0:0	6	i_type
water	31:80	0:0	4	;
break	32:8	32:13	4	
water	33:4	0:0	4	}
call	34:4	34:57	2	vlc_mutex_unlock
arg	34:22	34:57	3	&p_input->p->counters.counters_lock
op	34:22	0:0	4	&
water	34:23	0:0	4	p_input
op	34:30	0:0	4	->
water	34:32	0:0	4	p
op	34:33	0:0	4	->
water	34:35	0:0	4	counters
op	34:43	0:0	4	.
water	34:44	0:0	4	counters_lock
water	34:58	0:0	2	;

func	2:0	27:0	0	static int	FindDesignated
params	2:25	0:0	1	
param	2:27	2:53	2	addons_finder_t *	p_finder
stmnts	0:0	26:22	1	
decl	4:4	4:22	2	char	*psz_manifest
decl	5:4	5:48	2	const char	*psz_path
op	5:25	0:0	2	=
water	5:27	0:0	2	p_finder
op	5:35	0:0	2	->
water	5:37	0:0	2	psz_uri
op	5:45	0:0	2	+
water	5:47	0:0	2	7
if	6:4	8:25	2	(asprintf (& psz_manifest ,"unzip://%s!/manifest.xml" ,psz_path ) < 1)
cond	6:9	7:32	3	asprintf (& psz_manifest ,"unzip://%s!/manifest.xml" ,psz_path ) < 1
call	6:9	7:28	4	asprintf
arg	6:19	6:32	5	&psz_manifest
op	6:19	0:0	6	&
water	6:20	0:0	6	psz_manifest
arg	6:34	6:60	5	"unzip://%s!/manifest.xml"
water	6:34	0:0	6	"unzip://%s!/manifest.xml"
arg	7:19	7:28	5	psz_path
water	7:19	0:0	6	psz_path
op	7:30	0:0	4	<
water	7:32	0:0	4	1
stmts	8:8	8:25	3	
return	8:8	8:25	4	VLC_ENOMEM
water	8:15	0:0	5	VLC_ENOMEM
decl	9:4	9:64	2	stream_t	*p_stream
op	9:23	0:0	2	=
call	9:25	9:63	3	stream_UrlNew
arg	9:40	9:48	4	p_finder
water	9:40	0:0	5	p_finder
arg	9:50	9:63	4	psz_manifest
water	9:50	0:0	5	psz_manifest
call	10:4	10:23	2	free
arg	10:10	10:23	3	psz_manifest
water	10:10	0:0	4	psz_manifest
water	10:24	0:0	2	;
if	11:4	11:40	2	(! p_stream)
cond	11:9	11:10	3	! p_stream
op	11:9	0:0	4	!
water	11:10	0:0	4	p_stream
stmts	11:21	11:40	3	
return	11:21	11:40	4	VLC_EGENERIC
water	11:28	0:0	5	VLC_EGENERIC
if	12:4	19:4	2	(ParseCategoriesInfo (p_finder ,p_stream ))
cond	12:9	12:49	3	ParseCategoriesInfo (p_finder ,p_stream )
call	12:9	12:49	4	ParseCategoriesInfo
arg	12:30	12:38	5	p_finder
water	12:30	0:0	6	p_finder
arg	12:40	12:49	5	p_stream
water	12:40	0:0	6	p_stream
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
call	15:8	15:65	4	FOREACH_ARRAY
arg	15:23	15:45	5	addon_entry_t*p_entry
water	15:23	0:0	6	addon_entry_t
op	15:37	0:0	6	*
water	15:38	0:0	6	p_entry
arg	15:47	15:65	5	p_finder->entries
water	15:47	0:0	6	p_finder
op	15:55	0:0	6	->
water	15:57	0:0	6	entries
water	16:8	0:0	4	if
water	16:11	0:0	4	(
call	16:13	16:47	4	likely
arg	16:21	16:47	5	!p_entry->psz_archive_uri
op	16:21	0:0	6	!
water	16:22	0:0	6	p_entry
op	16:29	0:0	6	->
water	16:31	0:0	6	psz_archive_uri
water	16:49	0:0	4	)
water	17:16	0:0	4	p_entry
op	17:23	0:0	4	->
water	17:25	0:0	4	psz_archive_uri
op	17:41	0:0	4	=
call	17:43	17:69	4	strdup
arg	17:51	17:69	5	p_finder->psz_uri
water	17:51	0:0	6	p_finder
op	17:59	0:0	6	->
water	17:61	0:0	6	psz_uri
water	17:70	0:0	4	;
water	18:8	0:0	4	FOREACH_END
water	18:19	0:0	4	(
water	18:20	0:0	4	)
water	19:4	0:0	4	}
else	20:4	24:4	2
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:8	22:32	4	stream_Delete
arg	22:23	22:32	5	p_stream
water	22:23	0:0	6	p_stream
water	22:33	0:0	4	;
return	23:8	23:27	4	VLC_EGENERIC
water	23:15	0:0	5	VLC_EGENERIC
water	24:4	0:0	4	}
call	25:4	25:28	2	stream_Delete
arg	25:19	25:28	3	p_stream
water	25:19	0:0	4	p_stream
water	25:29	0:0	2	;
return	26:4	26:22	2	VLC_SUCCESS
water	26:11	0:0	3	VLC_SUCCESS

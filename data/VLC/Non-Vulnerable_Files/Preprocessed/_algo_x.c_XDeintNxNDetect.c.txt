func	2:0	24:0	0	static inline int	XDeintNxNDetect
params	2:33	0:0	1	
param	2:35	2:47	2	uint8_t *	src
param	2:49	2:58	2	int	i_src
param	3:35	3:47	2	int	i_height
param	3:49	3:61	2	int	i_width
stmnts	0:0	23:32	1	
decl	5:4	5:12	2	int	y
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	x
decl	6:4	6:14	2	int	ff
water	6:10	0:0	2	,
decl	6:4	6:14	2	int	fr
decl	7:4	7:10	2	int	fc
water	10:4	0:0	2	ff
op	10:7	0:0	2	=
water	10:9	0:0	2	fr
op	10:12	0:0	2	=
water	10:14	0:0	2	0
water	10:15	0:0	2	;
water	11:4	0:0	2	fc
op	11:7	0:0	2	=
water	11:9	0:0	2	0
water	11:10	0:0	2	;
for	12:4	22:4	2	(y = 0 ;y < i_height - 2;y += 2)
forinit	12:9	12:14	3	y = 0 ;
water	12:9	0:0	4	y
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:31	3	y < i_height - 2
water	12:16	0:0	4	y
op	12:18	0:0	4	<
water	12:20	0:0	4	i_height
op	12:29	0:0	4	-
water	12:31	0:0	4	2
forexpr	12:34	12:39	3	y += 2
water	12:34	0:0	4	y
op	12:36	0:0	4	+=
water	12:39	0:0	4	2
stmts	13:4	22:4	3	
water	13:4	0:0	4	{
decl	14:8	14:40	4	const uint8_t	*s
op	14:25	0:0	4	=
op	14:27	0:0	4	&
water	14:28	0:0	4	src
op	14:31	0:0	4	[
water	14:32	0:0	4	y
op	14:33	0:0	4	*
water	14:34	0:0	4	i_src
op	14:39	0:0	4	]
for	15:8	19:8	4	(x = 0 ;x < i_width;x ++)
forinit	15:13	15:18	5	x = 0 ;
water	15:13	0:0	6	x
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	x < i_width
water	15:20	0:0	6	x
op	15:22	0:0	6	<
water	15:24	0:0	6	i_width
forexpr	15:33	15:34	5	x ++
water	15:33	0:0	6	x
op	15:34	0:0	6	++
stmts	16:8	19:8	5	
water	16:8	0:0	6	{
water	17:12	0:0	6	fr
op	17:15	0:0	6	+=
call	17:18	17:47	6	ssd
arg	17:22	17:47	7	s[x]-s[1*i_src+x]
water	17:22	0:0	8	s
op	17:23	0:0	8	[
water	17:30	0:0	8	x
op	17:31	0:0	8	]
op	17:33	0:0	8	-
water	17:35	0:0	8	s
op	17:36	0:0	8	[
water	17:37	0:0	8	1
op	17:38	0:0	8	*
water	17:39	0:0	8	i_src
op	17:44	0:0	8	+
water	17:45	0:0	8	x
op	17:46	0:0	8	]
water	17:48	0:0	6	;
water	18:12	0:0	6	ff
op	18:15	0:0	6	+=
call	18:18	18:47	6	ssd
arg	18:22	18:47	7	s[x]-s[2*i_src+x]
water	18:22	0:0	8	s
op	18:23	0:0	8	[
water	18:30	0:0	8	x
op	18:31	0:0	8	]
op	18:33	0:0	8	-
water	18:35	0:0	8	s
op	18:36	0:0	8	[
water	18:37	0:0	8	2
op	18:38	0:0	8	*
water	18:39	0:0	8	i_src
op	18:44	0:0	8	+
water	18:45	0:0	8	x
op	18:46	0:0	8	]
water	18:48	0:0	6	;
water	19:8	0:0	6	}
if	20:8	21:16	4	(ff < fr && fr > i_width / 2)
cond	20:12	20:38	5	ff < fr && fr > i_width / 2
water	20:12	0:0	6	ff
op	20:15	0:0	6	<
water	20:17	0:0	6	fr
op	20:20	0:0	6	&&
water	20:23	0:0	6	fr
op	20:26	0:0	6	>
water	20:28	0:0	6	i_width
op	20:36	0:0	6	/
water	20:38	0:0	6	2
stmts	21:12	21:16	5	
water	21:12	0:0	6	fc
op	21:14	0:0	6	++
water	21:16	0:0	6	;
water	22:4	0:0	4	}
return	23:4	23:32	2	fc<2?false:true
water	23:11	0:0	3	fc
op	23:14	0:0	3	<
water	23:16	0:0	3	2
water	23:18	0:0	3	?
water	23:20	0:0	3	false
water	23:26	0:0	3	:
water	23:28	0:0	3	true

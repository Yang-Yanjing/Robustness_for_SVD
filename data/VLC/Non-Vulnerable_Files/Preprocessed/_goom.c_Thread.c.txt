func	2:0	55:0	0	static void *	Thread
params	2:19	0:0	1	
param	2:21	2:41	2	void *	p_thread_data
stmnts	0:0	54:15	1	
decl	4:4	4:59	2	goom_thread_t	*p_thread
op	4:28	0:0	2	=
water	4:30	0:0	2	(
water	4:31	0:0	2	goom_thread_t
op	4:44	0:0	2	*
water	4:45	0:0	2	)
water	4:46	0:0	2	p_thread_data
decl	5:4	5:16	2	date_t	i_pts
water	6:4	0:0	2	int16_t
water	6:12	0:0	2	p_data
op	6:18	0:0	2	[
water	6:19	0:0	2	2
op	6:20	0:0	2	]
op	6:21	0:0	2	[
water	6:22	0:0	2	512
op	6:25	0:0	2	]
water	6:26	0:0	2	;
decl	7:4	7:31	2	int	i_data
op	7:15	0:0	2	=
water	7:17	0:0	2	0
water	7:18	0:0	2	,
decl	7:4	7:31	2	int	i_count
op	7:28	0:0	2	=
water	7:30	0:0	2	0
decl	8:4	8:29	2	PluginInfo	*p_plugin_info
decl	9:4	9:32	2	int	canc
op	9:13	0:0	2	=
call	9:15	9:31	3	vlc_savecancel
water	10:4	0:0	2	p_plugin_info
op	10:18	0:0	2	=
call	10:20	10:69	2	goom_init
arg	10:31	10:48	3	p_thread->i_width
water	10:31	0:0	4	p_thread
op	10:39	0:0	4	->
water	10:41	0:0	4	i_width
arg	10:50	10:69	3	p_thread->i_height
water	10:50	0:0	4	p_thread
op	10:58	0:0	4	->
water	10:60	0:0	4	i_height
water	10:70	0:0	2	;
for	11:4	51:4	2	(;;)
forinit	11:9	11:9	3	;
water	11:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	12:4	51:4	3	
water	12:4	0:0	4	{
decl	13:8	13:24	4	uint32_t	*plane
decl	14:8	14:24	4	picture_t	*p_pic
call	23:8	23:40	4	vlc_mutex_lock
arg	23:24	23:40	5	&p_thread->lock
op	23:24	0:0	6	&
water	23:25	0:0	6	p_thread
op	23:33	0:0	6	->
water	23:35	0:0	6	lock
water	23:41	0:0	4	;
if	24:8	27:61	4	(! p_thread -> b_exit &&FillBuffer (( int16_t * ) p_data ,& i_data ,& i_pts ,& p_thread -> date ,p_thread ) != VLC_SUCCESS)
cond	24:12	26:63	5	! p_thread -> b_exit &&FillBuffer (( int16_t * ) p_data ,& i_data ,& i_pts ,& p_thread -> date ,p_thread ) != VLC_SUCCESS
op	24:12	0:0	6	!
water	24:13	0:0	6	p_thread
op	24:21	0:0	6	->
water	24:23	0:0	6	b_exit
op	24:30	0:0	6	&&
call	25:12	26:58	6	FillBuffer
arg	25:24	25:41	7	(int16_t*)p_data
water	25:24	0:0	8	(
water	25:25	0:0	8	int16_t
op	25:33	0:0	8	*
water	25:34	0:0	8	)
water	25:35	0:0	8	p_data
arg	25:43	25:50	7	&i_data
op	25:43	0:0	8	&
water	25:44	0:0	8	i_data
arg	26:24	26:30	7	&i_pts
op	26:24	0:0	8	&
water	26:25	0:0	8	i_pts
arg	26:32	26:47	7	&p_thread->date
op	26:32	0:0	8	&
water	26:33	0:0	8	p_thread
op	26:41	0:0	8	->
water	26:43	0:0	8	date
arg	26:49	26:58	7	p_thread
water	26:49	0:0	8	p_thread
op	26:60	0:0	6	!=
water	26:63	0:0	6	VLC_SUCCESS
stmts	27:12	27:61	5	
call	27:12	27:60	6	vlc_cond_wait
arg	27:27	27:42	7	&p_thread->wait
op	27:27	0:0	8	&
water	27:28	0:0	8	p_thread
op	27:36	0:0	8	->
water	27:38	0:0	8	wait
arg	27:44	27:60	7	&p_thread->lock
op	27:44	0:0	8	&
water	27:45	0:0	8	p_thread
op	27:53	0:0	8	->
water	27:55	0:0	8	lock
water	27:61	0:0	6	;
decl	28:8	28:38	4	bool	b_exit
op	28:20	0:0	4	=
water	28:22	0:0	4	p_thread
op	28:30	0:0	4	->
water	28:32	0:0	4	b_exit
call	29:8	29:42	4	vlc_mutex_unlock
arg	29:26	29:42	5	&p_thread->lock
op	29:26	0:0	6	&
water	29:27	0:0	6	p_thread
op	29:35	0:0	6	->
water	29:37	0:0	6	lock
water	29:43	0:0	4	;
if	30:8	31:17	4	(b_exit)
cond	30:12	30:12	5	b_exit
water	30:12	0:0	6	b_exit
stmts	31:12	31:17	5	
break	31:12	31:17	6	
if	33:8	33:79	4	(p_thread -> i_speed && ( ++ i_count % ( p_thread -> i_speed + 1 ) ))
cond	33:12	33:67	5	p_thread -> i_speed && ( ++ i_count % ( p_thread -> i_speed + 1 ) )
water	33:12	0:0	6	p_thread
op	33:20	0:0	6	->
water	33:22	0:0	6	i_speed
op	33:30	0:0	6	&&
water	33:33	0:0	6	(
op	33:34	0:0	6	++
water	33:36	0:0	6	i_count
op	33:44	0:0	6	%
water	33:46	0:0	6	(
water	33:47	0:0	6	p_thread
op	33:55	0:0	6	->
water	33:57	0:0	6	i_speed
op	33:64	0:0	6	+
water	33:65	0:0	6	1
water	33:66	0:0	6	)
water	33:67	0:0	6	)
stmts	33:71	33:79	5	
continue	33:71	33:79	6	
if	35:8	35:65	4	(date_Get (& i_pts ) + GOOM_DELAY <=mdate ( ))
cond	35:12	35:53	5	date_Get (& i_pts ) + GOOM_DELAY <=mdate ( )
call	35:12	35:29	6	date_Get
arg	35:22	35:29	7	&i_pts
op	35:22	0:0	8	&
water	35:23	0:0	8	i_pts
op	35:31	0:0	6	+
water	35:33	0:0	6	GOOM_DELAY
op	35:44	0:0	6	<=
call	35:47	35:53	6	mdate
stmts	35:57	35:65	5	
continue	35:57	35:65	6	
water	36:8	0:0	4	plane
op	36:14	0:0	4	=
call	36:16	37:40	4	goom_update
arg	36:29	36:42	5	p_plugin_info
water	36:29	0:0	6	p_plugin_info
arg	36:44	36:50	5	p_data
water	36:44	0:0	6	p_data
arg	36:52	36:53	5	0
water	36:52	0:0	6	0
arg	36:55	36:58	5	0.0
water	36:55	0:0	6	0
op	36:56	0:0	6	.
water	36:57	0:0	6	0
arg	37:29	37:33	5	NULL
water	37:29	0:0	6	NULL
arg	37:35	37:40	5	NULL
water	37:35	0:0	6	NULL
water	37:41	0:0	4	;
while	38:8	46:8	4	(! ( p_pic =vout_GetPicture (p_thread -> p_vout ) ))
cond	38:15	38:62	5	! ( p_pic =vout_GetPicture (p_thread -> p_vout ) )
op	38:15	0:0	6	!
water	38:16	0:0	6	(
water	38:18	0:0	6	p_pic
op	38:24	0:0	6	=
call	38:26	38:60	6	vout_GetPicture
arg	38:43	38:60	7	p_thread->p_vout
water	38:43	0:0	8	p_thread
op	38:51	0:0	8	->
water	38:53	0:0	8	p_vout
water	38:62	0:0	6	)
stmts	39:8	46:8	5	
water	39:8	0:0	6	{
call	40:12	40:44	6	vlc_mutex_lock
arg	40:28	40:44	7	&p_thread->lock
op	40:28	0:0	8	&
water	40:29	0:0	8	p_thread
op	40:37	0:0	8	->
water	40:39	0:0	8	lock
water	40:45	0:0	6	;
decl	41:12	41:42	6	bool	b_exit
op	41:24	0:0	6	=
water	41:26	0:0	6	p_thread
op	41:34	0:0	6	->
water	41:36	0:0	6	b_exit
call	42:12	42:46	6	vlc_mutex_unlock
arg	42:30	42:46	7	&p_thread->lock
op	42:30	0:0	8	&
water	42:31	0:0	8	p_thread
op	42:39	0:0	8	->
water	42:41	0:0	8	lock
water	42:47	0:0	6	;
if	43:12	44:21	6	(b_exit)
cond	43:16	43:16	7	b_exit
water	43:16	0:0	8	b_exit
stmts	44:16	44:21	7	
break	44:16	44:21	8	
call	45:12	45:38	6	msleep
arg	45:20	45:38	7	VOUT_OUTMEM_SLEEP
water	45:20	0:0	8	VOUT_OUTMEM_SLEEP
water	45:39	0:0	6	;
water	46:8	0:0	6	}
if	47:8	47:33	4	(p_pic == NULL)
cond	47:12	47:21	5	p_pic == NULL
water	47:12	0:0	6	p_pic
op	47:18	0:0	6	==
water	47:21	0:0	6	NULL
stmts	47:28	47:33	5	
break	47:28	47:33	6	
call	48:8	48:88	4	memcpy
arg	48:16	48:36	5	p_pic->p[0].p_pixels
water	48:16	0:0	6	p_pic
op	48:21	0:0	6	->
water	48:23	0:0	6	p
op	48:24	0:0	6	[
water	48:25	0:0	6	0
op	48:26	0:0	6	]
op	48:27	0:0	6	.
water	48:28	0:0	6	p_pixels
arg	48:38	48:43	5	plane
water	48:38	0:0	6	plane
arg	48:45	48:88	5	p_thread->i_width*p_thread->i_height*4
water	48:45	0:0	6	p_thread
op	48:53	0:0	6	->
water	48:55	0:0	6	i_width
op	48:63	0:0	6	*
water	48:65	0:0	6	p_thread
op	48:73	0:0	6	->
water	48:75	0:0	6	i_height
op	48:84	0:0	6	*
water	48:86	0:0	6	4
water	48:89	0:0	4	;
water	49:8	0:0	4	p_pic
op	49:13	0:0	4	->
water	49:15	0:0	4	date
op	49:20	0:0	4	=
call	49:22	49:39	4	date_Get
arg	49:32	49:39	5	&i_pts
op	49:32	0:0	6	&
water	49:33	0:0	6	i_pts
op	49:41	0:0	4	+
water	49:43	0:0	4	GOOM_DELAY
water	49:53	0:0	4	;
call	50:8	50:49	4	vout_PutPicture
arg	50:25	50:41	5	p_thread->p_vout
water	50:25	0:0	6	p_thread
op	50:33	0:0	6	->
water	50:35	0:0	6	p_vout
arg	50:43	50:49	5	p_pic
water	50:43	0:0	6	p_pic
water	50:50	0:0	4	;
water	51:4	0:0	4	}
call	52:4	52:30	2	goom_close
arg	52:16	52:30	3	p_plugin_info
water	52:16	0:0	4	p_plugin_info
water	52:31	0:0	2	;
call	53:4	53:27	2	vlc_restorecancel
arg	53:23	53:27	3	canc
water	53:23	0:0	4	canc
water	53:28	0:0	2	;
return	54:4	54:15	2	NULL
water	54:11	0:0	3	NULL

func	2:0	72:0	0	static int	build_smoo_box
params	2:25	0:0	1	
param	2:27	2:38	2	stream_t *	s
param	2:40	2:58	2	uint8_t *	smoo_box
stmnts	0:0	71:22	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	5:4	5:28	2	sms_stream_t	*sms
op	5:22	0:0	2	=
water	5:24	0:0	2	NULL
decl	6:4	6:19	2	uint32_t	FourCC
call	8:4	8:35	2	memset
arg	8:12	8:20	3	smoo_box
water	8:12	0:0	4	smoo_box
arg	8:22	8:23	3	0
water	8:22	0:0	4	0
arg	8:25	8:35	3	SMOO_SIZE
water	8:25	0:0	4	SMOO_SIZE
water	8:36	0:0	2	;
water	9:4	0:0	2	smoo_box
op	9:12	0:0	2	[
water	9:13	0:0	2	2
op	9:14	0:0	2	]
op	9:16	0:0	2	=
water	9:18	0:0	2	(
water	9:19	0:0	2	SMOO_SIZE
op	9:29	0:0	2	&
water	9:31	0:0	2	0
water	9:32	0:0	2	xff00
water	9:37	0:0	2	)
op	9:38	0:0	2	>>
water	9:40	0:0	2	8
water	9:41	0:0	2	;
water	10:4	0:0	2	smoo_box
op	10:12	0:0	2	[
water	10:13	0:0	2	3
op	10:14	0:0	2	]
op	10:16	0:0	2	=
water	10:18	0:0	2	SMOO_SIZE
op	10:28	0:0	2	&
water	10:30	0:0	2	0
water	10:31	0:0	2	xff
water	10:34	0:0	2	;
water	11:4	0:0	2	smoo_box
op	11:12	0:0	2	[
water	11:13	0:0	2	4
op	11:14	0:0	2	]
op	11:16	0:0	2	=
water	11:18	0:0	2	'u'
water	11:21	0:0	2	;
water	12:4	0:0	2	smoo_box
op	12:12	0:0	2	[
water	12:13	0:0	2	5
op	12:14	0:0	2	]
op	12:16	0:0	2	=
water	12:18	0:0	2	'u'
water	12:21	0:0	2	;
water	13:4	0:0	2	smoo_box
op	13:12	0:0	2	[
water	13:13	0:0	2	6
op	13:14	0:0	2	]
op	13:16	0:0	2	=
water	13:18	0:0	2	'i'
water	13:21	0:0	2	;
water	14:4	0:0	2	smoo_box
op	14:12	0:0	2	[
water	14:13	0:0	2	7
op	14:14	0:0	2	]
op	14:16	0:0	2	=
water	14:18	0:0	2	'd'
water	14:21	0:0	2	;
water	16:4	0:0	2	(
water	16:5	0:0	2	(
water	16:6	0:0	2	uint32_t
op	16:15	0:0	2	*
water	16:16	0:0	2	)
water	16:17	0:0	2	smoo_box
water	16:25	0:0	2	)
op	16:26	0:0	2	[
water	16:27	0:0	2	2
op	16:28	0:0	2	]
op	16:30	0:0	2	=
call	16:32	16:52	2	bswap32
arg	16:41	16:52	3	0xe1da72ba
water	16:41	0:0	4	0
water	16:42	0:0	4	xe1da72ba
water	16:53	0:0	2	;
water	17:4	0:0	2	(
water	17:5	0:0	2	(
water	17:6	0:0	2	uint32_t
op	17:15	0:0	2	*
water	17:16	0:0	2	)
water	17:17	0:0	2	smoo_box
water	17:25	0:0	2	)
op	17:26	0:0	2	[
water	17:27	0:0	2	3
op	17:28	0:0	2	]
op	17:30	0:0	2	=
call	17:32	17:52	2	bswap32
arg	17:41	17:52	3	0x24d743c3
water	17:41	0:0	4	0
water	17:42	0:0	4	x24d743c3
water	17:53	0:0	2	;
water	18:4	0:0	2	(
water	18:5	0:0	2	(
water	18:6	0:0	2	uint32_t
op	18:15	0:0	2	*
water	18:16	0:0	2	)
water	18:17	0:0	2	smoo_box
water	18:25	0:0	2	)
op	18:26	0:0	2	[
water	18:27	0:0	2	4
op	18:28	0:0	2	]
op	18:30	0:0	2	=
call	18:32	18:52	2	bswap32
arg	18:41	18:52	3	0xa6a51b57
water	18:41	0:0	4	0
water	18:42	0:0	4	xa6a51b57
water	18:53	0:0	2	;
water	19:4	0:0	2	(
water	19:5	0:0	2	(
water	19:6	0:0	2	uint32_t
op	19:15	0:0	2	*
water	19:16	0:0	2	)
water	19:17	0:0	2	smoo_box
water	19:25	0:0	2	)
op	19:26	0:0	2	[
water	19:27	0:0	2	5
op	19:28	0:0	2	]
op	19:30	0:0	2	=
call	19:32	19:52	2	bswap32
arg	19:41	19:52	3	0x59a1a92c
water	19:41	0:0	4	0
water	19:42	0:0	4	x59a1a92c
water	19:53	0:0	2	;
decl	20:4	20:21	2	uint8_t	*stra_box
for	21:4	70:4	2	( int i = 0 ;i < 3;i ++)
forinit	0:0	21:18	3	 int i = 0 ;
decl	21:9	21:18	4	int	i
op	21:15	0:0	4	=
water	21:17	0:0	4	0
cond	21:20	21:24	3	i < 3
water	21:20	0:0	4	i
op	21:22	0:0	4	<
water	21:24	0:0	4	3
forexpr	21:27	21:28	3	i ++
water	21:27	0:0	4	i
op	21:28	0:0	4	++
stmts	22:4	70:4	3	
water	22:4	0:0	4	{
water	23:8	0:0	4	sms
op	23:12	0:0	4	=
water	23:14	0:0	4	NULL
water	23:18	0:0	4	;
decl	24:8	24:28	4	int	cat
op	24:16	0:0	4	=
water	24:18	0:0	4	UNKNOWN_ES
water	25:8	0:0	4	stra_box
op	25:17	0:0	4	=
water	25:19	0:0	4	smoo_box
op	25:28	0:0	4	+
water	25:30	0:0	4	i
op	25:32	0:0	4	*
water	25:34	0:0	4	STRA_SIZE
water	25:43	0:0	4	;
water	26:8	0:0	4	stra_box
op	26:16	0:0	4	[
water	26:17	0:0	4	26
op	26:19	0:0	4	]
op	26:21	0:0	4	=
water	26:23	0:0	4	(
water	26:24	0:0	4	STRA_SIZE
op	26:34	0:0	4	&
water	26:36	0:0	4	0
water	26:37	0:0	4	xff00
water	26:42	0:0	4	)
op	26:43	0:0	4	>>
water	26:45	0:0	4	8
water	26:46	0:0	4	;
water	27:8	0:0	4	stra_box
op	27:16	0:0	4	[
water	27:17	0:0	4	27
op	27:19	0:0	4	]
op	27:21	0:0	4	=
water	27:23	0:0	4	STRA_SIZE
op	27:33	0:0	4	&
water	27:35	0:0	4	0
water	27:36	0:0	4	xff
water	27:39	0:0	4	;
water	28:8	0:0	4	stra_box
op	28:16	0:0	4	[
water	28:17	0:0	4	28
op	28:19	0:0	4	]
op	28:21	0:0	4	=
water	28:23	0:0	4	'u'
water	28:26	0:0	4	;
water	29:8	0:0	4	stra_box
op	29:16	0:0	4	[
water	29:17	0:0	4	29
op	29:19	0:0	4	]
op	29:21	0:0	4	=
water	29:23	0:0	4	'u'
water	29:26	0:0	4	;
water	30:8	0:0	4	stra_box
op	30:16	0:0	4	[
water	30:17	0:0	4	30
op	30:19	0:0	4	]
op	30:21	0:0	4	=
water	30:23	0:0	4	'i'
water	30:26	0:0	4	;
water	31:8	0:0	4	stra_box
op	31:16	0:0	4	[
water	31:17	0:0	4	31
op	31:19	0:0	4	]
op	31:21	0:0	4	=
water	31:23	0:0	4	'd'
water	31:26	0:0	4	;
water	33:8	0:0	4	(
water	33:9	0:0	4	(
water	33:10	0:0	4	uint32_t
op	33:19	0:0	4	*
water	33:20	0:0	4	)
water	33:21	0:0	4	stra_box
water	33:29	0:0	4	)
op	33:30	0:0	4	[
water	33:31	0:0	4	8
op	33:32	0:0	4	]
op	33:34	0:0	4	=
call	33:36	33:56	4	bswap32
arg	33:45	33:56	5	0xb03ef770
water	33:45	0:0	6	0
water	33:46	0:0	6	xb03ef770
water	33:57	0:0	4	;
water	34:8	0:0	4	(
water	34:9	0:0	4	(
water	34:10	0:0	4	uint32_t
op	34:19	0:0	4	*
water	34:20	0:0	4	)
water	34:21	0:0	4	stra_box
water	34:29	0:0	4	)
op	34:30	0:0	4	[
water	34:31	0:0	4	9
op	34:32	0:0	4	]
op	34:34	0:0	4	=
call	34:36	34:56	4	bswap32
arg	34:45	34:56	5	0x33bd4bac
water	34:45	0:0	6	0
water	34:46	0:0	6	x33bd4bac
water	34:57	0:0	4	;
water	35:8	0:0	4	(
water	35:9	0:0	4	(
water	35:10	0:0	4	uint32_t
op	35:19	0:0	4	*
water	35:20	0:0	4	)
water	35:21	0:0	4	stra_box
water	35:29	0:0	4	)
op	35:30	0:0	4	[
water	35:31	0:0	4	10
op	35:33	0:0	4	]
op	35:35	0:0	4	=
call	35:37	35:57	4	bswap32
arg	35:46	35:57	5	0x96c7bf25
water	35:46	0:0	6	0
water	35:47	0:0	6	x96c7bf25
water	35:58	0:0	4	;
water	36:8	0:0	4	(
water	36:9	0:0	4	(
water	36:10	0:0	4	uint32_t
op	36:19	0:0	4	*
water	36:20	0:0	4	)
water	36:21	0:0	4	stra_box
water	36:29	0:0	4	)
op	36:30	0:0	4	[
water	36:31	0:0	4	11
op	36:33	0:0	4	]
op	36:35	0:0	4	=
call	36:37	36:57	4	bswap32
arg	36:46	36:57	5	0xf97e2447
water	36:46	0:0	6	0
water	36:47	0:0	6	xf97e2447
water	36:58	0:0	4	;
water	37:8	0:0	4	cat
op	37:12	0:0	4	=
call	37:14	37:33	4	index_to_es_cat
arg	37:31	37:33	5	i
water	37:31	0:0	6	i
water	37:34	0:0	4	;
water	38:8	0:0	4	stra_box
op	38:16	0:0	4	[
water	38:17	0:0	4	48
op	38:19	0:0	4	]
op	38:21	0:0	4	=
water	38:23	0:0	4	cat
water	38:26	0:0	4	;
water	39:8	0:0	4	sms
op	39:12	0:0	4	=
call	39:14	39:39	4	SMS_GET_SELECTED_ST
arg	39:35	39:39	5	cat
water	39:35	0:0	6	cat
water	39:40	0:0	4	;
water	40:8	0:0	4	stra_box
op	40:16	0:0	4	[
water	40:17	0:0	4	49
op	40:19	0:0	4	]
op	40:21	0:0	4	=
water	40:23	0:0	4	0
water	40:24	0:0	4	;
if	41:8	42:20	4	(sms == NULL)
cond	41:12	41:19	5	sms == NULL
water	41:12	0:0	6	sms
op	41:16	0:0	6	==
water	41:19	0:0	6	NULL
stmts	42:12	42:20	5	
continue	42:12	42:20	6	
water	43:8	0:0	4	stra_box
op	43:16	0:0	4	[
water	43:17	0:0	4	50
op	43:19	0:0	4	]
op	43:21	0:0	4	=
water	43:23	0:0	4	(
water	43:24	0:0	4	sms
op	43:27	0:0	4	->
water	43:29	0:0	4	id
op	43:32	0:0	4	&
water	43:34	0:0	4	0
water	43:35	0:0	4	xff00
water	43:40	0:0	4	)
op	43:41	0:0	4	>>
water	43:43	0:0	4	8
water	43:44	0:0	4	;
water	44:8	0:0	4	stra_box
op	44:16	0:0	4	[
water	44:17	0:0	4	51
op	44:19	0:0	4	]
op	44:21	0:0	4	=
water	44:23	0:0	4	sms
op	44:26	0:0	4	->
water	44:28	0:0	4	id
op	44:31	0:0	4	&
water	44:33	0:0	4	0
water	44:34	0:0	4	xff
water	44:37	0:0	4	;
water	45:8	0:0	4	(
water	45:9	0:0	4	(
water	45:10	0:0	4	uint32_t
op	45:19	0:0	4	*
water	45:20	0:0	4	)
water	45:21	0:0	4	stra_box
water	45:29	0:0	4	)
op	45:30	0:0	4	[
water	45:31	0:0	4	13
op	45:33	0:0	4	]
op	45:35	0:0	4	=
call	45:37	45:61	4	bswap32
arg	45:46	45:61	5	sms->timescale
water	45:46	0:0	6	sms
op	45:49	0:0	6	->
water	45:51	0:0	6	timescale
water	45:62	0:0	4	;
water	46:8	0:0	4	(
water	46:9	0:0	4	(
water	46:10	0:0	4	uint64_t
op	46:19	0:0	4	*
water	46:20	0:0	4	)
water	46:21	0:0	4	stra_box
water	46:29	0:0	4	)
op	46:30	0:0	4	[
water	46:31	0:0	4	7
op	46:32	0:0	4	]
op	46:34	0:0	4	=
call	46:36	46:65	4	bswap64
arg	46:45	46:65	5	p_sys->vod_duration
water	46:45	0:0	6	p_sys
op	46:50	0:0	6	->
water	46:52	0:0	6	vod_duration
water	46:66	0:0	4	;
decl	47:8	47:70	4	quality_level_t	*qlvl
op	47:31	0:0	4	=
call	47:33	47:69	5	get_qlevel
arg	47:45	47:48	6	sms
water	47:45	0:0	7	sms
arg	47:50	47:69	6	sms->download_qlvl
water	47:50	0:0	7	sms
op	47:53	0:0	7	->
water	47:55	0:0	7	download_qlvl
if	48:8	69:8	4	(qlvl)
cond	48:13	48:13	5	qlvl
water	48:13	0:0	6	qlvl
stmts	49:8	69:8	5	
water	49:8	0:0	6	{
water	50:12	0:0	6	FourCC
op	50:19	0:0	6	=
water	50:21	0:0	6	qlvl
op	50:25	0:0	6	->
water	50:27	0:0	6	FourCC
water	50:34	0:0	6	?
water	50:36	0:0	6	qlvl
op	50:40	0:0	6	->
water	50:42	0:0	6	FourCC
water	50:49	0:0	6	:
water	50:51	0:0	6	sms
op	50:54	0:0	6	->
water	50:56	0:0	6	default_FourCC
water	50:70	0:0	6	;
water	51:12	0:0	6	(
water	51:13	0:0	6	(
water	51:14	0:0	6	uint32_t
op	51:23	0:0	6	*
water	51:24	0:0	6	)
water	51:25	0:0	6	stra_box
water	51:33	0:0	6	)
op	51:34	0:0	6	[
water	51:35	0:0	6	16
op	51:37	0:0	6	]
op	51:39	0:0	6	=
call	51:41	51:57	6	bswap32
arg	51:50	51:57	7	FourCC
water	51:50	0:0	8	FourCC
water	51:58	0:0	6	;
water	52:12	0:0	6	(
water	52:13	0:0	6	(
water	52:14	0:0	6	uint32_t
op	52:23	0:0	6	*
water	52:24	0:0	6	)
water	52:25	0:0	6	stra_box
water	52:33	0:0	6	)
op	52:34	0:0	6	[
water	52:35	0:0	6	17
op	52:37	0:0	6	]
op	52:39	0:0	6	=
call	52:41	52:64	6	bswap32
arg	52:50	52:64	7	qlvl->Bitrate
water	52:50	0:0	8	qlvl
op	52:54	0:0	8	->
water	52:56	0:0	8	Bitrate
water	52:65	0:0	6	;
water	53:12	0:0	6	(
water	53:13	0:0	6	(
water	53:14	0:0	6	uint32_t
op	53:23	0:0	6	*
water	53:24	0:0	6	)
water	53:25	0:0	6	stra_box
water	53:33	0:0	6	)
op	53:34	0:0	6	[
water	53:35	0:0	6	18
op	53:37	0:0	6	]
op	53:39	0:0	6	=
call	53:41	53:65	6	bswap32
arg	53:50	53:65	7	qlvl->MaxWidth
water	53:50	0:0	8	qlvl
op	53:54	0:0	8	->
water	53:56	0:0	8	MaxWidth
water	53:66	0:0	6	;
water	54:12	0:0	6	(
water	54:13	0:0	6	(
water	54:14	0:0	6	uint32_t
op	54:23	0:0	6	*
water	54:24	0:0	6	)
water	54:25	0:0	6	stra_box
water	54:33	0:0	6	)
op	54:34	0:0	6	[
water	54:35	0:0	6	19
op	54:37	0:0	6	]
op	54:39	0:0	6	=
call	54:41	54:66	6	bswap32
arg	54:50	54:66	7	qlvl->MaxHeight
water	54:50	0:0	8	qlvl
op	54:54	0:0	8	->
water	54:56	0:0	8	MaxHeight
water	54:67	0:0	6	;
water	55:12	0:0	6	(
water	55:13	0:0	6	(
water	55:14	0:0	6	uint32_t
op	55:23	0:0	6	*
water	55:24	0:0	6	)
water	55:25	0:0	6	stra_box
water	55:33	0:0	6	)
op	55:34	0:0	6	[
water	55:35	0:0	6	20
op	55:37	0:0	6	]
op	55:39	0:0	6	=
call	55:41	55:69	6	bswap32
arg	55:50	55:69	7	qlvl->SamplingRate
water	55:50	0:0	8	qlvl
op	55:54	0:0	8	->
water	55:56	0:0	8	SamplingRate
water	55:70	0:0	6	;
water	56:12	0:0	6	(
water	56:13	0:0	6	(
water	56:14	0:0	6	uint32_t
op	56:23	0:0	6	*
water	56:24	0:0	6	)
water	56:25	0:0	6	stra_box
water	56:33	0:0	6	)
op	56:34	0:0	6	[
water	56:35	0:0	6	21
op	56:37	0:0	6	]
op	56:39	0:0	6	=
call	56:41	56:65	6	bswap32
arg	56:50	56:65	7	qlvl->Channels
water	56:50	0:0	8	qlvl
op	56:54	0:0	8	->
water	56:56	0:0	8	Channels
water	56:66	0:0	6	;
water	57:12	0:0	6	(
water	57:13	0:0	6	(
water	57:14	0:0	6	uint32_t
op	57:23	0:0	6	*
water	57:24	0:0	6	)
water	57:25	0:0	6	stra_box
water	57:33	0:0	6	)
op	57:34	0:0	6	[
water	57:35	0:0	6	22
op	57:37	0:0	6	]
op	57:39	0:0	6	=
call	57:41	57:70	6	bswap32
arg	57:50	57:70	7	qlvl->BitsPerSample
water	57:50	0:0	8	qlvl
op	57:54	0:0	8	->
water	57:56	0:0	8	BitsPerSample
water	57:71	0:0	6	;
water	58:12	0:0	6	(
water	58:13	0:0	6	(
water	58:14	0:0	6	uint32_t
op	58:23	0:0	6	*
water	58:24	0:0	6	)
water	58:25	0:0	6	stra_box
water	58:33	0:0	6	)
op	58:34	0:0	6	[
water	58:35	0:0	6	23
op	58:37	0:0	6	]
op	58:39	0:0	6	=
call	58:41	58:65	6	bswap32
arg	58:50	58:65	7	qlvl->AudioTag
water	58:50	0:0	8	qlvl
op	58:54	0:0	8	->
water	58:56	0:0	8	AudioTag
water	58:66	0:0	6	;
water	59:12	0:0	6	(
water	59:13	0:0	6	(
water	59:14	0:0	6	uint16_t
op	59:23	0:0	6	*
water	59:24	0:0	6	)
water	59:25	0:0	6	stra_box
water	59:33	0:0	6	)
op	59:34	0:0	6	[
water	59:35	0:0	6	48
op	59:37	0:0	6	]
op	59:39	0:0	6	=
call	59:41	59:68	6	bswap16
arg	59:50	59:68	7	qlvl->nBlockAlign
water	59:50	0:0	8	qlvl
op	59:54	0:0	8	->
water	59:56	0:0	8	nBlockAlign
water	59:69	0:0	6	;
if	60:12	61:24	6	(! qlvl -> CodecPrivateData)
cond	60:16	60:23	7	! qlvl -> CodecPrivateData
op	60:16	0:0	8	!
water	60:17	0:0	8	qlvl
op	60:21	0:0	8	->
water	60:23	0:0	8	CodecPrivateData
stmts	61:16	61:24	7	
continue	61:16	61:24	8	
water	62:12	0:0	6	stra_box
op	62:20	0:0	6	[
water	62:21	0:0	6	98
op	62:23	0:0	6	]
op	62:25	0:0	6	=
water	62:27	0:0	6	stra_box
op	62:35	0:0	6	[
water	62:36	0:0	6	99
op	62:38	0:0	6	]
op	62:40	0:0	6	=
water	62:42	0:0	6	stra_box
op	62:50	0:0	6	[
water	62:51	0:0	6	100
op	62:54	0:0	6	]
op	62:56	0:0	6	=
water	62:58	0:0	6	0
water	62:59	0:0	6	;
water	63:12	0:0	6	stra_box
op	63:20	0:0	6	[
water	63:21	0:0	6	101
op	63:24	0:0	6	]
op	63:26	0:0	6	=
call	63:28	63:59	6	strlen
arg	63:36	63:59	7	qlvl->CodecPrivateData
water	63:36	0:0	8	qlvl
op	63:40	0:0	8	->
water	63:42	0:0	8	CodecPrivateData
op	63:61	0:0	6	/
water	63:63	0:0	6	2
water	63:64	0:0	6	;
if	64:12	65:47	6	(stra_box [ 101 ] > STRA_SIZE - 102)
cond	64:17	64:45	7	stra_box [ 101 ] > STRA_SIZE - 102
water	64:17	0:0	8	stra_box
op	64:25	0:0	8	[
water	64:26	0:0	8	101
op	64:29	0:0	8	]
op	64:31	0:0	8	>
water	64:33	0:0	8	STRA_SIZE
op	64:43	0:0	8	-
water	64:45	0:0	8	102
stmts	65:16	65:47	7	
water	65:16	0:0	8	stra_box
op	65:24	0:0	8	[
water	65:25	0:0	8	101
op	65:28	0:0	8	]
op	65:30	0:0	8	=
water	65:32	0:0	8	STRA_SIZE
op	65:42	0:0	8	-
water	65:44	0:0	8	102
water	65:47	0:0	8	;
decl	66:12	66:87	6	uint8_t	*binary_cpd
op	66:32	0:0	6	=
call	66:34	66:86	7	decode_string_hex_to_binary
arg	66:63	66:86	8	qlvl->CodecPrivateData
water	66:63	0:0	9	qlvl
op	66:67	0:0	9	->
water	66:69	0:0	9	CodecPrivateData
call	67:12	67:62	6	memcpy
arg	67:20	67:34	7	stra_box+102
water	67:20	0:0	8	stra_box
op	67:29	0:0	8	+
water	67:31	0:0	8	102
arg	67:36	67:46	7	binary_cpd
water	67:36	0:0	8	binary_cpd
arg	67:48	67:62	7	stra_box[101]
water	67:48	0:0	8	stra_box
op	67:56	0:0	8	[
water	67:57	0:0	8	101
op	67:60	0:0	8	]
water	67:63	0:0	6	;
call	68:12	68:29	6	free
arg	68:18	68:29	7	binary_cpd
water	68:18	0:0	8	binary_cpd
water	68:30	0:0	6	;
water	69:8	0:0	6	}
water	70:4	0:0	4	}
return	71:4	71:22	2	VLC_SUCCESS
water	71:11	0:0	3	VLC_SUCCESS

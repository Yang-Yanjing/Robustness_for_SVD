decl	1:7	1:38	0	void	StreamDelete
water	1:24	0:0	0	(
water	1:26	0:0	0	stream_t
op	1:35	0:0	0	*
water	1:37	0:0	0	)
func	2:0	29:0	0	stream_t *	stream_FilterNew
params	2:26	0:0	1	
param	2:28	2:46	2	stream_t *	p_source
param	3:28	3:58	2	const char *	psz_stream_filter
stmnts	0:0	28:12	1	
decl	5:4	5:15	2	stream_t	*s
call	6:4	6:29	2	assert
arg	6:12	6:29	3	p_source!=NULL
water	6:12	0:0	4	p_source
op	6:21	0:0	4	!=
water	6:24	0:0	4	NULL
water	6:30	0:0	2	;
water	7:4	0:0	2	s
op	7:6	0:0	2	=
call	7:8	7:49	2	stream_CommonNew
arg	7:26	7:49	3	VLC_OBJECT(p_source)
call	7:26	7:47	4	VLC_OBJECT
arg	7:38	7:47	5	p_source
water	7:38	0:0	6	p_source
water	7:50	0:0	2	;
if	8:4	9:19	2	(s == NULL)
cond	8:8	8:13	3	s == NULL
water	8:8	0:0	4	s
op	8:10	0:0	4	==
water	8:13	0:0	4	NULL
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	p_input
op	10:15	0:0	2	=
water	10:17	0:0	2	p_source
op	10:25	0:0	2	->
water	10:27	0:0	2	p_input
water	10:34	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	psz_access
op	12:18	0:0	2	=
call	12:20	12:49	2	strdup
arg	12:28	12:49	3	p_source->psz_access
water	12:28	0:0	4	p_source
op	12:36	0:0	4	->
water	12:38	0:0	4	psz_access
water	12:50	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	psz_path
op	13:16	0:0	2	=
call	13:18	13:45	2	strdup
arg	13:26	13:45	3	p_source->psz_path
water	13:26	0:0	4	p_source
op	13:34	0:0	4	->
water	13:36	0:0	4	psz_path
water	13:46	0:0	2	;
if	14:4	18:4	2	(! s -> psz_path)
cond	14:8	14:12	3	! s -> psz_path
op	14:8	0:0	4	!
water	14:9	0:0	4	s
op	14:10	0:0	4	->
water	14:12	0:0	4	psz_path
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:31	4	stream_CommonDelete
arg	16:29	16:31	5	s
water	16:29	0:0	6	s
water	16:32	0:0	4	;
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
water	18:4	0:0	4	}
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	p_source
op	19:16	0:0	2	=
water	19:18	0:0	2	p_source
water	19:26	0:0	2	;
water	21:4	0:0	2	s
op	21:5	0:0	2	->
water	21:7	0:0	2	p_module
op	21:16	0:0	2	=
call	21:18	21:75	2	module_need
arg	21:31	21:32	3	s
water	21:31	0:0	4	s
arg	21:34	21:49	3	"stream_filter"
water	21:34	0:0	4	"stream_filter"
arg	21:51	21:68	3	psz_stream_filter
water	21:51	0:0	4	psz_stream_filter
arg	21:70	21:75	3	true
water	21:70	0:0	4	true
water	21:76	0:0	2	;
if	22:4	26:4	2	(! s -> p_module)
cond	22:8	22:12	3	! s -> p_module
op	22:8	0:0	4	!
water	22:9	0:0	4	s
op	22:10	0:0	4	->
water	22:12	0:0	4	p_module
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:31	4	stream_CommonDelete
arg	24:29	24:31	5	s
water	24:29	0:0	6	s
water	24:32	0:0	4	;
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	26:4	0:0	4	}
water	27:4	0:0	2	s
op	27:5	0:0	2	->
water	27:7	0:0	2	pf_destroy
op	27:18	0:0	2	=
water	27:20	0:0	2	StreamDelete
water	27:32	0:0	2	;
return	28:4	28:12	2	s
water	28:11	0:0	3	s

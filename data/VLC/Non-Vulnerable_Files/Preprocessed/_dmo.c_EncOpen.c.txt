func	2:0	71:0	0	static int	EncOpen
params	2:18	0:0	1	
param	2:20	2:41	2	vlc_object_t *	p_this
stmnts	0:0	70:23	1	
decl	4:4	4:41	2	encoder_t	*p_enc
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	encoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:31	2	encoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:30	2	IMediaObject	*p_dmo
op	6:24	0:0	2	=
water	6:26	0:0	2	NULL
decl	7:4	7:31	2	HINSTANCE	hmsdmo_dll
op	7:25	0:0	2	=
water	7:27	0:0	2	NULL
call	9:4	9:51	2	CoInitializeEx
arg	9:20	9:24	3	NULL
water	9:20	0:0	4	NULL
arg	9:26	9:51	3	COINIT_APARTMENTTHREADED
water	9:26	0:0	4	COINIT_APARTMENTTHREADED
water	9:52	0:0	2	;
if	10:4	16:4	2	(LoadDMO (p_this ,& hmsdmo_dll ,& p_dmo ,& p_enc -> fmt_out ,true ) != VLC_SUCCESS)
cond	10:8	11:11	3	LoadDMO (p_this ,& hmsdmo_dll ,& p_dmo ,& p_enc -> fmt_out ,true ) != VLC_SUCCESS
call	10:8	10:68	4	LoadDMO
arg	10:17	10:23	5	p_this
water	10:17	0:0	6	p_this
arg	10:25	10:36	5	&hmsdmo_dll
op	10:25	0:0	6	&
water	10:26	0:0	6	hmsdmo_dll
arg	10:38	10:44	5	&p_dmo
op	10:38	0:0	6	&
water	10:39	0:0	6	p_dmo
arg	10:46	10:61	5	&p_enc->fmt_out
op	10:46	0:0	6	&
water	10:47	0:0	6	p_enc
op	10:52	0:0	6	->
water	10:54	0:0	6	fmt_out
arg	10:63	10:68	5	true
water	10:63	0:0	6	true
op	11:8	0:0	4	!=
water	11:11	0:0	4	VLC_SUCCESS
stmts	12:4	16:4	3	
water	12:4	0:0	4	{
water	13:8	0:0	4	hmsdmo_dll
op	13:19	0:0	4	=
water	13:21	0:0	4	0
water	13:22	0:0	4	;
water	14:8	0:0	4	p_dmo
op	14:14	0:0	4	=
water	14:16	0:0	4	0
water	14:17	0:0	4	;
goto	15:8	15:18	4	error
water	15:13	0:0	5	error
water	16:4	0:0	4	}
if	17:4	20:4	2	(p_enc -> fmt_in . i_cat == VIDEO_ES)
cond	17:8	17:31	3	p_enc -> fmt_in . i_cat == VIDEO_ES
water	17:8	0:0	4	p_enc
op	17:13	0:0	4	->
water	17:15	0:0	4	fmt_in
op	17:21	0:0	4	.
water	17:22	0:0	4	i_cat
op	17:28	0:0	4	==
water	17:31	0:0	4	VIDEO_ES
stmts	18:4	20:4	3	
water	18:4	0:0	4	{
if	19:8	19:75	4	(EncoderSetVideoType (p_enc ,p_dmo ) != VLC_SUCCESS)
cond	19:12	19:51	5	EncoderSetVideoType (p_enc ,p_dmo ) != VLC_SUCCESS
call	19:12	19:46	6	EncoderSetVideoType
arg	19:33	19:38	7	p_enc
water	19:33	0:0	8	p_enc
arg	19:40	19:46	7	p_dmo
water	19:40	0:0	8	p_dmo
op	19:48	0:0	6	!=
water	19:51	0:0	6	VLC_SUCCESS
stmts	19:65	19:75	5	
goto	19:65	19:75	6	error
water	19:70	0:0	7	error
water	20:4	0:0	4	}
else	21:4	24:4	2
stmts	22:4	24:4	3	
water	22:4	0:0	4	{
if	23:8	23:75	4	(EncoderSetAudioType (p_enc ,p_dmo ) != VLC_SUCCESS)
cond	23:12	23:51	5	EncoderSetAudioType (p_enc ,p_dmo ) != VLC_SUCCESS
call	23:12	23:46	6	EncoderSetAudioType
arg	23:33	23:38	7	p_enc
water	23:33	0:0	8	p_enc
arg	23:40	23:46	7	p_dmo
water	23:40	0:0	8	p_dmo
op	23:48	0:0	6	!=
water	23:51	0:0	6	VLC_SUCCESS
stmts	23:65	23:75	5	
goto	23:65	23:75	6	error
water	23:70	0:0	7	error
water	24:4	0:0	4	}
if	26:4	29:4	2	(( p_enc -> p_sys = p_sys =malloc (sizeof ( * p_sys ) ) ) == NULL)
cond	26:8	26:61	3	( p_enc -> p_sys = p_sys =malloc (sizeof ( * p_sys ) ) ) == NULL
water	26:8	0:0	4	(
water	26:10	0:0	4	p_enc
op	26:15	0:0	4	->
water	26:17	0:0	4	p_sys
op	26:23	0:0	4	=
water	26:25	0:0	4	p_sys
op	26:31	0:0	4	=
call	26:33	26:54	4	malloc
arg	26:40	26:54	5	sizeof(*p_sys)
op	26:40	0:0	6	sizeof
water	26:46	0:0	6	(
op	26:47	0:0	6	*
water	26:48	0:0	6	p_sys
water	26:53	0:0	6	)
water	26:56	0:0	4	)
op	26:58	0:0	4	==
water	26:61	0:0	4	NULL
stmts	27:4	29:4	3	
water	27:4	0:0	4	{
goto	28:8	28:18	4	error
water	28:13	0:0	5	error
water	29:4	0:0	4	}
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	hmsdmo_dll
op	30:22	0:0	2	=
water	30:24	0:0	2	hmsdmo_dll
water	30:34	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	p_dmo
op	31:17	0:0	2	=
water	31:19	0:0	2	p_dmo
water	31:24	0:0	2	;
water	33:4	0:0	2	{
decl	34:8	34:37	2	uint32_t	i_size
water	34:23	0:0	2	,
decl	34:8	34:37	2	uint32_t	i_align
water	34:32	0:0	2	,
decl	34:8	34:37	2	uint32_t	dum
if	35:8	36:57	2	(p_dmo -> vt -> GetInputSizeInfo (p_dmo ,0 ,& i_size ,& i_align ,& dum ))
cond	35:12	35:75	3	p_dmo -> vt -> GetInputSizeInfo (p_dmo ,0 ,& i_size ,& i_align ,& dum )
call	35:12	35:75	4	p_dmo->vt->GetInputSizeInfo
arg	35:41	35:46	5	p_dmo
water	35:41	0:0	6	p_dmo
arg	35:48	35:49	5	0
water	35:48	0:0	6	0
arg	35:51	35:58	5	&i_size
op	35:51	0:0	6	&
water	35:52	0:0	6	i_size
arg	35:60	35:68	5	&i_align
op	35:60	0:0	6	&
water	35:61	0:0	6	i_align
arg	35:70	35:75	5	&dum
op	35:70	0:0	6	&
water	35:71	0:0	6	dum
stmts	36:12	36:57	3	
call	36:12	36:56	4	msg_Err
arg	36:21	36:26	5	p_enc
water	36:21	0:0	6	p_enc
arg	36:28	36:56	5	"GetInputSizeInfo() failed"
water	36:28	0:0	6	"GetInputSizeInfo() failed"
water	36:57	0:0	4	;
else	37:8	39:43	2
stmts	38:12	39:43	3	
call	38:12	39:42	4	msg_Dbg
arg	38:21	38:26	5	p_enc
water	38:21	0:0	6	p_enc
arg	38:28	38:72	5	"GetInputSizeInfo(): bytes %i, align %i, %i"
water	38:28	0:0	6	"GetInputSizeInfo(): bytes %i, align %i, %i"
arg	39:21	39:27	5	i_size
water	39:21	0:0	6	i_size
arg	39:29	39:36	5	i_align
water	39:29	0:0	6	i_align
arg	39:38	39:42	5	dum
water	39:38	0:0	6	dum
water	39:43	0:0	4	;
water	40:4	0:0	2	}
water	42:4	0:0	2	{
decl	43:8	43:32	2	uint32_t	i_size
water	43:23	0:0	2	,
decl	43:8	43:32	2	uint32_t	i_align
water	44:8	0:0	2	p_sys
op	44:13	0:0	2	->
water	44:15	0:0	2	i_min_output
op	44:28	0:0	2	=
water	44:30	0:0	2	0
water	44:31	0:0	2	;
if	45:8	49:8	2	(p_dmo -> vt -> GetOutputSizeInfo (p_dmo ,0 ,& i_size ,& i_align ))
cond	45:12	45:70	3	p_dmo -> vt -> GetOutputSizeInfo (p_dmo ,0 ,& i_size ,& i_align )
call	45:12	45:70	4	p_dmo->vt->GetOutputSizeInfo
arg	45:42	45:47	5	p_dmo
water	45:42	0:0	6	p_dmo
arg	45:49	45:50	5	0
water	45:49	0:0	6	0
arg	45:52	45:59	5	&i_size
op	45:52	0:0	6	&
water	45:53	0:0	6	i_size
arg	45:61	45:70	5	&i_align
op	45:61	0:0	6	&
water	45:62	0:0	6	i_align
stmts	46:8	49:8	3	
water	46:8	0:0	4	{
call	47:12	47:57	4	msg_Err
arg	47:21	47:26	5	p_enc
water	47:21	0:0	6	p_enc
arg	47:28	47:57	5	"GetOutputSizeInfo() failed"
water	47:28	0:0	6	"GetOutputSizeInfo() failed"
water	47:58	0:0	4	;
goto	48:12	48:22	4	error
water	48:17	0:0	5	error
water	49:8	0:0	4	}
else	50:8	55:8	2
stmts	51:8	55:8	3	
water	51:8	0:0	4	{
call	52:12	53:37	4	msg_Dbg
arg	52:21	52:26	5	p_enc
water	52:21	0:0	6	p_enc
arg	52:28	52:69	5	"GetOutputSizeInfo(): bytes %i, align %i"
water	52:28	0:0	6	"GetOutputSizeInfo(): bytes %i, align %i"
arg	53:21	53:27	5	i_size
water	53:21	0:0	6	i_size
arg	53:29	53:37	5	i_align
water	53:29	0:0	6	i_align
water	53:38	0:0	4	;
water	54:12	0:0	4	p_sys
op	54:17	0:0	4	->
water	54:19	0:0	4	i_min_output
op	54:32	0:0	4	=
water	54:34	0:0	4	i_size
water	54:40	0:0	4	;
water	55:8	0:0	4	}
water	56:4	0:0	2	}
water	58:4	0:0	2	p_enc
op	58:9	0:0	2	->
water	58:11	0:0	2	fmt_out
op	58:18	0:0	2	.
water	58:19	0:0	2	i_cat
op	58:25	0:0	2	=
water	58:27	0:0	2	p_enc
op	58:32	0:0	2	->
water	58:34	0:0	2	fmt_out
op	58:41	0:0	2	.
water	58:42	0:0	2	i_cat
water	58:47	0:0	2	;
if	59:4	60:69	2	(p_enc -> fmt_out . i_cat == AUDIO_ES)
cond	59:8	59:32	3	p_enc -> fmt_out . i_cat == AUDIO_ES
water	59:8	0:0	4	p_enc
op	59:13	0:0	4	->
water	59:15	0:0	4	fmt_out
op	59:22	0:0	4	.
water	59:23	0:0	4	i_cat
op	59:29	0:0	4	==
water	59:32	0:0	4	AUDIO_ES
stmts	60:8	60:69	3	
call	60:8	60:68	4	date_Init
arg	60:19	60:35	5	&p_sys->end_date
op	60:19	0:0	6	&
water	60:20	0:0	6	p_sys
op	60:25	0:0	6	->
water	60:27	0:0	6	end_date
arg	60:37	60:64	5	p_enc->fmt_out.audio.i_rate
water	60:37	0:0	6	p_enc
op	60:42	0:0	6	->
water	60:44	0:0	6	fmt_out
op	60:51	0:0	6	.
water	60:52	0:0	6	audio
op	60:57	0:0	6	.
water	60:58	0:0	6	i_rate
arg	60:66	60:68	5	1
water	60:66	0:0	6	1
water	60:69	0:0	4	;
else	61:4	62:56	2
stmts	62:8	62:56	3	
call	62:8	62:55	4	date_Init
arg	62:19	62:35	5	&p_sys->end_date
op	62:19	0:0	6	&
water	62:20	0:0	6	p_sys
op	62:25	0:0	6	->
water	62:27	0:0	6	end_date
arg	62:37	62:51	5	25
water	62:37	0:0	6	25
arg	62:53	62:55	5	1
water	62:53	0:0	6	1
water	62:56	0:0	4	;
return	63:4	63:22	2	VLC_SUCCESS
water	63:11	0:0	3	VLC_SUCCESS
label	64:1	64:6	2	error :
if	65:4	65:55	2	(p_dmo)
cond	65:8	65:8	3	p_dmo
water	65:8	0:0	4	p_dmo
stmts	65:16	65:55	3	
call	65:16	65:54	4	p_dmo->vt->Release
arg	65:36	65:54	5	(IUnknown*)p_dmo
water	65:36	0:0	6	(
water	65:37	0:0	6	IUnknown
op	65:46	0:0	6	*
water	65:47	0:0	6	)
water	65:48	0:0	6	p_dmo
water	65:55	0:0	4	;
if	66:4	66:46	2	(hmsdmo_dll)
cond	66:8	66:8	3	hmsdmo_dll
water	66:8	0:0	4	hmsdmo_dll
stmts	66:21	66:46	3	
call	66:21	66:45	4	FreeLibrary
arg	66:34	66:45	5	hmsdmo_dll
water	66:34	0:0	6	hmsdmo_dll
water	66:46	0:0	4	;
call	68:4	68:19	2	CoUninitialize
water	68:20	0:0	2	;
call	69:4	69:16	2	free
arg	69:10	69:16	3	p_sys
water	69:10	0:0	4	p_sys
water	69:17	0:0	2	;
return	70:4	70:23	2	VLC_EGENERIC
water	70:11	0:0	3	VLC_EGENERIC

func	2:0	121:0	0	static void	decode_region_composition
params	2:37	0:0	1	
param	2:39	2:55	2	decoder_t *	p_dec
param	2:57	2:65	2	bs_t *	s
stmnts	0:0	120:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:62	2	dvbsub_region_t	*p_region
water	5:29	0:0	2	,
decl	5:4	5:62	2	dvbsub_region_t	**pp_region
op	5:43	0:0	2	=
op	5:45	0:0	2	&
water	5:46	0:0	2	p_sys
op	5:51	0:0	2	->
water	5:53	0:0	2	p_regions
decl	6:4	6:61	2	int	i_segment_length
water	6:24	0:0	2	,
decl	6:4	6:61	2	int	i_processed_length
water	6:44	0:0	2	,
decl	6:4	6:61	2	int	i_id
water	6:50	0:0	2	,
decl	6:4	6:61	2	int	i_version
decl	7:4	7:56	2	int	i_width
water	7:15	0:0	2	,
decl	7:4	7:56	2	int	i_height
water	7:25	0:0	2	,
decl	7:4	7:56	2	int	i_level_comp
water	7:39	0:0	2	,
decl	7:4	7:56	2	int	i_depth
water	7:48	0:0	2	,
decl	7:4	7:56	2	int	i_clut
decl	8:4	8:30	2	int	i_8_bg
water	8:14	0:0	2	,
decl	8:4	8:30	2	int	i_4_bg
water	8:22	0:0	2	,
decl	8:4	8:30	2	int	i_2_bg
decl	9:4	9:15	2	bool	b_fill
water	10:4	0:0	2	i_segment_length
op	10:21	0:0	2	=
call	10:23	10:38	2	bs_read
arg	10:32	10:33	3	s
water	10:32	0:0	4	s
arg	10:35	10:38	3	16
water	10:35	0:0	4	16
water	10:39	0:0	2	;
water	11:4	0:0	2	i_id
op	11:9	0:0	2	=
call	11:11	11:25	2	bs_read
arg	11:20	11:21	3	s
water	11:20	0:0	4	s
arg	11:23	11:25	3	8
water	11:23	0:0	4	8
water	11:26	0:0	2	;
water	12:4	0:0	2	i_version
op	12:14	0:0	2	=
call	12:16	12:30	2	bs_read
arg	12:25	12:26	3	s
water	12:25	0:0	4	s
arg	12:28	12:30	3	4
water	12:28	0:0	4	4
water	12:31	0:0	2	;
for	14:4	19:4	2	(p_region = p_sys -> p_regions ;p_region != NULL;p_region = p_region -> p_next)
forinit	14:9	14:36	3	p_region = p_sys -> p_regions ;
water	14:9	0:0	4	p_region
op	14:18	0:0	4	=
water	14:20	0:0	4	p_sys
op	14:25	0:0	4	->
water	14:27	0:0	4	p_regions
water	14:36	0:0	4	;
cond	14:38	14:50	3	p_region != NULL
water	14:38	0:0	4	p_region
op	14:47	0:0	4	!=
water	14:50	0:0	4	NULL
forexpr	15:9	15:30	3	p_region = p_region -> p_next
water	15:9	0:0	4	p_region
op	15:18	0:0	4	=
water	15:20	0:0	4	p_region
op	15:28	0:0	4	->
water	15:30	0:0	4	p_next
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	pp_region
op	17:18	0:0	4	=
op	17:20	0:0	4	&
water	17:21	0:0	4	p_region
op	17:29	0:0	4	->
water	17:31	0:0	4	p_next
water	17:37	0:0	4	;
if	18:8	18:42	4	(p_region -> i_id == i_id)
cond	18:12	18:30	5	p_region -> i_id == i_id
water	18:12	0:0	6	p_region
op	18:20	0:0	6	->
water	18:22	0:0	6	i_id
op	18:27	0:0	6	==
water	18:30	0:0	6	i_id
stmts	18:37	18:42	5	
break	18:37	18:42	6	
water	19:4	0:0	4	}
if	21:4	25:4	2	(p_region && ( p_region -> i_version == i_version ))
cond	21:8	21:55	3	p_region && ( p_region -> i_version == i_version )
water	21:8	0:0	4	p_region
op	21:17	0:0	4	&&
water	21:20	0:0	4	(
water	21:22	0:0	4	p_region
op	21:30	0:0	4	->
water	21:32	0:0	4	i_version
op	21:42	0:0	4	==
water	21:45	0:0	4	i_version
water	21:55	0:0	4	)
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:51	4	bs_skip
arg	23:17	23:18	5	s
water	23:17	0:0	6	s
arg	23:20	23:51	5	8*(i_segment_length-1)-4
water	23:20	0:0	6	8
op	23:22	0:0	6	*
water	23:24	0:0	6	(
water	23:25	0:0	6	i_segment_length
op	23:42	0:0	6	-
water	23:44	0:0	6	1
water	23:45	0:0	6	)
op	23:47	0:0	6	-
water	23:49	0:0	6	4
water	23:52	0:0	4	;
return	24:8	24:14	4	
water	25:4	0:0	4	}
if	26:4	37:4	2	(! p_region)
cond	26:8	26:9	3	! p_region
op	26:8	0:0	4	!
water	26:9	0:0	4	p_region
stmts	27:4	37:4	3	
water	27:4	0:0	4	{
call	29:8	29:47	4	msg_Dbg
arg	29:17	29:22	5	p_dec
water	29:17	0:0	6	p_dec
arg	29:24	29:40	5	"new region: %i"
water	29:24	0:0	6	"new region: %i"
arg	29:42	29:47	5	i_id
water	29:42	0:0	6	i_id
water	29:48	0:0	4	;
water	31:8	0:0	4	p_region
op	31:17	0:0	4	=
op	31:19	0:0	4	*
water	31:20	0:0	4	pp_region
op	31:30	0:0	4	=
call	31:32	31:67	4	calloc
arg	31:40	31:41	5	1
water	31:40	0:0	6	1
arg	31:43	31:67	5	sizeof(dvbsub_region_t)
op	31:43	0:0	6	sizeof
water	31:49	0:0	6	(
water	31:50	0:0	6	dvbsub_region_t
water	31:65	0:0	6	)
water	31:68	0:0	4	;
if	32:8	33:18	4	(! p_region)
cond	32:12	32:13	5	! p_region
op	32:12	0:0	6	!
water	32:13	0:0	6	p_region
stmts	33:12	33:18	5	
return	33:12	33:18	6	
water	34:8	0:0	4	p_region
op	34:16	0:0	4	->
water	34:18	0:0	4	p_object_defs
op	34:32	0:0	4	=
water	34:34	0:0	4	NULL
water	34:38	0:0	4	;
water	35:8	0:0	4	p_region
op	35:16	0:0	4	->
water	35:18	0:0	4	p_pixbuf
op	35:27	0:0	4	=
water	35:29	0:0	4	NULL
water	35:33	0:0	4	;
water	36:8	0:0	4	p_region
op	36:16	0:0	4	->
water	36:18	0:0	4	p_next
op	36:25	0:0	4	=
water	36:27	0:0	4	NULL
water	36:31	0:0	4	;
water	37:4	0:0	4	}
water	39:4	0:0	2	p_region
op	39:12	0:0	2	->
water	39:14	0:0	2	i_id
op	39:19	0:0	2	=
water	39:21	0:0	2	i_id
water	39:25	0:0	2	;
water	40:4	0:0	2	p_region
op	40:12	0:0	2	->
water	40:14	0:0	2	i_version
op	40:24	0:0	2	=
water	40:26	0:0	2	i_version
water	40:35	0:0	2	;
water	41:4	0:0	2	b_fill
op	41:11	0:0	2	=
call	41:13	41:27	2	bs_read
arg	41:22	41:23	3	s
water	41:22	0:0	4	s
arg	41:25	41:27	3	1
water	41:25	0:0	4	1
water	41:28	0:0	2	;
call	42:4	42:18	2	bs_skip
arg	42:13	42:14	3	s
water	42:13	0:0	4	s
arg	42:16	42:18	3	3
water	42:16	0:0	4	3
water	42:19	0:0	2	;
water	43:4	0:0	2	i_width
op	43:12	0:0	2	=
call	43:14	43:29	2	bs_read
arg	43:23	43:24	3	s
water	43:23	0:0	4	s
arg	43:26	43:29	3	16
water	43:26	0:0	4	16
water	43:30	0:0	2	;
water	44:4	0:0	2	i_height
op	44:13	0:0	2	=
call	44:15	44:30	2	bs_read
arg	44:24	44:25	3	s
water	44:24	0:0	4	s
arg	44:27	44:30	3	16
water	44:27	0:0	4	16
water	44:31	0:0	2	;
call	46:4	46:61	2	msg_Dbg
arg	46:13	46:18	3	p_dec
water	46:13	0:0	4	p_dec
arg	46:20	46:41	3	" width=%d height=%d"
water	46:20	0:0	4	" width=%d height=%d"
arg	46:43	46:50	3	i_width
water	46:43	0:0	4	i_width
arg	46:52	46:61	3	i_height
water	46:52	0:0	4	i_height
water	46:62	0:0	2	;
water	48:4	0:0	2	i_level_comp
op	48:17	0:0	2	=
call	48:19	48:33	2	bs_read
arg	48:28	48:29	3	s
water	48:28	0:0	4	s
arg	48:31	48:33	3	3
water	48:31	0:0	4	3
water	48:34	0:0	2	;
water	49:4	0:0	2	i_depth
op	49:12	0:0	2	=
call	49:14	49:28	2	bs_read
arg	49:23	49:24	3	s
water	49:23	0:0	4	s
arg	49:26	49:28	3	3
water	49:26	0:0	4	3
water	49:29	0:0	2	;
call	50:4	50:18	2	bs_skip
arg	50:13	50:14	3	s
water	50:13	0:0	4	s
arg	50:16	50:18	3	2
water	50:16	0:0	4	2
water	50:19	0:0	2	;
water	51:4	0:0	2	i_clut
op	51:11	0:0	2	=
call	51:13	51:27	2	bs_read
arg	51:22	51:23	3	s
water	51:22	0:0	4	s
arg	51:25	51:27	3	8
water	51:25	0:0	4	8
water	51:28	0:0	2	;
water	52:4	0:0	2	i_8_bg
op	52:11	0:0	2	=
call	52:13	52:27	2	bs_read
arg	52:22	52:23	3	s
water	52:22	0:0	4	s
arg	52:25	52:27	3	8
water	52:25	0:0	4	8
water	52:28	0:0	2	;
water	53:4	0:0	2	i_4_bg
op	53:11	0:0	2	=
call	53:13	53:27	2	bs_read
arg	53:22	53:23	3	s
water	53:22	0:0	4	s
arg	53:25	53:27	3	4
water	53:25	0:0	4	4
water	53:28	0:0	2	;
water	54:4	0:0	2	i_2_bg
op	54:11	0:0	2	=
call	54:13	54:27	2	bs_read
arg	54:22	54:23	3	s
water	54:22	0:0	4	s
arg	54:25	54:27	3	2
water	54:25	0:0	4	2
water	54:28	0:0	2	;
call	55:4	55:18	2	bs_skip
arg	55:13	55:14	3	s
water	55:13	0:0	4	s
arg	55:16	55:18	3	2
water	55:16	0:0	4	2
water	55:19	0:0	2	;
while	57:4	58:75	2	(p_region -> i_object_defs)
cond	57:11	57:21	3	p_region -> i_object_defs
water	57:11	0:0	4	p_region
op	57:19	0:0	4	->
water	57:21	0:0	4	i_object_defs
stmts	58:8	58:75	3	
call	58:8	58:74	4	free
arg	58:14	58:74	5	p_region->p_object_defs[--p_region->i_object_defs].psz_text
water	58:14	0:0	6	p_region
op	58:22	0:0	6	->
water	58:24	0:0	6	p_object_defs
op	58:37	0:0	6	[
op	58:38	0:0	6	--
water	58:40	0:0	6	p_region
op	58:48	0:0	6	->
water	58:50	0:0	6	i_object_defs
op	58:63	0:0	6	]
op	58:64	0:0	6	.
water	58:65	0:0	6	psz_text
water	58:75	0:0	4	;
call	59:4	59:34	2	free
arg	59:10	59:34	3	p_region->p_object_defs
water	59:10	0:0	4	p_region
op	59:18	0:0	4	->
water	59:20	0:0	4	p_object_defs
water	59:35	0:0	2	;
water	60:4	0:0	2	p_region
op	60:12	0:0	2	->
water	60:14	0:0	2	p_object_defs
op	60:28	0:0	2	=
water	60:30	0:0	2	NULL
water	60:34	0:0	2	;
if	62:4	74:4	2	(( p_region -> i_width != i_width ) || ( p_region -> i_height != i_height ))
cond	62:8	63:41	3	( p_region -> i_width != i_width ) || ( p_region -> i_height != i_height )
water	62:8	0:0	4	(
water	62:10	0:0	4	p_region
op	62:18	0:0	4	->
water	62:20	0:0	4	i_width
op	62:28	0:0	4	!=
water	62:31	0:0	4	i_width
water	62:39	0:0	4	)
op	62:41	0:0	4	||
water	63:8	0:0	4	(
water	63:10	0:0	4	p_region
op	63:18	0:0	4	->
water	63:20	0:0	4	i_height
op	63:29	0:0	4	!=
water	63:32	0:0	4	i_height
water	63:41	0:0	4	)
stmts	64:4	74:4	3	
water	64:4	0:0	4	{
if	65:8	70:8	4	(p_region -> p_pixbuf)
cond	65:12	65:22	5	p_region -> p_pixbuf
water	65:12	0:0	6	p_region
op	65:20	0:0	6	->
water	65:22	0:0	6	p_pixbuf
stmts	66:8	70:8	5	
water	66:8	0:0	6	{
call	67:12	68:78	6	msg_Dbg
arg	67:21	67:26	7	p_dec
water	67:21	0:0	8	p_dec
arg	67:28	67:64	7	"region size changed (%dx%d->%dx%d)"
water	67:28	0:0	8	"region size changed (%dx%d->%dx%d)"
arg	68:21	68:38	7	p_region->i_width
water	68:21	0:0	8	p_region
op	68:29	0:0	8	->
water	68:31	0:0	8	i_width
arg	68:40	68:58	7	p_region->i_height
water	68:40	0:0	8	p_region
op	68:48	0:0	8	->
water	68:50	0:0	8	i_height
arg	68:60	68:67	7	i_width
water	68:60	0:0	8	i_width
arg	68:69	68:78	7	i_height
water	68:69	0:0	8	i_height
water	68:79	0:0	6	;
call	69:12	69:37	6	free
arg	69:18	69:37	7	p_region->p_pixbuf
water	69:18	0:0	8	p_region
op	69:26	0:0	8	->
water	69:28	0:0	8	p_pixbuf
water	69:38	0:0	6	;
water	70:8	0:0	6	}
water	71:8	0:0	4	p_region
op	71:16	0:0	4	->
water	71:18	0:0	4	p_pixbuf
op	71:27	0:0	4	=
call	71:29	71:57	4	xmalloc
arg	71:38	71:57	5	i_height*i_width
water	71:38	0:0	6	i_height
op	71:47	0:0	6	*
water	71:49	0:0	6	i_width
water	71:58	0:0	4	;
water	72:8	0:0	4	p_region
op	72:16	0:0	4	->
water	72:18	0:0	4	i_depth
op	72:26	0:0	4	=
water	72:28	0:0	4	0
water	72:29	0:0	4	;
water	73:8	0:0	4	b_fill
op	73:15	0:0	4	=
water	73:17	0:0	4	true
water	73:21	0:0	4	;
water	74:4	0:0	4	}
if	75:4	81:4	2	(p_region -> i_depth && ( ( p_region -> i_depth != i_depth ) || ( p_region -> i_level_comp != i_level_comp ) || ( p_region -> i_clut != i_clut ) ))
cond	75:8	78:40	3	p_region -> i_depth && ( ( p_region -> i_depth != i_depth ) || ( p_region -> i_level_comp != i_level_comp ) || ( p_region -> i_clut != i_clut ) )
water	75:8	0:0	4	p_region
op	75:16	0:0	4	->
water	75:18	0:0	4	i_depth
op	75:26	0:0	4	&&
water	76:8	0:0	4	(
water	76:10	0:0	4	(
water	76:12	0:0	4	p_region
op	76:20	0:0	4	->
water	76:22	0:0	4	i_depth
op	76:30	0:0	4	!=
water	76:33	0:0	4	i_depth
water	76:41	0:0	4	)
op	76:43	0:0	4	||
water	77:10	0:0	4	(
water	77:12	0:0	4	p_region
op	77:20	0:0	4	->
water	77:22	0:0	4	i_level_comp
op	77:35	0:0	4	!=
water	77:38	0:0	4	i_level_comp
water	77:51	0:0	4	)
op	77:53	0:0	4	||
water	78:10	0:0	4	(
water	78:12	0:0	4	p_region
op	78:20	0:0	4	->
water	78:22	0:0	4	i_clut
op	78:29	0:0	4	!=
water	78:32	0:0	4	i_clut
water	78:38	0:0	4	)
water	78:40	0:0	4	)
stmts	79:4	81:4	3	
water	79:4	0:0	4	{
call	80:8	80:66	4	msg_Dbg
arg	80:17	80:22	5	p_dec
water	80:17	0:0	6	p_dec
arg	80:24	80:66	5	"region parameters changed (not allowed)"
water	80:24	0:0	6	"region parameters changed (not allowed)"
water	80:67	0:0	4	;
water	81:4	0:0	4	}
if	83:4	88:4	2	(b_fill)
cond	83:8	83:8	3	b_fill
water	83:8	0:0	4	b_fill
stmts	84:4	88:4	3	
water	84:4	0:0	4	{
decl	85:8	86:60	4	int	i_background
op	85:25	0:0	4	=
water	85:27	0:0	4	(
water	85:29	0:0	4	p_region
op	85:37	0:0	4	->
water	85:39	0:0	4	i_depth
op	85:47	0:0	4	==
water	85:50	0:0	4	1
water	85:52	0:0	4	)
water	85:54	0:0	4	?
water	85:56	0:0	4	i_2_bg
water	85:63	0:0	4	:
water	86:12	0:0	4	(
water	86:14	0:0	4	(
water	86:16	0:0	4	p_region
op	86:24	0:0	4	->
water	86:26	0:0	4	i_depth
op	86:34	0:0	4	==
water	86:37	0:0	4	2
water	86:39	0:0	4	)
water	86:41	0:0	4	?
water	86:43	0:0	4	i_4_bg
water	86:50	0:0	4	:
water	86:52	0:0	4	i_8_bg
water	86:59	0:0	4	)
call	87:8	87:69	4	memset
arg	87:16	87:34	5	p_region->p_pixbuf
water	87:16	0:0	6	p_region
op	87:24	0:0	6	->
water	87:26	0:0	6	p_pixbuf
arg	87:36	87:48	5	i_background
water	87:36	0:0	6	i_background
arg	87:50	87:69	5	i_width*i_height
water	87:50	0:0	6	i_width
op	87:58	0:0	6	*
water	87:60	0:0	6	i_height
water	87:70	0:0	4	;
water	88:4	0:0	4	}
water	89:4	0:0	2	p_region
op	89:12	0:0	2	->
water	89:14	0:0	2	i_width
op	89:22	0:0	2	=
water	89:24	0:0	2	i_width
water	89:31	0:0	2	;
water	90:4	0:0	2	p_region
op	90:12	0:0	2	->
water	90:14	0:0	2	i_height
op	90:23	0:0	2	=
water	90:25	0:0	2	i_height
water	90:33	0:0	2	;
water	91:4	0:0	2	p_region
op	91:12	0:0	2	->
water	91:14	0:0	2	i_level_comp
op	91:27	0:0	2	=
water	91:29	0:0	2	i_level_comp
water	91:41	0:0	2	;
water	92:4	0:0	2	p_region
op	92:12	0:0	2	->
water	92:14	0:0	2	i_depth
op	92:22	0:0	2	=
water	92:24	0:0	2	i_depth
water	92:31	0:0	2	;
water	93:4	0:0	2	p_region
op	93:12	0:0	2	->
water	93:14	0:0	2	i_clut
op	93:21	0:0	2	=
water	93:23	0:0	2	i_clut
water	93:29	0:0	2	;
water	95:4	0:0	2	i_processed_length
op	95:23	0:0	2	=
water	95:25	0:0	2	10
water	95:27	0:0	2	;
while	96:4	120:4	2	(i_processed_length < i_segment_length)
cond	96:11	96:32	3	i_processed_length < i_segment_length
water	96:11	0:0	4	i_processed_length
op	96:30	0:0	4	<
water	96:32	0:0	4	i_segment_length
stmts	97:4	120:4	3	
water	97:4	0:0	4	{
decl	98:8	98:33	4	dvbsub_objectdef_t	*p_obj
water	100:8	0:0	4	p_region
op	100:16	0:0	4	->
water	100:18	0:0	4	i_object_defs
op	100:31	0:0	4	++
water	100:33	0:0	4	;
water	101:8	0:0	4	p_region
op	101:16	0:0	4	->
water	101:18	0:0	4	p_object_defs
op	101:32	0:0	4	=
call	101:34	102:74	4	xrealloc
arg	101:44	101:67	5	p_region->p_object_defs
water	101:44	0:0	6	p_region
op	101:52	0:0	6	->
water	101:54	0:0	6	p_object_defs
arg	102:21	102:74	5	sizeof(dvbsub_objectdef_t)*p_region->i_object_defs
op	102:21	0:0	6	sizeof
water	102:27	0:0	6	(
water	102:28	0:0	6	dvbsub_objectdef_t
water	102:46	0:0	6	)
op	102:48	0:0	6	*
water	102:50	0:0	6	p_region
op	102:58	0:0	6	->
water	102:60	0:0	6	i_object_defs
water	102:75	0:0	4	;
water	104:8	0:0	4	p_obj
op	104:14	0:0	4	=
op	104:16	0:0	4	&
water	104:17	0:0	4	p_region
op	104:25	0:0	4	->
water	104:27	0:0	4	p_object_defs
op	104:40	0:0	4	[
water	104:41	0:0	4	p_region
op	104:49	0:0	4	->
water	104:51	0:0	4	i_object_defs
op	104:65	0:0	4	-
water	104:67	0:0	4	1
op	104:68	0:0	4	]
water	104:69	0:0	4	;
water	105:8	0:0	4	p_obj
op	105:13	0:0	4	->
water	105:15	0:0	4	i_id
op	105:28	0:0	4	=
call	105:30	105:45	4	bs_read
arg	105:39	105:40	5	s
water	105:39	0:0	6	s
arg	105:42	105:45	5	16
water	105:42	0:0	6	16
water	105:46	0:0	4	;
water	106:8	0:0	4	p_obj
op	106:13	0:0	4	->
water	106:15	0:0	4	i_type
op	106:28	0:0	4	=
call	106:30	106:44	4	bs_read
arg	106:39	106:40	5	s
water	106:39	0:0	6	s
arg	106:42	106:44	5	2
water	106:42	0:0	6	2
water	106:45	0:0	4	;
call	107:8	107:22	4	bs_skip
arg	107:17	107:18	5	s
water	107:17	0:0	6	s
arg	107:20	107:22	5	2
water	107:20	0:0	6	2
water	107:23	0:0	4	;
water	108:8	0:0	4	p_obj
op	108:13	0:0	4	->
water	108:15	0:0	4	i_x
op	108:28	0:0	4	=
call	108:30	108:45	4	bs_read
arg	108:39	108:40	5	s
water	108:39	0:0	6	s
arg	108:42	108:45	5	12
water	108:42	0:0	6	12
water	108:46	0:0	4	;
call	109:8	109:22	4	bs_skip
arg	109:17	109:18	5	s
water	109:17	0:0	6	s
arg	109:20	109:22	5	4
water	109:20	0:0	6	4
water	109:23	0:0	4	;
water	110:8	0:0	4	p_obj
op	110:13	0:0	4	->
water	110:15	0:0	4	i_y
op	110:28	0:0	4	=
call	110:30	110:45	4	bs_read
arg	110:39	110:40	5	s
water	110:39	0:0	6	s
arg	110:42	110:45	5	12
water	110:42	0:0	6	12
water	110:46	0:0	4	;
water	111:8	0:0	4	p_obj
op	111:13	0:0	4	->
water	111:15	0:0	4	psz_text
op	111:28	0:0	4	=
water	111:30	0:0	4	NULL
water	111:34	0:0	4	;
water	112:8	0:0	4	i_processed_length
op	112:27	0:0	4	+=
water	112:30	0:0	4	6
water	112:31	0:0	4	;
if	113:8	119:8	4	(( p_obj -> i_type == DVBSUB_OT_BASIC_CHAR ) || ( p_obj -> i_type == DVBSUB_OT_COMPOSITE_STRING ))
cond	113:12	114:58	5	( p_obj -> i_type == DVBSUB_OT_BASIC_CHAR ) || ( p_obj -> i_type == DVBSUB_OT_COMPOSITE_STRING )
water	113:12	0:0	6	(
water	113:14	0:0	6	p_obj
op	113:19	0:0	6	->
water	113:21	0:0	6	i_type
op	113:28	0:0	6	==
water	113:31	0:0	6	DVBSUB_OT_BASIC_CHAR
water	113:52	0:0	6	)
op	113:54	0:0	6	||
water	114:12	0:0	6	(
water	114:14	0:0	6	p_obj
op	114:19	0:0	6	->
water	114:21	0:0	6	i_type
op	114:28	0:0	6	==
water	114:31	0:0	6	DVBSUB_OT_COMPOSITE_STRING
water	114:58	0:0	6	)
stmts	115:8	119:8	5	
water	115:8	0:0	6	{
water	116:12	0:0	6	p_obj
op	116:17	0:0	6	->
water	116:19	0:0	6	i_fg_pc
op	116:27	0:0	6	=
call	116:30	116:44	6	bs_read
arg	116:39	116:40	7	s
water	116:39	0:0	8	s
arg	116:42	116:44	7	8
water	116:42	0:0	8	8
water	116:45	0:0	6	;
water	117:12	0:0	6	p_obj
op	117:17	0:0	6	->
water	117:19	0:0	6	i_bg_pc
op	117:27	0:0	6	=
call	117:30	117:44	6	bs_read
arg	117:39	117:40	7	s
water	117:39	0:0	8	s
arg	117:42	117:44	7	8
water	117:42	0:0	8	8
water	117:45	0:0	6	;
water	118:12	0:0	6	i_processed_length
op	118:31	0:0	6	+=
water	118:34	0:0	6	2
water	118:35	0:0	6	;
water	119:8	0:0	6	}
water	120:4	0:0	4	}

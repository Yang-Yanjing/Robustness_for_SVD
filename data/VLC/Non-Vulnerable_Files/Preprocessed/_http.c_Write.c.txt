func	2:0	94:0	0	static ssize_t	Write
params	2:20	0:0	1	
param	2:22	2:49	2	sout_access_out_t *	p_access
param	2:51	2:69	2	block_t *	p_buffer
stmnts	0:0	93:46	1	
decl	4:4	4:50	2	sout_access_out_sys_t	*p_sys
op	4:33	0:0	2	=
water	4:35	0:0	2	p_access
op	4:43	0:0	2	->
water	4:45	0:0	2	p_sys
decl	5:4	5:17	2	int	i_err
op	5:14	0:0	2	=
water	5:16	0:0	2	0
decl	6:4	6:17	2	int	i_len
op	6:14	0:0	2	=
water	6:16	0:0	2	0
while	7:4	88:4	2	(p_buffer)
cond	7:11	7:11	3	p_buffer
water	7:11	0:0	4	p_buffer
stmts	8:4	88:4	3	
water	8:4	0:0	4	{
decl	9:8	9:23	4	block_t	*p_next
if	10:8	31:8	4	(p_buffer -> i_flags & BLOCK_FLAG_HEADER)
cond	10:12	10:32	5	p_buffer -> i_flags & BLOCK_FLAG_HEADER
water	10:12	0:0	6	p_buffer
op	10:20	0:0	6	->
water	10:22	0:0	6	i_flags
op	10:30	0:0	6	&
water	10:32	0:0	6	BLOCK_FLAG_HEADER
stmts	11:8	31:8	5	
water	11:8	0:0	6	{
if	13:12	18:12	6	(p_sys -> b_header_complete)
cond	13:16	13:23	7	p_sys -> b_header_complete
water	13:16	0:0	8	p_sys
op	13:21	0:0	8	->
water	13:23	0:0	8	b_header_complete
stmts	14:12	18:12	7	
water	14:12	0:0	8	{
water	16:16	0:0	8	p_sys
op	16:21	0:0	8	->
water	16:23	0:0	8	i_header_size
op	16:37	0:0	8	=
water	16:39	0:0	8	0
water	16:40	0:0	8	;
water	17:16	0:0	8	p_sys
op	17:21	0:0	8	->
water	17:23	0:0	8	b_header_complete
op	17:41	0:0	8	=
water	17:43	0:0	8	false
water	17:48	0:0	8	;
water	18:12	0:0	8	}
if	19:12	26:12	6	(( int ) (p_buffer -> i_buffer + p_sys -> i_header_size ) > p_sys -> i_header_allocated)
cond	19:16	20:23	7	( int ) (p_buffer -> i_buffer + p_sys -> i_header_size ) > p_sys -> i_header_allocated
call	19:16	19:63	8	(int)
arg	19:22	19:63	9	p_buffer->i_buffer+p_sys->i_header_size
water	19:22	0:0	10	p_buffer
op	19:30	0:0	10	->
water	19:32	0:0	10	i_buffer
op	19:41	0:0	10	+
water	19:43	0:0	10	p_sys
op	19:48	0:0	10	->
water	19:50	0:0	10	i_header_size
op	19:65	0:0	8	>
water	20:16	0:0	8	p_sys
op	20:21	0:0	8	->
water	20:23	0:0	8	i_header_allocated
stmts	21:12	26:12	7	
water	21:12	0:0	8	{
water	22:16	0:0	8	p_sys
op	22:21	0:0	8	->
water	22:23	0:0	8	i_header_allocated
op	22:42	0:0	8	=
water	23:20	0:0	8	p_buffer
op	23:28	0:0	8	->
water	23:30	0:0	8	i_buffer
op	23:39	0:0	8	+
water	23:41	0:0	8	p_sys
op	23:46	0:0	8	->
water	23:48	0:0	8	i_header_size
op	23:62	0:0	8	+
water	23:64	0:0	8	1024
water	23:68	0:0	8	;
water	24:16	0:0	8	p_sys
op	24:21	0:0	8	->
water	24:23	0:0	8	p_header
op	24:32	0:0	8	=
call	24:34	25:76	8	xrealloc
arg	24:44	24:59	9	p_sys->p_header
water	24:44	0:0	10	p_sys
op	24:49	0:0	10	->
water	24:51	0:0	10	p_header
arg	25:50	25:76	9	p_sys->i_header_allocated
water	25:50	0:0	10	p_sys
op	25:55	0:0	10	->
water	25:57	0:0	10	i_header_allocated
water	25:77	0:0	8	;
water	26:12	0:0	8	}
call	27:12	29:39	6	memcpy
arg	27:20	27:58	7	&p_sys->p_header[p_sys->i_header_size]
op	27:20	0:0	8	&
water	27:21	0:0	8	p_sys
op	27:26	0:0	8	->
water	27:28	0:0	8	p_header
op	27:36	0:0	8	[
water	27:37	0:0	8	p_sys
op	27:42	0:0	8	->
water	27:44	0:0	8	i_header_size
op	27:57	0:0	8	]
arg	28:20	28:38	7	p_buffer->p_buffer
water	28:20	0:0	8	p_buffer
op	28:28	0:0	8	->
water	28:30	0:0	8	p_buffer
arg	29:20	29:39	7	p_buffer->i_buffer
water	29:20	0:0	8	p_buffer
op	29:28	0:0	8	->
water	29:30	0:0	8	i_buffer
water	29:40	0:0	6	;
water	30:12	0:0	6	p_sys
op	30:17	0:0	6	->
water	30:19	0:0	6	i_header_size
op	30:33	0:0	6	+=
water	30:36	0:0	6	p_buffer
op	30:44	0:0	6	->
water	30:46	0:0	6	i_buffer
water	30:54	0:0	6	;
water	31:8	0:0	6	}
else	32:8	54:8	4
stmts	32:13	54:8	5	
if	32:13	54:8	6	(! p_sys -> b_header_complete)
cond	32:17	32:25	7	! p_sys -> b_header_complete
op	32:17	0:0	8	!
water	32:18	0:0	8	p_sys
op	32:23	0:0	8	->
water	32:25	0:0	8	b_header_complete
stmts	33:8	54:8	7	
water	33:8	0:0	8	{
water	34:12	0:0	8	p_sys
op	34:17	0:0	8	->
water	34:19	0:0	8	b_header_complete
op	34:37	0:0	8	=
water	34:39	0:0	8	true
water	34:43	0:0	8	;
if	35:12	48:12	8	(p_sys -> b_metacube)
cond	35:17	35:24	9	p_sys -> b_metacube
water	35:17	0:0	10	p_sys
op	35:22	0:0	10	->
water	35:24	0:0	10	b_metacube
stmts	36:12	48:12	9	
water	36:12	0:0	10	{
decl	37:16	37:49	10	struct metacube2_block_header	hdr
call	38:16	38:75	10	memcpy
arg	38:24	38:32	11	hdr.sync
water	38:24	0:0	12	hdr
op	38:27	0:0	12	.
water	38:28	0:0	12	sync
arg	38:34	38:48	11	METACUBE2_SYNC
water	38:34	0:0	12	METACUBE2_SYNC
arg	38:50	38:75	11	sizeof(METACUBE2_SYNC)
op	38:50	0:0	12	sizeof
water	38:56	0:0	12	(
water	38:58	0:0	12	METACUBE2_SYNC
water	38:73	0:0	12	)
water	38:76	0:0	10	;
water	39:16	0:0	10	hdr
op	39:19	0:0	10	.
water	39:20	0:0	10	size
op	39:25	0:0	10	=
call	39:27	39:56	10	hton32
arg	39:35	39:56	11	p_sys->i_header_size
water	39:35	0:0	12	p_sys
op	39:40	0:0	12	->
water	39:42	0:0	12	i_header_size
water	39:57	0:0	10	;
water	40:16	0:0	10	hdr
op	40:19	0:0	10	.
water	40:20	0:0	10	flags
op	40:26	0:0	10	=
call	40:28	40:58	10	hton16
arg	40:36	40:58	11	METACUBE_FLAGS_HEADER
water	40:36	0:0	12	METACUBE_FLAGS_HEADER
water	40:59	0:0	10	;
water	41:16	0:0	10	hdr
op	41:19	0:0	10	.
water	41:20	0:0	10	csum
op	41:25	0:0	10	=
call	41:27	41:65	10	hton16
arg	41:35	41:65	11	metacube2_compute_crc(&hdr)
call	41:35	41:63	12	metacube2_compute_crc
arg	41:58	41:63	13	&hdr
op	41:58	0:0	14	&
water	41:59	0:0	14	hdr
water	41:66	0:0	10	;
decl	42:16	42:72	10	int	i_header_size
op	42:34	0:0	10	=
water	42:36	0:0	10	p_sys
op	42:41	0:0	10	->
water	42:43	0:0	10	i_header_size
op	42:57	0:0	10	+
op	42:59	0:0	10	sizeof
water	42:65	0:0	10	(
water	42:67	0:0	10	hdr
water	42:71	0:0	10	)
decl	43:16	43:63	10	uint8_t	*p_hdr_block
op	43:37	0:0	10	=
call	43:39	43:62	11	xmalloc
arg	43:48	43:62	12	i_header_size
water	43:48	0:0	13	i_header_size
call	44:16	44:57	10	memcpy
arg	44:24	44:35	11	p_hdr_block
water	44:24	0:0	12	p_hdr_block
arg	44:37	44:41	11	&hdr
op	44:37	0:0	12	&
water	44:38	0:0	12	hdr
arg	44:43	44:57	11	sizeof(hdr)
op	44:43	0:0	12	sizeof
water	44:49	0:0	12	(
water	44:51	0:0	12	hdr
water	44:55	0:0	12	)
water	44:58	0:0	10	;
call	45:16	45:91	10	memcpy
arg	45:24	45:51	11	p_hdr_block+sizeof(hdr)
water	45:24	0:0	12	p_hdr_block
op	45:36	0:0	12	+
op	45:38	0:0	12	sizeof
water	45:44	0:0	12	(
water	45:46	0:0	12	hdr
water	45:50	0:0	12	)
arg	45:53	45:68	11	p_sys->p_header
water	45:53	0:0	12	p_sys
op	45:58	0:0	12	->
water	45:60	0:0	12	p_header
arg	45:70	45:91	11	p_sys->i_header_size
water	45:70	0:0	12	p_sys
op	45:75	0:0	12	->
water	45:77	0:0	12	i_header_size
water	45:92	0:0	10	;
call	46:16	46:86	10	httpd_StreamHeader
arg	46:36	46:57	11	p_sys->p_httpd_stream
water	46:36	0:0	12	p_sys
op	46:41	0:0	12	->
water	46:43	0:0	12	p_httpd_stream
arg	46:59	46:70	11	p_hdr_block
water	46:59	0:0	12	p_hdr_block
arg	46:72	46:86	11	i_header_size
water	46:72	0:0	12	i_header_size
water	46:87	0:0	10	;
call	47:16	47:34	10	free
arg	47:22	47:34	11	p_hdr_block
water	47:22	0:0	12	p_hdr_block
water	47:35	0:0	10	;
water	48:12	0:0	10	}
else	49:12	53:12	8
stmts	50:12	53:12	9	
water	50:12	0:0	10	{
call	51:16	52:57	10	httpd_StreamHeader
arg	51:36	51:57	11	p_sys->p_httpd_stream
water	51:36	0:0	12	p_sys
op	51:41	0:0	12	->
water	51:43	0:0	12	p_httpd_stream
arg	51:59	51:74	11	p_sys->p_header
water	51:59	0:0	12	p_sys
op	51:64	0:0	12	->
water	51:66	0:0	12	p_header
arg	52:36	52:57	11	p_sys->i_header_size
water	52:36	0:0	12	p_sys
op	52:41	0:0	12	->
water	52:43	0:0	12	i_header_size
water	52:58	0:0	10	;
water	53:12	0:0	10	}
water	54:8	0:0	8	}
water	55:8	0:0	4	i_len
op	55:14	0:0	4	+=
water	55:17	0:0	4	p_buffer
op	55:25	0:0	4	->
water	55:27	0:0	4	i_buffer
water	55:35	0:0	4	;
if	56:8	59:8	4	(p_buffer -> i_flags & BLOCK_FLAG_TYPE_I)
cond	56:12	56:32	5	p_buffer -> i_flags & BLOCK_FLAG_TYPE_I
water	56:12	0:0	6	p_buffer
op	56:20	0:0	6	->
water	56:22	0:0	6	i_flags
op	56:30	0:0	6	&
water	56:32	0:0	6	BLOCK_FLAG_TYPE_I
stmts	57:8	59:8	5	
water	57:8	0:0	6	{
water	58:12	0:0	6	p_sys
op	58:17	0:0	6	->
water	58:19	0:0	6	b_has_keyframes
op	58:35	0:0	6	=
water	58:37	0:0	6	true
water	58:41	0:0	6	;
water	59:8	0:0	6	}
water	60:8	0:0	4	p_next
op	60:15	0:0	4	=
water	60:17	0:0	4	p_buffer
op	60:25	0:0	4	->
water	60:27	0:0	4	p_next
water	60:33	0:0	4	;
if	61:8	79:8	4	(p_sys -> b_metacube)
cond	61:12	61:19	5	p_sys -> b_metacube
water	61:12	0:0	6	p_sys
op	61:17	0:0	6	->
water	61:19	0:0	6	b_metacube
stmts	62:8	79:8	5	
water	62:8	0:0	6	{
decl	64:12	64:45	6	struct metacube2_block_header	hdr
call	65:12	65:71	6	memcpy
arg	65:20	65:28	7	hdr.sync
water	65:20	0:0	8	hdr
op	65:23	0:0	8	.
water	65:24	0:0	8	sync
arg	65:30	65:44	7	METACUBE2_SYNC
water	65:30	0:0	8	METACUBE2_SYNC
arg	65:46	65:71	7	sizeof(METACUBE2_SYNC)
op	65:46	0:0	8	sizeof
water	65:52	0:0	8	(
water	65:54	0:0	8	METACUBE2_SYNC
water	65:69	0:0	8	)
water	65:72	0:0	6	;
water	66:12	0:0	6	hdr
op	66:15	0:0	6	.
water	66:16	0:0	6	size
op	66:21	0:0	6	=
call	66:23	66:50	6	hton32
arg	66:31	66:50	7	p_buffer->i_buffer
water	66:31	0:0	8	p_buffer
op	66:39	0:0	8	->
water	66:41	0:0	8	i_buffer
water	66:51	0:0	6	;
water	67:12	0:0	6	hdr
op	67:15	0:0	6	.
water	67:16	0:0	6	flags
op	67:22	0:0	6	=
call	67:24	67:34	6	hton16
arg	67:32	67:34	7	0
water	67:32	0:0	8	0
water	67:35	0:0	6	;
if	68:12	69:60	6	(p_buffer -> i_flags & BLOCK_FLAG_HEADER)
cond	68:16	68:36	7	p_buffer -> i_flags & BLOCK_FLAG_HEADER
water	68:16	0:0	8	p_buffer
op	68:24	0:0	8	->
water	68:26	0:0	8	i_flags
op	68:34	0:0	8	&
water	68:36	0:0	8	BLOCK_FLAG_HEADER
stmts	69:16	69:60	7	
water	69:16	0:0	8	hdr
op	69:19	0:0	8	.
water	69:20	0:0	8	flags
op	69:26	0:0	8	|=
call	69:29	69:59	8	hton16
arg	69:37	69:59	9	METACUBE_FLAGS_HEADER
water	69:37	0:0	10	METACUBE_FLAGS_HEADER
water	69:60	0:0	8	;
if	70:12	71:83	6	(p_sys -> b_has_keyframes && ! ( p_buffer -> i_flags & BLOCK_FLAG_TYPE_I ))
cond	70:16	70:83	7	p_sys -> b_has_keyframes && ! ( p_buffer -> i_flags & BLOCK_FLAG_TYPE_I )
water	70:16	0:0	8	p_sys
op	70:21	0:0	8	->
water	70:23	0:0	8	b_has_keyframes
op	70:39	0:0	8	&&
op	70:42	0:0	8	!
water	70:43	0:0	8	(
water	70:45	0:0	8	p_buffer
op	70:53	0:0	8	->
water	70:55	0:0	8	i_flags
op	70:63	0:0	8	&
water	70:65	0:0	8	BLOCK_FLAG_TYPE_I
water	70:83	0:0	8	)
stmts	71:16	71:83	7	
water	71:16	0:0	8	hdr
op	71:19	0:0	8	.
water	71:20	0:0	8	flags
op	71:26	0:0	8	|=
call	71:29	71:82	8	hton16
arg	71:37	71:82	9	METACUBE_FLAGS_NOT_SUITABLE_FOR_STREAM_START
water	71:37	0:0	10	METACUBE_FLAGS_NOT_SUITABLE_FOR_STREAM_START
water	71:83	0:0	8	;
water	72:12	0:0	6	hdr
op	72:15	0:0	6	.
water	72:16	0:0	6	csum
op	72:21	0:0	6	=
call	72:23	72:61	6	hton16
arg	72:31	72:61	7	metacube2_compute_crc(&hdr)
call	72:31	72:59	8	metacube2_compute_crc
arg	72:54	72:59	9	&hdr
op	72:54	0:0	10	&
water	72:55	0:0	10	hdr
water	72:62	0:0	6	;
water	73:12	0:0	6	p_buffer
op	73:21	0:0	6	=
call	73:23	73:82	6	block_Realloc
arg	73:38	73:46	7	p_buffer
water	73:38	0:0	8	p_buffer
arg	73:48	73:61	7	sizeof(hdr)
op	73:48	0:0	8	sizeof
water	73:54	0:0	8	(
water	73:56	0:0	8	hdr
water	73:60	0:0	8	)
arg	73:63	73:82	7	p_buffer->i_buffer
water	73:63	0:0	8	p_buffer
op	73:71	0:0	8	->
water	73:73	0:0	8	i_buffer
water	73:83	0:0	6	;
if	74:12	77:12	6	(p_buffer == NULL)
cond	74:16	74:28	7	p_buffer == NULL
water	74:16	0:0	8	p_buffer
op	74:25	0:0	8	==
water	74:28	0:0	8	NULL
stmts	74:35	77:12	7	
water	74:35	0:0	8	{
call	75:16	75:43	8	block_ChainRelease
arg	75:36	75:43	9	p_next
water	75:36	0:0	10	p_next
water	75:44	0:0	8	;
return	76:16	76:33	8	VLC_ENOMEM
water	76:23	0:0	9	VLC_ENOMEM
water	77:12	0:0	8	}
call	78:12	78:60	6	memcpy
arg	78:20	78:38	7	p_buffer->p_buffer
water	78:20	0:0	8	p_buffer
op	78:28	0:0	8	->
water	78:30	0:0	8	p_buffer
arg	78:40	78:44	7	&hdr
op	78:40	0:0	8	&
water	78:41	0:0	8	hdr
arg	78:46	78:60	7	sizeof(hdr)
op	78:46	0:0	8	sizeof
water	78:52	0:0	8	(
water	78:54	0:0	8	hdr
water	78:58	0:0	8	)
water	78:61	0:0	6	;
water	79:8	0:0	6	}
water	81:8	0:0	4	i_err
op	81:14	0:0	4	=
call	81:16	81:66	4	httpd_StreamSend
arg	81:34	81:55	5	p_sys->p_httpd_stream
water	81:34	0:0	6	p_sys
op	81:39	0:0	6	->
water	81:41	0:0	6	p_httpd_stream
arg	81:57	81:66	5	p_buffer
water	81:57	0:0	6	p_buffer
water	81:67	0:0	4	;
call	82:8	82:32	4	block_Release
arg	82:23	82:32	5	p_buffer
water	82:23	0:0	6	p_buffer
water	82:33	0:0	4	;
water	83:8	0:0	4	p_buffer
op	83:17	0:0	4	=
water	83:19	0:0	4	p_next
water	83:25	0:0	4	;
if	84:8	87:8	4	(i_err < 0)
cond	84:12	84:20	5	i_err < 0
water	84:12	0:0	6	i_err
op	84:18	0:0	6	<
water	84:20	0:0	6	0
stmts	85:8	87:8	5	
water	85:8	0:0	6	{
break	86:12	86:17	6	
water	87:8	0:0	6	}
water	88:4	0:0	4	}
if	89:4	92:4	2	(i_err < 0)
cond	89:8	89:16	3	i_err < 0
water	89:8	0:0	4	i_err
op	89:14	0:0	4	<
water	89:16	0:0	4	0
stmts	90:4	92:4	3	
water	90:4	0:0	4	{
call	91:8	91:37	4	block_ChainRelease
arg	91:28	91:37	5	p_buffer
water	91:28	0:0	6	p_buffer
water	91:38	0:0	4	;
water	92:4	0:0	4	}
return	93:4	93:46	2	(i_err<0?VLC_EGENERIC:i_len)
water	93:10	0:0	3	(
water	93:12	0:0	3	i_err
op	93:18	0:0	3	<
water	93:20	0:0	3	0
water	93:22	0:0	3	?
water	93:24	0:0	3	VLC_EGENERIC
water	93:37	0:0	3	:
water	93:39	0:0	3	i_len
water	93:45	0:0	3	)

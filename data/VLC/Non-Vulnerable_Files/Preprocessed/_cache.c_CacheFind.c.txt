func	2:0	20:0	0	module_t *	CacheFind
params	2:20	0:0	1	
param	2:21	2:42	2	module_cache_t *	cache
param	2:44	2:56	2	size_t	count
param	3:21	3:37	2	const char *	path
param	3:39	3:60	2	const struct stat *	st
stmnts	5:4	19:15	1	
while	5:4	18:4	2	(count > 0)
cond	5:11	5:19	3	count > 0
water	5:11	0:0	4	count
op	5:17	0:0	4	>
water	5:19	0:0	4	0
stmts	6:4	18:4	3	
water	6:4	0:0	4	{
if	7:8	15:7	4	(cache -> path != NULL && !strcmp (cache -> path ,path ) && cache -> mtime == st -> st_mtime && cache -> size == st -> st_size)
cond	7:12	10:31	5	cache -> path != NULL && !strcmp (cache -> path ,path ) && cache -> mtime == st -> st_mtime && cache -> size == st -> st_size
water	7:12	0:0	6	cache
op	7:17	0:0	6	->
water	7:19	0:0	6	path
op	7:24	0:0	6	!=
water	7:27	0:0	6	NULL
op	8:9	0:0	6	&&
op	8:12	0:0	6	!
call	8:13	8:38	6	strcmp
arg	8:21	8:32	7	cache->path
water	8:21	0:0	8	cache
op	8:26	0:0	8	->
water	8:28	0:0	8	path
arg	8:34	8:38	7	path
water	8:34	0:0	8	path
op	9:9	0:0	6	&&
water	9:12	0:0	6	cache
op	9:17	0:0	6	->
water	9:19	0:0	6	mtime
op	9:25	0:0	6	==
water	9:28	0:0	6	st
op	9:30	0:0	6	->
water	9:32	0:0	6	st_mtime
op	10:9	0:0	6	&&
water	10:12	0:0	6	cache
op	10:17	0:0	6	->
water	10:19	0:0	6	size
op	10:24	0:0	6	==
water	10:27	0:0	6	st
op	10:29	0:0	6	->
water	10:31	0:0	6	st_size
stmts	11:7	15:7	5	
water	11:7	0:0	6	{
decl	12:12	12:46	6	module_t	*module
op	12:29	0:0	6	=
water	12:31	0:0	6	cache
op	12:36	0:0	6	->
water	12:38	0:0	6	p_module
water	13:12	0:0	6	cache
op	13:17	0:0	6	->
water	13:19	0:0	6	p_module
op	13:28	0:0	6	=
water	13:30	0:0	6	NULL
water	13:34	0:0	6	;
return	14:12	14:25	6	module
water	14:19	0:0	7	module
water	15:7	0:0	6	}
water	16:7	0:0	4	cache
op	16:12	0:0	4	++
water	16:14	0:0	4	;
water	17:7	0:0	4	count
op	17:12	0:0	4	--
water	17:14	0:0	4	;
water	18:4	0:0	4	}
return	19:4	19:15	2	NULL
water	19:11	0:0	3	NULL

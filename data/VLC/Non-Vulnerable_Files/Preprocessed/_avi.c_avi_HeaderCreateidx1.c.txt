func	2:0	20:0	0	static block_t *	avi_HeaderCreateidx1
params	2:37	0:0	1	
param	2:39	2:57	2	sout_mux_t *	p_mux
stmnts	0:0	19:24	1	
decl	4:4	4:45	2	sout_mux_sys_t	*p_sys
op	4:31	0:0	2	=
water	4:33	0:0	2	p_mux
op	4:38	0:0	2	->
water	4:40	0:0	2	p_sys
decl	5:4	5:35	2	uint32_t	i_idx1_size
decl	6:4	6:26	2	buffer_out_t	bo
water	7:4	0:0	2	i_idx1_size
op	7:16	0:0	2	=
water	7:18	0:0	2	16
op	7:21	0:0	2	*
water	7:23	0:0	2	p_sys
op	7:28	0:0	2	->
water	7:30	0:0	2	idx1
op	7:34	0:0	2	.
water	7:35	0:0	2	i_entry_count
op	7:49	0:0	2	+
water	7:51	0:0	2	8
water	7:52	0:0	2	;
call	8:4	8:30	2	bo_Init
arg	8:13	8:16	3	&bo
op	8:13	0:0	4	&
water	8:14	0:0	4	bo
arg	8:18	8:30	3	i_idx1_size
water	8:18	0:0	4	i_idx1_size
water	8:31	0:0	2	;
call	9:4	9:48	2	memset
arg	9:12	9:32	3	bo.p_block->p_buffer
water	9:12	0:0	4	bo
op	9:14	0:0	4	.
water	9:15	0:0	4	p_block
op	9:22	0:0	4	->
water	9:24	0:0	4	p_buffer
arg	9:34	9:35	3	0
water	9:34	0:0	4	0
arg	9:37	9:48	3	i_idx1_size
water	9:37	0:0	4	i_idx1_size
water	9:49	0:0	2	;
call	10:4	10:27	2	bo_AddFCC
arg	10:15	10:18	3	&bo
op	10:15	0:0	4	&
water	10:16	0:0	4	bo
arg	10:20	10:27	3	"idx1"
water	10:20	0:0	4	"idx1"
water	10:28	0:0	2	;
call	11:4	11:39	2	bo_AddDWordLE
arg	11:19	11:22	3	&bo
op	11:19	0:0	4	&
water	11:20	0:0	4	bo
arg	11:24	11:39	3	i_idx1_size-8
water	11:24	0:0	4	i_idx1_size
op	11:36	0:0	4	-
water	11:38	0:0	4	8
water	11:40	0:0	2	;
for	12:4	18:4	2	(unsigned i = 0 ;i < p_sys -> idx1 . i_entry_count;i ++)
forinit	12:9	12:23	3	unsigned i = 0 ;
water	12:9	0:0	4	unsigned
water	12:18	0:0	4	i
op	12:20	0:0	4	=
water	12:22	0:0	4	0
water	12:23	0:0	4	;
cond	12:25	12:41	3	i < p_sys -> idx1 . i_entry_count
water	12:25	0:0	4	i
op	12:27	0:0	4	<
water	12:29	0:0	4	p_sys
op	12:34	0:0	4	->
water	12:36	0:0	4	idx1
op	12:40	0:0	4	.
water	12:41	0:0	4	i_entry_count
forexpr	12:56	12:57	3	i ++
water	12:56	0:0	4	i
op	12:57	0:0	4	++
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
call	14:8	14:49	4	bo_AddFCC
arg	14:19	14:22	5	&bo
op	14:19	0:0	6	&
water	14:20	0:0	6	bo
arg	14:24	14:49	5	p_sys->idx1.entry[i].fcc
water	14:24	0:0	6	p_sys
op	14:29	0:0	6	->
water	14:31	0:0	6	idx1
op	14:35	0:0	6	.
water	14:36	0:0	6	entry
op	14:41	0:0	6	[
water	14:42	0:0	6	i
op	14:43	0:0	6	]
op	14:44	0:0	6	.
water	14:45	0:0	6	fcc
water	14:50	0:0	4	;
call	15:8	15:57	4	bo_AddDWordLE
arg	15:23	15:26	5	&bo
op	15:23	0:0	6	&
water	15:24	0:0	6	bo
arg	15:28	15:57	5	p_sys->idx1.entry[i].i_flags
water	15:28	0:0	6	p_sys
op	15:33	0:0	6	->
water	15:35	0:0	6	idx1
op	15:39	0:0	6	.
water	15:40	0:0	6	entry
op	15:45	0:0	6	[
water	15:46	0:0	6	i
op	15:47	0:0	6	]
op	15:48	0:0	6	.
water	15:49	0:0	6	i_flags
water	15:58	0:0	4	;
call	16:8	16:55	4	bo_AddDWordLE
arg	16:23	16:26	5	&bo
op	16:23	0:0	6	&
water	16:24	0:0	6	bo
arg	16:28	16:55	5	p_sys->idx1.entry[i].i_pos
water	16:28	0:0	6	p_sys
op	16:33	0:0	6	->
water	16:35	0:0	6	idx1
op	16:39	0:0	6	.
water	16:40	0:0	6	entry
op	16:45	0:0	6	[
water	16:46	0:0	6	i
op	16:47	0:0	6	]
op	16:48	0:0	6	.
water	16:49	0:0	6	i_pos
water	16:56	0:0	4	;
call	17:8	17:58	4	bo_AddDWordLE
arg	17:23	17:26	5	&bo
op	17:23	0:0	6	&
water	17:24	0:0	6	bo
arg	17:28	17:58	5	p_sys->idx1.entry[i].i_length
water	17:28	0:0	6	p_sys
op	17:33	0:0	6	->
water	17:35	0:0	6	idx1
op	17:39	0:0	6	.
water	17:40	0:0	6	entry
op	17:45	0:0	6	[
water	17:46	0:0	6	i
op	17:47	0:0	6	]
op	17:48	0:0	6	.
water	17:49	0:0	6	i_length
water	17:59	0:0	4	;
water	18:4	0:0	4	}
return	19:4	19:24	2	(bo.p_block)
water	19:10	0:0	3	(
water	19:12	0:0	3	bo
op	19:14	0:0	3	.
water	19:15	0:0	3	p_block
water	19:23	0:0	3	)

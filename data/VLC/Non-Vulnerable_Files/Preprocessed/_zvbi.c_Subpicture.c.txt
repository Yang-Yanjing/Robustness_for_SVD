func	2:0	56:0	0	static subpicture_t *	Subpicture
params	2:31	0:0	1	
param	2:33	2:49	2	decoder_t *	p_dec
param	2:51	2:72	2	video_format_t *	p_fmt
param	3:33	3:44	2	bool	b_text
param	4:33	4:46	2	int	i_columns
param	4:48	4:58	2	int	i_rows
param	4:60	4:71	2	int	i_align
param	5:33	5:47	2	mtime_t	i_pts
stmnts	0:0	55:16	1	
decl	7:4	7:22	2	video_format_t	fmt
decl	8:4	8:28	2	subpicture_t	*p_spu
op	8:23	0:0	2	=
water	8:24	0:0	2	NULL
if	11:4	12:50	2	(b_text)
cond	11:8	11:8	3	b_text
water	11:8	0:0	4	b_text
stmts	12:8	12:50	3	
water	12:8	0:0	4	p_spu
op	12:14	0:0	4	=
call	12:16	12:49	4	decoder_NewSubpictureText
arg	12:43	12:49	5	p_dec
water	12:43	0:0	6	p_dec
water	12:50	0:0	4	;
else	13:4	14:52	2
stmts	14:8	14:52	3	
water	14:8	0:0	4	p_spu
op	14:14	0:0	4	=
call	14:16	14:51	4	decoder_NewSubpicture
arg	14:39	14:44	5	p_dec
water	14:39	0:0	6	p_dec
arg	14:46	14:51	5	NULL
water	14:46	0:0	6	NULL
water	14:52	0:0	4	;
if	15:4	19:4	2	(! p_spu)
cond	15:8	15:9	3	! p_spu
op	15:8	0:0	4	!
water	15:9	0:0	4	p_spu
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
call	17:8	17:48	4	msg_Warn
arg	17:18	17:23	5	p_dec
water	17:18	0:0	6	p_dec
arg	17:25	17:48	5	"can't get spu buffer"
water	17:25	0:0	6	"can't get spu buffer"
water	17:49	0:0	4	;
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
water	19:4	0:0	4	}
call	20:4	20:44	2	memset
arg	20:12	20:16	3	&fmt
op	20:12	0:0	4	&
water	20:13	0:0	4	fmt
arg	20:18	20:19	3	0
water	20:18	0:0	4	0
arg	20:21	20:44	3	sizeof(video_format_t)
op	20:21	0:0	4	sizeof
water	20:27	0:0	4	(
water	20:28	0:0	4	video_format_t
water	20:42	0:0	4	)
water	20:45	0:0	2	;
water	21:4	0:0	2	fmt
op	21:7	0:0	2	.
water	21:8	0:0	2	i_chroma
op	21:17	0:0	2	=
water	21:19	0:0	2	b_text
water	21:26	0:0	2	?
water	21:28	0:0	2	VLC_CODEC_TEXT
water	21:43	0:0	2	:
water	21:45	0:0	2	VLC_CODEC_RGBA
water	21:59	0:0	2	;
water	22:4	0:0	2	fmt
op	22:7	0:0	2	.
water	22:8	0:0	2	i_sar_num
op	22:18	0:0	2	=
water	22:20	0:0	2	0
water	22:21	0:0	2	;
water	23:4	0:0	2	fmt
op	23:7	0:0	2	.
water	23:8	0:0	2	i_sar_den
op	23:18	0:0	2	=
water	23:20	0:0	2	1
water	23:21	0:0	2	;
if	24:4	27:4	2	(b_text)
cond	24:8	24:8	3	b_text
water	24:8	0:0	4	b_text
stmts	25:4	27:4	3	
water	25:4	0:0	4	{
water	26:8	0:0	4	fmt
op	26:11	0:0	4	.
water	26:12	0:0	4	i_bits_per_pixel
op	26:29	0:0	4	=
water	26:31	0:0	4	0
water	26:32	0:0	4	;
water	27:4	0:0	4	}
else	28:4	34:4	2
stmts	29:4	34:4	3	
water	29:4	0:0	4	{
water	30:8	0:0	4	fmt
op	30:11	0:0	4	.
water	30:12	0:0	4	i_width
op	30:20	0:0	4	=
water	30:22	0:0	4	fmt
op	30:25	0:0	4	.
water	30:26	0:0	4	i_visible_width
op	30:42	0:0	4	=
water	30:44	0:0	4	i_columns
op	30:54	0:0	4	*
water	30:56	0:0	4	12
water	30:58	0:0	4	;
water	31:8	0:0	4	fmt
op	31:11	0:0	4	.
water	31:12	0:0	4	i_height
op	31:21	0:0	4	=
water	31:23	0:0	4	fmt
op	31:26	0:0	4	.
water	31:27	0:0	4	i_visible_height
op	31:44	0:0	4	=
water	31:46	0:0	4	i_rows
op	31:53	0:0	4	*
water	31:55	0:0	4	10
water	31:57	0:0	4	;
water	32:8	0:0	4	fmt
op	32:11	0:0	4	.
water	32:12	0:0	4	i_bits_per_pixel
op	32:29	0:0	4	=
water	32:31	0:0	4	32
water	32:33	0:0	4	;
water	33:8	0:0	4	fmt
op	33:11	0:0	4	.
water	33:12	0:0	4	i_sar_num
op	33:22	0:0	4	=
water	33:24	0:0	4	fmt
op	33:27	0:0	4	.
water	33:28	0:0	4	i_sar_den
op	33:38	0:0	4	=
water	33:40	0:0	4	0
water	33:41	0:0	4	;
water	34:4	0:0	4	}
water	35:4	0:0	2	fmt
op	35:7	0:0	2	.
water	35:8	0:0	2	i_x_offset
op	35:19	0:0	2	=
water	35:21	0:0	2	fmt
op	35:24	0:0	2	.
water	35:25	0:0	2	i_y_offset
op	35:36	0:0	2	=
water	35:38	0:0	2	0
water	35:39	0:0	2	;
water	36:4	0:0	2	p_spu
op	36:9	0:0	2	->
water	36:11	0:0	2	p_region
op	36:20	0:0	2	=
call	36:22	36:50	2	subpicture_region_New
arg	36:45	36:50	3	&fmt
op	36:45	0:0	4	&
water	36:46	0:0	4	fmt
water	36:51	0:0	2	;
if	37:4	42:4	2	(p_spu -> p_region == NULL)
cond	37:8	37:27	3	p_spu -> p_region == NULL
water	37:8	0:0	4	p_spu
op	37:13	0:0	4	->
water	37:15	0:0	4	p_region
op	37:24	0:0	4	==
water	37:27	0:0	4	NULL
stmts	38:4	42:4	3	
water	38:4	0:0	4	{
call	39:8	39:53	4	msg_Err
arg	39:17	39:22	5	p_dec
water	39:17	0:0	6	p_dec
arg	39:24	39:53	5	"cannot allocate SPU region"
water	39:24	0:0	6	"cannot allocate SPU region"
water	39:54	0:0	4	;
call	40:8	40:47	4	decoder_DeleteSubpicture
arg	40:34	40:39	5	p_dec
water	40:34	0:0	6	p_dec
arg	40:41	40:47	5	p_spu
water	40:41	0:0	6	p_spu
water	40:48	0:0	4	;
return	41:8	41:19	4	NULL
water	41:15	0:0	5	NULL
water	42:4	0:0	4	}
water	43:4	0:0	2	p_spu
op	43:9	0:0	2	->
water	43:11	0:0	2	p_region
op	43:19	0:0	2	->
water	43:21	0:0	2	i_x
op	43:25	0:0	2	=
water	43:27	0:0	2	0
water	43:28	0:0	2	;
water	44:4	0:0	2	p_spu
op	44:9	0:0	2	->
water	44:11	0:0	2	p_region
op	44:19	0:0	2	->
water	44:21	0:0	2	i_y
op	44:25	0:0	2	=
water	44:27	0:0	2	0
water	44:28	0:0	2	;
water	45:4	0:0	2	p_spu
op	45:9	0:0	2	->
water	45:11	0:0	2	i_start
op	45:19	0:0	2	=
water	45:21	0:0	2	i_pts
water	45:26	0:0	2	;
water	46:4	0:0	2	p_spu
op	46:9	0:0	2	->
water	46:11	0:0	2	i_stop
op	46:18	0:0	2	=
water	46:20	0:0	2	b_text
water	46:27	0:0	2	?
water	46:29	0:0	2	i_pts
op	46:35	0:0	2	+
water	46:37	0:0	2	(
water	46:38	0:0	2	10
op	46:40	0:0	2	*
water	46:41	0:0	2	CLOCK_FREQ
water	46:51	0:0	2	)
water	46:52	0:0	2	:
water	46:54	0:0	2	0
water	46:55	0:0	2	;
water	47:4	0:0	2	p_spu
op	47:9	0:0	2	->
water	47:11	0:0	2	b_ephemer
op	47:21	0:0	2	=
water	47:23	0:0	2	true
water	47:27	0:0	2	;
water	48:4	0:0	2	p_spu
op	48:9	0:0	2	->
water	48:11	0:0	2	b_absolute
op	48:22	0:0	2	=
water	48:24	0:0	2	b_text
water	48:31	0:0	2	?
water	48:33	0:0	2	false
water	48:39	0:0	2	:
water	48:41	0:0	2	true
water	48:45	0:0	2	;
if	49:4	50:42	2	(! b_text)
cond	49:8	49:9	3	! b_text
op	49:8	0:0	4	!
water	49:9	0:0	4	b_text
stmts	50:8	50:42	3	
water	50:8	0:0	4	p_spu
op	50:13	0:0	4	->
water	50:15	0:0	4	p_region
op	50:23	0:0	4	->
water	50:25	0:0	4	i_align
op	50:33	0:0	4	=
water	50:35	0:0	4	i_align
water	50:42	0:0	4	;
water	51:4	0:0	2	p_spu
op	51:9	0:0	2	->
water	51:11	0:0	2	i_original_picture_width
op	51:36	0:0	2	=
water	51:38	0:0	2	fmt
op	51:41	0:0	2	.
water	51:42	0:0	2	i_width
water	51:49	0:0	2	;
water	52:4	0:0	2	p_spu
op	52:9	0:0	2	->
water	52:11	0:0	2	i_original_picture_height
op	52:37	0:0	2	=
water	52:39	0:0	2	fmt
op	52:42	0:0	2	.
water	52:43	0:0	2	i_height
water	52:51	0:0	2	;
op	54:4	0:0	2	*
water	54:5	0:0	2	p_fmt
op	54:11	0:0	2	=
water	54:13	0:0	2	fmt
water	54:16	0:0	2	;
return	55:4	55:16	2	p_spu
water	55:11	0:0	3	p_spu

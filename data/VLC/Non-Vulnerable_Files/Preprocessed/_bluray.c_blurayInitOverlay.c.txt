func	2:0	35:0	0	static void	blurayInitOverlay
params	2:29	0:0	1	
param	2:30	2:46	2	demux_t *	p_demux
param	2:48	2:57	2	int	plane
param	2:59	2:68	2	int	width
param	2:70	2:80	2	int	height
stmnts	0:0	34:33	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
call	5:4	5:43	2	assert
arg	5:11	5:43	3	p_sys->p_overlays[plane]==NULL
water	5:11	0:0	4	p_sys
op	5:16	0:0	4	->
water	5:18	0:0	4	p_overlays
op	5:28	0:0	4	[
water	5:29	0:0	4	plane
op	5:34	0:0	4	]
op	5:36	0:0	4	==
water	5:39	0:0	4	NULL
water	5:44	0:0	2	;
decl	6:4	6:49	2	bluray_overlay_t	*ov
op	6:25	0:0	2	=
call	6:27	6:48	3	calloc
arg	6:34	6:35	4	1
water	6:34	0:0	5	1
arg	6:37	6:48	4	sizeof(*ov)
op	6:37	0:0	5	sizeof
water	6:43	0:0	5	(
op	6:44	0:0	5	*
water	6:45	0:0	5	ov
water	6:47	0:0	5	)
if	7:4	8:14	2	(unlikely (ov == NULL ))
cond	7:8	7:27	3	unlikely (ov == NULL )
call	7:8	7:27	4	unlikely
arg	7:17	7:27	5	ov==NULL
water	7:17	0:0	6	ov
op	7:20	0:0	6	==
water	7:23	0:0	6	NULL
stmts	8:8	8:14	3	
return	8:8	8:14	4	
decl	9:4	9:68	2	subpicture_updater_sys_t	*p_upd_sys
op	9:40	0:0	2	=
call	9:42	9:67	3	malloc
arg	9:49	9:67	4	sizeof(*p_upd_sys)
op	9:49	0:0	5	sizeof
water	9:55	0:0	5	(
op	9:56	0:0	5	*
water	9:57	0:0	5	p_upd_sys
water	9:66	0:0	5	)
if	10:4	13:4	2	(unlikely (p_upd_sys == NULL ))
cond	10:8	10:34	3	unlikely (p_upd_sys == NULL )
call	10:8	10:34	4	unlikely
arg	10:17	10:34	5	p_upd_sys==NULL
water	10:17	0:0	6	p_upd_sys
op	10:27	0:0	6	==
water	10:30	0:0	6	NULL
stmts	10:37	13:4	3	
water	10:37	0:0	4	{
call	11:8	11:15	4	free
arg	11:13	11:15	5	ov
water	11:13	0:0	6	ov
water	11:16	0:0	4	;
return	12:8	12:14	4	
water	13:4	0:0	4	}
call	15:4	15:40	2	atomic_flag_clear
arg	15:22	15:40	3	&ov->released_once
op	15:22	0:0	4	&
water	15:23	0:0	4	ov
op	15:25	0:0	4	->
water	15:27	0:0	4	released_once
water	15:41	0:0	2	;
water	16:4	0:0	2	p_upd_sys
op	16:13	0:0	2	->
water	16:15	0:0	2	p_overlay
op	16:25	0:0	2	=
water	16:27	0:0	2	ov
water	16:29	0:0	2	;
decl	17:4	22:5	2	subpicture_updater_t	updater
op	17:33	0:0	2	=
water	17:35	0:0	2	{
op	18:8	0:0	2	.
water	18:9	0:0	2	pf_validate
op	18:21	0:0	2	=
water	18:23	0:0	2	subpictureUpdaterValidate
water	18:48	0:0	2	,
op	19:8	0:0	2	.
water	19:9	0:0	2	pf_update
op	19:21	0:0	2	=
water	19:23	0:0	2	subpictureUpdaterUpdate
water	19:46	0:0	2	,
op	20:8	0:0	2	.
water	20:9	0:0	2	pf_destroy
op	20:21	0:0	2	=
water	20:23	0:0	2	subpictureUpdaterDestroy
water	20:47	0:0	2	,
op	21:8	0:0	2	.
water	21:9	0:0	2	p_sys
op	21:21	0:0	2	=
water	21:23	0:0	2	p_upd_sys
water	21:32	0:0	2	,
water	22:4	0:0	2	}
water	23:4	0:0	2	ov
op	23:6	0:0	2	->
water	23:8	0:0	2	p_pic
op	23:14	0:0	2	=
call	23:16	23:39	2	subpicture_New
arg	23:31	23:39	3	&updater
op	23:31	0:0	4	&
water	23:32	0:0	4	updater
water	23:40	0:0	2	;
if	24:4	28:4	2	(ov -> p_pic == NULL)
cond	24:8	24:21	3	ov -> p_pic == NULL
water	24:8	0:0	4	ov
op	24:10	0:0	4	->
water	24:12	0:0	4	p_pic
op	24:18	0:0	4	==
water	24:21	0:0	4	NULL
stmts	24:27	28:4	3	
water	24:27	0:0	4	{
call	25:8	25:22	4	free
arg	25:13	25:22	5	p_upd_sys
water	25:13	0:0	6	p_upd_sys
water	25:23	0:0	4	;
call	26:8	26:15	4	free
arg	26:13	26:15	5	ov
water	26:13	0:0	6	ov
water	26:16	0:0	4	;
return	27:8	27:14	4	
water	28:4	0:0	4	}
water	29:4	0:0	2	ov
op	29:6	0:0	2	->
water	29:8	0:0	2	p_pic
op	29:13	0:0	2	->
water	29:15	0:0	2	i_original_picture_width
op	29:40	0:0	2	=
water	29:42	0:0	2	width
water	29:47	0:0	2	;
water	30:4	0:0	2	ov
op	30:6	0:0	2	->
water	30:8	0:0	2	p_pic
op	30:13	0:0	2	->
water	30:15	0:0	2	i_original_picture_height
op	30:41	0:0	2	=
water	30:43	0:0	2	height
water	30:49	0:0	2	;
water	31:4	0:0	2	ov
op	31:6	0:0	2	->
water	31:8	0:0	2	p_pic
op	31:13	0:0	2	->
water	31:15	0:0	2	b_ephemer
op	31:25	0:0	2	=
water	31:27	0:0	2	true
water	31:31	0:0	2	;
water	32:4	0:0	2	ov
op	32:6	0:0	2	->
water	32:8	0:0	2	p_pic
op	32:13	0:0	2	->
water	32:15	0:0	2	b_absolute
op	32:26	0:0	2	=
water	32:28	0:0	2	true
water	32:32	0:0	2	;
call	33:4	33:28	2	vlc_mutex_init
arg	33:19	33:28	3	&ov->lock
op	33:19	0:0	4	&
water	33:20	0:0	4	ov
op	33:22	0:0	4	->
water	33:24	0:0	4	lock
water	33:29	0:0	2	;
water	34:4	0:0	2	p_sys
op	34:9	0:0	2	->
water	34:11	0:0	2	p_overlays
op	34:21	0:0	2	[
water	34:22	0:0	2	plane
op	34:27	0:0	2	]
op	34:29	0:0	2	=
water	34:31	0:0	2	ov
water	34:33	0:0	2	;

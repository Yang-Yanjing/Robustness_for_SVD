func	2:0	66:0	0	static int	Create
params	2:17	0:0	1	
param	2:19	2:40	2	vlc_object_t *	p_this
stmnts	0:0	65:22	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:20	2	char	*psz_method
switch	6:4	14:4	2	(p_filter -> fmt_in . video . i_chroma)
cond	6:12	6:35	3	p_filter -> fmt_in . video . i_chroma
water	6:12	0:0	4	p_filter
op	6:20	0:0	4	->
water	6:22	0:0	4	fmt_in
op	6:28	0:0	4	.
water	6:29	0:0	4	video
op	6:34	0:0	4	.
water	6:35	0:0	4	i_chroma
stmts	7:4	14:4	3	
water	7:4	0:0	4	{
water	8:8	0:0	4	CASE_PLANAR_YUV
water	9:12	0:0	4	break
water	9:17	0:0	4	;
label	10:8	10:15	4	default :
call	11:13	12:64	4	msg_Err
arg	11:22	11:30	5	p_filter
water	11:22	0:0	6	p_filter
arg	11:32	11:66	5	"Unsupported input chroma (%4.4s)"
water	11:32	0:0	6	"Unsupported input chroma (%4.4s)"
arg	12:22	12:64	5	(char*)&(p_filter->fmt_in.video.i_chroma)
water	12:22	0:0	6	(
water	12:23	0:0	6	char
op	12:27	0:0	6	*
water	12:28	0:0	6	)
op	12:29	0:0	6	&
water	12:30	0:0	6	(
water	12:31	0:0	6	p_filter
op	12:39	0:0	6	->
water	12:41	0:0	6	fmt_in
op	12:47	0:0	6	.
water	12:48	0:0	6	video
op	12:53	0:0	6	.
water	12:54	0:0	6	i_chroma
water	12:62	0:0	6	)
water	12:65	0:0	4	;
return	13:12	13:31	4	VLC_EGENERIC
water	13:19	0:0	5	VLC_EGENERIC
water	14:4	0:0	4	}
water	16:4	0:0	2	p_filter
op	16:12	0:0	2	->
water	16:14	0:0	2	p_sys
op	16:20	0:0	2	=
call	16:22	16:53	2	malloc
arg	16:30	16:53	3	sizeof(filter_sys_t)
op	16:30	0:0	4	sizeof
water	16:36	0:0	4	(
water	16:38	0:0	4	filter_sys_t
water	16:51	0:0	4	)
water	16:54	0:0	2	;
if	17:4	18:25	2	(p_filter -> p_sys == NULL)
cond	17:8	17:27	3	p_filter -> p_sys == NULL
water	17:8	0:0	4	p_filter
op	17:16	0:0	4	->
water	17:18	0:0	4	p_sys
op	17:24	0:0	4	==
water	17:27	0:0	4	NULL
stmts	18:8	18:25	3	
return	18:8	18:25	4	VLC_ENOMEM
water	18:15	0:0	5	VLC_ENOMEM
water	19:4	0:0	2	p_filter
op	19:12	0:0	2	->
water	19:14	0:0	2	pf_video_filter
op	19:30	0:0	2	=
water	19:32	0:0	2	Filter
water	19:38	0:0	2	;
water	20:4	0:0	2	p_filter
op	20:12	0:0	2	->
water	20:14	0:0	2	p_sys
op	20:19	0:0	2	->
water	20:21	0:0	2	p_pre_hough
op	20:33	0:0	2	=
water	20:35	0:0	2	NULL
water	20:39	0:0	2	;
call	21:4	22:35	2	config_ChainParse
arg	21:23	21:31	3	p_filter
water	21:23	0:0	4	p_filter
arg	21:33	21:46	3	FILTER_PREFIX
water	21:33	0:0	4	FILTER_PREFIX
arg	21:48	21:67	3	ppsz_filter_options
water	21:48	0:0	4	ppsz_filter_options
arg	22:19	22:35	3	p_filter->p_cfg
water	22:19	0:0	4	p_filter
op	22:27	0:0	4	->
water	22:29	0:0	4	p_cfg
water	22:36	0:0	2	;
if	23:4	29:4	2	(! ( psz_method =var_CreateGetNonEmptyStringCommand (p_filter ,FILTER_PREFIX "mode" ) ))
cond	23:8	24:76	3	! ( psz_method =var_CreateGetNonEmptyStringCommand (p_filter ,FILTER_PREFIX "mode" ) )
op	23:8	0:0	4	!
water	23:9	0:0	4	(
water	23:10	0:0	4	psz_method
op	23:21	0:0	4	=
call	24:8	24:75	4	var_CreateGetNonEmptyStringCommand
arg	24:44	24:52	5	p_filter
water	24:44	0:0	6	p_filter
arg	24:54	24:75	5	FILTER_PREFIX"mode"
water	24:54	0:0	6	FILTER_PREFIX
water	24:68	0:0	6	"mode"
water	24:76	0:0	4	)
stmts	25:4	29:4	3	
water	25:4	0:0	4	{
call	26:8	27:44	4	msg_Err
arg	26:17	26:25	5	p_filter
water	26:17	0:0	6	p_filter
arg	26:27	27:44	5	"configuration variable "FILTER_PREFIX"mode empty"
water	26:27	0:0	6	"configuration variable "
water	27:17	0:0	6	FILTER_PREFIX
water	27:31	0:0	6	"mode empty"
water	27:45	0:0	4	;
water	28:8	0:0	4	p_filter
op	28:16	0:0	4	->
water	28:18	0:0	4	p_sys
op	28:23	0:0	4	->
water	28:25	0:0	4	i_mode
op	28:32	0:0	4	=
water	28:34	0:0	4	GRADIENT
water	28:42	0:0	4	;
water	29:4	0:0	4	}
else	30:4	49:4	2
stmts	31:4	49:4	3	
water	31:4	0:0	4	{
if	32:8	35:8	4	(!strcmp (psz_method ,"gradient" ))
cond	32:12	32:44	5	!strcmp (psz_method ,"gradient" )
op	32:12	0:0	6	!
call	32:13	32:44	6	strcmp
arg	32:21	32:31	7	psz_method
water	32:21	0:0	8	psz_method
arg	32:33	32:44	7	"gradient"
water	32:33	0:0	8	"gradient"
stmts	33:8	35:8	5	
water	33:8	0:0	6	{
water	34:12	0:0	6	p_filter
op	34:20	0:0	6	->
water	34:22	0:0	6	p_sys
op	34:27	0:0	6	->
water	34:29	0:0	6	i_mode
op	34:36	0:0	6	=
water	34:38	0:0	6	GRADIENT
water	34:46	0:0	6	;
water	35:8	0:0	6	}
else	36:8	39:8	4
stmts	36:13	39:8	5	
if	36:13	39:8	6	(!strcmp (psz_method ,"edge" ))
cond	36:17	36:45	7	!strcmp (psz_method ,"edge" )
op	36:17	0:0	8	!
call	36:18	36:45	8	strcmp
arg	36:26	36:36	9	psz_method
water	36:26	0:0	10	psz_method
arg	36:38	36:45	9	"edge"
water	36:38	0:0	10	"edge"
stmts	37:8	39:8	7	
water	37:8	0:0	8	{
water	38:12	0:0	8	p_filter
op	38:20	0:0	8	->
water	38:22	0:0	8	p_sys
op	38:27	0:0	8	->
water	38:29	0:0	8	i_mode
op	38:36	0:0	8	=
water	38:38	0:0	8	EDGE
water	38:42	0:0	8	;
water	39:8	0:0	8	}
else	40:8	43:8	4
stmts	40:13	43:8	5	
if	40:13	43:8	6	(!strcmp (psz_method ,"hough" ))
cond	40:17	40:46	7	!strcmp (psz_method ,"hough" )
op	40:17	0:0	8	!
call	40:18	40:46	8	strcmp
arg	40:26	40:36	9	psz_method
water	40:26	0:0	10	psz_method
arg	40:38	40:46	9	"hough"
water	40:38	0:0	10	"hough"
stmts	41:8	43:8	7	
water	41:8	0:0	8	{
water	42:12	0:0	8	p_filter
op	42:20	0:0	8	->
water	42:22	0:0	8	p_sys
op	42:27	0:0	8	->
water	42:29	0:0	8	i_mode
op	42:36	0:0	8	=
water	42:38	0:0	8	HOUGH
water	42:43	0:0	8	;
water	43:8	0:0	8	}
else	44:8	48:8	4
stmts	45:8	48:8	5	
water	45:8	0:0	6	{
call	46:12	46:82	6	msg_Err
arg	46:21	46:29	7	p_filter
water	46:21	0:0	8	p_filter
arg	46:31	46:69	7	"no valid gradient mode provided (%s)"
water	46:31	0:0	8	"no valid gradient mode provided (%s)"
arg	46:71	46:82	7	psz_method
water	46:71	0:0	8	psz_method
water	46:83	0:0	6	;
water	47:12	0:0	6	p_filter
op	47:20	0:0	6	->
water	47:22	0:0	6	p_sys
op	47:27	0:0	6	->
water	47:29	0:0	6	i_mode
op	47:36	0:0	6	=
water	47:38	0:0	6	GRADIENT
water	47:46	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}
call	50:4	50:21	2	free
arg	50:10	50:21	3	psz_method
water	50:10	0:0	4	psz_method
water	50:22	0:0	2	;
water	51:4	0:0	2	p_filter
op	51:12	0:0	2	->
water	51:14	0:0	2	p_sys
op	51:19	0:0	2	->
water	51:21	0:0	2	i_gradient_type
op	51:37	0:0	2	=
call	52:8	52:68	2	var_CreateGetIntegerCommand
arg	52:37	52:45	3	p_filter
water	52:37	0:0	4	p_filter
arg	52:47	52:68	3	FILTER_PREFIX"type"
water	52:47	0:0	4	FILTER_PREFIX
water	52:61	0:0	4	"type"
water	52:69	0:0	2	;
water	53:4	0:0	2	p_filter
op	53:12	0:0	2	->
water	53:14	0:0	2	p_sys
op	53:19	0:0	2	->
water	53:21	0:0	2	b_cartoon
op	53:31	0:0	2	=
call	54:8	54:68	2	var_CreateGetBoolCommand
arg	54:34	54:42	3	p_filter
water	54:34	0:0	4	p_filter
arg	54:44	54:68	3	FILTER_PREFIX"cartoon"
water	54:44	0:0	4	FILTER_PREFIX
water	54:58	0:0	4	"cartoon"
water	54:69	0:0	2	;
call	55:4	55:43	2	vlc_mutex_init
arg	55:20	55:43	3	&p_filter->p_sys->lock
op	55:20	0:0	4	&
water	55:21	0:0	4	p_filter
op	55:29	0:0	4	->
water	55:31	0:0	4	p_sys
op	55:36	0:0	4	->
water	55:38	0:0	4	lock
water	55:44	0:0	2	;
call	56:4	57:55	2	var_AddCallback
arg	56:21	56:29	3	p_filter
water	56:21	0:0	4	p_filter
arg	56:31	56:51	3	FILTER_PREFIX"mode"
water	56:31	0:0	4	FILTER_PREFIX
water	56:45	0:0	4	"mode"
arg	57:21	57:37	3	GradientCallback
water	57:21	0:0	4	GradientCallback
arg	57:39	57:55	3	p_filter->p_sys
water	57:39	0:0	4	p_filter
op	57:47	0:0	4	->
water	57:49	0:0	4	p_sys
water	57:56	0:0	2	;
call	58:4	59:55	2	var_AddCallback
arg	58:21	58:29	3	p_filter
water	58:21	0:0	4	p_filter
arg	58:31	58:51	3	FILTER_PREFIX"type"
water	58:31	0:0	4	FILTER_PREFIX
water	58:45	0:0	4	"type"
arg	59:21	59:37	3	GradientCallback
water	59:21	0:0	4	GradientCallback
arg	59:39	59:55	3	p_filter->p_sys
water	59:39	0:0	4	p_filter
op	59:47	0:0	4	->
water	59:49	0:0	4	p_sys
water	59:56	0:0	2	;
call	60:4	61:55	2	var_AddCallback
arg	60:21	60:29	3	p_filter
water	60:21	0:0	4	p_filter
arg	60:31	60:54	3	FILTER_PREFIX"cartoon"
water	60:31	0:0	4	FILTER_PREFIX
water	60:45	0:0	4	"cartoon"
arg	61:21	61:37	3	GradientCallback
water	61:21	0:0	4	GradientCallback
arg	61:39	61:55	3	p_filter->p_sys
water	61:39	0:0	4	p_filter
op	61:47	0:0	4	->
water	61:49	0:0	4	p_sys
water	61:56	0:0	2	;
water	62:4	0:0	2	p_filter
op	62:12	0:0	2	->
water	62:14	0:0	2	p_sys
op	62:19	0:0	2	->
water	62:21	0:0	2	p_buf32
op	62:29	0:0	2	=
water	62:31	0:0	2	NULL
water	62:35	0:0	2	;
water	63:4	0:0	2	p_filter
op	63:12	0:0	2	->
water	63:14	0:0	2	p_sys
op	63:19	0:0	2	->
water	63:21	0:0	2	p_buf32_bis
op	63:33	0:0	2	=
water	63:35	0:0	2	NULL
water	63:39	0:0	2	;
water	64:4	0:0	2	p_filter
op	64:12	0:0	2	->
water	64:14	0:0	2	p_sys
op	64:19	0:0	2	->
water	64:21	0:0	2	p_buf8
op	64:28	0:0	2	=
water	64:30	0:0	2	NULL
water	64:34	0:0	2	;
return	65:4	65:22	2	VLC_SUCCESS
water	65:11	0:0	3	VLC_SUCCESS

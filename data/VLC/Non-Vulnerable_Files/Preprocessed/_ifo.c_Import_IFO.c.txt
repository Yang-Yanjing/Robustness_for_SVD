func	2:0	40:0	0	int	Import_IFO
params	2:14	0:0	1	
param	2:16	2:37	2	vlc_object_t *	p_this
stmnts	0:0	39:22	1	
decl	4:4	4:40	2	demux_t	*p_demux
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	demux_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	p_this
if	5:4	6:27	2	(! p_demux -> psz_file)
cond	5:8	5:18	3	! p_demux -> psz_file
op	5:8	0:0	4	!
water	5:9	0:0	4	p_demux
op	5:16	0:0	4	->
water	5:18	0:0	4	psz_file
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
decl	7:4	7:44	2	size_t	len
op	7:15	0:0	2	=
call	7:17	7:43	3	strlen
arg	7:25	7:43	4	p_demux->psz_file
water	7:25	0:0	5	p_demux
op	7:32	0:0	5	->
water	7:34	0:0	5	psz_file
decl	8:4	8:71	2	char	*psz_file
op	8:19	0:0	2	=
water	8:21	0:0	2	p_demux
op	8:28	0:0	2	->
water	8:30	0:0	2	psz_file
op	8:39	0:0	2	+
water	8:41	0:0	2	len
op	8:45	0:0	2	-
call	8:47	8:70	3	strlen
arg	8:55	8:70	4	"VIDEO_TS.IFO"
water	8:55	0:0	5	"VIDEO_TS.IFO"
if	13:4	24:4	2	(len >strlen ("VIDEO_TS.IFO" ) && ( !strcasecmp (psz_file ,"VIDEO_TS.IFO" ) || ( !strncasecmp (psz_file ,"VTS_" ,4 ) && !strcasecmp (psz_file +strlen ("VTS_00_0" ) ,".IFO" ) ) ))
cond	13:8	16:69	3	len >strlen ("VIDEO_TS.IFO" ) && ( !strcasecmp (psz_file ,"VIDEO_TS.IFO" ) || ( !strncasecmp (psz_file ,"VTS_" ,4 ) && !strcasecmp (psz_file +strlen ("VTS_00_0" ) ,".IFO" ) ) )
water	13:8	0:0	4	len
op	13:12	0:0	4	>
call	13:14	13:37	4	strlen
arg	13:22	13:37	5	"VIDEO_TS.IFO"
water	13:22	0:0	6	"VIDEO_TS.IFO"
op	14:8	0:0	4	&&
water	14:11	0:0	4	(
op	14:13	0:0	4	!
call	14:14	14:51	4	strcasecmp
arg	14:26	14:34	5	psz_file
water	14:26	0:0	6	psz_file
arg	14:36	14:51	5	"VIDEO_TS.IFO"
water	14:36	0:0	6	"VIDEO_TS.IFO"
op	15:8	0:0	4	||
water	15:11	0:0	4	(
op	15:12	0:0	4	!
call	15:13	15:46	4	strncasecmp
arg	15:26	15:34	5	psz_file
water	15:26	0:0	6	psz_file
arg	15:36	15:42	5	"VTS_"
water	15:36	0:0	6	"VTS_"
arg	15:44	15:46	5	4
water	15:44	0:0	6	4
op	16:8	0:0	4	&&
op	16:11	0:0	4	!
call	16:12	16:65	4	strcasecmp
arg	16:24	16:56	5	psz_file+strlen("VTS_00_0")
water	16:24	0:0	6	psz_file
op	16:33	0:0	6	+
call	16:35	16:54	6	strlen
arg	16:43	16:54	7	"VTS_00_0"
water	16:43	0:0	8	"VTS_00_0"
arg	16:58	16:65	5	".IFO"
water	16:58	0:0	6	".IFO"
water	16:67	0:0	4	)
water	16:69	0:0	4	)
stmts	17:4	24:4	3	
water	17:4	0:0	4	{
decl	18:8	18:18	4	int	i_peek
decl	19:8	19:29	4	const uint8_t	*p_peek
water	20:8	0:0	4	i_peek
op	20:15	0:0	4	=
call	20:17	20:53	4	stream_Peek
arg	20:30	20:40	5	p_demux->s
water	20:30	0:0	6	p_demux
op	20:37	0:0	6	->
water	20:39	0:0	6	s
arg	20:42	20:49	5	&p_peek
op	20:42	0:0	6	&
water	20:43	0:0	6	p_peek
arg	20:51	20:53	5	8
water	20:51	0:0	6	8
water	20:54	0:0	4	;
if	21:8	22:31	4	(i_peek != 8 ||memcmp (p_peek ,"DVDVIDEO" ,8 ))
cond	21:12	21:57	5	i_peek != 8 ||memcmp (p_peek ,"DVDVIDEO" ,8 )
water	21:12	0:0	6	i_peek
op	21:19	0:0	6	!=
water	21:22	0:0	6	8
op	21:24	0:0	6	||
call	21:27	21:57	6	memcmp
arg	21:35	21:41	7	p_peek
water	21:35	0:0	8	p_peek
arg	21:43	21:53	7	"DVDVIDEO"
water	21:43	0:0	8	"DVDVIDEO"
arg	21:55	21:57	7	8
water	21:55	0:0	8	8
stmts	22:12	22:31	5	
return	22:12	22:31	6	VLC_EGENERIC
water	22:19	0:0	7	VLC_EGENERIC
water	23:8	0:0	4	p_demux
op	23:15	0:0	4	->
water	23:17	0:0	4	pf_demux
op	23:26	0:0	4	=
water	23:28	0:0	4	Demux
water	23:33	0:0	4	;
water	24:4	0:0	4	}
else	26:4	34:4	2
stmts	26:9	34:4	3	
if	26:9	34:4	4	(len >= 12 && !strcmp (& p_demux -> psz_file [ len - 12 ] ,"VR_MANGR.IFO" ))
cond	26:13	26:78	5	len >= 12 && !strcmp (& p_demux -> psz_file [ len - 12 ] ,"VR_MANGR.IFO" )
water	26:13	0:0	6	len
op	26:17	0:0	6	>=
water	26:20	0:0	6	12
op	26:23	0:0	6	&&
op	26:26	0:0	6	!
call	26:27	26:78	6	strcmp
arg	26:35	26:61	7	&p_demux->psz_file[len-12]
op	26:35	0:0	8	&
water	26:36	0:0	8	p_demux
op	26:43	0:0	8	->
water	26:45	0:0	8	psz_file
op	26:53	0:0	8	[
water	26:54	0:0	8	len
op	26:57	0:0	8	-
water	26:58	0:0	8	12
op	26:60	0:0	8	]
arg	26:63	26:78	7	"VR_MANGR.IFO"
water	26:63	0:0	8	"VR_MANGR.IFO"
stmts	27:4	34:4	5	
water	27:4	0:0	6	{
decl	28:8	28:18	6	int	i_peek
decl	29:8	29:29	6	const uint8_t	*p_peek
water	30:8	0:0	6	i_peek
op	30:15	0:0	6	=
call	30:17	30:53	6	stream_Peek
arg	30:30	30:40	7	p_demux->s
water	30:30	0:0	8	p_demux
op	30:37	0:0	8	->
water	30:39	0:0	8	s
arg	30:42	30:49	7	&p_peek
op	30:42	0:0	8	&
water	30:43	0:0	8	p_peek
arg	30:51	30:53	7	8
water	30:51	0:0	8	8
water	30:54	0:0	6	;
if	31:8	32:31	6	(i_peek != 8 ||memcmp (p_peek ,"DVD_RTR_" ,8 ))
cond	31:12	31:57	7	i_peek != 8 ||memcmp (p_peek ,"DVD_RTR_" ,8 )
water	31:12	0:0	8	i_peek
op	31:19	0:0	8	!=
water	31:22	0:0	8	8
op	31:24	0:0	8	||
call	31:27	31:57	8	memcmp
arg	31:35	31:41	9	p_peek
water	31:35	0:0	10	p_peek
arg	31:43	31:53	9	"DVD_RTR_"
water	31:43	0:0	10	"DVD_RTR_"
arg	31:55	31:57	9	8
water	31:55	0:0	10	8
stmts	32:12	32:31	7	
return	32:12	32:31	8	VLC_EGENERIC
water	32:19	0:0	9	VLC_EGENERIC
water	33:8	0:0	6	p_demux
op	33:15	0:0	6	->
water	33:17	0:0	6	pf_demux
op	33:26	0:0	6	=
water	33:28	0:0	6	DemuxDVD_VR
water	33:39	0:0	6	;
water	34:4	0:0	6	}
else	35:4	36:27	2
stmts	36:8	36:27	3	
return	36:8	36:27	4	VLC_EGENERIC
water	36:15	0:0	5	VLC_EGENERIC
water	38:4	0:0	2	p_demux
op	38:11	0:0	2	->
water	38:13	0:0	2	pf_control
op	38:24	0:0	2	=
water	38:26	0:0	2	Control
water	38:33	0:0	2	;
return	39:4	39:22	2	VLC_SUCCESS
water	39:11	0:0	3	VLC_SUCCESS

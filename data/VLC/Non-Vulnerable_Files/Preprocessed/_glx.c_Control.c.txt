func	2:0	69:0	0	static int	Control
params	2:19	0:0	1	
param	2:20	2:38	2	vout_display_t *	vd
param	2:40	2:49	2	int	query
param	2:51	2:61	2	va_list	ap
stmnts	0:0	68:4	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
switch	5:4	68:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	68:4	3	
water	6:4	0:0	4	{
label	7:4	7:39	4	case VOUT_DISPLAY_CHANGE_FULLSCREEN :
water	8:4	0:0	4	{
decl	9:8	9:77	4	const vout_display_cfg_t	*c
op	9:36	0:0	4	=
call	9:38	9:76	5	va_arg
arg	9:46	9:48	6	ap
water	9:46	0:0	7	ap
arg	9:50	9:76	6	constvout_display_cfg_t*
water	9:50	0:0	7	const
water	9:56	0:0	7	vout_display_cfg_t
op	9:75	0:0	7	*
return	10:8	10:71	4	vout_window_SetFullScreen(sys->embed,c->is_fullscreen)
call	10:15	10:70	5	vout_window_SetFullScreen
arg	10:42	10:52	6	sys->embed
water	10:42	0:0	7	sys
op	10:45	0:0	7	->
water	10:47	0:0	7	embed
arg	10:54	10:70	6	c->is_fullscreen
water	10:54	0:0	7	c
op	10:55	0:0	7	->
water	10:57	0:0	7	is_fullscreen
water	11:4	0:0	4	}
label	12:4	12:41	4	case VOUT_DISPLAY_CHANGE_WINDOW_STATE :
water	13:4	0:0	4	{
water	14:8	0:0	4	unsigned
water	14:17	0:0	4	state
op	14:23	0:0	4	=
call	14:25	14:45	4	va_arg
arg	14:33	14:35	5	ap
water	14:33	0:0	6	ap
arg	14:37	14:45	5	unsigned
water	14:37	0:0	6	unsigned
water	14:46	0:0	4	;
return	15:8	15:55	4	vout_window_SetState(sys->embed,state)
call	15:15	15:54	5	vout_window_SetState
arg	15:37	15:47	6	sys->embed
water	15:37	0:0	7	sys
op	15:40	0:0	7	->
water	15:42	0:0	7	embed
arg	15:49	15:54	6	state
water	15:49	0:0	7	state
water	16:4	0:0	4	}
label	17:4	17:41	4	case VOUT_DISPLAY_CHANGE_DISPLAY_SIZE :
label	18:4	18:43	4	case VOUT_DISPLAY_CHANGE_DISPLAY_FILLED :
label	19:4	19:33	4	case VOUT_DISPLAY_CHANGE_ZOOM :
label	20:4	20:42	4	case VOUT_DISPLAY_CHANGE_SOURCE_ASPECT :
label	21:4	21:40	4	case VOUT_DISPLAY_CHANGE_SOURCE_CROP :
water	22:4	0:0	4	{
decl	23:8	23:37	4	const vout_display_cfg_t	*cfg
decl	24:8	24:36	4	const video_format_t	*source
if	25:8	30:8	4	(query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT || query == VOUT_DISPLAY_CHANGE_SOURCE_CROP)
cond	25:12	26:21	5	query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT || query == VOUT_DISPLAY_CHANGE_SOURCE_CROP
water	25:12	0:0	6	query
op	25:18	0:0	6	==
water	25:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
op	26:9	0:0	6	||
water	26:12	0:0	6	query
op	26:18	0:0	6	==
water	26:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_CROP
stmts	27:8	30:8	5	
water	27:8	0:0	6	{
water	28:12	0:0	6	source
op	28:19	0:0	6	=
water	28:21	0:0	6	(
water	28:22	0:0	6	const
water	28:28	0:0	6	video_format_t
op	28:43	0:0	6	*
water	28:44	0:0	6	)
call	28:45	28:79	6	va_arg
arg	28:53	28:55	7	ap
water	28:53	0:0	8	ap
arg	28:57	28:79	7	constvideo_format_t*
water	28:57	0:0	8	const
water	28:63	0:0	8	video_format_t
op	28:78	0:0	8	*
water	28:80	0:0	6	;
water	29:12	0:0	6	cfg
op	29:16	0:0	6	=
water	29:18	0:0	6	vd
op	29:20	0:0	6	->
water	29:22	0:0	6	cfg
water	29:25	0:0	6	;
water	30:8	0:0	6	}
else	31:8	35:8	4
stmts	32:8	35:8	5	
water	32:8	0:0	6	{
water	33:12	0:0	6	source
op	33:19	0:0	6	=
op	33:21	0:0	6	&
water	33:22	0:0	6	vd
op	33:24	0:0	6	->
water	33:26	0:0	6	source
water	33:32	0:0	6	;
water	34:12	0:0	6	cfg
op	34:16	0:0	6	=
water	34:18	0:0	6	(
water	34:19	0:0	6	const
water	34:25	0:0	6	vout_display_cfg_t
op	34:43	0:0	6	*
water	34:44	0:0	6	)
call	34:45	34:83	6	va_arg
arg	34:53	34:55	7	ap
water	34:53	0:0	8	ap
arg	34:57	34:83	7	constvout_display_cfg_t*
water	34:57	0:0	8	const
water	34:63	0:0	8	vout_display_cfg_t
op	34:82	0:0	8	*
water	34:84	0:0	6	;
water	35:8	0:0	6	}
if	37:8	42:8	4	(query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE &&va_arg (ap ,int ))
cond	37:12	37:72	5	query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE &&va_arg (ap ,int )
water	37:12	0:0	6	query
op	37:18	0:0	6	==
water	37:21	0:0	6	VOUT_DISPLAY_CHANGE_DISPLAY_SIZE
op	37:54	0:0	6	&&
call	37:57	37:72	6	va_arg
arg	37:65	37:67	7	ap
water	37:65	0:0	8	ap
arg	37:69	37:72	7	int
water	37:69	0:0	8	int
stmts	38:8	42:8	5	
water	38:8	0:0	6	{
call	39:12	40:72	6	vout_window_SetSize
arg	39:33	39:43	7	sys->embed
water	39:33	0:0	8	sys
op	39:36	0:0	8	->
water	39:38	0:0	8	embed
arg	40:33	40:51	7	cfg->display.width
water	40:33	0:0	8	cfg
op	40:36	0:0	8	->
water	40:38	0:0	8	display
op	40:45	0:0	8	.
water	40:46	0:0	8	width
arg	40:53	40:72	7	cfg->display.height
water	40:53	0:0	8	cfg
op	40:56	0:0	8	->
water	40:58	0:0	8	display
op	40:65	0:0	8	.
water	40:66	0:0	8	height
water	40:73	0:0	6	;
return	41:12	41:31	6	VLC_EGENERIC
water	41:19	0:0	7	VLC_EGENERIC
water	42:8	0:0	6	}
decl	43:8	43:34	4	vout_display_place_t	place
call	44:8	44:61	4	vout_display_PlacePicture
arg	44:35	44:41	5	&place
op	44:35	0:0	6	&
water	44:36	0:0	6	place
arg	44:43	44:49	5	source
water	44:43	0:0	6	source
arg	44:51	44:54	5	cfg
water	44:51	0:0	6	cfg
arg	44:56	44:61	5	false
water	44:56	0:0	6	false
water	44:62	0:0	4	;
call	45:8	45:35	4	vlc_gl_MakeCurrent
arg	45:28	45:35	5	sys->gl
water	45:28	0:0	6	sys
op	45:31	0:0	6	->
water	45:33	0:0	6	gl
water	45:36	0:0	4	;
call	46:8	46:63	4	glViewport
arg	46:20	46:27	5	place.x
water	46:20	0:0	6	place
op	46:25	0:0	6	.
water	46:26	0:0	6	x
arg	46:29	46:36	5	place.y
water	46:29	0:0	6	place
op	46:34	0:0	6	.
water	46:35	0:0	6	y
arg	46:38	46:49	5	place.width
water	46:38	0:0	6	place
op	46:43	0:0	6	.
water	46:44	0:0	6	width
arg	46:51	46:63	5	place.height
water	46:51	0:0	6	place
op	46:56	0:0	6	.
water	46:57	0:0	6	height
water	46:64	0:0	4	;
call	47:8	47:38	4	vlc_gl_ReleaseCurrent
arg	47:31	47:38	5	sys->gl
water	47:31	0:0	6	sys
op	47:34	0:0	6	->
water	47:36	0:0	6	gl
water	47:39	0:0	4	;
return	48:8	48:26	4	VLC_SUCCESS
water	48:15	0:0	5	VLC_SUCCESS
water	49:4	0:0	4	}
label	52:4	52:32	4	case VOUT_DISPLAY_HIDE_MOUSE :
call	53:8	54:77	4	xcb_change_window_attributes
arg	53:38	53:47	5	sys->conn
water	53:38	0:0	6	sys
op	53:41	0:0	6	->
water	53:43	0:0	6	conn
arg	53:49	53:71	5	sys->embed->handle.xid
water	53:49	0:0	6	sys
op	53:52	0:0	6	->
water	53:54	0:0	6	embed
op	53:59	0:0	6	->
water	53:61	0:0	6	handle
op	53:67	0:0	6	.
water	53:68	0:0	6	xid
arg	54:36	54:49	5	XCB_CW_CURSOR
water	54:36	0:0	6	XCB_CW_CURSOR
arg	54:51	54:77	5	&(uint32_t){sys->cursor}
op	54:51	0:0	6	&
water	54:52	0:0	6	(
water	54:53	0:0	6	uint32_t
water	54:61	0:0	6	)
water	54:62	0:0	6	{
water	54:64	0:0	6	sys
op	54:67	0:0	6	->
water	54:69	0:0	6	cursor
water	54:76	0:0	6	}
water	54:78	0:0	4	;
call	55:8	55:28	4	xcb_flush
arg	55:19	55:28	5	sys->conn
water	55:19	0:0	6	sys
op	55:22	0:0	6	->
water	55:24	0:0	6	conn
water	55:29	0:0	4	;
return	56:8	56:26	4	VLC_SUCCESS
water	56:15	0:0	5	VLC_SUCCESS
label	57:4	57:32	4	case VOUT_DISPLAY_GET_OPENGL :
water	58:4	0:0	4	{
decl	59:8	59:48	4	vlc_gl_t	**gl
op	59:22	0:0	4	=
call	59:24	59:47	5	va_arg
arg	59:32	59:34	6	ap
water	59:32	0:0	7	ap
arg	59:36	59:47	6	vlc_gl_t**
water	59:36	0:0	7	vlc_gl_t
op	59:45	0:0	7	*
op	59:46	0:0	7	*
op	60:8	0:0	4	*
water	60:9	0:0	4	gl
op	60:12	0:0	4	=
water	60:14	0:0	4	sys
op	60:17	0:0	4	->
water	60:19	0:0	4	gl
water	60:21	0:0	4	;
return	61:8	61:26	4	VLC_SUCCESS
water	61:15	0:0	5	VLC_SUCCESS
water	62:4	0:0	4	}
label	63:4	63:36	4	case VOUT_DISPLAY_RESET_PICTURES :
call	64:8	64:17	4	assert
arg	64:16	64:17	5	0
water	64:16	0:0	6	0
water	64:18	0:0	4	;
label	65:4	65:11	4	default :
call	66:8	66:58	4	msg_Err
arg	66:17	66:19	5	vd
water	66:17	0:0	6	vd
arg	66:21	66:58	5	"Unknown request in XCB vout display"
water	66:21	0:0	6	"Unknown request in XCB vout display"
water	66:59	0:0	4	;
return	67:8	67:27	4	VLC_EGENERIC
water	67:15	0:0	5	VLC_EGENERIC
water	68:4	0:0	4	}

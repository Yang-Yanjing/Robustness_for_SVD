func	2:0	126:0	0	static int	vlc_sd_probe_Open
params	2:28	0:0	1	
param	2:30	2:48	2	vlc_object_t *	obj
stmnts	0:0	125:21	1	
decl	4:4	4:43	2	vlc_probe_t	*probe
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vlc_probe_t
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:40	0:0	2	obj
decl	5:4	5:31	2	char	**ppsz_filelist
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:31	2	char	**ppsz_fileend
op	6:25	0:0	2	=
water	6:27	0:0	2	NULL
decl	7:4	7:20	2	char	**ppsz_file
decl	8:4	8:18	2	char	*psz_name
decl	9:4	9:31	2	char	**ppsz_dir_list
op	9:25	0:0	2	=
water	9:27	0:0	2	NULL
decl	10:4	10:19	2	char	**ppsz_dir
decl	11:4	11:23	2	lua_State	*L
op	11:17	0:0	2	=
water	11:19	0:0	2	NULL
call	12:4	12:42	2	vlclua_dir_list
arg	12:21	12:25	3	"sd"
water	12:21	0:0	4	"sd"
arg	12:27	12:42	3	&ppsz_dir_list
op	12:27	0:0	4	&
water	12:28	0:0	4	ppsz_dir_list
water	12:43	0:0	2	;
for	13:4	104:4	2	(ppsz_dir = ppsz_dir_list ;* ppsz_dir;ppsz_dir ++)
forinit	13:9	13:33	3	ppsz_dir = ppsz_dir_list ;
water	13:9	0:0	4	ppsz_dir
op	13:18	0:0	4	=
water	13:20	0:0	4	ppsz_dir_list
water	13:33	0:0	4	;
cond	13:35	13:36	3	* ppsz_dir
op	13:35	0:0	4	*
water	13:36	0:0	4	ppsz_dir
forexpr	13:46	13:54	3	ppsz_dir ++
water	13:46	0:0	4	ppsz_dir
op	13:54	0:0	4	++
stmts	14:4	104:4	3	
water	14:4	0:0	4	{
decl	15:8	15:19	4	int	i_files
if	16:8	23:8	4	(ppsz_filelist)
cond	16:12	16:12	5	ppsz_filelist
water	16:12	0:0	6	ppsz_filelist
stmts	17:8	23:8	5	
water	17:8	0:0	6	{
for	18:12	20:34	6	(ppsz_file = ppsz_filelist ;ppsz_file < ppsz_fileend;ppsz_file ++)
forinit	18:17	18:42	7	ppsz_file = ppsz_filelist ;
water	18:17	0:0	8	ppsz_file
op	18:27	0:0	8	=
water	18:29	0:0	8	ppsz_filelist
water	18:42	0:0	8	;
cond	18:44	18:56	7	ppsz_file < ppsz_fileend
water	18:44	0:0	8	ppsz_file
op	18:54	0:0	8	<
water	18:56	0:0	8	ppsz_fileend
forexpr	19:17	19:26	7	ppsz_file ++
water	19:17	0:0	8	ppsz_file
op	19:26	0:0	8	++
stmts	20:16	20:34	7	
call	20:16	20:33	8	free
arg	20:22	20:33	9	*ppsz_file
op	20:22	0:0	10	*
water	20:23	0:0	10	ppsz_file
water	20:34	0:0	8	;
call	21:12	21:32	6	free
arg	21:18	21:32	7	ppsz_filelist
water	21:18	0:0	8	ppsz_filelist
water	21:33	0:0	6	;
water	22:12	0:0	6	ppsz_filelist
op	22:26	0:0	6	=
water	22:28	0:0	6	NULL
water	22:32	0:0	6	;
water	23:8	0:0	6	}
water	24:8	0:0	4	i_files
op	24:16	0:0	4	=
call	24:18	25:45	4	vlc_scandir
arg	24:31	24:40	5	*ppsz_dir
op	24:31	0:0	6	*
water	24:32	0:0	6	ppsz_dir
arg	24:42	24:56	5	&ppsz_filelist
op	24:42	0:0	6	&
water	24:43	0:0	6	ppsz_filelist
arg	24:58	24:69	5	file_select
water	24:58	0:0	6	file_select
arg	25:32	25:45	5	file_compare
water	25:32	0:0	6	file_compare
water	25:46	0:0	4	;
if	26:8	26:34	4	(i_files < 1)
cond	26:12	26:22	5	i_files < 1
water	26:12	0:0	6	i_files
op	26:20	0:0	6	<
water	26:22	0:0	6	1
stmts	26:26	26:34	5	
continue	26:26	26:34	6	
water	27:8	0:0	4	ppsz_fileend
op	27:21	0:0	4	=
water	27:23	0:0	4	ppsz_filelist
op	27:37	0:0	4	+
water	27:39	0:0	4	i_files
water	27:46	0:0	4	;
for	28:8	103:8	4	(ppsz_file = ppsz_filelist ;ppsz_file < ppsz_fileend;ppsz_file ++)
forinit	28:13	28:38	5	ppsz_file = ppsz_filelist ;
water	28:13	0:0	6	ppsz_file
op	28:23	0:0	6	=
water	28:25	0:0	6	ppsz_filelist
water	28:38	0:0	6	;
cond	28:40	28:52	5	ppsz_file < ppsz_fileend
water	28:40	0:0	6	ppsz_file
op	28:50	0:0	6	<
water	28:52	0:0	6	ppsz_fileend
forexpr	28:66	28:75	5	ppsz_file ++
water	28:66	0:0	6	ppsz_file
op	28:75	0:0	6	++
stmts	29:8	103:8	5	
water	29:8	0:0	6	{
decl	30:12	30:31	6	char	*psz_filename
if	31:12	35:12	6	(asprintf (& psz_filename ,"%s" DIR_SEP "%s" ,* ppsz_dir ,* ppsz_file ) < 0)
cond	31:16	32:71	7	asprintf (& psz_filename ,"%s" DIR_SEP "%s" ,* ppsz_dir ,* ppsz_file ) < 0
call	31:16	32:67	8	asprintf
arg	31:26	31:39	9	&psz_filename
op	31:26	0:0	10	&
water	31:27	0:0	10	psz_filename
arg	32:26	32:43	9	"%s"DIR_SEP"%s"
water	32:26	0:0	10	"%s"
water	32:31	0:0	10	DIR_SEP
water	32:39	0:0	10	"%s"
arg	32:45	32:54	9	*ppsz_dir
op	32:45	0:0	10	*
water	32:46	0:0	10	ppsz_dir
arg	32:56	32:67	9	*ppsz_file
op	32:56	0:0	10	*
water	32:57	0:0	10	ppsz_file
op	32:69	0:0	8	<
water	32:71	0:0	8	0
stmts	33:12	35:12	7	
water	33:12	0:0	8	{
goto	34:16	34:26	8	error
water	34:21	0:0	9	error
water	35:12	0:0	8	}
water	36:12	0:0	6	L
op	36:14	0:0	6	=
call	36:16	36:30	6	luaL_newstate
water	36:31	0:0	6	;
if	37:12	42:12	6	(! L)
cond	37:16	37:17	7	! L
op	37:16	0:0	8	!
water	37:17	0:0	8	L
stmts	38:12	42:12	7	
water	38:12	0:0	8	{
call	39:16	39:65	8	msg_Err
arg	39:25	39:30	9	probe
water	39:25	0:0	10	probe
arg	39:32	39:65	9	"Could not create new Lua State"
water	39:32	0:0	10	"Could not create new Lua State"
water	39:66	0:0	8	;
call	40:16	40:35	8	free
arg	40:22	40:35	9	psz_filename
water	40:22	0:0	10	psz_filename
water	40:36	0:0	8	;
goto	41:16	41:26	8	error
water	41:21	0:0	9	error
water	42:12	0:0	8	}
call	43:12	43:29	6	luaL_openlibs
arg	43:27	43:29	7	L
water	43:27	0:0	8	L
water	43:30	0:0	6	;
if	44:12	50:12	6	(vlclua_add_modules_path (L ,psz_filename ))
cond	44:16	44:57	7	vlclua_add_modules_path (L ,psz_filename )
call	44:16	44:57	8	vlclua_add_modules_path
arg	44:41	44:42	9	L
water	44:41	0:0	10	L
arg	44:44	44:57	9	psz_filename
water	44:44	0:0	10	psz_filename
stmts	45:12	50:12	7	
water	45:12	0:0	8	{
call	46:16	47:39	8	msg_Err
arg	46:25	46:30	9	probe
water	46:25	0:0	10	probe
arg	46:32	46:83	9	"Error while setting the module search path for %s"
water	46:32	0:0	10	"Error while setting the module search path for %s"
arg	47:26	47:39	9	psz_filename
water	47:26	0:0	10	psz_filename
water	47:40	0:0	8	;
call	48:16	48:35	8	free
arg	48:22	48:35	9	psz_filename
water	48:22	0:0	10	psz_filename
water	48:36	0:0	8	;
goto	49:16	49:26	8	error
water	49:21	0:0	9	error
water	50:12	0:0	8	}
if	51:12	59:12	6	(vlclua_dofile (VLC_OBJECT (probe ) ,L ,psz_filename ))
cond	51:16	51:66	7	vlclua_dofile (VLC_OBJECT (probe ) ,L ,psz_filename )
call	51:16	51:66	8	vlclua_dofile
arg	51:31	51:48	9	VLC_OBJECT(probe)
call	51:31	51:47	10	VLC_OBJECT
arg	51:42	51:47	11	probe
water	51:42	0:0	12	probe
arg	51:50	51:51	9	L
water	51:50	0:0	10	L
arg	51:53	51:66	9	psz_filename
water	51:53	0:0	10	psz_filename
stmts	52:12	59:12	7	
water	52:12	0:0	8	{
call	53:16	54:61	8	msg_Err
arg	53:25	53:30	9	probe
water	53:25	0:0	10	probe
arg	53:32	53:61	9	"Error loading script %s: %s"
water	53:32	0:0	10	"Error loading script %s: %s"
arg	53:63	53:75	9	psz_filename
water	53:63	0:0	10	psz_filename
arg	54:26	54:61	9	lua_tostring(L,lua_gettop(L))
call	54:26	54:59	10	lua_tostring
arg	54:40	54:41	11	L
water	54:40	0:0	12	L
arg	54:43	54:59	11	lua_gettop(L)
call	54:43	54:57	12	lua_gettop
arg	54:55	54:57	13	L
water	54:55	0:0	14	L
water	54:62	0:0	8	;
call	55:16	55:30	8	lua_pop
arg	55:25	55:26	9	L
water	55:25	0:0	10	L
arg	55:28	55:30	9	1
water	55:28	0:0	10	1
water	55:31	0:0	8	;
call	56:16	56:35	8	free
arg	56:22	56:35	9	psz_filename
water	56:22	0:0	10	psz_filename
water	56:36	0:0	8	;
call	57:16	57:29	8	lua_close
arg	57:27	57:29	9	L
water	57:27	0:0	10	L
water	57:30	0:0	8	;
continue	58:16	58:24	8	
water	59:12	0:0	8	}
decl	60:12	60:30	6	char	*psz_longname
decl	61:12	61:50	6	char	*temp
op	61:23	0:0	6	=
call	61:25	61:49	7	strchr
arg	61:33	61:43	8	*ppsz_file
op	61:33	0:0	9	*
water	61:34	0:0	9	ppsz_file
arg	61:45	61:49	8	'.'
water	61:45	0:0	9	'.'
if	62:12	63:28	6	(temp)
cond	62:16	62:16	7	temp
water	62:16	0:0	8	temp
stmts	63:16	63:28	7	
op	63:16	0:0	8	*
water	63:17	0:0	8	temp
op	63:22	0:0	8	=
water	63:24	0:0	8	'\0'
water	63:28	0:0	8	;
call	64:12	64:43	6	lua_getglobal
arg	64:27	64:28	7	L
water	64:27	0:0	8	L
arg	64:30	64:43	7	"descriptor"
water	64:30	0:0	8	"descriptor"
water	64:44	0:0	6	;
if	65:12	74:12	6	(!lua_isfunction (L ,lua_gettop (L ) ) ||lua_pcall (L ,0 ,1 ,0 ))
cond	65:16	65:79	7	!lua_isfunction (L ,lua_gettop (L ) ) ||lua_pcall (L ,0 ,1 ,0 )
op	65:16	0:0	8	!
call	65:17	65:52	8	lua_isfunction
arg	65:33	65:34	9	L
water	65:33	0:0	10	L
arg	65:36	65:52	9	lua_gettop(L)
call	65:36	65:50	10	lua_gettop
arg	65:48	65:50	11	L
water	65:48	0:0	12	L
op	65:54	0:0	8	||
call	65:57	65:79	8	lua_pcall
arg	65:68	65:69	9	L
water	65:68	0:0	10	L
arg	65:71	65:72	9	0
water	65:71	0:0	10	0
arg	65:74	65:75	9	1
water	65:74	0:0	10	1
arg	65:77	65:79	9	0
water	65:77	0:0	10	0
stmts	66:12	74:12	7	
water	66:12	0:0	8	{
call	67:16	67:82	8	msg_Warn
arg	67:26	67:31	9	probe
water	67:26	0:0	10	probe
arg	67:33	67:67	9	"No 'descriptor' function in '%s'"
water	67:33	0:0	10	"No 'descriptor' function in '%s'"
arg	67:69	67:82	9	psz_filename
water	67:69	0:0	10	psz_filename
water	67:83	0:0	8	;
call	68:16	68:30	8	lua_pop
arg	68:25	68:26	9	L
water	68:25	0:0	10	L
arg	68:28	68:30	9	1
water	68:28	0:0	10	1
water	68:31	0:0	8	;
if	69:16	73:16	8	(! ( psz_longname =strdup (* ppsz_file ) ))
cond	69:20	69:59	9	! ( psz_longname =strdup (* ppsz_file ) )
op	69:20	0:0	10	!
water	69:21	0:0	10	(
water	69:23	0:0	10	psz_longname
op	69:36	0:0	10	=
call	69:38	69:57	10	strdup
arg	69:46	69:57	11	*ppsz_file
op	69:46	0:0	12	*
water	69:47	0:0	12	ppsz_file
water	69:59	0:0	10	)
stmts	70:16	73:16	9	
water	70:16	0:0	10	{
call	71:20	71:39	10	free
arg	71:26	71:39	11	psz_filename
water	71:26	0:0	12	psz_filename
water	71:40	0:0	10	;
goto	72:20	72:30	10	error
water	72:25	0:0	11	error
water	73:16	0:0	10	}
water	74:12	0:0	8	}
else	75:12	84:12	6
stmts	76:12	84:12	7	
water	76:12	0:0	8	{
call	77:16	77:45	8	lua_getfield
arg	77:30	77:31	9	L
water	77:30	0:0	10	L
arg	77:33	77:35	9	-1
op	77:33	0:0	10	-
water	77:34	0:0	10	1
arg	77:37	77:45	9	"title"
water	77:37	0:0	10	"title"
water	77:46	0:0	8	;
if	78:16	83:16	8	(!lua_isstring (L ,- 1 ) || ! ( psz_longname =strdup (lua_tostring (L ,- 1 ) ) ))
cond	78:20	79:70	9	!lua_isstring (L ,- 1 ) || ! ( psz_longname =strdup (lua_tostring (L ,- 1 ) ) )
op	78:20	0:0	10	!
call	78:21	78:41	10	lua_isstring
arg	78:35	78:36	11	L
water	78:35	0:0	12	L
arg	78:38	78:41	11	-1
op	78:38	0:0	12	-
water	78:39	0:0	12	1
op	78:43	0:0	10	||
op	79:20	0:0	10	!
water	79:21	0:0	10	(
water	79:23	0:0	10	psz_longname
op	79:36	0:0	10	=
call	79:38	79:68	10	strdup
arg	79:46	79:68	11	lua_tostring(L,-1)
call	79:46	79:66	12	lua_tostring
arg	79:60	79:61	13	L
water	79:60	0:0	14	L
arg	79:63	79:66	13	-1
op	79:63	0:0	14	-
water	79:64	0:0	14	1
water	79:70	0:0	10	)
stmts	80:16	83:16	9	
water	80:16	0:0	10	{
call	81:20	81:39	10	free
arg	81:26	81:39	11	psz_filename
water	81:26	0:0	12	psz_filename
water	81:40	0:0	10	;
goto	82:20	82:30	10	error
water	82:25	0:0	11	error
water	83:16	0:0	10	}
water	84:12	0:0	8	}
decl	85:12	85:66	6	char	*psz_file_esc
op	85:31	0:0	6	=
call	85:33	85:65	7	config_StringEscape
arg	85:54	85:65	8	*ppsz_file
op	85:54	0:0	9	*
water	85:55	0:0	9	ppsz_file
decl	86:12	86:72	6	char	*psz_longname_esc
op	86:35	0:0	6	=
call	86:37	86:71	7	config_StringEscape
arg	86:58	86:71	8	psz_longname
water	86:58	0:0	9	psz_longname
if	87:12	95:12	6	(asprintf (& psz_name ,"lua{sd='%s',longname='%s'}" ,psz_file_esc ,psz_longname_esc ) < 0)
cond	87:16	88:61	7	asprintf (& psz_name ,"lua{sd='%s',longname='%s'}" ,psz_file_esc ,psz_longname_esc ) < 0
call	87:16	88:57	8	asprintf
arg	87:26	87:35	9	&psz_name
op	87:26	0:0	10	&
water	87:27	0:0	10	psz_name
arg	87:37	87:65	9	"lua{sd='%s',longname='%s'}"
water	87:37	0:0	10	"lua{sd='%s',longname='%s'}"
arg	88:26	88:38	9	psz_file_esc
water	88:26	0:0	10	psz_file_esc
arg	88:40	88:57	9	psz_longname_esc
water	88:40	0:0	10	psz_longname_esc
op	88:59	0:0	8	<
water	88:61	0:0	8	0
stmts	89:12	95:12	7	
water	89:12	0:0	8	{
call	90:16	90:35	8	free
arg	90:22	90:35	9	psz_file_esc
water	90:22	0:0	10	psz_file_esc
water	90:36	0:0	8	;
call	91:16	91:39	8	free
arg	91:22	91:39	9	psz_longname_esc
water	91:22	0:0	10	psz_longname_esc
water	91:40	0:0	8	;
call	92:16	92:35	8	free
arg	92:22	92:35	9	psz_filename
water	92:22	0:0	10	psz_filename
water	92:36	0:0	8	;
call	93:16	93:35	8	free
arg	93:22	93:35	9	psz_longname
water	93:22	0:0	10	psz_longname
water	93:36	0:0	8	;
goto	94:16	94:26	8	error
water	94:21	0:0	9	error
water	95:12	0:0	8	}
call	96:12	96:31	6	free
arg	96:18	96:31	7	psz_file_esc
water	96:18	0:0	8	psz_file_esc
water	96:32	0:0	6	;
call	97:12	97:35	6	free
arg	97:18	97:35	7	psz_longname_esc
water	97:18	0:0	8	psz_longname_esc
water	97:36	0:0	6	;
call	98:12	98:77	6	vlc_sd_probe_Add
arg	98:30	98:35	7	probe
water	98:30	0:0	8	probe
arg	98:37	98:45	7	psz_name
water	98:37	0:0	8	psz_name
arg	98:47	98:59	7	psz_longname
water	98:47	0:0	8	psz_longname
arg	98:61	98:77	7	SD_CAT_INTERNET
water	98:61	0:0	8	SD_CAT_INTERNET
water	98:78	0:0	6	;
call	99:12	99:27	6	free
arg	99:18	99:27	7	psz_name
water	99:18	0:0	8	psz_name
water	99:28	0:0	6	;
call	100:12	100:31	6	free
arg	100:18	100:31	7	psz_longname
water	100:18	0:0	8	psz_longname
water	100:32	0:0	6	;
call	101:12	101:31	6	free
arg	101:18	101:31	7	psz_filename
water	101:18	0:0	8	psz_filename
water	101:32	0:0	6	;
call	102:12	102:25	6	lua_close
arg	102:23	102:25	7	L
water	102:23	0:0	8	L
water	102:26	0:0	6	;
water	103:8	0:0	6	}
water	104:4	0:0	4	}
if	105:4	111:4	2	(ppsz_filelist)
cond	105:8	105:8	3	ppsz_filelist
water	105:8	0:0	4	ppsz_filelist
stmts	106:4	111:4	3	
water	106:4	0:0	4	{
for	107:8	109:30	4	(ppsz_file = ppsz_filelist ;ppsz_file < ppsz_fileend;ppsz_file ++)
forinit	107:13	107:38	5	ppsz_file = ppsz_filelist ;
water	107:13	0:0	6	ppsz_file
op	107:23	0:0	6	=
water	107:25	0:0	6	ppsz_filelist
water	107:38	0:0	6	;
cond	107:40	107:52	5	ppsz_file < ppsz_fileend
water	107:40	0:0	6	ppsz_file
op	107:50	0:0	6	<
water	107:52	0:0	6	ppsz_fileend
forexpr	108:13	108:22	5	ppsz_file ++
water	108:13	0:0	6	ppsz_file
op	108:22	0:0	6	++
stmts	109:12	109:30	5	
call	109:12	109:29	6	free
arg	109:18	109:29	7	*ppsz_file
op	109:18	0:0	8	*
water	109:19	0:0	8	ppsz_file
water	109:30	0:0	6	;
call	110:8	110:28	4	free
arg	110:14	110:28	5	ppsz_filelist
water	110:14	0:0	6	ppsz_filelist
water	110:29	0:0	4	;
water	111:4	0:0	4	}
call	112:4	112:40	2	vlclua_dir_list_free
arg	112:26	112:40	3	ppsz_dir_list
water	112:26	0:0	4	ppsz_dir_list
water	112:41	0:0	2	;
return	113:4	113:29	2	VLC_PROBE_CONTINUE
water	113:11	0:0	3	VLC_PROBE_CONTINUE
label	114:0	114:5	2	error :
if	115:4	121:4	2	(ppsz_filelist)
cond	115:8	115:8	3	ppsz_filelist
water	115:8	0:0	4	ppsz_filelist
stmts	116:4	121:4	3	
water	116:4	0:0	4	{
for	117:8	119:30	4	(ppsz_file = ppsz_filelist ;ppsz_file < ppsz_fileend;ppsz_file ++)
forinit	117:13	117:38	5	ppsz_file = ppsz_filelist ;
water	117:13	0:0	6	ppsz_file
op	117:23	0:0	6	=
water	117:25	0:0	6	ppsz_filelist
water	117:38	0:0	6	;
cond	117:40	117:52	5	ppsz_file < ppsz_fileend
water	117:40	0:0	6	ppsz_file
op	117:50	0:0	6	<
water	117:52	0:0	6	ppsz_fileend
forexpr	118:13	118:22	5	ppsz_file ++
water	118:13	0:0	6	ppsz_file
op	118:22	0:0	6	++
stmts	119:12	119:30	5	
call	119:12	119:29	6	free
arg	119:18	119:29	7	*ppsz_file
op	119:18	0:0	8	*
water	119:19	0:0	8	ppsz_file
water	119:30	0:0	6	;
call	120:8	120:28	4	free
arg	120:14	120:28	5	ppsz_filelist
water	120:14	0:0	6	ppsz_filelist
water	120:29	0:0	4	;
water	121:4	0:0	4	}
if	122:4	123:22	2	(L)
cond	122:8	122:8	3	L
water	122:8	0:0	4	L
stmts	123:8	123:22	3	
call	123:8	123:21	4	lua_close
arg	123:19	123:21	5	L
water	123:19	0:0	6	L
water	123:22	0:0	4	;
call	124:4	124:40	2	vlclua_dir_list_free
arg	124:26	124:40	3	ppsz_dir_list
water	124:26	0:0	4	ppsz_dir_list
water	124:41	0:0	2	;
return	125:4	125:21	2	VLC_ENOMEM
water	125:11	0:0	3	VLC_ENOMEM

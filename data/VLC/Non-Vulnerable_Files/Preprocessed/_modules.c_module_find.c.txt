func	2:0	20:0	0	module_t *	module_find
params	2:22	0:0	1	
param	2:23	2:39	2	const char *	name
stmnts	0:0	19:15	1	
decl	4:4	4:16	2	size_t	count
decl	5:4	5:46	2	module_t	**list
op	5:20	0:0	2	=
call	5:22	5:45	3	module_list_get
arg	5:39	5:45	4	&count
op	5:39	0:0	5	&
water	5:40	0:0	5	count
call	6:4	6:24	2	assert
arg	6:12	6:24	3	name!=NULL
water	6:12	0:0	4	name
op	6:17	0:0	4	!=
water	6:20	0:0	4	NULL
water	6:25	0:0	2	;
for	7:4	17:4	2	( size_t i = 0 ;i < count;i ++)
forinit	0:0	7:21	3	 size_t i = 0 ;
decl	7:9	7:21	4	size_t	i
op	7:18	0:0	4	=
water	7:20	0:0	4	0
cond	7:23	7:27	3	i < count
water	7:23	0:0	4	i
op	7:25	0:0	4	<
water	7:27	0:0	4	count
forexpr	7:34	7:35	3	i ++
water	7:34	0:0	4	i
op	7:35	0:0	4	++
stmts	8:4	17:4	3	
water	8:4	0:0	4	{
decl	9:8	9:34	4	module_t	*module
op	9:25	0:0	4	=
water	9:27	0:0	4	list
op	9:31	0:0	4	[
water	9:32	0:0	4	i
op	9:33	0:0	4	]
if	10:8	11:20	4	(unlikely (module -> i_shortcuts == 0 ))
cond	10:12	10:45	5	unlikely (module -> i_shortcuts == 0 )
call	10:12	10:45	6	unlikely
arg	10:21	10:45	7	module->i_shortcuts==0
water	10:21	0:0	8	module
op	10:27	0:0	8	->
water	10:29	0:0	8	i_shortcuts
op	10:41	0:0	8	==
water	10:44	0:0	8	0
stmts	11:12	11:20	5	
continue	11:12	11:20	6	
if	12:8	16:8	4	(!strcmp (module -> pp_shortcuts [ 0 ] ,name ))
cond	12:12	12:50	5	!strcmp (module -> pp_shortcuts [ 0 ] ,name )
op	12:12	0:0	6	!
call	12:13	12:50	6	strcmp
arg	12:21	12:44	7	module->pp_shortcuts[0]
water	12:21	0:0	8	module
op	12:27	0:0	8	->
water	12:29	0:0	8	pp_shortcuts
op	12:41	0:0	8	[
water	12:42	0:0	8	0
op	12:43	0:0	8	]
arg	12:46	12:50	7	name
water	12:46	0:0	8	name
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
call	14:12	14:34	6	module_list_free
arg	14:30	14:34	7	list
water	14:30	0:0	8	list
water	14:35	0:0	6	;
return	15:12	15:25	6	module
water	15:19	0:0	7	module
water	16:8	0:0	6	}
water	17:4	0:0	4	}
call	18:4	18:26	2	module_list_free
arg	18:22	18:26	3	list
water	18:22	0:0	4	list
water	18:27	0:0	2	;
return	19:4	19:15	2	NULL
water	19:11	0:0	3	NULL

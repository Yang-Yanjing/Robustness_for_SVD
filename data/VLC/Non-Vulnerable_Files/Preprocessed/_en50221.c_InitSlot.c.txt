func	2:0	35:0	0	static int	InitSlot
params	2:19	0:0	1	
param	2:21	2:34	2	cam_t *	p_cam
param	2:36	2:47	2	int	i_slot
stmnts	4:4	34:23	1	
if	4:4	9:4	2	(TPDUSend (p_cam ,i_slot ,T_CREATE_TC ,NULL ,0 ) != VLC_SUCCESS)
cond	4:9	4:60	3	TPDUSend (p_cam ,i_slot ,T_CREATE_TC ,NULL ,0 ) != VLC_SUCCESS
call	4:9	4:55	4	TPDUSend
arg	4:19	4:24	5	p_cam
water	4:19	0:0	6	p_cam
arg	4:26	4:32	5	i_slot
water	4:26	0:0	6	i_slot
arg	4:34	4:45	5	T_CREATE_TC
water	4:34	0:0	6	T_CREATE_TC
arg	4:47	4:51	5	NULL
water	4:47	0:0	6	NULL
arg	4:53	4:55	5	0
water	4:53	0:0	6	0
op	4:57	0:0	4	!=
water	4:60	0:0	4	VLC_SUCCESS
stmts	5:4	9:4	3	
water	5:4	0:0	4	{
call	6:8	7:24	4	msg_Err
arg	6:17	6:27	5	p_cam->obj
water	6:17	0:0	6	p_cam
op	6:22	0:0	6	->
water	6:24	0:0	6	obj
arg	6:29	6:74	5	"en50221_Init: couldn't send TPDU on slot %d"
water	6:29	0:0	6	"en50221_Init: couldn't send TPDU on slot %d"
arg	7:17	7:24	5	i_slot
water	7:17	0:0	6	i_slot
water	7:25	0:0	4	;
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
for	11:4	28:4	2	( int i = 0 ;i < MAX_TC_RETRIES;i ++)
forinit	0:0	11:19	3	 int i = 0 ;
decl	11:10	11:19	4	int	i
op	11:16	0:0	4	=
water	11:18	0:0	4	0
cond	11:21	11:25	3	i < MAX_TC_RETRIES
water	11:21	0:0	4	i
op	11:23	0:0	4	<
water	11:25	0:0	4	MAX_TC_RETRIES
forexpr	11:41	11:42	3	i ++
water	11:41	0:0	4	i
op	11:42	0:0	4	++
stmts	12:4	28:4	3	
water	12:4	0:0	4	{
decl	13:8	13:21	4	uint8_t	i_tag
if	14:8	19:8	4	(TPDURecv (p_cam ,i_slot ,& i_tag ,NULL ,NULL ) == VLC_SUCCESS && i_tag == T_CTC_REPLY)
cond	14:13	15:26	5	TPDURecv (p_cam ,i_slot ,& i_tag ,NULL ,NULL ) == VLC_SUCCESS && i_tag == T_CTC_REPLY
call	14:13	14:57	6	TPDURecv
arg	14:23	14:28	7	p_cam
water	14:23	0:0	8	p_cam
arg	14:30	14:36	7	i_slot
water	14:30	0:0	8	i_slot
arg	14:38	14:44	7	&i_tag
op	14:38	0:0	8	&
water	14:39	0:0	8	i_tag
arg	14:46	14:50	7	NULL
water	14:46	0:0	8	NULL
arg	14:52	14:57	7	NULL
water	14:52	0:0	8	NULL
op	14:59	0:0	6	==
water	14:62	0:0	6	VLC_SUCCESS
op	15:14	0:0	6	&&
water	15:17	0:0	6	i_tag
op	15:23	0:0	6	==
water	15:26	0:0	6	T_CTC_REPLY
stmts	16:8	19:8	5	
water	16:8	0:0	6	{
water	17:12	0:0	6	p_cam
op	17:17	0:0	6	->
water	17:19	0:0	6	pb_active_slot
op	17:33	0:0	6	[
water	17:34	0:0	6	i_slot
op	17:40	0:0	6	]
op	17:42	0:0	6	=
water	17:44	0:0	6	true
water	17:48	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	}
if	20:8	27:8	4	(TPDUSend (p_cam ,i_slot ,T_CREATE_TC ,NULL ,0 ) != VLC_SUCCESS)
cond	20:13	21:19	5	TPDUSend (p_cam ,i_slot ,T_CREATE_TC ,NULL ,0 ) != VLC_SUCCESS
call	20:13	20:59	6	TPDUSend
arg	20:23	20:28	7	p_cam
water	20:23	0:0	8	p_cam
arg	20:30	20:36	7	i_slot
water	20:30	0:0	8	i_slot
arg	20:38	20:49	7	T_CREATE_TC
water	20:38	0:0	8	T_CREATE_TC
arg	20:51	20:55	7	NULL
water	20:51	0:0	8	NULL
arg	20:57	20:59	7	0
water	20:57	0:0	8	0
op	21:16	0:0	6	!=
water	21:19	0:0	6	VLC_SUCCESS
stmts	22:8	27:8	5	
water	22:8	0:0	6	{
call	23:12	25:28	6	msg_Err
arg	23:21	23:31	7	p_cam->obj
water	23:21	0:0	8	p_cam
op	23:26	0:0	8	->
water	23:28	0:0	8	obj
arg	24:21	24:66	7	"en50221_Init: couldn't send TPDU on slot %d"
water	24:21	0:0	8	"en50221_Init: couldn't send TPDU on slot %d"
arg	25:21	25:28	7	i_slot
water	25:21	0:0	8	i_slot
water	25:29	0:0	6	;
continue	26:12	26:20	6	
water	27:8	0:0	6	}
water	28:4	0:0	4	}
if	29:4	33:4	2	(p_cam -> pb_active_slot [ i_slot ])
cond	29:9	29:37	3	p_cam -> pb_active_slot [ i_slot ]
water	29:9	0:0	4	p_cam
op	29:14	0:0	4	->
water	29:16	0:0	4	pb_active_slot
op	29:30	0:0	4	[
water	29:31	0:0	4	i_slot
op	29:37	0:0	4	]
stmts	30:4	33:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	p_cam
op	31:13	0:0	4	->
water	31:15	0:0	4	i_timeout
op	31:25	0:0	4	=
water	31:27	0:0	4	CLOCK_FREQ
op	31:38	0:0	4	/
water	31:40	0:0	4	10
water	31:42	0:0	4	;
return	32:8	32:26	4	VLC_SUCCESS
water	32:15	0:0	5	VLC_SUCCESS
water	33:4	0:0	4	}
return	34:4	34:23	2	VLC_EGENERIC
water	34:11	0:0	3	VLC_EGENERIC

func	2:0	26:0	0	static filter_t *	SpuRenderCreateAndLoadScale
params	2:44	0:0	1	
param	2:45	2:65	2	vlc_object_t *	object
param	3:45	3:68	2	vlc_fourcc_t	src_chroma
param	4:45	4:68	2	vlc_fourcc_t	dst_chroma
param	5:45	5:64	2	bool	require_resize
stmnts	0:0	25:16	1	
decl	7:4	7:72	2	filter_t	*scale
op	7:20	0:0	2	=
call	7:22	7:71	3	vlc_custom_create
arg	7:40	7:46	4	object
water	7:40	0:0	5	object
arg	7:48	7:62	4	sizeof(*scale)
op	7:48	0:0	5	sizeof
water	7:54	0:0	5	(
op	7:55	0:0	5	*
water	7:56	0:0	5	scale
water	7:61	0:0	5	)
arg	7:64	7:71	4	"scale"
water	7:64	0:0	5	"scale"
if	8:4	9:19	2	(! scale)
cond	8:8	8:9	3	! scale
op	8:8	0:0	4	!
water	8:9	0:0	4	scale
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
call	10:4	10:46	2	es_format_Init
arg	10:19	10:33	3	&scale->fmt_in
op	10:19	0:0	4	&
water	10:20	0:0	4	scale
op	10:25	0:0	4	->
water	10:27	0:0	4	fmt_in
arg	10:35	10:43	3	VIDEO_ES
water	10:35	0:0	4	VIDEO_ES
arg	10:45	10:46	3	0
water	10:45	0:0	4	0
water	10:47	0:0	2	;
water	11:4	0:0	2	scale
op	11:9	0:0	2	->
water	11:11	0:0	2	fmt_in
op	11:17	0:0	2	.
water	11:18	0:0	2	video
op	11:23	0:0	2	.
water	11:24	0:0	2	i_chroma
op	11:33	0:0	2	=
water	11:35	0:0	2	src_chroma
water	11:45	0:0	2	;
water	12:4	0:0	2	scale
op	12:9	0:0	2	->
water	12:11	0:0	2	fmt_in
op	12:17	0:0	2	.
water	12:18	0:0	2	video
op	12:23	0:0	2	.
water	12:24	0:0	2	i_width
op	12:32	0:0	2	=
water	13:4	0:0	2	scale
op	13:9	0:0	2	->
water	13:11	0:0	2	fmt_in
op	13:17	0:0	2	.
water	13:18	0:0	2	video
op	13:23	0:0	2	.
water	13:24	0:0	2	i_visible_width
op	13:40	0:0	2	=
water	14:4	0:0	2	scale
op	14:9	0:0	2	->
water	14:11	0:0	2	fmt_in
op	14:17	0:0	2	.
water	14:18	0:0	2	video
op	14:23	0:0	2	.
water	14:24	0:0	2	i_height
op	14:33	0:0	2	=
water	15:4	0:0	2	scale
op	15:9	0:0	2	->
water	15:11	0:0	2	fmt_in
op	15:17	0:0	2	.
water	15:18	0:0	2	video
op	15:23	0:0	2	.
water	15:24	0:0	2	i_visible_height
op	15:41	0:0	2	=
water	15:43	0:0	2	32
water	15:45	0:0	2	;
call	16:4	16:47	2	es_format_Init
arg	16:19	16:34	3	&scale->fmt_out
op	16:19	0:0	4	&
water	16:20	0:0	4	scale
op	16:25	0:0	4	->
water	16:27	0:0	4	fmt_out
arg	16:36	16:44	3	VIDEO_ES
water	16:36	0:0	4	VIDEO_ES
arg	16:46	16:47	3	0
water	16:46	0:0	4	0
water	16:48	0:0	2	;
water	17:4	0:0	2	scale
op	17:9	0:0	2	->
water	17:11	0:0	2	fmt_out
op	17:18	0:0	2	.
water	17:19	0:0	2	video
op	17:24	0:0	2	.
water	17:25	0:0	2	i_chroma
op	17:34	0:0	2	=
water	17:36	0:0	2	dst_chroma
water	17:46	0:0	2	;
water	18:4	0:0	2	scale
op	18:9	0:0	2	->
water	18:11	0:0	2	fmt_out
op	18:18	0:0	2	.
water	18:19	0:0	2	video
op	18:24	0:0	2	.
water	18:25	0:0	2	i_width
op	18:33	0:0	2	=
water	19:4	0:0	2	scale
op	19:9	0:0	2	->
water	19:11	0:0	2	fmt_out
op	19:18	0:0	2	.
water	19:19	0:0	2	video
op	19:24	0:0	2	.
water	19:25	0:0	2	i_visible_width
op	19:41	0:0	2	=
water	20:4	0:0	2	scale
op	20:9	0:0	2	->
water	20:11	0:0	2	fmt_out
op	20:18	0:0	2	.
water	20:19	0:0	2	video
op	20:24	0:0	2	.
water	20:25	0:0	2	i_height
op	20:34	0:0	2	=
water	21:4	0:0	2	scale
op	21:9	0:0	2	->
water	21:11	0:0	2	fmt_out
op	21:18	0:0	2	.
water	21:19	0:0	2	video
op	21:24	0:0	2	.
water	21:25	0:0	2	i_visible_height
op	21:42	0:0	2	=
water	21:44	0:0	2	require_resize
water	21:59	0:0	2	?
water	21:61	0:0	2	16
water	21:64	0:0	2	:
water	21:66	0:0	2	32
water	21:68	0:0	2	;
water	22:4	0:0	2	scale
op	22:9	0:0	2	->
water	22:11	0:0	2	pf_video_buffer_new
op	22:31	0:0	2	=
water	22:33	0:0	2	spu_new_video_buffer
water	22:53	0:0	2	;
water	23:4	0:0	2	scale
op	23:9	0:0	2	->
water	23:11	0:0	2	pf_video_buffer_del
op	23:31	0:0	2	=
water	23:33	0:0	2	spu_del_video_buffer
water	23:53	0:0	2	;
water	24:4	0:0	2	scale
op	24:9	0:0	2	->
water	24:11	0:0	2	p_module
op	24:20	0:0	2	=
call	24:22	24:69	2	module_need
arg	24:34	24:39	3	scale
water	24:34	0:0	4	scale
arg	24:41	24:56	3	"video filter2"
water	24:41	0:0	4	"video filter2"
arg	24:58	24:62	3	NULL
water	24:58	0:0	4	NULL
arg	24:64	24:69	3	false
water	24:64	0:0	4	false
water	24:70	0:0	2	;
return	25:4	25:16	2	scale
water	25:11	0:0	3	scale

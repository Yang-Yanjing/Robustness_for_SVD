func	2:0	23:0	0	static block_t *	Encode
params	2:22	0:0	1	
param	2:24	2:40	2	encoder_t *	p_enc
param	2:42	2:62	2	subpicture_t *	p_spu
stmnts	4:4	22:18	1	
call	4:4	4:22	2	VLC_UNUSED
arg	4:16	4:22	3	p_enc
water	4:16	0:0	4	p_enc
water	4:23	0:0	2	;
decl	5:4	5:33	2	subpicture_region_t	*p_region
decl	6:4	6:20	2	block_t	*p_block
decl	7:4	7:14	2	size_t	len
if	8:4	9:19	2	(p_spu == NULL)
cond	8:8	8:17	3	p_spu == NULL
water	8:8	0:0	4	p_spu
op	8:14	0:0	4	==
water	8:17	0:0	4	NULL
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	2	p_region
op	10:13	0:0	2	=
water	10:15	0:0	2	p_spu
op	10:20	0:0	2	->
water	10:22	0:0	2	p_region
water	10:30	0:0	2	;
if	11:4	14:19	2	(( p_region == NULL ) || ( p_region -> fmt . i_chroma != VLC_CODEC_TEXT ) || ( p_region -> psz_text == NULL ))
cond	11:8	13:37	3	( p_region == NULL ) || ( p_region -> fmt . i_chroma != VLC_CODEC_TEXT ) || ( p_region -> psz_text == NULL )
water	11:8	0:0	4	(
water	11:10	0:0	4	p_region
op	11:19	0:0	4	==
water	11:22	0:0	4	NULL
water	11:27	0:0	4	)
op	12:5	0:0	4	||
water	12:8	0:0	4	(
water	12:10	0:0	4	p_region
op	12:18	0:0	4	->
water	12:20	0:0	4	fmt
op	12:23	0:0	4	.
water	12:24	0:0	4	i_chroma
op	12:33	0:0	4	!=
water	12:36	0:0	4	VLC_CODEC_TEXT
water	12:51	0:0	4	)
op	13:5	0:0	4	||
water	13:8	0:0	4	(
water	13:10	0:0	4	p_region
op	13:18	0:0	4	->
water	13:20	0:0	4	psz_text
op	13:29	0:0	4	==
water	13:32	0:0	4	NULL
water	13:37	0:0	4	)
stmts	14:8	14:19	3	
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	16:4	0:0	2	len
op	16:8	0:0	2	=
call	16:10	16:37	2	strlen
arg	16:18	16:37	3	p_region->psz_text
water	16:18	0:0	4	p_region
op	16:26	0:0	4	->
water	16:28	0:0	4	psz_text
water	16:38	0:0	2	;
water	17:4	0:0	2	p_block
op	17:12	0:0	2	=
call	17:14	17:31	2	block_Alloc
arg	17:27	17:31	3	len
water	17:27	0:0	4	len
water	17:32	0:0	2	;
call	18:4	18:55	2	memcpy
arg	18:12	18:29	3	p_block->p_buffer
water	18:12	0:0	4	p_block
op	18:19	0:0	4	->
water	18:21	0:0	4	p_buffer
arg	18:31	18:49	3	p_region->psz_text
water	18:31	0:0	4	p_region
op	18:39	0:0	4	->
water	18:41	0:0	4	psz_text
arg	18:51	18:55	3	len
water	18:51	0:0	4	len
water	18:56	0:0	2	;
water	19:4	0:0	2	p_block
op	19:11	0:0	2	->
water	19:13	0:0	2	i_pts
op	19:19	0:0	2	=
water	19:21	0:0	2	p_block
op	19:28	0:0	2	->
water	19:30	0:0	2	i_dts
op	19:36	0:0	2	=
water	19:38	0:0	2	p_spu
op	19:43	0:0	2	->
water	19:45	0:0	2	i_start
water	19:52	0:0	2	;
if	20:4	21:58	2	(! p_spu -> b_ephemer && ( p_spu -> i_stop > p_spu -> i_start ))
cond	20:8	20:62	3	! p_spu -> b_ephemer && ( p_spu -> i_stop > p_spu -> i_start )
op	20:8	0:0	4	!
water	20:9	0:0	4	p_spu
op	20:14	0:0	4	->
water	20:16	0:0	4	b_ephemer
op	20:26	0:0	4	&&
water	20:29	0:0	4	(
water	20:31	0:0	4	p_spu
op	20:36	0:0	4	->
water	20:38	0:0	4	i_stop
op	20:45	0:0	4	>
water	20:47	0:0	4	p_spu
op	20:52	0:0	4	->
water	20:54	0:0	4	i_start
water	20:62	0:0	4	)
stmts	21:8	21:58	3	
water	21:8	0:0	4	p_block
op	21:15	0:0	4	->
water	21:17	0:0	4	i_length
op	21:26	0:0	4	=
water	21:28	0:0	4	p_spu
op	21:33	0:0	4	->
water	21:35	0:0	4	i_stop
op	21:42	0:0	4	-
water	21:44	0:0	4	p_spu
op	21:49	0:0	4	->
water	21:51	0:0	4	i_start
water	21:58	0:0	4	;
return	22:4	22:18	2	p_block
water	22:11	0:0	3	p_block

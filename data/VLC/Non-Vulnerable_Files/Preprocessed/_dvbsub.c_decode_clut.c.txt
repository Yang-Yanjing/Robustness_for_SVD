func	2:0	101:0	0	static void	decode_clut
params	2:23	0:0	1	
param	2:25	2:41	2	decoder_t *	p_dec
param	2:43	2:51	2	bs_t *	s
stmnts	0:0	100:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:34	2	uint16_t	i_segment_length
decl	6:4	6:36	2	uint16_t	i_processed_length
decl	7:4	7:34	2	dvbsub_clut_t	*p_clut
water	7:25	0:0	2	,
decl	7:4	7:34	2	dvbsub_clut_t	*p_next
decl	8:4	8:33	2	int	i_id
water	8:22	0:0	2	,
decl	8:4	8:33	2	int	i_version
water	9:4	0:0	2	i_segment_length
op	9:21	0:0	2	=
call	9:23	9:38	2	bs_read
arg	9:32	9:33	3	s
water	9:32	0:0	4	s
arg	9:35	9:38	3	16
water	9:35	0:0	4	16
water	9:39	0:0	2	;
water	10:4	0:0	2	i_id
op	10:21	0:0	2	=
call	10:23	10:37	2	bs_read
arg	10:32	10:33	3	s
water	10:32	0:0	4	s
arg	10:35	10:37	3	8
water	10:35	0:0	4	8
water	10:38	0:0	2	;
water	11:4	0:0	2	i_version
op	11:21	0:0	2	=
call	11:23	11:37	2	bs_read
arg	11:32	11:33	3	s
water	11:32	0:0	4	s
arg	11:35	11:37	3	4
water	11:35	0:0	4	4
water	11:38	0:0	2	;
for	13:4	16:4	2	(p_clut = p_sys -> p_cluts ;p_clut != NULL;p_clut = p_clut -> p_next)
forinit	13:9	13:32	3	p_clut = p_sys -> p_cluts ;
water	13:9	0:0	4	p_clut
op	13:16	0:0	4	=
water	13:18	0:0	4	p_sys
op	13:23	0:0	4	->
water	13:25	0:0	4	p_cluts
water	13:32	0:0	4	;
cond	13:34	13:44	3	p_clut != NULL
water	13:34	0:0	4	p_clut
op	13:41	0:0	4	!=
water	13:44	0:0	4	NULL
forexpr	13:50	13:67	3	p_clut = p_clut -> p_next
water	13:50	0:0	4	p_clut
op	13:57	0:0	4	=
water	13:59	0:0	4	p_clut
op	13:65	0:0	4	->
water	13:67	0:0	4	p_next
stmts	14:4	16:4	3	
water	14:4	0:0	4	{
if	15:8	15:40	4	(p_clut -> i_id == i_id)
cond	15:12	15:28	5	p_clut -> i_id == i_id
water	15:12	0:0	6	p_clut
op	15:18	0:0	6	->
water	15:20	0:0	6	i_id
op	15:25	0:0	6	==
water	15:28	0:0	6	i_id
stmts	15:35	15:40	5	
break	15:35	15:40	6	
water	16:4	0:0	4	}
if	18:4	23:4	2	(p_clut && ( p_clut -> i_version == i_version ))
cond	18:8	18:51	3	p_clut && ( p_clut -> i_version == i_version )
water	18:8	0:0	4	p_clut
op	18:15	0:0	4	&&
water	18:18	0:0	4	(
water	18:20	0:0	4	p_clut
op	18:26	0:0	4	->
water	18:28	0:0	4	i_version
op	18:38	0:0	4	==
water	18:41	0:0	4	i_version
water	18:51	0:0	4	)
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
call	21:8	21:46	4	bs_skip
arg	21:17	21:18	5	s
water	21:17	0:0	6	s
arg	21:20	21:46	5	8*i_segment_length-12
water	21:20	0:0	6	8
op	21:22	0:0	6	*
water	21:24	0:0	6	i_segment_length
op	21:41	0:0	6	-
water	21:43	0:0	6	12
water	21:47	0:0	4	;
return	22:8	22:14	4	
water	23:4	0:0	4	}
if	24:4	34:4	2	(! p_clut)
cond	24:8	24:9	3	! p_clut
op	24:8	0:0	4	!
water	24:9	0:0	4	p_clut
stmts	25:4	34:4	3	
water	25:4	0:0	4	{
call	27:8	27:45	4	msg_Dbg
arg	27:17	27:22	5	p_dec
water	27:17	0:0	6	p_dec
arg	27:24	27:38	5	"new clut: %i"
water	27:24	0:0	6	"new clut: %i"
arg	27:40	27:45	5	i_id
water	27:40	0:0	6	i_id
water	27:46	0:0	4	;
water	29:8	0:0	4	p_clut
op	29:15	0:0	4	=
call	29:17	29:49	4	malloc
arg	29:25	29:49	5	sizeof(dvbsub_clut_t)
op	29:25	0:0	6	sizeof
water	29:31	0:0	6	(
water	29:33	0:0	6	dvbsub_clut_t
water	29:47	0:0	6	)
water	29:50	0:0	4	;
if	30:8	31:18	4	(! p_clut)
cond	30:12	30:13	5	! p_clut
op	30:12	0:0	6	!
water	30:13	0:0	6	p_clut
stmts	31:12	31:18	5	
return	31:12	31:18	6	
water	32:8	0:0	4	p_clut
op	32:14	0:0	4	->
water	32:16	0:0	4	p_next
op	32:23	0:0	4	=
water	32:25	0:0	4	p_sys
op	32:30	0:0	4	->
water	32:32	0:0	4	p_cluts
water	32:39	0:0	4	;
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	p_cluts
op	33:23	0:0	4	=
water	33:25	0:0	4	p_clut
water	33:31	0:0	4	;
water	34:4	0:0	4	}
water	36:4	0:0	2	p_next
op	36:11	0:0	2	=
water	36:13	0:0	2	p_clut
op	36:19	0:0	2	->
water	36:21	0:0	2	p_next
water	36:27	0:0	2	;
op	37:4	0:0	2	*
water	37:5	0:0	2	p_clut
op	37:12	0:0	2	=
water	37:14	0:0	2	p_sys
op	37:19	0:0	2	->
water	37:21	0:0	2	default_clut
water	37:33	0:0	2	;
water	38:4	0:0	2	p_clut
op	38:10	0:0	2	->
water	38:12	0:0	2	p_next
op	38:19	0:0	2	=
water	38:21	0:0	2	p_next
water	38:27	0:0	2	;
water	40:4	0:0	2	p_clut
op	40:10	0:0	2	->
water	40:12	0:0	2	i_version
op	40:22	0:0	2	=
water	40:24	0:0	2	i_version
water	40:33	0:0	2	;
water	41:4	0:0	2	p_clut
op	41:10	0:0	2	->
water	41:12	0:0	2	i_id
op	41:17	0:0	2	=
water	41:19	0:0	2	i_id
water	41:23	0:0	2	;
call	42:4	42:18	2	bs_skip
arg	42:13	42:14	3	s
water	42:13	0:0	4	s
arg	42:16	42:18	3	4
water	42:16	0:0	4	4
water	42:19	0:0	2	;
water	43:4	0:0	2	i_processed_length
op	43:23	0:0	2	=
water	43:25	0:0	2	2
water	43:26	0:0	2	;
while	44:4	100:4	2	(i_processed_length < i_segment_length)
cond	44:11	44:32	3	i_processed_length < i_segment_length
water	44:11	0:0	4	i_processed_length
op	44:30	0:0	4	<
water	44:32	0:0	4	i_segment_length
stmts	45:4	100:4	3	
water	45:4	0:0	4	{
decl	46:8	46:28	4	uint8_t	y
water	46:17	0:0	4	,
decl	46:8	46:28	4	uint8_t	cb
water	46:21	0:0	4	,
decl	46:8	46:28	4	uint8_t	cr
water	46:25	0:0	4	,
decl	46:8	46:28	4	uint8_t	t
decl	47:8	47:20	4	uint8_t	i_id
decl	48:8	48:22	4	uint8_t	i_type
water	49:8	0:0	4	i_id
op	49:13	0:0	4	=
call	49:15	49:29	4	bs_read
arg	49:24	49:25	5	s
water	49:24	0:0	6	s
arg	49:27	49:29	5	8
water	49:27	0:0	6	8
water	49:30	0:0	4	;
water	50:8	0:0	4	i_type
op	50:15	0:0	4	=
call	50:17	50:31	4	bs_read
arg	50:26	50:27	5	s
water	50:26	0:0	6	s
arg	50:29	50:31	5	3
water	50:29	0:0	6	3
water	50:32	0:0	4	;
call	51:8	51:22	4	bs_skip
arg	51:17	51:18	5	s
water	51:17	0:0	6	s
arg	51:20	51:22	5	4
water	51:20	0:0	6	4
water	51:23	0:0	4	;
if	52:8	59:8	4	(bs_read (s ,1 ))
cond	52:12	52:26	5	bs_read (s ,1 )
call	52:12	52:26	6	bs_read
arg	52:21	52:22	7	s
water	52:21	0:0	8	s
arg	52:24	52:26	7	1
water	52:24	0:0	8	1
stmts	53:8	59:8	5	
water	53:8	0:0	6	{
water	54:12	0:0	6	y
op	54:15	0:0	6	=
call	54:17	54:31	6	bs_read
arg	54:26	54:27	7	s
water	54:26	0:0	8	s
arg	54:29	54:31	7	8
water	54:29	0:0	8	8
water	54:32	0:0	6	;
water	55:12	0:0	6	cr
op	55:15	0:0	6	=
call	55:17	55:31	6	bs_read
arg	55:26	55:27	7	s
water	55:26	0:0	8	s
arg	55:29	55:31	7	8
water	55:29	0:0	8	8
water	55:32	0:0	6	;
water	56:12	0:0	6	cb
op	56:15	0:0	6	=
call	56:17	56:31	6	bs_read
arg	56:26	56:27	7	s
water	56:26	0:0	8	s
arg	56:29	56:31	7	8
water	56:29	0:0	8	8
water	56:32	0:0	6	;
water	57:12	0:0	6	t
op	57:15	0:0	6	=
call	57:17	57:31	6	bs_read
arg	57:26	57:27	7	s
water	57:26	0:0	8	s
arg	57:29	57:31	7	8
water	57:29	0:0	8	8
water	57:32	0:0	6	;
water	58:12	0:0	6	i_processed_length
op	58:31	0:0	6	+=
water	58:34	0:0	6	6
water	58:35	0:0	6	;
water	59:8	0:0	6	}
else	60:8	67:8	4
stmts	61:8	67:8	5	
water	61:8	0:0	6	{
water	62:12	0:0	6	y
op	62:15	0:0	6	=
call	62:17	62:31	6	bs_read
arg	62:26	62:27	7	s
water	62:26	0:0	8	s
arg	62:29	62:31	7	6
water	62:29	0:0	8	6
op	62:33	0:0	6	<<
water	62:36	0:0	6	2
water	62:37	0:0	6	;
water	63:12	0:0	6	cr
op	63:15	0:0	6	=
call	63:17	63:31	6	bs_read
arg	63:26	63:27	7	s
water	63:26	0:0	8	s
arg	63:29	63:31	7	4
water	63:29	0:0	8	4
op	63:33	0:0	6	<<
water	63:36	0:0	6	4
water	63:37	0:0	6	;
water	64:12	0:0	6	cb
op	64:15	0:0	6	=
call	64:17	64:31	6	bs_read
arg	64:26	64:27	7	s
water	64:26	0:0	8	s
arg	64:29	64:31	7	4
water	64:29	0:0	8	4
op	64:33	0:0	6	<<
water	64:36	0:0	6	4
water	64:37	0:0	6	;
water	65:12	0:0	6	t
op	65:15	0:0	6	=
call	65:17	65:31	6	bs_read
arg	65:26	65:27	7	s
water	65:26	0:0	8	s
arg	65:29	65:31	7	2
water	65:29	0:0	8	2
op	65:33	0:0	6	<<
water	65:36	0:0	6	6
water	65:37	0:0	6	;
water	66:12	0:0	6	i_processed_length
op	66:31	0:0	6	+=
water	66:34	0:0	6	4
water	66:35	0:0	6	;
water	67:8	0:0	6	}
if	71:8	75:8	4	(y == 0)
cond	71:12	71:17	5	y == 0
water	71:12	0:0	6	y
op	71:14	0:0	6	==
water	71:17	0:0	6	0
stmts	72:8	75:8	5	
water	72:8	0:0	6	{
water	73:12	0:0	6	cr
op	73:15	0:0	6	=
water	73:17	0:0	6	cb
op	73:20	0:0	6	=
water	73:22	0:0	6	0
water	73:23	0:0	6	;
water	74:12	0:0	6	t
op	74:15	0:0	6	=
water	74:17	0:0	6	0
water	74:18	0:0	6	xff
water	74:21	0:0	6	;
water	75:8	0:0	6	}
if	79:8	85:8	4	(( i_type & 0 x04 ) && ( i_id < 4 ))
cond	79:12	79:44	5	( i_type & 0 x04 ) && ( i_id < 4 )
water	79:12	0:0	6	(
water	79:14	0:0	6	i_type
op	79:21	0:0	6	&
water	79:23	0:0	6	0
water	79:24	0:0	6	x04
water	79:28	0:0	6	)
op	79:30	0:0	6	&&
water	79:33	0:0	6	(
water	79:35	0:0	6	i_id
op	79:40	0:0	6	<
water	79:42	0:0	6	4
water	79:44	0:0	6	)
stmts	80:8	85:8	5	
water	80:8	0:0	6	{
water	81:12	0:0	6	p_clut
op	81:18	0:0	6	->
water	81:20	0:0	6	c_2b
op	81:24	0:0	6	[
water	81:25	0:0	6	i_id
op	81:29	0:0	6	]
op	81:30	0:0	6	.
water	81:31	0:0	6	Y
op	81:33	0:0	6	=
water	81:35	0:0	6	y
water	81:36	0:0	6	;
water	82:12	0:0	6	p_clut
op	82:18	0:0	6	->
water	82:20	0:0	6	c_2b
op	82:24	0:0	6	[
water	82:25	0:0	6	i_id
op	82:29	0:0	6	]
op	82:30	0:0	6	.
water	82:31	0:0	6	Cr
op	82:34	0:0	6	=
water	82:36	0:0	6	cr
water	82:38	0:0	6	;
water	83:12	0:0	6	p_clut
op	83:18	0:0	6	->
water	83:20	0:0	6	c_2b
op	83:24	0:0	6	[
water	83:25	0:0	6	i_id
op	83:29	0:0	6	]
op	83:30	0:0	6	.
water	83:31	0:0	6	Cb
op	83:34	0:0	6	=
water	83:36	0:0	6	cb
water	83:38	0:0	6	;
water	84:12	0:0	6	p_clut
op	84:18	0:0	6	->
water	84:20	0:0	6	c_2b
op	84:24	0:0	6	[
water	84:25	0:0	6	i_id
op	84:29	0:0	6	]
op	84:30	0:0	6	.
water	84:31	0:0	6	T
op	84:33	0:0	6	=
water	84:35	0:0	6	t
water	84:36	0:0	6	;
water	85:8	0:0	6	}
if	86:8	92:8	4	(( i_type & 0 x02 ) && ( i_id < 16 ))
cond	86:12	86:45	5	( i_type & 0 x02 ) && ( i_id < 16 )
water	86:12	0:0	6	(
water	86:14	0:0	6	i_type
op	86:21	0:0	6	&
water	86:23	0:0	6	0
water	86:24	0:0	6	x02
water	86:28	0:0	6	)
op	86:30	0:0	6	&&
water	86:33	0:0	6	(
water	86:35	0:0	6	i_id
op	86:40	0:0	6	<
water	86:42	0:0	6	16
water	86:45	0:0	6	)
stmts	87:8	92:8	5	
water	87:8	0:0	6	{
water	88:12	0:0	6	p_clut
op	88:18	0:0	6	->
water	88:20	0:0	6	c_4b
op	88:24	0:0	6	[
water	88:25	0:0	6	i_id
op	88:29	0:0	6	]
op	88:30	0:0	6	.
water	88:31	0:0	6	Y
op	88:33	0:0	6	=
water	88:35	0:0	6	y
water	88:36	0:0	6	;
water	89:12	0:0	6	p_clut
op	89:18	0:0	6	->
water	89:20	0:0	6	c_4b
op	89:24	0:0	6	[
water	89:25	0:0	6	i_id
op	89:29	0:0	6	]
op	89:30	0:0	6	.
water	89:31	0:0	6	Cr
op	89:34	0:0	6	=
water	89:36	0:0	6	cr
water	89:38	0:0	6	;
water	90:12	0:0	6	p_clut
op	90:18	0:0	6	->
water	90:20	0:0	6	c_4b
op	90:24	0:0	6	[
water	90:25	0:0	6	i_id
op	90:29	0:0	6	]
op	90:30	0:0	6	.
water	90:31	0:0	6	Cb
op	90:34	0:0	6	=
water	90:36	0:0	6	cb
water	90:38	0:0	6	;
water	91:12	0:0	6	p_clut
op	91:18	0:0	6	->
water	91:20	0:0	6	c_4b
op	91:24	0:0	6	[
water	91:25	0:0	6	i_id
op	91:29	0:0	6	]
op	91:30	0:0	6	.
water	91:31	0:0	6	T
op	91:33	0:0	6	=
water	91:35	0:0	6	t
water	91:36	0:0	6	;
water	92:8	0:0	6	}
if	93:8	99:8	4	(i_type & 0 x01)
cond	93:12	93:22	5	i_type & 0 x01
water	93:12	0:0	6	i_type
op	93:19	0:0	6	&
water	93:21	0:0	6	0
water	93:22	0:0	6	x01
stmts	94:8	99:8	5	
water	94:8	0:0	6	{
water	95:12	0:0	6	p_clut
op	95:18	0:0	6	->
water	95:20	0:0	6	c_8b
op	95:24	0:0	6	[
water	95:25	0:0	6	i_id
op	95:29	0:0	6	]
op	95:30	0:0	6	.
water	95:31	0:0	6	Y
op	95:33	0:0	6	=
water	95:35	0:0	6	y
water	95:36	0:0	6	;
water	96:12	0:0	6	p_clut
op	96:18	0:0	6	->
water	96:20	0:0	6	c_8b
op	96:24	0:0	6	[
water	96:25	0:0	6	i_id
op	96:29	0:0	6	]
op	96:30	0:0	6	.
water	96:31	0:0	6	Cr
op	96:34	0:0	6	=
water	96:36	0:0	6	cr
water	96:38	0:0	6	;
water	97:12	0:0	6	p_clut
op	97:18	0:0	6	->
water	97:20	0:0	6	c_8b
op	97:24	0:0	6	[
water	97:25	0:0	6	i_id
op	97:29	0:0	6	]
op	97:30	0:0	6	.
water	97:31	0:0	6	Cb
op	97:34	0:0	6	=
water	97:36	0:0	6	cb
water	97:38	0:0	6	;
water	98:12	0:0	6	p_clut
op	98:18	0:0	6	->
water	98:20	0:0	6	c_8b
op	98:24	0:0	6	[
water	98:25	0:0	6	i_id
op	98:29	0:0	6	]
op	98:30	0:0	6	.
water	98:31	0:0	6	T
op	98:33	0:0	6	=
water	98:35	0:0	6	t
water	98:36	0:0	6	;
water	99:8	0:0	6	}
water	100:4	0:0	4	}

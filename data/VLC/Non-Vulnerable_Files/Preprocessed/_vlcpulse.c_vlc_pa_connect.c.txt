func	2:0	116:0	0	pa_context *	vlc_pa_connect
params	2:27	0:0	1	
param	2:28	2:45	2	vlc_object_t *	obj
param	2:47	2:73	2	pa_threaded_mainloop * *	mlp
stmnts	4:4	115:15	1	
call	4:4	4:71	2	msg_Dbg
arg	4:13	4:16	3	obj
water	4:13	0:0	4	obj
arg	4:18	4:44	3	"using library version %s"
water	4:18	0:0	4	"using library version %s"
arg	4:46	4:71	3	pa_get_library_version()
call	4:46	4:70	4	pa_get_library_version
water	4:72	0:0	2	;
call	5:4	6:59	2	msg_Dbg
arg	5:13	5:16	3	obj
water	5:13	0:0	4	obj
arg	5:18	5:60	3	" (compiled with version %s, protocol %u)"
water	5:18	0:0	4	" (compiled with version %s, protocol %u)"
arg	6:13	6:38	3	pa_get_headers_version()
call	6:13	6:37	4	pa_get_headers_version
arg	6:40	6:59	3	PA_PROTOCOL_VERSION
water	6:40	0:0	4	PA_PROTOCOL_VERSION
water	6:60	0:0	2	;
decl	8:4	8:64	2	pa_threaded_mainloop	*mainloop
op	8:35	0:0	2	=
call	8:37	8:63	3	pa_threaded_mainloop_new
if	9:4	10:19	2	(unlikely (mainloop == NULL ))
cond	9:8	9:33	3	unlikely (mainloop == NULL )
call	9:8	9:33	4	unlikely
arg	9:17	9:33	5	mainloop==NULL
water	9:17	0:0	6	mainloop
op	9:26	0:0	6	==
water	9:29	0:0	6	NULL
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
if	11:4	15:4	2	(pa_threaded_mainloop_start (mainloop ) < 0)
cond	11:8	11:48	3	pa_threaded_mainloop_start (mainloop ) < 0
call	11:8	11:44	4	pa_threaded_mainloop_start
arg	11:36	11:44	5	mainloop
water	11:36	0:0	6	mainloop
op	11:46	0:0	4	<
water	11:48	0:0	4	0
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:43	4	pa_threaded_mainloop_free
arg	13:35	13:43	5	mainloop
water	13:35	0:0	6	mainloop
water	13:44	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
decl	17:4	17:52	2	char	*ua
op	17:13	0:0	2	=
call	17:15	17:51	3	var_InheritString
arg	17:34	17:37	4	obj
water	17:34	0:0	5	obj
arg	17:39	17:51	4	"user-agent"
water	17:39	0:0	5	"user-agent"
decl	18:4	18:43	2	pa_proplist	*props
op	18:23	0:0	2	=
call	18:25	18:42	3	pa_proplist_new
if	19:4	81:4	2	(likely (props != NULL ))
cond	19:8	19:28	3	likely (props != NULL )
call	19:8	19:28	4	likely
arg	19:15	19:28	5	props!=NULL
water	19:15	0:0	6	props
op	19:21	0:0	6	!=
water	19:24	0:0	6	NULL
stmts	20:4	81:4	3	
water	20:4	0:0	4	{
decl	21:8	21:17	4	char	*str
if	22:8	23:66	4	(ua != NULL)
cond	22:12	22:18	5	ua != NULL
water	22:12	0:0	6	ua
op	22:15	0:0	6	!=
water	22:18	0:0	6	NULL
stmts	23:12	23:66	5	
call	23:12	23:65	6	pa_proplist_sets
arg	23:30	23:35	7	props
water	23:30	0:0	8	props
arg	23:37	23:61	7	PA_PROP_APPLICATION_NAME
water	23:37	0:0	8	PA_PROP_APPLICATION_NAME
arg	23:63	23:65	7	ua
water	23:63	0:0	8	ua
water	23:66	0:0	6	;
water	24:8	0:0	4	str
op	24:12	0:0	4	=
call	24:14	24:46	4	var_InheritString
arg	24:33	24:36	5	obj
water	24:33	0:0	6	obj
arg	24:38	24:46	5	"app-id"
water	24:38	0:0	6	"app-id"
water	24:47	0:0	4	;
if	25:8	29:8	4	(str != NULL)
cond	25:12	25:19	5	str != NULL
water	25:12	0:0	6	str
op	25:16	0:0	6	!=
water	25:19	0:0	6	NULL
stmts	26:8	29:8	5	
water	26:8	0:0	6	{
call	27:12	27:64	6	pa_proplist_sets
arg	27:30	27:35	7	props
water	27:30	0:0	8	props
arg	27:37	27:59	7	PA_PROP_APPLICATION_ID
water	27:37	0:0	8	PA_PROP_APPLICATION_ID
arg	27:61	27:64	7	str
water	27:61	0:0	8	str
water	27:65	0:0	6	;
call	28:12	28:21	6	free
arg	28:18	28:21	7	str
water	28:18	0:0	8	str
water	28:22	0:0	6	;
water	29:8	0:0	6	}
water	30:8	0:0	4	str
op	30:12	0:0	4	=
call	30:14	30:51	4	var_InheritString
arg	30:33	30:36	5	obj
water	30:33	0:0	6	obj
arg	30:38	30:51	5	"app-version"
water	30:38	0:0	6	"app-version"
water	30:52	0:0	4	;
if	31:8	35:8	4	(str != NULL)
cond	31:12	31:19	5	str != NULL
water	31:12	0:0	6	str
op	31:16	0:0	6	!=
water	31:19	0:0	6	NULL
stmts	32:8	35:8	5	
water	32:8	0:0	6	{
call	33:12	33:69	6	pa_proplist_sets
arg	33:30	33:35	7	props
water	33:30	0:0	8	props
arg	33:37	33:64	7	PA_PROP_APPLICATION_VERSION
water	33:37	0:0	8	PA_PROP_APPLICATION_VERSION
arg	33:66	33:69	7	str
water	33:66	0:0	8	str
water	33:70	0:0	6	;
call	34:12	34:21	6	free
arg	34:18	34:21	7	str
water	34:18	0:0	8	str
water	34:22	0:0	6	;
water	35:8	0:0	6	}
water	36:8	0:0	4	str
op	36:12	0:0	4	=
call	36:14	36:53	4	var_InheritString
arg	36:33	36:36	5	obj
water	36:33	0:0	6	obj
arg	36:38	36:53	5	"app-icon-name"
water	36:38	0:0	6	"app-icon-name"
water	36:54	0:0	4	;
if	37:8	41:8	4	(str != NULL)
cond	37:12	37:19	5	str != NULL
water	37:12	0:0	6	str
op	37:16	0:0	6	!=
water	37:19	0:0	6	NULL
stmts	38:8	41:8	5	
water	38:8	0:0	6	{
call	39:12	39:71	6	pa_proplist_sets
arg	39:30	39:35	7	props
water	39:30	0:0	8	props
arg	39:37	39:66	7	PA_PROP_APPLICATION_ICON_NAME
water	39:37	0:0	8	PA_PROP_APPLICATION_ICON_NAME
arg	39:68	39:71	7	str
water	39:68	0:0	8	str
water	39:72	0:0	6	;
call	40:12	40:21	6	free
arg	40:18	40:21	7	str
water	40:18	0:0	8	str
water	40:22	0:0	6	;
water	41:8	0:0	6	}
call	43:8	44:55	4	pa_proplist_sets
arg	43:26	43:31	5	props
water	43:26	0:0	6	props
arg	43:33	43:61	5	PA_PROP_APPLICATION_LANGUAGE
water	43:33	0:0	6	PA_PROP_APPLICATION_LANGUAGE
arg	44:26	44:55	5	setlocale(LC_MESSAGES,NULL)
call	44:26	44:54	6	setlocale
arg	44:37	44:48	7	LC_MESSAGES
water	44:37	0:0	8	LC_MESSAGES
arg	44:50	44:54	7	NULL
water	44:50	0:0	8	NULL
water	44:56	0:0	4	;
call	45:8	46:51	4	pa_proplist_setf
arg	45:26	45:31	5	props
water	45:26	0:0	6	props
arg	45:33	45:63	5	PA_PROP_APPLICATION_PROCESS_ID
water	45:33	0:0	6	PA_PROP_APPLICATION_PROCESS_ID
arg	45:65	45:70	5	"%lu"
water	45:65	0:0	6	"%lu"
arg	46:26	46:51	5	(unsignedlong)getpid()
water	46:26	0:0	6	(
water	46:27	0:0	6	unsigned
water	46:36	0:0	6	long
water	46:40	0:0	6	)
call	46:42	46:50	6	getpid
water	46:52	0:0	4	;
for	49:8	61:8	4	( size_t max =sysconf (_SC_GETPW_R_SIZE_MAX ) ,len = max % 1024 + 1024 ;len < max;len += 1024)
forinit	0:0	49:81	5	 size_t max =sysconf (_SC_GETPW_R_SIZE_MAX ) ,len = max % 1024 + 1024 ;
decl	49:13	49:81	6	size_t	max
op	49:24	0:0	6	=
call	49:26	49:55	7	sysconf
arg	49:35	49:55	8	_SC_GETPW_R_SIZE_MAX
water	49:35	0:0	9	_SC_GETPW_R_SIZE_MAX
water	49:56	0:0	6	,
decl	49:13	49:81	6	size_t	len
op	49:62	0:0	6	=
water	49:64	0:0	6	max
op	49:68	0:0	6	%
water	49:70	0:0	6	1024
op	49:75	0:0	6	+
water	49:77	0:0	6	1024
cond	50:13	50:19	5	len < max
water	50:13	0:0	6	len
op	50:17	0:0	6	<
water	50:19	0:0	6	max
forexpr	50:24	50:31	5	len += 1024
water	50:24	0:0	6	len
op	50:28	0:0	6	+=
water	50:31	0:0	6	1024
stmts	51:8	61:8	5	
water	51:8	0:0	6	{
decl	52:12	52:36	6	struct passwd	pwbuf
water	52:31	0:0	6	,
decl	52:12	52:36	6	struct passwd	*pw
decl	53:12	53:25	6	char	buf[len]
if	54:12	60:12	6	(getpwuid_r (getuid ( ) ,& pwbuf ,buf ,sizeof ( buf ) ,& pw ) == 0)
cond	54:16	54:74	7	getpwuid_r (getuid ( ) ,& pwbuf ,buf ,sizeof ( buf ) ,& pw ) == 0
call	54:16	54:69	8	getpwuid_r
arg	54:28	54:37	9	getuid()
call	54:28	54:36	10	getuid
arg	54:39	54:45	9	&pwbuf
op	54:39	0:0	10	&
water	54:40	0:0	10	pwbuf
arg	54:47	54:50	9	buf
water	54:47	0:0	10	buf
arg	54:52	54:64	9	sizeof(buf)
op	54:52	0:0	10	sizeof
water	54:59	0:0	10	(
water	54:60	0:0	10	buf
water	54:63	0:0	10	)
arg	54:66	54:69	9	&pw
op	54:66	0:0	10	&
water	54:67	0:0	10	pw
op	54:71	0:0	8	==
water	54:74	0:0	8	0
stmts	55:12	60:12	7	
water	55:12	0:0	8	{
if	56:16	58:50	8	(pw != NULL)
cond	56:20	56:26	9	pw != NULL
water	56:20	0:0	10	pw
op	56:23	0:0	10	!=
water	56:26	0:0	10	NULL
stmts	57:20	58:50	9	
call	57:20	58:49	10	pa_proplist_sets
arg	57:38	57:43	11	props
water	57:38	0:0	12	props
arg	57:45	57:77	11	PA_PROP_APPLICATION_PROCESS_USER
water	57:45	0:0	12	PA_PROP_APPLICATION_PROCESS_USER
arg	58:38	58:49	11	pw->pw_name
water	58:38	0:0	12	pw
op	58:40	0:0	12	->
water	58:42	0:0	12	pw_name
water	58:50	0:0	10	;
break	59:16	59:21	8	
water	60:12	0:0	8	}
water	61:8	0:0	6	}
for	62:8	72:8	4	( size_t max =sysconf (_SC_HOST_NAME_MAX ) ,len = max % 1024 + 1024 ;len < max;len += 1024)
forinit	0:0	62:78	5	 size_t max =sysconf (_SC_HOST_NAME_MAX ) ,len = max % 1024 + 1024 ;
decl	62:13	62:78	6	size_t	max
op	62:24	0:0	6	=
call	62:26	62:52	7	sysconf
arg	62:35	62:52	8	_SC_HOST_NAME_MAX
water	62:35	0:0	9	_SC_HOST_NAME_MAX
water	62:53	0:0	6	,
decl	62:13	62:78	6	size_t	len
op	62:59	0:0	6	=
water	62:61	0:0	6	max
op	62:65	0:0	6	%
water	62:67	0:0	6	1024
op	62:72	0:0	6	+
water	62:74	0:0	6	1024
cond	63:13	63:19	5	len < max
water	63:13	0:0	6	len
op	63:17	0:0	6	<
water	63:19	0:0	6	max
forexpr	63:24	63:31	5	len += 1024
water	63:24	0:0	6	len
op	63:28	0:0	6	+=
water	63:31	0:0	6	1024
stmts	64:8	72:8	5	
water	64:8	0:0	6	{
decl	65:12	65:30	6	char	hostname[len]
if	66:12	71:12	6	(gethostname (hostname ,sizeof ( hostname ) ) == 0)
cond	66:16	66:61	7	gethostname (hostname ,sizeof ( hostname ) ) == 0
call	66:16	66:56	8	gethostname
arg	66:29	66:37	9	hostname
water	66:29	0:0	10	hostname
arg	66:39	66:56	9	sizeof(hostname)
op	66:39	0:0	10	sizeof
water	66:46	0:0	10	(
water	66:47	0:0	10	hostname
water	66:55	0:0	10	)
op	66:58	0:0	8	==
water	66:61	0:0	8	0
stmts	67:12	71:12	7	
water	67:12	0:0	8	{
call	68:16	69:42	8	pa_proplist_sets
arg	68:34	68:39	9	props
water	68:34	0:0	10	props
arg	68:41	68:73	9	PA_PROP_APPLICATION_PROCESS_HOST
water	68:41	0:0	10	PA_PROP_APPLICATION_PROCESS_HOST
arg	69:34	69:42	9	hostname
water	69:34	0:0	10	hostname
water	69:43	0:0	8	;
break	70:16	70:21	8	
water	71:12	0:0	8	}
water	72:8	0:0	6	}
decl	73:8	73:59	4	const char	*session
op	73:28	0:0	4	=
call	73:30	73:58	5	getenv
arg	73:38	73:58	6	"XDG_SESSION_COOKIE"
water	73:38	0:0	7	"XDG_SESSION_COOKIE"
if	74:8	80:8	4	(session != NULL)
cond	74:12	74:23	5	session != NULL
water	74:12	0:0	6	session
op	74:20	0:0	6	!=
water	74:23	0:0	6	NULL
stmts	75:8	80:8	5	
water	75:8	0:0	6	{
call	76:12	77:46	6	pa_proplist_setf
arg	76:30	76:35	7	props
water	76:30	0:0	8	props
arg	76:37	76:75	7	PA_PROP_APPLICATION_PROCESS_MACHINE_ID
water	76:37	0:0	8	PA_PROP_APPLICATION_PROCESS_MACHINE_ID
arg	77:30	77:37	7	"%.32s"
water	77:30	0:0	8	"%.32s"
arg	77:39	77:46	7	session
water	77:39	0:0	8	session
water	77:47	0:0	6	;
call	78:12	79:37	6	pa_proplist_sets
arg	78:30	78:35	7	props
water	78:30	0:0	8	props
arg	78:37	78:75	7	PA_PROP_APPLICATION_PROCESS_SESSION_ID
water	78:37	0:0	8	PA_PROP_APPLICATION_PROCESS_SESSION_ID
arg	79:30	79:37	7	session
water	79:30	0:0	8	session
water	79:38	0:0	6	;
water	80:8	0:0	6	}
water	81:4	0:0	4	}
decl	83:4	83:19	2	pa_context	*ctx
decl	84:4	84:24	2	pa_mainloop_api	*api
call	85:4	85:39	2	pa_threaded_mainloop_lock
arg	85:31	85:39	3	mainloop
water	85:31	0:0	4	mainloop
water	85:40	0:0	2	;
water	86:4	0:0	2	api
op	86:8	0:0	2	=
call	86:10	86:48	2	pa_threaded_mainloop_get_api
arg	86:40	86:48	3	mainloop
water	86:40	0:0	4	mainloop
water	86:49	0:0	2	;
water	87:4	0:0	2	ctx
op	87:8	0:0	2	=
call	87:10	87:54	2	pa_context_new_with_proplist
arg	87:40	87:43	3	api
water	87:40	0:0	4	api
arg	87:45	87:47	3	ua
water	87:45	0:0	4	ua
arg	87:49	87:54	3	props
water	87:49	0:0	4	props
water	87:55	0:0	2	;
call	88:4	88:12	2	free
arg	88:10	88:12	3	ua
water	88:10	0:0	4	ua
water	88:13	0:0	2	;
if	89:4	90:32	2	(props != NULL)
cond	89:8	89:17	3	props != NULL
water	89:8	0:0	4	props
op	89:14	0:0	4	!=
water	89:17	0:0	4	NULL
stmts	90:8	90:32	3	
call	90:8	90:31	4	pa_proplist_free
arg	90:26	90:31	5	props
water	90:26	0:0	6	props
water	90:32	0:0	4	;
if	91:4	92:17	2	(unlikely (ctx == NULL ))
cond	91:8	91:28	3	unlikely (ctx == NULL )
call	91:8	91:28	4	unlikely
arg	91:17	91:28	5	ctx==NULL
water	91:17	0:0	6	ctx
op	91:21	0:0	6	==
water	91:24	0:0	6	NULL
stmts	92:8	92:17	3	
goto	92:8	92:17	4	fail
water	92:13	0:0	5	fail
call	93:4	93:66	2	pa_context_set_state_callback
arg	93:35	93:38	3	ctx
water	93:35	0:0	4	ctx
arg	93:40	93:56	3	context_state_cb
water	93:40	0:0	4	context_state_cb
arg	93:58	93:66	3	mainloop
water	93:58	0:0	4	mainloop
water	93:67	0:0	2	;
call	94:4	94:61	2	pa_context_set_event_callback
arg	94:35	94:38	3	ctx
water	94:35	0:0	4	ctx
arg	94:40	94:56	3	context_event_cb
water	94:40	0:0	4	context_event_cb
arg	94:58	94:61	3	obj
water	94:58	0:0	4	obj
water	94:62	0:0	2	;
if	95:4	101:4	2	(pa_context_connect (ctx ,NULL ,0 ,NULL ) < 0 ||context_wait (ctx ,mainloop ))
cond	95:8	96:35	3	pa_context_connect (ctx ,NULL ,0 ,NULL ) < 0 ||context_wait (ctx ,mainloop )
call	95:8	95:46	4	pa_context_connect
arg	95:28	95:31	5	ctx
water	95:28	0:0	6	ctx
arg	95:33	95:37	5	NULL
water	95:33	0:0	6	NULL
arg	95:39	95:40	5	0
water	95:39	0:0	6	0
arg	95:42	95:46	5	NULL
water	95:42	0:0	6	NULL
op	95:48	0:0	4	<
water	95:50	0:0	4	0
op	96:5	0:0	4	||
call	96:8	96:35	4	context_wait
arg	96:22	96:25	5	ctx
water	96:22	0:0	6	ctx
arg	96:27	96:35	5	mainloop
water	96:27	0:0	6	mainloop
stmts	97:4	101:4	3	
water	97:4	0:0	4	{
call	98:8	98:70	4	vlc_pa_error
arg	98:22	98:25	5	obj
water	98:22	0:0	6	obj
arg	98:27	98:65	5	"PulseAudio server connection failure"
water	98:27	0:0	6	"PulseAudio server connection failure"
arg	98:67	98:70	5	ctx
water	98:67	0:0	6	ctx
water	98:71	0:0	4	;
call	99:8	99:29	4	pa_context_unref
arg	99:26	99:29	5	ctx
water	99:26	0:0	6	ctx
water	99:30	0:0	4	;
goto	100:8	100:17	4	fail
water	100:13	0:0	5	fail
water	101:4	0:0	4	}
call	102:4	104:68	2	msg_Dbg
arg	102:13	102:16	3	obj
water	102:13	0:0	4	obj
arg	102:18	102:57	3	"connected %s to %s as client #%"PRIu32
water	102:18	0:0	4	"connected %s to %s as client #%"
water	102:51	0:0	4	PRIu32
arg	103:13	103:63	3	pa_context_is_local(ctx)?"locally":"remotely"
call	103:13	103:37	4	pa_context_is_local
arg	103:34	103:37	5	ctx
water	103:34	0:0	6	ctx
water	103:39	0:0	4	?
water	103:41	0:0	4	"locally"
water	103:51	0:0	4	:
water	103:53	0:0	4	"remotely"
arg	104:13	104:40	3	pa_context_get_server(ctx)
call	104:13	104:39	4	pa_context_get_server
arg	104:36	104:39	5	ctx
water	104:36	0:0	6	ctx
arg	104:42	104:68	3	pa_context_get_index(ctx)
call	104:42	104:67	4	pa_context_get_index
arg	104:64	104:67	5	ctx
water	104:64	0:0	6	ctx
water	104:69	0:0	2	;
call	105:4	107:57	2	msg_Dbg
arg	105:13	105:16	3	obj
water	105:13	0:0	4	obj
arg	105:18	105:69	3	"using protocol %"PRIu32", server protocol %"PRIu32
water	105:18	0:0	4	"using protocol %"
water	105:36	0:0	4	PRIu32
water	105:42	0:0	4	", server protocol %"
water	105:63	0:0	4	PRIu32
arg	106:13	106:50	3	pa_context_get_protocol_version(ctx)
call	106:13	106:49	4	pa_context_get_protocol_version
arg	106:46	106:49	5	ctx
water	106:46	0:0	6	ctx
arg	107:13	107:57	3	pa_context_get_server_protocol_version(ctx)
call	107:13	107:56	4	pa_context_get_server_protocol_version
arg	107:53	107:56	5	ctx
water	107:53	0:0	6	ctx
water	107:58	0:0	2	;
call	108:4	108:41	2	pa_threaded_mainloop_unlock
arg	108:33	108:41	3	mainloop
water	108:33	0:0	4	mainloop
water	108:42	0:0	2	;
op	109:4	0:0	2	*
water	109:5	0:0	2	mlp
op	109:9	0:0	2	=
water	109:11	0:0	2	mainloop
water	109:19	0:0	2	;
return	110:4	110:14	2	ctx
water	110:11	0:0	3	ctx
label	111:0	111:4	2	fail :
call	112:4	112:41	2	pa_threaded_mainloop_unlock
arg	112:33	112:41	3	mainloop
water	112:33	0:0	4	mainloop
water	112:42	0:0	2	;
call	113:4	113:39	2	pa_threaded_mainloop_stop
arg	113:31	113:39	3	mainloop
water	113:31	0:0	4	mainloop
water	113:40	0:0	2	;
call	114:4	114:39	2	pa_threaded_mainloop_free
arg	114:31	114:39	3	mainloop
water	114:31	0:0	4	mainloop
water	114:40	0:0	2	;
return	115:4	115:15	2	NULL
water	115:11	0:0	3	NULL

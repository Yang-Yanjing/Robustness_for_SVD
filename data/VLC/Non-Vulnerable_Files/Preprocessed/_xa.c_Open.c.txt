func	2:0	58:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:39	2	vlc_object_t *	p_this
stmnts	0:0	57:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:20	2	xa_header_t	p_xa
decl	7:4	7:24	2	const uint8_t	*p_buf
if	9:4	11:27	2	(stream_Peek (p_demux -> s ,& p_buf ,sizeof ( p_xa ) ) < ( signed ) sizeof ( p_xa ))
cond	9:8	10:35	3	stream_Peek (p_demux -> s ,& p_buf ,sizeof ( p_xa ) ) < ( signed ) sizeof ( p_xa )
call	9:8	9:56	4	stream_Peek
arg	9:21	9:31	5	p_demux->s
water	9:21	0:0	6	p_demux
op	9:28	0:0	6	->
water	9:30	0:0	6	s
arg	9:33	9:39	5	&p_buf
op	9:33	0:0	6	&
water	9:34	0:0	6	p_buf
arg	9:41	9:56	5	sizeof(p_xa)
op	9:41	0:0	6	sizeof
water	9:47	0:0	6	(
water	9:49	0:0	6	p_xa
water	9:54	0:0	6	)
op	10:12	0:0	4	<
water	10:14	0:0	4	(
water	10:15	0:0	4	signed
water	10:21	0:0	4	)
op	10:22	0:0	4	sizeof
water	10:28	0:0	4	(
water	10:30	0:0	4	p_xa
water	10:35	0:0	4	)
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
call	12:4	12:41	2	memcpy
arg	12:12	12:17	3	&p_xa
op	12:12	0:0	4	&
water	12:13	0:0	4	p_xa
arg	12:19	12:24	3	p_buf
water	12:19	0:0	4	p_buf
arg	12:26	12:41	3	sizeof(p_xa)
op	12:26	0:0	4	sizeof
water	12:32	0:0	4	(
water	12:34	0:0	4	p_xa
water	12:39	0:0	4	)
water	12:42	0:0	2	;
if	13:4	17:27	2	((strncmp (p_xa . xa_id ,"XAI" ,4 ) &&strncmp (p_xa . xa_id ,"XAJ" ,4 ) ) || (GetWLE (& p_xa . wFormatTag ) != 0 x0001 ) || (GetWLE (& p_xa . wBitsPerSample ) != 16 ))
cond	13:8	16:46	3	(strncmp (p_xa . xa_id ,"XAI" ,4 ) &&strncmp (p_xa . xa_id ,"XAJ" ,4 ) ) || (GetWLE (& p_xa . wFormatTag ) != 0 x0001 ) || (GetWLE (& p_xa . wBitsPerSample ) != 16 )
water	13:8	0:0	4	(
call	13:10	13:40	4	strncmp
arg	13:19	13:29	5	p_xa.xa_id
water	13:19	0:0	6	p_xa
op	13:23	0:0	6	.
water	13:24	0:0	6	xa_id
arg	13:31	13:36	5	"XAI"
water	13:31	0:0	6	"XAI"
arg	13:38	13:40	5	4
water	13:38	0:0	6	4
op	14:7	0:0	4	&&
call	14:10	14:40	4	strncmp
arg	14:19	14:29	5	p_xa.xa_id
water	14:19	0:0	6	p_xa
op	14:23	0:0	6	.
water	14:24	0:0	6	xa_id
arg	14:31	14:36	5	"XAJ"
water	14:31	0:0	6	"XAJ"
arg	14:38	14:40	5	4
water	14:38	0:0	6	4
water	14:42	0:0	4	)
op	15:5	0:0	4	||
water	15:8	0:0	4	(
call	15:10	15:36	4	GetWLE
arg	15:18	15:36	5	&p_xa.wFormatTag
op	15:18	0:0	6	&
water	15:19	0:0	6	p_xa
op	15:23	0:0	6	.
water	15:24	0:0	6	wFormatTag
op	15:38	0:0	4	!=
water	15:41	0:0	4	0
water	15:42	0:0	4	x0001
water	15:47	0:0	4	)
op	16:5	0:0	4	||
water	16:8	0:0	4	(
call	16:10	16:39	4	GetWLE
arg	16:18	16:39	5	&p_xa.wBitsPerSample
op	16:18	0:0	6	&
water	16:19	0:0	6	p_xa
op	16:23	0:0	6	.
water	16:24	0:0	6	wBitsPerSample
op	16:41	0:0	4	!=
water	16:44	0:0	4	16
water	16:46	0:0	4	)
stmts	17:8	17:27	3	
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
water	18:4	0:0	2	p_sys
op	18:10	0:0	2	=
call	18:12	18:42	2	malloc
arg	18:20	18:42	3	sizeof(demux_sys_t)
op	18:20	0:0	4	sizeof
water	18:26	0:0	4	(
water	18:28	0:0	4	demux_sys_t
water	18:40	0:0	4	)
water	18:43	0:0	2	;
if	19:4	20:25	2	(unlikely (p_sys == NULL ))
cond	19:8	19:32	3	unlikely (p_sys == NULL )
call	19:8	19:32	4	unlikely
arg	19:18	19:32	5	p_sys==NULL
water	19:18	0:0	6	p_sys
op	19:24	0:0	6	==
water	19:27	0:0	6	NULL
stmts	20:8	20:25	3	
return	20:8	20:25	4	VLC_ENOMEM
water	20:15	0:0	5	VLC_ENOMEM
water	21:4	0:0	2	p_demux
op	21:11	0:0	2	->
water	21:13	0:0	2	pf_demux
op	21:24	0:0	2	=
water	21:26	0:0	2	Demux
water	21:31	0:0	2	;
water	22:4	0:0	2	p_demux
op	22:11	0:0	2	->
water	22:13	0:0	2	pf_control
op	22:24	0:0	2	=
water	22:26	0:0	2	Control
water	22:33	0:0	2	;
water	23:4	0:0	2	p_demux
op	23:11	0:0	2	->
water	23:13	0:0	2	p_sys
op	23:24	0:0	2	=
water	23:26	0:0	2	p_sys
water	23:31	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	p_es
op	24:24	0:0	2	=
water	24:26	0:0	2	NULL
water	24:30	0:0	2	;
call	26:4	26:50	2	stream_Read
arg	26:17	26:27	3	p_demux->s
water	26:17	0:0	4	p_demux
op	26:24	0:0	4	->
water	26:26	0:0	4	s
arg	26:29	26:33	3	NULL
water	26:29	0:0	4	NULL
arg	26:35	26:50	3	sizeof(p_xa)
op	26:35	0:0	4	sizeof
water	26:41	0:0	4	(
water	26:43	0:0	4	p_xa
water	26:48	0:0	4	)
water	26:51	0:0	2	;
decl	27:4	27:19	2	es_format_t	fmt
call	28:4	28:62	2	es_format_Init
arg	28:20	28:24	3	&fmt
op	28:20	0:0	4	&
water	28:21	0:0	4	fmt
arg	28:26	28:34	3	AUDIO_ES
water	28:26	0:0	4	AUDIO_ES
arg	28:36	28:62	3	VLC_FOURCC('X','A','J',0)
call	28:36	28:60	4	VLC_FOURCC
arg	28:47	28:50	5	'X'
water	28:47	0:0	6	'X'
arg	28:51	28:54	5	'A'
water	28:51	0:0	6	'A'
arg	28:55	28:58	5	'J'
water	28:55	0:0	6	'J'
arg	28:59	28:60	5	0
water	28:59	0:0	6	0
water	28:63	0:0	2	;
call	29:4	29:54	2	msg_Dbg
arg	29:13	29:20	3	p_demux
water	29:13	0:0	4	p_demux
arg	29:22	29:54	3	"assuming EA ADPCM audio codec"
water	29:22	0:0	4	"assuming EA ADPCM audio codec"
water	29:55	0:0	2	;
water	30:4	0:0	2	fmt
op	30:7	0:0	2	.
water	30:8	0:0	2	audio
op	30:13	0:0	2	.
water	30:14	0:0	2	i_rate
op	30:21	0:0	2	=
call	30:23	30:53	2	GetDWLE
arg	30:32	30:53	3	&p_xa.nSamplesPerSec
op	30:32	0:0	4	&
water	30:33	0:0	4	p_xa
op	30:37	0:0	4	.
water	30:38	0:0	4	nSamplesPerSec
water	30:54	0:0	2	;
water	31:4	0:0	2	fmt
op	31:7	0:0	2	.
water	31:8	0:0	2	audio
op	31:13	0:0	2	.
water	31:14	0:0	2	i_bytes_per_frame
op	31:32	0:0	2	=
water	31:34	0:0	2	15
call	31:37	31:63	2	*GetWLE
arg	31:47	31:63	3	&p_xa.nChannels
op	31:47	0:0	4	&
water	31:48	0:0	4	p_xa
op	31:52	0:0	4	.
water	31:53	0:0	4	nChannels
water	31:64	0:0	2	;
water	32:4	0:0	2	fmt
op	32:7	0:0	2	.
water	32:8	0:0	2	audio
op	32:13	0:0	2	.
water	32:14	0:0	2	i_frame_length
op	32:29	0:0	2	=
water	32:31	0:0	2	FRAME_LENGTH
water	32:43	0:0	2	;
water	33:4	0:0	2	fmt
op	33:7	0:0	2	.
water	33:8	0:0	2	audio
op	33:13	0:0	2	.
water	33:14	0:0	2	i_channels
op	33:25	0:0	2	=
call	33:27	33:52	2	GetWLE
arg	33:36	33:52	3	&p_xa.nChannels
op	33:36	0:0	4	&
water	33:37	0:0	4	p_xa
op	33:41	0:0	4	.
water	33:42	0:0	4	nChannels
water	33:53	0:0	2	;
water	34:4	0:0	2	fmt
op	34:7	0:0	2	.
water	34:8	0:0	2	audio
op	34:13	0:0	2	.
water	34:14	0:0	2	i_blockalign
op	34:27	0:0	2	=
water	34:29	0:0	2	fmt
op	34:32	0:0	2	.
water	34:33	0:0	2	audio
op	34:38	0:0	2	.
water	34:39	0:0	2	i_bytes_per_frame
water	34:56	0:0	2	;
water	35:4	0:0	2	fmt
op	35:7	0:0	2	.
water	35:8	0:0	2	audio
op	35:13	0:0	2	.
water	35:14	0:0	2	i_bitspersample
op	35:30	0:0	2	=
water	35:32	0:0	2	16
water	35:34	0:0	2	;
water	36:4	0:0	2	fmt
op	36:7	0:0	2	.
water	36:8	0:0	2	i_bitrate
op	36:18	0:0	2	=
water	36:20	0:0	2	(
water	36:21	0:0	2	fmt
op	36:24	0:0	2	.
water	36:25	0:0	2	audio
op	36:30	0:0	2	.
water	36:31	0:0	2	i_rate
op	36:38	0:0	2	*
water	36:40	0:0	2	fmt
op	36:43	0:0	2	.
water	36:44	0:0	2	audio
op	36:49	0:0	2	.
water	36:50	0:0	2	i_bytes_per_frame
op	36:68	0:0	2	*
water	36:70	0:0	2	8
water	36:71	0:0	2	)
op	37:20	0:0	2	/
water	37:22	0:0	2	fmt
op	37:25	0:0	2	.
water	37:26	0:0	2	audio
op	37:31	0:0	2	.
water	37:32	0:0	2	i_frame_length
water	37:46	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	i_data_offset
op	38:25	0:0	2	=
call	38:27	38:51	2	stream_Tell
arg	38:40	38:51	3	p_demux->s
water	38:40	0:0	4	p_demux
op	38:47	0:0	4	->
water	38:49	0:0	4	s
water	38:52	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	i_data_size
op	40:23	0:0	2	=
water	40:25	0:0	2	p_xa
op	40:29	0:0	2	.
water	40:30	0:0	2	iSize
op	40:36	0:0	2	*
water	40:38	0:0	2	15
op	40:41	0:0	2	/
water	40:43	0:0	2	56
water	40:45	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	i_block_frames
op	42:26	0:0	2	=
water	42:28	0:0	2	fmt
op	42:31	0:0	2	.
water	42:32	0:0	2	audio
op	42:37	0:0	2	.
water	42:38	0:0	2	i_rate
op	42:45	0:0	2	/
water	42:47	0:0	2	(
water	42:48	0:0	2	FRAME_LENGTH
op	42:61	0:0	2	*
water	42:63	0:0	2	20
water	42:65	0:0	2	)
op	42:67	0:0	2	+
water	42:69	0:0	2	1
water	42:70	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	i_frame_size
op	43:24	0:0	2	=
water	43:26	0:0	2	fmt
op	43:29	0:0	2	.
water	43:30	0:0	2	audio
op	43:35	0:0	2	.
water	43:36	0:0	2	i_bytes_per_frame
water	43:53	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	i_bitrate
op	44:21	0:0	2	=
water	44:23	0:0	2	fmt
op	44:26	0:0	2	.
water	44:27	0:0	2	i_bitrate
water	44:36	0:0	2	;
call	45:4	48:58	2	msg_Dbg
arg	45:13	45:20	3	p_demux
water	45:13	0:0	4	p_demux
arg	45:22	46:59	3	"fourcc: %4.4s, channels: %d, ""freq: %d Hz, bitrate: %dKo/s, blockalign: %d"
water	45:22	0:0	4	"fourcc: %4.4s, channels: %d, "
water	46:13	0:0	4	"freq: %d Hz, bitrate: %dKo/s, blockalign: %d"
arg	47:13	47:33	3	(char*)&fmt.i_codec
water	47:13	0:0	4	(
water	47:14	0:0	4	char
op	47:19	0:0	4	*
water	47:20	0:0	4	)
op	47:21	0:0	4	&
water	47:22	0:0	4	fmt
op	47:25	0:0	4	.
water	47:26	0:0	4	i_codec
arg	47:35	47:55	3	fmt.audio.i_channels
water	47:35	0:0	4	fmt
op	47:38	0:0	4	.
water	47:39	0:0	4	audio
op	47:44	0:0	4	.
water	47:45	0:0	4	i_channels
arg	47:57	47:73	3	fmt.audio.i_rate
water	47:57	0:0	4	fmt
op	47:60	0:0	4	.
water	47:61	0:0	4	audio
op	47:66	0:0	4	.
water	47:67	0:0	4	i_rate
arg	48:13	48:33	3	fmt.i_bitrate/8192
water	48:13	0:0	4	fmt
op	48:16	0:0	4	.
water	48:17	0:0	4	i_bitrate
op	48:27	0:0	4	/
water	48:29	0:0	4	8192
arg	48:35	48:58	3	fmt.audio.i_blockalign
water	48:35	0:0	4	fmt
op	48:38	0:0	4	.
water	48:39	0:0	4	audio
op	48:44	0:0	4	.
water	48:45	0:0	4	i_blockalign
water	48:59	0:0	2	;
if	49:4	53:4	2	(fmt . audio . i_rate == 0 || fmt . audio . i_channels == 0)
cond	49:8	49:57	3	fmt . audio . i_rate == 0 || fmt . audio . i_channels == 0
water	49:8	0:0	4	fmt
op	49:11	0:0	4	.
water	49:12	0:0	4	audio
op	49:17	0:0	4	.
water	49:18	0:0	4	i_rate
op	49:25	0:0	4	==
water	49:28	0:0	4	0
op	49:30	0:0	4	||
water	49:33	0:0	4	fmt
op	49:36	0:0	4	.
water	49:37	0:0	4	audio
op	49:42	0:0	4	.
water	49:43	0:0	4	i_channels
op	49:54	0:0	4	==
water	49:57	0:0	4	0
stmts	50:4	53:4	3	
water	50:4	0:0	4	{
call	51:8	51:20	4	free
arg	51:14	51:20	5	p_sys
water	51:14	0:0	6	p_sys
water	51:21	0:0	4	;
return	52:8	52:27	4	VLC_EGENERIC
water	52:15	0:0	5	VLC_EGENERIC
water	53:4	0:0	4	}
water	54:4	0:0	2	p_sys
op	54:9	0:0	2	->
water	54:11	0:0	2	p_es
op	54:16	0:0	2	=
call	54:18	54:49	2	es_out_Add
arg	54:30	54:42	3	p_demux->out
water	54:30	0:0	4	p_demux
op	54:37	0:0	4	->
water	54:39	0:0	4	out
arg	54:44	54:49	3	&fmt
op	54:44	0:0	4	&
water	54:45	0:0	4	fmt
water	54:50	0:0	2	;
call	55:4	55:48	2	date_Init
arg	55:15	55:26	3	&p_sys->pts
op	55:15	0:0	4	&
water	55:16	0:0	4	p_sys
op	55:21	0:0	4	->
water	55:23	0:0	4	pts
arg	55:28	55:44	3	fmt.audio.i_rate
water	55:28	0:0	4	fmt
op	55:31	0:0	4	.
water	55:32	0:0	4	audio
op	55:37	0:0	4	.
water	55:38	0:0	4	i_rate
arg	55:46	55:48	3	1
water	55:46	0:0	4	1
water	55:49	0:0	2	;
call	56:4	56:36	2	date_Set
arg	56:14	56:25	3	&p_sys->pts
op	56:14	0:0	4	&
water	56:15	0:0	4	p_sys
op	56:20	0:0	4	->
water	56:22	0:0	4	pts
arg	56:27	56:36	3	VLC_TS_0
water	56:27	0:0	4	VLC_TS_0
water	56:37	0:0	2	;
return	57:4	57:22	2	VLC_SUCCESS
water	57:11	0:0	3	VLC_SUCCESS

func	2:0	28:0	0	static decoder_t *	CreateDecoder
params	2:31	0:0	1	
param	2:33	2:53	2	vlc_object_t *	p_this
param	2:55	2:75	2	video_format_t *	fmt
stmnts	0:0	27:16	1	
decl	4:4	4:20	2	decoder_t	*p_dec
water	5:4	0:0	2	p_dec
op	5:10	0:0	2	=
call	5:12	5:73	2	vlc_custom_create
arg	5:31	5:37	3	p_this
water	5:31	0:0	4	p_this
arg	5:39	5:55	3	sizeof(*p_dec)
op	5:39	0:0	4	sizeof
water	5:45	0:0	4	(
op	5:47	0:0	4	*
water	5:48	0:0	4	p_dec
water	5:54	0:0	4	)
arg	5:57	5:73	3	"image decoder"
water	5:57	0:0	4	"image decoder"
water	5:74	0:0	2	;
if	6:4	7:19	2	(p_dec == NULL)
cond	6:8	6:17	3	p_dec == NULL
water	6:8	0:0	4	p_dec
op	6:14	0:0	4	==
water	6:17	0:0	4	NULL
stmts	7:8	7:19	3	
return	7:8	7:19	4	NULL
water	7:15	0:0	5	NULL
water	8:4	0:0	2	p_dec
op	8:9	0:0	2	->
water	8:11	0:0	2	p_module
op	8:20	0:0	2	=
water	8:22	0:0	2	NULL
water	8:26	0:0	2	;
call	9:4	9:60	2	es_format_Init
arg	9:20	9:34	3	&p_dec->fmt_in
op	9:20	0:0	4	&
water	9:21	0:0	4	p_dec
op	9:26	0:0	4	->
water	9:28	0:0	4	fmt_in
arg	9:36	9:44	3	VIDEO_ES
water	9:36	0:0	4	VIDEO_ES
arg	9:46	9:60	3	fmt->i_chroma
water	9:46	0:0	4	fmt
op	9:49	0:0	4	->
water	9:51	0:0	4	i_chroma
water	9:61	0:0	2	;
call	10:4	10:49	2	es_format_Init
arg	10:20	10:35	3	&p_dec->fmt_out
op	10:20	0:0	4	&
water	10:21	0:0	4	p_dec
op	10:26	0:0	4	->
water	10:28	0:0	4	fmt_out
arg	10:37	10:45	3	VIDEO_ES
water	10:37	0:0	4	VIDEO_ES
arg	10:47	10:49	3	0
water	10:47	0:0	4	0
water	10:50	0:0	2	;
water	11:4	0:0	2	p_dec
op	11:9	0:0	2	->
water	11:11	0:0	2	fmt_in
op	11:17	0:0	2	.
water	11:18	0:0	2	video
op	11:24	0:0	2	=
op	11:26	0:0	2	*
water	11:27	0:0	2	fmt
water	11:30	0:0	2	;
water	12:4	0:0	2	p_dec
op	12:9	0:0	2	->
water	12:11	0:0	2	b_pace_control
op	12:26	0:0	2	=
water	12:28	0:0	2	true
water	12:32	0:0	2	;
water	13:4	0:0	2	p_dec
op	13:9	0:0	2	->
water	13:11	0:0	2	pf_vout_buffer_new
op	13:30	0:0	2	=
water	13:32	0:0	2	video_new_buffer
water	13:48	0:0	2	;
water	14:4	0:0	2	p_dec
op	14:9	0:0	2	->
water	14:11	0:0	2	pf_vout_buffer_del
op	14:30	0:0	2	=
water	14:32	0:0	2	video_del_buffer
water	14:48	0:0	2	;
water	15:4	0:0	2	p_dec
op	15:9	0:0	2	->
water	15:11	0:0	2	pf_picture_link
op	15:30	0:0	2	=
water	15:32	0:0	2	video_link_picture
water	15:50	0:0	2	;
water	16:4	0:0	2	p_dec
op	16:9	0:0	2	->
water	16:11	0:0	2	pf_picture_unlink
op	16:30	0:0	2	=
water	16:32	0:0	2	video_unlink_picture
water	16:52	0:0	2	;
water	18:4	0:0	2	p_dec
op	18:9	0:0	2	->
water	18:11	0:0	2	p_module
op	18:20	0:0	2	=
call	18:22	18:69	2	module_need
arg	18:35	18:40	3	p_dec
water	18:35	0:0	4	p_dec
arg	18:42	18:51	3	"decoder"
water	18:42	0:0	4	"decoder"
arg	18:53	18:61	3	"$codec"
water	18:53	0:0	4	"$codec"
arg	18:63	18:69	3	false
water	18:63	0:0	4	false
water	18:70	0:0	2	;
if	19:4	26:4	2	(! p_dec -> p_module)
cond	19:8	19:16	3	! p_dec -> p_module
op	19:8	0:0	4	!
water	19:9	0:0	4	p_dec
op	19:14	0:0	4	->
water	19:16	0:0	4	p_module
stmts	20:4	26:4	3	
water	20:4	0:0	4	{
call	21:8	23:47	4	msg_Err
arg	21:17	21:22	5	p_dec
water	21:17	0:0	6	p_dec
arg	21:24	22:67	5	"no suitable decoder module for fourcc `%4.4s'. ""VLC probably does not support this image format."
water	21:24	0:0	6	"no suitable decoder module for fourcc `%4.4s'. "
water	22:17	0:0	6	"VLC probably does not support this image format."
arg	23:17	23:47	5	(char*)&p_dec->fmt_in.i_codec
water	23:17	0:0	6	(
water	23:18	0:0	6	char
op	23:22	0:0	6	*
water	23:23	0:0	6	)
op	23:24	0:0	6	&
water	23:25	0:0	6	p_dec
op	23:30	0:0	6	->
water	23:32	0:0	6	fmt_in
op	23:38	0:0	6	.
water	23:39	0:0	6	i_codec
water	23:48	0:0	4	;
call	24:8	24:29	4	DeleteDecoder
arg	24:23	24:29	5	p_dec
water	24:23	0:0	6	p_dec
water	24:30	0:0	4	;
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	26:4	0:0	4	}
return	27:4	27:16	2	p_dec
water	27:11	0:0	3	p_dec

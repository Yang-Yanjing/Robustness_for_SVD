func	2:0	83:0	0	int	demux_vaControlHelper
params	2:25	0:0	1	
param	2:27	2:38	2	stream_t *	s
param	3:28	3:43	2	int64_t	i_start
param	3:45	3:58	2	int64_t	i_end
param	4:28	4:45	2	int64_t	i_bitrate
param	4:47	4:58	2	int	i_align
param	5:28	5:39	2	int	i_query
param	5:41	5:54	2	va_list	args
stmnts	0:0	82:4	1	
decl	7:4	7:18	2	int64_t	i_tell
decl	8:4	8:18	2	double	f
water	8:13	0:0	2	,
decl	8:4	8:18	2	double	*pf
decl	9:4	9:22	2	int64_t	i64
water	9:15	0:0	2	,
decl	9:4	9:22	2	int64_t	*pi64
if	10:4	10:49	2	(i_end < 0)
cond	10:8	10:16	3	i_end < 0
water	10:8	0:0	4	i_end
op	10:14	0:0	4	<
water	10:16	0:0	4	0
stmts	10:23	10:49	3	
water	10:23	0:0	4	i_end
op	10:31	0:0	4	=
call	10:33	10:48	4	stream_Size
arg	10:46	10:48	5	s
water	10:46	0:0	6	s
water	10:49	0:0	4	;
if	11:4	11:34	2	(i_start < 0)
cond	11:8	11:18	3	i_start < 0
water	11:8	0:0	4	i_start
op	11:16	0:0	4	<
water	11:18	0:0	4	0
stmts	11:23	11:34	3	
water	11:23	0:0	4	i_start
op	11:31	0:0	4	=
water	11:33	0:0	4	0
water	11:34	0:0	4	;
if	12:4	12:34	2	(i_align <= 0)
cond	12:8	12:19	3	i_align <= 0
water	12:8	0:0	4	i_align
op	12:16	0:0	4	<=
water	12:19	0:0	4	0
stmts	12:23	12:34	3	
water	12:23	0:0	4	i_align
op	12:31	0:0	4	=
water	12:33	0:0	4	1
water	12:34	0:0	4	;
water	13:4	0:0	2	i_tell
op	13:11	0:0	2	=
call	13:13	13:28	2	stream_Tell
arg	13:26	13:28	3	s
water	13:26	0:0	4	s
water	13:29	0:0	2	;
switch	14:4	82:4	2	(i_query)
cond	14:12	14:12	3	i_query
water	14:12	0:0	4	i_query
stmts	15:4	82:4	3	
water	15:4	0:0	4	{
label	16:8	16:29	4	case DEMUX_GET_LENGTH :
water	17:12	0:0	4	pi64
op	17:17	0:0	4	=
water	17:19	0:0	4	(
water	17:20	0:0	4	int64_t
op	17:27	0:0	4	*
water	17:28	0:0	4	)
call	17:29	17:53	4	va_arg
arg	17:37	17:41	5	args
water	17:37	0:0	6	args
arg	17:43	17:53	5	int64_t*
water	17:43	0:0	6	int64_t
op	17:51	0:0	6	*
water	17:54	0:0	4	;
if	18:12	22:12	4	(i_bitrate > 0 && i_end > i_start)
cond	18:16	18:41	5	i_bitrate > 0 && i_end > i_start
water	18:16	0:0	6	i_bitrate
op	18:26	0:0	6	>
water	18:28	0:0	6	0
op	18:30	0:0	6	&&
water	18:33	0:0	6	i_end
op	18:39	0:0	6	>
water	18:41	0:0	6	i_start
stmts	19:12	22:12	5	
water	19:12	0:0	6	{
op	20:16	0:0	6	*
water	20:17	0:0	6	pi64
op	20:22	0:0	6	=
call	20:24	20:39	6	INT64_C
arg	20:32	20:39	7	8000000
water	20:32	0:0	8	8000000
op	20:41	0:0	6	*
water	20:43	0:0	6	(
water	20:44	0:0	6	i_end
op	20:50	0:0	6	-
water	20:52	0:0	6	i_start
water	20:59	0:0	6	)
op	20:61	0:0	6	/
water	20:63	0:0	6	i_bitrate
water	20:72	0:0	6	;
return	21:16	21:34	6	VLC_SUCCESS
water	21:23	0:0	7	VLC_SUCCESS
water	22:12	0:0	6	}
return	23:12	23:31	4	VLC_EGENERIC
water	23:19	0:0	5	VLC_EGENERIC
label	24:8	24:27	4	case DEMUX_GET_TIME :
water	25:12	0:0	4	pi64
op	25:17	0:0	4	=
water	25:19	0:0	4	(
water	25:20	0:0	4	int64_t
op	25:27	0:0	4	*
water	25:28	0:0	4	)
call	25:29	25:53	4	va_arg
arg	25:37	25:41	5	args
water	25:37	0:0	6	args
arg	25:43	25:53	5	int64_t*
water	25:43	0:0	6	int64_t
op	25:51	0:0	6	*
water	25:54	0:0	4	;
if	26:12	30:12	4	(i_bitrate > 0 && i_tell >= i_start)
cond	26:16	26:43	5	i_bitrate > 0 && i_tell >= i_start
water	26:16	0:0	6	i_bitrate
op	26:26	0:0	6	>
water	26:28	0:0	6	0
op	26:30	0:0	6	&&
water	26:33	0:0	6	i_tell
op	26:40	0:0	6	>=
water	26:43	0:0	6	i_start
stmts	27:12	30:12	5	
water	27:12	0:0	6	{
op	28:16	0:0	6	*
water	28:17	0:0	6	pi64
op	28:22	0:0	6	=
call	28:24	28:39	6	INT64_C
arg	28:32	28:39	7	8000000
water	28:32	0:0	8	8000000
op	28:41	0:0	6	*
water	28:43	0:0	6	(
water	28:44	0:0	6	i_tell
op	28:51	0:0	6	-
water	28:53	0:0	6	i_start
water	28:60	0:0	6	)
op	28:62	0:0	6	/
water	28:64	0:0	6	i_bitrate
water	28:73	0:0	6	;
return	29:16	29:34	6	VLC_SUCCESS
water	29:23	0:0	7	VLC_SUCCESS
water	30:12	0:0	6	}
return	31:12	31:31	4	VLC_EGENERIC
water	31:19	0:0	5	VLC_EGENERIC
label	32:8	32:31	4	case DEMUX_GET_POSITION :
water	33:12	0:0	4	pf
op	33:15	0:0	4	=
water	33:17	0:0	4	(
water	33:18	0:0	4	double
op	33:24	0:0	4	*
water	33:25	0:0	4	)
call	33:26	33:49	4	va_arg
arg	33:34	33:38	5	args
water	33:34	0:0	6	args
arg	33:40	33:49	5	double*
water	33:40	0:0	6	double
op	33:47	0:0	6	*
water	33:50	0:0	4	;
if	34:12	39:12	4	(i_start < i_end)
cond	34:16	34:26	5	i_start < i_end
water	34:16	0:0	6	i_start
op	34:24	0:0	6	<
water	34:26	0:0	6	i_end
stmts	35:12	39:12	5	
water	35:12	0:0	6	{
op	36:16	0:0	6	*
water	36:17	0:0	6	pf
op	36:20	0:0	6	=
call	36:22	36:49	6	(double)
arg	36:32	36:49	7	i_tell-i_start
water	36:32	0:0	8	i_tell
op	36:39	0:0	8	-
water	36:41	0:0	8	i_start
op	36:51	0:0	6	/
call	37:22	37:49	6	(double)
arg	37:32	37:49	7	i_end-i_start
water	37:32	0:0	8	i_end
op	37:39	0:0	8	-
water	37:41	0:0	8	i_start
water	37:50	0:0	6	;
return	38:16	38:34	6	VLC_SUCCESS
water	38:23	0:0	7	VLC_SUCCESS
water	39:12	0:0	6	}
return	40:12	40:31	4	VLC_EGENERIC
water	40:19	0:0	5	VLC_EGENERIC
label	41:8	41:31	4	case DEMUX_SET_POSITION :
water	42:12	0:0	4	f
op	42:14	0:0	4	=
water	42:16	0:0	4	(
water	42:17	0:0	4	double
water	42:23	0:0	4	)
call	42:24	42:45	4	va_arg
arg	42:32	42:36	5	args
water	42:32	0:0	6	args
arg	42:38	42:45	5	double
water	42:38	0:0	6	double
water	42:46	0:0	4	;
if	43:12	51:12	4	(i_start < i_end && f >= 0 . 0 && f <= 1 . 0)
cond	43:16	43:54	5	i_start < i_end && f >= 0 . 0 && f <= 1 . 0
water	43:16	0:0	6	i_start
op	43:24	0:0	6	<
water	43:26	0:0	6	i_end
op	43:32	0:0	6	&&
water	43:35	0:0	6	f
op	43:37	0:0	6	>=
water	43:40	0:0	6	0
op	43:41	0:0	6	.
water	43:42	0:0	6	0
op	43:44	0:0	6	&&
water	43:47	0:0	6	f
op	43:49	0:0	6	<=
water	43:52	0:0	6	1
op	43:53	0:0	6	.
water	43:54	0:0	6	0
stmts	44:12	51:12	5	
water	44:12	0:0	6	{
decl	45:16	45:69	6	int64_t	i_block
op	45:32	0:0	6	=
water	45:34	0:0	6	(
water	45:35	0:0	6	f
op	45:37	0:0	6	*
water	45:39	0:0	6	(
water	45:41	0:0	6	i_end
op	45:47	0:0	6	-
water	45:49	0:0	6	i_start
water	45:57	0:0	6	)
water	45:58	0:0	6	)
op	45:60	0:0	6	/
water	45:62	0:0	6	i_align
if	46:16	49:16	6	(stream_Seek (s ,i_start + i_block * i_align ))
cond	46:20	46:64	7	stream_Seek (s ,i_start + i_block * i_align )
call	46:20	46:64	8	stream_Seek
arg	46:33	46:34	9	s
water	46:33	0:0	10	s
arg	46:36	46:64	9	i_start+i_block*i_align
water	46:36	0:0	10	i_start
op	46:44	0:0	10	+
water	46:46	0:0	10	i_block
op	46:54	0:0	10	*
water	46:56	0:0	10	i_align
stmts	47:16	49:16	7	
water	47:16	0:0	8	{
return	48:20	48:39	8	VLC_EGENERIC
water	48:27	0:0	9	VLC_EGENERIC
water	49:16	0:0	8	}
return	50:16	50:34	6	VLC_SUCCESS
water	50:23	0:0	7	VLC_SUCCESS
water	51:12	0:0	6	}
return	52:12	52:31	4	VLC_EGENERIC
water	52:19	0:0	5	VLC_EGENERIC
label	53:8	53:27	4	case DEMUX_SET_TIME :
water	54:12	0:0	4	i64
op	54:16	0:0	4	=
water	54:18	0:0	4	(
water	54:19	0:0	4	int64_t
water	54:26	0:0	4	)
call	54:27	54:49	4	va_arg
arg	54:35	54:39	5	args
water	54:35	0:0	6	args
arg	54:41	54:49	5	int64_t
water	54:41	0:0	6	int64_t
water	54:50	0:0	4	;
if	55:12	63:12	4	(i_bitrate > 0 && i64 >= 0)
cond	55:16	55:40	5	i_bitrate > 0 && i64 >= 0
water	55:16	0:0	6	i_bitrate
op	55:26	0:0	6	>
water	55:28	0:0	6	0
op	55:30	0:0	6	&&
water	55:33	0:0	6	i64
op	55:37	0:0	6	>=
water	55:40	0:0	6	0
stmts	56:12	63:12	5	
water	56:12	0:0	6	{
decl	57:16	57:78	6	int64_t	i_block
op	57:32	0:0	6	=
water	57:34	0:0	6	i64
op	57:38	0:0	6	*
water	57:40	0:0	6	i_bitrate
op	57:50	0:0	6	/
call	57:52	57:67	7	INT64_C
arg	57:60	57:67	8	8000000
water	57:60	0:0	9	8000000
op	57:69	0:0	6	/
water	57:71	0:0	6	i_align
if	58:16	61:16	6	(stream_Seek (s ,i_start + i_block * i_align ))
cond	58:20	58:64	7	stream_Seek (s ,i_start + i_block * i_align )
call	58:20	58:64	8	stream_Seek
arg	58:33	58:34	9	s
water	58:33	0:0	10	s
arg	58:36	58:64	9	i_start+i_block*i_align
water	58:36	0:0	10	i_start
op	58:44	0:0	10	+
water	58:46	0:0	10	i_block
op	58:54	0:0	10	*
water	58:56	0:0	10	i_align
stmts	59:16	61:16	7	
water	59:16	0:0	8	{
return	60:20	60:39	8	VLC_EGENERIC
water	60:27	0:0	9	VLC_EGENERIC
water	61:16	0:0	8	}
return	62:16	62:34	6	VLC_SUCCESS
water	62:23	0:0	7	VLC_SUCCESS
water	63:12	0:0	6	}
return	64:12	64:31	4	VLC_EGENERIC
water	64:19	0:0	5	VLC_EGENERIC
label	65:8	65:27	4	case DEMUX_GET_META :
return	66:12	66:63	4	stream_vaControl(s,STREAM_GET_META,args)
call	66:19	66:62	5	stream_vaControl
arg	66:37	66:38	6	s
water	66:37	0:0	7	s
arg	66:40	66:55	6	STREAM_GET_META
water	66:40	0:0	7	STREAM_GET_META
arg	66:57	66:62	6	args
water	66:57	0:0	7	args
label	67:8	67:32	4	case DEMUX_GET_PTS_DELAY :
label	68:8	68:26	4	case DEMUX_GET_FPS :
label	69:8	69:39	4	case DEMUX_HAS_UNSUPPORTED_META :
label	70:8	70:38	4	case DEMUX_SET_NEXT_DEMUX_TIME :
label	71:8	71:33	4	case DEMUX_GET_TITLE_INFO :
label	72:8	72:28	4	case DEMUX_SET_GROUP :
label	73:8	73:25	4	case DEMUX_SET_ES :
label	74:8	74:34	4	case DEMUX_GET_ATTACHMENTS :
label	75:8	75:29	4	case DEMUX_CAN_RECORD :
label	76:8	76:35	4	case DEMUX_SET_RECORD_STATE :
label	77:8	77:29	4	case DEMUX_GET_SIGNAL :
return	78:12	78:31	4	VLC_EGENERIC
water	78:19	0:0	5	VLC_EGENERIC
label	79:8	79:15	4	default :
call	80:12	80:66	4	msg_Err
arg	80:21	80:22	5	s
water	80:21	0:0	6	s
arg	80:24	80:66	5	"unknown query in demux_vaControlDefault"
water	80:24	0:0	6	"unknown query in demux_vaControlDefault"
water	80:67	0:0	4	;
return	81:12	81:31	4	VLC_EGENERIC
water	81:19	0:0	5	VLC_EGENERIC
water	82:4	0:0	4	}

func	2:0	64:0	0	static block_t *	Encode
params	2:22	0:0	1	
param	2:24	2:40	2	encoder_t *	p_enc
param	2:42	2:60	2	picture_t *	p_pict
stmnts	0:0	63:18	1	
decl	4:4	4:39	2	encoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_enc
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:22	2	x264_picture_t	pic
decl	6:4	6:19	2	x264_nal_t	*nal
decl	7:4	7:20	2	block_t	*p_block
decl	8:4	8:29	2	int	i_nal
op	8:13	0:0	2	=
water	8:14	0:0	2	0
water	8:15	0:0	2	,
decl	8:4	8:29	2	int	i_out
op	8:22	0:0	2	=
water	8:23	0:0	2	0
water	8:24	0:0	2	,
decl	8:4	8:29	2	int	i
op	8:27	0:0	2	=
water	8:28	0:0	2	0
call	11:4	11:28	2	x264_picture_init
arg	11:23	11:28	3	&pic
op	11:23	0:0	4	&
water	11:24	0:0	4	pic
water	11:29	0:0	2	;
call	13:4	13:46	2	memset
arg	13:12	13:16	3	&pic
op	13:12	0:0	4	&
water	13:13	0:0	4	pic
arg	13:18	13:19	3	0
water	13:18	0:0	4	0
arg	13:21	13:46	3	sizeof(x264_picture_t)
op	13:21	0:0	4	sizeof
water	13:27	0:0	4	(
water	13:29	0:0	4	x264_picture_t
water	13:44	0:0	4	)
water	13:47	0:0	2	;
if	15:4	25:4	2	(likely (p_pict ))
cond	15:8	15:21	3	likely (p_pict )
call	15:8	15:21	4	likely
arg	15:15	15:21	5	p_pict
water	15:15	0:0	6	p_pict
stmts	15:25	25:4	3	
water	15:25	0:0	4	{
water	16:7	0:0	4	pic
op	16:10	0:0	4	.
water	16:11	0:0	4	i_pts
op	16:17	0:0	4	=
water	16:19	0:0	4	p_pict
op	16:25	0:0	4	->
water	16:27	0:0	4	date
water	16:31	0:0	4	;
water	17:7	0:0	4	pic
op	17:10	0:0	4	.
water	17:11	0:0	4	img
op	17:14	0:0	4	.
water	17:15	0:0	4	i_csp
op	17:21	0:0	4	=
water	17:23	0:0	4	p_sys
op	17:28	0:0	4	->
water	17:30	0:0	4	i_colorspace
water	17:42	0:0	4	;
water	18:7	0:0	4	pic
op	18:10	0:0	4	.
water	18:11	0:0	4	img
op	18:14	0:0	4	.
water	18:15	0:0	4	i_plane
op	18:23	0:0	4	=
water	18:25	0:0	4	p_pict
op	18:31	0:0	4	->
water	18:33	0:0	4	i_planes
water	18:41	0:0	4	;
for	19:7	23:7	4	(i = 0 ;i < p_pict -> i_planes;i ++)
forinit	19:12	19:17	5	i = 0 ;
water	19:12	0:0	6	i
op	19:14	0:0	6	=
water	19:16	0:0	6	0
water	19:17	0:0	6	;
cond	19:19	19:31	5	i < p_pict -> i_planes
water	19:19	0:0	6	i
op	19:21	0:0	6	<
water	19:23	0:0	6	p_pict
op	19:29	0:0	6	->
water	19:31	0:0	6	i_planes
forexpr	19:41	19:42	5	i ++
water	19:41	0:0	6	i
op	19:42	0:0	6	++
stmts	20:7	23:7	5	
water	20:7	0:0	6	{
water	21:11	0:0	6	pic
op	21:14	0:0	6	.
water	21:15	0:0	6	img
op	21:18	0:0	6	.
water	21:19	0:0	6	plane
op	21:24	0:0	6	[
water	21:25	0:0	6	i
op	21:26	0:0	6	]
op	21:28	0:0	6	=
water	21:30	0:0	6	p_pict
op	21:36	0:0	6	->
water	21:38	0:0	6	p
op	21:39	0:0	6	[
water	21:40	0:0	6	i
op	21:41	0:0	6	]
op	21:42	0:0	6	.
water	21:43	0:0	6	p_pixels
water	21:51	0:0	6	;
water	22:11	0:0	6	pic
op	22:14	0:0	6	.
water	22:15	0:0	6	img
op	22:18	0:0	6	.
water	22:19	0:0	6	i_stride
op	22:27	0:0	6	[
water	22:28	0:0	6	i
op	22:29	0:0	6	]
op	22:31	0:0	6	=
water	22:33	0:0	6	p_pict
op	22:39	0:0	6	->
water	22:41	0:0	6	p
op	22:42	0:0	6	[
water	22:43	0:0	6	i
op	22:44	0:0	6	]
op	22:45	0:0	6	.
water	22:46	0:0	6	i_pitch
water	22:53	0:0	6	;
water	23:7	0:0	6	}
call	24:7	24:63	4	x264_encoder_encode
arg	24:28	24:36	5	p_sys->h
water	24:28	0:0	6	p_sys
op	24:33	0:0	6	->
water	24:35	0:0	6	h
arg	24:38	24:42	5	&nal
op	24:38	0:0	6	&
water	24:39	0:0	6	nal
arg	24:44	24:50	5	&i_nal
op	24:44	0:0	6	&
water	24:45	0:0	6	i_nal
arg	24:52	24:56	5	&pic
op	24:52	0:0	6	&
water	24:53	0:0	6	pic
arg	24:58	24:63	5	&pic
op	24:58	0:0	6	&
water	24:59	0:0	6	pic
water	24:64	0:0	4	;
water	25:4	0:0	4	}
else	25:6	29:4	2
stmts	25:11	29:4	3	
water	25:11	0:0	4	{
if	26:7	28:7	4	(x264_encoder_delayed_frames (p_sys -> h ))
cond	26:11	26:49	5	x264_encoder_delayed_frames (p_sys -> h )
call	26:11	26:49	6	x264_encoder_delayed_frames
arg	26:40	26:49	7	p_sys->h
water	26:40	0:0	8	p_sys
op	26:45	0:0	8	->
water	26:47	0:0	8	h
stmts	26:53	28:7	5	
water	26:53	0:0	6	{
call	27:11	27:67	6	x264_encoder_encode
arg	27:32	27:40	7	p_sys->h
water	27:32	0:0	8	p_sys
op	27:37	0:0	8	->
water	27:39	0:0	8	h
arg	27:42	27:46	7	&nal
op	27:42	0:0	8	&
water	27:43	0:0	8	nal
arg	27:48	27:54	7	&i_nal
op	27:48	0:0	8	&
water	27:49	0:0	8	i_nal
arg	27:56	27:60	7	NULL
water	27:56	0:0	8	NULL
arg	27:62	27:67	7	&pic
op	27:62	0:0	8	&
water	27:63	0:0	8	pic
water	27:68	0:0	6	;
water	28:7	0:0	6	}
water	29:4	0:0	4	}
if	30:4	30:28	2	(! i_nal)
cond	30:8	30:9	3	! i_nal
op	30:8	0:0	4	!
water	30:9	0:0	4	i_nal
stmts	30:17	30:28	3	
return	30:17	30:28	4	NULL
water	30:24	0:0	5	NULL
for	32:4	33:33	2	(i = 0 ;i < i_nal;i ++)
forinit	32:9	32:14	3	i = 0 ;
water	32:9	0:0	4	i
op	32:11	0:0	4	=
water	32:13	0:0	4	0
water	32:14	0:0	4	;
cond	32:16	32:20	3	i < i_nal
water	32:16	0:0	4	i
op	32:18	0:0	4	<
water	32:20	0:0	4	i_nal
forexpr	32:27	32:28	3	i ++
water	32:27	0:0	4	i
op	32:28	0:0	4	++
stmts	33:8	33:33	3	
water	33:8	0:0	4	i_out
op	33:14	0:0	4	+=
water	33:17	0:0	4	nal
op	33:20	0:0	4	[
water	33:21	0:0	4	i
op	33:22	0:0	4	]
op	33:23	0:0	4	.
water	33:24	0:0	4	i_payload
water	33:33	0:0	4	;
water	34:4	0:0	2	p_block
op	34:12	0:0	2	=
call	34:14	34:53	2	block_Alloc
arg	34:27	34:53	3	i_out+p_sys->i_sei_size
water	34:27	0:0	4	i_out
op	34:33	0:0	4	+
water	34:35	0:0	4	p_sys
op	34:40	0:0	4	->
water	34:42	0:0	4	i_sei_size
water	34:54	0:0	2	;
if	35:4	35:30	2	(! p_block)
cond	35:8	35:9	3	! p_block
op	35:8	0:0	4	!
water	35:9	0:0	4	p_block
stmts	35:19	35:30	3	
return	35:19	35:30	4	NULL
water	35:26	0:0	5	NULL
decl	36:4	36:29	2	unsigned int	i_offset
op	36:26	0:0	2	=
water	36:28	0:0	2	0
if	37:4	45:4	2	(unlikely (p_sys -> i_sei_size ))
cond	37:8	37:36	3	unlikely (p_sys -> i_sei_size )
call	37:8	37:36	4	unlikely
arg	37:18	37:36	5	p_sys->i_sei_size
water	37:18	0:0	6	p_sys
op	37:23	0:0	6	->
water	37:25	0:0	6	i_sei_size
stmts	38:4	45:4	3	
water	38:4	0:0	4	{
call	40:7	40:66	4	memcpy
arg	40:15	40:32	5	p_block->p_buffer
water	40:15	0:0	6	p_block
op	40:22	0:0	6	->
water	40:24	0:0	6	p_buffer
arg	40:34	40:46	5	p_sys->p_sei
water	40:34	0:0	6	p_sys
op	40:39	0:0	6	->
water	40:41	0:0	6	p_sei
arg	40:48	40:66	5	p_sys->i_sei_size
water	40:48	0:0	6	p_sys
op	40:53	0:0	6	->
water	40:55	0:0	6	i_sei_size
water	40:67	0:0	4	;
water	41:7	0:0	4	i_offset
op	41:16	0:0	4	=
water	41:18	0:0	4	p_sys
op	41:23	0:0	4	->
water	41:25	0:0	4	i_sei_size
water	41:35	0:0	4	;
water	42:7	0:0	4	p_sys
op	42:12	0:0	4	->
water	42:14	0:0	4	i_sei_size
op	42:25	0:0	4	=
water	42:27	0:0	4	0
water	42:28	0:0	4	;
call	43:7	43:26	4	free
arg	43:13	43:26	5	p_sys->p_sei
water	43:13	0:0	6	p_sys
op	43:18	0:0	6	->
water	43:20	0:0	6	p_sei
water	43:27	0:0	4	;
water	44:7	0:0	4	p_sys
op	44:12	0:0	4	->
water	44:14	0:0	4	p_sei
op	44:20	0:0	4	=
water	44:22	0:0	4	NULL
water	44:26	0:0	4	;
water	45:4	0:0	4	}
call	47:4	47:66	2	memcpy
arg	47:12	47:40	3	p_block->p_buffer+i_offset
water	47:12	0:0	4	p_block
op	47:19	0:0	4	->
water	47:21	0:0	4	p_buffer
op	47:30	0:0	4	+
water	47:32	0:0	4	i_offset
arg	47:42	47:58	3	nal[0].p_payload
water	47:42	0:0	4	nal
op	47:45	0:0	4	[
water	47:46	0:0	4	0
op	47:47	0:0	4	]
op	47:48	0:0	4	.
water	47:49	0:0	4	p_payload
arg	47:60	47:66	3	i_out
water	47:60	0:0	4	i_out
water	47:67	0:0	2	;
if	48:4	49:45	2	(pic . b_keyframe)
cond	48:8	48:12	3	pic . b_keyframe
water	48:8	0:0	4	pic
op	48:11	0:0	4	.
water	48:12	0:0	4	b_keyframe
stmts	49:8	49:45	3	
water	49:8	0:0	4	p_block
op	49:15	0:0	4	->
water	49:17	0:0	4	i_flags
op	49:25	0:0	4	|=
water	49:28	0:0	4	BLOCK_FLAG_TYPE_I
water	49:45	0:0	4	;
else	50:4	51:45	2
stmts	50:9	51:45	3	
if	50:9	51:45	4	(pic . i_type == X264_TYPE_P || pic . i_type == X264_TYPE_I)
cond	50:13	50:56	5	pic . i_type == X264_TYPE_P || pic . i_type == X264_TYPE_I
water	50:13	0:0	6	pic
op	50:16	0:0	6	.
water	50:17	0:0	6	i_type
op	50:24	0:0	6	==
water	50:27	0:0	6	X264_TYPE_P
op	50:39	0:0	6	||
water	50:42	0:0	6	pic
op	50:45	0:0	6	.
water	50:46	0:0	6	i_type
op	50:53	0:0	6	==
water	50:56	0:0	6	X264_TYPE_I
stmts	51:8	51:45	5	
water	51:8	0:0	6	p_block
op	51:15	0:0	6	->
water	51:17	0:0	6	i_flags
op	51:25	0:0	6	|=
water	51:28	0:0	6	BLOCK_FLAG_TYPE_P
water	51:45	0:0	6	;
else	52:4	53:45	2
stmts	52:9	53:45	3	
if	52:9	53:45	4	(IS_X264_TYPE_B (pic . i_type ))
cond	52:13	52:40	5	IS_X264_TYPE_B (pic . i_type )
call	52:13	52:40	6	IS_X264_TYPE_B
arg	52:29	52:40	7	pic.i_type
water	52:29	0:0	8	pic
op	52:32	0:0	8	.
water	52:33	0:0	8	i_type
stmts	53:8	53:45	5	
water	53:8	0:0	6	p_block
op	53:15	0:0	6	->
water	53:17	0:0	6	i_flags
op	53:25	0:0	6	|=
water	53:28	0:0	6	BLOCK_FLAG_TYPE_B
water	53:45	0:0	6	;
else	54:4	55:46	2
stmts	55:8	55:46	3	
water	55:8	0:0	4	p_block
op	55:15	0:0	4	->
water	55:17	0:0	4	i_flags
op	55:25	0:0	4	|=
water	55:28	0:0	4	BLOCK_FLAG_TYPE_PB
water	55:46	0:0	4	;
water	57:4	0:0	2	p_block
op	57:11	0:0	2	->
water	57:13	0:0	2	i_length
op	57:22	0:0	2	=
call	57:24	57:39	2	INT64_C
arg	57:32	57:39	3	1000000
water	57:32	0:0	4	1000000
op	57:41	0:0	2	*
water	58:8	0:0	2	p_enc
op	58:13	0:0	2	->
water	58:15	0:0	2	fmt_in
op	58:21	0:0	2	.
water	58:22	0:0	2	video
op	58:27	0:0	2	.
water	58:28	0:0	2	i_frame_rate_base
op	58:46	0:0	2	/
water	59:12	0:0	2	p_enc
op	59:17	0:0	2	->
water	59:19	0:0	2	fmt_in
op	59:25	0:0	2	.
water	59:26	0:0	2	video
op	59:31	0:0	2	.
water	59:32	0:0	2	i_frame_rate
water	59:44	0:0	2	;
water	61:4	0:0	2	p_block
op	61:11	0:0	2	->
water	61:13	0:0	2	i_pts
op	61:19	0:0	2	=
water	61:21	0:0	2	pic
op	61:24	0:0	2	.
water	61:25	0:0	2	i_pts
water	61:30	0:0	2	;
water	62:4	0:0	2	p_block
op	62:11	0:0	2	->
water	62:13	0:0	2	i_dts
op	62:19	0:0	2	=
water	62:21	0:0	2	pic
op	62:24	0:0	2	.
water	62:25	0:0	2	i_dts
water	62:30	0:0	2	;
return	63:4	63:18	2	p_block
water	63:11	0:0	3	p_block

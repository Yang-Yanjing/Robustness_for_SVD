func	1:0	47:0	0	bool	vcdplayer_play_prev
params	2:19	0:0	1	
param	2:21	2:41	2	access_t *	p_access
stmnts	0:0	46:20	1	
decl	4:2	4:63	2	vcdplayer_t	*p_vcdplayer
op	4:31	0:0	2	=
water	4:33	0:0	2	(
water	4:34	0:0	2	vcdplayer_t
op	4:46	0:0	2	*
water	4:47	0:0	2	)
water	4:48	0:0	2	p_access
op	4:56	0:0	2	->
water	4:58	0:0	2	p_sys
decl	5:2	5:49	2	vcdinfo_obj_t	*p_vcdinfo
op	5:31	0:0	2	=
water	5:33	0:0	2	p_vcdplayer
op	5:44	0:0	2	->
water	5:46	0:0	2	vcd
decl	6:2	6:26	2	vcdinfo_itemid_t	itemid
call	7:2	8:51	2	dbg_print
arg	7:13	7:43	3	(INPUT_DBG_CALL|INPUT_DBG_PBC)
water	7:13	0:0	4	(
water	7:14	0:0	4	INPUT_DBG_CALL
op	7:28	0:0	4	|
water	7:29	0:0	4	INPUT_DBG_PBC
water	7:42	0:0	4	)
arg	8:9	8:23	3	"current: %d"
water	8:9	0:0	4	"current: %d"
arg	8:25	8:51	3	p_vcdplayer->play_item.num
water	8:25	0:0	4	p_vcdplayer
op	8:36	0:0	4	->
water	8:38	0:0	4	play_item
op	8:47	0:0	4	.
water	8:48	0:0	4	num
water	8:52	0:0	2	;
water	9:2	0:0	2	itemid
op	9:9	0:0	2	=
water	9:11	0:0	2	p_vcdplayer
op	9:22	0:0	2	->
water	9:24	0:0	2	play_item
water	9:33	0:0	2	;
if	10:2	33:2	2	(vcdplayer_pbc_is_on (p_vcdplayer ))
cond	10:6	10:37	3	vcdplayer_pbc_is_on (p_vcdplayer )
call	10:6	10:37	4	vcdplayer_pbc_is_on
arg	10:26	10:37	5	p_vcdplayer
water	10:26	0:0	6	p_vcdplayer
stmts	10:40	33:2	3	
water	10:40	0:0	4	{
call	11:4	11:74	4	vcdinfo_lid_get_pxd
arg	11:24	11:33	5	p_vcdinfo
water	11:24	0:0	6	p_vcdinfo
arg	11:35	11:54	5	&(p_vcdplayer->pxd)
op	11:35	0:0	6	&
water	11:36	0:0	6	(
water	11:37	0:0	6	p_vcdplayer
op	11:48	0:0	6	->
water	11:50	0:0	6	pxd
water	11:53	0:0	6	)
arg	11:56	11:74	5	p_vcdplayer->i_lid
water	11:56	0:0	6	p_vcdplayer
op	11:67	0:0	6	->
water	11:69	0:0	6	i_lid
water	11:75	0:0	4	;
switch	12:4	32:4	4	(p_vcdplayer -> pxd . descriptor_type)
cond	12:12	12:29	5	p_vcdplayer -> pxd . descriptor_type
water	12:12	0:0	6	p_vcdplayer
op	12:23	0:0	6	->
water	12:25	0:0	6	pxd
op	12:28	0:0	6	.
water	12:29	0:0	6	descriptor_type
stmts	12:46	32:4	5	
water	12:46	0:0	6	{
label	13:4	13:32	6	case PSD_TYPE_SELECTION_LIST :
label	14:4	14:36	6	case PSD_TYPE_EXT_SELECTION_LIST :
if	15:6	15:52	6	(p_vcdplayer -> pxd . psd == NULL)
cond	15:10	15:34	7	p_vcdplayer -> pxd . psd == NULL
water	15:10	0:0	8	p_vcdplayer
op	15:21	0:0	8	->
water	15:23	0:0	8	pxd
op	15:26	0:0	8	.
water	15:27	0:0	8	psd
op	15:31	0:0	8	==
water	15:34	0:0	8	NULL
stmts	15:40	15:52	7	
return	15:40	15:52	8	false
water	15:47	0:0	9	false
call	16:6	18:48	6	vcdplayer_update_entry
arg	16:29	16:37	7	p_access
water	16:29	0:0	8	p_access
arg	17:29	17:77	7	vcdinf_psd_get_prev_offset(p_vcdplayer->pxd.psd)
call	17:29	17:76	8	vcdinf_psd_get_prev_offset
arg	17:56	17:76	9	p_vcdplayer->pxd.psd
water	17:56	0:0	10	p_vcdplayer
op	17:67	0:0	10	->
water	17:69	0:0	10	pxd
op	17:72	0:0	10	.
water	17:73	0:0	10	psd
arg	18:29	18:40	7	&itemid.num
op	18:29	0:0	8	&
water	18:30	0:0	8	itemid
op	18:36	0:0	8	.
water	18:37	0:0	8	num
arg	18:42	18:48	7	"prev"
water	18:42	0:0	8	"prev"
water	18:49	0:0	6	;
water	19:6	0:0	6	itemid
op	19:12	0:0	6	.
water	19:13	0:0	6	type
op	19:18	0:0	6	=
water	19:20	0:0	6	VCDINFO_ITEM_TYPE_LID
water	19:41	0:0	6	;
break	20:6	20:11	6	
label	21:4	21:27	6	case PSD_TYPE_PLAY_LIST :
if	22:6	22:52	6	(p_vcdplayer -> pxd . pld == NULL)
cond	22:10	22:34	7	p_vcdplayer -> pxd . pld == NULL
water	22:10	0:0	8	p_vcdplayer
op	22:21	0:0	8	->
water	22:23	0:0	8	pxd
op	22:26	0:0	8	.
water	22:27	0:0	8	pld
op	22:31	0:0	8	==
water	22:34	0:0	8	NULL
stmts	22:40	22:52	7	
return	22:40	22:52	8	false
water	22:47	0:0	9	false
call	23:6	25:48	6	vcdplayer_update_entry
arg	23:29	23:37	7	p_access
water	23:29	0:0	8	p_access
arg	24:29	24:77	7	vcdinf_pld_get_prev_offset(p_vcdplayer->pxd.pld)
call	24:29	24:76	8	vcdinf_pld_get_prev_offset
arg	24:56	24:76	9	p_vcdplayer->pxd.pld
water	24:56	0:0	10	p_vcdplayer
op	24:67	0:0	10	->
water	24:69	0:0	10	pxd
op	24:72	0:0	10	.
water	24:73	0:0	10	pld
arg	25:29	25:40	7	&itemid.num
op	25:29	0:0	8	&
water	25:30	0:0	8	itemid
op	25:36	0:0	8	.
water	25:37	0:0	8	num
arg	25:42	25:48	7	"prev"
water	25:42	0:0	8	"prev"
water	25:49	0:0	6	;
water	26:6	0:0	6	itemid
op	26:12	0:0	6	.
water	26:13	0:0	6	type
op	26:18	0:0	6	=
water	26:20	0:0	6	VCDINFO_ITEM_TYPE_LID
water	26:41	0:0	6	;
break	27:6	27:11	6	
label	28:4	28:26	6	case PSD_TYPE_END_LIST :
label	29:4	29:30	6	case PSD_TYPE_COMMAND_LIST :
call	30:6	30:56	6	LOG_WARN
arg	30:16	30:56	7	"There is no PBC 'prev' selection here"
water	30:16	0:0	8	"There is no PBC 'prev' selection here"
water	30:57	0:0	6	;
return	31:6	31:18	6	false
water	31:13	0:0	7	false
water	32:4	0:0	6	}
water	33:2	0:0	4	}
else	33:4	43:2	2
stmts	33:9	43:2	3	
water	33:9	0:0	4	{
decl	35:4	36:27	4	int	min_entry
op	35:18	0:0	4	=
water	35:20	0:0	4	(
water	35:21	0:0	4	VCDINFO_ITEM_TYPE_ENTRY
op	35:45	0:0	4	==
water	35:48	0:0	4	p_vcdplayer
op	35:59	0:0	4	->
water	35:61	0:0	4	play_item
op	35:70	0:0	4	.
water	35:71	0:0	4	type
water	35:75	0:0	4	)
water	36:20	0:0	4	?
water	36:22	0:0	4	0
water	36:24	0:0	4	:
water	36:26	0:0	4	1
if	37:4	39:4	4	(p_vcdplayer -> play_item . num > min_entry)
cond	37:8	37:37	5	p_vcdplayer -> play_item . num > min_entry
water	37:8	0:0	6	p_vcdplayer
op	37:19	0:0	6	->
water	37:21	0:0	6	play_item
op	37:30	0:0	6	.
water	37:31	0:0	6	num
op	37:35	0:0	6	>
water	37:37	0:0	6	min_entry
stmts	37:48	39:4	5	
water	37:48	0:0	6	{
water	38:6	0:0	6	itemid
op	38:12	0:0	6	.
water	38:13	0:0	6	num
op	38:17	0:0	6	=
water	38:19	0:0	6	p_vcdplayer
op	38:30	0:0	6	->
water	38:32	0:0	6	play_item
op	38:41	0:0	6	.
water	38:42	0:0	6	num
op	38:45	0:0	6	-
water	38:46	0:0	6	1
water	38:47	0:0	6	;
water	39:4	0:0	6	}
else	39:6	42:4	4
stmts	39:11	42:4	5	
water	39:11	0:0	6	{
call	40:6	40:70	6	LOG_WARN
arg	40:16	40:70	7	"At the beginning - non-PBC 'prev' not possible here"
water	40:16	0:0	8	"At the beginning - non-PBC 'prev' not possible here"
water	40:71	0:0	6	;
return	41:6	41:18	6	false
water	41:13	0:0	7	false
water	42:4	0:0	6	}
water	43:2	0:0	4	}
call	45:2	45:35	2	vcdplayer_play
arg	45:18	45:26	3	p_access
water	45:18	0:0	4	p_access
arg	45:28	45:35	3	itemid
water	45:28	0:0	4	itemid
water	45:36	0:0	2	;
return	46:2	46:20	2	VLC_SUCCESS
water	46:9	0:0	3	VLC_SUCCESS

func	2:0	77:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	76:22	1	
decl	4:4	4:44	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:27	2	char	*psz_parser
water	8:4	0:0	2	p_demux
op	8:11	0:0	2	->
water	8:13	0:0	2	pf_demux
op	8:22	0:0	2	=
water	8:24	0:0	2	Demux
water	8:29	0:0	2	;
water	9:4	0:0	2	p_demux
op	9:11	0:0	2	->
water	9:13	0:0	2	pf_control
op	9:24	0:0	2	=
water	9:26	0:0	2	Control
water	9:33	0:0	2	;
water	10:4	0:0	2	p_demux
op	10:11	0:0	2	->
water	10:13	0:0	2	p_sys
op	10:19	0:0	2	=
water	10:21	0:0	2	p_sys
op	10:27	0:0	2	=
call	10:29	10:62	2	calloc
arg	10:37	10:38	3	1
water	10:37	0:0	4	1
arg	10:40	10:62	3	sizeof(demux_sys_t)
op	10:40	0:0	4	sizeof
water	10:46	0:0	4	(
water	10:48	0:0	4	demux_sys_t
water	10:60	0:0	4	)
water	10:63	0:0	2	;
if	11:4	12:25	2	(unlikely (! p_sys ))
cond	11:8	11:23	3	unlikely (! p_sys )
call	11:8	11:23	4	unlikely
arg	11:17	11:23	5	!p_sys
op	11:17	0:0	6	!
water	11:18	0:0	6	p_sys
stmts	12:8	12:25	3	
return	12:8	12:25	4	VLC_ENOMEM
water	12:15	0:0	5	VLC_ENOMEM
decl	14:4	14:76	2	char	*psz_ar
op	14:17	0:0	2	=
call	14:19	14:75	3	var_InheritString
arg	14:38	14:45	4	p_demux
water	14:38	0:0	5	p_demux
arg	14:47	14:75	4	"linsys-hdsdi-aspect-ratio"
water	14:47	0:0	5	"linsys-hdsdi-aspect-ratio"
if	15:4	28:4	2	(psz_ar != NULL)
cond	15:9	15:19	3	psz_ar != NULL
water	15:9	0:0	4	psz_ar
op	15:16	0:0	4	!=
water	15:19	0:0	4	NULL
stmts	16:4	28:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	psz_parser
op	17:19	0:0	4	=
call	17:21	17:41	4	strchr
arg	17:29	17:35	5	psz_ar
water	17:29	0:0	6	psz_ar
arg	17:37	17:41	5	':'
water	17:37	0:0	6	':'
water	17:42	0:0	4	;
if	18:8	24:8	4	(psz_parser)
cond	18:13	18:13	5	psz_parser
water	18:13	0:0	6	psz_parser
stmts	19:8	24:8	5	
water	19:8	0:0	6	{
op	20:12	0:0	6	*
water	20:13	0:0	6	psz_parser
op	20:23	0:0	6	++
op	20:26	0:0	6	=
water	20:28	0:0	6	'\0'
water	20:32	0:0	6	;
water	21:12	0:0	6	p_sys
op	21:17	0:0	6	->
water	21:19	0:0	6	i_forced_aspect
op	21:35	0:0	6	=
water	21:37	0:0	6	p_sys
op	21:42	0:0	6	->
water	21:44	0:0	6	i_aspect
op	21:53	0:0	6	=
call	22:17	22:41	6	strtol
arg	22:25	22:31	7	psz_ar
water	22:25	0:0	8	psz_ar
arg	22:33	22:37	7	NULL
water	22:33	0:0	8	NULL
arg	22:39	22:41	7	0
water	22:39	0:0	8	0
op	22:43	0:0	6	*
water	22:45	0:0	6	VOUT_ASPECT_FACTOR
op	23:17	0:0	6	/
call	23:19	23:47	6	strtol
arg	23:27	23:37	7	psz_parser
water	23:27	0:0	8	psz_parser
arg	23:39	23:43	7	NULL
water	23:39	0:0	8	NULL
arg	23:45	23:47	7	0
water	23:45	0:0	8	0
water	23:48	0:0	6	;
water	24:8	0:0	6	}
else	25:8	26:38	4
stmts	26:12	26:38	5	
water	26:12	0:0	6	p_sys
op	26:17	0:0	6	->
water	26:19	0:0	6	i_forced_aspect
op	26:35	0:0	6	=
water	26:37	0:0	6	0
water	26:38	0:0	6	;
call	27:8	27:21	4	free
arg	27:14	27:21	5	psz_ar
water	27:14	0:0	6	psz_ar
water	27:22	0:0	4	;
water	28:4	0:0	4	}
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_id_video
op	30:22	0:0	2	=
call	30:24	30:77	2	var_InheritInteger
arg	30:44	30:51	3	p_demux
water	30:44	0:0	4	p_demux
arg	30:53	30:77	3	"linsys-hdsdi-id-video"
water	30:53	0:0	4	"linsys-hdsdi-id-video"
water	30:78	0:0	2	;
decl	32:4	33:77	2	char	*psz_string
op	32:21	0:0	2	=
water	32:23	0:0	2	psz_parser
op	32:34	0:0	2	=
call	32:36	33:76	3	var_InheritString
arg	32:55	32:62	4	p_demux
water	32:55	0:0	5	p_demux
arg	33:55	33:76	4	"linsys-hdsdi-audio"
water	33:55	0:0	5	"linsys-hdsdi-audio"
decl	34:4	34:13	2	int	i
op	34:10	0:0	2	=
water	34:12	0:0	2	0
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	i_max_channel
op	35:25	0:0	2	=
op	35:27	0:0	2	-
water	35:28	0:0	2	1
water	35:29	0:0	2	;
while	36:4	66:4	2	(psz_parser != NULL && * psz_parser)
cond	36:12	36:35	3	psz_parser != NULL && * psz_parser
water	36:12	0:0	4	psz_parser
op	36:23	0:0	4	!=
water	36:26	0:0	4	NULL
op	36:31	0:0	4	&&
op	36:34	0:0	4	*
water	36:35	0:0	4	psz_parser
stmts	37:4	66:4	3	
water	37:4	0:0	4	{
decl	38:8	38:33	4	int	i_id
water	38:16	0:0	4	,
decl	38:8	38:33	4	int	i_group
water	38:25	0:0	4	,
decl	38:8	38:33	4	int	i_pair
decl	39:8	39:50	4	char	*psz_next
op	39:23	0:0	4	=
call	39:25	39:49	5	strchr
arg	39:33	39:43	6	psz_parser
water	39:33	0:0	7	psz_parser
arg	39:45	39:49	6	'='
water	39:45	0:0	7	'='
if	40:8	45:8	4	(psz_next != NULL)
cond	40:13	40:25	5	psz_next != NULL
water	40:13	0:0	6	psz_next
op	40:22	0:0	6	!=
water	40:25	0:0	6	NULL
stmts	41:8	45:8	5	
water	41:8	0:0	6	{
op	42:12	0:0	6	*
water	42:13	0:0	6	psz_next
op	42:22	0:0	6	=
water	42:24	0:0	6	'\0'
water	42:28	0:0	6	;
water	43:12	0:0	6	i_id
op	43:17	0:0	6	=
call	43:19	43:47	6	strtol
arg	43:27	43:37	7	psz_parser
water	43:27	0:0	8	psz_parser
arg	43:39	43:43	7	NULL
water	43:39	0:0	8	NULL
arg	43:45	43:47	7	0
water	43:45	0:0	8	0
water	43:48	0:0	6	;
water	44:12	0:0	6	psz_parser
op	44:23	0:0	6	=
water	44:25	0:0	6	psz_next
op	44:34	0:0	6	+
water	44:36	0:0	6	1
water	44:37	0:0	6	;
water	45:8	0:0	6	}
else	46:8	47:20	4
stmts	47:12	47:20	5	
water	47:12	0:0	6	i_id
op	47:17	0:0	6	=
water	47:19	0:0	6	0
water	47:20	0:0	6	;
water	48:8	0:0	4	psz_next
op	48:17	0:0	4	=
call	48:19	48:43	4	strchr
arg	48:27	48:37	5	psz_parser
water	48:27	0:0	6	psz_parser
arg	48:39	48:43	5	':'
water	48:39	0:0	6	':'
water	48:44	0:0	4	;
if	49:8	53:8	4	(psz_next != NULL)
cond	49:13	49:25	5	psz_next != NULL
water	49:13	0:0	6	psz_next
op	49:22	0:0	6	!=
water	49:25	0:0	6	NULL
stmts	50:8	53:8	5	
water	50:8	0:0	6	{
op	51:12	0:0	6	*
water	51:13	0:0	6	psz_next
op	51:22	0:0	6	=
water	51:24	0:0	6	'\0'
water	51:28	0:0	6	;
water	52:12	0:0	6	psz_next
op	52:20	0:0	6	++
water	52:22	0:0	6	;
water	53:8	0:0	6	}
if	54:8	61:8	4	(sscanf (psz_parser ,"%d,%d" ,& i_group ,& i_pair ) == 2)
cond	54:13	54:65	5	sscanf (psz_parser ,"%d,%d" ,& i_group ,& i_pair ) == 2
call	54:13	54:60	6	sscanf
arg	54:21	54:31	7	psz_parser
water	54:21	0:0	8	psz_parser
arg	54:33	54:40	7	"%d,%d"
water	54:33	0:0	8	"%d,%d"
arg	54:42	54:50	7	&i_group
op	54:42	0:0	8	&
water	54:43	0:0	8	i_group
arg	54:52	54:60	7	&i_pair
op	54:52	0:0	8	&
water	54:53	0:0	8	i_pair
op	54:62	0:0	6	==
water	54:65	0:0	6	2
stmts	55:8	61:8	5	
water	55:8	0:0	6	{
water	56:12	0:0	6	p_sys
op	56:17	0:0	6	->
water	56:19	0:0	6	p_audios
op	56:27	0:0	6	[
water	56:28	0:0	6	i
op	56:29	0:0	6	]
op	56:30	0:0	6	.
water	56:31	0:0	6	i_channel
op	56:41	0:0	6	=
water	56:43	0:0	6	(
water	56:44	0:0	6	i_group
op	56:52	0:0	6	-
water	56:54	0:0	6	1
water	56:55	0:0	6	)
op	56:57	0:0	6	*
water	56:59	0:0	6	2
op	56:61	0:0	6	+
water	56:63	0:0	6	(
water	56:64	0:0	6	i_pair
op	56:71	0:0	6	-
water	56:73	0:0	6	1
water	56:74	0:0	6	)
water	56:75	0:0	6	;
if	57:12	58:67	6	(p_sys -> p_audios [ i ] . i_channel > p_sys -> i_max_channel)
cond	57:17	57:55	7	p_sys -> p_audios [ i ] . i_channel > p_sys -> i_max_channel
water	57:17	0:0	8	p_sys
op	57:22	0:0	8	->
water	57:24	0:0	8	p_audios
op	57:32	0:0	8	[
water	57:33	0:0	8	i
op	57:34	0:0	8	]
op	57:35	0:0	8	.
water	57:36	0:0	8	i_channel
op	57:46	0:0	8	>
water	57:48	0:0	8	p_sys
op	57:53	0:0	8	->
water	57:55	0:0	8	i_max_channel
stmts	58:16	58:67	7	
water	58:16	0:0	8	p_sys
op	58:21	0:0	8	->
water	58:23	0:0	8	i_max_channel
op	58:37	0:0	8	=
water	58:39	0:0	8	p_sys
op	58:44	0:0	8	->
water	58:46	0:0	8	p_audios
op	58:54	0:0	8	[
water	58:55	0:0	8	i
op	58:56	0:0	8	]
op	58:57	0:0	8	.
water	58:58	0:0	8	i_channel
water	58:67	0:0	8	;
water	59:12	0:0	6	p_sys
op	59:17	0:0	6	->
water	59:19	0:0	6	p_audios
op	59:27	0:0	6	[
water	59:28	0:0	6	i
op	59:29	0:0	6	]
op	59:30	0:0	6	.
water	59:31	0:0	6	i_id
op	59:36	0:0	6	=
water	59:38	0:0	6	i_id
water	59:42	0:0	6	;
water	60:12	0:0	6	i
op	60:13	0:0	6	++
water	60:15	0:0	6	;
water	61:8	0:0	6	}
else	62:8	64:34	4
stmts	63:12	64:34	5	
call	63:12	64:33	6	msg_Warn
arg	63:22	63:29	7	p_demux
water	63:22	0:0	8	p_demux
arg	63:31	63:67	7	"malformed audio configuration (%s)"
water	63:31	0:0	8	"malformed audio configuration (%s)"
arg	64:22	64:33	7	psz_parser
water	64:22	0:0	8	psz_parser
water	64:34	0:0	6	;
water	65:8	0:0	4	psz_parser
op	65:19	0:0	4	=
water	65:21	0:0	4	psz_next
water	65:29	0:0	4	;
water	66:4	0:0	4	}
call	67:4	67:21	2	free
arg	67:10	67:21	3	psz_string
water	67:10	0:0	4	psz_string
water	67:22	0:0	2	;
for	68:4	69:41	2	(;i < MAX_AUDIOS;i ++)
forinit	68:10	68:10	3	;
water	68:10	0:0	4	;
cond	68:12	68:16	3	i < MAX_AUDIOS
water	68:12	0:0	4	i
op	68:14	0:0	4	<
water	68:16	0:0	4	MAX_AUDIOS
forexpr	68:28	68:29	3	i ++
water	68:28	0:0	4	i
op	68:29	0:0	4	++
stmts	69:8	69:41	3	
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	p_audios
op	69:23	0:0	4	[
water	69:24	0:0	4	i
op	69:25	0:0	4	]
op	69:26	0:0	4	.
water	69:27	0:0	4	i_channel
op	69:37	0:0	4	=
op	69:39	0:0	4	-
water	69:40	0:0	4	1
water	69:41	0:0	4	;
water	70:4	0:0	2	p_sys
op	70:9	0:0	2	->
water	70:11	0:0	2	i_link
op	70:18	0:0	2	=
call	70:20	70:69	2	var_InheritInteger
arg	70:40	70:47	3	p_demux
water	70:40	0:0	4	p_demux
arg	70:49	70:69	3	"linsys-hdsdi-link"
water	70:49	0:0	4	"linsys-hdsdi-link"
water	70:70	0:0	2	;
if	71:4	75:4	2	(InitCapture (p_demux ) != VLC_SUCCESS)
cond	71:8	71:34	3	InitCapture (p_demux ) != VLC_SUCCESS
call	71:8	71:29	4	InitCapture
arg	71:21	71:29	5	p_demux
water	71:21	0:0	6	p_demux
op	71:31	0:0	4	!=
water	71:34	0:0	4	VLC_SUCCESS
stmts	72:4	75:4	3	
water	72:4	0:0	4	{
call	73:8	73:20	4	free
arg	73:14	73:20	5	p_sys
water	73:14	0:0	6	p_sys
water	73:21	0:0	4	;
return	74:8	74:27	4	VLC_EGENERIC
water	74:15	0:0	5	VLC_EGENERIC
water	75:4	0:0	4	}
return	76:4	76:22	2	VLC_SUCCESS
water	76:11	0:0	3	VLC_SUCCESS

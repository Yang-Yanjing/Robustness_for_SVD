func	2:0	19:0	0	static float	RmsEnvProcess
params	2:26	0:0	1	
param	2:28	2:41	2	rms_env *	p_r
param	2:43	2:59	2	const float	f_x
stmnts	5:4	18:44	1	
water	5:4	0:0	2	p_r
op	5:7	0:0	2	->
water	5:9	0:0	2	f_sum
op	5:15	0:0	2	-=
water	5:18	0:0	2	p_r
op	5:21	0:0	2	->
water	5:23	0:0	2	pf_buf
op	5:29	0:0	2	[
water	5:30	0:0	2	p_r
op	5:33	0:0	2	->
water	5:35	0:0	2	i_pos
op	5:40	0:0	2	]
water	5:41	0:0	2	;
water	7:4	0:0	2	p_r
op	7:7	0:0	2	->
water	7:9	0:0	2	f_sum
op	7:15	0:0	2	+=
water	7:18	0:0	2	f_x
water	7:21	0:0	2	;
if	9:4	12:4	2	(p_r -> f_sum < 1 . 0 e - 6)
cond	9:8	9:26	3	p_r -> f_sum < 1 . 0 e - 6
water	9:8	0:0	4	p_r
op	9:11	0:0	4	->
water	9:13	0:0	4	f_sum
op	9:19	0:0	4	<
water	9:21	0:0	4	1
op	9:22	0:0	4	.
water	9:23	0:0	4	0
water	9:24	0:0	4	e
op	9:25	0:0	4	-
water	9:26	0:0	4	6
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	p_r
op	11:11	0:0	4	->
water	11:13	0:0	4	f_sum
op	11:19	0:0	4	=
water	11:21	0:0	4	0
op	11:22	0:0	4	.
water	11:23	0:0	4	0
water	11:24	0:0	4	f
water	11:25	0:0	4	;
water	12:4	0:0	4	}
water	14:4	0:0	2	p_r
op	14:7	0:0	2	->
water	14:9	0:0	2	pf_buf
op	14:15	0:0	2	[
water	14:16	0:0	2	p_r
op	14:19	0:0	2	->
water	14:21	0:0	2	i_pos
op	14:26	0:0	2	]
op	14:28	0:0	2	=
water	14:30	0:0	2	f_x
water	14:33	0:0	2	;
water	16:4	0:0	2	p_r
op	16:7	0:0	2	->
water	16:9	0:0	2	i_pos
op	16:15	0:0	2	=
water	16:17	0:0	2	(
water	16:19	0:0	2	p_r
op	16:22	0:0	2	->
water	16:24	0:0	2	i_pos
op	16:30	0:0	2	+
water	16:32	0:0	2	1
water	16:34	0:0	2	)
op	16:36	0:0	2	%
water	16:38	0:0	2	(
water	16:40	0:0	2	p_r
op	16:43	0:0	2	->
water	16:45	0:0	2	i_count
water	16:53	0:0	2	)
water	16:54	0:0	2	;
return	18:4	18:44	2	sqrt(p_r->f_sum/p_r->i_count)
call	18:11	18:43	3	sqrt
arg	18:17	18:43	4	p_r->f_sum/p_r->i_count
water	18:17	0:0	5	p_r
op	18:20	0:0	5	->
water	18:22	0:0	5	f_sum
op	18:28	0:0	5	/
water	18:30	0:0	5	p_r
op	18:33	0:0	5	->
water	18:35	0:0	5	i_count

func	2:0	18:0	0	static int	Demux
params	2:16	0:0	1	
param	2:17	2:31	2	demux_t *	demux
stmnts	0:0	17:12	1	
decl	4:4	4:47	2	input_item_t	*input
op	4:24	0:0	2	=
call	4:26	4:46	3	GetCurrentItem
arg	4:41	4:46	4	demux
water	4:41	0:0	5	demux
decl	5:4	5:63	2	input_item_node_t	*subitems
op	5:32	0:0	2	=
call	5:34	5:62	3	input_item_node_Create
arg	5:57	5:62	4	input
water	5:57	0:0	5	input
decl	6:4	6:14	2	char	*line
while	7:4	14:4	2	(( line =stream_ReadLine (demux -> s ) ) != NULL)
cond	7:11	7:49	3	( line =stream_ReadLine (demux -> s ) ) != NULL
water	7:11	0:0	4	(
water	7:12	0:0	4	line
op	7:17	0:0	4	=
call	7:19	7:43	4	stream_ReadLine
arg	7:35	7:43	5	demux->s
water	7:35	0:0	6	demux
op	7:40	0:0	6	->
water	7:42	0:0	6	s
water	7:44	0:0	4	)
op	7:46	0:0	4	!=
water	7:49	0:0	4	NULL
stmts	8:4	14:4	3	
water	8:4	0:0	4	{
decl	9:8	9:44	4	input_item_t	*item
op	9:27	0:0	4	=
call	9:29	9:43	5	ParseLine
arg	9:39	9:43	6	line
water	9:39	0:0	7	line
if	10:8	11:20	4	(item == NULL)
cond	10:12	10:20	5	item == NULL
water	10:12	0:0	6	item
op	10:17	0:0	6	==
water	10:20	0:0	6	NULL
stmts	11:12	11:20	5	
continue	11:12	11:20	6	
call	12:8	12:49	4	input_item_node_AppendItem
arg	12:35	12:43	5	subitems
water	12:35	0:0	6	subitems
arg	12:45	12:49	5	item
water	12:45	0:0	6	item
water	12:50	0:0	4	;
call	13:8	13:26	4	vlc_gc_decref
arg	13:22	13:26	5	item
water	13:22	0:0	6	item
water	13:27	0:0	4	;
water	14:4	0:0	4	}
call	15:4	15:42	2	input_item_node_PostAndDelete
arg	15:34	15:42	3	subitems
water	15:34	0:0	4	subitems
water	15:43	0:0	2	;
call	16:4	16:23	2	vlc_gc_decref
arg	16:18	16:23	3	input
water	16:18	0:0	4	input
water	16:24	0:0	2	;
return	17:4	17:12	2	0
water	17:11	0:0	3	0

func	2:0	59:0	0	static void	cyuv_I420
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	58:4	1	
decl	5:4	5:43	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_source
op	5:30	0:0	2	->
water	5:32	0:0	2	p
op	5:33	0:0	2	->
water	5:35	0:0	2	p_pixels
decl	6:4	6:35	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_dest
op	6:25	0:0	2	->
water	6:27	0:0	2	Y_PIXELS
decl	7:4	7:35	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_dest
op	7:25	0:0	2	->
water	7:27	0:0	2	U_PIXELS
decl	8:4	8:35	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_dest
op	8:25	0:0	2	->
water	8:27	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	11:63	2	const int	i_dest_margin
op	10:28	0:0	2	=
water	10:30	0:0	2	p_dest
op	10:36	0:0	2	->
water	10:38	0:0	2	p
op	10:39	0:0	2	[
water	10:40	0:0	2	0
op	10:41	0:0	2	]
op	10:42	0:0	2	.
water	10:43	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_dest
op	11:41	0:0	2	->
water	11:43	0:0	2	p
op	11:44	0:0	2	[
water	11:45	0:0	2	0
op	11:46	0:0	2	]
op	11:47	0:0	2	.
water	11:48	0:0	2	i_visible_pitch
decl	12:4	13:63	2	const int	i_dest_margin_c
op	12:30	0:0	2	=
water	12:32	0:0	2	p_dest
op	12:38	0:0	2	->
water	12:40	0:0	2	p
op	12:41	0:0	2	[
water	12:42	0:0	2	1
op	12:43	0:0	2	]
op	12:44	0:0	2	.
water	12:45	0:0	2	i_pitch
op	13:33	0:0	2	-
water	13:35	0:0	2	p_dest
op	13:41	0:0	2	->
water	13:43	0:0	2	p
op	13:44	0:0	2	[
water	13:45	0:0	2	1
op	13:46	0:0	2	]
op	13:47	0:0	2	.
water	13:48	0:0	2	i_visible_pitch
decl	14:4	15:61	2	const int	i_source_margin
op	14:30	0:0	2	=
water	14:32	0:0	2	p_source
op	14:40	0:0	2	->
water	14:42	0:0	2	p
op	14:43	0:0	2	->
water	14:45	0:0	2	i_pitch
op	15:31	0:0	2	-
water	15:33	0:0	2	p_source
op	15:41	0:0	2	->
water	15:43	0:0	2	p
op	15:44	0:0	2	->
water	15:46	0:0	2	i_visible_pitch
decl	16:4	16:23	2	bool	b_skip
op	16:16	0:0	2	=
water	16:18	0:0	2	false
for	17:4	58:4	2	(i_y = p_filter -> fmt_out . video . i_height ;i_y --;)
forinit	17:9	17:48	3	i_y = p_filter -> fmt_out . video . i_height ;
water	17:9	0:0	4	i_y
op	17:13	0:0	4	=
water	17:15	0:0	4	p_filter
op	17:23	0:0	4	->
water	17:25	0:0	4	fmt_out
op	17:32	0:0	4	.
water	17:33	0:0	4	video
op	17:38	0:0	4	.
water	17:39	0:0	4	i_height
water	17:48	0:0	4	;
cond	17:50	17:53	3	i_y --
water	17:50	0:0	4	i_y
op	17:53	0:0	4	--
forexpr	0:0	0:0	3	
stmts	18:4	58:4	3	
water	18:4	0:0	4	{
if	19:8	35:8	4	(b_skip)
cond	19:12	19:12	5	b_skip
water	19:12	0:0	6	b_skip
stmts	20:8	35:8	5	
water	20:8	0:0	6	{
for	21:12	30:12	6	(i_x = p_filter -> fmt_out . video . i_width / 8 ;i_x --;)
forinit	21:17	21:59	7	i_x = p_filter -> fmt_out . video . i_width / 8 ;
water	21:17	0:0	8	i_x
op	21:21	0:0	8	=
water	21:23	0:0	8	p_filter
op	21:31	0:0	8	->
water	21:33	0:0	8	fmt_out
op	21:40	0:0	8	.
water	21:41	0:0	8	video
op	21:46	0:0	8	.
water	21:47	0:0	8	i_width
op	21:55	0:0	8	/
water	21:57	0:0	8	8
water	21:59	0:0	8	;
cond	21:61	21:64	7	i_x --
water	21:61	0:0	8	i_x
op	21:64	0:0	8	--
forexpr	0:0	0:0	7	
stmts	22:12	30:12	7	
water	22:12	0:0	8	{
op	24:16	0:0	8	*
water	24:17	0:0	8	p_y
op	24:20	0:0	8	++
op	24:23	0:0	8	=
op	24:25	0:0	8	*
water	24:26	0:0	8	p_line
op	24:32	0:0	8	++
water	24:34	0:0	8	;
water	24:36	0:0	8	p_line
op	24:42	0:0	8	++
water	24:44	0:0	8	;
op	25:16	0:0	8	*
water	25:17	0:0	8	p_y
op	25:20	0:0	8	++
op	25:23	0:0	8	=
op	25:25	0:0	8	*
water	25:26	0:0	8	p_line
op	25:32	0:0	8	++
water	25:34	0:0	8	;
water	25:36	0:0	8	p_line
op	25:42	0:0	8	++
call	26:16	26:58	8	C_cyuv_YUV422_skip
arg	26:36	26:42	9	p_line
water	26:36	0:0	10	p_line
arg	26:44	26:47	9	p_y
water	26:44	0:0	10	p_y
arg	26:49	26:52	9	p_u
water	26:49	0:0	10	p_u
arg	26:54	26:58	9	p_v
water	26:54	0:0	10	p_v
water	26:59	0:0	8	;
call	27:16	27:58	8	C_cyuv_YUV422_skip
arg	27:36	27:42	9	p_line
water	27:36	0:0	10	p_line
arg	27:44	27:47	9	p_y
water	27:44	0:0	10	p_y
arg	27:49	27:52	9	p_u
water	27:49	0:0	10	p_u
arg	27:54	27:58	9	p_v
water	27:54	0:0	10	p_v
water	27:59	0:0	8	;
call	28:16	28:58	8	C_cyuv_YUV422_skip
arg	28:36	28:42	9	p_line
water	28:36	0:0	10	p_line
arg	28:44	28:47	9	p_y
water	28:44	0:0	10	p_y
arg	28:49	28:52	9	p_u
water	28:49	0:0	10	p_u
arg	28:54	28:58	9	p_v
water	28:54	0:0	10	p_v
water	28:59	0:0	8	;
call	29:16	29:58	8	C_cyuv_YUV422_skip
arg	29:36	29:42	9	p_line
water	29:36	0:0	10	p_line
arg	29:44	29:47	9	p_y
water	29:44	0:0	10	p_y
arg	29:49	29:52	9	p_u
water	29:49	0:0	10	p_u
arg	29:54	29:58	9	p_v
water	29:54	0:0	10	p_v
water	29:59	0:0	8	;
water	30:12	0:0	8	}
for	31:12	34:12	6	(i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;i_x --;)
forinit	31:17	31:66	7	i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;
water	31:17	0:0	8	i_x
op	31:21	0:0	8	=
water	31:23	0:0	8	(
water	31:25	0:0	8	p_filter
op	31:33	0:0	8	->
water	31:35	0:0	8	fmt_out
op	31:42	0:0	8	.
water	31:43	0:0	8	video
op	31:48	0:0	8	.
water	31:49	0:0	8	i_width
op	31:57	0:0	8	%
water	31:59	0:0	8	8
water	31:61	0:0	8	)
op	31:63	0:0	8	/
water	31:65	0:0	8	2
water	31:66	0:0	8	;
cond	31:68	31:71	7	i_x --
water	31:68	0:0	8	i_x
op	31:71	0:0	8	--
forexpr	0:0	0:0	7	
stmts	32:12	34:12	7	
water	32:12	0:0	8	{
call	33:16	33:58	8	C_cyuv_YUV422_skip
arg	33:36	33:42	9	p_line
water	33:36	0:0	10	p_line
arg	33:44	33:47	9	p_y
water	33:44	0:0	10	p_y
arg	33:49	33:52	9	p_u
water	33:49	0:0	10	p_u
arg	33:54	33:58	9	p_v
water	33:54	0:0	10	p_v
water	33:59	0:0	8	;
water	34:12	0:0	8	}
water	35:8	0:0	6	}
else	36:8	52:8	4
stmts	37:8	52:8	5	
water	37:8	0:0	6	{
for	38:12	47:12	6	(i_x = p_filter -> fmt_out . video . i_width / 8 ;i_x --;)
forinit	38:17	38:59	7	i_x = p_filter -> fmt_out . video . i_width / 8 ;
water	38:17	0:0	8	i_x
op	38:21	0:0	8	=
water	38:23	0:0	8	p_filter
op	38:31	0:0	8	->
water	38:33	0:0	8	fmt_out
op	38:40	0:0	8	.
water	38:41	0:0	8	video
op	38:46	0:0	8	.
water	38:47	0:0	8	i_width
op	38:55	0:0	8	/
water	38:57	0:0	8	8
water	38:59	0:0	8	;
cond	38:61	38:64	7	i_x --
water	38:61	0:0	8	i_x
op	38:64	0:0	8	--
forexpr	0:0	0:0	7	
stmts	39:12	47:12	7	
water	39:12	0:0	8	{
op	41:16	0:0	8	*
water	41:17	0:0	8	p_y
op	41:20	0:0	8	++
op	41:23	0:0	8	=
op	41:25	0:0	8	*
water	41:26	0:0	8	p_line
op	41:32	0:0	8	++
water	41:34	0:0	8	;
op	41:36	0:0	8	*
water	41:37	0:0	8	p_v
op	41:40	0:0	8	++
op	41:43	0:0	8	=
op	41:45	0:0	8	*
water	41:46	0:0	8	p_line
op	41:52	0:0	8	++
water	41:54	0:0	8	;
op	42:16	0:0	8	*
water	42:17	0:0	8	p_y
op	42:20	0:0	8	++
op	42:23	0:0	8	=
op	42:25	0:0	8	*
water	42:26	0:0	8	p_line
op	42:32	0:0	8	++
water	42:34	0:0	8	;
op	42:36	0:0	8	*
water	42:37	0:0	8	p_u
op	42:40	0:0	8	++
op	42:43	0:0	8	=
op	42:45	0:0	8	*
water	42:46	0:0	8	p_line
op	42:52	0:0	8	++
call	43:16	43:53	8	C_cyuv_YUV422
arg	43:31	43:37	9	p_line
water	43:31	0:0	10	p_line
arg	43:39	43:42	9	p_y
water	43:39	0:0	10	p_y
arg	43:44	43:47	9	p_u
water	43:44	0:0	10	p_u
arg	43:49	43:53	9	p_v
water	43:49	0:0	10	p_v
water	43:54	0:0	8	;
call	44:16	44:53	8	C_cyuv_YUV422
arg	44:31	44:37	9	p_line
water	44:31	0:0	10	p_line
arg	44:39	44:42	9	p_y
water	44:39	0:0	10	p_y
arg	44:44	44:47	9	p_u
water	44:44	0:0	10	p_u
arg	44:49	44:53	9	p_v
water	44:49	0:0	10	p_v
water	44:54	0:0	8	;
call	45:16	45:53	8	C_cyuv_YUV422
arg	45:31	45:37	9	p_line
water	45:31	0:0	10	p_line
arg	45:39	45:42	9	p_y
water	45:39	0:0	10	p_y
arg	45:44	45:47	9	p_u
water	45:44	0:0	10	p_u
arg	45:49	45:53	9	p_v
water	45:49	0:0	10	p_v
water	45:54	0:0	8	;
call	46:16	46:53	8	C_cyuv_YUV422
arg	46:31	46:37	9	p_line
water	46:31	0:0	10	p_line
arg	46:39	46:42	9	p_y
water	46:39	0:0	10	p_y
arg	46:44	46:47	9	p_u
water	46:44	0:0	10	p_u
arg	46:49	46:53	9	p_v
water	46:49	0:0	10	p_v
water	46:54	0:0	8	;
water	47:12	0:0	8	}
for	48:12	51:12	6	(i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;i_x --;)
forinit	48:17	48:66	7	i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;
water	48:17	0:0	8	i_x
op	48:21	0:0	8	=
water	48:23	0:0	8	(
water	48:25	0:0	8	p_filter
op	48:33	0:0	8	->
water	48:35	0:0	8	fmt_out
op	48:42	0:0	8	.
water	48:43	0:0	8	video
op	48:48	0:0	8	.
water	48:49	0:0	8	i_width
op	48:57	0:0	8	%
water	48:59	0:0	8	8
water	48:61	0:0	8	)
op	48:63	0:0	8	/
water	48:65	0:0	8	2
water	48:66	0:0	8	;
cond	48:68	48:71	7	i_x --
water	48:68	0:0	8	i_x
op	48:71	0:0	8	--
forexpr	0:0	0:0	7	
stmts	49:12	51:12	7	
water	49:12	0:0	8	{
call	50:16	50:53	8	C_cyuv_YUV422
arg	50:31	50:37	9	p_line
water	50:31	0:0	10	p_line
arg	50:39	50:42	9	p_y
water	50:39	0:0	10	p_y
arg	50:44	50:47	9	p_u
water	50:44	0:0	10	p_u
arg	50:49	50:53	9	p_v
water	50:49	0:0	10	p_v
water	50:54	0:0	8	;
water	51:12	0:0	8	}
water	52:8	0:0	6	}
water	53:8	0:0	4	p_line
op	53:15	0:0	4	+=
water	53:18	0:0	4	i_source_margin
water	53:33	0:0	4	;
water	54:8	0:0	4	p_y
op	54:12	0:0	4	+=
water	54:15	0:0	4	i_dest_margin
water	54:28	0:0	4	;
water	55:8	0:0	4	p_u
op	55:12	0:0	4	+=
water	55:15	0:0	4	i_dest_margin_c
water	55:30	0:0	4	;
water	56:8	0:0	4	p_v
op	56:12	0:0	4	+=
water	56:15	0:0	4	i_dest_margin_c
water	56:30	0:0	4	;
water	57:8	0:0	4	b_skip
op	57:15	0:0	4	=
op	57:17	0:0	4	!
water	57:18	0:0	4	b_skip
water	57:24	0:0	4	;
water	58:4	0:0	4	}

func	2:0	38:0	0	static int	parseURL
params	2:19	0:0	1	
param	2:21	2:35	2	vlc_url_t *	url
param	2:37	2:53	2	const char *	path
param	2:55	2:76	2	enum tls_mode_e	mode
stmnts	4:4	37:22	1	
if	4:4	5:27	2	(path == NULL)
cond	4:8	4:16	3	path == NULL
water	4:8	0:0	4	path
op	4:13	0:0	4	==
water	4:16	0:0	4	NULL
stmts	5:8	5:27	3	
return	5:8	5:27	4	VLC_EGENERIC
water	5:15	0:0	5	VLC_EGENERIC
while	7:4	8:14	2	(* path == '/')
cond	7:11	7:20	3	* path == '/'
op	7:11	0:0	4	*
water	7:12	0:0	4	path
op	7:17	0:0	4	==
water	7:20	0:0	4	'/'
stmts	8:8	8:14	3	
water	8:8	0:0	4	path
op	8:12	0:0	4	++
water	8:14	0:0	4	;
call	9:4	9:31	2	vlc_UrlParse
arg	9:18	9:21	3	url
water	9:18	0:0	4	url
arg	9:23	9:27	3	path
water	9:23	0:0	4	path
arg	9:29	9:31	3	0
water	9:29	0:0	4	0
water	9:32	0:0	2	;
if	10:4	11:27	2	(url -> psz_host == NULL || * url -> psz_host == '\0')
cond	10:8	10:51	3	url -> psz_host == NULL || * url -> psz_host == '\0'
water	10:8	0:0	4	url
op	10:11	0:0	4	->
water	10:13	0:0	4	psz_host
op	10:22	0:0	4	==
water	10:25	0:0	4	NULL
op	10:30	0:0	4	||
op	10:33	0:0	4	*
water	10:34	0:0	4	url
op	10:37	0:0	4	->
water	10:39	0:0	4	psz_host
op	10:48	0:0	4	==
water	10:51	0:0	4	'\0'
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	18:4	2	(url -> i_port <= 0)
cond	12:8	12:23	3	url -> i_port <= 0
water	12:8	0:0	4	url
op	12:11	0:0	4	->
water	12:13	0:0	4	i_port
op	12:20	0:0	4	<=
water	12:23	0:0	4	0
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
if	14:8	15:37	4	(mode == IMPLICIT)
cond	14:12	14:20	5	mode == IMPLICIT
water	14:12	0:0	6	mode
op	14:17	0:0	6	==
water	14:20	0:0	6	IMPLICIT
stmts	15:12	15:37	5	
water	15:12	0:0	6	url
op	15:15	0:0	6	->
water	15:17	0:0	6	i_port
op	15:24	0:0	6	=
water	15:26	0:0	6	IPPORT_FTPS
water	15:37	0:0	6	;
else	16:8	17:36	4
stmts	17:12	17:36	5	
water	17:12	0:0	6	url
op	17:15	0:0	6	->
water	17:17	0:0	6	i_port
op	17:24	0:0	6	=
water	17:26	0:0	6	IPPORT_FTP
water	17:36	0:0	6	;
water	18:4	0:0	4	}
if	19:4	20:26	2	(url -> psz_path == NULL)
cond	19:8	19:25	3	url -> psz_path == NULL
water	19:8	0:0	4	url
op	19:11	0:0	4	->
water	19:13	0:0	4	psz_path
op	19:22	0:0	4	==
water	19:25	0:0	4	NULL
stmts	20:8	20:26	3	
return	20:8	20:26	4	VLC_SUCCESS
water	20:15	0:0	5	VLC_SUCCESS
if	24:4	28:4	2	(url -> psz_path)
cond	24:8	24:13	3	url -> psz_path
water	24:8	0:0	4	url
op	24:11	0:0	4	->
water	24:13	0:0	4	psz_path
stmts	25:4	28:4	3	
water	25:4	0:0	4	{
call	26:8	26:40	4	assert
arg	26:16	26:40	5	url->psz_path[0]=='/'
water	26:16	0:0	6	url
op	26:19	0:0	6	->
water	26:21	0:0	6	psz_path
op	26:29	0:0	6	[
water	26:30	0:0	6	0
op	26:31	0:0	6	]
op	26:33	0:0	6	==
water	26:36	0:0	6	'/'
water	26:41	0:0	4	;
water	27:8	0:0	4	url
op	27:11	0:0	4	->
water	27:13	0:0	4	psz_path
op	27:21	0:0	4	++
water	27:23	0:0	4	;
water	28:4	0:0	4	}
decl	29:4	29:50	2	char	*type
op	29:15	0:0	2	=
call	29:17	29:49	3	strstr
arg	29:25	29:38	4	url->psz_path
water	29:25	0:0	5	url
op	29:28	0:0	5	->
water	29:30	0:0	5	psz_path
arg	29:40	29:49	4	";type="
water	29:40	0:0	5	";type="
if	30:4	35:4	2	(type)
cond	30:8	30:8	3	type
water	30:8	0:0	4	type
stmts	31:4	35:4	3	
water	31:4	0:0	4	{
op	32:8	0:0	4	*
water	32:9	0:0	4	type
op	32:14	0:0	4	=
water	32:16	0:0	4	'\0'
water	32:20	0:0	4	;
if	33:8	34:31	4	(strchr ("iI" ,type [ 6 ] ) == NULL)
cond	33:12	33:39	5	strchr ("iI" ,type [ 6 ] ) == NULL
call	33:12	33:34	6	strchr
arg	33:20	33:24	7	"iI"
water	33:20	0:0	8	"iI"
arg	33:26	33:34	7	type[6]
water	33:26	0:0	8	type
op	33:30	0:0	8	[
water	33:31	0:0	8	6
op	33:32	0:0	8	]
op	33:36	0:0	6	==
water	33:39	0:0	6	NULL
stmts	34:12	34:31	5	
return	34:12	34:31	6	VLC_EGENERIC
water	34:19	0:0	7	VLC_EGENERIC
water	35:4	0:0	4	}
call	36:4	36:30	2	decode_URI
arg	36:16	36:30	3	url->psz_path
water	36:16	0:0	4	url
op	36:19	0:0	4	->
water	36:21	0:0	4	psz_path
water	36:31	0:0	2	;
return	37:4	37:22	2	VLC_SUCCESS
water	37:11	0:0	3	VLC_SUCCESS

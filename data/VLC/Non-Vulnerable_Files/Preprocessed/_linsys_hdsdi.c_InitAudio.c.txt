func	2:0	30:0	0	static int	InitAudio
params	2:20	0:0	1	
param	2:22	2:39	2	demux_t *	p_demux
stmnts	0:0	29:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:19	2	es_format_t	fmt
for	6:4	25:4	2	( int i = 0 ;i < MAX_AUDIOS;i ++)
forinit	0:0	6:19	3	 int i = 0 ;
decl	6:10	6:19	4	int	i
op	6:16	0:0	4	=
water	6:18	0:0	4	0
cond	6:21	6:25	3	i < MAX_AUDIOS
water	6:21	0:0	4	i
op	6:23	0:0	4	<
water	6:25	0:0	4	MAX_AUDIOS
forexpr	6:37	6:38	3	i ++
water	6:37	0:0	4	i
op	6:38	0:0	4	++
stmts	7:4	25:4	3	
water	7:4	0:0	4	{
decl	8:8	8:52	4	hdsdi_audio_t	*p_audio
op	8:31	0:0	4	=
op	8:33	0:0	4	&
water	8:34	0:0	4	p_sys
op	8:39	0:0	4	->
water	8:41	0:0	4	p_audios
op	8:49	0:0	4	[
water	8:50	0:0	4	i
op	8:51	0:0	4	]
if	9:8	9:48	4	(p_audio -> i_channel == - 1)
cond	9:13	9:36	5	p_audio -> i_channel == - 1
water	9:13	0:0	6	p_audio
op	9:20	0:0	6	->
water	9:22	0:0	6	i_channel
op	9:32	0:0	6	==
op	9:35	0:0	6	-
water	9:36	0:0	6	1
stmts	9:40	9:48	5	
continue	9:40	9:48	6	
call	10:8	12:56	4	msg_Dbg
arg	10:17	10:24	5	p_demux
water	10:17	0:0	6	p_demux
arg	10:26	10:65	5	"starting audio %u/%u rate:%u delay:%d"
water	10:26	0:0	6	"starting audio %u/%u rate:%u delay:%d"
arg	11:17	11:43	5	1+p_audio->i_channel/2
water	11:17	0:0	6	1
op	11:19	0:0	6	+
water	11:21	0:0	6	p_audio
op	11:28	0:0	6	->
water	11:30	0:0	6	i_channel
op	11:40	0:0	6	/
water	11:42	0:0	6	2
arg	11:45	11:73	5	1+(p_audio->i_channel%2)
water	11:45	0:0	6	1
op	11:47	0:0	6	+
water	11:49	0:0	6	(
water	11:50	0:0	6	p_audio
op	11:57	0:0	6	->
water	11:59	0:0	6	i_channel
op	11:69	0:0	6	%
water	11:71	0:0	6	2
water	11:72	0:0	6	)
arg	12:17	12:37	5	p_sys->i_sample_rate
water	12:17	0:0	6	p_sys
op	12:22	0:0	6	->
water	12:24	0:0	6	i_sample_rate
arg	12:39	12:56	5	p_audio->i_delay
water	12:39	0:0	6	p_audio
op	12:46	0:0	6	->
water	12:48	0:0	6	i_delay
water	12:57	0:0	4	;
call	13:8	13:68	4	es_format_Init
arg	13:24	13:28	5	&fmt
op	13:24	0:0	6	&
water	13:25	0:0	6	fmt
arg	13:30	13:38	5	AUDIO_ES
water	13:30	0:0	6	AUDIO_ES
arg	13:40	13:68	5	VLC_FOURCC('a','r','a','w')
call	13:40	13:66	6	VLC_FOURCC
arg	13:51	13:54	7	'a'
water	13:51	0:0	8	'a'
arg	13:55	13:58	7	'r'
water	13:55	0:0	8	'r'
arg	13:59	13:62	7	'a'
water	13:59	0:0	8	'a'
arg	13:63	13:66	7	'w'
water	13:63	0:0	8	'w'
water	13:69	0:0	4	;
water	14:8	0:0	4	fmt
op	14:11	0:0	4	.
water	14:12	0:0	4	i_id
op	14:17	0:0	4	=
water	14:19	0:0	4	p_audio
op	14:26	0:0	4	->
water	14:28	0:0	4	i_id
water	14:32	0:0	4	;
water	15:8	0:0	4	fmt
op	15:11	0:0	4	.
water	15:12	0:0	4	audio
op	15:17	0:0	4	.
water	15:18	0:0	4	i_channels
op	15:38	0:0	4	=
water	15:40	0:0	4	2
water	15:41	0:0	4	;
water	16:8	0:0	4	fmt
op	16:11	0:0	4	.
water	16:12	0:0	4	audio
op	16:17	0:0	4	.
water	16:18	0:0	4	i_original_channels
op	16:38	0:0	4	=
water	17:8	0:0	4	fmt
op	17:11	0:0	4	.
water	17:12	0:0	4	audio
op	17:17	0:0	4	.
water	17:18	0:0	4	i_physical_channels
op	17:38	0:0	4	=
water	17:40	0:0	4	AOUT_CHANS_STEREO
water	17:57	0:0	4	;
water	18:8	0:0	4	fmt
op	18:11	0:0	4	.
water	18:12	0:0	4	audio
op	18:17	0:0	4	.
water	18:18	0:0	4	i_rate
op	18:38	0:0	4	=
water	18:40	0:0	4	p_sys
op	18:45	0:0	4	->
water	18:47	0:0	4	i_sample_rate
water	18:60	0:0	4	;
water	19:8	0:0	4	fmt
op	19:11	0:0	4	.
water	19:12	0:0	4	audio
op	19:17	0:0	4	.
water	19:18	0:0	4	i_bitspersample
op	19:38	0:0	4	=
water	19:40	0:0	4	16
water	19:42	0:0	4	;
water	20:8	0:0	4	fmt
op	20:11	0:0	4	.
water	20:12	0:0	4	audio
op	20:17	0:0	4	.
water	20:18	0:0	4	i_blockalign
op	20:31	0:0	4	=
water	20:33	0:0	4	fmt
op	20:36	0:0	4	.
water	20:37	0:0	4	audio
op	20:42	0:0	4	.
water	20:43	0:0	4	i_channels
op	20:54	0:0	4	*
water	21:12	0:0	4	fmt
op	21:15	0:0	4	.
water	21:16	0:0	4	audio
op	21:21	0:0	4	.
water	21:22	0:0	4	i_bitspersample
op	21:38	0:0	4	/
water	21:40	0:0	4	8
water	21:41	0:0	4	;
water	22:8	0:0	4	fmt
op	22:11	0:0	4	.
water	22:12	0:0	4	i_bitrate
op	22:22	0:0	4	=
water	22:24	0:0	4	fmt
op	22:27	0:0	4	.
water	22:28	0:0	4	audio
op	22:33	0:0	4	.
water	22:34	0:0	4	i_channels
op	22:45	0:0	4	*
water	22:47	0:0	4	fmt
op	22:50	0:0	4	.
water	22:51	0:0	4	audio
op	22:56	0:0	4	.
water	22:57	0:0	4	i_rate
op	22:64	0:0	4	*
water	23:12	0:0	4	fmt
op	23:15	0:0	4	.
water	23:16	0:0	4	audio
op	23:21	0:0	4	.
water	23:22	0:0	4	i_bitspersample
water	23:37	0:0	4	;
water	24:8	0:0	4	p_audio
op	24:15	0:0	4	->
water	24:17	0:0	4	p_es
op	24:22	0:0	4	=
call	24:24	24:55	4	es_out_Add
arg	24:36	24:48	5	p_demux->out
water	24:36	0:0	6	p_demux
op	24:43	0:0	6	->
water	24:45	0:0	6	out
arg	24:50	24:55	5	&fmt
op	24:50	0:0	6	&
water	24:51	0:0	6	fmt
water	24:56	0:0	4	;
water	25:4	0:0	4	}
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	i_next_adate
op	26:24	0:0	2	=
water	26:26	0:0	2	START_DATE
water	26:36	0:0	2	;
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	i_ablock_size
op	27:25	0:0	2	=
water	27:27	0:0	2	p_sys
op	27:32	0:0	2	->
water	27:34	0:0	2	i_sample_rate
op	27:48	0:0	2	*
water	27:50	0:0	2	4
op	27:52	0:0	2	*
water	27:54	0:0	2	p_sys
op	27:59	0:0	2	->
water	27:61	0:0	2	i_frame_rate_base
op	27:79	0:0	2	/
water	27:81	0:0	2	p_sys
op	27:86	0:0	2	->
water	27:88	0:0	2	i_frame_rate
water	27:100	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	i_aincr
op	28:19	0:0	2	=
water	28:21	0:0	2	1000000
op	28:28	0:0	2	.
op	28:30	0:0	2	*
water	28:32	0:0	2	p_sys
op	28:37	0:0	2	->
water	28:39	0:0	2	i_ablock_size
op	28:53	0:0	2	/
water	28:55	0:0	2	p_sys
op	28:60	0:0	2	->
water	28:62	0:0	2	i_sample_rate
op	28:76	0:0	2	/
water	28:78	0:0	2	4
water	28:79	0:0	2	;
return	29:4	29:22	2	VLC_SUCCESS
water	29:11	0:0	3	VLC_SUCCESS

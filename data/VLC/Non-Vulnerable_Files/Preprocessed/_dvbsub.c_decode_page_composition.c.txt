func	2:0	81:0	0	static void	decode_page_composition
params	2:35	0:0	1	
param	2:37	2:53	2	decoder_t *	p_dec
param	2:55	2:63	2	bs_t *	s
stmnts	0:0	80:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:58	2	int	i_version
water	5:17	0:0	2	,
decl	5:4	5:58	2	int	i_state
water	5:26	0:0	2	,
decl	5:4	5:58	2	int	i_segment_length
water	5:44	0:0	2	,
decl	5:4	5:58	2	int	i_timeout
water	5:55	0:0	2	,
decl	5:4	5:58	2	int	i
water	7:4	0:0	2	i_segment_length
op	7:21	0:0	2	=
call	7:23	7:38	2	bs_read
arg	7:32	7:33	3	s
water	7:32	0:0	4	s
arg	7:35	7:38	3	16
water	7:35	0:0	4	16
water	7:39	0:0	2	;
water	8:4	0:0	2	i_timeout
op	8:14	0:0	2	=
call	8:16	8:30	2	bs_read
arg	8:25	8:26	3	s
water	8:25	0:0	4	s
arg	8:28	8:30	3	8
water	8:28	0:0	4	8
water	8:31	0:0	2	;
water	9:4	0:0	2	i_version
op	9:14	0:0	2	=
call	9:16	9:30	2	bs_read
arg	9:25	9:26	3	s
water	9:25	0:0	4	s
arg	9:28	9:30	3	4
water	9:28	0:0	4	4
water	9:31	0:0	2	;
water	10:4	0:0	2	i_state
op	10:12	0:0	2	=
call	10:14	10:28	2	bs_read
arg	10:23	10:24	3	s
water	10:23	0:0	4	s
arg	10:26	10:28	3	2
water	10:26	0:0	4	2
water	10:29	0:0	2	;
call	11:4	11:18	2	bs_skip
arg	11:13	11:14	3	s
water	11:13	0:0	4	s
arg	11:16	11:18	3	2
water	11:16	0:0	4	2
water	11:19	0:0	2	;
if	12:4	19:4	2	(i_state == DVBSUB_PCS_STATE_CHANGE)
cond	12:8	12:19	3	i_state == DVBSUB_PCS_STATE_CHANGE
water	12:8	0:0	4	i_state
op	12:16	0:0	4	==
water	12:19	0:0	4	DVBSUB_PCS_STATE_CHANGE
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
call	16:8	16:55	4	msg_Dbg
arg	16:17	16:22	5	p_dec
water	16:17	0:0	6	p_dec
arg	16:24	16:55	5	"page composition mode change"
water	16:24	0:0	6	"page composition mode change"
water	16:56	0:0	4	;
call	18:8	18:24	4	free_all
arg	18:18	18:24	5	p_dec
water	18:18	0:0	6	p_dec
water	18:25	0:0	4	;
water	19:4	0:0	4	}
else	20:4	30:4	2
stmts	20:9	30:4	3	
if	20:9	30:4	4	(! p_sys -> p_page && ( i_state != DVBSUB_PCS_STATE_ACQUISITION ) && ( i_state != DVBSUB_PCS_STATE_CHANGE ))
cond	20:13	21:50	5	! p_sys -> p_page && ( i_state != DVBSUB_PCS_STATE_ACQUISITION ) && ( i_state != DVBSUB_PCS_STATE_CHANGE )
op	20:13	0:0	6	!
water	20:14	0:0	6	p_sys
op	20:19	0:0	6	->
water	20:21	0:0	6	p_page
op	20:28	0:0	6	&&
water	20:31	0:0	6	(
water	20:33	0:0	6	i_state
op	20:41	0:0	6	!=
water	20:44	0:0	6	DVBSUB_PCS_STATE_ACQUISITION
water	20:73	0:0	6	)
op	20:75	0:0	6	&&
water	21:13	0:0	6	(
water	21:15	0:0	6	i_state
op	21:23	0:0	6	!=
water	21:26	0:0	6	DVBSUB_PCS_STATE_CHANGE
water	21:50	0:0	6	)
stmts	22:4	30:4	5	
water	22:4	0:0	6	{
call	24:8	24:65	6	msg_Dbg
arg	24:17	24:22	7	p_dec
water	24:17	0:0	8	p_dec
arg	24:24	24:65	7	"didn't receive an acquisition page yet"
water	24:24	0:0	8	"didn't receive an acquisition page yet"
water	24:66	0:0	6	;
call	27:8	27:48	6	bs_skip
arg	27:17	27:18	7	s
water	27:17	0:0	8	s
arg	27:21	27:48	7	8*(i_segment_length-2)
water	27:21	0:0	8	8
op	27:23	0:0	8	*
water	27:25	0:0	8	(
water	27:26	0:0	8	i_segment_length
op	27:43	0:0	8	-
water	27:45	0:0	8	2
water	27:46	0:0	8	)
water	27:49	0:0	6	;
return	28:8	28:14	6	
water	30:4	0:0	6	}
if	32:4	33:56	2	(i_state == DVBSUB_PCS_STATE_ACQUISITION)
cond	32:8	32:19	3	i_state == DVBSUB_PCS_STATE_ACQUISITION
water	32:8	0:0	4	i_state
op	32:16	0:0	4	==
water	32:19	0:0	4	DVBSUB_PCS_STATE_ACQUISITION
stmts	33:8	33:56	3	
call	33:8	33:55	4	msg_Dbg
arg	33:17	33:22	5	p_dec
water	33:17	0:0	6	p_dec
arg	33:24	33:55	5	"acquisition page composition"
water	33:24	0:0	6	"acquisition page composition"
water	33:56	0:0	4	;
if	36:4	40:4	2	(p_sys -> p_page && ( p_sys -> p_page -> i_version == i_version ))
cond	36:8	36:65	3	p_sys -> p_page && ( p_sys -> p_page -> i_version == i_version )
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	p_page
op	36:22	0:0	4	&&
water	36:25	0:0	4	(
water	36:27	0:0	4	p_sys
op	36:32	0:0	4	->
water	36:34	0:0	4	p_page
op	36:40	0:0	4	->
water	36:42	0:0	4	i_version
op	36:52	0:0	4	==
water	36:55	0:0	4	i_version
water	36:65	0:0	4	)
stmts	37:4	40:4	3	
water	37:4	0:0	4	{
call	38:8	38:48	4	bs_skip
arg	38:17	38:18	5	s
water	38:17	0:0	6	s
arg	38:21	38:48	5	8*(i_segment_length-2)
water	38:21	0:0	6	8
op	38:23	0:0	6	*
water	38:25	0:0	6	(
water	38:26	0:0	6	i_segment_length
op	38:43	0:0	6	-
water	38:45	0:0	6	2
water	38:46	0:0	6	)
water	38:49	0:0	4	;
return	39:8	39:14	4	
water	40:4	0:0	4	}
else	41:4	47:4	2
stmts	41:9	47:4	3	
if	41:9	47:4	4	(p_sys -> p_page)
cond	41:13	41:20	5	p_sys -> p_page
water	41:13	0:0	6	p_sys
op	41:18	0:0	6	->
water	41:20	0:0	6	p_page
stmts	42:4	47:4	5	
water	42:4	0:0	6	{
if	43:8	44:48	6	(p_sys -> p_page -> i_region_defs)
cond	43:12	43:27	7	p_sys -> p_page -> i_region_defs
water	43:12	0:0	8	p_sys
op	43:17	0:0	8	->
water	43:19	0:0	8	p_page
op	43:25	0:0	8	->
water	43:27	0:0	8	i_region_defs
stmts	44:12	44:48	7	
call	44:12	44:47	8	free
arg	44:18	44:47	9	p_sys->p_page->p_region_defs
water	44:18	0:0	10	p_sys
op	44:23	0:0	10	->
water	44:25	0:0	10	p_page
op	44:31	0:0	10	->
water	44:33	0:0	10	p_region_defs
water	44:48	0:0	8	;
water	45:8	0:0	6	p_sys
op	45:13	0:0	6	->
water	45:15	0:0	6	p_page
op	45:21	0:0	6	->
water	45:23	0:0	6	p_region_defs
op	45:37	0:0	6	=
water	45:39	0:0	6	NULL
water	45:43	0:0	6	;
water	46:8	0:0	6	p_sys
op	46:13	0:0	6	->
water	46:15	0:0	6	p_page
op	46:21	0:0	6	->
water	46:23	0:0	6	i_region_defs
op	46:37	0:0	6	=
water	46:39	0:0	6	0
water	46:40	0:0	6	;
water	47:4	0:0	6	}
if	48:4	57:4	2	(! p_sys -> p_page)
cond	48:8	48:16	3	! p_sys -> p_page
op	48:8	0:0	4	!
water	48:9	0:0	4	p_sys
op	48:14	0:0	4	->
water	48:16	0:0	4	p_page
stmts	49:4	57:4	3	
water	49:4	0:0	4	{
call	51:8	51:35	4	msg_Dbg
arg	51:17	51:22	5	p_dec
water	51:17	0:0	6	p_dec
arg	51:24	51:35	5	"new page"
water	51:24	0:0	6	"new page"
water	51:36	0:0	4	;
water	54:8	0:0	4	p_sys
op	54:13	0:0	4	->
water	54:15	0:0	4	p_page
op	54:22	0:0	4	=
call	54:24	54:54	4	malloc
arg	54:32	54:54	5	sizeof(dvbsub_page_t)
op	54:32	0:0	6	sizeof
water	54:38	0:0	6	(
water	54:39	0:0	6	dvbsub_page_t
water	54:52	0:0	6	)
water	54:55	0:0	4	;
if	55:8	56:18	4	(! p_sys -> p_page)
cond	55:12	55:20	5	! p_sys -> p_page
op	55:12	0:0	6	!
water	55:13	0:0	6	p_sys
op	55:18	0:0	6	->
water	55:20	0:0	6	p_page
stmts	56:12	56:18	5	
return	56:12	56:18	6	
water	57:4	0:0	4	}
water	58:4	0:0	2	p_sys
op	58:9	0:0	2	->
water	58:11	0:0	2	p_page
op	58:17	0:0	2	->
water	58:19	0:0	2	i_version
op	58:29	0:0	2	=
water	58:31	0:0	2	i_version
water	58:40	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	p_page
op	59:17	0:0	2	->
water	59:19	0:0	2	i_timeout
op	59:29	0:0	2	=
water	59:31	0:0	2	i_timeout
water	59:40	0:0	2	;
water	60:4	0:0	2	p_sys
op	60:9	0:0	2	->
water	60:11	0:0	2	b_page
op	60:18	0:0	2	=
water	60:20	0:0	2	true
water	60:24	0:0	2	;
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	p_page
op	62:17	0:0	2	->
water	62:19	0:0	2	i_region_defs
op	62:33	0:0	2	=
water	62:35	0:0	2	(
water	62:36	0:0	2	i_segment_length
op	62:53	0:0	2	-
water	62:55	0:0	2	2
water	62:56	0:0	2	)
op	62:58	0:0	2	/
water	62:60	0:0	2	6
water	62:61	0:0	2	;
if	63:4	63:50	2	(p_sys -> p_page -> i_region_defs == 0)
cond	63:8	63:40	3	p_sys -> p_page -> i_region_defs == 0
water	63:8	0:0	4	p_sys
op	63:13	0:0	4	->
water	63:15	0:0	4	p_page
op	63:21	0:0	4	->
water	63:23	0:0	4	i_region_defs
op	63:37	0:0	4	==
water	63:40	0:0	4	0
stmts	63:44	63:50	3	
return	63:44	63:50	4	
water	64:4	0:0	2	p_sys
op	64:9	0:0	2	->
water	64:11	0:0	2	p_page
op	64:17	0:0	2	->
water	64:19	0:0	2	p_region_defs
op	64:33	0:0	2	=
call	65:8	65:74	2	malloc
arg	65:16	65:74	3	p_sys->p_page->i_region_defs*sizeof(dvbsub_regiondef_t)
water	65:16	0:0	4	p_sys
op	65:21	0:0	4	->
water	65:23	0:0	4	p_page
op	65:29	0:0	4	->
water	65:31	0:0	4	i_region_defs
op	65:45	0:0	4	*
op	65:47	0:0	4	sizeof
water	65:53	0:0	4	(
water	65:54	0:0	4	dvbsub_regiondef_t
water	65:72	0:0	4	)
water	65:75	0:0	2	;
if	66:4	80:4	2	(p_sys -> p_page -> p_region_defs)
cond	66:8	66:23	3	p_sys -> p_page -> p_region_defs
water	66:8	0:0	4	p_sys
op	66:13	0:0	4	->
water	66:15	0:0	4	p_page
op	66:21	0:0	4	->
water	66:23	0:0	4	p_region_defs
stmts	67:4	80:4	3	
water	67:4	0:0	4	{
for	68:8	79:8	4	(i = 0 ;i < p_sys -> p_page -> i_region_defs;i ++)
forinit	68:13	68:18	5	i = 0 ;
water	68:13	0:0	6	i
op	68:15	0:0	6	=
water	68:17	0:0	6	0
water	68:18	0:0	6	;
cond	68:20	68:39	5	i < p_sys -> p_page -> i_region_defs
water	68:20	0:0	6	i
op	68:22	0:0	6	<
water	68:24	0:0	6	p_sys
op	68:29	0:0	6	->
water	68:31	0:0	6	p_page
op	68:37	0:0	6	->
water	68:39	0:0	6	i_region_defs
forexpr	68:54	68:55	5	i ++
water	68:54	0:0	6	i
op	68:55	0:0	6	++
stmts	69:8	79:8	5	
water	69:8	0:0	6	{
water	70:12	0:0	6	p_sys
op	70:17	0:0	6	->
water	70:19	0:0	6	p_page
op	70:25	0:0	6	->
water	70:27	0:0	6	p_region_defs
op	70:40	0:0	6	[
water	70:41	0:0	6	i
op	70:42	0:0	6	]
op	70:43	0:0	6	.
water	70:44	0:0	6	i_id
op	70:49	0:0	6	=
call	70:51	70:65	6	bs_read
arg	70:60	70:61	7	s
water	70:60	0:0	8	s
arg	70:63	70:65	7	8
water	70:63	0:0	8	8
water	70:66	0:0	6	;
call	71:12	71:26	6	bs_skip
arg	71:21	71:22	7	s
water	71:21	0:0	8	s
arg	71:24	71:26	7	8
water	71:24	0:0	8	8
water	71:27	0:0	6	;
water	72:12	0:0	6	p_sys
op	72:17	0:0	6	->
water	72:19	0:0	6	p_page
op	72:25	0:0	6	->
water	72:27	0:0	6	p_region_defs
op	72:40	0:0	6	[
water	72:41	0:0	6	i
op	72:42	0:0	6	]
op	72:43	0:0	6	.
water	72:44	0:0	6	i_x
op	72:48	0:0	6	=
call	72:50	72:65	6	bs_read
arg	72:59	72:60	7	s
water	72:59	0:0	8	s
arg	72:62	72:65	7	16
water	72:62	0:0	8	16
water	72:66	0:0	6	;
water	73:12	0:0	6	p_sys
op	73:17	0:0	6	->
water	73:19	0:0	6	p_page
op	73:25	0:0	6	->
water	73:27	0:0	6	p_region_defs
op	73:40	0:0	6	[
water	73:41	0:0	6	i
op	73:42	0:0	6	]
op	73:43	0:0	6	.
water	73:44	0:0	6	i_y
op	73:48	0:0	6	=
call	73:50	73:65	6	bs_read
arg	73:59	73:60	7	s
water	73:59	0:0	8	s
arg	73:62	73:65	7	16
water	73:62	0:0	8	16
water	73:66	0:0	6	;
call	75:12	77:56	6	msg_Dbg
arg	75:21	75:26	7	p_dec
water	75:21	0:0	8	p_dec
arg	75:28	75:65	7	"page_composition, region %i (%i,%i)"
water	75:28	0:0	8	"page_composition, region %i (%i,%i)"
arg	76:20	76:21	7	i
water	76:20	0:0	8	i
arg	76:23	76:58	7	p_sys->p_page->p_region_defs[i].i_x
water	76:23	0:0	8	p_sys
op	76:28	0:0	8	->
water	76:30	0:0	8	p_page
op	76:36	0:0	8	->
water	76:38	0:0	8	p_region_defs
op	76:51	0:0	8	[
water	76:52	0:0	8	i
op	76:53	0:0	8	]
op	76:54	0:0	8	.
water	76:55	0:0	8	i_x
arg	77:20	77:56	7	p_sys->p_page->p_region_defs[i].i_y
water	77:20	0:0	8	p_sys
op	77:25	0:0	8	->
water	77:27	0:0	8	p_page
op	77:33	0:0	8	->
water	77:35	0:0	8	p_region_defs
op	77:48	0:0	8	[
water	77:49	0:0	8	i
op	77:50	0:0	8	]
op	77:51	0:0	8	.
water	77:52	0:0	8	i_y
water	77:57	0:0	6	;
water	79:8	0:0	6	}
water	80:4	0:0	4	}

func	2:0	204:0	0	void	I420_A8R8G8B8
params	2:18	0:0	1	
param	2:20	2:38	2	filter_t *	p_filter
param	2:40	2:56	2	picture_t *	p_src
param	3:44	3:62	2	picture_t *	p_dest
stmnts	0:0	202:11	1	
decl	6:4	6:52	2	uint32_t	*p_pic
op	6:20	0:0	2	=
water	6:22	0:0	2	(
water	6:23	0:0	2	uint32_t
op	6:31	0:0	2	*
water	6:32	0:0	2	)
water	6:33	0:0	2	p_dest
op	6:39	0:0	2	->
water	6:41	0:0	2	p
op	6:42	0:0	2	->
water	6:44	0:0	2	p_pixels
decl	7:4	7:37	2	uint8_t	*p_y
op	7:20	0:0	2	=
water	7:22	0:0	2	p_src
op	7:27	0:0	2	->
water	7:29	0:0	2	Y_PIXELS
decl	8:4	8:37	2	uint8_t	*p_u
op	8:20	0:0	2	=
water	8:22	0:0	2	p_src
op	8:27	0:0	2	->
water	8:29	0:0	2	U_PIXELS
decl	9:4	9:37	2	uint8_t	*p_v
op	9:20	0:0	2	=
water	9:22	0:0	2	p_src
op	9:27	0:0	2	->
water	9:29	0:0	2	V_PIXELS
decl	10:4	10:18	2	bool	b_hscale
decl	11:4	11:25	2	unsigned int	i_vscale
decl	12:4	12:25	2	unsigned int	i_x
water	12:20	0:0	2	,
decl	12:4	12:25	2	unsigned int	i_y
decl	13:4	13:30	2	int	i_right_margin
decl	14:4	14:24	2	int	i_rewind
decl	15:4	15:29	2	int	i_scale_count
decl	16:4	16:113	2	int	i_chroma_width
op	16:31	0:0	2	=
water	16:33	0:0	2	(
water	16:34	0:0	2	p_filter
op	16:42	0:0	2	->
water	16:44	0:0	2	fmt_in
op	16:50	0:0	2	.
water	16:51	0:0	2	video
op	16:56	0:0	2	.
water	16:57	0:0	2	i_x_offset
op	16:68	0:0	2	+
water	16:70	0:0	2	p_filter
op	16:78	0:0	2	->
water	16:80	0:0	2	fmt_in
op	16:86	0:0	2	.
water	16:87	0:0	2	video
op	16:92	0:0	2	.
water	16:93	0:0	2	i_visible_width
water	16:108	0:0	2	)
op	16:110	0:0	2	/
water	16:112	0:0	2	2
decl	17:4	17:27	2	uint32_t	*p_pic_start
decl	19:4	19:69	2	uint32_t	*p_buffer_start
op	19:31	0:0	2	=
water	19:33	0:0	2	(
water	19:34	0:0	2	uint32_t
op	19:42	0:0	2	*
water	19:43	0:0	2	)
water	19:44	0:0	2	p_filter
op	19:52	0:0	2	->
water	19:54	0:0	2	p_sys
op	19:59	0:0	2	->
water	19:61	0:0	2	p_buffer
decl	20:4	20:24	2	uint32_t	*p_buffer
decl	22:4	22:58	2	int	*p_offset_start
op	22:31	0:0	2	=
water	22:33	0:0	2	p_filter
op	22:41	0:0	2	->
water	22:43	0:0	2	p_sys
op	22:48	0:0	2	->
water	22:50	0:0	2	p_offset
decl	23:4	23:24	2	int	*p_offset
decl	24:4	26:68	2	const int	i_source_margin
op	24:30	0:0	2	=
water	24:32	0:0	2	p_src
op	24:37	0:0	2	->
water	24:39	0:0	2	p
op	24:40	0:0	2	[
water	24:41	0:0	2	0
op	24:42	0:0	2	]
op	24:43	0:0	2	.
water	24:44	0:0	2	i_pitch
op	25:33	0:0	2	-
water	25:35	0:0	2	p_src
op	25:40	0:0	2	->
water	25:42	0:0	2	p
op	25:43	0:0	2	[
water	25:44	0:0	2	0
op	25:45	0:0	2	]
op	25:46	0:0	2	.
water	25:47	0:0	2	i_visible_pitch
op	26:33	0:0	2	-
water	26:35	0:0	2	p_filter
op	26:43	0:0	2	->
water	26:45	0:0	2	fmt_in
op	26:51	0:0	2	.
water	26:52	0:0	2	video
op	26:57	0:0	2	.
water	26:58	0:0	2	i_x_offset
decl	27:4	29:76	2	const int	i_source_margin_c
op	27:32	0:0	2	=
water	27:34	0:0	2	p_src
op	27:39	0:0	2	->
water	27:41	0:0	2	p
op	27:42	0:0	2	[
water	27:43	0:0	2	1
op	27:44	0:0	2	]
op	27:45	0:0	2	.
water	27:46	0:0	2	i_pitch
op	28:33	0:0	2	-
water	28:35	0:0	2	p_src
op	28:40	0:0	2	->
water	28:42	0:0	2	p
op	28:43	0:0	2	[
water	28:44	0:0	2	1
op	28:45	0:0	2	]
op	28:46	0:0	2	.
water	28:47	0:0	2	i_visible_pitch
op	29:33	0:0	2	-
water	29:35	0:0	2	(
water	29:37	0:0	2	p_filter
op	29:45	0:0	2	->
water	29:47	0:0	2	fmt_in
op	29:53	0:0	2	.
water	29:54	0:0	2	video
op	29:59	0:0	2	.
water	29:60	0:0	2	i_x_offset
op	29:71	0:0	2	/
water	29:73	0:0	2	2
water	29:75	0:0	2	)
water	30:4	0:0	2	i_right_margin
op	30:19	0:0	2	=
water	30:21	0:0	2	p_dest
op	30:27	0:0	2	->
water	30:29	0:0	2	p
op	30:30	0:0	2	->
water	30:32	0:0	2	i_pitch
op	30:40	0:0	2	-
water	30:42	0:0	2	p_dest
op	30:48	0:0	2	->
water	30:50	0:0	2	p
op	30:51	0:0	2	->
water	30:53	0:0	2	i_visible_pitch
water	30:68	0:0	2	;
call	34:4	38:52	2	SetOffset
arg	34:15	34:89	3	p_filter->fmt_in.video.i_x_offset+p_filter->fmt_in.video.i_visible_width
water	34:15	0:0	4	p_filter
op	34:23	0:0	4	->
water	34:25	0:0	4	fmt_in
op	34:31	0:0	4	.
water	34:32	0:0	4	video
op	34:37	0:0	4	.
water	34:38	0:0	4	i_x_offset
op	34:49	0:0	4	+
water	34:51	0:0	4	p_filter
op	34:59	0:0	4	->
water	34:61	0:0	4	fmt_in
op	34:67	0:0	4	.
water	34:68	0:0	4	video
op	34:73	0:0	4	.
water	34:74	0:0	4	i_visible_width
arg	35:15	35:90	3	p_filter->fmt_in.video.i_y_offset+p_filter->fmt_in.video.i_visible_height
water	35:15	0:0	4	p_filter
op	35:23	0:0	4	->
water	35:25	0:0	4	fmt_in
op	35:31	0:0	4	.
water	35:32	0:0	4	video
op	35:37	0:0	4	.
water	35:38	0:0	4	i_y_offset
op	35:49	0:0	4	+
water	35:51	0:0	4	p_filter
op	35:59	0:0	4	->
water	35:61	0:0	4	fmt_in
op	35:67	0:0	4	.
water	35:68	0:0	4	video
op	35:73	0:0	4	.
water	35:74	0:0	4	i_visible_height
arg	36:15	36:93	3	(p_filter->fmt_out.video.i_x_offset+p_filter->fmt_out.video.i_visible_width)
water	36:15	0:0	4	(
water	36:16	0:0	4	p_filter
op	36:24	0:0	4	->
water	36:26	0:0	4	fmt_out
op	36:33	0:0	4	.
water	36:34	0:0	4	video
op	36:39	0:0	4	.
water	36:40	0:0	4	i_x_offset
op	36:51	0:0	4	+
water	36:53	0:0	4	p_filter
op	36:61	0:0	4	->
water	36:63	0:0	4	fmt_out
op	36:70	0:0	4	.
water	36:71	0:0	4	video
op	36:76	0:0	4	.
water	36:77	0:0	4	i_visible_width
water	36:92	0:0	4	)
arg	37:15	37:94	3	(p_filter->fmt_out.video.i_y_offset+p_filter->fmt_out.video.i_visible_height)
water	37:15	0:0	4	(
water	37:16	0:0	4	p_filter
op	37:24	0:0	4	->
water	37:26	0:0	4	fmt_out
op	37:33	0:0	4	.
water	37:34	0:0	4	video
op	37:39	0:0	4	.
water	37:40	0:0	4	i_y_offset
op	37:51	0:0	4	+
water	37:53	0:0	4	p_filter
op	37:61	0:0	4	->
water	37:63	0:0	4	fmt_out
op	37:70	0:0	4	.
water	37:71	0:0	4	video
op	37:76	0:0	4	.
water	37:77	0:0	4	i_visible_height
water	37:93	0:0	4	)
arg	38:15	38:24	3	&b_hscale
op	38:15	0:0	4	&
water	38:16	0:0	4	b_hscale
arg	38:26	38:35	3	&i_vscale
op	38:26	0:0	4	&
water	38:27	0:0	4	i_vscale
arg	38:37	38:52	3	p_offset_start
water	38:37	0:0	4	p_offset_start
water	38:53	0:0	2	;
water	42:4	0:0	2	i_scale_count
op	42:18	0:0	2	=
water	42:20	0:0	2	(
water	42:22	0:0	2	i_vscale
op	42:31	0:0	2	==
water	42:34	0:0	2	1
water	42:36	0:0	2	)
water	42:38	0:0	2	?
water	43:20	0:0	2	(
water	43:21	0:0	2	p_filter
op	43:29	0:0	2	->
water	43:31	0:0	2	fmt_out
op	43:38	0:0	2	.
water	43:39	0:0	2	video
op	43:44	0:0	2	.
water	43:45	0:0	2	i_y_offset
op	43:56	0:0	2	+
water	43:58	0:0	2	p_filter
op	43:66	0:0	2	->
water	43:68	0:0	2	fmt_out
op	43:75	0:0	2	.
water	43:76	0:0	2	video
op	43:81	0:0	2	.
water	43:82	0:0	2	i_visible_height
water	43:98	0:0	2	)
water	43:100	0:0	2	:
water	44:20	0:0	2	(
water	44:21	0:0	2	p_filter
op	44:29	0:0	2	->
water	44:31	0:0	2	fmt_in
op	44:37	0:0	2	.
water	44:38	0:0	2	video
op	44:43	0:0	2	.
water	44:44	0:0	2	i_y_offset
op	44:55	0:0	2	+
water	44:57	0:0	2	p_filter
op	44:65	0:0	2	->
water	44:67	0:0	2	fmt_in
op	44:73	0:0	2	.
water	44:74	0:0	2	video
op	44:79	0:0	2	.
water	44:80	0:0	2	i_visible_height
water	44:96	0:0	2	)
water	44:97	0:0	2	;
water	46:4	0:0	2	i_rewind
op	46:13	0:0	2	=
water	46:15	0:0	2	(
op	46:16	0:0	2	-
water	46:17	0:0	2	(
water	46:18	0:0	2	p_filter
op	46:26	0:0	2	->
water	46:28	0:0	2	fmt_in
op	46:34	0:0	2	.
water	46:35	0:0	2	video
op	46:40	0:0	2	.
water	46:41	0:0	2	i_x_offset
op	46:52	0:0	2	+
water	46:54	0:0	2	p_filter
op	46:62	0:0	2	->
water	46:64	0:0	2	fmt_in
op	46:70	0:0	2	.
water	46:71	0:0	2	video
op	46:76	0:0	2	.
water	46:77	0:0	2	i_visible_width
water	46:92	0:0	2	)
water	46:93	0:0	2	)
op	46:95	0:0	2	&
water	46:97	0:0	2	15
water	46:99	0:0	2	;
water	51:4	0:0	2	p_buffer
op	51:13	0:0	2	=
water	51:15	0:0	2	b_hscale
water	51:24	0:0	2	?
water	51:26	0:0	2	p_buffer_start
water	51:41	0:0	2	:
water	51:43	0:0	2	p_pic
water	51:48	0:0	2	;
if	52:4	102:4	2	(0 == ( 15 & ( p_src -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_y ) | ( ( intptr_t ) p_buffer ) ) ))
cond	52:8	55:41	3	0 == ( 15 & ( p_src -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_y ) | ( ( intptr_t ) p_buffer ) ) )
water	52:8	0:0	4	0
op	52:10	0:0	4	==
water	52:13	0:0	4	(
water	52:14	0:0	4	15
op	52:17	0:0	4	&
water	52:19	0:0	4	(
water	52:20	0:0	4	p_src
op	52:25	0:0	4	->
water	52:27	0:0	4	p
op	52:28	0:0	4	[
water	52:29	0:0	4	Y_PLANE
op	52:36	0:0	4	]
op	52:37	0:0	4	.
water	52:38	0:0	4	i_pitch
op	52:45	0:0	4	|
water	53:20	0:0	4	p_dest
op	53:26	0:0	4	->
water	53:28	0:0	4	p
op	53:29	0:0	4	->
water	53:31	0:0	4	i_pitch
op	53:38	0:0	4	|
water	54:20	0:0	4	(
water	54:21	0:0	4	(
water	54:22	0:0	4	intptr_t
water	54:30	0:0	4	)
water	54:31	0:0	4	p_y
water	54:34	0:0	4	)
op	54:35	0:0	4	|
water	55:20	0:0	4	(
water	55:21	0:0	4	(
water	55:22	0:0	4	intptr_t
water	55:30	0:0	4	)
water	55:31	0:0	4	p_buffer
water	55:39	0:0	4	)
water	55:40	0:0	4	)
water	55:41	0:0	4	)
stmts	56:4	102:4	3	
water	56:4	0:0	4	{
for	58:8	101:8	4	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	58:13	58:20	5	i_y = 0 ;
water	58:13	0:0	6	i_y
op	58:17	0:0	6	=
water	58:19	0:0	6	0
water	58:20	0:0	6	;
cond	58:22	58:104	5	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	58:22	0:0	6	i_y
op	58:26	0:0	6	<
water	58:28	0:0	6	(
water	58:29	0:0	6	p_filter
op	58:37	0:0	6	->
water	58:39	0:0	6	fmt_in
op	58:45	0:0	6	.
water	58:46	0:0	6	video
op	58:51	0:0	6	.
water	58:52	0:0	6	i_y_offset
op	58:63	0:0	6	+
water	58:65	0:0	6	p_filter
op	58:73	0:0	6	->
water	58:75	0:0	6	fmt_in
op	58:81	0:0	6	.
water	58:82	0:0	6	video
op	58:87	0:0	6	.
water	58:88	0:0	6	i_visible_height
water	58:104	0:0	6	)
forexpr	58:107	58:110	5	i_y ++
water	58:107	0:0	6	i_y
op	58:110	0:0	6	++
stmts	59:8	101:8	5	
water	59:8	0:0	6	{
water	60:12	0:0	6	p_pic_start
op	60:24	0:0	6	=
water	60:26	0:0	6	p_pic
water	60:31	0:0	6	;
for	61:12	73:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	61:18	61:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	61:18	0:0	8	i_x
op	61:22	0:0	8	=
water	61:24	0:0	8	(
water	61:25	0:0	8	p_filter
op	61:33	0:0	8	->
water	61:35	0:0	8	fmt_in
op	61:41	0:0	8	.
water	61:42	0:0	8	video
op	61:47	0:0	8	.
water	61:48	0:0	8	i_x_offset
op	61:59	0:0	8	+
water	61:61	0:0	8	p_filter
op	61:69	0:0	8	->
water	61:71	0:0	8	fmt_in
op	61:77	0:0	8	.
water	61:78	0:0	8	video
op	61:83	0:0	8	.
water	61:84	0:0	8	i_visible_width
water	61:99	0:0	8	)
op	61:101	0:0	8	/
water	61:103	0:0	8	16
water	61:105	0:0	8	;
cond	61:107	61:110	7	i_x --
water	61:107	0:0	8	i_x
op	61:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	62:12	73:12	7	
water	62:12	0:0	8	{
call	63:16	68:16	8	SSE2_CALL
arg	64:20	68:16	9	SSE2_INIT_32_ALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ARGB_ALIGNED
water	64:20	0:0	10	SSE2_INIT_32_ALIGNED
water	65:20	0:0	10	SSE2_YUV_MUL
water	66:20	0:0	10	SSE2_YUV_ADD
water	67:20	0:0	10	SSE2_UNPACK_32_ARGB_ALIGNED
water	68:17	0:0	8	;
water	69:16	0:0	8	p_y
op	69:20	0:0	8	+=
water	69:23	0:0	8	16
water	69:25	0:0	8	;
water	70:16	0:0	8	p_u
op	70:20	0:0	8	+=
water	70:23	0:0	8	8
water	70:24	0:0	8	;
water	71:16	0:0	8	p_v
op	71:20	0:0	8	+=
water	71:23	0:0	8	8
water	71:24	0:0	8	;
water	72:16	0:0	8	p_buffer
op	72:25	0:0	8	+=
water	72:28	0:0	8	16
water	72:30	0:0	8	;
water	73:12	0:0	8	}
if	76:12	91:12	6	(i_rewind)
cond	76:16	76:16	7	i_rewind
water	76:16	0:0	8	i_rewind
stmts	77:12	91:12	7	
water	77:12	0:0	8	{
water	78:16	0:0	8	p_y
op	78:20	0:0	8	-=
water	78:23	0:0	8	i_rewind
water	78:31	0:0	8	;
water	79:16	0:0	8	p_u
op	79:20	0:0	8	-=
water	79:23	0:0	8	i_rewind
op	79:32	0:0	8	>>
water	79:35	0:0	8	1
water	79:36	0:0	8	;
water	80:16	0:0	8	p_v
op	80:20	0:0	8	-=
water	80:23	0:0	8	i_rewind
op	80:32	0:0	8	>>
water	80:35	0:0	8	1
water	80:36	0:0	8	;
water	81:16	0:0	8	p_buffer
op	81:25	0:0	8	-=
water	81:28	0:0	8	i_rewind
water	81:36	0:0	8	;
call	82:16	87:16	8	SSE2_CALL
arg	83:20	87:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ARGB_UNALIGNED
water	83:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	84:20	0:0	10	SSE2_YUV_MUL
water	85:20	0:0	10	SSE2_YUV_ADD
water	86:20	0:0	10	SSE2_UNPACK_32_ARGB_UNALIGNED
water	87:17	0:0	8	;
water	88:16	0:0	8	p_y
op	88:20	0:0	8	+=
water	88:23	0:0	8	16
water	88:25	0:0	8	;
water	89:16	0:0	8	p_u
op	89:20	0:0	8	+=
water	89:23	0:0	8	4
water	89:24	0:0	8	;
water	90:16	0:0	8	p_v
op	90:20	0:0	8	+=
water	90:23	0:0	8	4
water	90:24	0:0	8	;
water	91:12	0:0	8	}
water	92:12	0:0	6	SCALE_WIDTH
water	92:23	0:0	6	;
call	93:12	93:33	6	SCALE_HEIGHT
arg	93:26	93:29	7	420
water	93:26	0:0	8	420
arg	93:31	93:33	7	4
water	93:31	0:0	8	4
water	93:34	0:0	6	;
water	94:12	0:0	6	p_y
op	94:16	0:0	6	+=
water	94:19	0:0	6	i_source_margin
water	94:34	0:0	6	;
if	95:12	99:12	6	(i_y % 2)
cond	95:16	95:22	7	i_y % 2
water	95:16	0:0	8	i_y
op	95:20	0:0	8	%
water	95:22	0:0	8	2
stmts	96:12	99:12	7	
water	96:12	0:0	8	{
water	97:16	0:0	8	p_u
op	97:20	0:0	8	+=
water	97:23	0:0	8	i_source_margin_c
water	97:40	0:0	8	;
water	98:16	0:0	8	p_v
op	98:20	0:0	8	+=
water	98:23	0:0	8	i_source_margin_c
water	98:40	0:0	8	;
water	99:12	0:0	8	}
water	100:12	0:0	6	p_buffer
op	100:21	0:0	6	=
water	100:23	0:0	6	b_hscale
water	100:32	0:0	6	?
water	100:34	0:0	6	p_buffer_start
water	100:49	0:0	6	:
water	100:51	0:0	6	p_pic
water	100:56	0:0	6	;
water	101:8	0:0	6	}
water	102:4	0:0	4	}
else	103:4	151:4	2
stmts	104:4	151:4	3	
water	104:4	0:0	4	{
for	106:8	150:8	4	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	106:13	106:20	5	i_y = 0 ;
water	106:13	0:0	6	i_y
op	106:17	0:0	6	=
water	106:19	0:0	6	0
water	106:20	0:0	6	;
cond	106:22	106:104	5	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	106:22	0:0	6	i_y
op	106:26	0:0	6	<
water	106:28	0:0	6	(
water	106:29	0:0	6	p_filter
op	106:37	0:0	6	->
water	106:39	0:0	6	fmt_in
op	106:45	0:0	6	.
water	106:46	0:0	6	video
op	106:51	0:0	6	.
water	106:52	0:0	6	i_y_offset
op	106:63	0:0	6	+
water	106:65	0:0	6	p_filter
op	106:73	0:0	6	->
water	106:75	0:0	6	fmt_in
op	106:81	0:0	6	.
water	106:82	0:0	6	video
op	106:87	0:0	6	.
water	106:88	0:0	6	i_visible_height
water	106:104	0:0	6	)
forexpr	106:107	106:110	5	i_y ++
water	106:107	0:0	6	i_y
op	106:110	0:0	6	++
stmts	107:8	150:8	5	
water	107:8	0:0	6	{
water	108:12	0:0	6	p_pic_start
op	108:24	0:0	6	=
water	108:26	0:0	6	p_pic
water	108:31	0:0	6	;
water	109:12	0:0	6	p_buffer
op	109:21	0:0	6	=
water	109:23	0:0	6	b_hscale
water	109:32	0:0	6	?
water	109:34	0:0	6	p_buffer_start
water	109:49	0:0	6	:
water	109:51	0:0	6	p_pic
water	109:56	0:0	6	;
for	110:12	122:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	110:18	110:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	110:18	0:0	8	i_x
op	110:22	0:0	8	=
water	110:24	0:0	8	(
water	110:25	0:0	8	p_filter
op	110:33	0:0	8	->
water	110:35	0:0	8	fmt_in
op	110:41	0:0	8	.
water	110:42	0:0	8	video
op	110:47	0:0	8	.
water	110:48	0:0	8	i_x_offset
op	110:59	0:0	8	+
water	110:61	0:0	8	p_filter
op	110:69	0:0	8	->
water	110:71	0:0	8	fmt_in
op	110:77	0:0	8	.
water	110:78	0:0	8	video
op	110:83	0:0	8	.
water	110:84	0:0	8	i_visible_width
water	110:99	0:0	8	)
op	110:101	0:0	8	/
water	110:103	0:0	8	16
water	110:105	0:0	8	;
cond	110:107	110:110	7	i_x --
water	110:107	0:0	8	i_x
op	110:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	111:12	122:12	7	
water	111:12	0:0	8	{
call	112:16	117:16	8	SSE2_CALL
arg	113:20	117:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ARGB_UNALIGNED
water	113:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	114:20	0:0	10	SSE2_YUV_MUL
water	115:20	0:0	10	SSE2_YUV_ADD
water	116:20	0:0	10	SSE2_UNPACK_32_ARGB_UNALIGNED
water	117:17	0:0	8	;
water	118:16	0:0	8	p_y
op	118:20	0:0	8	+=
water	118:23	0:0	8	16
water	118:25	0:0	8	;
water	119:16	0:0	8	p_u
op	119:20	0:0	8	+=
water	119:23	0:0	8	8
water	119:24	0:0	8	;
water	120:16	0:0	8	p_v
op	120:20	0:0	8	+=
water	120:23	0:0	8	8
water	120:24	0:0	8	;
water	121:16	0:0	8	p_buffer
op	121:25	0:0	8	+=
water	121:28	0:0	8	16
water	121:30	0:0	8	;
water	122:12	0:0	8	}
if	125:12	140:12	6	(i_rewind)
cond	125:16	125:16	7	i_rewind
water	125:16	0:0	8	i_rewind
stmts	126:12	140:12	7	
water	126:12	0:0	8	{
water	127:16	0:0	8	p_y
op	127:20	0:0	8	-=
water	127:23	0:0	8	i_rewind
water	127:31	0:0	8	;
water	128:16	0:0	8	p_u
op	128:20	0:0	8	-=
water	128:23	0:0	8	i_rewind
op	128:32	0:0	8	>>
water	128:35	0:0	8	1
water	128:36	0:0	8	;
water	129:16	0:0	8	p_v
op	129:20	0:0	8	-=
water	129:23	0:0	8	i_rewind
op	129:32	0:0	8	>>
water	129:35	0:0	8	1
water	129:36	0:0	8	;
water	130:16	0:0	8	p_buffer
op	130:25	0:0	8	-=
water	130:28	0:0	8	i_rewind
water	130:36	0:0	8	;
call	131:16	136:16	8	SSE2_CALL
arg	132:20	136:16	9	SSE2_INIT_32_UNALIGNEDSSE2_YUV_MULSSE2_YUV_ADDSSE2_UNPACK_32_ARGB_UNALIGNED
water	132:20	0:0	10	SSE2_INIT_32_UNALIGNED
water	133:20	0:0	10	SSE2_YUV_MUL
water	134:20	0:0	10	SSE2_YUV_ADD
water	135:20	0:0	10	SSE2_UNPACK_32_ARGB_UNALIGNED
water	136:17	0:0	8	;
water	137:16	0:0	8	p_y
op	137:20	0:0	8	+=
water	137:23	0:0	8	16
water	137:25	0:0	8	;
water	138:16	0:0	8	p_u
op	138:20	0:0	8	+=
water	138:23	0:0	8	8
water	138:24	0:0	8	;
water	139:16	0:0	8	p_v
op	139:20	0:0	8	+=
water	139:23	0:0	8	8
water	139:24	0:0	8	;
water	140:12	0:0	8	}
water	141:12	0:0	6	SCALE_WIDTH
water	141:23	0:0	6	;
call	142:12	142:33	6	SCALE_HEIGHT
arg	142:26	142:29	7	420
water	142:26	0:0	8	420
arg	142:31	142:33	7	4
water	142:31	0:0	8	4
water	142:34	0:0	6	;
water	143:12	0:0	6	p_y
op	143:16	0:0	6	+=
water	143:19	0:0	6	i_source_margin
water	143:34	0:0	6	;
if	144:12	148:12	6	(i_y % 2)
cond	144:16	144:22	7	i_y % 2
water	144:16	0:0	8	i_y
op	144:20	0:0	8	%
water	144:22	0:0	8	2
stmts	145:12	148:12	7	
water	145:12	0:0	8	{
water	146:16	0:0	8	p_u
op	146:20	0:0	8	+=
water	146:23	0:0	8	i_source_margin_c
water	146:40	0:0	8	;
water	147:16	0:0	8	p_v
op	147:20	0:0	8	+=
water	147:23	0:0	8	i_source_margin_c
water	147:40	0:0	8	;
water	148:12	0:0	8	}
water	149:12	0:0	6	p_buffer
op	149:21	0:0	6	=
water	149:23	0:0	6	b_hscale
water	149:32	0:0	6	?
water	149:34	0:0	6	p_buffer_start
water	149:49	0:0	6	:
water	149:51	0:0	6	p_pic
water	149:56	0:0	6	;
water	150:8	0:0	6	}
water	151:4	0:0	4	}
water	153:4	0:0	2	SSE2_END
water	153:12	0:0	2	;
water	155:4	0:0	2	i_rewind
op	155:13	0:0	2	=
water	155:15	0:0	2	(
op	155:16	0:0	2	-
water	155:17	0:0	2	(
water	155:18	0:0	2	p_filter
op	155:26	0:0	2	->
water	155:28	0:0	2	fmt_in
op	155:34	0:0	2	.
water	155:35	0:0	2	video
op	155:40	0:0	2	.
water	155:41	0:0	2	i_x_offset
op	155:52	0:0	2	+
water	155:54	0:0	2	p_filter
op	155:62	0:0	2	->
water	155:64	0:0	2	fmt_in
op	155:70	0:0	2	.
water	155:71	0:0	2	video
op	155:76	0:0	2	.
water	155:77	0:0	2	i_visible_width
water	155:92	0:0	2	)
water	155:93	0:0	2	)
op	155:95	0:0	2	&
water	155:97	0:0	2	7
water	155:98	0:0	2	;
for	156:4	200:4	2	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	156:9	156:16	3	i_y = 0 ;
water	156:9	0:0	4	i_y
op	156:13	0:0	4	=
water	156:15	0:0	4	0
water	156:16	0:0	4	;
cond	156:18	156:100	3	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	156:18	0:0	4	i_y
op	156:22	0:0	4	<
water	156:24	0:0	4	(
water	156:25	0:0	4	p_filter
op	156:33	0:0	4	->
water	156:35	0:0	4	fmt_in
op	156:41	0:0	4	.
water	156:42	0:0	4	video
op	156:47	0:0	4	.
water	156:48	0:0	4	i_y_offset
op	156:59	0:0	4	+
water	156:61	0:0	4	p_filter
op	156:69	0:0	4	->
water	156:71	0:0	4	fmt_in
op	156:77	0:0	4	.
water	156:78	0:0	4	video
op	156:83	0:0	4	.
water	156:84	0:0	4	i_visible_height
water	156:100	0:0	4	)
forexpr	156:103	156:106	3	i_y ++
water	156:103	0:0	4	i_y
op	156:106	0:0	4	++
stmts	157:4	200:4	3	
water	157:4	0:0	4	{
water	158:8	0:0	4	p_pic_start
op	158:20	0:0	4	=
water	158:22	0:0	4	p_pic
water	158:27	0:0	4	;
water	159:8	0:0	4	p_buffer
op	159:17	0:0	4	=
water	159:19	0:0	4	b_hscale
water	159:28	0:0	4	?
water	159:30	0:0	4	p_buffer_start
water	159:45	0:0	4	:
water	159:47	0:0	4	p_pic
water	159:52	0:0	4	;
for	160:8	172:8	4	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;i_x --;)
forinit	160:14	160:100	5	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;
water	160:14	0:0	6	i_x
op	160:18	0:0	6	=
water	160:20	0:0	6	(
water	160:21	0:0	6	p_filter
op	160:29	0:0	6	->
water	160:31	0:0	6	fmt_in
op	160:37	0:0	6	.
water	160:38	0:0	6	video
op	160:43	0:0	6	.
water	160:44	0:0	6	i_x_offset
op	160:55	0:0	6	+
water	160:57	0:0	6	p_filter
op	160:65	0:0	6	->
water	160:67	0:0	6	fmt_in
op	160:73	0:0	6	.
water	160:74	0:0	6	video
op	160:79	0:0	6	.
water	160:80	0:0	6	i_visible_width
water	160:95	0:0	6	)
op	160:97	0:0	6	/
water	160:99	0:0	6	8
water	160:100	0:0	6	;
cond	160:102	160:105	5	i_x --
water	160:102	0:0	6	i_x
op	160:105	0:0	6	--
forexpr	0:0	0:0	5	
stmts	161:8	172:8	5	
water	161:8	0:0	6	{
call	162:12	167:12	6	MMX_CALL
arg	163:16	167:12	7	MMX_INIT_32MMX_YUV_MULMMX_YUV_ADDMMX_UNPACK_32_ARGB
water	163:16	0:0	8	MMX_INIT_32
water	164:16	0:0	8	MMX_YUV_MUL
water	165:16	0:0	8	MMX_YUV_ADD
water	166:16	0:0	8	MMX_UNPACK_32_ARGB
water	167:13	0:0	6	;
water	168:12	0:0	6	p_y
op	168:16	0:0	6	+=
water	168:19	0:0	6	8
water	168:20	0:0	6	;
water	169:12	0:0	6	p_u
op	169:16	0:0	6	+=
water	169:19	0:0	6	4
water	169:20	0:0	6	;
water	170:12	0:0	6	p_v
op	170:16	0:0	6	+=
water	170:19	0:0	6	4
water	170:20	0:0	6	;
water	171:12	0:0	6	p_buffer
op	171:21	0:0	6	+=
water	171:24	0:0	6	8
water	171:25	0:0	6	;
water	172:8	0:0	6	}
if	175:8	191:8	4	(i_rewind)
cond	175:12	175:12	5	i_rewind
water	175:12	0:0	6	i_rewind
stmts	176:8	191:8	5	
water	176:8	0:0	6	{
water	177:12	0:0	6	p_y
op	177:16	0:0	6	-=
water	177:19	0:0	6	i_rewind
water	177:27	0:0	6	;
water	178:12	0:0	6	p_u
op	178:16	0:0	6	-=
water	178:19	0:0	6	i_rewind
op	178:28	0:0	6	>>
water	178:31	0:0	6	1
water	178:32	0:0	6	;
water	179:12	0:0	6	p_v
op	179:16	0:0	6	-=
water	179:19	0:0	6	i_rewind
op	179:28	0:0	6	>>
water	179:31	0:0	6	1
water	179:32	0:0	6	;
water	180:12	0:0	6	p_buffer
op	180:21	0:0	6	-=
water	180:24	0:0	6	i_rewind
water	180:32	0:0	6	;
call	181:12	186:12	6	MMX_CALL
arg	182:16	186:12	7	MMX_INIT_32MMX_YUV_MULMMX_YUV_ADDMMX_UNPACK_32_ARGB
water	182:16	0:0	8	MMX_INIT_32
water	183:16	0:0	8	MMX_YUV_MUL
water	184:16	0:0	8	MMX_YUV_ADD
water	185:16	0:0	8	MMX_UNPACK_32_ARGB
water	186:13	0:0	6	;
water	187:12	0:0	6	p_y
op	187:16	0:0	6	+=
water	187:19	0:0	6	8
water	187:20	0:0	6	;
water	188:12	0:0	6	p_u
op	188:16	0:0	6	+=
water	188:19	0:0	6	4
water	188:20	0:0	6	;
water	189:12	0:0	6	p_v
op	189:16	0:0	6	+=
water	189:19	0:0	6	4
water	189:20	0:0	6	;
water	190:12	0:0	6	p_buffer
op	190:21	0:0	6	+=
water	190:24	0:0	6	8
water	190:25	0:0	6	;
water	191:8	0:0	6	}
water	192:8	0:0	4	SCALE_WIDTH
water	192:19	0:0	4	;
call	193:8	193:29	4	SCALE_HEIGHT
arg	193:22	193:25	5	420
water	193:22	0:0	6	420
arg	193:27	193:29	5	4
water	193:27	0:0	6	4
water	193:30	0:0	4	;
water	194:8	0:0	4	p_y
op	194:12	0:0	4	+=
water	194:15	0:0	4	i_source_margin
water	194:30	0:0	4	;
if	195:8	199:8	4	(i_y % 2)
cond	195:12	195:18	5	i_y % 2
water	195:12	0:0	6	i_y
op	195:16	0:0	6	%
water	195:18	0:0	6	2
stmts	196:8	199:8	5	
water	196:8	0:0	6	{
water	197:12	0:0	6	p_u
op	197:16	0:0	6	+=
water	197:19	0:0	6	i_source_margin_c
water	197:36	0:0	6	;
water	198:12	0:0	6	p_v
op	198:16	0:0	6	+=
water	198:19	0:0	6	i_source_margin_c
water	198:36	0:0	6	;
water	199:8	0:0	6	}
water	200:4	0:0	4	}
water	202:4	0:0	2	MMX_END
water	202:11	0:0	2	;

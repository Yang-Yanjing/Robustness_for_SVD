func	2:0	22:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	21:22	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:71	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
call	5:26	5:70	3	vlc_object_create
arg	5:45	5:51	4	p_this
water	5:45	0:0	5	p_this
arg	5:53	5:70	4	sizeof(*p_sys)
op	5:53	0:0	5	sizeof
water	5:59	0:0	5	(
op	5:61	0:0	5	*
water	5:62	0:0	5	p_sys
water	5:68	0:0	5	)
if	6:4	7:25	2	(unlikely (p_sys == NULL ))
cond	6:8	6:32	3	unlikely (p_sys == NULL )
call	6:8	6:32	4	unlikely
arg	6:18	6:32	5	p_sys==NULL
water	6:18	0:0	6	p_sys
op	6:24	0:0	6	==
water	6:27	0:0	6	NULL
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
water	8:4	0:0	2	p_filter
op	8:12	0:0	2	->
water	8:14	0:0	2	p_sys
op	8:20	0:0	2	=
water	8:22	0:0	2	p_sys
water	8:27	0:0	2	;
water	9:4	0:0	2	p_sys
op	9:9	0:0	2	->
water	9:11	0:0	2	volume
op	9:17	0:0	2	.
water	9:18	0:0	2	format
op	9:25	0:0	2	=
water	9:27	0:0	2	p_filter
op	9:35	0:0	2	->
water	9:37	0:0	2	fmt_in
op	9:43	0:0	2	.
water	9:44	0:0	2	audio
op	9:49	0:0	2	.
water	9:50	0:0	2	i_format
water	9:58	0:0	2	;
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	module
op	10:18	0:0	2	=
call	10:20	10:77	2	module_need
arg	10:33	10:47	3	&p_sys->volume
op	10:33	0:0	4	&
water	10:34	0:0	4	p_sys
op	10:39	0:0	4	->
water	10:41	0:0	4	volume
arg	10:49	10:63	3	"audio volume"
water	10:49	0:0	4	"audio volume"
arg	10:65	10:69	3	NULL
water	10:65	0:0	4	NULL
arg	10:71	10:77	3	false
water	10:71	0:0	4	false
water	10:78	0:0	2	;
if	11:4	16:4	2	(p_sys -> module == NULL)
cond	11:8	11:25	3	p_sys -> module == NULL
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	module
op	11:22	0:0	4	==
water	11:25	0:0	4	NULL
stmts	12:4	16:4	3	
water	12:4	0:0	4	{
call	13:8	13:49	4	msg_Warn
arg	13:18	13:26	5	p_filter
water	13:18	0:0	6	p_filter
arg	13:28	13:49	5	"unsupported format"
water	13:28	0:0	6	"unsupported format"
water	13:50	0:0	4	;
call	14:8	14:43	4	vlc_object_release
arg	14:28	14:43	5	&p_sys->volume
op	14:28	0:0	6	&
water	14:29	0:0	6	p_sys
op	14:34	0:0	6	->
water	14:36	0:0	6	volume
water	14:44	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	f_gain
op	17:18	0:0	2	=
call	17:20	17:71	2	var_InheritFloat
arg	17:38	17:56	3	p_filter->p_parent
water	17:38	0:0	4	p_filter
op	17:46	0:0	4	->
water	17:48	0:0	4	p_parent
arg	17:58	17:71	3	"gain-value"
water	17:58	0:0	4	"gain-value"
water	17:72	0:0	2	;
call	18:4	18:70	2	msg_Dbg
arg	18:13	18:21	3	p_filter
water	18:13	0:0	4	p_filter
arg	18:23	18:54	3	"gain multiplier sets to %.2fx"
water	18:23	0:0	4	"gain multiplier sets to %.2fx"
arg	18:56	18:70	3	p_sys->f_gain
water	18:56	0:0	4	p_sys
op	18:61	0:0	4	->
water	18:63	0:0	4	f_gain
water	18:71	0:0	2	;
water	19:4	0:0	2	p_filter
op	19:12	0:0	2	->
water	19:14	0:0	2	fmt_out
op	19:21	0:0	2	.
water	19:22	0:0	2	audio
op	19:28	0:0	2	=
water	19:30	0:0	2	p_filter
op	19:38	0:0	2	->
water	19:40	0:0	2	fmt_in
op	19:46	0:0	2	.
water	19:47	0:0	2	audio
water	19:52	0:0	2	;
water	20:4	0:0	2	p_filter
op	20:12	0:0	2	->
water	20:14	0:0	2	pf_audio_filter
op	20:30	0:0	2	=
water	20:32	0:0	2	Process
water	20:39	0:0	2	;
return	21:4	21:22	2	VLC_SUCCESS
water	21:11	0:0	3	VLC_SUCCESS

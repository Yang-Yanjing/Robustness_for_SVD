func	2:0	59:0	0	static int	Del
params	2:14	0:0	1	
param	2:16	2:39	2	sout_stream_t *	p_stream
param	2:41	2:66	2	sout_stream_id_sys_t *	id
stmnts	4:4	58:22	1	
call	4:4	4:17	2	VLC_UNUSED
arg	4:15	4:17	3	id
water	4:15	0:0	4	id
water	4:18	0:0	2	;
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
decl	6:4	6:22	2	bridge_t	*p_bridge
decl	7:4	7:22	2	bridged_es_t	*p_es
decl	8:4	8:25	2	bool	b_last_es
op	8:19	0:0	2	=
water	8:21	0:0	2	true
decl	9:4	9:9	2	int	i
if	10:4	11:26	2	(! p_sys -> b_inited)
cond	10:8	10:16	3	! p_sys -> b_inited
op	10:8	0:0	4	!
water	10:9	0:0	4	p_sys
op	10:14	0:0	4	->
water	10:16	0:0	4	b_inited
stmts	11:8	11:26	3	
return	11:8	11:26	4	VLC_SUCCESS
water	11:15	0:0	5	VLC_SUCCESS
if	12:4	21:4	2	(p_sys -> p_decoder != NULL)
cond	12:8	12:28	3	p_sys -> p_decoder != NULL
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	p_decoder
op	12:25	0:0	4	!=
water	12:28	0:0	4	NULL
stmts	13:4	21:4	3	
water	13:4	0:0	4	{
decl	14:8	14:64	4	decoder_owner_sys_t	*p_owner
op	14:37	0:0	4	=
water	14:39	0:0	4	p_sys
op	14:44	0:0	4	->
water	14:46	0:0	4	p_decoder
op	14:55	0:0	4	->
water	14:57	0:0	4	p_owner
if	15:8	16:73	4	(p_sys -> p_decoder -> p_module)
cond	15:12	15:30	5	p_sys -> p_decoder -> p_module
water	15:12	0:0	6	p_sys
op	15:17	0:0	6	->
water	15:19	0:0	6	p_decoder
op	15:28	0:0	6	->
water	15:30	0:0	6	p_module
stmts	16:12	16:73	5	
call	16:12	16:72	6	module_unneed
arg	16:27	16:43	7	p_sys->p_decoder
water	16:27	0:0	8	p_sys
op	16:32	0:0	8	->
water	16:34	0:0	8	p_decoder
arg	16:45	16:72	7	p_sys->p_decoder->p_module
water	16:45	0:0	8	p_sys
op	16:50	0:0	8	->
water	16:52	0:0	8	p_decoder
op	16:61	0:0	8	->
water	16:63	0:0	8	p_module
water	16:73	0:0	6	;
if	17:8	18:62	4	(p_sys -> p_decoder -> p_description)
cond	17:12	17:30	5	p_sys -> p_decoder -> p_description
water	17:12	0:0	6	p_sys
op	17:17	0:0	6	->
water	17:19	0:0	6	p_decoder
op	17:28	0:0	6	->
water	17:30	0:0	6	p_description
stmts	18:12	18:62	5	
call	18:12	18:61	6	vlc_meta_Delete
arg	18:29	18:61	7	p_sys->p_decoder->p_description
water	18:29	0:0	8	p_sys
op	18:34	0:0	8	->
water	18:36	0:0	8	p_decoder
op	18:45	0:0	8	->
water	18:47	0:0	8	p_description
water	18:62	0:0	6	;
call	19:8	19:45	4	vlc_object_release
arg	19:28	19:45	5	p_sys->p_decoder
water	19:28	0:0	6	p_sys
op	19:33	0:0	6	->
water	19:35	0:0	6	p_decoder
water	19:46	0:0	4	;
call	20:8	20:22	4	free
arg	20:14	20:22	5	p_owner
water	20:14	0:0	6	p_owner
water	20:23	0:0	4	;
water	21:4	0:0	4	}
if	23:4	24:43	2	(p_sys -> p_vf2)
cond	23:8	23:15	3	p_sys -> p_vf2
water	23:8	0:0	4	p_sys
op	23:13	0:0	4	->
water	23:15	0:0	4	p_vf2
stmts	24:8	24:43	3	
call	24:8	24:42	4	filter_chain_Delete
arg	24:29	24:42	5	p_sys->p_vf2
water	24:29	0:0	6	p_sys
op	24:34	0:0	6	->
water	24:36	0:0	6	p_vf2
water	24:43	0:0	4	;
call	25:4	25:38	2	vlc_global_lock
arg	25:21	25:38	3	VLC_MOSAIC_MUTEX
water	25:21	0:0	4	VLC_MOSAIC_MUTEX
water	25:39	0:0	2	;
water	26:4	0:0	2	p_bridge
op	26:13	0:0	2	=
call	26:15	26:35	2	GetBridge
arg	26:26	26:35	3	p_stream
water	26:26	0:0	4	p_stream
water	26:36	0:0	2	;
water	27:4	0:0	2	p_es
op	27:9	0:0	2	=
water	27:11	0:0	2	p_sys
op	27:16	0:0	2	->
water	27:18	0:0	2	p_es
water	27:22	0:0	2	;
water	28:4	0:0	2	p_es
op	28:8	0:0	2	->
water	28:10	0:0	2	b_empty
op	28:18	0:0	2	=
water	28:20	0:0	2	true
water	28:24	0:0	2	;
while	29:4	34:4	2	(p_es -> p_picture)
cond	29:12	29:18	3	p_es -> p_picture
water	29:12	0:0	4	p_es
op	29:16	0:0	4	->
water	29:18	0:0	4	p_picture
stmts	30:4	34:4	3	
water	30:4	0:0	4	{
decl	31:8	31:51	4	picture_t	*p_next
op	31:26	0:0	4	=
water	31:28	0:0	4	p_es
op	31:32	0:0	4	->
water	31:34	0:0	4	p_picture
op	31:43	0:0	4	->
water	31:45	0:0	4	p_next
call	32:8	32:41	4	picture_Release
arg	32:25	32:41	5	p_es->p_picture
water	32:25	0:0	6	p_es
op	32:29	0:0	6	->
water	32:31	0:0	6	p_picture
water	32:42	0:0	4	;
water	33:8	0:0	4	p_es
op	33:12	0:0	4	->
water	33:14	0:0	4	p_picture
op	33:24	0:0	4	=
water	33:26	0:0	4	p_next
water	33:32	0:0	4	;
water	34:4	0:0	4	}
for	35:4	42:4	2	(i = 0 ;i < p_bridge -> i_es_num;i ++)
forinit	35:10	35:15	3	i = 0 ;
water	35:10	0:0	4	i
op	35:12	0:0	4	=
water	35:14	0:0	4	0
water	35:15	0:0	4	;
cond	35:17	35:31	3	i < p_bridge -> i_es_num
water	35:17	0:0	4	i
op	35:19	0:0	4	<
water	35:21	0:0	4	p_bridge
op	35:29	0:0	4	->
water	35:31	0:0	4	i_es_num
forexpr	35:41	35:42	3	i ++
water	35:41	0:0	4	i
op	35:42	0:0	4	++
stmts	36:4	42:4	3	
water	36:4	0:0	4	{
if	37:8	41:8	4	(! p_bridge -> pp_es [ i ] -> b_empty)
cond	37:13	37:34	5	! p_bridge -> pp_es [ i ] -> b_empty
op	37:13	0:0	6	!
water	37:14	0:0	6	p_bridge
op	37:22	0:0	6	->
water	37:24	0:0	6	pp_es
op	37:29	0:0	6	[
water	37:30	0:0	6	i
op	37:31	0:0	6	]
op	37:32	0:0	6	->
water	37:34	0:0	6	b_empty
stmts	38:8	41:8	5	
water	38:8	0:0	6	{
water	39:12	0:0	6	b_last_es
op	39:22	0:0	6	=
water	39:24	0:0	6	false
water	39:29	0:0	6	;
break	40:12	40:17	6	
water	41:8	0:0	6	}
water	42:4	0:0	4	}
if	43:4	51:4	2	(b_last_es)
cond	43:9	43:9	3	b_last_es
water	43:9	0:0	4	b_last_es
stmts	44:4	51:4	3	
water	44:4	0:0	4	{
decl	45:8	45:65	4	vlc_object_t	*p_libvlc
op	45:31	0:0	4	=
call	45:33	45:64	5	VLC_OBJECT
arg	45:45	45:64	6	p_stream->p_libvlc
water	45:45	0:0	7	p_stream
op	45:53	0:0	7	->
water	45:55	0:0	7	p_libvlc
for	46:8	47:38	4	(i = 0 ;i < p_bridge -> i_es_num;i ++)
forinit	46:14	46:19	5	i = 0 ;
water	46:14	0:0	6	i
op	46:16	0:0	6	=
water	46:18	0:0	6	0
water	46:19	0:0	6	;
cond	46:21	46:35	5	i < p_bridge -> i_es_num
water	46:21	0:0	6	i
op	46:23	0:0	6	<
water	46:25	0:0	6	p_bridge
op	46:33	0:0	6	->
water	46:35	0:0	6	i_es_num
forexpr	46:45	46:46	5	i ++
water	46:45	0:0	6	i
op	46:46	0:0	6	++
stmts	47:12	47:38	5	
call	47:12	47:37	6	free
arg	47:18	47:37	7	p_bridge->pp_es[i]
water	47:18	0:0	8	p_bridge
op	47:26	0:0	8	->
water	47:28	0:0	8	pp_es
op	47:33	0:0	8	[
water	47:34	0:0	8	i
op	47:35	0:0	8	]
water	47:38	0:0	6	;
call	48:8	48:30	4	free
arg	48:14	48:30	5	p_bridge->pp_es
water	48:14	0:0	6	p_bridge
op	48:22	0:0	6	->
water	48:24	0:0	6	pp_es
water	48:31	0:0	4	;
call	49:8	49:23	4	free
arg	49:14	49:23	5	p_bridge
water	49:14	0:0	6	p_bridge
water	49:24	0:0	4	;
call	50:8	50:47	4	var_Destroy
arg	50:21	50:29	5	p_libvlc
water	50:21	0:0	6	p_libvlc
arg	50:31	50:47	5	"mosaic-struct"
water	50:31	0:0	6	"mosaic-struct"
water	50:48	0:0	4	;
water	51:4	0:0	4	}
call	52:4	52:40	2	vlc_global_unlock
arg	52:23	52:40	3	VLC_MOSAIC_MUTEX
water	52:23	0:0	4	VLC_MOSAIC_MUTEX
water	52:41	0:0	2	;
if	53:4	56:4	2	(p_sys -> p_image)
cond	53:9	53:16	3	p_sys -> p_image
water	53:9	0:0	4	p_sys
op	53:14	0:0	4	->
water	53:16	0:0	4	p_image
stmts	54:4	56:4	3	
water	54:4	0:0	4	{
call	55:8	55:44	4	image_HandlerDelete
arg	55:29	55:44	5	p_sys->p_image
water	55:29	0:0	6	p_sys
op	55:34	0:0	6	->
water	55:36	0:0	6	p_image
water	55:45	0:0	4	;
water	56:4	0:0	4	}
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	b_inited
op	57:20	0:0	2	=
water	57:22	0:0	2	false
water	57:27	0:0	2	;
return	58:4	58:22	2	VLC_SUCCESS
water	58:11	0:0	3	VLC_SUCCESS

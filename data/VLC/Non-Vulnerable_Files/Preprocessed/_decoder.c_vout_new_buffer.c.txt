func	2:0	132:0	0	static picture_t *	vout_new_buffer
params	2:33	0:0	1	
param	2:35	2:52	2	decoder_t *	p_dec
stmnts	0:0	131:4	1	
decl	4:4	4:49	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	p_dec
op	4:40	0:0	2	->
water	4:42	0:0	2	p_owner
if	5:4	113:4	2	(p_owner -> p_vout == NULL || p_dec -> fmt_out . video . i_width != p_owner -> video . i_width || p_dec -> fmt_out . video . i_height != p_owner -> video . i_height || p_dec -> fmt_out . video . i_visible_width != p_owner -> video . i_visible_width || p_dec -> fmt_out . video . i_visible_height != p_owner -> video . i_visible_height || p_dec -> fmt_out . video . i_x_offset != p_owner -> video . i_x_offset || p_dec -> fmt_out . video . i_y_offset != p_owner -> video . i_y_offset || p_dec -> fmt_out . i_codec != p_owner -> video . i_chroma || ( int64_t ) p_dec -> fmt_out . video . i_sar_num * p_owner -> video . i_sar_den != ( int64_t ) p_dec -> fmt_out . video . i_sar_den * p_owner -> video . i_sar_num || p_dec -> fmt_out . video . orientation != p_owner -> video . orientation)
cond	5:8	15:59	3	p_owner -> p_vout == NULL || p_dec -> fmt_out . video . i_width != p_owner -> video . i_width || p_dec -> fmt_out . video . i_height != p_owner -> video . i_height || p_dec -> fmt_out . video . i_visible_width != p_owner -> video . i_visible_width || p_dec -> fmt_out . video . i_visible_height != p_owner -> video . i_visible_height || p_dec -> fmt_out . video . i_x_offset != p_owner -> video . i_x_offset || p_dec -> fmt_out . video . i_y_offset != p_owner -> video . i_y_offset || p_dec -> fmt_out . i_codec != p_owner -> video . i_chroma || ( int64_t ) p_dec -> fmt_out . video . i_sar_num * p_owner -> video . i_sar_den != ( int64_t ) p_dec -> fmt_out . video . i_sar_den * p_owner -> video . i_sar_num || p_dec -> fmt_out . video . orientation != p_owner -> video . orientation
water	5:8	0:0	4	p_owner
op	5:15	0:0	4	->
water	5:17	0:0	4	p_vout
op	5:24	0:0	4	==
water	5:27	0:0	4	NULL
op	5:32	0:0	4	||
water	6:8	0:0	4	p_dec
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt_out
op	6:22	0:0	4	.
water	6:23	0:0	4	video
op	6:28	0:0	4	.
water	6:29	0:0	4	i_width
op	6:37	0:0	4	!=
water	6:40	0:0	4	p_owner
op	6:47	0:0	4	->
water	6:49	0:0	4	video
op	6:54	0:0	4	.
water	6:55	0:0	4	i_width
op	6:63	0:0	4	||
water	7:8	0:0	4	p_dec
op	7:13	0:0	4	->
water	7:15	0:0	4	fmt_out
op	7:22	0:0	4	.
water	7:23	0:0	4	video
op	7:28	0:0	4	.
water	7:29	0:0	4	i_height
op	7:38	0:0	4	!=
water	7:41	0:0	4	p_owner
op	7:48	0:0	4	->
water	7:50	0:0	4	video
op	7:55	0:0	4	.
water	7:56	0:0	4	i_height
op	7:65	0:0	4	||
water	8:8	0:0	4	p_dec
op	8:13	0:0	4	->
water	8:15	0:0	4	fmt_out
op	8:22	0:0	4	.
water	8:23	0:0	4	video
op	8:28	0:0	4	.
water	8:29	0:0	4	i_visible_width
op	8:45	0:0	4	!=
water	8:48	0:0	4	p_owner
op	8:55	0:0	4	->
water	8:57	0:0	4	video
op	8:62	0:0	4	.
water	8:63	0:0	4	i_visible_width
op	8:79	0:0	4	||
water	9:8	0:0	4	p_dec
op	9:13	0:0	4	->
water	9:15	0:0	4	fmt_out
op	9:22	0:0	4	.
water	9:23	0:0	4	video
op	9:28	0:0	4	.
water	9:29	0:0	4	i_visible_height
op	9:46	0:0	4	!=
water	9:49	0:0	4	p_owner
op	9:56	0:0	4	->
water	9:58	0:0	4	video
op	9:63	0:0	4	.
water	9:64	0:0	4	i_visible_height
op	9:81	0:0	4	||
water	10:8	0:0	4	p_dec
op	10:13	0:0	4	->
water	10:15	0:0	4	fmt_out
op	10:22	0:0	4	.
water	10:23	0:0	4	video
op	10:28	0:0	4	.
water	10:29	0:0	4	i_x_offset
op	10:40	0:0	4	!=
water	10:43	0:0	4	p_owner
op	10:50	0:0	4	->
water	10:52	0:0	4	video
op	10:57	0:0	4	.
water	10:58	0:0	4	i_x_offset
op	10:70	0:0	4	||
water	11:8	0:0	4	p_dec
op	11:13	0:0	4	->
water	11:15	0:0	4	fmt_out
op	11:22	0:0	4	.
water	11:23	0:0	4	video
op	11:28	0:0	4	.
water	11:29	0:0	4	i_y_offset
op	11:40	0:0	4	!=
water	11:43	0:0	4	p_owner
op	11:50	0:0	4	->
water	11:52	0:0	4	video
op	11:57	0:0	4	.
water	11:58	0:0	4	i_y_offset
op	11:70	0:0	4	||
water	12:8	0:0	4	p_dec
op	12:13	0:0	4	->
water	12:15	0:0	4	fmt_out
op	12:22	0:0	4	.
water	12:23	0:0	4	i_codec
op	12:31	0:0	4	!=
water	12:34	0:0	4	p_owner
op	12:41	0:0	4	->
water	12:43	0:0	4	video
op	12:48	0:0	4	.
water	12:49	0:0	4	i_chroma
op	12:58	0:0	4	||
water	13:8	0:0	4	(
water	13:9	0:0	4	int64_t
water	13:16	0:0	4	)
water	13:17	0:0	4	p_dec
op	13:22	0:0	4	->
water	13:24	0:0	4	fmt_out
op	13:31	0:0	4	.
water	13:32	0:0	4	video
op	13:37	0:0	4	.
water	13:38	0:0	4	i_sar_num
op	13:48	0:0	4	*
water	13:50	0:0	4	p_owner
op	13:57	0:0	4	->
water	13:59	0:0	4	video
op	13:64	0:0	4	.
water	13:65	0:0	4	i_sar_den
op	13:75	0:0	4	!=
water	14:8	0:0	4	(
water	14:9	0:0	4	int64_t
water	14:16	0:0	4	)
water	14:17	0:0	4	p_dec
op	14:22	0:0	4	->
water	14:24	0:0	4	fmt_out
op	14:31	0:0	4	.
water	14:32	0:0	4	video
op	14:37	0:0	4	.
water	14:38	0:0	4	i_sar_den
op	14:48	0:0	4	*
water	14:50	0:0	4	p_owner
op	14:57	0:0	4	->
water	14:59	0:0	4	video
op	14:64	0:0	4	.
water	14:65	0:0	4	i_sar_num
op	14:75	0:0	4	||
water	15:8	0:0	4	p_dec
op	15:13	0:0	4	->
water	15:15	0:0	4	fmt_out
op	15:22	0:0	4	.
water	15:23	0:0	4	video
op	15:28	0:0	4	.
water	15:29	0:0	4	orientation
op	15:41	0:0	4	!=
water	15:44	0:0	4	p_owner
op	15:51	0:0	4	->
water	15:53	0:0	4	video
op	15:58	0:0	4	.
water	15:59	0:0	4	orientation
stmts	16:4	113:4	3	
water	16:4	0:0	4	{
decl	17:8	17:29	4	vout_thread_t	*p_vout
if	18:8	23:8	4	(! p_dec -> fmt_out . video . i_width || ! p_dec -> fmt_out . video . i_height)
cond	18:12	19:34	5	! p_dec -> fmt_out . video . i_width || ! p_dec -> fmt_out . video . i_height
op	18:12	0:0	6	!
water	18:13	0:0	6	p_dec
op	18:18	0:0	6	->
water	18:20	0:0	6	fmt_out
op	18:27	0:0	6	.
water	18:28	0:0	6	video
op	18:33	0:0	6	.
water	18:34	0:0	6	i_width
op	18:42	0:0	6	||
op	19:12	0:0	6	!
water	19:13	0:0	6	p_dec
op	19:18	0:0	6	->
water	19:20	0:0	6	fmt_out
op	19:27	0:0	6	.
water	19:28	0:0	6	video
op	19:33	0:0	6	.
water	19:34	0:0	6	i_height
stmts	20:8	23:8	5	
water	20:8	0:0	6	{
return	22:12	22:23	6	NULL
water	22:19	0:0	7	NULL
water	23:8	0:0	6	}
decl	24:8	24:49	4	video_format_t	fmt
op	24:27	0:0	4	=
water	24:29	0:0	4	p_dec
op	24:34	0:0	4	->
water	24:36	0:0	4	fmt_out
op	24:43	0:0	4	.
water	24:44	0:0	4	video
water	25:8	0:0	4	fmt
op	25:11	0:0	4	.
water	25:12	0:0	4	i_chroma
op	25:21	0:0	4	=
water	25:23	0:0	4	p_dec
op	25:28	0:0	4	->
water	25:30	0:0	4	fmt_out
op	25:37	0:0	4	.
water	25:38	0:0	4	i_codec
water	25:45	0:0	4	;
water	26:8	0:0	4	p_owner
op	26:15	0:0	4	->
water	26:17	0:0	4	video
op	26:23	0:0	4	=
water	26:25	0:0	4	fmt
water	26:28	0:0	4	;
if	27:8	37:8	4	(vlc_fourcc_IsYUV (fmt . i_chroma ))
cond	27:12	27:43	5	vlc_fourcc_IsYUV (fmt . i_chroma )
call	27:12	27:43	6	vlc_fourcc_IsYUV
arg	27:30	27:43	7	fmt.i_chroma
water	27:30	0:0	8	fmt
op	27:33	0:0	8	.
water	27:34	0:0	8	i_chroma
stmts	28:8	37:8	5	
water	28:8	0:0	6	{
decl	29:12	29:97	6	const vlc_chroma_description_t	*dsc
op	29:48	0:0	6	=
call	29:50	29:96	7	vlc_fourcc_GetChromaDescription
arg	29:83	29:96	8	fmt.i_chroma
water	29:83	0:0	9	fmt
op	29:86	0:0	9	.
water	29:87	0:0	9	i_chroma
for	30:12	36:12	6	( unsigned int i = 0 ;dsc && i < dsc -> plane_count;i ++)
forinit	0:0	30:35	7	 unsigned int i = 0 ;
decl	30:17	30:35	8	unsigned int	i
op	30:32	0:0	8	=
water	30:34	0:0	8	0
cond	30:37	30:53	7	dsc && i < dsc -> plane_count
water	30:37	0:0	8	dsc
op	30:41	0:0	8	&&
water	30:44	0:0	8	i
op	30:46	0:0	8	<
water	30:48	0:0	8	dsc
op	30:51	0:0	8	->
water	30:53	0:0	8	plane_count
forexpr	30:66	30:67	7	i ++
water	30:66	0:0	8	i
op	30:67	0:0	8	++
stmts	31:12	36:12	7	
water	31:12	0:0	8	{
while	32:16	33:33	8	(fmt . i_width % dsc -> p [ i ] . w . den)
cond	32:23	32:49	9	fmt . i_width % dsc -> p [ i ] . w . den
water	32:23	0:0	10	fmt
op	32:26	0:0	10	.
water	32:27	0:0	10	i_width
op	32:35	0:0	10	%
water	32:37	0:0	10	dsc
op	32:40	0:0	10	->
water	32:42	0:0	10	p
op	32:43	0:0	10	[
water	32:44	0:0	10	i
op	32:45	0:0	10	]
op	32:46	0:0	10	.
water	32:47	0:0	10	w
op	32:48	0:0	10	.
water	32:49	0:0	10	den
stmts	33:20	33:33	9	
water	33:20	0:0	10	fmt
op	33:23	0:0	10	.
water	33:24	0:0	10	i_width
op	33:31	0:0	10	++
water	33:33	0:0	10	;
while	34:16	35:34	8	(fmt . i_height % dsc -> p [ i ] . h . den)
cond	34:23	34:50	9	fmt . i_height % dsc -> p [ i ] . h . den
water	34:23	0:0	10	fmt
op	34:26	0:0	10	.
water	34:27	0:0	10	i_height
op	34:36	0:0	10	%
water	34:38	0:0	10	dsc
op	34:41	0:0	10	->
water	34:43	0:0	10	p
op	34:44	0:0	10	[
water	34:45	0:0	10	i
op	34:46	0:0	10	]
op	34:47	0:0	10	.
water	34:48	0:0	10	h
op	34:49	0:0	10	.
water	34:50	0:0	10	den
stmts	35:20	35:34	9	
water	35:20	0:0	10	fmt
op	35:23	0:0	10	.
water	35:24	0:0	10	i_height
op	35:32	0:0	10	++
water	35:34	0:0	10	;
water	36:12	0:0	8	}
water	37:8	0:0	6	}
if	38:8	55:8	4	(! fmt . i_visible_width || ! fmt . i_visible_height)
cond	38:12	38:41	5	! fmt . i_visible_width || ! fmt . i_visible_height
op	38:12	0:0	6	!
water	38:13	0:0	6	fmt
op	38:16	0:0	6	.
water	38:17	0:0	6	i_visible_width
op	38:33	0:0	6	||
op	38:36	0:0	6	!
water	38:37	0:0	6	fmt
op	38:40	0:0	6	.
water	38:41	0:0	6	i_visible_height
stmts	39:8	55:8	5	
water	39:8	0:0	6	{
if	40:12	47:12	6	(p_dec -> fmt_in . video . i_visible_width && p_dec -> fmt_in . video . i_visible_height)
cond	40:16	41:36	7	p_dec -> fmt_in . video . i_visible_width && p_dec -> fmt_in . video . i_visible_height
water	40:16	0:0	8	p_dec
op	40:21	0:0	8	->
water	40:23	0:0	8	fmt_in
op	40:29	0:0	8	.
water	40:30	0:0	8	video
op	40:35	0:0	8	.
water	40:36	0:0	8	i_visible_width
op	40:52	0:0	8	&&
water	41:16	0:0	8	p_dec
op	41:21	0:0	8	->
water	41:23	0:0	8	fmt_in
op	41:29	0:0	8	.
water	41:30	0:0	8	video
op	41:35	0:0	8	.
water	41:36	0:0	8	i_visible_height
stmts	42:12	47:12	7	
water	42:12	0:0	8	{
water	43:16	0:0	8	fmt
op	43:19	0:0	8	.
water	43:20	0:0	8	i_visible_width
op	43:37	0:0	8	=
water	43:39	0:0	8	p_dec
op	43:44	0:0	8	->
water	43:46	0:0	8	fmt_in
op	43:52	0:0	8	.
water	43:53	0:0	8	video
op	43:58	0:0	8	.
water	43:59	0:0	8	i_visible_width
water	43:74	0:0	8	;
water	44:16	0:0	8	fmt
op	44:19	0:0	8	.
water	44:20	0:0	8	i_visible_height
op	44:37	0:0	8	=
water	44:39	0:0	8	p_dec
op	44:44	0:0	8	->
water	44:46	0:0	8	fmt_in
op	44:52	0:0	8	.
water	44:53	0:0	8	video
op	44:58	0:0	8	.
water	44:59	0:0	8	i_visible_height
water	44:75	0:0	8	;
water	45:16	0:0	8	fmt
op	45:19	0:0	8	.
water	45:20	0:0	8	i_x_offset
op	45:37	0:0	8	=
water	45:39	0:0	8	p_dec
op	45:44	0:0	8	->
water	45:46	0:0	8	fmt_in
op	45:52	0:0	8	.
water	45:53	0:0	8	video
op	45:58	0:0	8	.
water	45:59	0:0	8	i_x_offset
water	45:69	0:0	8	;
water	46:16	0:0	8	fmt
op	46:19	0:0	8	.
water	46:20	0:0	8	i_y_offset
op	46:37	0:0	8	=
water	46:39	0:0	8	p_dec
op	46:44	0:0	8	->
water	46:46	0:0	8	fmt_in
op	46:52	0:0	8	.
water	46:53	0:0	8	video
op	46:58	0:0	8	.
water	46:59	0:0	8	i_y_offset
water	46:69	0:0	8	;
water	47:12	0:0	8	}
else	48:12	54:12	6
stmts	49:12	54:12	7	
water	49:12	0:0	8	{
water	50:16	0:0	8	fmt
op	50:19	0:0	8	.
water	50:20	0:0	8	i_visible_width
op	50:37	0:0	8	=
water	50:39	0:0	8	fmt
op	50:42	0:0	8	.
water	50:43	0:0	8	i_width
water	50:50	0:0	8	;
water	51:16	0:0	8	fmt
op	51:19	0:0	8	.
water	51:20	0:0	8	i_visible_height
op	51:37	0:0	8	=
water	51:39	0:0	8	fmt
op	51:42	0:0	8	.
water	51:43	0:0	8	i_height
water	51:51	0:0	8	;
water	52:16	0:0	8	fmt
op	52:19	0:0	8	.
water	52:20	0:0	8	i_x_offset
op	52:37	0:0	8	=
water	52:39	0:0	8	0
water	52:40	0:0	8	;
water	53:16	0:0	8	fmt
op	53:19	0:0	8	.
water	53:20	0:0	8	i_y_offset
op	53:37	0:0	8	=
water	53:39	0:0	8	0
water	53:40	0:0	8	;
water	54:12	0:0	8	}
water	55:8	0:0	6	}
if	56:8	66:8	4	(fmt . i_visible_height == 1088 &&var_CreateGetBool (p_dec ,"hdtv-fix" ))
cond	56:12	57:49	5	fmt . i_visible_height == 1088 &&var_CreateGetBool (p_dec ,"hdtv-fix" )
water	56:12	0:0	6	fmt
op	56:15	0:0	6	.
water	56:16	0:0	6	i_visible_height
op	56:33	0:0	6	==
water	56:36	0:0	6	1088
op	56:41	0:0	6	&&
call	57:12	57:49	6	var_CreateGetBool
arg	57:31	57:36	7	p_dec
water	57:31	0:0	8	p_dec
arg	57:38	57:49	7	"hdtv-fix"
water	57:38	0:0	8	"hdtv-fix"
stmts	58:8	66:8	5	
water	58:8	0:0	6	{
water	59:12	0:0	6	fmt
op	59:15	0:0	6	.
water	59:16	0:0	6	i_visible_height
op	59:33	0:0	6	=
water	59:35	0:0	6	1080
water	59:39	0:0	6	;
if	60:12	64:12	6	(! ( fmt . i_sar_num % 136 ))
cond	60:16	60:37	7	! ( fmt . i_sar_num % 136 )
op	60:16	0:0	8	!
water	60:17	0:0	8	(
water	60:18	0:0	8	fmt
op	60:21	0:0	8	.
water	60:22	0:0	8	i_sar_num
op	60:32	0:0	8	%
water	60:34	0:0	8	136
water	60:37	0:0	8	)
stmts	61:12	64:12	7	
water	61:12	0:0	8	{
water	62:16	0:0	8	fmt
op	62:19	0:0	8	.
water	62:20	0:0	8	i_sar_num
op	62:30	0:0	8	*=
water	62:33	0:0	8	135
water	62:36	0:0	8	;
water	63:16	0:0	8	fmt
op	63:19	0:0	8	.
water	63:20	0:0	8	i_sar_den
op	63:30	0:0	8	*=
water	63:33	0:0	8	136
water	63:36	0:0	8	;
water	64:12	0:0	8	}
call	65:12	65:78	6	msg_Warn
arg	65:22	65:27	7	p_dec
water	65:22	0:0	8	p_dec
arg	65:29	65:78	7	"Fixing broken HDTV stream (display_height=1088)"
water	65:29	0:0	8	"Fixing broken HDTV stream (display_height=1088)"
water	65:79	0:0	6	;
water	66:8	0:0	6	}
if	67:8	71:8	4	(! fmt . i_sar_num || ! fmt . i_sar_den)
cond	67:12	67:35	5	! fmt . i_sar_num || ! fmt . i_sar_den
op	67:12	0:0	6	!
water	67:13	0:0	6	fmt
op	67:16	0:0	6	.
water	67:17	0:0	6	i_sar_num
op	67:27	0:0	6	||
op	67:30	0:0	6	!
water	67:31	0:0	6	fmt
op	67:34	0:0	6	.
water	67:35	0:0	6	i_sar_den
stmts	68:8	71:8	5	
water	68:8	0:0	6	{
water	69:12	0:0	6	fmt
op	69:15	0:0	6	.
water	69:16	0:0	6	i_sar_num
op	69:26	0:0	6	=
water	69:28	0:0	6	1
water	69:29	0:0	6	;
water	70:12	0:0	6	fmt
op	70:15	0:0	6	.
water	70:16	0:0	6	i_sar_den
op	70:26	0:0	6	=
water	70:28	0:0	6	1
water	70:29	0:0	6	;
water	71:8	0:0	6	}
call	72:8	73:57	4	vlc_ureduce
arg	72:21	72:35	5	&fmt.i_sar_num
op	72:21	0:0	6	&
water	72:22	0:0	6	fmt
op	72:25	0:0	6	.
water	72:26	0:0	6	i_sar_num
arg	72:37	72:51	5	&fmt.i_sar_den
op	72:37	0:0	6	&
water	72:38	0:0	6	fmt
op	72:41	0:0	6	.
water	72:42	0:0	6	i_sar_den
arg	73:21	73:34	5	fmt.i_sar_num
water	73:21	0:0	6	fmt
op	73:24	0:0	6	.
water	73:25	0:0	6	i_sar_num
arg	73:36	73:49	5	fmt.i_sar_den
water	73:36	0:0	6	fmt
op	73:39	0:0	6	.
water	73:40	0:0	6	i_sar_den
arg	73:51	73:57	5	50000
water	73:51	0:0	6	50000
water	73:58	0:0	4	;
call	74:8	74:39	4	vlc_mutex_lock
arg	74:24	74:39	5	&p_owner->lock
op	74:24	0:0	6	&
water	74:25	0:0	6	p_owner
op	74:32	0:0	6	->
water	74:34	0:0	6	lock
water	74:40	0:0	4	;
water	75:8	0:0	4	p_vout
op	75:15	0:0	4	=
water	75:17	0:0	4	p_owner
op	75:24	0:0	4	->
water	75:26	0:0	4	p_vout
water	75:32	0:0	4	;
water	76:8	0:0	4	p_owner
op	76:15	0:0	4	->
water	76:17	0:0	4	p_vout
op	76:24	0:0	4	=
water	76:26	0:0	4	NULL
water	76:30	0:0	4	;
call	77:8	77:41	4	vlc_mutex_unlock
arg	77:26	77:41	5	&p_owner->lock
op	77:26	0:0	6	&
water	77:27	0:0	6	p_owner
op	77:34	0:0	6	->
water	77:36	0:0	6	lock
water	77:42	0:0	4	;
water	78:8	0:0	4	unsigned
water	78:17	0:0	4	dpb_size
water	78:25	0:0	4	;
switch	79:8	95:8	4	(p_dec -> fmt_in . i_codec)
cond	79:16	79:30	5	p_dec -> fmt_in . i_codec
water	79:16	0:0	6	p_dec
op	79:21	0:0	6	->
water	79:23	0:0	6	fmt_in
op	79:29	0:0	6	.
water	79:30	0:0	6	i_codec
stmts	80:8	95:8	5	
water	80:8	0:0	6	{
label	81:8	81:27	6	case VLC_CODEC_HEVC :
label	82:8	82:27	6	case VLC_CODEC_H264 :
label	83:8	83:28	6	case VLC_CODEC_DIRAC :
water	84:12	0:0	6	dpb_size
op	84:21	0:0	6	=
water	84:23	0:0	6	18
water	84:25	0:0	6	;
break	85:12	85:17	6	
label	86:8	86:26	6	case VLC_CODEC_VP5 :
label	87:8	87:26	6	case VLC_CODEC_VP6 :
label	88:8	88:27	6	case VLC_CODEC_VP6F :
label	89:8	89:26	6	case VLC_CODEC_VP8 :
water	90:12	0:0	6	dpb_size
op	90:21	0:0	6	=
water	90:23	0:0	6	3
water	90:24	0:0	6	;
break	91:12	91:17	6	
label	92:8	92:15	6	default :
water	93:12	0:0	6	dpb_size
op	93:21	0:0	6	=
water	93:23	0:0	6	2
water	93:24	0:0	6	;
break	94:12	94:17	6	
water	95:8	0:0	6	}
water	96:8	0:0	4	p_vout
op	96:15	0:0	4	=
call	96:17	100:50	4	input_resource_RequestVout
arg	96:45	96:64	5	p_owner->p_resource
water	96:45	0:0	6	p_owner
op	96:52	0:0	6	->
water	96:54	0:0	6	p_resource
arg	97:45	97:51	5	p_vout
water	97:45	0:0	6	p_vout
arg	97:53	97:57	5	&fmt
op	97:53	0:0	6	&
water	97:54	0:0	6	fmt
arg	98:45	99:79	5	dpb_size+p_dec->i_extra_picture_buffers+1
water	98:45	0:0	6	dpb_size
op	98:54	0:0	6	+
water	99:45	0:0	6	p_dec
op	99:50	0:0	6	->
water	99:52	0:0	6	i_extra_picture_buffers
op	99:76	0:0	6	+
water	99:78	0:0	6	1
arg	100:45	100:50	5	true
water	100:45	0:0	6	true
water	100:51	0:0	4	;
call	101:8	101:39	4	vlc_mutex_lock
arg	101:24	101:39	5	&p_owner->lock
op	101:24	0:0	6	&
water	101:25	0:0	6	p_owner
op	101:32	0:0	6	->
water	101:34	0:0	6	lock
water	101:40	0:0	4	;
water	102:8	0:0	4	p_owner
op	102:15	0:0	4	->
water	102:17	0:0	4	p_vout
op	102:24	0:0	4	=
water	102:26	0:0	4	p_vout
water	102:32	0:0	4	;
call	103:8	103:41	4	DecoderUpdateFormatLocked
arg	103:35	103:41	5	p_dec
water	103:35	0:0	6	p_dec
water	103:42	0:0	4	;
call	104:8	104:41	4	vlc_mutex_unlock
arg	104:26	104:41	5	&p_owner->lock
op	104:26	0:0	6	&
water	104:27	0:0	6	p_owner
op	104:34	0:0	6	->
water	104:36	0:0	6	lock
water	104:42	0:0	4	;
if	105:8	106:51	4	(p_owner -> p_input != NULL)
cond	105:12	105:32	5	p_owner -> p_input != NULL
water	105:12	0:0	6	p_owner
op	105:19	0:0	6	->
water	105:21	0:0	6	p_input
op	105:29	0:0	6	!=
water	105:32	0:0	6	NULL
stmts	106:12	106:51	5	
call	106:12	106:50	6	input_SendEventVout
arg	106:33	106:50	7	p_owner->p_input
water	106:33	0:0	8	p_owner
op	106:40	0:0	8	->
water	106:42	0:0	8	p_input
water	106:51	0:0	6	;
if	107:8	112:8	4	(p_vout == NULL)
cond	107:12	107:22	5	p_vout == NULL
water	107:12	0:0	6	p_vout
op	107:19	0:0	6	==
water	107:22	0:0	6	NULL
stmts	108:8	112:8	5	
water	108:8	0:0	6	{
call	109:12	109:60	6	msg_Err
arg	109:21	109:26	7	p_dec
water	109:21	0:0	8	p_dec
arg	109:28	109:60	7	"failed to create video output"
water	109:28	0:0	8	"failed to create video output"
water	109:61	0:0	6	;
water	110:12	0:0	6	p_dec
op	110:17	0:0	6	->
water	110:19	0:0	6	b_error
op	110:27	0:0	6	=
water	110:29	0:0	6	true
water	110:33	0:0	6	;
return	111:12	111:23	6	NULL
water	111:19	0:0	7	NULL
water	112:8	0:0	6	}
water	113:4	0:0	4	}
for	116:4	131:4	2	(;;)
forinit	116:9	116:9	3	;
water	116:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	117:4	131:4	3	
water	117:4	0:0	4	{
if	118:8	119:23	4	(DecoderIsExitRequested (p_dec ) || p_dec -> b_error)
cond	118:12	118:54	5	DecoderIsExitRequested (p_dec ) || p_dec -> b_error
call	118:12	118:42	6	DecoderIsExitRequested
arg	118:36	118:42	7	p_dec
water	118:36	0:0	8	p_dec
op	118:44	0:0	6	||
water	118:47	0:0	6	p_dec
op	118:52	0:0	6	->
water	118:54	0:0	6	b_error
stmts	119:12	119:23	5	
return	119:12	119:23	6	NULL
water	119:19	0:0	7	NULL
decl	120:8	120:65	4	picture_t	*p_picture
op	120:29	0:0	4	=
call	120:31	120:64	5	vout_GetPicture
arg	120:48	120:64	6	p_owner->p_vout
water	120:48	0:0	7	p_owner
op	120:55	0:0	7	->
water	120:57	0:0	7	p_vout
if	121:8	122:28	4	(p_picture)
cond	121:12	121:12	5	p_picture
water	121:12	0:0	6	p_picture
stmts	122:12	122:28	5	
return	122:12	122:28	6	p_picture
water	122:19	0:0	7	p_picture
if	123:8	124:23	4	(DecoderIsFlushing (p_dec ))
cond	123:12	123:37	5	DecoderIsFlushing (p_dec )
call	123:12	123:37	6	DecoderIsFlushing
arg	123:31	123:37	7	p_dec
water	123:31	0:0	8	p_dec
stmts	124:12	124:23	5	
return	124:12	124:23	6	NULL
water	124:19	0:0	7	NULL
call	126:8	126:39	4	DecoderSignalWait
arg	126:27	126:32	5	p_dec
water	126:27	0:0	6	p_dec
arg	126:34	126:39	5	true
water	126:34	0:0	6	true
water	126:40	0:0	4	;
call	128:8	128:39	4	vout_FixLeaks
arg	128:23	128:39	5	p_owner->p_vout
water	128:23	0:0	6	p_owner
op	128:30	0:0	6	->
water	128:32	0:0	6	p_vout
water	128:40	0:0	4	;
call	130:8	130:34	4	msleep
arg	130:16	130:34	5	VOUT_OUTMEM_SLEEP
water	130:16	0:0	6	VOUT_OUTMEM_SLEEP
water	130:35	0:0	4	;
water	131:4	0:0	4	}

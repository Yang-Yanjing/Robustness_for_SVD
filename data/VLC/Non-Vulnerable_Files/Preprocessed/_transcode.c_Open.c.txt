func	2:0	191:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	190:22	1	
decl	4:4	4:56	2	sout_stream_t	*p_stream
op	4:32	0:0	2	=
water	4:34	0:0	2	(
water	4:35	0:0	2	sout_stream_t
op	4:48	0:0	2	*
water	4:49	0:0	2	)
water	4:50	0:0	2	p_this
decl	5:4	5:28	2	sout_stream_sys_t	*p_sys
decl	6:4	6:33	2	char	*psz_string
if	7:4	11:4	2	(! p_stream -> p_next)
cond	7:8	7:19	3	! p_stream -> p_next
op	7:8	0:0	4	!
water	7:9	0:0	4	p_stream
op	7:17	0:0	4	->
water	7:19	0:0	4	p_next
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:49	4	msg_Err
arg	9:17	9:25	5	p_stream
water	9:17	0:0	6	p_stream
arg	9:27	9:49	5	"cannot create chain"
water	9:27	0:0	6	"cannot create chain"
water	9:50	0:0	4	;
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
water	11:4	0:0	4	}
water	12:4	0:0	2	p_sys
op	12:10	0:0	2	=
call	12:12	12:40	2	calloc
arg	12:20	12:21	3	1
water	12:20	0:0	4	1
arg	12:23	12:40	3	sizeof(*p_sys)
op	12:23	0:0	4	sizeof
water	12:29	0:0	4	(
op	12:31	0:0	4	*
water	12:32	0:0	4	p_sys
water	12:38	0:0	4	)
water	12:41	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	i_master_drift
op	13:26	0:0	2	=
water	13:28	0:0	2	0
water	13:29	0:0	2	;
call	14:4	15:35	2	config_ChainParse
arg	14:23	14:31	3	p_stream
water	14:23	0:0	4	p_stream
arg	14:33	14:48	3	SOUT_CFG_PREFIX
water	14:33	0:0	4	SOUT_CFG_PREFIX
arg	14:50	14:67	3	ppsz_sout_options
water	14:50	0:0	4	ppsz_sout_options
arg	15:19	15:35	3	p_stream->p_cfg
water	15:19	0:0	4	p_stream
op	15:27	0:0	4	->
water	15:29	0:0	4	p_cfg
water	15:36	0:0	2	;
water	17:4	0:0	2	psz_string
op	17:15	0:0	2	=
call	17:17	17:65	2	var_GetString
arg	17:32	17:40	3	p_stream
water	17:32	0:0	4	p_stream
arg	17:42	17:65	3	SOUT_CFG_PREFIX"aenc"
water	17:42	0:0	4	SOUT_CFG_PREFIX
water	17:58	0:0	4	"aenc"
water	17:66	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	psz_aenc
op	18:20	0:0	2	=
water	18:22	0:0	2	NULL
water	18:26	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	p_audio_cfg
op	19:23	0:0	2	=
water	19:25	0:0	2	NULL
water	19:29	0:0	2	;
if	20:4	26:4	2	(psz_string && * psz_string)
cond	20:8	20:23	3	psz_string && * psz_string
water	20:8	0:0	4	psz_string
op	20:19	0:0	4	&&
op	20:22	0:0	4	*
water	20:23	0:0	4	psz_string
stmts	21:4	26:4	3	
water	21:4	0:0	4	{
decl	22:8	22:22	4	char	*psz_next
water	23:8	0:0	4	psz_next
op	23:17	0:0	4	=
call	23:19	24:50	4	config_ChainCreate
arg	23:39	23:55	5	&p_sys->psz_aenc
op	23:39	0:0	6	&
water	23:40	0:0	6	p_sys
op	23:45	0:0	6	->
water	23:47	0:0	6	psz_aenc
arg	23:57	23:76	5	&p_sys->p_audio_cfg
op	23:57	0:0	6	&
water	23:58	0:0	6	p_sys
op	23:63	0:0	6	->
water	23:65	0:0	6	p_audio_cfg
arg	24:39	24:50	5	psz_string
water	24:39	0:0	6	psz_string
water	24:51	0:0	4	;
call	25:8	25:23	4	free
arg	25:14	25:23	5	psz_next
water	25:14	0:0	6	psz_next
water	25:24	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:21	2	free
arg	27:10	27:21	3	psz_string
water	27:10	0:0	4	psz_string
water	27:22	0:0	2	;
water	28:4	0:0	2	psz_string
op	28:15	0:0	2	=
call	28:17	28:67	2	var_GetString
arg	28:32	28:40	3	p_stream
water	28:32	0:0	4	p_stream
arg	28:42	28:67	3	SOUT_CFG_PREFIX"acodec"
water	28:42	0:0	4	SOUT_CFG_PREFIX
water	28:58	0:0	4	"acodec"
water	28:68	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_acodec
op	29:20	0:0	2	=
water	29:22	0:0	2	0
water	29:23	0:0	2	;
if	30:4	36:4	2	(psz_string && * psz_string)
cond	30:8	30:23	3	psz_string && * psz_string
water	30:8	0:0	4	psz_string
op	30:19	0:0	4	&&
op	30:22	0:0	4	*
water	30:23	0:0	4	psz_string
stmts	31:4	36:4	3	
water	31:4	0:0	4	{
decl	32:8	32:30	4	char	fcc[5]
op	32:20	0:0	4	=
water	32:22	0:0	4	"    \0"
call	33:8	33:66	4	memcpy
arg	33:16	33:19	5	fcc
water	33:16	0:0	6	fcc
arg	33:21	33:31	5	psz_string
water	33:21	0:0	6	psz_string
arg	33:33	33:66	5	__MIN(strlen(psz_string),4)
call	33:33	33:64	6	__MIN
arg	33:40	33:60	7	strlen(psz_string)
call	33:40	33:59	8	strlen
arg	33:48	33:59	9	psz_string
water	33:48	0:0	10	psz_string
arg	33:62	33:64	7	4
water	33:62	0:0	8	4
water	33:67	0:0	4	;
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	i_acodec
op	34:24	0:0	4	=
call	34:26	34:71	4	vlc_fourcc_GetCodecFromString
arg	34:57	34:65	5	AUDIO_ES
water	34:57	0:0	6	AUDIO_ES
arg	34:67	34:71	5	fcc
water	34:67	0:0	6	fcc
water	34:72	0:0	4	;
call	35:8	35:99	4	msg_Dbg
arg	35:17	35:25	5	p_stream
water	35:17	0:0	6	p_stream
arg	35:27	35:69	5	"Checking codec mapping for %s got %4.4s "
water	35:27	0:0	6	"Checking codec mapping for %s got %4.4s "
arg	35:71	35:74	5	fcc
water	35:71	0:0	6	fcc
arg	35:76	35:99	5	(char*)&p_sys->i_acodec
water	35:76	0:0	6	(
water	35:77	0:0	6	char
op	35:81	0:0	6	*
water	35:82	0:0	6	)
op	35:83	0:0	6	&
water	35:84	0:0	6	p_sys
op	35:89	0:0	6	->
water	35:91	0:0	6	i_acodec
water	35:100	0:0	4	;
water	36:4	0:0	4	}
call	37:4	37:21	2	free
arg	37:10	37:21	3	psz_string
water	37:10	0:0	4	psz_string
water	37:22	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	psz_alang
op	38:21	0:0	2	=
call	38:23	38:80	2	var_GetNonEmptyString
arg	38:46	38:54	3	p_stream
water	38:46	0:0	4	p_stream
arg	38:56	38:80	3	SOUT_CFG_PREFIX"alang"
water	38:56	0:0	4	SOUT_CFG_PREFIX
water	38:72	0:0	4	"alang"
water	38:81	0:0	2	;
water	39:4	0:0	2	p_sys
op	39:9	0:0	2	->
water	39:11	0:0	2	i_abitrate
op	39:22	0:0	2	=
call	39:24	39:71	2	var_GetInteger
arg	39:40	39:48	3	p_stream
water	39:40	0:0	4	p_stream
arg	39:50	39:71	3	SOUT_CFG_PREFIX"ab"
water	39:50	0:0	4	SOUT_CFG_PREFIX
water	39:66	0:0	4	"ab"
water	39:72	0:0	2	;
if	40:4	40:60	2	(p_sys -> i_abitrate < 4000)
cond	40:8	40:28	3	p_sys -> i_abitrate < 4000
water	40:8	0:0	4	p_sys
op	40:13	0:0	4	->
water	40:15	0:0	4	i_abitrate
op	40:26	0:0	4	<
water	40:28	0:0	4	4000
stmts	40:35	40:60	3	
water	40:35	0:0	4	p_sys
op	40:40	0:0	4	->
water	40:42	0:0	4	i_abitrate
op	40:53	0:0	4	*=
water	40:56	0:0	4	1000
water	40:60	0:0	4	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	i_sample_rate
op	41:25	0:0	2	=
call	41:27	41:82	2	var_GetInteger
arg	41:43	41:51	3	p_stream
water	41:43	0:0	4	p_stream
arg	41:53	41:82	3	SOUT_CFG_PREFIX"samplerate"
water	41:53	0:0	4	SOUT_CFG_PREFIX
water	41:69	0:0	4	"samplerate"
water	41:83	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	i_channels
op	42:22	0:0	2	=
call	42:24	42:77	2	var_GetInteger
arg	42:40	42:48	3	p_stream
water	42:40	0:0	4	p_stream
arg	42:50	42:77	3	SOUT_CFG_PREFIX"channels"
water	42:50	0:0	4	SOUT_CFG_PREFIX
water	42:66	0:0	4	"channels"
water	42:78	0:0	2	;
if	43:4	56:4	2	(p_sys -> i_acodec)
cond	43:8	43:15	3	p_sys -> i_acodec
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	i_acodec
stmts	44:4	56:4	3	
water	44:4	0:0	4	{
if	45:8	52:8	4	(( p_sys -> i_acodec == VLC_CODEC_MP3 || p_sys -> i_acodec == VLC_CODEC_MP2 || p_sys -> i_acodec == VLC_CODEC_MPGA ) && p_sys -> i_channels > 2)
cond	45:12	47:73	5	( p_sys -> i_acodec == VLC_CODEC_MP3 || p_sys -> i_acodec == VLC_CODEC_MP2 || p_sys -> i_acodec == VLC_CODEC_MPGA ) && p_sys -> i_channels > 2
water	45:12	0:0	6	(
water	45:14	0:0	6	p_sys
op	45:19	0:0	6	->
water	45:21	0:0	6	i_acodec
op	45:30	0:0	6	==
water	45:33	0:0	6	VLC_CODEC_MP3
op	45:47	0:0	6	||
water	46:14	0:0	6	p_sys
op	46:19	0:0	6	->
water	46:21	0:0	6	i_acodec
op	46:30	0:0	6	==
water	46:33	0:0	6	VLC_CODEC_MP2
op	46:47	0:0	6	||
water	47:14	0:0	6	p_sys
op	47:19	0:0	6	->
water	47:21	0:0	6	i_acodec
op	47:30	0:0	6	==
water	47:33	0:0	6	VLC_CODEC_MPGA
water	47:48	0:0	6	)
op	47:50	0:0	6	&&
water	47:53	0:0	6	p_sys
op	47:58	0:0	6	->
water	47:60	0:0	6	i_channels
op	47:71	0:0	6	>
water	47:73	0:0	6	2
stmts	48:8	52:8	5	
water	48:8	0:0	6	{
call	49:12	50:40	6	msg_Warn
arg	49:22	49:30	7	p_stream
water	49:22	0:0	8	p_stream
arg	49:32	49:79	7	"%d channels invalid for mp2/mp3, forcing to 2"
water	49:32	0:0	8	"%d channels invalid for mp2/mp3, forcing to 2"
arg	50:22	50:40	7	p_sys->i_channels
water	50:22	0:0	8	p_sys
op	50:27	0:0	8	->
water	50:29	0:0	8	i_channels
water	50:41	0:0	6	;
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	i_channels
op	51:30	0:0	6	=
water	51:32	0:0	6	2
water	51:33	0:0	6	;
water	52:8	0:0	6	}
call	53:8	55:61	4	msg_Dbg
arg	53:17	53:25	5	p_stream
water	53:17	0:0	6	p_stream
arg	53:27	53:70	5	"codec audio=%4.4s %dHz %d channels %dKb/s"
water	53:27	0:0	6	"codec audio=%4.4s %dHz %d channels %dKb/s"
arg	54:17	54:41	5	(char*)&p_sys->i_acodec
water	54:17	0:0	6	(
water	54:18	0:0	6	char
op	54:23	0:0	6	*
water	54:24	0:0	6	)
op	54:25	0:0	6	&
water	54:26	0:0	6	p_sys
op	54:31	0:0	6	->
water	54:33	0:0	6	i_acodec
arg	54:43	54:63	5	p_sys->i_sample_rate
water	54:43	0:0	6	p_sys
op	54:48	0:0	6	->
water	54:50	0:0	6	i_sample_rate
arg	55:17	55:34	5	p_sys->i_channels
water	55:17	0:0	6	p_sys
op	55:22	0:0	6	->
water	55:24	0:0	6	i_channels
arg	55:36	55:61	5	p_sys->i_abitrate/1000
water	55:36	0:0	6	p_sys
op	55:41	0:0	6	->
water	55:43	0:0	6	i_abitrate
op	55:54	0:0	6	/
water	55:56	0:0	6	1000
water	55:62	0:0	4	;
water	56:4	0:0	4	}
water	57:4	0:0	2	psz_string
op	57:15	0:0	2	=
call	57:17	57:68	2	var_GetString
arg	57:32	57:40	3	p_stream
water	57:32	0:0	4	p_stream
arg	57:42	57:68	3	SOUT_CFG_PREFIX"afilter"
water	57:42	0:0	4	SOUT_CFG_PREFIX
water	57:58	0:0	4	"afilter"
water	57:69	0:0	2	;
if	58:4	59:44	2	(psz_string && * psz_string)
cond	58:8	58:23	3	psz_string && * psz_string
water	58:8	0:0	4	psz_string
op	58:19	0:0	4	&&
op	58:22	0:0	4	*
water	58:23	0:0	4	psz_string
stmts	59:8	59:44	3	
water	59:8	0:0	4	p_sys
op	59:13	0:0	4	->
water	59:15	0:0	4	psz_af
op	59:22	0:0	4	=
call	59:24	59:43	4	strdup
arg	59:32	59:43	5	psz_string
water	59:32	0:0	6	psz_string
water	59:44	0:0	4	;
else	60:4	61:28	2
stmts	61:8	61:28	3	
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	psz_af
op	61:22	0:0	4	=
water	61:24	0:0	4	NULL
water	61:28	0:0	4	;
call	62:4	62:21	2	free
arg	62:10	62:21	3	psz_string
water	62:10	0:0	4	psz_string
water	62:22	0:0	2	;
water	64:4	0:0	2	psz_string
op	64:15	0:0	2	=
call	64:17	64:65	2	var_GetString
arg	64:32	64:40	3	p_stream
water	64:32	0:0	4	p_stream
arg	64:42	64:65	3	SOUT_CFG_PREFIX"venc"
water	64:42	0:0	4	SOUT_CFG_PREFIX
water	64:58	0:0	4	"venc"
water	64:66	0:0	2	;
water	65:4	0:0	2	p_sys
op	65:9	0:0	2	->
water	65:11	0:0	2	psz_venc
op	65:20	0:0	2	=
water	65:22	0:0	2	NULL
water	65:26	0:0	2	;
water	66:4	0:0	2	p_sys
op	66:9	0:0	2	->
water	66:11	0:0	2	p_video_cfg
op	66:23	0:0	2	=
water	66:25	0:0	2	NULL
water	66:29	0:0	2	;
if	67:4	73:4	2	(psz_string && * psz_string)
cond	67:8	67:23	3	psz_string && * psz_string
water	67:8	0:0	4	psz_string
op	67:19	0:0	4	&&
op	67:22	0:0	4	*
water	67:23	0:0	4	psz_string
stmts	68:4	73:4	3	
water	68:4	0:0	4	{
decl	69:8	69:22	4	char	*psz_next
water	70:8	0:0	4	psz_next
op	70:17	0:0	4	=
call	70:19	71:46	4	config_ChainCreate
arg	70:39	70:55	5	&p_sys->psz_venc
op	70:39	0:0	6	&
water	70:40	0:0	6	p_sys
op	70:45	0:0	6	->
water	70:47	0:0	6	psz_venc
arg	70:57	70:76	5	&p_sys->p_video_cfg
op	70:57	0:0	6	&
water	70:58	0:0	6	p_sys
op	70:63	0:0	6	->
water	70:65	0:0	6	p_video_cfg
arg	71:35	71:46	5	psz_string
water	71:35	0:0	6	psz_string
water	71:47	0:0	4	;
call	72:8	72:23	4	free
arg	72:14	72:23	5	psz_next
water	72:14	0:0	6	psz_next
water	72:24	0:0	4	;
water	73:4	0:0	4	}
call	74:4	74:21	2	free
arg	74:10	74:21	3	psz_string
water	74:10	0:0	4	psz_string
water	74:22	0:0	2	;
water	75:4	0:0	2	psz_string
op	75:15	0:0	2	=
call	75:17	75:67	2	var_GetString
arg	75:32	75:40	3	p_stream
water	75:32	0:0	4	p_stream
arg	75:42	75:67	3	SOUT_CFG_PREFIX"vcodec"
water	75:42	0:0	4	SOUT_CFG_PREFIX
water	75:58	0:0	4	"vcodec"
water	75:68	0:0	2	;
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	i_vcodec
op	76:20	0:0	2	=
water	76:22	0:0	2	0
water	76:23	0:0	2	;
if	77:4	83:4	2	(psz_string && * psz_string)
cond	77:8	77:23	3	psz_string && * psz_string
water	77:8	0:0	4	psz_string
op	77:19	0:0	4	&&
op	77:22	0:0	4	*
water	77:23	0:0	4	psz_string
stmts	78:4	83:4	3	
water	78:4	0:0	4	{
decl	79:8	79:30	4	char	fcc[5]
op	79:20	0:0	4	=
water	79:22	0:0	4	"    \0"
call	80:8	80:66	4	memcpy
arg	80:16	80:19	5	fcc
water	80:16	0:0	6	fcc
arg	80:21	80:31	5	psz_string
water	80:21	0:0	6	psz_string
arg	80:33	80:66	5	__MIN(strlen(psz_string),4)
call	80:33	80:64	6	__MIN
arg	80:40	80:60	7	strlen(psz_string)
call	80:40	80:59	8	strlen
arg	80:48	80:59	9	psz_string
water	80:48	0:0	10	psz_string
arg	80:62	80:64	7	4
water	80:62	0:0	8	4
water	80:67	0:0	4	;
water	81:8	0:0	4	p_sys
op	81:13	0:0	4	->
water	81:15	0:0	4	i_vcodec
op	81:24	0:0	4	=
call	81:26	81:71	4	vlc_fourcc_GetCodecFromString
arg	81:57	81:65	5	VIDEO_ES
water	81:57	0:0	6	VIDEO_ES
arg	81:67	81:71	5	fcc
water	81:67	0:0	6	fcc
water	81:72	0:0	4	;
call	82:8	82:105	4	msg_Dbg
arg	82:17	82:25	5	p_stream
water	82:17	0:0	6	p_stream
arg	82:27	82:75	5	"Checking video codec mapping for %s got %4.4s "
water	82:27	0:0	6	"Checking video codec mapping for %s got %4.4s "
arg	82:77	82:80	5	fcc
water	82:77	0:0	6	fcc
arg	82:82	82:105	5	(char*)&p_sys->i_vcodec
water	82:82	0:0	6	(
water	82:83	0:0	6	char
op	82:87	0:0	6	*
water	82:88	0:0	6	)
op	82:89	0:0	6	&
water	82:90	0:0	6	p_sys
op	82:95	0:0	6	->
water	82:97	0:0	6	i_vcodec
water	82:106	0:0	4	;
water	83:4	0:0	4	}
call	84:4	84:21	2	free
arg	84:10	84:21	3	psz_string
water	84:10	0:0	4	psz_string
water	84:22	0:0	2	;
water	85:4	0:0	2	p_sys
op	85:9	0:0	2	->
water	85:11	0:0	2	i_vbitrate
op	85:22	0:0	2	=
call	85:24	85:71	2	var_GetInteger
arg	85:40	85:48	3	p_stream
water	85:40	0:0	4	p_stream
arg	85:50	85:71	3	SOUT_CFG_PREFIX"vb"
water	85:50	0:0	4	SOUT_CFG_PREFIX
water	85:66	0:0	4	"vb"
water	85:72	0:0	2	;
if	86:4	86:61	2	(p_sys -> i_vbitrate < 16000)
cond	86:8	86:28	3	p_sys -> i_vbitrate < 16000
water	86:8	0:0	4	p_sys
op	86:13	0:0	4	->
water	86:15	0:0	4	i_vbitrate
op	86:26	0:0	4	<
water	86:28	0:0	4	16000
stmts	86:36	86:61	3	
water	86:36	0:0	4	p_sys
op	86:41	0:0	4	->
water	86:43	0:0	4	i_vbitrate
op	86:54	0:0	4	*=
water	86:57	0:0	4	1000
water	86:61	0:0	4	;
water	87:4	0:0	2	p_sys
op	87:9	0:0	2	->
water	87:11	0:0	2	f_scale
op	87:19	0:0	2	=
call	87:21	87:69	2	var_GetFloat
arg	87:35	87:43	3	p_stream
water	87:35	0:0	4	p_stream
arg	87:45	87:69	3	SOUT_CFG_PREFIX"scale"
water	87:45	0:0	4	SOUT_CFG_PREFIX
water	87:61	0:0	4	"scale"
water	87:70	0:0	2	;
water	88:4	0:0	2	p_sys
op	88:9	0:0	2	->
water	88:11	0:0	2	b_master_sync
op	88:25	0:0	2	=
call	88:27	88:115	2	var_InheritURational
arg	88:49	88:57	3	p_stream
water	88:49	0:0	4	p_stream
arg	88:59	88:74	3	&p_sys->fps_num
op	88:59	0:0	4	&
water	88:60	0:0	4	p_sys
op	88:65	0:0	4	->
water	88:67	0:0	4	fps_num
arg	88:76	88:91	3	&p_sys->fps_den
op	88:76	0:0	4	&
water	88:77	0:0	4	p_sys
op	88:82	0:0	4	->
water	88:84	0:0	4	fps_den
arg	88:93	88:115	3	SOUT_CFG_PREFIX"fps"
water	88:93	0:0	4	SOUT_CFG_PREFIX
water	88:109	0:0	4	"fps"
op	88:117	0:0	2	==
water	88:120	0:0	2	VLC_SUCCESS
water	88:131	0:0	2	;
water	89:4	0:0	2	p_sys
op	89:9	0:0	2	->
water	89:11	0:0	2	i_width
op	89:19	0:0	2	=
call	89:21	89:71	2	var_GetInteger
arg	89:37	89:45	3	p_stream
water	89:37	0:0	4	p_stream
arg	89:47	89:71	3	SOUT_CFG_PREFIX"width"
water	89:47	0:0	4	SOUT_CFG_PREFIX
water	89:63	0:0	4	"width"
water	89:72	0:0	2	;
water	90:4	0:0	2	p_sys
op	90:9	0:0	2	->
water	90:11	0:0	2	i_height
op	90:20	0:0	2	=
call	90:22	90:73	2	var_GetInteger
arg	90:38	90:46	3	p_stream
water	90:38	0:0	4	p_stream
arg	90:48	90:73	3	SOUT_CFG_PREFIX"height"
water	90:48	0:0	4	SOUT_CFG_PREFIX
water	90:64	0:0	4	"height"
water	90:74	0:0	2	;
water	91:4	0:0	2	p_sys
op	91:9	0:0	2	->
water	91:11	0:0	2	i_maxwidth
op	91:22	0:0	2	=
call	91:24	91:77	2	var_GetInteger
arg	91:40	91:48	3	p_stream
water	91:40	0:0	4	p_stream
arg	91:50	91:77	3	SOUT_CFG_PREFIX"maxwidth"
water	91:50	0:0	4	SOUT_CFG_PREFIX
water	91:66	0:0	4	"maxwidth"
water	91:78	0:0	2	;
water	92:4	0:0	2	p_sys
op	92:9	0:0	2	->
water	92:11	0:0	2	i_maxheight
op	92:23	0:0	2	=
call	92:25	92:79	2	var_GetInteger
arg	92:41	92:49	3	p_stream
water	92:41	0:0	4	p_stream
arg	92:51	92:79	3	SOUT_CFG_PREFIX"maxheight"
water	92:51	0:0	4	SOUT_CFG_PREFIX
water	92:67	0:0	4	"maxheight"
water	92:80	0:0	2	;
water	93:4	0:0	2	psz_string
op	93:15	0:0	2	=
call	93:17	93:68	2	var_GetString
arg	93:32	93:40	3	p_stream
water	93:32	0:0	4	p_stream
arg	93:42	93:68	3	SOUT_CFG_PREFIX"vfilter"
water	93:42	0:0	4	SOUT_CFG_PREFIX
water	93:58	0:0	4	"vfilter"
water	93:69	0:0	2	;
if	94:4	95:44	2	(psz_string && * psz_string)
cond	94:8	94:23	3	psz_string && * psz_string
water	94:8	0:0	4	psz_string
op	94:19	0:0	4	&&
op	94:22	0:0	4	*
water	94:23	0:0	4	psz_string
stmts	95:8	95:44	3	
water	95:8	0:0	4	p_sys
op	95:13	0:0	4	->
water	95:15	0:0	4	psz_vf2
op	95:23	0:0	4	=
call	95:25	95:43	4	strdup
arg	95:32	95:43	5	psz_string
water	95:32	0:0	6	psz_string
water	95:44	0:0	4	;
else	96:4	97:29	2
stmts	97:8	97:29	3	
water	97:8	0:0	4	p_sys
op	97:13	0:0	4	->
water	97:15	0:0	4	psz_vf2
op	97:23	0:0	4	=
water	97:25	0:0	4	NULL
water	97:29	0:0	4	;
call	98:4	98:21	2	free
arg	98:10	98:21	3	psz_string
water	98:10	0:0	4	psz_string
water	98:22	0:0	2	;
water	99:4	0:0	2	p_sys
op	99:9	0:0	2	->
water	99:11	0:0	2	b_deinterlace
op	99:25	0:0	2	=
call	99:27	99:80	2	var_GetBool
arg	99:40	99:48	3	p_stream
water	99:40	0:0	4	p_stream
arg	99:50	99:80	3	SOUT_CFG_PREFIX"deinterlace"
water	99:50	0:0	4	SOUT_CFG_PREFIX
water	99:66	0:0	4	"deinterlace"
water	99:81	0:0	2	;
water	100:4	0:0	2	psz_string
op	100:15	0:0	2	=
call	100:17	100:79	2	var_GetString
arg	100:32	100:40	3	p_stream
water	100:32	0:0	4	p_stream
arg	100:42	100:79	3	SOUT_CFG_PREFIX"deinterlace-module"
water	100:42	0:0	4	SOUT_CFG_PREFIX
water	100:58	0:0	4	"deinterlace-module"
water	100:80	0:0	2	;
water	101:4	0:0	2	p_sys
op	101:9	0:0	2	->
water	101:11	0:0	2	psz_deinterlace
op	101:27	0:0	2	=
water	101:29	0:0	2	NULL
water	101:33	0:0	2	;
water	102:4	0:0	2	p_sys
op	102:9	0:0	2	->
water	102:11	0:0	2	p_deinterlace_cfg
op	102:29	0:0	2	=
water	102:31	0:0	2	NULL
water	102:35	0:0	2	;
if	103:4	110:4	2	(psz_string && * psz_string)
cond	103:8	103:23	3	psz_string && * psz_string
water	103:8	0:0	4	psz_string
op	103:19	0:0	4	&&
op	103:22	0:0	4	*
water	103:23	0:0	4	psz_string
stmts	104:4	110:4	3	
water	104:4	0:0	4	{
decl	105:8	105:22	4	char	*psz_next
water	106:8	0:0	4	psz_next
op	106:17	0:0	4	=
call	106:19	108:46	4	config_ChainCreate
arg	106:39	106:62	5	&p_sys->psz_deinterlace
op	106:39	0:0	6	&
water	106:40	0:0	6	p_sys
op	106:45	0:0	6	->
water	106:47	0:0	6	psz_deinterlace
arg	107:35	107:60	5	&p_sys->p_deinterlace_cfg
op	107:35	0:0	6	&
water	107:36	0:0	6	p_sys
op	107:41	0:0	6	->
water	107:43	0:0	6	p_deinterlace_cfg
arg	108:35	108:46	5	psz_string
water	108:35	0:0	6	psz_string
water	108:47	0:0	4	;
call	109:8	109:23	4	free
arg	109:14	109:23	5	psz_next
water	109:14	0:0	6	psz_next
water	109:24	0:0	4	;
water	110:4	0:0	4	}
call	111:4	111:21	2	free
arg	111:10	111:21	3	psz_string
water	111:10	0:0	4	psz_string
water	111:22	0:0	2	;
water	112:4	0:0	2	p_sys
op	112:9	0:0	2	->
water	112:11	0:0	2	i_threads
op	112:21	0:0	2	=
call	112:23	112:75	2	var_GetInteger
arg	112:39	112:47	3	p_stream
water	112:39	0:0	4	p_stream
arg	112:49	112:75	3	SOUT_CFG_PREFIX"threads"
water	112:49	0:0	4	SOUT_CFG_PREFIX
water	112:65	0:0	4	"threads"
water	112:76	0:0	2	;
water	113:4	0:0	2	p_sys
op	113:9	0:0	2	->
water	113:11	0:0	2	b_high_priority
op	113:27	0:0	2	=
call	113:29	113:84	2	var_GetBool
arg	113:42	113:50	3	p_stream
water	113:42	0:0	4	p_stream
arg	113:52	113:84	3	SOUT_CFG_PREFIX"high-priority"
water	113:52	0:0	4	SOUT_CFG_PREFIX
water	113:68	0:0	4	"high-priority"
water	113:85	0:0	2	;
if	114:4	119:4	2	(p_sys -> i_vcodec)
cond	114:8	114:15	3	p_sys -> i_vcodec
water	114:8	0:0	4	p_sys
op	114:13	0:0	4	->
water	114:15	0:0	4	i_vcodec
stmts	115:4	119:4	3	
water	115:4	0:0	4	{
call	116:8	118:58	4	msg_Dbg
arg	116:17	116:25	5	p_stream
water	116:17	0:0	6	p_stream
arg	116:27	116:71	5	"codec video=%4.4s %dx%d scaling: %f %dkb/s"
water	116:27	0:0	6	"codec video=%4.4s %dx%d scaling: %f %dkb/s"
arg	117:17	117:41	5	(char*)&p_sys->i_vcodec
water	117:17	0:0	6	(
water	117:18	0:0	6	char
op	117:23	0:0	6	*
water	117:24	0:0	6	)
op	117:25	0:0	6	&
water	117:26	0:0	6	p_sys
op	117:31	0:0	6	->
water	117:33	0:0	6	i_vcodec
arg	117:43	117:57	5	p_sys->i_width
water	117:43	0:0	6	p_sys
op	117:48	0:0	6	->
water	117:50	0:0	6	i_width
arg	117:59	117:74	5	p_sys->i_height
water	117:59	0:0	6	p_sys
op	117:64	0:0	6	->
water	117:66	0:0	6	i_height
arg	118:17	118:31	5	p_sys->f_scale
water	118:17	0:0	6	p_sys
op	118:22	0:0	6	->
water	118:24	0:0	6	f_scale
arg	118:33	118:58	5	p_sys->i_vbitrate/1000
water	118:33	0:0	6	p_sys
op	118:38	0:0	6	->
water	118:40	0:0	6	i_vbitrate
op	118:51	0:0	6	/
water	118:53	0:0	6	1000
water	118:59	0:0	4	;
water	119:4	0:0	4	}
water	121:4	0:0	2	psz_string
op	121:15	0:0	2	=
call	121:17	121:61	2	var_CreateGetString
arg	121:38	121:46	3	p_stream
water	121:38	0:0	4	p_stream
arg	121:48	121:61	3	"avcodec-hw"
water	121:48	0:0	4	"avcodec-hw"
water	121:62	0:0	2	;
if	122:4	123:55	2	(!strcasecmp ("any" ,psz_string ))
cond	122:8	122:39	3	!strcasecmp ("any" ,psz_string )
op	122:8	0:0	4	!
call	122:9	122:39	4	strcasecmp
arg	122:21	122:26	5	"any"
water	122:21	0:0	6	"any"
arg	122:28	122:39	5	psz_string
water	122:28	0:0	6	psz_string
stmts	123:8	123:55	3	
call	123:8	123:54	4	var_SetString
arg	123:23	123:31	5	p_stream
water	123:23	0:0	6	p_stream
arg	123:33	123:45	5	"avcodec-hw"
water	123:33	0:0	6	"avcodec-hw"
arg	123:47	123:54	5	"none"
water	123:47	0:0	6	"none"
water	123:55	0:0	4	;
call	124:4	124:21	2	free
arg	124:10	124:21	3	psz_string
water	124:10	0:0	4	psz_string
water	124:22	0:0	2	;
water	126:4	0:0	2	p_sys
op	126:9	0:0	2	->
water	126:11	0:0	2	p_spu
op	126:17	0:0	2	=
water	126:19	0:0	2	NULL
water	126:23	0:0	2	;
water	127:4	0:0	2	p_sys
op	127:9	0:0	2	->
water	127:11	0:0	2	p_spu_blend
op	127:23	0:0	2	=
water	127:25	0:0	2	NULL
water	127:29	0:0	2	;
water	128:4	0:0	2	p_sys
op	128:9	0:0	2	->
water	128:11	0:0	2	psz_senc
op	128:20	0:0	2	=
water	128:22	0:0	2	NULL
water	128:26	0:0	2	;
water	129:4	0:0	2	p_sys
op	129:9	0:0	2	->
water	129:11	0:0	2	p_spu_cfg
op	129:21	0:0	2	=
water	129:23	0:0	2	NULL
water	129:27	0:0	2	;
water	130:4	0:0	2	p_sys
op	130:9	0:0	2	->
water	130:11	0:0	2	i_scodec
op	130:20	0:0	2	=
water	130:22	0:0	2	0
water	130:23	0:0	2	;
water	131:4	0:0	2	psz_string
op	131:15	0:0	2	=
call	131:17	131:65	2	var_GetString
arg	131:32	131:40	3	p_stream
water	131:32	0:0	4	p_stream
arg	131:42	131:65	3	SOUT_CFG_PREFIX"senc"
water	131:42	0:0	4	SOUT_CFG_PREFIX
water	131:58	0:0	4	"senc"
water	131:66	0:0	2	;
if	132:4	138:4	2	(psz_string && * psz_string)
cond	132:8	132:23	3	psz_string && * psz_string
water	132:8	0:0	4	psz_string
op	132:19	0:0	4	&&
op	132:22	0:0	4	*
water	132:23	0:0	4	psz_string
stmts	133:4	138:4	3	
water	133:4	0:0	4	{
decl	134:8	134:22	4	char	*psz_next
water	135:8	0:0	4	psz_next
op	135:17	0:0	4	=
call	135:19	136:46	4	config_ChainCreate
arg	135:39	135:55	5	&p_sys->psz_senc
op	135:39	0:0	6	&
water	135:40	0:0	6	p_sys
op	135:45	0:0	6	->
water	135:47	0:0	6	psz_senc
arg	135:57	135:74	5	&p_sys->p_spu_cfg
op	135:57	0:0	6	&
water	135:58	0:0	6	p_sys
op	135:63	0:0	6	->
water	135:65	0:0	6	p_spu_cfg
arg	136:35	136:46	5	psz_string
water	136:35	0:0	6	psz_string
water	136:47	0:0	4	;
call	137:8	137:23	4	free
arg	137:14	137:23	5	psz_next
water	137:14	0:0	6	psz_next
water	137:24	0:0	4	;
water	138:4	0:0	4	}
call	139:4	139:21	2	free
arg	139:10	139:21	3	psz_string
water	139:10	0:0	4	psz_string
water	139:22	0:0	2	;
water	140:4	0:0	2	psz_string
op	140:15	0:0	2	=
call	140:17	140:67	2	var_GetString
arg	140:32	140:40	3	p_stream
water	140:32	0:0	4	p_stream
arg	140:42	140:67	3	SOUT_CFG_PREFIX"scodec"
water	140:42	0:0	4	SOUT_CFG_PREFIX
water	140:58	0:0	4	"scodec"
water	140:68	0:0	2	;
if	141:4	147:4	2	(psz_string && * psz_string)
cond	141:8	141:23	3	psz_string && * psz_string
water	141:8	0:0	4	psz_string
op	141:19	0:0	4	&&
op	141:22	0:0	4	*
water	141:23	0:0	4	psz_string
stmts	142:4	147:4	3	
water	142:4	0:0	4	{
decl	143:8	143:30	4	char	fcc[5]
op	143:20	0:0	4	=
water	143:22	0:0	4	"    \0"
call	144:8	144:66	4	memcpy
arg	144:16	144:19	5	fcc
water	144:16	0:0	6	fcc
arg	144:21	144:31	5	psz_string
water	144:21	0:0	6	psz_string
arg	144:33	144:66	5	__MIN(strlen(psz_string),4)
call	144:33	144:64	6	__MIN
arg	144:40	144:60	7	strlen(psz_string)
call	144:40	144:59	8	strlen
arg	144:48	144:59	9	psz_string
water	144:48	0:0	10	psz_string
arg	144:62	144:64	7	4
water	144:62	0:0	8	4
water	144:67	0:0	4	;
water	145:8	0:0	4	p_sys
op	145:13	0:0	4	->
water	145:15	0:0	4	i_scodec
op	145:24	0:0	4	=
call	145:26	145:69	4	vlc_fourcc_GetCodecFromString
arg	145:57	145:63	5	SPU_ES
water	145:57	0:0	6	SPU_ES
arg	145:65	145:69	5	fcc
water	145:65	0:0	6	fcc
water	145:70	0:0	4	;
call	146:8	146:103	4	msg_Dbg
arg	146:17	146:25	5	p_stream
water	146:17	0:0	6	p_stream
arg	146:27	146:73	5	"Checking spu codec mapping for %s got %4.4s "
water	146:27	0:0	6	"Checking spu codec mapping for %s got %4.4s "
arg	146:75	146:78	5	fcc
water	146:75	0:0	6	fcc
arg	146:80	146:103	5	(char*)&p_sys->i_scodec
water	146:80	0:0	6	(
water	146:81	0:0	6	char
op	146:85	0:0	6	*
water	146:86	0:0	6	)
op	146:87	0:0	6	&
water	146:88	0:0	6	p_sys
op	146:93	0:0	6	->
water	146:95	0:0	6	i_scodec
water	146:104	0:0	4	;
water	147:4	0:0	4	}
call	148:4	148:21	2	free
arg	148:10	148:21	3	psz_string
water	148:10	0:0	4	psz_string
water	148:22	0:0	2	;
if	149:4	152:4	2	(p_sys -> i_scodec)
cond	149:8	149:15	3	p_sys -> i_scodec
water	149:8	0:0	4	p_sys
op	149:13	0:0	4	->
water	149:15	0:0	4	i_scodec
stmts	150:4	152:4	3	
water	150:4	0:0	4	{
call	151:8	151:71	4	msg_Dbg
arg	151:17	151:25	5	p_stream
water	151:17	0:0	6	p_stream
arg	151:27	151:44	5	"codec spu=%4.4s"
water	151:27	0:0	6	"codec spu=%4.4s"
arg	151:46	151:71	5	(char*)&p_sys->i_scodec
water	151:46	0:0	6	(
water	151:47	0:0	6	char
op	151:52	0:0	6	*
water	151:53	0:0	6	)
op	151:54	0:0	6	&
water	151:55	0:0	6	p_sys
op	151:60	0:0	6	->
water	151:62	0:0	6	i_scodec
water	151:72	0:0	4	;
water	152:4	0:0	4	}
water	153:4	0:0	2	p_sys
op	153:9	0:0	2	->
water	153:11	0:0	2	b_soverlay
op	153:22	0:0	2	=
call	153:24	153:74	2	var_GetBool
arg	153:37	153:45	3	p_stream
water	153:37	0:0	4	p_stream
arg	153:47	153:74	3	SOUT_CFG_PREFIX"soverlay"
water	153:47	0:0	4	SOUT_CFG_PREFIX
water	153:63	0:0	4	"soverlay"
water	153:75	0:0	2	;
water	154:4	0:0	2	psz_string
op	154:15	0:0	2	=
call	154:17	154:68	2	var_GetString
arg	154:32	154:40	3	p_stream
water	154:32	0:0	4	p_stream
arg	154:42	154:68	3	SOUT_CFG_PREFIX"sfilter"
water	154:42	0:0	4	SOUT_CFG_PREFIX
water	154:58	0:0	4	"sfilter"
water	154:69	0:0	2	;
if	155:4	160:4	2	(psz_string && * psz_string)
cond	155:8	155:23	3	psz_string && * psz_string
water	155:8	0:0	4	psz_string
op	155:19	0:0	4	&&
op	155:22	0:0	4	*
water	155:23	0:0	4	psz_string
stmts	156:4	160:4	3	
water	156:4	0:0	4	{
water	157:8	0:0	4	p_sys
op	157:13	0:0	4	->
water	157:15	0:0	4	p_spu
op	157:21	0:0	4	=
call	157:23	157:44	4	spu_Create
arg	157:35	157:44	5	p_stream
water	157:35	0:0	6	p_stream
water	157:45	0:0	4	;
if	158:8	159:57	4	(p_sys -> p_spu)
cond	158:12	158:19	5	p_sys -> p_spu
water	158:12	0:0	6	p_sys
op	158:17	0:0	6	->
water	158:19	0:0	6	p_spu
stmts	159:12	159:57	5	
call	159:12	159:56	6	spu_ChangeSources
arg	159:31	159:43	7	p_sys->p_spu
water	159:31	0:0	8	p_sys
op	159:36	0:0	8	->
water	159:38	0:0	8	p_spu
arg	159:45	159:56	7	psz_string
water	159:45	0:0	8	psz_string
water	159:57	0:0	6	;
water	160:4	0:0	4	}
call	161:4	161:21	2	free
arg	161:10	161:21	3	psz_string
water	161:10	0:0	4	psz_string
water	161:22	0:0	2	;
water	163:4	0:0	2	p_sys
op	163:9	0:0	2	->
water	163:11	0:0	2	psz_osdenc
op	163:22	0:0	2	=
water	163:24	0:0	2	NULL
water	163:28	0:0	2	;
water	164:4	0:0	2	p_sys
op	164:9	0:0	2	->
water	164:11	0:0	2	p_osd_cfg
op	164:22	0:0	2	=
water	164:24	0:0	2	NULL
water	164:28	0:0	2	;
water	165:4	0:0	2	p_sys
op	165:9	0:0	2	->
water	165:11	0:0	2	i_osdcodec
op	165:22	0:0	2	=
water	165:24	0:0	2	0
water	165:25	0:0	2	;
water	166:4	0:0	2	p_sys
op	166:9	0:0	2	->
water	166:11	0:0	2	b_osd
op	166:19	0:0	2	=
call	166:21	166:66	2	var_GetBool
arg	166:34	166:42	3	p_stream
water	166:34	0:0	4	p_stream
arg	166:44	166:66	3	SOUT_CFG_PREFIX"osd"
water	166:44	0:0	4	SOUT_CFG_PREFIX
water	166:60	0:0	4	"osd"
water	166:67	0:0	2	;
if	167:4	185:4	2	(p_sys -> b_osd)
cond	167:8	167:15	3	p_sys -> b_osd
water	167:8	0:0	4	p_sys
op	167:13	0:0	4	->
water	167:15	0:0	4	b_osd
stmts	168:4	185:4	3	
water	168:4	0:0	4	{
decl	169:8	169:22	4	char	*psz_next
water	170:8	0:0	4	psz_next
op	170:17	0:0	4	=
call	170:19	171:63	4	config_ChainCreate
arg	170:39	170:57	5	&p_sys->psz_osdenc
op	170:39	0:0	6	&
water	170:40	0:0	6	p_sys
op	170:45	0:0	6	->
water	170:47	0:0	6	psz_osdenc
arg	171:35	171:52	5	&p_sys->p_osd_cfg
op	171:35	0:0	6	&
water	171:36	0:0	6	p_sys
op	171:41	0:0	6	->
water	171:43	0:0	6	p_osd_cfg
arg	171:54	171:63	5	"dvbsub"
water	171:54	0:0	6	"dvbsub"
water	171:64	0:0	4	;
call	172:8	172:23	4	free
arg	172:14	172:23	5	psz_next
water	172:14	0:0	6	psz_next
water	172:24	0:0	4	;
water	173:8	0:0	4	p_sys
op	173:13	0:0	4	->
water	173:15	0:0	4	i_osdcodec
op	173:26	0:0	4	=
water	173:28	0:0	4	VLC_CODEC_YUVP
water	173:42	0:0	4	;
call	174:8	174:73	4	msg_Dbg
arg	174:17	174:25	5	p_stream
water	174:17	0:0	6	p_stream
arg	174:27	174:44	5	"codec osd=%4.4s"
water	174:27	0:0	6	"codec osd=%4.4s"
arg	174:46	174:73	5	(char*)&p_sys->i_osdcodec
water	174:46	0:0	6	(
water	174:47	0:0	6	char
op	174:52	0:0	6	*
water	174:53	0:0	6	)
op	174:54	0:0	6	&
water	174:55	0:0	6	p_sys
op	174:60	0:0	6	->
water	174:62	0:0	6	i_osdcodec
water	174:74	0:0	4	;
if	175:8	180:8	4	(! p_sys -> p_spu)
cond	175:12	175:20	5	! p_sys -> p_spu
op	175:12	0:0	6	!
water	175:13	0:0	6	p_sys
op	175:18	0:0	6	->
water	175:20	0:0	6	p_spu
stmts	176:8	180:8	5	
water	176:8	0:0	6	{
water	177:12	0:0	6	p_sys
op	177:17	0:0	6	->
water	177:19	0:0	6	p_spu
op	177:25	0:0	6	=
call	177:27	177:48	6	spu_Create
arg	177:39	177:48	7	p_stream
water	177:39	0:0	8	p_stream
water	177:49	0:0	6	;
if	178:12	179:60	6	(p_sys -> p_spu)
cond	178:16	178:23	7	p_sys -> p_spu
water	178:16	0:0	8	p_sys
op	178:21	0:0	8	->
water	178:23	0:0	8	p_spu
stmts	179:16	179:60	7	
call	179:16	179:59	8	spu_ChangeSources
arg	179:35	179:47	9	p_sys->p_spu
water	179:35	0:0	10	p_sys
op	179:40	0:0	10	->
water	179:42	0:0	10	p_spu
arg	179:49	179:59	9	"osdmenu"
water	179:49	0:0	10	"osdmenu"
water	179:60	0:0	8	;
water	180:8	0:0	6	}
else	181:8	184:8	4
stmts	182:8	184:8	5	
water	182:8	0:0	6	{
call	183:12	183:55	6	spu_ChangeSources
arg	183:31	183:43	7	p_sys->p_spu
water	183:31	0:0	8	p_sys
op	183:36	0:0	8	->
water	183:38	0:0	8	p_spu
arg	183:45	183:55	7	"osdmenu"
water	183:45	0:0	8	"osdmenu"
water	183:56	0:0	6	;
water	184:8	0:0	6	}
water	185:4	0:0	4	}
water	186:4	0:0	2	p_stream
op	186:12	0:0	2	->
water	186:14	0:0	2	pf_add
op	186:24	0:0	2	=
water	186:26	0:0	2	Add
water	186:29	0:0	2	;
water	187:4	0:0	2	p_stream
op	187:12	0:0	2	->
water	187:14	0:0	2	pf_del
op	187:24	0:0	2	=
water	187:26	0:0	2	Del
water	187:29	0:0	2	;
water	188:4	0:0	2	p_stream
op	188:12	0:0	2	->
water	188:14	0:0	2	pf_send
op	188:24	0:0	2	=
water	188:26	0:0	2	Send
water	188:30	0:0	2	;
water	189:4	0:0	2	p_stream
op	189:12	0:0	2	->
water	189:14	0:0	2	p_sys
op	189:24	0:0	2	=
water	189:26	0:0	2	p_sys
water	189:31	0:0	2	;
return	190:4	190:22	2	VLC_SUCCESS
water	190:11	0:0	3	VLC_SUCCESS

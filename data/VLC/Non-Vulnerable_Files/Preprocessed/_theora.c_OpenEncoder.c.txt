func	2:0	110:0	0	static int	OpenEncoder
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	109:22	1	
decl	4:4	4:42	2	encoder_t	*p_enc
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	encoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
decl	5:4	5:24	2	encoder_sys_t	*p_sys
decl	6:4	6:17	2	int	i_quality
decl	7:4	7:15	2	int	t_flags
decl	8:4	8:25	2	int	max_enc_level
op	8:22	0:0	2	=
water	8:24	0:0	2	0
decl	9:4	9:32	2	int	keyframe_freq_force
op	9:28	0:0	2	=
water	9:30	0:0	2	64
decl	10:4	10:21	2	ogg_packet	header
decl	11:4	11:14	2	int	status
if	12:4	16:4	2	(p_enc -> fmt_out . i_codec != VLC_CODEC_THEORA && ! p_enc -> b_force)
cond	12:8	13:16	3	p_enc -> fmt_out . i_codec != VLC_CODEC_THEORA && ! p_enc -> b_force
water	12:8	0:0	4	p_enc
op	12:13	0:0	4	->
water	12:15	0:0	4	fmt_out
op	12:22	0:0	4	.
water	12:23	0:0	4	i_codec
op	12:31	0:0	4	!=
water	12:34	0:0	4	VLC_CODEC_THEORA
op	12:51	0:0	4	&&
op	13:8	0:0	4	!
water	13:9	0:0	4	p_enc
op	13:14	0:0	4	->
water	13:16	0:0	4	b_force
stmts	14:4	16:4	3	
water	14:4	0:0	4	{
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
if	18:4	19:25	2	(( p_sys =malloc (sizeof ( encoder_sys_t ) ) ) == NULL)
cond	18:8	18:53	3	( p_sys =malloc (sizeof ( encoder_sys_t ) ) ) == NULL
water	18:8	0:0	4	(
water	18:10	0:0	4	p_sys
op	18:16	0:0	4	=
call	18:18	18:46	4	malloc
arg	18:25	18:46	5	sizeof(encoder_sys_t)
op	18:25	0:0	6	sizeof
water	18:31	0:0	6	(
water	18:32	0:0	6	encoder_sys_t
water	18:45	0:0	6	)
water	18:48	0:0	4	)
op	18:50	0:0	4	==
water	18:53	0:0	4	NULL
stmts	19:8	19:25	3	
return	19:8	19:25	4	VLC_ENOMEM
water	19:15	0:0	5	VLC_ENOMEM
water	20:4	0:0	2	p_enc
op	20:9	0:0	2	->
water	20:11	0:0	2	p_sys
op	20:17	0:0	2	=
water	20:19	0:0	2	p_sys
water	20:24	0:0	2	;
water	21:4	0:0	2	p_enc
op	21:9	0:0	2	->
water	21:11	0:0	2	pf_encode_video
op	21:27	0:0	2	=
water	21:29	0:0	2	Encode
water	21:35	0:0	2	;
water	22:4	0:0	2	p_enc
op	22:9	0:0	2	->
water	22:11	0:0	2	fmt_in
op	22:17	0:0	2	.
water	22:18	0:0	2	i_codec
op	22:26	0:0	2	=
water	22:28	0:0	2	VLC_CODEC_I420
water	22:42	0:0	2	;
water	23:4	0:0	2	p_enc
op	23:9	0:0	2	->
water	23:11	0:0	2	fmt_out
op	23:18	0:0	2	.
water	23:19	0:0	2	i_codec
op	23:27	0:0	2	=
water	23:29	0:0	2	VLC_CODEC_THEORA
water	23:45	0:0	2	;
call	24:4	24:77	2	config_ChainParse
arg	24:23	24:28	3	p_enc
water	24:23	0:0	4	p_enc
arg	24:30	24:44	3	ENC_CFG_PREFIX
water	24:30	0:0	4	ENC_CFG_PREFIX
arg	24:46	24:62	3	ppsz_enc_options
water	24:46	0:0	4	ppsz_enc_options
arg	24:64	24:77	3	p_enc->p_cfg
water	24:64	0:0	4	p_enc
op	24:69	0:0	4	->
water	24:71	0:0	4	p_cfg
water	24:78	0:0	2	;
water	25:4	0:0	2	i_quality
op	25:14	0:0	2	=
call	25:16	25:64	2	var_GetInteger
arg	25:32	25:37	3	p_enc
water	25:32	0:0	4	p_enc
arg	25:39	25:64	3	ENC_CFG_PREFIX"quality"
water	25:39	0:0	4	ENC_CFG_PREFIX
water	25:54	0:0	4	"quality"
water	25:65	0:0	2	;
if	26:4	26:39	2	(i_quality > 10)
cond	26:8	26:20	3	i_quality > 10
water	26:8	0:0	4	i_quality
op	26:18	0:0	4	>
water	26:20	0:0	4	10
stmts	26:25	26:39	3	
water	26:25	0:0	4	i_quality
op	26:35	0:0	4	=
water	26:37	0:0	4	10
water	26:39	0:0	4	;
if	27:4	27:37	2	(i_quality < 0)
cond	27:8	27:20	3	i_quality < 0
water	27:8	0:0	4	i_quality
op	27:18	0:0	4	<
water	27:20	0:0	4	0
stmts	27:24	27:37	3	
water	27:24	0:0	4	i_quality
op	27:34	0:0	4	=
water	27:36	0:0	4	0
water	27:37	0:0	4	;
call	28:4	28:29	2	th_info_init
arg	28:18	28:29	3	&p_sys->ti
op	28:18	0:0	4	&
water	28:19	0:0	4	p_sys
op	28:24	0:0	4	->
water	28:26	0:0	4	ti
water	28:30	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	ti
op	29:13	0:0	2	.
water	29:14	0:0	2	frame_width
op	29:26	0:0	2	=
water	29:28	0:0	2	p_enc
op	29:33	0:0	2	->
water	29:35	0:0	2	fmt_in
op	29:41	0:0	2	.
water	29:42	0:0	2	video
op	29:47	0:0	2	.
water	29:48	0:0	2	i_visible_width
water	29:63	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	ti
op	30:13	0:0	2	.
water	30:14	0:0	2	frame_height
op	30:27	0:0	2	=
water	30:29	0:0	2	p_enc
op	30:34	0:0	2	->
water	30:36	0:0	2	fmt_in
op	30:42	0:0	2	.
water	30:43	0:0	2	video
op	30:48	0:0	2	.
water	30:49	0:0	2	i_visible_height
water	30:65	0:0	2	;
if	31:4	40:4	2	(p_sys -> ti . frame_width % 16 || p_sys -> ti . frame_height % 16)
cond	31:8	31:63	3	p_sys -> ti . frame_width % 16 || p_sys -> ti . frame_height % 16
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	ti
op	31:17	0:0	4	.
water	31:18	0:0	4	frame_width
op	31:30	0:0	4	%
water	31:32	0:0	4	16
op	31:35	0:0	4	||
water	31:38	0:0	4	p_sys
op	31:43	0:0	4	->
water	31:45	0:0	4	ti
op	31:47	0:0	4	.
water	31:48	0:0	4	frame_height
op	31:61	0:0	4	%
water	31:63	0:0	4	16
stmts	32:4	40:4	3	
water	32:4	0:0	4	{
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	ti
op	35:17	0:0	4	.
water	35:18	0:0	4	frame_width
op	35:30	0:0	4	=
water	35:32	0:0	4	(
water	35:33	0:0	4	p_sys
op	35:38	0:0	4	->
water	35:40	0:0	4	ti
op	35:42	0:0	4	.
water	35:43	0:0	4	frame_width
op	35:55	0:0	4	+
water	35:57	0:0	4	15
water	35:59	0:0	4	)
op	35:61	0:0	4	>>
water	35:64	0:0	4	4
op	35:66	0:0	4	<<
water	35:69	0:0	4	4
water	35:70	0:0	4	;
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	ti
op	36:17	0:0	4	.
water	36:18	0:0	4	frame_height
op	36:31	0:0	4	=
water	36:33	0:0	4	(
water	36:34	0:0	4	p_sys
op	36:39	0:0	4	->
water	36:41	0:0	4	ti
op	36:43	0:0	4	.
water	36:44	0:0	4	frame_height
op	36:57	0:0	4	+
water	36:59	0:0	4	15
water	36:61	0:0	4	)
op	36:63	0:0	4	>>
water	36:66	0:0	4	4
op	36:68	0:0	4	<<
water	36:71	0:0	4	4
water	36:72	0:0	4	;
call	37:8	39:63	4	msg_Dbg
arg	37:17	37:22	5	p_enc
water	37:17	0:0	6	p_enc
arg	37:24	37:59	5	"padding video from %dx%d to %dx%d"
water	37:24	0:0	6	"padding video from %dx%d to %dx%d"
arg	38:17	38:52	5	p_enc->fmt_in.video.i_visible_width
water	38:17	0:0	6	p_enc
op	38:22	0:0	6	->
water	38:24	0:0	6	fmt_in
op	38:30	0:0	6	.
water	38:31	0:0	6	video
op	38:36	0:0	6	.
water	38:37	0:0	6	i_visible_width
arg	38:54	38:90	5	p_enc->fmt_in.video.i_visible_height
water	38:54	0:0	6	p_enc
op	38:59	0:0	6	->
water	38:61	0:0	6	fmt_in
op	38:67	0:0	6	.
water	38:68	0:0	6	video
op	38:73	0:0	6	.
water	38:74	0:0	6	i_visible_height
arg	39:17	39:38	5	p_sys->ti.frame_width
water	39:17	0:0	6	p_sys
op	39:22	0:0	6	->
water	39:24	0:0	6	ti
op	39:26	0:0	6	.
water	39:27	0:0	6	frame_width
arg	39:40	39:63	5	p_sys->ti.frame_height
water	39:40	0:0	6	p_sys
op	39:45	0:0	6	->
water	39:47	0:0	6	ti
op	39:49	0:0	6	.
water	39:50	0:0	6	frame_height
water	39:64	0:0	4	;
water	40:4	0:0	4	}
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	ti
op	41:13	0:0	2	.
water	41:14	0:0	2	pic_width
op	41:24	0:0	2	=
water	41:26	0:0	2	p_enc
op	41:31	0:0	2	->
water	41:33	0:0	2	fmt_in
op	41:39	0:0	2	.
water	41:40	0:0	2	video
op	41:45	0:0	2	.
water	41:46	0:0	2	i_visible_width
water	41:61	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	ti
op	42:13	0:0	2	.
water	42:14	0:0	2	pic_height
op	42:25	0:0	2	=
water	42:27	0:0	2	p_enc
op	42:32	0:0	2	->
water	42:34	0:0	2	fmt_in
op	42:40	0:0	2	.
water	42:41	0:0	2	video
op	42:46	0:0	2	.
water	42:47	0:0	2	i_visible_height
water	42:63	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	ti
op	43:13	0:0	2	.
water	43:14	0:0	2	pic_x
op	43:20	0:0	2	=
water	43:22	0:0	2	0
water	43:42	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	ti
op	44:13	0:0	2	.
water	44:14	0:0	2	pic_y
op	44:20	0:0	2	=
water	44:22	0:0	2	0
water	44:42	0:0	2	;
water	45:4	0:0	2	p_sys
op	45:9	0:0	2	->
water	45:11	0:0	2	i_width
op	45:19	0:0	2	=
water	45:21	0:0	2	p_sys
op	45:26	0:0	2	->
water	45:28	0:0	2	ti
op	45:30	0:0	2	.
water	45:31	0:0	2	frame_width
water	45:42	0:0	2	;
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	i_height
op	46:20	0:0	2	=
water	46:22	0:0	2	p_sys
op	46:27	0:0	2	->
water	46:29	0:0	2	ti
op	46:31	0:0	2	.
water	46:32	0:0	2	frame_height
water	46:44	0:0	2	;
if	47:4	52:4	2	(! p_enc -> fmt_in . video . i_frame_rate || ! p_enc -> fmt_in . video . i_frame_rate_base)
cond	47:8	48:29	3	! p_enc -> fmt_in . video . i_frame_rate || ! p_enc -> fmt_in . video . i_frame_rate_base
op	47:8	0:0	4	!
water	47:9	0:0	4	p_enc
op	47:14	0:0	4	->
water	47:16	0:0	4	fmt_in
op	47:22	0:0	4	.
water	47:23	0:0	4	video
op	47:28	0:0	4	.
water	47:29	0:0	4	i_frame_rate
op	47:42	0:0	4	||
op	48:8	0:0	4	!
water	48:9	0:0	4	p_enc
op	48:14	0:0	4	->
water	48:16	0:0	4	fmt_in
op	48:22	0:0	4	.
water	48:23	0:0	4	video
op	48:28	0:0	4	.
water	48:29	0:0	4	i_frame_rate_base
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
water	50:8	0:0	4	p_sys
op	50:13	0:0	4	->
water	50:15	0:0	4	ti
op	50:17	0:0	4	.
water	50:18	0:0	4	fps_numerator
op	50:32	0:0	4	=
water	50:34	0:0	4	25
water	50:36	0:0	4	;
water	51:8	0:0	4	p_sys
op	51:13	0:0	4	->
water	51:15	0:0	4	ti
op	51:17	0:0	4	.
water	51:18	0:0	4	fps_denominator
op	51:34	0:0	4	=
water	51:36	0:0	4	1
water	51:37	0:0	4	;
water	52:4	0:0	4	}
else	53:4	57:4	2
stmts	54:4	57:4	3	
water	54:4	0:0	4	{
water	55:8	0:0	4	p_sys
op	55:13	0:0	4	->
water	55:15	0:0	4	ti
op	55:17	0:0	4	.
water	55:18	0:0	4	fps_numerator
op	55:32	0:0	4	=
water	55:34	0:0	4	p_enc
op	55:39	0:0	4	->
water	55:41	0:0	4	fmt_in
op	55:47	0:0	4	.
water	55:48	0:0	4	video
op	55:53	0:0	4	.
water	55:54	0:0	4	i_frame_rate
water	55:66	0:0	4	;
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	ti
op	56:17	0:0	4	.
water	56:18	0:0	4	fps_denominator
op	56:34	0:0	4	=
water	56:36	0:0	4	p_enc
op	56:41	0:0	4	->
water	56:43	0:0	4	fmt_in
op	56:49	0:0	4	.
water	56:50	0:0	4	video
op	56:55	0:0	4	.
water	56:56	0:0	4	i_frame_rate_base
water	56:73	0:0	4	;
water	57:4	0:0	4	}
if	58:4	66:4	2	(p_enc -> fmt_in . video . i_sar_num > 0 && p_enc -> fmt_in . video . i_sar_den > 0)
cond	58:8	58:77	3	p_enc -> fmt_in . video . i_sar_num > 0 && p_enc -> fmt_in . video . i_sar_den > 0
water	58:8	0:0	4	p_enc
op	58:13	0:0	4	->
water	58:15	0:0	4	fmt_in
op	58:21	0:0	4	.
water	58:22	0:0	4	video
op	58:27	0:0	4	.
water	58:28	0:0	4	i_sar_num
op	58:38	0:0	4	>
water	58:40	0:0	4	0
op	58:42	0:0	4	&&
water	58:45	0:0	4	p_enc
op	58:50	0:0	4	->
water	58:52	0:0	4	fmt_in
op	58:58	0:0	4	.
water	58:59	0:0	4	video
op	58:64	0:0	4	.
water	58:65	0:0	4	i_sar_den
op	58:75	0:0	4	>
water	58:77	0:0	4	0
stmts	59:4	66:4	3	
water	59:4	0:0	4	{
water	60:8	0:0	4	unsigned
water	60:17	0:0	4	i_dst_num
water	60:26	0:0	4	,
water	60:28	0:0	4	i_dst_den
water	60:37	0:0	4	;
call	61:8	63:54	4	vlc_ureduce
arg	61:21	61:31	5	&i_dst_num
op	61:21	0:0	6	&
water	61:22	0:0	6	i_dst_num
arg	61:33	61:43	5	&i_dst_den
op	61:33	0:0	6	&
water	61:34	0:0	6	i_dst_den
arg	62:21	62:50	5	p_enc->fmt_in.video.i_sar_num
water	62:21	0:0	6	p_enc
op	62:26	0:0	6	->
water	62:28	0:0	6	fmt_in
op	62:34	0:0	6	.
water	62:35	0:0	6	video
op	62:40	0:0	6	.
water	62:41	0:0	6	i_sar_num
arg	63:21	63:50	5	p_enc->fmt_in.video.i_sar_den
water	63:21	0:0	6	p_enc
op	63:26	0:0	6	->
water	63:28	0:0	6	fmt_in
op	63:34	0:0	6	.
water	63:35	0:0	6	video
op	63:40	0:0	6	.
water	63:41	0:0	6	i_sar_den
arg	63:52	63:54	5	0
water	63:52	0:0	6	0
water	63:55	0:0	4	;
water	64:8	0:0	4	p_sys
op	64:13	0:0	4	->
water	64:15	0:0	4	ti
op	64:17	0:0	4	.
water	64:18	0:0	4	aspect_numerator
op	64:35	0:0	4	=
water	64:37	0:0	4	i_dst_num
water	64:46	0:0	4	;
water	65:8	0:0	4	p_sys
op	65:13	0:0	4	->
water	65:15	0:0	4	ti
op	65:17	0:0	4	.
water	65:18	0:0	4	aspect_denominator
op	65:37	0:0	4	=
water	65:39	0:0	4	i_dst_den
water	65:48	0:0	4	;
water	66:4	0:0	4	}
else	67:4	71:4	2
stmts	68:4	71:4	3	
water	68:4	0:0	4	{
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	ti
op	69:17	0:0	4	.
water	69:18	0:0	4	aspect_numerator
op	69:35	0:0	4	=
water	69:37	0:0	4	4
water	69:38	0:0	4	;
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	ti
op	70:17	0:0	4	.
water	70:18	0:0	4	aspect_denominator
op	70:37	0:0	4	=
water	70:39	0:0	4	3
water	70:40	0:0	4	;
water	71:4	0:0	4	}
water	72:4	0:0	2	p_sys
op	72:9	0:0	2	->
water	72:11	0:0	2	ti
op	72:13	0:0	2	.
water	72:14	0:0	2	target_bitrate
op	72:29	0:0	2	=
water	72:31	0:0	2	p_enc
op	72:36	0:0	2	->
water	72:38	0:0	2	fmt_out
op	72:45	0:0	2	.
water	72:46	0:0	2	i_bitrate
water	72:55	0:0	2	;
water	73:4	0:0	2	p_sys
op	73:9	0:0	2	->
water	73:11	0:0	2	ti
op	73:13	0:0	2	.
water	73:14	0:0	2	quality
op	73:22	0:0	2	=
water	73:24	0:0	2	(
water	73:25	0:0	2	(
water	73:26	0:0	2	float
water	73:31	0:0	2	)
water	73:32	0:0	2	i_quality
water	73:41	0:0	2	)
op	73:43	0:0	2	*
water	73:45	0:0	2	6
op	73:46	0:0	2	.
water	73:47	0:0	2	3
water	73:48	0:0	2	;
water	74:4	0:0	2	p_sys
op	74:9	0:0	2	->
water	74:11	0:0	2	tcx
op	74:15	0:0	2	=
call	74:17	74:45	2	th_encode_alloc
arg	74:34	74:45	3	&p_sys->ti
op	74:34	0:0	4	&
water	74:35	0:0	4	p_sys
op	74:40	0:0	4	->
water	74:42	0:0	4	ti
water	74:46	0:0	2	;
call	75:4	75:32	2	th_comment_init
arg	75:21	75:32	3	&p_sys->tc
op	75:21	0:0	4	&
water	75:22	0:0	4	p_sys
op	75:27	0:0	4	->
water	75:29	0:0	4	tc
water	75:33	0:0	2	;
water	88:4	0:0	2	t_flags
op	88:12	0:0	2	=
water	88:14	0:0	2	TH_RATECTL_CAP_OVERFLOW
water	88:37	0:0	2	;
call	90:4	90:83	2	th_encode_ctl
arg	90:19	90:29	3	p_sys->tcx
water	90:19	0:0	4	p_sys
op	90:24	0:0	4	->
water	90:26	0:0	4	tcx
arg	90:31	90:55	3	TH_ENCCTL_SET_RATE_FLAGS
water	90:31	0:0	4	TH_ENCCTL_SET_RATE_FLAGS
arg	90:57	90:65	3	&t_flags
op	90:57	0:0	4	&
water	90:58	0:0	4	t_flags
arg	90:67	90:83	3	sizeof(t_flags)
op	90:67	0:0	4	sizeof
water	90:73	0:0	4	(
water	90:74	0:0	4	t_flags
water	90:81	0:0	4	)
water	90:84	0:0	2	;
if	92:4	94:97	2	(!th_encode_ctl (p_sys -> tcx ,TH_ENCCTL_GET_SPLEVEL_MAX ,& max_enc_level ,sizeof ( max_enc_level ) ))
cond	92:9	93:38	3	!th_encode_ctl (p_sys -> tcx ,TH_ENCCTL_GET_SPLEVEL_MAX ,& max_enc_level ,sizeof ( max_enc_level ) )
op	92:9	0:0	4	!
call	92:10	93:38	4	th_encode_ctl
arg	92:25	92:35	5	p_sys->tcx
water	92:25	0:0	6	p_sys
op	92:30	0:0	6	->
water	92:32	0:0	6	tcx
arg	92:37	92:62	5	TH_ENCCTL_GET_SPLEVEL_MAX
water	92:37	0:0	6	TH_ENCCTL_GET_SPLEVEL_MAX
arg	92:64	92:78	5	&max_enc_level
op	92:64	0:0	6	&
water	92:65	0:0	6	max_enc_level
arg	93:16	93:38	5	sizeof(max_enc_level)
op	93:16	0:0	6	sizeof
water	93:22	0:0	6	(
water	93:23	0:0	6	max_enc_level
water	93:36	0:0	6	)
stmts	94:8	94:97	3	
call	94:8	94:96	4	th_encode_ctl
arg	94:23	94:33	5	p_sys->tcx
water	94:23	0:0	6	p_sys
op	94:28	0:0	6	->
water	94:30	0:0	6	tcx
arg	94:35	94:56	5	TH_ENCCTL_SET_SPLEVEL
water	94:35	0:0	6	TH_ENCCTL_SET_SPLEVEL
arg	94:58	94:72	5	&max_enc_level
op	94:58	0:0	6	&
water	94:59	0:0	6	max_enc_level
arg	94:74	94:96	5	sizeof(max_enc_level)
op	94:74	0:0	6	sizeof
water	94:80	0:0	6	(
water	94:81	0:0	6	max_enc_level
water	94:94	0:0	6	)
water	94:97	0:0	4	;
call	96:4	97:69	2	th_encode_ctl
arg	96:19	96:29	3	p_sys->tcx
water	96:19	0:0	4	p_sys
op	96:24	0:0	4	->
water	96:26	0:0	4	tcx
arg	96:31	96:69	3	TH_ENCCTL_SET_KEYFRAME_FREQUENCY_FORCE
water	96:31	0:0	4	TH_ENCCTL_SET_KEYFRAME_FREQUENCY_FORCE
arg	97:19	97:39	3	&keyframe_freq_force
op	97:19	0:0	4	&
water	97:20	0:0	4	keyframe_freq_force
arg	97:41	97:69	3	sizeof(keyframe_freq_force)
op	97:41	0:0	4	sizeof
water	97:47	0:0	4	(
water	97:48	0:0	4	keyframe_freq_force
water	97:67	0:0	4	)
water	97:70	0:0	2	;
while	99:4	108:4	2	(( status =th_encode_flushheader (p_sys -> tcx ,& p_sys -> tc ,& header ) ))
cond	99:12	99:80	3	( status =th_encode_flushheader (p_sys -> tcx ,& p_sys -> tc ,& header ) )
water	99:12	0:0	4	(
water	99:14	0:0	4	status
op	99:21	0:0	4	=
call	99:23	99:78	4	th_encode_flushheader
arg	99:46	99:56	5	p_sys->tcx
water	99:46	0:0	6	p_sys
op	99:51	0:0	6	->
water	99:53	0:0	6	tcx
arg	99:58	99:68	5	&p_sys->tc
op	99:58	0:0	6	&
water	99:59	0:0	6	p_sys
op	99:64	0:0	6	->
water	99:66	0:0	6	tc
arg	99:70	99:78	5	&header
op	99:70	0:0	6	&
water	99:71	0:0	6	header
water	99:80	0:0	4	)
stmts	100:4	108:4	3	
water	100:4	0:0	4	{
if	101:8	101:45	4	(status < 0)
cond	101:13	101:22	5	status < 0
water	101:13	0:0	6	status
op	101:20	0:0	6	<
water	101:22	0:0	6	0
stmts	101:26	101:45	5	
return	101:26	101:45	6	VLC_EGENERIC
water	101:33	0:0	7	VLC_EGENERIC
if	102:8	107:8	4	(xiph_AppendHeaders (& p_enc -> fmt_out . i_extra ,& p_enc -> fmt_out . p_extra ,header . bytes ,header . packet ))
cond	102:12	103:60	5	xiph_AppendHeaders (& p_enc -> fmt_out . i_extra ,& p_enc -> fmt_out . p_extra ,header . bytes ,header . packet )
call	102:12	103:60	6	xiph_AppendHeaders
arg	102:32	102:55	7	&p_enc->fmt_out.i_extra
op	102:32	0:0	8	&
water	102:33	0:0	8	p_enc
op	102:38	0:0	8	->
water	102:40	0:0	8	fmt_out
op	102:47	0:0	8	.
water	102:48	0:0	8	i_extra
arg	102:57	102:80	7	&p_enc->fmt_out.p_extra
op	102:57	0:0	8	&
water	102:58	0:0	8	p_enc
op	102:63	0:0	8	->
water	102:65	0:0	8	fmt_out
op	102:72	0:0	8	.
water	102:73	0:0	8	p_extra
arg	103:32	103:44	7	header.bytes
water	103:32	0:0	8	header
op	103:38	0:0	8	.
water	103:39	0:0	8	bytes
arg	103:46	103:60	7	header.packet
water	103:46	0:0	8	header
op	103:52	0:0	8	.
water	103:53	0:0	8	packet
stmts	104:8	107:8	5	
water	104:8	0:0	6	{
water	105:12	0:0	6	p_enc
op	105:17	0:0	6	->
water	105:19	0:0	6	fmt_out
op	105:26	0:0	6	.
water	105:27	0:0	6	i_extra
op	105:35	0:0	6	=
water	105:37	0:0	6	0
water	105:38	0:0	6	;
water	106:12	0:0	6	p_enc
op	106:17	0:0	6	->
water	106:19	0:0	6	fmt_out
op	106:26	0:0	6	.
water	106:27	0:0	6	p_extra
op	106:35	0:0	6	=
water	106:37	0:0	6	NULL
water	106:41	0:0	6	;
water	107:8	0:0	6	}
water	108:4	0:0	4	}
return	109:4	109:22	2	VLC_SUCCESS
water	109:11	0:0	3	VLC_SUCCESS

func	1:0	15:0	0	static int	MarshalLoopStatus
params	2:17	0:0	1	
param	2:19	2:40	2	intf_thread_t *	p_intf
param	2:42	2:69	2	DBusMessageIter *	container
stmnts	0:0	14:22	1	
decl	4:4	4:31	2	const char	*psz_loop_status
if	5:4	6:43	2	(var_GetBool (p_intf -> p_sys -> p_playlist ,"repeat" ))
cond	5:8	5:57	3	var_GetBool (p_intf -> p_sys -> p_playlist ,"repeat" )
call	5:8	5:57	4	var_GetBool
arg	5:21	5:46	5	p_intf->p_sys->p_playlist
water	5:21	0:0	6	p_intf
op	5:27	0:0	6	->
water	5:29	0:0	6	p_sys
op	5:34	0:0	6	->
water	5:36	0:0	6	p_playlist
arg	5:48	5:57	5	"repeat"
water	5:48	0:0	6	"repeat"
stmts	6:8	6:43	3	
water	6:8	0:0	4	psz_loop_status
op	6:24	0:0	4	=
water	6:26	0:0	4	LOOP_STATUS_TRACK
water	6:43	0:0	4	;
else	7:4	8:46	2
stmts	7:9	8:46	3	
if	7:9	8:46	4	(var_GetBool (p_intf -> p_sys -> p_playlist ,"loop" ))
cond	7:13	7:60	5	var_GetBool (p_intf -> p_sys -> p_playlist ,"loop" )
call	7:13	7:60	6	var_GetBool
arg	7:26	7:51	7	p_intf->p_sys->p_playlist
water	7:26	0:0	8	p_intf
op	7:32	0:0	8	->
water	7:34	0:0	8	p_sys
op	7:39	0:0	8	->
water	7:41	0:0	8	p_playlist
arg	7:53	7:60	7	"loop"
water	7:53	0:0	8	"loop"
stmts	8:8	8:46	5	
water	8:8	0:0	6	psz_loop_status
op	8:24	0:0	6	=
water	8:26	0:0	6	LOOP_STATUS_PLAYLIST
water	8:46	0:0	6	;
else	9:4	10:42	2
stmts	10:8	10:42	3	
water	10:8	0:0	4	psz_loop_status
op	10:24	0:0	4	=
water	10:26	0:0	4	LOOP_STATUS_NONE
water	10:42	0:0	4	;
if	11:4	13:25	2	(!dbus_message_iter_append_basic (container ,DBUS_TYPE_STRING ,& psz_loop_status ))
cond	11:8	12:58	3	!dbus_message_iter_append_basic (container ,DBUS_TYPE_STRING ,& psz_loop_status )
op	11:8	0:0	4	!
call	11:9	12:58	4	dbus_message_iter_append_basic
arg	11:41	11:50	5	container
water	11:41	0:0	6	container
arg	11:52	11:68	5	DBUS_TYPE_STRING
water	11:52	0:0	6	DBUS_TYPE_STRING
arg	12:41	12:58	5	&psz_loop_status
op	12:41	0:0	6	&
water	12:42	0:0	6	psz_loop_status
stmts	13:8	13:25	3	
return	13:8	13:25	4	VLC_ENOMEM
water	13:15	0:0	5	VLC_ENOMEM
return	14:4	14:22	2	VLC_SUCCESS
water	14:11	0:0	3	VLC_SUCCESS

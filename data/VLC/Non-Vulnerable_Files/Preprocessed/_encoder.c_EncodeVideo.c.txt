func	2:0	186:0	0	static block_t *	EncodeVideo
params	2:27	0:0	1	
param	2:29	2:45	2	encoder_t *	p_enc
param	2:47	2:65	2	picture_t *	p_pict
stmnts	0:0	185:18	1	
decl	4:4	4:39	2	encoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_enc
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:15	2	int	i_plane
decl	6:4	6:25	2	AVFrame	*frame
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
if	7:4	79:4	2	(likely (p_pict ))
cond	7:8	7:21	3	likely (p_pict )
call	7:8	7:21	4	likely
arg	7:15	7:21	5	p_pict
water	7:15	0:0	6	p_pict
stmts	7:25	79:4	3	
water	7:25	0:0	4	{
water	8:8	0:0	4	frame
op	8:14	0:0	4	=
water	8:16	0:0	4	p_sys
op	8:21	0:0	4	->
water	8:23	0:0	4	frame
water	8:28	0:0	4	;
call	9:8	9:42	4	avcodec_get_frame_defaults
arg	9:36	9:42	5	frame
water	9:36	0:0	6	frame
water	9:43	0:0	4	;
for	10:8	14:8	4	(i_plane = 0 ;i_plane < p_pict -> i_planes;i_plane ++)
forinit	10:13	10:24	5	i_plane = 0 ;
water	10:13	0:0	6	i_plane
op	10:21	0:0	6	=
water	10:23	0:0	6	0
water	10:24	0:0	6	;
cond	10:26	10:44	5	i_plane < p_pict -> i_planes
water	10:26	0:0	6	i_plane
op	10:34	0:0	6	<
water	10:36	0:0	6	p_pict
op	10:42	0:0	6	->
water	10:44	0:0	6	i_planes
forexpr	10:54	10:61	5	i_plane ++
water	10:54	0:0	6	i_plane
op	10:61	0:0	6	++
stmts	11:8	14:8	5	
water	11:8	0:0	6	{
water	12:12	0:0	6	p_sys
op	12:17	0:0	6	->
water	12:19	0:0	6	frame
op	12:24	0:0	6	->
water	12:26	0:0	6	data
op	12:30	0:0	6	[
water	12:31	0:0	6	i_plane
op	12:38	0:0	6	]
op	12:40	0:0	6	=
water	12:42	0:0	6	p_pict
op	12:48	0:0	6	->
water	12:50	0:0	6	p
op	12:51	0:0	6	[
water	12:52	0:0	6	i_plane
op	12:59	0:0	6	]
op	12:60	0:0	6	.
water	12:61	0:0	6	p_pixels
water	12:69	0:0	6	;
water	13:12	0:0	6	p_sys
op	13:17	0:0	6	->
water	13:19	0:0	6	frame
op	13:24	0:0	6	->
water	13:26	0:0	6	linesize
op	13:34	0:0	6	[
water	13:35	0:0	6	i_plane
op	13:42	0:0	6	]
op	13:44	0:0	6	=
water	13:46	0:0	6	p_pict
op	13:52	0:0	6	->
water	13:54	0:0	6	p
op	13:55	0:0	6	[
water	13:56	0:0	6	i_plane
op	13:63	0:0	6	]
op	13:64	0:0	6	.
water	13:65	0:0	6	i_pitch
water	13:72	0:0	6	;
water	14:8	0:0	6	}
water	16:8	0:0	4	frame
op	16:13	0:0	4	->
water	16:15	0:0	4	pict_type
op	16:25	0:0	4	=
water	16:27	0:0	4	0
water	16:28	0:0	4	;
water	17:8	0:0	4	frame
op	17:13	0:0	4	->
water	17:15	0:0	4	repeat_pict
op	17:27	0:0	4	=
water	17:29	0:0	4	p_pict
op	17:35	0:0	4	->
water	17:37	0:0	4	i_nb_fields
op	17:49	0:0	4	-
water	17:51	0:0	4	2
water	17:52	0:0	4	;
water	18:8	0:0	4	frame
op	18:13	0:0	4	->
water	18:15	0:0	4	interlaced_frame
op	18:32	0:0	4	=
op	18:34	0:0	4	!
water	18:35	0:0	4	p_pict
op	18:41	0:0	4	->
water	18:43	0:0	4	b_progressive
water	18:56	0:0	4	;
water	19:8	0:0	4	frame
op	19:13	0:0	4	->
water	19:15	0:0	4	top_field_first
op	19:31	0:0	4	=
op	19:33	0:0	4	!
op	19:34	0:0	4	!
water	19:35	0:0	4	p_pict
op	19:41	0:0	4	->
water	19:43	0:0	4	b_top_field_first
water	19:60	0:0	4	;
if	23:8	25:70	4	(likely (p_pict -> date > VLC_TS_INVALID ))
cond	23:12	23:50	5	likely (p_pict -> date > VLC_TS_INVALID )
call	23:12	23:50	6	likely
arg	23:20	23:50	7	p_pict->date>VLC_TS_INVALID
water	23:20	0:0	8	p_pict
op	23:26	0:0	8	->
water	23:28	0:0	8	date
op	23:33	0:0	8	>
water	23:35	0:0	8	VLC_TS_INVALID
stmts	24:12	25:70	5	
water	24:12	0:0	6	frame
op	24:17	0:0	6	->
water	24:19	0:0	6	pts
op	24:23	0:0	6	=
water	24:25	0:0	6	p_pict
op	24:31	0:0	6	->
water	24:33	0:0	6	date
op	24:38	0:0	6	*
water	24:40	0:0	6	p_sys
op	24:45	0:0	6	->
water	24:47	0:0	6	p_context
op	24:56	0:0	6	->
water	24:58	0:0	6	time_base
op	24:67	0:0	6	.
water	24:68	0:0	6	den
op	24:72	0:0	6	/
water	25:26	0:0	6	CLOCK_FREQ
op	25:37	0:0	6	/
water	25:39	0:0	6	p_sys
op	25:44	0:0	6	->
water	25:46	0:0	6	p_context
op	25:55	0:0	6	->
water	25:57	0:0	6	time_base
op	25:66	0:0	6	.
water	25:67	0:0	6	num
water	25:70	0:0	6	;
else	26:8	27:39	4
stmts	27:12	27:39	5	
water	27:12	0:0	6	frame
op	27:17	0:0	6	->
water	27:19	0:0	6	pts
op	27:23	0:0	6	=
water	27:25	0:0	6	AV_NOPTS_VALUE
water	27:39	0:0	6	;
if	28:8	59:8	4	(p_sys -> b_hurry_up && frame -> pts != AV_NOPTS_VALUE)
cond	28:13	28:48	5	p_sys -> b_hurry_up && frame -> pts != AV_NOPTS_VALUE
water	28:13	0:0	6	p_sys
op	28:18	0:0	6	->
water	28:20	0:0	6	b_hurry_up
op	28:31	0:0	6	&&
water	28:34	0:0	6	frame
op	28:39	0:0	6	->
water	28:41	0:0	6	pts
op	28:45	0:0	6	!=
water	28:48	0:0	6	AV_NOPTS_VALUE
stmts	29:8	59:8	5	
water	29:8	0:0	6	{
decl	30:12	30:42	6	mtime_t	current_date
op	30:33	0:0	6	=
call	30:35	30:41	7	mdate
if	31:12	36:12	6	(current_date + HURRY_UP_GUARD3 > frame -> pts)
cond	31:17	31:57	7	current_date + HURRY_UP_GUARD3 > frame -> pts
water	31:17	0:0	8	current_date
op	31:30	0:0	8	+
water	31:32	0:0	8	HURRY_UP_GUARD3
op	31:48	0:0	8	>
water	31:50	0:0	8	frame
op	31:55	0:0	8	->
water	31:57	0:0	8	pts
stmts	32:12	36:12	7	
water	32:12	0:0	8	{
water	33:16	0:0	8	p_sys
op	33:21	0:0	8	->
water	33:23	0:0	8	p_context
op	33:32	0:0	8	->
water	33:34	0:0	8	mb_decision
op	33:46	0:0	8	=
water	33:48	0:0	8	FF_MB_DECISION_SIMPLE
water	33:69	0:0	8	;
water	34:16	0:0	8	p_sys
op	34:21	0:0	8	->
water	34:23	0:0	8	p_context
op	34:32	0:0	8	->
water	34:34	0:0	8	trellis
op	34:42	0:0	8	=
water	34:44	0:0	8	0
water	34:45	0:0	8	;
call	35:16	35:50	8	msg_Dbg
arg	35:25	35:30	9	p_enc
water	35:25	0:0	10	p_enc
arg	35:32	35:50	9	"hurry up mode 3"
water	35:32	0:0	10	"hurry up mode 3"
water	35:51	0:0	8	;
water	36:12	0:0	8	}
else	37:12	53:12	6
stmts	38:12	53:12	7	
water	38:12	0:0	8	{
water	39:16	0:0	8	p_sys
op	39:21	0:0	8	->
water	39:23	0:0	8	p_context
op	39:32	0:0	8	->
water	39:34	0:0	8	mb_decision
op	39:46	0:0	8	=
water	39:48	0:0	8	p_sys
op	39:53	0:0	8	->
water	39:55	0:0	8	i_hq
water	39:59	0:0	8	;
if	40:16	46:16	8	(current_date + HURRY_UP_GUARD2 > frame -> pts)
cond	40:21	40:61	9	current_date + HURRY_UP_GUARD2 > frame -> pts
water	40:21	0:0	10	current_date
op	40:34	0:0	10	+
water	40:36	0:0	10	HURRY_UP_GUARD2
op	40:52	0:0	10	>
water	40:54	0:0	10	frame
op	40:59	0:0	10	->
water	40:61	0:0	10	pts
stmts	41:16	46:16	9	
water	41:16	0:0	10	{
water	42:20	0:0	10	p_sys
op	42:25	0:0	10	->
water	42:27	0:0	10	p_context
op	42:36	0:0	10	->
water	42:38	0:0	10	trellis
op	42:46	0:0	10	=
water	42:48	0:0	10	0
water	42:49	0:0	10	;
water	43:20	0:0	10	p_sys
op	43:25	0:0	10	->
water	43:27	0:0	10	p_context
op	43:36	0:0	10	->
water	43:38	0:0	10	noise_reduction
op	43:54	0:0	10	=
water	43:56	0:0	10	p_sys
op	43:61	0:0	10	->
water	43:63	0:0	10	i_noise_reduction
op	44:24	0:0	10	+
water	44:26	0:0	10	(
water	44:27	0:0	10	HURRY_UP_GUARD2
op	44:43	0:0	10	+
water	44:45	0:0	10	current_date
op	44:58	0:0	10	-
water	44:60	0:0	10	frame
op	44:65	0:0	10	->
water	44:67	0:0	10	pts
water	44:70	0:0	10	)
op	44:72	0:0	10	/
water	44:74	0:0	10	500
water	44:77	0:0	10	;
call	45:20	45:54	10	msg_Dbg
arg	45:29	45:34	11	p_enc
water	45:29	0:0	12	p_enc
arg	45:36	45:54	11	"hurry up mode 2"
water	45:36	0:0	12	"hurry up mode 2"
water	45:55	0:0	10	;
water	46:16	0:0	10	}
else	47:16	52:16	8
stmts	48:16	52:16	9	
water	48:16	0:0	10	{
water	49:20	0:0	10	p_sys
op	49:25	0:0	10	->
water	49:27	0:0	10	p_context
op	49:36	0:0	10	->
water	49:38	0:0	10	trellis
op	49:46	0:0	10	=
water	49:48	0:0	10	p_sys
op	49:53	0:0	10	->
water	49:55	0:0	10	b_trellis
water	49:64	0:0	10	;
water	50:20	0:0	10	p_sys
op	50:25	0:0	10	->
water	50:27	0:0	10	p_context
op	50:36	0:0	10	->
water	50:38	0:0	10	noise_reduction
op	50:54	0:0	10	=
water	51:23	0:0	10	p_sys
op	51:28	0:0	10	->
water	51:30	0:0	10	i_noise_reduction
water	51:47	0:0	10	;
water	52:16	0:0	10	}
water	53:12	0:0	8	}
if	54:12	58:12	6	(current_date + HURRY_UP_GUARD1 > frame -> pts)
cond	54:17	54:57	7	current_date + HURRY_UP_GUARD1 > frame -> pts
water	54:17	0:0	8	current_date
op	54:30	0:0	8	+
water	54:32	0:0	8	HURRY_UP_GUARD1
op	54:48	0:0	8	>
water	54:50	0:0	8	frame
op	54:55	0:0	8	->
water	54:57	0:0	8	pts
stmts	55:12	58:12	7	
water	55:12	0:0	8	{
water	56:16	0:0	8	frame
op	56:21	0:0	8	->
water	56:23	0:0	8	pict_type
op	56:33	0:0	8	=
water	56:35	0:0	8	AV_PICTURE_TYPE_P
water	56:52	0:0	8	;
water	58:12	0:0	8	}
water	59:8	0:0	6	}
if	60:8	77:8	4	(frame -> pts != AV_NOPTS_VALUE && frame -> pts != 0)
cond	60:13	60:59	5	frame -> pts != AV_NOPTS_VALUE && frame -> pts != 0
water	60:13	0:0	6	frame
op	60:18	0:0	6	->
water	60:20	0:0	6	pts
op	60:24	0:0	6	!=
water	60:27	0:0	6	AV_NOPTS_VALUE
op	60:42	0:0	6	&&
water	60:45	0:0	6	frame
op	60:50	0:0	6	->
water	60:52	0:0	6	pts
op	60:56	0:0	6	!=
water	60:59	0:0	6	0
stmts	61:8	77:8	5	
water	61:8	0:0	6	{
if	62:12	67:12	6	(p_sys -> i_last_pts == frame -> pts)
cond	62:17	62:45	7	p_sys -> i_last_pts == frame -> pts
water	62:17	0:0	8	p_sys
op	62:22	0:0	8	->
water	62:24	0:0	8	i_last_pts
op	62:35	0:0	8	==
water	62:38	0:0	8	frame
op	62:43	0:0	8	->
water	62:45	0:0	8	pts
stmts	63:12	67:12	7	
water	63:12	0:0	8	{
call	64:16	65:66	8	msg_Warn
arg	64:26	64:31	9	p_enc
water	64:26	0:0	10	p_enc
arg	64:33	65:53	9	"almost fed libavcodec with two frames with ""the same PTS (%"PRId64")"
water	64:33	0:0	10	"almost fed libavcodec with two frames with "
water	65:26	0:0	10	"the same PTS (%"
water	65:43	0:0	10	PRId64
water	65:50	0:0	10	")"
arg	65:55	65:66	9	frame->pts
water	65:55	0:0	10	frame
op	65:60	0:0	10	->
water	65:62	0:0	10	pts
water	65:67	0:0	8	;
return	66:16	66:27	8	NULL
water	66:23	0:0	9	NULL
water	67:12	0:0	8	}
else	68:12	74:12	6
stmts	68:17	74:12	7	
if	68:17	74:12	8	(p_sys -> i_last_pts > frame -> pts)
cond	68:22	68:49	9	p_sys -> i_last_pts > frame -> pts
water	68:22	0:0	10	p_sys
op	68:27	0:0	10	->
water	68:29	0:0	10	i_last_pts
op	68:40	0:0	10	>
water	68:42	0:0	10	frame
op	68:47	0:0	10	->
water	68:49	0:0	10	pts
stmts	69:12	74:12	9	
water	69:12	0:0	10	{
call	70:16	72:55	10	msg_Warn
arg	70:26	70:31	11	p_enc
water	70:26	0:0	12	p_enc
arg	70:33	71:70	11	"almost fed libavcodec with a frame in the ""past (current: %"PRId64", last: %"PRId64")"
water	70:33	0:0	12	"almost fed libavcodec with a frame in the "
water	71:25	0:0	12	"past (current: %"
water	71:43	0:0	12	PRId64
water	71:50	0:0	12	", last: %"
water	71:61	0:0	12	PRId64
water	71:67	0:0	12	")"
arg	72:25	72:35	11	frame->pts
water	72:25	0:0	12	frame
op	72:30	0:0	12	->
water	72:32	0:0	12	pts
arg	72:37	72:55	11	p_sys->i_last_pts
water	72:37	0:0	12	p_sys
op	72:42	0:0	12	->
water	72:44	0:0	12	i_last_pts
water	72:56	0:0	10	;
return	73:16	73:27	10	NULL
water	73:23	0:0	11	NULL
water	74:12	0:0	10	}
else	75:12	76:46	6
stmts	76:16	76:46	7	
water	76:16	0:0	8	p_sys
op	76:21	0:0	8	->
water	76:23	0:0	8	i_last_pts
op	76:34	0:0	8	=
water	76:36	0:0	8	frame
op	76:41	0:0	8	->
water	76:43	0:0	8	pts
water	76:46	0:0	8	;
water	77:8	0:0	6	}
water	78:8	0:0	4	frame
op	78:13	0:0	4	->
water	78:15	0:0	4	quality
op	78:23	0:0	4	=
water	78:25	0:0	4	p_sys
op	78:30	0:0	4	->
water	78:32	0:0	4	i_quality
water	78:41	0:0	4	;
water	79:4	0:0	4	}
decl	81:4	81:19	2	AVPacket	av_pkt
water	82:4	0:0	2	av_pkt
op	82:10	0:0	2	.
water	82:11	0:0	2	data
op	82:16	0:0	2	=
water	82:18	0:0	2	NULL
water	82:22	0:0	2	;
water	83:4	0:0	2	av_pkt
op	83:10	0:0	2	.
water	83:11	0:0	2	size
op	83:16	0:0	2	=
water	83:18	0:0	2	0
water	83:19	0:0	2	;
decl	84:4	84:15	2	int	is_data
call	85:4	85:28	2	av_init_packet
arg	85:20	85:28	3	&av_pkt
op	85:20	0:0	4	&
water	85:21	0:0	4	av_pkt
water	85:29	0:0	2	;
if	86:4	90:4	2	(avcodec_encode_video2 (p_sys -> p_context ,& av_pkt ,frame ,& is_data ) < 0 || is_data == 0)
cond	86:8	87:19	3	avcodec_encode_video2 (p_sys -> p_context ,& av_pkt ,frame ,& is_data ) < 0 || is_data == 0
call	86:8	86:74	4	avcodec_encode_video2
arg	86:31	86:47	5	p_sys->p_context
water	86:31	0:0	6	p_sys
op	86:36	0:0	6	->
water	86:38	0:0	6	p_context
arg	86:49	86:56	5	&av_pkt
op	86:49	0:0	6	&
water	86:50	0:0	6	av_pkt
arg	86:58	86:63	5	frame
water	86:58	0:0	6	frame
arg	86:65	86:74	5	&is_data
op	86:65	0:0	6	&
water	86:66	0:0	6	is_data
op	86:76	0:0	4	<
water	86:78	0:0	4	0
op	87:5	0:0	4	||
water	87:8	0:0	4	is_data
op	87:16	0:0	4	==
water	87:19	0:0	4	0
stmts	88:4	90:4	3	
water	88:4	0:0	4	{
return	89:8	89:19	4	NULL
water	89:15	0:0	5	NULL
water	90:4	0:0	4	}
decl	91:4	92:81	2	block_t	*p_block
op	91:21	0:0	2	=
call	91:23	92:80	3	vlc_av_packet_Wrap
arg	91:43	91:50	4	&av_pkt
op	91:43	0:0	5	&
water	91:44	0:0	5	av_pkt
arg	92:12	92:61	4	av_pkt.duration/p_sys->p_context->time_base.den
water	92:12	0:0	5	av_pkt
op	92:18	0:0	5	.
water	92:19	0:0	5	duration
op	92:28	0:0	5	/
water	92:30	0:0	5	p_sys
op	92:35	0:0	5	->
water	92:37	0:0	5	p_context
op	92:46	0:0	5	->
water	92:48	0:0	5	time_base
op	92:57	0:0	5	.
water	92:58	0:0	5	den
arg	92:63	92:80	4	p_sys->p_context
water	92:63	0:0	5	p_sys
op	92:68	0:0	5	->
water	92:70	0:0	5	p_context
if	93:4	97:4	2	(unlikely (p_block == NULL ))
cond	93:8	93:32	3	unlikely (p_block == NULL )
call	93:8	93:32	4	unlikely
arg	93:17	93:32	5	p_block==NULL
water	93:17	0:0	6	p_block
op	93:25	0:0	6	==
water	93:28	0:0	6	NULL
stmts	94:4	97:4	3	
water	94:4	0:0	4	{
call	95:8	95:32	4	av_free_packet
arg	95:24	95:32	5	&av_pkt
op	95:24	0:0	6	&
water	95:25	0:0	6	av_pkt
water	95:33	0:0	4	;
return	96:8	96:19	4	NULL
water	96:15	0:0	5	NULL
water	97:4	0:0	4	}
decl	103:4	107:27	2	const int	bitsPerPixel
op	103:27	0:0	2	=
water	103:29	0:0	2	p_enc
op	103:34	0:0	2	->
water	103:36	0:0	2	fmt_out
op	103:43	0:0	2	.
water	103:44	0:0	2	video
op	103:49	0:0	2	.
water	103:50	0:0	2	i_bits_per_pixel
water	103:67	0:0	2	?
water	104:25	0:0	2	p_enc
op	104:30	0:0	2	->
water	104:32	0:0	2	fmt_out
op	104:39	0:0	2	.
water	104:40	0:0	2	video
op	104:45	0:0	2	.
water	104:46	0:0	2	i_bits_per_pixel
water	104:63	0:0	2	:
water	105:25	0:0	2	p_sys
op	105:30	0:0	2	->
water	105:32	0:0	2	p_context
op	105:41	0:0	2	->
water	105:43	0:0	2	bits_per_coded_sample
water	105:65	0:0	2	?
water	106:25	0:0	2	p_sys
op	106:30	0:0	2	->
water	106:32	0:0	2	p_context
op	106:41	0:0	2	->
water	106:43	0:0	2	bits_per_coded_sample
water	106:65	0:0	2	:
water	107:25	0:0	2	24
water	108:4	0:0	2	unsigned
water	108:13	0:0	2	blocksize
op	108:23	0:0	2	=
call	108:25	108:132	2	__MAX
arg	108:32	108:50	3	FF_MIN_BUFFER_SIZE
water	108:32	0:0	4	FF_MIN_BUFFER_SIZE
arg	108:52	108:132	3	(bitsPerPixel*p_sys->p_context->height*p_sys->p_context->width)/8+200
water	108:52	0:0	4	(
water	108:54	0:0	4	bitsPerPixel
op	108:67	0:0	4	*
water	108:69	0:0	4	p_sys
op	108:74	0:0	4	->
water	108:76	0:0	4	p_context
op	108:85	0:0	4	->
water	108:87	0:0	4	height
op	108:94	0:0	4	*
water	108:96	0:0	4	p_sys
op	108:101	0:0	4	->
water	108:103	0:0	4	p_context
op	108:112	0:0	4	->
water	108:114	0:0	4	width
water	108:120	0:0	4	)
op	108:122	0:0	4	/
water	108:124	0:0	4	8
op	108:126	0:0	4	+
water	108:128	0:0	4	200
water	108:133	0:0	2	;
if	109:4	113:4	2	(p_enc -> fmt_out . i_codec == VLC_CODEC_TIFF)
cond	109:8	109:34	3	p_enc -> fmt_out . i_codec == VLC_CODEC_TIFF
water	109:8	0:0	4	p_enc
op	109:13	0:0	4	->
water	109:15	0:0	4	fmt_out
op	109:22	0:0	4	.
water	109:23	0:0	4	i_codec
op	109:31	0:0	4	==
water	109:34	0:0	4	VLC_CODEC_TIFF
stmts	110:4	113:4	3	
water	110:4	0:0	4	{
water	111:8	0:0	4	blocksize
op	111:18	0:0	4	=
water	111:20	0:0	4	2
op	111:22	0:0	4	*
water	111:24	0:0	4	blocksize
op	111:34	0:0	4	+
water	112:12	0:0	4	4
op	112:14	0:0	4	*
water	112:16	0:0	4	p_sys
op	112:21	0:0	4	->
water	112:23	0:0	4	p_context
op	112:32	0:0	4	->
water	112:34	0:0	4	height
water	112:40	0:0	4	;
water	113:4	0:0	4	}
decl	114:4	114:47	2	block_t	*p_block
op	114:21	0:0	2	=
call	114:23	114:46	3	block_Alloc
arg	114:36	114:46	4	blocksize
water	114:36	0:0	5	blocksize
if	115:4	116:19	2	(unlikely (p_block == NULL ))
cond	115:8	115:32	3	unlikely (p_block == NULL )
call	115:8	115:32	4	unlikely
arg	115:17	115:32	5	p_block==NULL
water	115:17	0:0	6	p_block
op	115:25	0:0	6	==
water	115:28	0:0	6	NULL
stmts	116:8	116:19	3	
return	116:8	116:19	4	NULL
water	116:15	0:0	5	NULL
decl	117:4	118:64	2	int	i_out
op	117:14	0:0	2	=
call	117:16	118:63	3	avcodec_encode_video
arg	117:38	117:54	4	p_sys->p_context
water	117:38	0:0	5	p_sys
op	117:43	0:0	5	->
water	117:45	0:0	5	p_context
arg	117:56	117:73	4	p_block->p_buffer
water	117:56	0:0	5	p_block
op	117:63	0:0	5	->
water	117:65	0:0	5	p_buffer
arg	118:38	118:55	4	p_block->i_buffer
water	118:38	0:0	5	p_block
op	118:45	0:0	5	->
water	118:47	0:0	5	i_buffer
arg	118:57	118:63	4	frame
water	118:57	0:0	5	frame
if	119:4	123:4	2	(i_out <= 0)
cond	119:8	119:17	3	i_out <= 0
water	119:8	0:0	4	i_out
op	119:14	0:0	4	<=
water	119:17	0:0	4	0
stmts	120:4	123:4	3	
water	120:4	0:0	4	{
call	121:8	121:31	4	block_Release
arg	121:23	121:31	5	p_block
water	121:23	0:0	6	p_block
water	121:32	0:0	4	;
return	122:8	122:19	4	NULL
water	122:15	0:0	5	NULL
water	123:4	0:0	4	}
water	124:4	0:0	2	p_block
op	124:11	0:0	2	->
water	124:13	0:0	2	i_buffer
op	124:22	0:0	2	=
water	124:24	0:0	2	i_out
water	124:29	0:0	2	;
water	126:4	0:0	2	p_block
op	126:11	0:0	2	->
water	126:13	0:0	2	i_length
op	126:22	0:0	2	=
call	126:24	126:39	2	INT64_C
arg	126:32	126:39	3	1000000
water	126:32	0:0	4	1000000
op	126:41	0:0	2	*
water	127:8	0:0	2	p_enc
op	127:13	0:0	2	->
water	127:15	0:0	2	fmt_in
op	127:21	0:0	2	.
water	127:22	0:0	2	video
op	127:27	0:0	2	.
water	127:28	0:0	2	i_frame_rate_base
op	127:46	0:0	2	/
water	128:12	0:0	2	p_enc
op	128:17	0:0	2	->
water	128:19	0:0	2	fmt_in
op	128:25	0:0	2	.
water	128:26	0:0	2	video
op	128:31	0:0	2	.
water	128:32	0:0	2	i_frame_rate
water	128:44	0:0	2	;
if	129:4	135:4	2	(! p_sys -> p_context -> max_b_frames || ! p_sys -> p_context -> delay)
cond	129:8	129:62	3	! p_sys -> p_context -> max_b_frames || ! p_sys -> p_context -> delay
op	129:8	0:0	4	!
water	129:9	0:0	4	p_sys
op	129:14	0:0	4	->
water	129:16	0:0	4	p_context
op	129:25	0:0	4	->
water	129:27	0:0	4	max_b_frames
op	129:40	0:0	4	||
op	129:43	0:0	4	!
water	129:44	0:0	4	p_sys
op	129:49	0:0	4	->
water	129:51	0:0	4	p_context
op	129:60	0:0	4	->
water	129:62	0:0	4	delay
stmts	130:4	135:4	3	
water	130:4	0:0	4	{
if	132:8	133:41	4	(p_pict)
cond	132:12	132:12	5	p_pict
water	132:12	0:0	6	p_pict
stmts	133:12	133:41	5	
water	133:12	0:0	6	p_block
op	133:19	0:0	6	->
water	133:21	0:0	6	i_dts
op	133:27	0:0	6	=
water	133:29	0:0	6	p_pict
op	133:35	0:0	6	->
water	133:37	0:0	6	date
water	133:41	0:0	6	;
water	134:8	0:0	4	p_block
op	134:15	0:0	4	->
water	134:17	0:0	4	i_pts
op	134:23	0:0	4	=
water	134:25	0:0	4	p_block
op	134:32	0:0	4	->
water	134:34	0:0	4	i_dts
water	134:39	0:0	4	;
water	135:4	0:0	4	}
else	136:4	160:4	2
stmts	136:9	160:4	3	
if	136:9	160:4	4	(p_sys -> p_context -> coded_frame -> pts != AV_NOPTS_VALUE && p_sys -> p_context -> coded_frame -> pts != 0 && p_sys -> i_buggy_pts_detect != p_sys -> p_context -> coded_frame -> pts)
cond	136:13	138:68	5	p_sys -> p_context -> coded_frame -> pts != AV_NOPTS_VALUE && p_sys -> p_context -> coded_frame -> pts != 0 && p_sys -> i_buggy_pts_detect != p_sys -> p_context -> coded_frame -> pts
water	136:13	0:0	6	p_sys
op	136:18	0:0	6	->
water	136:20	0:0	6	p_context
op	136:29	0:0	6	->
water	136:31	0:0	6	coded_frame
op	136:42	0:0	6	->
water	136:44	0:0	6	pts
op	136:48	0:0	6	!=
water	136:51	0:0	6	AV_NOPTS_VALUE
op	136:66	0:0	6	&&
water	137:8	0:0	6	p_sys
op	137:13	0:0	6	->
water	137:15	0:0	6	p_context
op	137:24	0:0	6	->
water	137:26	0:0	6	coded_frame
op	137:37	0:0	6	->
water	137:39	0:0	6	pts
op	137:43	0:0	6	!=
water	137:46	0:0	6	0
op	137:48	0:0	6	&&
water	138:8	0:0	6	p_sys
op	138:13	0:0	6	->
water	138:15	0:0	6	i_buggy_pts_detect
op	138:34	0:0	6	!=
water	138:37	0:0	6	p_sys
op	138:42	0:0	6	->
water	138:44	0:0	6	p_context
op	138:53	0:0	6	->
water	138:55	0:0	6	coded_frame
op	138:66	0:0	6	->
water	138:68	0:0	6	pts
stmts	139:4	160:4	5	
water	139:4	0:0	6	{
water	140:8	0:0	6	p_sys
op	140:13	0:0	6	->
water	140:15	0:0	6	i_buggy_pts_detect
op	140:34	0:0	6	=
water	140:36	0:0	6	p_sys
op	140:41	0:0	6	->
water	140:43	0:0	6	p_context
op	140:52	0:0	6	->
water	140:54	0:0	6	coded_frame
op	140:65	0:0	6	->
water	140:67	0:0	6	pts
water	140:70	0:0	6	;
water	141:8	0:0	6	p_block
op	141:15	0:0	6	->
water	141:17	0:0	6	i_pts
op	141:23	0:0	6	=
water	141:25	0:0	6	p_sys
op	141:30	0:0	6	->
water	141:32	0:0	6	p_context
op	141:41	0:0	6	->
water	141:43	0:0	6	coded_frame
op	141:54	0:0	6	->
water	141:56	0:0	6	pts
water	141:59	0:0	6	;
if	142:8	146:8	6	(p_sys -> p_context -> coded_frame -> pict_type != AV_PICTURE_TYPE_I && p_sys -> p_context -> coded_frame -> pict_type != AV_PICTURE_TYPE_P)
cond	142:12	143:56	7	p_sys -> p_context -> coded_frame -> pict_type != AV_PICTURE_TYPE_I && p_sys -> p_context -> coded_frame -> pict_type != AV_PICTURE_TYPE_P
water	142:12	0:0	8	p_sys
op	142:17	0:0	8	->
water	142:19	0:0	8	p_context
op	142:28	0:0	8	->
water	142:30	0:0	8	coded_frame
op	142:41	0:0	8	->
water	142:43	0:0	8	pict_type
op	142:53	0:0	8	!=
water	142:56	0:0	8	AV_PICTURE_TYPE_I
op	142:74	0:0	8	&&
water	143:12	0:0	8	p_sys
op	143:17	0:0	8	->
water	143:19	0:0	8	p_context
op	143:28	0:0	8	->
water	143:30	0:0	8	coded_frame
op	143:41	0:0	8	->
water	143:43	0:0	8	pict_type
op	143:53	0:0	8	!=
water	143:56	0:0	8	AV_PICTURE_TYPE_P
stmts	144:8	146:8	7	
water	144:8	0:0	8	{
water	145:12	0:0	8	p_block
op	145:19	0:0	8	->
water	145:21	0:0	8	i_dts
op	145:27	0:0	8	=
water	145:29	0:0	8	p_block
op	145:36	0:0	8	->
water	145:38	0:0	8	i_pts
water	145:43	0:0	8	;
water	146:8	0:0	8	}
else	147:8	159:8	6
stmts	148:8	159:8	7	
water	148:8	0:0	8	{
if	149:12	152:12	8	(p_sys -> i_last_ref_pts)
cond	149:16	149:23	9	p_sys -> i_last_ref_pts
water	149:16	0:0	10	p_sys
op	149:21	0:0	10	->
water	149:23	0:0	10	i_last_ref_pts
stmts	150:12	152:12	9	
water	150:12	0:0	10	{
water	151:16	0:0	10	p_block
op	151:23	0:0	10	->
water	151:25	0:0	10	i_dts
op	151:31	0:0	10	=
water	151:33	0:0	10	p_sys
op	151:38	0:0	10	->
water	151:40	0:0	10	i_last_ref_pts
water	151:54	0:0	10	;
water	152:12	0:0	10	}
else	153:12	157:12	8
stmts	154:12	157:12	9	
water	154:12	0:0	10	{
water	156:16	0:0	10	p_block
op	156:23	0:0	10	->
water	156:25	0:0	10	i_dts
op	156:31	0:0	10	=
water	156:33	0:0	10	p_block
op	156:40	0:0	10	->
water	156:42	0:0	10	i_pts
water	156:47	0:0	10	;
water	157:12	0:0	10	}
water	158:12	0:0	8	p_sys
op	158:17	0:0	8	->
water	158:19	0:0	8	i_last_ref_pts
op	158:34	0:0	8	=
water	158:36	0:0	8	p_block
op	158:43	0:0	8	->
water	158:45	0:0	8	i_pts
water	158:50	0:0	8	;
water	159:8	0:0	8	}
water	160:4	0:0	6	}
else	161:4	166:4	2
stmts	161:9	166:4	3	
if	161:9	166:4	4	(p_pict)
cond	161:13	161:13	5	p_pict
water	161:13	0:0	6	p_pict
stmts	162:4	166:4	5	
water	162:4	0:0	6	{
water	165:8	0:0	6	p_block
op	165:15	0:0	6	->
water	165:17	0:0	6	i_dts
op	165:23	0:0	6	=
water	165:25	0:0	6	p_block
op	165:32	0:0	6	->
water	165:34	0:0	6	i_pts
op	165:40	0:0	6	=
water	165:42	0:0	6	p_pict
op	165:48	0:0	6	->
water	165:50	0:0	6	date
water	165:54	0:0	6	;
water	166:4	0:0	6	}
switch	168:4	184:4	2	(p_sys -> p_context -> coded_frame -> pict_type)
cond	168:13	168:44	3	p_sys -> p_context -> coded_frame -> pict_type
water	168:13	0:0	4	p_sys
op	168:18	0:0	4	->
water	168:20	0:0	4	p_context
op	168:29	0:0	4	->
water	168:31	0:0	4	coded_frame
op	168:42	0:0	4	->
water	168:44	0:0	4	pict_type
stmts	169:4	184:4	3	
water	169:4	0:0	4	{
label	170:4	170:26	4	case AV_PICTURE_TYPE_I :
label	171:4	171:27	4	case AV_PICTURE_TYPE_SI :
water	172:8	0:0	4	p_block
op	172:15	0:0	4	->
water	172:17	0:0	4	i_flags
op	172:25	0:0	4	|=
water	172:28	0:0	4	BLOCK_FLAG_TYPE_I
water	172:45	0:0	4	;
break	173:8	173:13	4	
label	174:4	174:26	4	case AV_PICTURE_TYPE_P :
label	175:4	175:27	4	case AV_PICTURE_TYPE_SP :
water	176:8	0:0	4	p_block
op	176:15	0:0	4	->
water	176:17	0:0	4	i_flags
op	176:25	0:0	4	|=
water	176:28	0:0	4	BLOCK_FLAG_TYPE_P
water	176:45	0:0	4	;
break	177:8	177:13	4	
label	178:4	178:26	4	case AV_PICTURE_TYPE_B :
label	179:4	179:27	4	case AV_PICTURE_TYPE_BI :
water	180:8	0:0	4	p_block
op	180:15	0:0	4	->
water	180:17	0:0	4	i_flags
op	180:25	0:0	4	|=
water	180:28	0:0	4	BLOCK_FLAG_TYPE_B
water	180:45	0:0	4	;
break	181:8	181:13	4	
label	182:4	182:11	4	default :
water	183:8	0:0	4	p_block
op	183:15	0:0	4	->
water	183:17	0:0	4	i_flags
op	183:25	0:0	4	|=
water	183:28	0:0	4	BLOCK_FLAG_TYPE_PB
water	183:46	0:0	4	;
water	184:4	0:0	4	}
return	185:4	185:18	2	p_block
water	185:11	0:0	3	p_block

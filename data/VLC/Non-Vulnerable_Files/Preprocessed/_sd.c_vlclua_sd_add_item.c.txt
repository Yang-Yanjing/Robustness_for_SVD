func	2:0	85:0	0	static int	vlclua_sd_add_item
params	2:29	0:0	1	
param	2:31	2:44	2	lua_State *	L
stmnts	0:0	84:12	1	
decl	4:4	4:77	2	services_discovery_t	*p_sd
op	4:31	0:0	2	=
water	4:33	0:0	2	(
water	4:34	0:0	2	services_discovery_t
op	4:55	0:0	2	*
water	4:56	0:0	2	)
call	4:57	4:76	3	vlclua_get_this
arg	4:74	4:76	4	L
water	4:74	0:0	5	L
if	5:4	81:4	2	(lua_istable (L ,- 1 ))
cond	5:8	5:27	3	lua_istable (L ,- 1 )
call	5:8	5:27	4	lua_istable
arg	5:21	5:22	5	L
water	5:21	0:0	6	L
arg	5:24	5:27	5	-1
op	5:24	0:0	6	-
water	5:25	0:0	6	1
stmts	6:4	81:4	3	
water	6:4	0:0	4	{
call	7:8	7:36	4	lua_getfield
arg	7:22	7:23	5	L
water	7:22	0:0	6	L
arg	7:25	7:27	5	-1
op	7:25	0:0	6	-
water	7:26	0:0	6	1
arg	7:29	7:36	5	"path"
water	7:29	0:0	6	"path"
water	7:37	0:0	4	;
if	8:8	78:8	4	(lua_isstring (L ,- 1 ))
cond	8:12	8:32	5	lua_isstring (L ,- 1 )
call	8:12	8:32	6	lua_isstring
arg	8:26	8:27	7	L
water	8:26	0:0	8	L
arg	8:29	8:32	7	-1
op	8:29	0:0	8	-
water	8:30	0:0	8	1
stmts	9:8	78:8	5	
water	9:8	0:0	6	{
decl	10:12	10:56	6	const char	*psz_path
op	10:33	0:0	6	=
call	10:35	10:55	7	lua_tostring
arg	10:49	10:50	8	L
water	10:49	0:0	9	L
arg	10:52	10:55	8	-1
op	10:52	0:0	9	-
water	10:53	0:0	9	1
call	11:12	11:41	6	lua_getfield
arg	11:26	11:27	7	L
water	11:26	0:0	8	L
arg	11:29	11:31	7	-2
op	11:29	0:0	8	-
water	11:30	0:0	8	2
arg	11:33	11:41	7	"title"
water	11:33	0:0	8	"title"
water	11:42	0:0	6	;
decl	12:12	12:100	6	const char	*psz_title
op	12:34	0:0	6	=
call	12:36	12:60	7	luaL_checkstring
arg	12:54	12:55	8	L
water	12:54	0:0	9	L
arg	12:57	12:60	8	-1
op	12:57	0:0	9	-
water	12:58	0:0	9	1
water	12:62	0:0	6	?
call	12:64	12:88	7	luaL_checkstring
arg	12:82	12:83	8	L
water	12:82	0:0	9	L
arg	12:85	12:88	8	-1
op	12:85	0:0	9	-
water	12:86	0:0	9	1
water	12:90	0:0	6	:
water	12:92	0:0	6	psz_path
decl	15:12	15:38	6	char	**ppsz_options
op	15:32	0:0	6	=
water	15:34	0:0	6	NULL
decl	16:12	16:29	6	int	i_options
op	16:26	0:0	6	=
water	16:28	0:0	6	0
call	17:12	17:33	6	lua_pushvalue
arg	17:27	17:28	7	L
water	17:27	0:0	8	L
arg	17:30	17:33	7	-3
op	17:30	0:0	8	-
water	17:31	0:0	8	3
water	17:34	0:0	6	;
call	18:12	18:68	6	vlclua_read_options
arg	18:33	18:37	7	p_sd
water	18:33	0:0	8	p_sd
arg	18:39	18:40	7	L
water	18:39	0:0	8	L
arg	18:42	18:52	7	&i_options
op	18:42	0:0	8	&
water	18:43	0:0	8	i_options
arg	18:54	18:68	7	&ppsz_options
op	18:54	0:0	8	&
water	18:55	0:0	8	ppsz_options
water	18:69	0:0	6	;
decl	19:12	22:85	6	input_item_t	*p_input
op	19:34	0:0	6	=
call	19:36	22:84	7	input_item_NewExt
arg	19:55	19:63	8	psz_path
water	19:55	0:0	9	psz_path
arg	19:65	19:74	8	psz_title
water	19:65	0:0	9	psz_title
arg	20:55	20:64	8	i_options
water	20:55	0:0	9	i_options
arg	21:55	21:82	8	(constchar**)ppsz_options
water	21:55	0:0	9	(
water	21:56	0:0	9	const
water	21:62	0:0	9	char
op	21:67	0:0	9	*
op	21:68	0:0	9	*
water	21:69	0:0	9	)
water	21:70	0:0	9	ppsz_options
arg	22:55	22:79	8	VLC_INPUT_OPTION_TRUSTED
water	22:55	0:0	9	VLC_INPUT_OPTION_TRUSTED
arg	22:81	22:84	8	-1
op	22:81	0:0	9	-
water	22:82	0:0	9	1
call	23:12	23:26	6	lua_pop
arg	23:21	23:22	7	L
water	23:21	0:0	8	L
arg	23:24	23:26	7	3
water	23:24	0:0	8	3
water	23:27	0:0	6	;
if	24:12	74:12	6	(p_input)
cond	24:16	24:16	7	p_input
water	24:16	0:0	8	p_input
stmts	25:12	74:12	7	
water	25:12	0:0	8	{
call	26:16	26:56	8	vlclua_read_meta_data
arg	26:39	26:43	9	p_sd
water	26:39	0:0	10	p_sd
arg	26:45	26:46	9	L
water	26:45	0:0	10	L
arg	26:48	26:56	9	p_input
water	26:48	0:0	10	p_input
water	26:57	0:0	8	;
call	28:16	28:63	8	vlclua_read_custom_meta_data
arg	28:46	28:50	9	p_sd
water	28:46	0:0	10	p_sd
arg	28:52	28:53	9	L
water	28:52	0:0	10	L
arg	28:55	28:63	9	p_input
water	28:55	0:0	10	p_input
water	28:64	0:0	8	;
call	30:16	30:48	8	lua_getfield
arg	30:30	30:31	9	L
water	30:30	0:0	10	L
arg	30:33	30:35	9	-1
op	30:33	0:0	10	-
water	30:34	0:0	10	1
arg	30:37	30:48	9	"duration"
water	30:37	0:0	10	"duration"
water	30:49	0:0	8	;
if	31:16	32:81	8	(lua_isnumber (L ,- 1 ))
cond	31:20	31:40	9	lua_isnumber (L ,- 1 )
call	31:20	31:40	10	lua_isnumber
arg	31:34	31:35	11	L
water	31:34	0:0	12	L
arg	31:37	31:40	11	-1
op	31:37	0:0	12	-
water	31:38	0:0	12	1
stmts	32:19	32:81	9	
call	32:19	32:80	10	input_item_SetDuration
arg	32:43	32:50	11	p_input
water	32:43	0:0	12	p_input
arg	32:52	32:80	11	(lua_tonumber(L,-1)*1e6)
water	32:52	0:0	12	(
call	32:53	32:73	12	lua_tonumber
arg	32:67	32:68	13	L
water	32:67	0:0	14	L
arg	32:70	32:73	13	-1
op	32:70	0:0	14	-
water	32:71	0:0	14	1
op	32:74	0:0	12	*
water	32:75	0:0	12	1
water	32:76	0:0	12	e6
water	32:78	0:0	12	)
water	32:81	0:0	10	;
else	33:16	34:86	8
stmts	33:21	34:86	9	
if	33:21	34:86	10	(!lua_isnil (L ,- 1 ))
cond	33:25	33:43	11	!lua_isnil (L ,- 1 )
op	33:25	0:0	12	!
call	33:26	33:43	12	lua_isnil
arg	33:37	33:38	13	L
water	33:37	0:0	14	L
arg	33:40	33:43	13	-1
op	33:40	0:0	14	-
water	33:41	0:0	14	1
stmts	34:20	34:86	11	
call	34:20	34:85	12	msg_Warn
arg	34:30	34:34	13	p_sd
water	34:30	0:0	14	p_sd
arg	34:36	34:85	13	"Item duration should be a number (in seconds)."
water	34:36	0:0	14	"Item duration should be a number (in seconds)."
water	34:86	0:0	12	;
call	35:16	35:30	8	lua_pop
arg	35:25	35:26	9	L
water	35:25	0:0	10	L
arg	35:28	35:30	9	1
water	35:28	0:0	10	1
water	35:31	0:0	8	;
call	36:16	36:48	8	lua_getfield
arg	36:30	36:31	9	L
water	36:30	0:0	10	L
arg	36:33	36:35	9	-1
op	36:33	0:0	10	-
water	36:34	0:0	10	1
arg	36:37	36:48	9	"category"
water	36:37	0:0	10	"category"
water	36:49	0:0	8	;
if	37:16	38:90	8	(lua_isstring (L ,- 1 ))
cond	37:20	37:40	9	lua_isstring (L ,- 1 )
call	37:20	37:40	10	lua_isstring
arg	37:34	37:35	11	L
water	37:34	0:0	12	L
arg	37:37	37:40	11	-1
op	37:37	0:0	12	-
water	37:38	0:0	12	1
stmts	38:20	38:90	9	
call	38:20	38:89	10	services_discovery_AddItem
arg	38:48	38:52	11	p_sd
water	38:48	0:0	12	p_sd
arg	38:54	38:61	11	p_input
water	38:54	0:0	12	p_input
arg	38:63	38:89	11	luaL_checkstring(L,-1)
call	38:63	38:87	12	luaL_checkstring
arg	38:81	38:82	13	L
water	38:81	0:0	14	L
arg	38:84	38:87	13	-1
op	38:84	0:0	14	-
water	38:85	0:0	14	1
water	38:90	0:0	10	;
else	39:16	40:69	8
stmts	40:20	40:69	9	
call	40:20	40:68	10	services_discovery_AddItem
arg	40:48	40:52	11	p_sd
water	40:48	0:0	12	p_sd
arg	40:54	40:61	11	p_input
water	40:54	0:0	12	p_input
arg	40:63	40:68	11	NULL
water	40:63	0:0	12	NULL
water	40:69	0:0	10	;
call	41:16	41:30	8	lua_pop
arg	41:25	41:26	9	L
water	41:25	0:0	10	L
arg	41:28	41:30	9	1
water	41:28	0:0	10	1
water	41:31	0:0	8	;
call	43:16	43:47	8	lua_getfield
arg	43:30	43:31	9	L
water	43:30	0:0	10	L
arg	43:33	43:35	9	-1
op	43:33	0:0	10	-
water	43:34	0:0	10	1
arg	43:37	43:47	9	"uiddata"
water	43:37	0:0	10	"uiddata"
water	43:48	0:0	8	;
if	44:16	59:16	8	(lua_isstring (L ,- 1 ))
cond	44:20	44:40	9	lua_isstring (L ,- 1 )
call	44:20	44:40	10	lua_isstring
arg	44:34	44:35	11	L
water	44:34	0:0	12	L
arg	44:37	44:40	11	-1
op	44:37	0:0	12	-
water	44:38	0:0	12	1
stmts	45:16	59:16	9	
water	45:16	0:0	10	{
decl	46:20	46:65	10	char	*s
op	46:28	0:0	10	=
call	46:30	46:64	11	strdup
arg	46:38	46:64	12	luaL_checkstring(L,-1)
call	46:38	46:62	13	luaL_checkstring
arg	46:56	46:57	14	L
water	46:56	0:0	15	L
arg	46:59	46:62	14	-1
op	46:59	0:0	15	-
water	46:60	0:0	15	1
if	47:20	58:20	10	(s)
cond	47:25	47:25	11	s
water	47:25	0:0	12	s
stmts	48:20	58:20	11	
water	48:20	0:0	12	{
decl	49:24	49:40	12	struct md5_s	md5
call	50:24	50:38	12	InitMD5
arg	50:33	50:38	13	&md5
op	50:33	0:0	14	&
water	50:34	0:0	14	md5
water	50:39	0:0	12	;
call	51:24	51:53	12	AddMD5
arg	51:32	51:36	13	&md5
op	51:32	0:0	14	&
water	51:33	0:0	14	md5
arg	51:38	51:39	13	s
water	51:38	0:0	14	s
arg	51:41	51:53	13	strlen(s)
call	51:41	51:51	14	strlen
arg	51:49	51:51	15	s
water	51:49	0:0	16	s
water	51:54	0:0	12	;
call	52:24	52:37	12	EndMD5
arg	52:32	52:37	13	&md5
op	52:32	0:0	14	&
water	52:33	0:0	14	md5
water	52:38	0:0	12	;
call	53:24	53:32	12	free
arg	53:30	53:32	13	s
water	53:30	0:0	14	s
water	53:33	0:0	12	;
water	54:24	0:0	12	s
op	54:26	0:0	12	=
call	54:28	54:47	12	psz_md5_hash
arg	54:42	54:47	13	&md5
op	54:42	0:0	14	&
water	54:43	0:0	14	md5
water	54:48	0:0	12	;
if	55:24	56:80	12	(s)
cond	55:29	55:29	13	s
water	55:29	0:0	14	s
stmts	56:28	56:80	13	
call	56:28	56:79	14	input_item_AddInfo
arg	56:48	56:55	15	p_input
water	56:48	0:0	16	p_input
arg	56:57	56:62	15	"uid"
water	56:57	0:0	16	"uid"
arg	56:64	56:69	15	"md5"
water	56:64	0:0	16	"md5"
arg	56:71	56:75	15	"%s"
water	56:71	0:0	16	"%s"
arg	56:77	56:79	15	s
water	56:77	0:0	16	s
water	56:80	0:0	14	;
call	57:24	57:32	12	free
arg	57:30	57:32	13	s
water	57:30	0:0	14	s
water	57:33	0:0	12	;
water	58:20	0:0	12	}
water	59:16	0:0	10	}
call	60:16	60:30	8	lua_pop
arg	60:25	60:26	9	L
water	60:25	0:0	10	L
arg	60:28	60:30	9	1
water	60:28	0:0	10	1
water	60:31	0:0	8	;
decl	61:16	62:85	8	input_item_t	**udata
op	61:37	0:0	8	=
water	61:39	0:0	8	(
water	61:40	0:0	8	input_item_t
op	61:53	0:0	8	*
op	61:54	0:0	8	*
water	61:55	0:0	8	)
call	62:39	62:84	9	lua_newuserdata
arg	62:56	62:57	10	L
water	62:56	0:0	11	L
arg	62:59	62:84	10	sizeof(input_item_t*)
op	62:59	0:0	11	sizeof
water	62:65	0:0	11	(
water	62:67	0:0	11	input_item_t
op	62:80	0:0	11	*
water	62:82	0:0	11	)
op	63:16	0:0	8	*
water	63:17	0:0	8	udata
op	63:23	0:0	8	=
water	63:25	0:0	8	p_input
water	63:32	0:0	8	;
if	64:16	71:16	8	(luaL_newmetatable (L ,"input_item_t" ))
cond	64:20	64:57	9	luaL_newmetatable (L ,"input_item_t" )
call	64:20	64:57	10	luaL_newmetatable
arg	64:39	64:40	11	L
water	64:39	0:0	12	L
arg	64:42	64:57	11	"input_item_t"
water	64:42	0:0	12	"input_item_t"
stmts	65:16	71:16	9	
water	65:16	0:0	10	{
call	66:20	66:36	10	lua_newtable
arg	66:34	66:36	11	L
water	66:34	0:0	12	L
water	66:37	0:0	10	;
call	67:20	67:60	10	luaL_register
arg	67:35	67:36	11	L
water	67:35	0:0	12	L
arg	67:38	67:42	11	NULL
water	67:38	0:0	12	NULL
arg	67:44	67:60	11	vlclua_item_reg
water	67:44	0:0	12	vlclua_item_reg
water	67:61	0:0	10	;
call	68:20	68:51	10	lua_setfield
arg	68:34	68:35	11	L
water	68:34	0:0	12	L
arg	68:37	68:39	11	-2
op	68:37	0:0	12	-
water	68:38	0:0	12	2
arg	68:41	68:51	11	"__index"
water	68:41	0:0	12	"__index"
water	68:52	0:0	10	;
call	69:20	69:64	10	lua_pushliteral
arg	69:37	69:38	11	L
water	69:37	0:0	12	L
arg	69:40	69:64	11	"none of your business"
water	69:40	0:0	12	"none of your business"
water	69:65	0:0	10	;
call	70:20	70:55	10	lua_setfield
arg	70:34	70:35	11	L
water	70:34	0:0	12	L
arg	70:37	70:39	11	-2
op	70:37	0:0	12	-
water	70:38	0:0	12	2
arg	70:41	70:55	11	"__metatable"
water	70:41	0:0	12	"__metatable"
water	70:56	0:0	10	;
water	71:16	0:0	10	}
call	72:16	72:40	8	lua_setmetatable
arg	72:34	72:35	9	L
water	72:34	0:0	10	L
arg	72:37	72:40	9	-2
op	72:37	0:0	10	-
water	72:38	0:0	10	2
water	72:41	0:0	8	;
call	73:16	73:39	8	vlc_gc_decref
arg	73:31	73:39	9	p_input
water	73:31	0:0	10	p_input
water	73:40	0:0	8	;
water	74:12	0:0	8	}
while	75:12	76:49	6	(i_options > 0)
cond	75:19	75:31	7	i_options > 0
water	75:19	0:0	8	i_options
op	75:29	0:0	8	>
water	75:31	0:0	8	0
stmts	76:16	76:49	7	
call	76:16	76:48	8	free
arg	76:22	76:48	9	ppsz_options[--i_options]
water	76:22	0:0	10	ppsz_options
op	76:34	0:0	10	[
op	76:35	0:0	10	--
water	76:37	0:0	10	i_options
op	76:46	0:0	10	]
water	76:49	0:0	8	;
call	77:12	77:31	6	free
arg	77:18	77:31	7	ppsz_options
water	77:18	0:0	8	ppsz_options
water	77:32	0:0	6	;
water	78:8	0:0	6	}
else	79:8	80:85	4
stmts	80:12	80:85	5	
call	80:12	80:84	6	msg_Err
arg	80:21	80:25	7	p_sd
water	80:21	0:0	8	p_sd
arg	80:27	80:84	7	"vlc.sd.add_item: the \"path\" parameter can't be empty"
water	80:27	0:0	8	"vlc.sd.add_item: the \"path\" parameter can't be empty"
water	80:85	0:0	6	;
water	81:4	0:0	4	}
else	82:4	83:59	2
stmts	83:8	83:59	3	
call	83:8	83:58	4	msg_Err
arg	83:17	83:21	5	p_sd
water	83:17	0:0	6	p_sd
arg	83:23	83:58	5	"Error parsing add_item arguments"
water	83:23	0:0	6	"Error parsing add_item arguments"
water	83:59	0:0	4	;
return	84:4	84:12	2	1
water	84:11	0:0	3	1

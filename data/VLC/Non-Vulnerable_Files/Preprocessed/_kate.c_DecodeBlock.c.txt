func	2:0	37:0	0	static subpicture_t *	DecodeBlock
params	2:32	0:0	1	
param	2:34	2:50	2	decoder_t *	p_dec
param	2:52	2:71	2	block_t * *	pp_block
stmnts	0:0	36:48	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:20	2	block_t	*p_block
decl	6:4	6:18	2	kate_packet	kp
if	7:4	8:19	2	(! pp_block || ! * pp_block)
cond	7:8	7:23	3	! pp_block || ! * pp_block
op	7:8	0:0	4	!
water	7:9	0:0	4	pp_block
op	7:18	0:0	4	||
op	7:21	0:0	4	!
op	7:22	0:0	4	*
water	7:23	0:0	4	pp_block
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	2	p_block
op	9:12	0:0	2	=
op	9:14	0:0	2	*
water	9:15	0:0	2	pp_block
water	9:23	0:0	2	;
if	10:4	24:4	2	(p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	10:8	10:73	3	p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	10:8	0:0	4	p_block
op	10:15	0:0	4	->
water	10:17	0:0	4	i_flags
op	10:25	0:0	4	&
water	10:27	0:0	4	(
water	10:28	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	10:52	0:0	4	|
water	10:53	0:0	4	BLOCK_FLAG_CORRUPTED
water	10:73	0:0	4	)
stmts	11:4	24:4	3	
water	11:4	0:0	4	{
if	13:8	19:8	4	(p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY)
cond	13:12	13:31	5	p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY
water	13:12	0:0	6	p_block
op	13:19	0:0	6	->
water	13:21	0:0	6	i_flags
op	13:29	0:0	6	&
water	13:31	0:0	6	BLOCK_FLAG_DISCONTINUITY
stmts	14:8	19:8	5	
water	14:8	0:0	6	{
call	16:12	16:41	6	vlc_mutex_lock
arg	16:28	16:41	7	&p_sys->lock
op	16:28	0:0	8	&
water	16:29	0:0	8	p_sys
op	16:34	0:0	8	->
water	16:36	0:0	8	lock
water	16:42	0:0	6	;
call	17:12	17:48	6	tiger_renderer_seek
arg	17:33	17:44	7	p_sys->p_tr
water	17:33	0:0	8	p_sys
op	17:38	0:0	8	->
water	17:40	0:0	8	p_tr
arg	17:46	17:48	7	0
water	17:46	0:0	8	0
water	17:49	0:0	6	;
call	18:12	18:43	6	vlc_mutex_unlock
arg	18:30	18:43	7	&p_sys->lock
op	18:30	0:0	8	&
water	18:31	0:0	8	p_sys
op	18:36	0:0	8	->
water	18:38	0:0	8	lock
water	18:44	0:0	6	;
water	19:8	0:0	6	}
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	i_max_stop
op	21:26	0:0	4	=
water	21:28	0:0	4	VLC_TS_INVALID
water	21:42	0:0	4	;
call	22:8	22:31	4	block_Release
arg	22:23	22:31	5	p_block
water	22:23	0:0	6	p_block
water	22:32	0:0	4	;
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
water	24:4	0:0	4	}
call	26:4	26:62	2	kate_packet_wrap
arg	26:21	26:24	3	&kp
op	26:21	0:0	4	&
water	26:22	0:0	4	kp
arg	26:26	26:43	3	p_block->i_buffer
water	26:26	0:0	4	p_block
op	26:33	0:0	4	->
water	26:35	0:0	4	i_buffer
arg	26:45	26:62	3	p_block->p_buffer
water	26:45	0:0	4	p_block
op	26:52	0:0	4	->
water	26:54	0:0	4	p_buffer
water	26:63	0:0	2	;
if	27:4	35:4	2	(! p_sys -> b_has_headers)
cond	27:8	27:16	3	! p_sys -> b_has_headers
op	27:8	0:0	4	!
water	27:9	0:0	4	p_sys
op	27:14	0:0	4	->
water	27:16	0:0	4	b_has_headers
stmts	28:4	35:4	3	
water	28:4	0:0	4	{
if	29:8	33:8	4	(ProcessHeaders (p_dec ))
cond	29:12	29:34	5	ProcessHeaders (p_dec )
call	29:12	29:34	6	ProcessHeaders
arg	29:28	29:34	7	p_dec
water	29:28	0:0	8	p_dec
stmts	30:8	33:8	5	
water	30:8	0:0	6	{
call	31:12	31:37	6	block_Release
arg	31:27	31:37	7	*pp_block
op	31:27	0:0	8	*
water	31:28	0:0	8	pp_block
water	31:38	0:0	6	;
return	32:12	32:23	6	NULL
water	32:19	0:0	7	NULL
water	33:8	0:0	6	}
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	b_has_headers
op	34:29	0:0	4	=
water	34:31	0:0	4	true
water	34:35	0:0	4	;
water	35:4	0:0	4	}
return	36:4	36:48	2	ProcessPacket(p_dec,&kp,pp_block)
call	36:11	36:47	3	ProcessPacket
arg	36:26	36:31	4	p_dec
water	36:26	0:0	5	p_dec
arg	36:33	36:36	4	&kp
op	36:33	0:0	5	&
water	36:34	0:0	5	kp
arg	36:38	36:47	4	pp_block
water	36:38	0:0	5	pp_block

func	2:0	221:0	0	static inline int	PESHeader
params	2:27	0:0	1	
param	2:29	2:43	2	uint8_t *	p_hdr
param	2:45	2:58	2	mtime_t	i_pts
param	2:60	2:73	2	mtime_t	i_dts
param	3:29	3:42	2	int	i_es_size
param	3:44	3:62	2	es_format_t *	p_fmt
param	4:29	4:44	2	int	i_stream_id
param	4:46	4:58	2	bool	b_mpeg2
param	5:29	5:50	2	bool	b_data_alignment
param	5:52	5:70	2	int	i_header_size
stmnts	0:0	220:4	1	
decl	7:4	7:22	2	bits_buffer_t	bits
decl	8:4	8:23	2	int	i_extra
op	8:20	0:0	2	=
water	8:22	0:0	2	0
decl	9:4	9:25	2	int	i_private_id
op	9:21	0:0	2	=
op	9:23	0:0	2	-
water	9:24	0:0	2	1
decl	10:4	10:33	2	int	i_stream_id_extension
op	10:30	0:0	2	=
water	10:32	0:0	2	0
if	12:4	22:4	2	(( i_stream_id >> 8 ) == PES_PRIVATE_STREAM_1)
cond	12:8	12:32	3	( i_stream_id >> 8 ) == PES_PRIVATE_STREAM_1
water	12:8	0:0	4	(
water	12:10	0:0	4	i_stream_id
op	12:22	0:0	4	>>
water	12:25	0:0	4	8
water	12:27	0:0	4	)
op	12:29	0:0	4	==
water	12:32	0:0	4	PES_PRIVATE_STREAM_1
stmts	13:4	22:4	3	
water	13:4	0:0	4	{
water	14:8	0:0	4	i_private_id
op	14:21	0:0	4	=
water	14:23	0:0	4	i_stream_id
op	14:35	0:0	4	&
water	14:37	0:0	4	0
water	14:38	0:0	4	xff
water	14:41	0:0	4	;
water	15:8	0:0	4	i_stream_id
op	15:20	0:0	4	=
water	15:22	0:0	4	PES_PRIVATE_STREAM_1
water	15:42	0:0	4	;
water	19:8	0:0	4	i_extra
op	19:16	0:0	4	=
water	19:18	0:0	4	1
water	19:19	0:0	4	;
if	20:8	21:24	4	(( i_private_id & 0 xf0 ) == 0 x80)
cond	20:12	20:40	5	( i_private_id & 0 xf0 ) == 0 x80
water	20:12	0:0	6	(
water	20:14	0:0	6	i_private_id
op	20:27	0:0	6	&
water	20:29	0:0	6	0
water	20:30	0:0	6	xf0
water	20:34	0:0	6	)
op	20:36	0:0	6	==
water	20:39	0:0	6	0
water	20:40	0:0	6	x80
stmts	21:12	21:24	5	
water	21:12	0:0	6	i_extra
op	21:20	0:0	6	+=
water	21:23	0:0	6	3
water	21:24	0:0	6	;
water	22:4	0:0	4	}
else	23:4	30:4	2
stmts	23:9	30:4	3	
if	23:9	30:4	4	(( i_stream_id >> 8 ) == PES_EXTENDED_STREAM_ID)
cond	23:13	23:37	5	( i_stream_id >> 8 ) == PES_EXTENDED_STREAM_ID
water	23:13	0:0	6	(
water	23:15	0:0	6	i_stream_id
op	23:27	0:0	6	>>
water	23:30	0:0	6	8
water	23:32	0:0	6	)
op	23:34	0:0	6	==
water	23:37	0:0	6	PES_EXTENDED_STREAM_ID
stmts	24:4	30:4	5	
water	24:4	0:0	6	{
water	28:8	0:0	6	i_stream_id_extension
op	28:30	0:0	6	=
water	28:32	0:0	6	i_stream_id
op	28:44	0:0	6	&
water	28:46	0:0	6	0
water	28:47	0:0	6	x7f
water	28:50	0:0	6	;
water	29:8	0:0	6	i_stream_id
op	29:20	0:0	6	=
water	29:22	0:0	6	PES_EXTENDED_STREAM_ID
water	29:44	0:0	6	;
water	30:4	0:0	6	}
call	31:4	31:37	2	bits_initwrite
arg	31:20	31:25	3	&bits
op	31:20	0:0	4	&
water	31:21	0:0	4	bits
arg	31:27	31:29	3	50
water	31:27	0:0	4	50
arg	31:31	31:37	3	p_hdr
water	31:31	0:0	4	p_hdr
water	31:38	0:0	2	;
call	33:4	33:32	2	bits_write
arg	33:16	33:21	3	&bits
op	33:16	0:0	4	&
water	33:17	0:0	4	bits
arg	33:23	33:25	3	24
water	33:23	0:0	4	24
arg	33:27	33:32	3	0x01
water	33:27	0:0	4	0
water	33:28	0:0	4	x01
water	33:33	0:0	2	;
call	34:4	34:38	2	bits_write
arg	34:16	34:21	3	&bits
op	34:16	0:0	4	&
water	34:17	0:0	4	bits
arg	34:23	34:24	3	8
water	34:23	0:0	4	8
arg	34:26	34:38	3	i_stream_id
water	34:26	0:0	4	i_stream_id
water	34:39	0:0	2	;
switch	35:4	220:4	2	(i_stream_id)
cond	35:12	35:12	3	i_stream_id
water	35:12	0:0	4	i_stream_id
stmts	36:4	220:4	3	
water	36:4	0:0	4	{
label	37:8	37:35	4	case PES_PROGRAM_STREAM_MAP :
label	38:8	38:24	4	case PES_PADDING :
label	39:8	39:33	4	case PES_PRIVATE_STREAM_2 :
label	40:8	40:20	4	case PES_ECM :
label	41:8	41:20	4	case PES_EMM :
label	42:8	42:41	4	case PES_PROGRAM_STREAM_DIRECTORY :
label	43:8	43:29	4	case PES_DSMCC_STREAM :
label	44:8	44:43	4	case PES_ITU_T_H222_1_TYPE_E_STREAM :
call	46:12	46:45	4	bits_write
arg	46:24	46:29	5	&bits
op	46:24	0:0	6	&
water	46:25	0:0	6	bits
arg	46:31	46:33	5	16
water	46:31	0:0	6	16
arg	46:35	46:45	5	i_es_size
water	46:35	0:0	6	i_es_size
water	46:46	0:0	4	;
call	47:12	47:30	4	bits_align
arg	47:24	47:30	5	&bits
op	47:24	0:0	6	&
water	47:25	0:0	6	bits
water	47:31	0:0	4	;
return	48:12	48:33	4	(bits.i_data)
water	48:18	0:0	5	(
water	48:20	0:0	5	bits
op	48:24	0:0	5	.
water	48:25	0:0	5	i_data
water	48:32	0:0	5	)
label	49:8	49:15	4	default :
if	51:12	158:12	4	(b_mpeg2)
cond	51:16	51:16	5	b_mpeg2
water	51:16	0:0	6	b_mpeg2
stmts	52:12	158:12	5	
water	52:12	0:0	6	{
decl	53:16	53:29	6	int	i_pts_dts
decl	54:16	54:49	6	bool	b_pes_extension_flag
op	54:42	0:0	6	=
water	54:44	0:0	6	false
if	55:16	64:16	6	(i_pts > 0 && i_dts > 0 && ( i_pts != i_dts || ( p_fmt -> i_cat == VIDEO_ES && p_fmt -> i_codec != VLC_CODEC_MPGV && p_fmt -> i_codec != VLC_CODEC_MP2V && p_fmt -> i_codec != VLC_CODEC_MP1V ) ))
cond	55:20	60:24	7	i_pts > 0 && i_dts > 0 && ( i_pts != i_dts || ( p_fmt -> i_cat == VIDEO_ES && p_fmt -> i_codec != VLC_CODEC_MPGV && p_fmt -> i_codec != VLC_CODEC_MP2V && p_fmt -> i_codec != VLC_CODEC_MP1V ) )
water	55:20	0:0	8	i_pts
op	55:26	0:0	8	>
water	55:28	0:0	8	0
op	55:30	0:0	8	&&
water	55:33	0:0	8	i_dts
op	55:39	0:0	8	>
water	55:41	0:0	8	0
op	55:43	0:0	8	&&
water	56:20	0:0	8	(
water	56:22	0:0	8	i_pts
op	56:28	0:0	8	!=
water	56:31	0:0	8	i_dts
op	56:37	0:0	8	||
water	56:40	0:0	8	(
water	56:42	0:0	8	p_fmt
op	56:47	0:0	8	->
water	56:49	0:0	8	i_cat
op	56:55	0:0	8	==
water	56:58	0:0	8	VIDEO_ES
op	56:67	0:0	8	&&
water	57:22	0:0	8	p_fmt
op	57:27	0:0	8	->
water	57:29	0:0	8	i_codec
op	57:37	0:0	8	!=
water	57:40	0:0	8	VLC_CODEC_MPGV
op	57:55	0:0	8	&&
water	58:22	0:0	8	p_fmt
op	58:27	0:0	8	->
water	58:29	0:0	8	i_codec
op	58:37	0:0	8	!=
water	58:40	0:0	8	VLC_CODEC_MP2V
op	58:55	0:0	8	&&
water	59:22	0:0	8	p_fmt
op	59:27	0:0	8	->
water	59:29	0:0	8	i_codec
op	59:37	0:0	8	!=
water	59:40	0:0	8	VLC_CODEC_MP1V
water	60:22	0:0	8	)
water	60:24	0:0	8	)
stmts	61:16	64:16	7	
water	61:16	0:0	8	{
water	62:20	0:0	8	i_pts_dts
op	62:30	0:0	8	=
water	62:32	0:0	8	0
water	62:33	0:0	8	x03
water	62:36	0:0	8	;
if	63:20	63:61	8	(! i_header_size)
cond	63:25	63:26	9	! i_header_size
op	63:25	0:0	10	!
water	63:26	0:0	10	i_header_size
stmts	63:42	63:61	9	
water	63:42	0:0	10	i_header_size
op	63:56	0:0	10	=
water	63:58	0:0	10	0
water	63:59	0:0	10	xa
water	63:61	0:0	10	;
water	64:16	0:0	8	}
else	65:16	69:16	6
stmts	65:21	69:16	7	
if	65:21	69:16	8	(i_pts > 0)
cond	65:25	65:33	9	i_pts > 0
water	65:25	0:0	10	i_pts
op	65:31	0:0	10	>
water	65:33	0:0	10	0
stmts	66:16	69:16	9	
water	66:16	0:0	10	{
water	67:20	0:0	10	i_pts_dts
op	67:30	0:0	10	=
water	67:32	0:0	10	0
water	67:33	0:0	10	x02
water	67:36	0:0	10	;
if	68:20	68:61	10	(! i_header_size)
cond	68:25	68:26	11	! i_header_size
op	68:25	0:0	12	!
water	68:26	0:0	12	i_header_size
stmts	68:42	68:61	11	
water	68:42	0:0	12	i_header_size
op	68:56	0:0	12	=
water	68:58	0:0	12	0
water	68:59	0:0	12	x5
water	68:61	0:0	12	;
water	69:16	0:0	10	}
else	70:16	74:16	6
stmts	71:16	74:16	7	
water	71:16	0:0	8	{
water	72:20	0:0	8	i_pts_dts
op	72:30	0:0	8	=
water	72:32	0:0	8	0
water	72:33	0:0	8	x00
water	72:36	0:0	8	;
if	73:20	73:61	8	(! i_header_size)
cond	73:25	73:26	9	! i_header_size
op	73:25	0:0	10	!
water	73:26	0:0	10	i_header_size
stmts	73:42	73:61	9	
water	73:42	0:0	10	i_header_size
op	73:56	0:0	10	=
water	73:58	0:0	10	0
water	73:59	0:0	10	x0
water	73:61	0:0	10	;
water	74:16	0:0	8	}
if	75:16	79:16	6	(i_stream_id == PES_EXTENDED_STREAM_ID)
cond	75:20	75:35	7	i_stream_id == PES_EXTENDED_STREAM_ID
water	75:20	0:0	8	i_stream_id
op	75:32	0:0	8	==
water	75:35	0:0	8	PES_EXTENDED_STREAM_ID
stmts	76:16	79:16	7	
water	76:16	0:0	8	{
water	77:20	0:0	8	b_pes_extension_flag
op	77:41	0:0	8	=
water	77:43	0:0	8	true
water	77:47	0:0	8	;
water	78:20	0:0	8	i_header_size
op	78:34	0:0	8	+=
water	78:37	0:0	8	1
op	78:39	0:0	8	+
water	78:41	0:0	8	1
water	78:42	0:0	8	;
water	79:16	0:0	8	}
if	80:16	83:16	6	(b_pes_extension_flag)
cond	80:20	80:20	7	b_pes_extension_flag
water	80:20	0:0	8	b_pes_extension_flag
stmts	81:16	83:16	7	
water	81:16	0:0	8	{
water	82:20	0:0	8	i_header_size
op	82:34	0:0	8	+=
water	82:37	0:0	8	1
water	82:38	0:0	8	;
water	83:16	0:0	8	}
if	86:16	87:46	6	(i_es_size > PES_PAYLOAD_SIZE_MAX)
cond	86:20	86:32	7	i_es_size > PES_PAYLOAD_SIZE_MAX
water	86:20	0:0	8	i_es_size
op	86:30	0:0	8	>
water	86:32	0:0	8	PES_PAYLOAD_SIZE_MAX
stmts	87:20	87:46	7	
call	87:20	87:45	8	bits_write
arg	87:32	87:37	9	&bits
op	87:32	0:0	10	&
water	87:33	0:0	10	bits
arg	87:39	87:41	9	16
water	87:39	0:0	10	16
arg	87:43	87:45	9	0
water	87:43	0:0	10	0
water	87:46	0:0	8	;
else	88:16	90:50	6
stmts	89:20	90:50	7	
call	89:20	90:49	8	bits_write
arg	89:32	89:37	9	&bits
op	89:32	0:0	10	&
water	89:33	0:0	10	bits
arg	89:39	89:41	9	16
water	89:39	0:0	10	16
arg	89:43	90:49	9	i_es_size+i_extra+3+i_header_size
water	89:43	0:0	10	i_es_size
op	89:53	0:0	10	+
water	89:55	0:0	10	i_extra
op	89:63	0:0	10	+
water	89:65	0:0	10	3
op	90:33	0:0	10	+
water	90:35	0:0	10	i_header_size
water	90:50	0:0	8	;
call	91:16	91:43	6	bits_write
arg	91:28	91:33	7	&bits
op	91:28	0:0	8	&
water	91:29	0:0	8	bits
arg	91:35	91:36	7	2
water	91:35	0:0	8	2
arg	91:38	91:43	7	0x02
water	91:38	0:0	8	0
water	91:39	0:0	8	x02
water	91:44	0:0	6	;
call	92:16	92:43	6	bits_write
arg	92:28	92:33	7	&bits
op	92:28	0:0	8	&
water	92:29	0:0	8	bits
arg	92:35	92:36	7	2
water	92:35	0:0	8	2
arg	92:38	92:43	7	0x00
water	92:38	0:0	8	0
water	92:39	0:0	8	x00
water	92:44	0:0	6	;
call	93:16	93:43	6	bits_write
arg	93:28	93:33	7	&bits
op	93:28	0:0	8	&
water	93:29	0:0	8	bits
arg	93:35	93:36	7	1
water	93:35	0:0	8	1
arg	93:38	93:43	7	0x00
water	93:38	0:0	8	0
water	93:39	0:0	8	x00
water	93:44	0:0	6	;
call	94:16	94:55	6	bits_write
arg	94:28	94:33	7	&bits
op	94:28	0:0	8	&
water	94:29	0:0	8	bits
arg	94:35	94:36	7	1
water	94:35	0:0	8	1
arg	94:38	94:55	7	b_data_alignment
water	94:38	0:0	8	b_data_alignment
water	94:56	0:0	6	;
call	95:16	95:43	6	bits_write
arg	95:28	95:33	7	&bits
op	95:28	0:0	8	&
water	95:29	0:0	8	bits
arg	95:35	95:36	7	1
water	95:35	0:0	8	1
arg	95:38	95:43	7	0x00
water	95:38	0:0	8	0
water	95:39	0:0	8	x00
water	95:44	0:0	6	;
call	96:16	96:43	6	bits_write
arg	96:28	96:33	7	&bits
op	96:28	0:0	8	&
water	96:29	0:0	8	bits
arg	96:35	96:36	7	1
water	96:35	0:0	8	1
arg	96:38	96:43	7	0x00
water	96:38	0:0	8	0
water	96:39	0:0	8	x00
water	96:44	0:0	6	;
call	97:16	97:48	6	bits_write
arg	97:28	97:33	7	&bits
op	97:28	0:0	8	&
water	97:29	0:0	8	bits
arg	97:35	97:36	7	2
water	97:35	0:0	8	2
arg	97:38	97:48	7	i_pts_dts
water	97:38	0:0	8	i_pts_dts
water	97:49	0:0	6	;
call	98:16	98:43	6	bits_write
arg	98:28	98:33	7	&bits
op	98:28	0:0	8	&
water	98:29	0:0	8	bits
arg	98:35	98:36	7	1
water	98:35	0:0	8	1
arg	98:38	98:43	7	0x00
water	98:38	0:0	8	0
water	98:39	0:0	8	x00
water	98:44	0:0	6	;
call	99:16	99:43	6	bits_write
arg	99:28	99:33	7	&bits
op	99:28	0:0	8	&
water	99:29	0:0	8	bits
arg	99:35	99:36	7	1
water	99:35	0:0	8	1
arg	99:38	99:43	7	0x00
water	99:38	0:0	8	0
water	99:39	0:0	8	x00
water	99:44	0:0	6	;
call	100:16	100:43	6	bits_write
arg	100:28	100:33	7	&bits
op	100:28	0:0	8	&
water	100:29	0:0	8	bits
arg	100:35	100:36	7	1
water	100:35	0:0	8	1
arg	100:38	100:43	7	0x00
water	100:38	0:0	8	0
water	100:39	0:0	8	x00
water	100:44	0:0	6	;
call	101:16	101:43	6	bits_write
arg	101:28	101:33	7	&bits
op	101:28	0:0	8	&
water	101:29	0:0	8	bits
arg	101:35	101:36	7	1
water	101:35	0:0	8	1
arg	101:38	101:43	7	0x00
water	101:38	0:0	8	0
water	101:39	0:0	8	x00
water	101:44	0:0	6	;
call	102:16	102:43	6	bits_write
arg	102:28	102:33	7	&bits
op	102:28	0:0	8	&
water	102:29	0:0	8	bits
arg	102:35	102:36	7	1
water	102:35	0:0	8	1
arg	102:38	102:43	7	0x00
water	102:38	0:0	8	0
water	102:39	0:0	8	x00
water	102:44	0:0	6	;
call	103:16	103:59	6	bits_write
arg	103:28	103:33	7	&bits
op	103:28	0:0	8	&
water	103:29	0:0	8	bits
arg	103:35	103:36	7	1
water	103:35	0:0	8	1
arg	103:38	103:59	7	b_pes_extension_flag
water	103:38	0:0	8	b_pes_extension_flag
water	103:60	0:0	6	;
call	104:16	104:52	6	bits_write
arg	104:28	104:33	7	&bits
op	104:28	0:0	8	&
water	104:29	0:0	8	bits
arg	104:35	104:36	7	8
water	104:35	0:0	8	8
arg	104:38	104:52	7	i_header_size
water	104:38	0:0	8	i_header_size
water	104:53	0:0	6	;
if	106:16	116:16	6	(i_pts_dts & 0 x02)
cond	106:20	106:33	7	i_pts_dts & 0 x02
water	106:20	0:0	8	i_pts_dts
op	106:30	0:0	8	&
water	106:32	0:0	8	0
water	106:33	0:0	8	x02
stmts	107:16	116:16	7	
water	107:16	0:0	8	{
call	108:20	108:52	8	bits_write
arg	108:32	108:37	9	&bits
op	108:32	0:0	10	&
water	108:33	0:0	10	bits
arg	108:39	108:40	9	4
water	108:39	0:0	10	4
arg	108:42	108:52	9	i_pts_dts
water	108:42	0:0	10	i_pts_dts
water	108:53	0:0	8	;
call	109:20	109:54	8	bits_write
arg	109:32	109:37	9	&bits
op	109:32	0:0	10	&
water	109:33	0:0	10	bits
arg	109:39	109:40	9	3
water	109:39	0:0	10	3
arg	109:42	109:54	9	i_pts>>30
water	109:42	0:0	10	i_pts
op	109:48	0:0	10	>>
water	109:51	0:0	10	30
water	109:55	0:0	8	;
call	110:20	110:47	8	bits_write
arg	110:32	110:37	9	&bits
op	110:32	0:0	10	&
water	110:33	0:0	10	bits
arg	110:39	110:40	9	1
water	110:39	0:0	10	1
arg	110:42	110:47	9	0x01
water	110:42	0:0	10	0
water	110:43	0:0	10	x01
water	110:48	0:0	8	;
call	111:20	111:55	8	bits_write
arg	111:32	111:37	9	&bits
op	111:32	0:0	10	&
water	111:33	0:0	10	bits
arg	111:39	111:41	9	15
water	111:39	0:0	10	15
arg	111:43	111:55	9	i_pts>>15
water	111:43	0:0	10	i_pts
op	111:49	0:0	10	>>
water	111:52	0:0	10	15
water	111:56	0:0	8	;
call	112:20	112:47	8	bits_write
arg	112:32	112:37	9	&bits
op	112:32	0:0	10	&
water	112:33	0:0	10	bits
arg	112:39	112:40	9	1
water	112:39	0:0	10	1
arg	112:42	112:47	9	0x01
water	112:42	0:0	10	0
water	112:43	0:0	10	x01
water	112:48	0:0	8	;
call	113:20	113:49	8	bits_write
arg	113:32	113:37	9	&bits
op	113:32	0:0	10	&
water	113:33	0:0	10	bits
arg	113:39	113:41	9	15
water	113:39	0:0	10	15
arg	113:43	113:49	9	i_pts
water	113:43	0:0	10	i_pts
water	113:50	0:0	8	;
call	114:20	114:47	8	bits_write
arg	114:32	114:37	9	&bits
op	114:32	0:0	10	&
water	114:33	0:0	10	bits
arg	114:39	114:40	9	1
water	114:39	0:0	10	1
arg	114:42	114:47	9	0x01
water	114:42	0:0	10	0
water	114:43	0:0	10	x01
water	114:48	0:0	8	;
water	115:20	0:0	8	i_header_size
op	115:34	0:0	8	-=
water	115:37	0:0	8	0
water	115:38	0:0	8	x5
water	115:40	0:0	8	;
water	116:16	0:0	8	}
if	118:16	128:16	6	(i_pts_dts & 0 x01)
cond	118:20	118:33	7	i_pts_dts & 0 x01
water	118:20	0:0	8	i_pts_dts
op	118:30	0:0	8	&
water	118:32	0:0	8	0
water	118:33	0:0	8	x01
stmts	119:16	128:16	7	
water	119:16	0:0	8	{
call	120:20	120:47	8	bits_write
arg	120:32	120:37	9	&bits
op	120:32	0:0	10	&
water	120:33	0:0	10	bits
arg	120:39	120:40	9	4
water	120:39	0:0	10	4
arg	120:42	120:47	9	0x01
water	120:42	0:0	10	0
water	120:43	0:0	10	x01
water	120:48	0:0	8	;
call	121:20	121:54	8	bits_write
arg	121:32	121:37	9	&bits
op	121:32	0:0	10	&
water	121:33	0:0	10	bits
arg	121:39	121:40	9	3
water	121:39	0:0	10	3
arg	121:42	121:54	9	i_dts>>30
water	121:42	0:0	10	i_dts
op	121:48	0:0	10	>>
water	121:51	0:0	10	30
water	121:55	0:0	8	;
call	122:20	122:47	8	bits_write
arg	122:32	122:37	9	&bits
op	122:32	0:0	10	&
water	122:33	0:0	10	bits
arg	122:39	122:40	9	1
water	122:39	0:0	10	1
arg	122:42	122:47	9	0x01
water	122:42	0:0	10	0
water	122:43	0:0	10	x01
water	122:48	0:0	8	;
call	123:20	123:55	8	bits_write
arg	123:32	123:37	9	&bits
op	123:32	0:0	10	&
water	123:33	0:0	10	bits
arg	123:39	123:41	9	15
water	123:39	0:0	10	15
arg	123:43	123:55	9	i_dts>>15
water	123:43	0:0	10	i_dts
op	123:49	0:0	10	>>
water	123:52	0:0	10	15
water	123:56	0:0	8	;
call	124:20	124:47	8	bits_write
arg	124:32	124:37	9	&bits
op	124:32	0:0	10	&
water	124:33	0:0	10	bits
arg	124:39	124:40	9	1
water	124:39	0:0	10	1
arg	124:42	124:47	9	0x01
water	124:42	0:0	10	0
water	124:43	0:0	10	x01
water	124:48	0:0	8	;
call	125:20	125:49	8	bits_write
arg	125:32	125:37	9	&bits
op	125:32	0:0	10	&
water	125:33	0:0	10	bits
arg	125:39	125:41	9	15
water	125:39	0:0	10	15
arg	125:43	125:49	9	i_dts
water	125:43	0:0	10	i_dts
water	125:50	0:0	8	;
call	126:20	126:47	8	bits_write
arg	126:32	126:37	9	&bits
op	126:32	0:0	10	&
water	126:33	0:0	10	bits
arg	126:39	126:40	9	1
water	126:39	0:0	10	1
arg	126:42	126:47	9	0x01
water	126:42	0:0	10	0
water	126:43	0:0	10	x01
water	126:48	0:0	8	;
water	127:20	0:0	8	i_header_size
op	127:34	0:0	8	-=
water	127:37	0:0	8	0
water	127:38	0:0	8	x5
water	127:40	0:0	8	;
water	128:16	0:0	8	}
if	129:16	152:16	6	(b_pes_extension_flag)
cond	129:20	129:20	7	b_pes_extension_flag
water	129:20	0:0	8	b_pes_extension_flag
stmts	130:16	152:16	7	
water	130:16	0:0	8	{
call	131:20	131:47	8	bits_write
arg	131:32	131:37	9	&bits
op	131:32	0:0	10	&
water	131:33	0:0	10	bits
arg	131:39	131:40	9	1
water	131:39	0:0	10	1
arg	131:42	131:47	9	0x00
water	131:42	0:0	10	0
water	131:43	0:0	10	x00
water	131:48	0:0	8	;
call	132:20	132:47	8	bits_write
arg	132:32	132:37	9	&bits
op	132:32	0:0	10	&
water	132:33	0:0	10	bits
arg	132:39	132:40	9	1
water	132:39	0:0	10	1
arg	132:42	132:47	9	0x00
water	132:42	0:0	10	0
water	132:43	0:0	10	x00
water	132:48	0:0	8	;
call	133:20	133:47	8	bits_write
arg	133:32	133:37	9	&bits
op	133:32	0:0	10	&
water	133:33	0:0	10	bits
arg	133:39	133:40	9	1
water	133:39	0:0	10	1
arg	133:42	133:47	9	0x00
water	133:42	0:0	10	0
water	133:43	0:0	10	x00
water	133:48	0:0	8	;
call	134:20	134:47	8	bits_write
arg	134:32	134:37	9	&bits
op	134:32	0:0	10	&
water	134:33	0:0	10	bits
arg	134:39	134:40	9	1
water	134:39	0:0	10	1
arg	134:42	134:47	9	0x00
water	134:42	0:0	10	0
water	134:43	0:0	10	x00
water	134:48	0:0	8	;
call	135:20	135:47	8	bits_write
arg	135:32	135:37	9	&bits
op	135:32	0:0	10	&
water	135:33	0:0	10	bits
arg	135:39	135:40	9	3
water	135:39	0:0	10	3
arg	135:42	135:47	9	0x07
water	135:42	0:0	10	0
water	135:43	0:0	10	x07
water	135:48	0:0	8	;
call	136:20	136:47	8	bits_write
arg	136:32	136:37	9	&bits
op	136:32	0:0	10	&
water	136:33	0:0	10	bits
arg	136:39	136:40	9	1
water	136:39	0:0	10	1
arg	136:42	136:47	9	0x01
water	136:42	0:0	10	0
water	136:43	0:0	10	x01
water	136:48	0:0	8	;
if	142:20	150:20	8	(i_stream_id == PES_EXTENDED_STREAM_ID)
cond	142:24	142:39	9	i_stream_id == PES_EXTENDED_STREAM_ID
water	142:24	0:0	10	i_stream_id
op	142:36	0:0	10	==
water	142:39	0:0	10	PES_EXTENDED_STREAM_ID
stmts	143:20	150:20	9	
water	143:20	0:0	10	{
call	145:24	145:51	10	bits_write
arg	145:36	145:41	11	&bits
op	145:36	0:0	12	&
water	145:37	0:0	12	bits
arg	145:43	145:44	11	1
water	145:43	0:0	12	1
arg	145:46	145:51	11	0x01
water	145:46	0:0	12	0
water	145:47	0:0	12	x01
water	145:52	0:0	10	;
call	146:24	146:51	10	bits_write
arg	146:36	146:41	11	&bits
op	146:36	0:0	12	&
water	146:37	0:0	12	bits
arg	146:43	146:44	11	7
water	146:43	0:0	12	7
arg	146:46	146:51	11	0x01
water	146:46	0:0	12	0
water	146:47	0:0	12	x01
water	146:52	0:0	10	;
call	147:24	147:51	10	bits_write
arg	147:36	147:41	11	&bits
op	147:36	0:0	12	&
water	147:37	0:0	12	bits
arg	147:43	147:44	11	1
water	147:43	0:0	12	1
arg	147:46	147:51	11	0x01
water	147:46	0:0	12	0
water	147:47	0:0	12	x01
water	147:52	0:0	10	;
call	148:24	148:68	10	bits_write
arg	148:36	148:41	11	&bits
op	148:36	0:0	12	&
water	148:37	0:0	12	bits
arg	148:43	148:44	11	7
water	148:43	0:0	12	7
arg	148:46	148:68	11	i_stream_id_extension
water	148:46	0:0	12	i_stream_id_extension
water	148:69	0:0	10	;
water	149:24	0:0	10	i_header_size
op	149:38	0:0	10	-=
water	149:41	0:0	10	0
water	149:42	0:0	10	x2
water	149:44	0:0	10	;
water	150:20	0:0	10	}
water	151:20	0:0	8	i_header_size
op	151:34	0:0	8	-=
water	151:37	0:0	8	0
water	151:38	0:0	8	x1
water	151:40	0:0	8	;
water	152:16	0:0	8	}
while	153:16	157:16	6	(i_header_size)
cond	153:24	153:24	7	i_header_size
water	153:24	0:0	8	i_header_size
stmts	154:16	157:16	7	
water	154:16	0:0	8	{
call	155:20	155:47	8	bits_write
arg	155:32	155:37	9	&bits
op	155:32	0:0	10	&
water	155:33	0:0	10	bits
arg	155:39	155:40	9	8
water	155:39	0:0	10	8
arg	155:42	155:47	9	0xff
water	155:42	0:0	10	0
water	155:43	0:0	10	xff
water	155:48	0:0	8	;
water	156:20	0:0	8	i_header_size
op	156:33	0:0	8	--
water	156:35	0:0	8	;
water	157:16	0:0	8	}
water	158:12	0:0	6	}
else	159:12	206:12	4
stmts	160:12	206:12	5	
water	160:12	0:0	6	{
decl	161:16	161:29	6	int	i_pts_dts
if	162:16	167:16	6	(i_pts > 0 && i_dts > 0 && ( i_pts != i_dts || p_fmt -> i_cat == VIDEO_ES ))
cond	162:20	163:65	7	i_pts > 0 && i_dts > 0 && ( i_pts != i_dts || p_fmt -> i_cat == VIDEO_ES )
water	162:20	0:0	8	i_pts
op	162:26	0:0	8	>
water	162:28	0:0	8	0
op	162:30	0:0	8	&&
water	162:33	0:0	8	i_dts
op	162:39	0:0	8	>
water	162:41	0:0	8	0
op	162:43	0:0	8	&&
water	163:20	0:0	8	(
water	163:22	0:0	8	i_pts
op	163:28	0:0	8	!=
water	163:31	0:0	8	i_dts
op	163:37	0:0	8	||
water	163:40	0:0	8	p_fmt
op	163:45	0:0	8	->
water	163:47	0:0	8	i_cat
op	163:53	0:0	8	==
water	163:56	0:0	8	VIDEO_ES
water	163:65	0:0	8	)
stmts	164:16	167:16	7	
water	164:16	0:0	8	{
call	165:20	165:85	8	bits_write
arg	165:32	165:37	9	&bits
op	165:32	0:0	10	&
water	165:33	0:0	10	bits
arg	165:39	165:41	9	16
water	165:39	0:0	10	16
arg	165:43	165:85	9	i_es_size+i_extra+10
water	165:43	0:0	10	i_es_size
op	165:53	0:0	10	+
water	165:55	0:0	10	i_extra
op	165:63	0:0	10	+
water	165:65	0:0	10	10
water	165:86	0:0	8	;
water	166:20	0:0	8	i_pts_dts
op	166:30	0:0	8	=
water	166:32	0:0	8	0
water	166:33	0:0	8	x03
water	166:36	0:0	8	;
water	167:16	0:0	8	}
else	168:16	172:16	6
stmts	168:21	172:16	7	
if	168:21	172:16	8	(i_pts > 0)
cond	168:25	168:33	9	i_pts > 0
water	168:25	0:0	10	i_pts
op	168:31	0:0	10	>
water	168:33	0:0	10	0
stmts	169:16	172:16	9	
water	169:16	0:0	10	{
call	170:20	170:84	10	bits_write
arg	170:32	170:37	11	&bits
op	170:32	0:0	12	&
water	170:33	0:0	12	bits
arg	170:39	170:41	11	16
water	170:39	0:0	12	16
arg	170:43	170:84	11	i_es_size+i_extra+5
water	170:43	0:0	12	i_es_size
op	170:53	0:0	12	+
water	170:55	0:0	12	i_extra
op	170:63	0:0	12	+
water	170:65	0:0	12	5
water	170:85	0:0	10	;
water	171:20	0:0	10	i_pts_dts
op	171:30	0:0	10	=
water	171:32	0:0	10	0
water	171:33	0:0	10	x02
water	171:36	0:0	10	;
water	172:16	0:0	10	}
else	173:16	177:16	6
stmts	174:16	177:16	7	
water	174:16	0:0	8	{
call	175:20	175:83	8	bits_write
arg	175:32	175:37	9	&bits
op	175:32	0:0	10	&
water	175:33	0:0	10	bits
arg	175:39	175:41	9	16
water	175:39	0:0	10	16
arg	175:43	175:83	9	i_es_size+i_extra+1
water	175:43	0:0	10	i_es_size
op	175:53	0:0	10	+
water	175:55	0:0	10	i_extra
op	175:63	0:0	10	+
water	175:65	0:0	10	1
water	175:84	0:0	8	;
water	176:20	0:0	8	i_pts_dts
op	176:30	0:0	8	=
water	176:32	0:0	8	0
water	176:33	0:0	8	x00
water	176:36	0:0	8	;
water	177:16	0:0	8	}
if	181:16	190:16	6	(i_pts_dts & 0 x02)
cond	181:20	181:33	7	i_pts_dts & 0 x02
water	181:20	0:0	8	i_pts_dts
op	181:30	0:0	8	&
water	181:32	0:0	8	0
water	181:33	0:0	8	x02
stmts	182:16	190:16	7	
water	182:16	0:0	8	{
call	183:20	183:52	8	bits_write
arg	183:32	183:37	9	&bits
op	183:32	0:0	10	&
water	183:33	0:0	10	bits
arg	183:39	183:40	9	4
water	183:39	0:0	10	4
arg	183:42	183:52	9	i_pts_dts
water	183:42	0:0	10	i_pts_dts
water	183:53	0:0	8	;
call	184:20	184:54	8	bits_write
arg	184:32	184:37	9	&bits
op	184:32	0:0	10	&
water	184:33	0:0	10	bits
arg	184:39	184:40	9	3
water	184:39	0:0	10	3
arg	184:42	184:54	9	i_pts>>30
water	184:42	0:0	10	i_pts
op	184:48	0:0	10	>>
water	184:51	0:0	10	30
water	184:55	0:0	8	;
call	185:20	185:47	8	bits_write
arg	185:32	185:37	9	&bits
op	185:32	0:0	10	&
water	185:33	0:0	10	bits
arg	185:39	185:40	9	1
water	185:39	0:0	10	1
arg	185:42	185:47	9	0x01
water	185:42	0:0	10	0
water	185:43	0:0	10	x01
water	185:48	0:0	8	;
call	186:20	186:55	8	bits_write
arg	186:32	186:37	9	&bits
op	186:32	0:0	10	&
water	186:33	0:0	10	bits
arg	186:39	186:41	9	15
water	186:39	0:0	10	15
arg	186:43	186:55	9	i_pts>>15
water	186:43	0:0	10	i_pts
op	186:49	0:0	10	>>
water	186:52	0:0	10	15
water	186:56	0:0	8	;
call	187:20	187:47	8	bits_write
arg	187:32	187:37	9	&bits
op	187:32	0:0	10	&
water	187:33	0:0	10	bits
arg	187:39	187:40	9	1
water	187:39	0:0	10	1
arg	187:42	187:47	9	0x01
water	187:42	0:0	10	0
water	187:43	0:0	10	x01
water	187:48	0:0	8	;
call	188:20	188:49	8	bits_write
arg	188:32	188:37	9	&bits
op	188:32	0:0	10	&
water	188:33	0:0	10	bits
arg	188:39	188:41	9	15
water	188:39	0:0	10	15
arg	188:43	188:49	9	i_pts
water	188:43	0:0	10	i_pts
water	188:50	0:0	8	;
call	189:20	189:47	8	bits_write
arg	189:32	189:37	9	&bits
op	189:32	0:0	10	&
water	189:33	0:0	10	bits
arg	189:39	189:40	9	1
water	189:39	0:0	10	1
arg	189:42	189:47	9	0x01
water	189:42	0:0	10	0
water	189:43	0:0	10	x01
water	189:48	0:0	8	;
water	190:16	0:0	8	}
if	192:16	201:16	6	(i_pts_dts & 0 x01)
cond	192:20	192:33	7	i_pts_dts & 0 x01
water	192:20	0:0	8	i_pts_dts
op	192:30	0:0	8	&
water	192:32	0:0	8	0
water	192:33	0:0	8	x01
stmts	193:16	201:16	7	
water	193:16	0:0	8	{
call	194:20	194:47	8	bits_write
arg	194:32	194:37	9	&bits
op	194:32	0:0	10	&
water	194:33	0:0	10	bits
arg	194:39	194:40	9	4
water	194:39	0:0	10	4
arg	194:42	194:47	9	0x01
water	194:42	0:0	10	0
water	194:43	0:0	10	x01
water	194:48	0:0	8	;
call	195:20	195:54	8	bits_write
arg	195:32	195:37	9	&bits
op	195:32	0:0	10	&
water	195:33	0:0	10	bits
arg	195:39	195:40	9	3
water	195:39	0:0	10	3
arg	195:42	195:54	9	i_dts>>30
water	195:42	0:0	10	i_dts
op	195:48	0:0	10	>>
water	195:51	0:0	10	30
water	195:55	0:0	8	;
call	196:20	196:47	8	bits_write
arg	196:32	196:37	9	&bits
op	196:32	0:0	10	&
water	196:33	0:0	10	bits
arg	196:39	196:40	9	1
water	196:39	0:0	10	1
arg	196:42	196:47	9	0x01
water	196:42	0:0	10	0
water	196:43	0:0	10	x01
water	196:48	0:0	8	;
call	197:20	197:55	8	bits_write
arg	197:32	197:37	9	&bits
op	197:32	0:0	10	&
water	197:33	0:0	10	bits
arg	197:39	197:41	9	15
water	197:39	0:0	10	15
arg	197:43	197:55	9	i_dts>>15
water	197:43	0:0	10	i_dts
op	197:49	0:0	10	>>
water	197:52	0:0	10	15
water	197:56	0:0	8	;
call	198:20	198:47	8	bits_write
arg	198:32	198:37	9	&bits
op	198:32	0:0	10	&
water	198:33	0:0	10	bits
arg	198:39	198:40	9	1
water	198:39	0:0	10	1
arg	198:42	198:47	9	0x01
water	198:42	0:0	10	0
water	198:43	0:0	10	x01
water	198:48	0:0	8	;
call	199:20	199:49	8	bits_write
arg	199:32	199:37	9	&bits
op	199:32	0:0	10	&
water	199:33	0:0	10	bits
arg	199:39	199:41	9	15
water	199:39	0:0	10	15
arg	199:43	199:49	9	i_dts
water	199:43	0:0	10	i_dts
water	199:50	0:0	8	;
call	200:20	200:47	8	bits_write
arg	200:32	200:37	9	&bits
op	200:32	0:0	10	&
water	200:33	0:0	10	bits
arg	200:39	200:40	9	1
water	200:39	0:0	10	1
arg	200:42	200:47	9	0x01
water	200:42	0:0	10	0
water	200:43	0:0	10	x01
water	200:48	0:0	8	;
water	201:16	0:0	8	}
if	202:16	205:16	6	(! i_pts_dts)
cond	202:20	202:21	7	! i_pts_dts
op	202:20	0:0	8	!
water	202:21	0:0	8	i_pts_dts
stmts	203:16	205:16	7	
water	203:16	0:0	8	{
call	204:20	204:47	8	bits_write
arg	204:32	204:37	9	&bits
op	204:32	0:0	10	&
water	204:33	0:0	10	bits
arg	204:39	204:40	9	8
water	204:39	0:0	10	8
arg	204:42	204:47	9	0x0F
water	204:42	0:0	10	0
water	204:43	0:0	10	x0F
water	204:48	0:0	8	;
water	205:16	0:0	8	}
water	206:12	0:0	6	}
call	209:12	209:30	4	bits_align
arg	209:24	209:30	5	&bits
op	209:24	0:0	6	&
water	209:25	0:0	6	bits
water	209:31	0:0	4	;
if	210:12	217:12	4	(i_stream_id == PES_PRIVATE_STREAM_1 && i_private_id != - 1)
cond	210:16	210:72	5	i_stream_id == PES_PRIVATE_STREAM_1 && i_private_id != - 1
water	210:16	0:0	6	i_stream_id
op	210:28	0:0	6	==
water	210:31	0:0	6	PES_PRIVATE_STREAM_1
op	210:52	0:0	6	&&
water	210:55	0:0	6	i_private_id
op	210:68	0:0	6	!=
op	210:71	0:0	6	-
water	210:72	0:0	6	1
stmts	211:12	217:12	5	
water	211:12	0:0	6	{
call	212:16	212:51	6	bits_write
arg	212:28	212:33	7	&bits
op	212:28	0:0	8	&
water	212:29	0:0	8	bits
arg	212:35	212:36	7	8
water	212:35	0:0	8	8
arg	212:38	212:51	7	i_private_id
water	212:38	0:0	8	i_private_id
water	212:52	0:0	6	;
if	213:16	216:16	6	(( i_private_id & 0 xf0 ) == 0 x80)
cond	213:20	213:46	7	( i_private_id & 0 xf0 ) == 0 x80
water	213:20	0:0	8	(
water	213:22	0:0	8	i_private_id
op	213:34	0:0	8	&
water	213:35	0:0	8	0
water	213:36	0:0	8	xf0
water	213:40	0:0	8	)
op	213:42	0:0	8	==
water	213:45	0:0	8	0
water	213:46	0:0	8	x80
stmts	214:16	216:16	7	
water	214:16	0:0	8	{
call	215:20	215:45	8	bits_write
arg	215:32	215:37	9	&bits
op	215:32	0:0	10	&
water	215:33	0:0	10	bits
arg	215:39	215:41	9	24
water	215:39	0:0	10	24
arg	215:43	215:45	9	0
water	215:43	0:0	10	0
water	215:46	0:0	8	;
water	216:16	0:0	8	}
water	217:12	0:0	6	}
call	218:12	218:30	4	bits_align
arg	218:24	218:30	5	&bits
op	218:24	0:0	6	&
water	218:25	0:0	6	bits
water	218:31	0:0	4	;
return	219:12	219:33	4	(bits.i_data)
water	219:18	0:0	5	(
water	219:20	0:0	5	bits
op	219:24	0:0	5	.
water	219:25	0:0	5	i_data
water	219:32	0:0	5	)
water	220:4	0:0	4	}

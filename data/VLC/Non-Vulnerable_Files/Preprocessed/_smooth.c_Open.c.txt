func	2:0	88:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	87:22	1	
decl	4:4	4:35	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	stream_t
op	4:27	0:0	2	*
water	4:28	0:0	2	)
water	4:29	0:0	2	p_this
decl	5:4	5:23	2	stream_sys_t	*p_sys
if	6:4	7:27	2	(!isSmoothStreaming (s ))
cond	6:8	6:30	3	!isSmoothStreaming (s )
op	6:8	0:0	4	!
call	6:9	6:30	4	isSmoothStreaming
arg	6:28	6:30	5	s
water	6:28	0:0	6	s
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
call	8:4	8:59	2	msg_Info
arg	8:14	8:20	3	p_this
water	8:14	0:0	4	p_this
arg	8:22	8:45	3	"Smooth Streaming (%s)"
water	8:22	0:0	4	"Smooth Streaming (%s)"
arg	8:47	8:59	3	s->psz_path
water	8:47	0:0	4	s
op	8:48	0:0	4	->
water	8:50	0:0	4	psz_path
water	8:60	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	p_sys
op	9:13	0:0	2	=
water	9:15	0:0	2	p_sys
op	9:21	0:0	2	=
call	9:23	9:50	2	calloc
arg	9:31	9:32	3	1
water	9:31	0:0	4	1
arg	9:34	9:50	3	sizeof(*p_sys)
op	9:34	0:0	4	sizeof
water	9:40	0:0	4	(
op	9:41	0:0	4	*
water	9:42	0:0	4	p_sys
water	9:48	0:0	4	)
water	9:51	0:0	2	;
if	10:4	11:25	2	(unlikely (p_sys == NULL ))
cond	10:8	10:32	3	unlikely (p_sys == NULL )
call	10:8	10:32	4	unlikely
arg	10:18	10:32	5	p_sys==NULL
water	10:18	0:0	6	p_sys
op	10:24	0:0	6	==
water	10:27	0:0	6	NULL
stmts	11:8	11:25	3	
return	11:8	11:25	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
decl	12:4	12:20	2	char	*uri
op	12:14	0:0	2	=
water	12:16	0:0	2	NULL
if	13:4	17:4	2	(unlikely (asprintf (& uri ,"%s://%s" ,s -> psz_access ,s -> psz_path ) < 0 ))
cond	13:8	13:78	3	unlikely (asprintf (& uri ,"%s://%s" ,s -> psz_access ,s -> psz_path ) < 0 )
call	13:8	13:78	4	unlikely
arg	13:18	13:78	5	asprintf(&uri,"%s://%s",s->psz_access,s->psz_path)<0
call	13:18	13:72	6	asprintf
arg	13:28	13:32	7	&uri
op	13:28	0:0	8	&
water	13:29	0:0	8	uri
arg	13:34	13:43	7	"%s://%s"
water	13:34	0:0	8	"%s://%s"
arg	13:45	13:58	7	s->psz_access
water	13:45	0:0	8	s
op	13:46	0:0	8	->
water	13:48	0:0	8	psz_access
arg	13:60	13:72	7	s->psz_path
water	13:60	0:0	8	s
op	13:61	0:0	8	->
water	13:63	0:0	8	psz_path
op	13:74	0:0	6	<
water	13:76	0:0	6	0
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:8	15:20	4	free
arg	15:14	15:20	5	p_sys
water	15:14	0:0	6	p_sys
water	15:21	0:0	4	;
return	16:8	16:25	4	VLC_ENOMEM
water	16:15	0:0	5	VLC_ENOMEM
water	17:4	0:0	4	}
decl	19:4	19:34	2	char	*pos
op	19:14	0:0	2	=
call	19:16	19:33	3	strrchr
arg	19:25	19:28	4	uri
water	19:25	0:0	5	uri
arg	19:30	19:33	4	'/'
water	19:30	0:0	5	'/'
op	20:4	0:0	2	*
water	20:5	0:0	2	pos
op	20:9	0:0	2	=
water	20:11	0:0	2	'\0'
water	20:15	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	base_url
op	21:20	0:0	2	=
water	21:22	0:0	2	uri
water	21:25	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	b_cache
op	23:19	0:0	2	=
water	23:21	0:0	2	false
water	23:26	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	sms_streams
op	24:23	0:0	2	=
call	24:25	24:39	2	vlc_array_new
water	24:40	0:0	2	;
water	25:4	0:0	2	p_sys
op	25:9	0:0	2	->
water	25:11	0:0	2	selected_st
op	25:23	0:0	2	=
call	25:25	25:39	2	vlc_array_new
water	25:40	0:0	2	;
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	download
op	26:19	0:0	2	.
water	26:20	0:0	2	chunks
op	26:27	0:0	2	=
call	26:29	26:43	2	vlc_array_new
water	26:44	0:0	2	;
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	init_chunks
op	27:23	0:0	2	=
call	27:25	27:39	2	vlc_array_new
water	27:40	0:0	2	;
if	28:4	34:4	2	(unlikely (! p_sys -> sms_streams || ! p_sys -> download . chunks || ! p_sys -> selected_st || ! p_sys -> init_chunks ))
cond	28:8	29:61	3	unlikely (! p_sys -> sms_streams || ! p_sys -> download . chunks || ! p_sys -> selected_st || ! p_sys -> init_chunks )
call	28:8	29:61	4	unlikely
arg	28:18	29:61	5	!p_sys->sms_streams||!p_sys->download.chunks||!p_sys->selected_st||!p_sys->init_chunks
op	28:18	0:0	6	!
water	28:19	0:0	6	p_sys
op	28:24	0:0	6	->
water	28:26	0:0	6	sms_streams
op	28:38	0:0	6	||
op	28:41	0:0	6	!
water	28:42	0:0	6	p_sys
op	28:47	0:0	6	->
water	28:49	0:0	6	download
op	28:57	0:0	6	.
water	28:58	0:0	6	chunks
op	28:65	0:0	6	||
op	29:18	0:0	6	!
water	29:19	0:0	6	p_sys
op	29:24	0:0	6	->
water	29:26	0:0	6	selected_st
op	29:38	0:0	6	||
op	29:41	0:0	6	!
water	29:42	0:0	6	p_sys
op	29:47	0:0	6	->
water	29:49	0:0	6	init_chunks
stmts	30:4	34:4	3	
water	30:4	0:0	4	{
call	31:8	31:26	4	SysCleanup
arg	31:20	31:26	5	p_sys
water	31:20	0:0	6	p_sys
water	31:27	0:0	4	;
call	32:8	32:20	4	free
arg	32:14	32:20	5	p_sys
water	32:14	0:0	6	p_sys
water	32:21	0:0	4	;
return	33:8	33:25	4	VLC_ENOMEM
water	33:15	0:0	5	VLC_ENOMEM
water	34:4	0:0	4	}
if	36:4	41:4	2	(parse_Manifest (s ) != VLC_SUCCESS)
cond	36:8	36:31	3	parse_Manifest (s ) != VLC_SUCCESS
call	36:8	36:26	4	parse_Manifest
arg	36:24	36:26	5	s
water	36:24	0:0	6	s
op	36:28	0:0	4	!=
water	36:31	0:0	4	VLC_SUCCESS
stmts	37:4	41:4	3	
water	37:4	0:0	4	{
call	38:8	38:26	4	SysCleanup
arg	38:20	38:26	5	p_sys
water	38:20	0:0	6	p_sys
water	38:27	0:0	4	;
call	39:8	39:20	4	free
arg	39:14	39:20	5	p_sys
water	39:14	0:0	6	p_sys
water	39:21	0:0	4	;
return	40:8	40:27	4	VLC_EGENERIC
water	40:15	0:0	5	VLC_EGENERIC
water	41:4	0:0	4	}
if	42:4	43:27	2	(! p_sys -> vod_duration)
cond	42:8	42:16	3	! p_sys -> vod_duration
op	42:8	0:0	4	!
water	42:9	0:0	4	p_sys
op	42:14	0:0	4	->
water	42:16	0:0	4	vod_duration
stmts	43:7	43:27	3	
water	43:7	0:0	4	p_sys
op	43:12	0:0	4	->
water	43:14	0:0	4	b_live
op	43:21	0:0	4	=
water	43:23	0:0	4	true
water	43:27	0:0	4	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	i_tracks
op	44:20	0:0	2	=
call	44:22	44:58	2	vlc_array_count
arg	44:39	44:58	3	p_sys->sms_streams
water	44:39	0:0	4	p_sys
op	44:44	0:0	4	->
water	44:46	0:0	4	sms_streams
water	44:59	0:0	2	;
decl	46:4	46:46	2	sms_stream_t	*tmp
op	46:22	0:0	2	=
water	46:24	0:0	2	NULL
water	46:28	0:0	2	,
decl	46:4	46:46	2	sms_stream_t	*selected
op	46:40	0:0	2	=
water	46:42	0:0	2	NULL
for	47:4	53:4	2	(unsigned i = 0 ;i < p_sys -> i_tracks;i ++)
forinit	47:9	47:23	3	unsigned i = 0 ;
water	47:9	0:0	4	unsigned
water	47:18	0:0	4	i
op	47:20	0:0	4	=
water	47:22	0:0	4	0
water	47:23	0:0	4	;
cond	47:25	47:36	3	i < p_sys -> i_tracks
water	47:25	0:0	4	i
op	47:27	0:0	4	<
water	47:29	0:0	4	p_sys
op	47:34	0:0	4	->
water	47:36	0:0	4	i_tracks
forexpr	47:46	47:47	3	i ++
water	47:46	0:0	4	i
op	47:47	0:0	4	++
stmts	48:4	53:4	3	
water	48:4	0:0	4	{
water	49:8	0:0	4	tmp
op	49:12	0:0	4	=
call	49:14	49:61	4	vlc_array_item_at_index
arg	49:39	49:57	5	p_sys->sms_streams
water	49:39	0:0	6	p_sys
op	49:44	0:0	6	->
water	49:46	0:0	6	sms_streams
arg	49:59	49:61	5	i
water	49:59	0:0	6	i
water	49:62	0:0	4	;
water	50:8	0:0	4	selected
op	50:17	0:0	4	=
call	50:19	50:50	4	SMS_GET_SELECTED_ST
arg	50:40	50:50	5	tmp->type
water	50:40	0:0	6	tmp
op	50:43	0:0	6	->
water	50:45	0:0	6	type
water	50:51	0:0	4	;
if	51:8	52:55	4	(! selected)
cond	51:12	51:13	5	! selected
op	51:12	0:0	6	!
water	51:13	0:0	6	selected
stmts	52:12	52:55	5	
call	52:12	52:54	6	vlc_array_append
arg	52:30	52:48	7	p_sys->selected_st
water	52:30	0:0	8	p_sys
op	52:35	0:0	8	->
water	52:37	0:0	8	selected_st
arg	52:50	52:54	7	tmp
water	52:50	0:0	8	tmp
water	52:55	0:0	6	;
water	53:4	0:0	4	}
decl	55:4	55:34	2	quality_level_t	*wanted
water	55:27	0:0	2	,
decl	55:4	55:34	2	quality_level_t	*qlvl
decl	56:4	56:28	2	sms_stream_t	*sms
op	56:22	0:0	2	=
water	56:24	0:0	2	NULL
for	57:4	72:4	2	(unsigned i = 0 ;i < p_sys -> i_tracks;i ++)
forinit	57:9	57:23	3	unsigned i = 0 ;
water	57:9	0:0	4	unsigned
water	57:18	0:0	4	i
op	57:20	0:0	4	=
water	57:22	0:0	4	0
water	57:23	0:0	4	;
cond	57:25	57:36	3	i < p_sys -> i_tracks
water	57:25	0:0	4	i
op	57:27	0:0	4	<
water	57:29	0:0	4	p_sys
op	57:34	0:0	4	->
water	57:36	0:0	4	i_tracks
forexpr	57:46	57:47	3	i ++
water	57:46	0:0	4	i
op	57:47	0:0	4	++
stmts	58:4	72:4	3	
water	58:4	0:0	4	{
water	59:8	0:0	4	wanted
op	59:15	0:0	4	=
water	59:17	0:0	4	qlvl
op	59:22	0:0	4	=
water	59:24	0:0	4	NULL
water	59:28	0:0	4	;
water	60:8	0:0	4	sms
op	60:12	0:0	4	=
call	60:14	60:61	4	vlc_array_item_at_index
arg	60:39	60:57	5	p_sys->sms_streams
water	60:39	0:0	6	p_sys
op	60:44	0:0	6	->
water	60:46	0:0	6	sms_streams
arg	60:59	60:61	5	i
water	60:59	0:0	6	i
water	60:62	0:0	4	;
if	61:8	71:8	4	(vlc_array_count (sms -> qlevels ))
cond	61:13	61:43	5	vlc_array_count (sms -> qlevels )
call	61:13	61:43	6	vlc_array_count
arg	61:30	61:43	7	sms->qlevels
water	61:30	0:0	8	sms
op	61:33	0:0	8	->
water	61:35	0:0	8	qlevels
stmts	62:8	71:8	5	
water	62:8	0:0	6	{
water	63:12	0:0	6	wanted
op	63:19	0:0	6	=
call	63:21	63:62	6	vlc_array_item_at_index
arg	63:46	63:58	7	sms->qlevels
water	63:46	0:0	8	sms
op	63:49	0:0	8	->
water	63:51	0:0	8	qlevels
arg	63:60	63:62	7	0
water	63:60	0:0	8	0
water	63:63	0:0	6	;
for	64:12	69:12	6	(unsigned i = 1 ;i < sms -> qlevel_nb;i ++)
forinit	64:17	64:29	7	unsigned i = 1 ;
water	64:17	0:0	8	unsigned
water	64:26	0:0	8	i
op	64:27	0:0	8	=
water	64:28	0:0	8	1
water	64:29	0:0	8	;
cond	64:31	64:40	7	i < sms -> qlevel_nb
water	64:31	0:0	8	i
op	64:33	0:0	8	<
water	64:35	0:0	8	sms
op	64:38	0:0	8	->
water	64:40	0:0	8	qlevel_nb
forexpr	64:51	64:52	7	i ++
water	64:51	0:0	8	i
op	64:52	0:0	8	++
stmts	65:12	69:12	7	
water	65:12	0:0	8	{
water	66:16	0:0	8	qlvl
op	66:21	0:0	8	=
call	66:23	66:64	8	vlc_array_item_at_index
arg	66:48	66:60	9	sms->qlevels
water	66:48	0:0	10	sms
op	66:51	0:0	10	->
water	66:53	0:0	10	qlevels
arg	66:62	66:64	9	i
water	66:62	0:0	10	i
water	66:65	0:0	8	;
if	67:16	68:33	8	(qlvl -> Bitrate < wanted -> Bitrate)
cond	67:20	67:44	9	qlvl -> Bitrate < wanted -> Bitrate
water	67:20	0:0	10	qlvl
op	67:24	0:0	10	->
water	67:26	0:0	10	Bitrate
op	67:34	0:0	10	<
water	67:36	0:0	10	wanted
op	67:42	0:0	10	->
water	67:44	0:0	10	Bitrate
stmts	68:20	68:33	9	
water	68:20	0:0	10	wanted
op	68:27	0:0	10	=
water	68:29	0:0	10	qlvl
water	68:33	0:0	10	;
water	69:12	0:0	8	}
water	70:12	0:0	6	sms
op	70:15	0:0	6	->
water	70:17	0:0	6	download_qlvl
op	70:31	0:0	6	=
water	70:33	0:0	6	wanted
op	70:39	0:0	6	->
water	70:41	0:0	6	id
water	70:43	0:0	6	;
water	71:8	0:0	6	}
water	72:4	0:0	4	}
call	73:4	73:47	2	vlc_mutex_init
arg	73:20	73:47	3	&p_sys->download.lock_wait
op	73:20	0:0	4	&
water	73:21	0:0	4	p_sys
op	73:26	0:0	4	->
water	73:28	0:0	4	download
op	73:36	0:0	4	.
water	73:37	0:0	4	lock_wait
water	73:48	0:0	2	;
call	74:4	74:41	2	vlc_cond_init
arg	74:19	74:41	3	&p_sys->download.wait
op	74:19	0:0	4	&
water	74:20	0:0	4	p_sys
op	74:25	0:0	4	->
water	74:27	0:0	4	download
op	74:35	0:0	4	.
water	74:36	0:0	4	wait
water	74:42	0:0	2	;
water	76:4	0:0	2	s
op	76:5	0:0	2	->
water	76:7	0:0	2	pf_read
op	76:15	0:0	2	=
water	76:17	0:0	2	Read
water	76:21	0:0	2	;
water	77:4	0:0	2	s
op	77:5	0:0	2	->
water	77:7	0:0	2	pf_peek
op	77:15	0:0	2	=
water	77:17	0:0	2	Peek
water	77:21	0:0	2	;
water	78:4	0:0	2	s
op	78:5	0:0	2	->
water	78:7	0:0	2	pf_control
op	78:18	0:0	2	=
water	78:20	0:0	2	Control
water	78:27	0:0	2	;
if	79:4	86:4	2	(vlc_clone (& p_sys -> thread ,sms_Thread ,s ,VLC_THREAD_PRIORITY_INPUT ))
cond	79:8	79:76	3	vlc_clone (& p_sys -> thread ,sms_Thread ,s ,VLC_THREAD_PRIORITY_INPUT )
call	79:8	79:76	4	vlc_clone
arg	79:19	79:33	5	&p_sys->thread
op	79:19	0:0	6	&
water	79:20	0:0	6	p_sys
op	79:25	0:0	6	->
water	79:27	0:0	6	thread
arg	79:35	79:45	5	sms_Thread
water	79:35	0:0	6	sms_Thread
arg	79:47	79:48	5	s
water	79:47	0:0	6	s
arg	79:50	79:76	5	VLC_THREAD_PRIORITY_INPUT
water	79:50	0:0	6	VLC_THREAD_PRIORITY_INPUT
stmts	80:4	86:4	3	
water	80:4	0:0	4	{
call	81:8	81:26	4	SysCleanup
arg	81:20	81:26	5	p_sys
water	81:20	0:0	6	p_sys
water	81:27	0:0	4	;
call	82:8	82:54	4	vlc_mutex_destroy
arg	82:27	82:54	5	&p_sys->download.lock_wait
op	82:27	0:0	6	&
water	82:28	0:0	6	p_sys
op	82:33	0:0	6	->
water	82:35	0:0	6	download
op	82:43	0:0	6	.
water	82:44	0:0	6	lock_wait
water	82:55	0:0	4	;
call	83:8	83:48	4	vlc_cond_destroy
arg	83:26	83:48	5	&p_sys->download.wait
op	83:26	0:0	6	&
water	83:27	0:0	6	p_sys
op	83:32	0:0	6	->
water	83:34	0:0	6	download
op	83:42	0:0	6	.
water	83:43	0:0	6	wait
water	83:49	0:0	4	;
call	84:8	84:20	4	free
arg	84:14	84:20	5	p_sys
water	84:14	0:0	6	p_sys
water	84:21	0:0	4	;
return	85:8	85:27	4	VLC_EGENERIC
water	85:15	0:0	5	VLC_EGENERIC
water	86:4	0:0	4	}
return	87:4	87:22	2	VLC_SUCCESS
water	87:11	0:0	3	VLC_SUCCESS

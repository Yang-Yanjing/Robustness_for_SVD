func	2:0	23:0	0	static void	test_config_ChainCreate
stmnts	4:4	22:4	1	
for	4:4	22:4	2	( int i = 0 ;chain_samples [ i ] . psz_string;i ++)
forinit	0:0	4:18	3	 int i = 0 ;
decl	4:9	4:18	4	int	i
op	4:15	0:0	4	=
water	4:17	0:0	4	0
cond	4:20	4:37	3	chain_samples [ i ] . psz_string
water	4:20	0:0	4	chain_samples
op	4:33	0:0	4	[
water	4:34	0:0	4	i
op	4:35	0:0	4	]
op	4:36	0:0	4	.
water	4:37	0:0	4	psz_string
forexpr	4:49	4:50	3	i ++
water	4:49	0:0	4	i
op	4:50	0:0	4	++
stmts	5:4	22:4	3	
water	5:4	0:0	4	{
decl	6:8	6:29	4	config_chain_t	*p_cfg
decl	7:8	7:24	4	char	*psz_module
decl	8:8	8:95	4	char	*psz_next
op	8:23	0:0	4	=
call	8:25	8:94	5	config_ChainCreate
arg	8:45	8:56	6	&psz_module
op	8:45	0:0	7	&
water	8:46	0:0	7	psz_module
arg	8:58	8:64	6	&p_cfg
op	8:58	0:0	7	&
water	8:59	0:0	7	p_cfg
arg	8:66	8:94	6	chain_samples[i].psz_string
water	8:66	0:0	7	chain_samples
op	8:79	0:0	7	[
water	8:80	0:0	7	i
op	8:81	0:0	7	]
op	8:82	0:0	7	.
water	8:83	0:0	7	psz_string
call	9:8	9:67	4	assert
arg	9:16	9:67	5	!strcmp(chain_samples[i].psz_module,psz_module)
op	9:16	0:0	6	!
call	9:17	9:65	6	strcmp
arg	9:25	9:52	7	chain_samples[i].psz_module
water	9:25	0:0	8	chain_samples
op	9:38	0:0	8	[
water	9:39	0:0	8	i
op	9:40	0:0	8	]
op	9:41	0:0	8	.
water	9:42	0:0	8	psz_module
arg	9:54	9:65	7	psz_module
water	9:54	0:0	8	psz_module
water	9:68	0:0	4	;
call	10:8	10:108	4	assert
arg	10:16	10:108	5	(!psz_next&&!chain_samples[i].psz_next)||!strcmp(chain_samples[i].psz_next,psz_next)
water	10:16	0:0	6	(
op	10:17	0:0	6	!
water	10:18	0:0	6	psz_next
op	10:27	0:0	6	&&
op	10:30	0:0	6	!
water	10:31	0:0	6	chain_samples
op	10:44	0:0	6	[
water	10:45	0:0	6	i
op	10:46	0:0	6	]
op	10:47	0:0	6	.
water	10:48	0:0	6	psz_next
water	10:56	0:0	6	)
op	10:58	0:0	6	||
op	10:61	0:0	6	!
call	10:62	10:106	6	strcmp
arg	10:70	10:95	7	chain_samples[i].psz_next
water	10:70	0:0	8	chain_samples
op	10:83	0:0	8	[
water	10:84	0:0	8	i
op	10:85	0:0	8	]
op	10:86	0:0	8	.
water	10:87	0:0	8	psz_next
arg	10:97	10:106	7	psz_next
water	10:97	0:0	8	psz_next
water	10:109	0:0	4	;
decl	11:8	11:37	4	config_chain_t	*p_tmp
op	11:30	0:0	4	=
water	11:32	0:0	4	p_cfg
for	12:8	17:8	4	( int j = 0 ;chain_samples [ i ] . config [ j ] . psz_name;j ++)
forinit	0:0	12:22	5	 int j = 0 ;
decl	12:13	12:22	6	int	j
op	12:19	0:0	6	=
water	12:21	0:0	6	0
cond	12:24	12:51	5	chain_samples [ i ] . config [ j ] . psz_name
water	12:24	0:0	6	chain_samples
op	12:37	0:0	6	[
water	12:38	0:0	6	i
op	12:39	0:0	6	]
op	12:40	0:0	6	.
water	12:41	0:0	6	config
op	12:47	0:0	6	[
water	12:48	0:0	6	j
op	12:49	0:0	6	]
op	12:50	0:0	6	.
water	12:51	0:0	6	psz_name
forexpr	12:61	12:62	5	j ++
water	12:61	0:0	6	j
op	12:62	0:0	6	++
stmts	13:8	17:8	5	
water	13:8	0:0	6	{
call	14:12	15:86	6	assert
arg	14:20	15:86	7	!strcmp(chain_samples[i].config[j].psz_name,p_tmp->psz_name)&&!strcmp(chain_samples[i].config[j].psz_value,p_tmp->psz_value)
op	14:20	0:0	8	!
call	14:21	14:83	8	strcmp
arg	14:29	14:64	9	chain_samples[i].config[j].psz_name
water	14:29	0:0	10	chain_samples
op	14:42	0:0	10	[
water	14:43	0:0	10	i
op	14:44	0:0	10	]
op	14:45	0:0	10	.
water	14:46	0:0	10	config
op	14:52	0:0	10	[
water	14:53	0:0	10	j
op	14:54	0:0	10	]
op	14:55	0:0	10	.
water	14:56	0:0	10	psz_name
arg	14:67	14:83	9	p_tmp->psz_name
water	14:67	0:0	10	p_tmp
op	14:72	0:0	10	->
water	14:74	0:0	10	psz_name
op	14:85	0:0	8	&&
op	15:20	0:0	8	!
call	15:21	15:84	8	strcmp
arg	15:29	15:65	9	chain_samples[i].config[j].psz_value
water	15:29	0:0	10	chain_samples
op	15:42	0:0	10	[
water	15:43	0:0	10	i
op	15:44	0:0	10	]
op	15:45	0:0	10	.
water	15:46	0:0	10	config
op	15:52	0:0	10	[
water	15:53	0:0	10	j
op	15:54	0:0	10	]
op	15:55	0:0	10	.
water	15:56	0:0	10	psz_value
arg	15:67	15:84	9	p_tmp->psz_value
water	15:67	0:0	10	p_tmp
op	15:72	0:0	10	->
water	15:74	0:0	10	psz_value
water	15:87	0:0	6	;
water	16:12	0:0	6	p_tmp
op	16:18	0:0	6	=
water	16:20	0:0	6	p_tmp
op	16:25	0:0	6	->
water	16:27	0:0	6	p_next
water	16:33	0:0	6	;
water	17:8	0:0	6	}
call	18:8	18:23	4	assert
arg	18:16	18:23	5	!p_tmp
op	18:16	0:0	6	!
water	18:17	0:0	6	p_tmp
water	18:24	0:0	4	;
call	19:8	19:35	4	config_ChainDestroy
arg	19:29	19:35	5	p_cfg
water	19:29	0:0	6	p_cfg
water	19:36	0:0	4	;
call	20:8	20:23	4	free
arg	20:14	20:23	5	psz_next
water	20:14	0:0	6	psz_next
water	20:24	0:0	4	;
call	21:8	21:25	4	free
arg	21:14	21:25	5	psz_module
water	21:14	0:0	6	psz_module
water	21:26	0:0	4	;
water	22:4	0:0	4	}

func	2:0	132:0	0	static block_t *	DecodeFrame
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	131:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:81	2	unsigned int	i_rate
op	6:25	0:0	2	=
water	6:27	0:0	2	0
water	6:28	0:0	2	,
decl	6:4	6:81	2	unsigned int	i_original_channels
op	6:50	0:0	2	=
water	6:52	0:0	2	0
water	6:53	0:0	2	,
decl	6:4	6:81	2	unsigned int	i_channels
op	6:66	0:0	2	=
water	6:68	0:0	2	0
water	6:69	0:0	2	,
decl	6:4	6:81	2	unsigned int	i_bits
op	6:78	0:0	2	=
water	6:80	0:0	2	0
decl	7:4	7:32	2	int	i_frame_length
if	8:4	8:45	2	(! pp_block || ! * pp_block)
cond	8:8	8:23	3	! pp_block || ! * pp_block
op	8:8	0:0	4	!
water	8:9	0:0	4	pp_block
op	8:18	0:0	4	||
op	8:21	0:0	4	!
op	8:22	0:0	4	*
water	8:23	0:0	4	pp_block
stmts	8:34	8:45	3	
return	8:34	8:45	4	NULL
water	8:41	0:0	5	NULL
water	9:4	0:0	2	p_block
op	9:12	0:0	2	=
op	9:14	0:0	2	*
water	9:15	0:0	2	pp_block
water	9:23	0:0	2	;
op	10:4	0:0	2	*
water	10:5	0:0	2	pp_block
op	10:14	0:0	2	=
water	10:16	0:0	2	NULL
water	10:20	0:0	2	;
if	12:4	16:4	2	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date ))
cond	12:8	13:53	3	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date )
water	12:8	0:0	4	p_block
op	12:15	0:0	4	->
water	12:17	0:0	4	i_pts
op	12:23	0:0	4	>
water	12:25	0:0	4	VLC_TS_INVALID
op	12:40	0:0	4	&&
water	13:8	0:0	4	p_block
op	13:15	0:0	4	->
water	13:17	0:0	4	i_pts
op	13:23	0:0	4	!=
call	13:26	13:53	4	date_Get
arg	13:36	13:53	5	&p_sys->end_date
op	13:36	0:0	6	&
water	13:37	0:0	6	p_sys
op	13:42	0:0	6	->
water	13:44	0:0	6	end_date
stmts	14:4	16:4	3	
water	14:4	0:0	4	{
call	15:8	15:51	4	date_Set
arg	15:18	15:34	5	&p_sys->end_date
op	15:18	0:0	6	&
water	15:19	0:0	6	p_sys
op	15:24	0:0	6	->
water	15:26	0:0	6	end_date
arg	15:36	15:51	5	p_block->i_pts
water	15:36	0:0	6	p_block
op	15:43	0:0	6	->
water	15:45	0:0	6	i_pts
water	15:52	0:0	4	;
water	16:4	0:0	4	}
if	17:4	22:4	2	(!date_Get (& p_sys -> end_date ))
cond	17:8	17:36	3	!date_Get (& p_sys -> end_date )
op	17:8	0:0	4	!
call	17:9	17:36	4	date_Get
arg	17:19	17:36	5	&p_sys->end_date
op	17:19	0:0	6	&
water	17:20	0:0	6	p_sys
op	17:25	0:0	6	->
water	17:27	0:0	6	end_date
stmts	18:4	22:4	3	
water	18:4	0:0	4	{
call	20:8	20:31	4	block_Release
arg	20:23	20:31	5	p_block
water	20:23	0:0	6	p_block
water	20:32	0:0	4	;
return	21:8	21:19	4	NULL
water	21:15	0:0	5	NULL
water	22:4	0:0	4	}
if	23:4	28:4	2	(p_block -> i_buffer <= p_sys -> i_header_size)
cond	23:8	23:36	3	p_block -> i_buffer <= p_sys -> i_header_size
water	23:8	0:0	4	p_block
op	23:15	0:0	4	->
water	23:17	0:0	4	i_buffer
op	23:26	0:0	4	<=
water	23:29	0:0	4	p_sys
op	23:34	0:0	4	->
water	23:36	0:0	4	i_header_size
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
call	25:8	25:43	4	msg_Err
arg	25:16	25:21	5	p_dec
water	25:16	0:0	6	p_dec
arg	25:23	25:43	5	"frame is too short"
water	25:23	0:0	6	"frame is too short"
water	25:44	0:0	4	;
call	26:8	26:31	4	block_Release
arg	26:23	26:31	5	p_block
water	26:23	0:0	6	p_block
water	26:32	0:0	4	;
return	27:8	27:19	4	NULL
water	27:15	0:0	5	NULL
water	28:4	0:0	4	}
decl	29:4	29:13	2	int	i_ret
water	30:4	0:0	2	unsigned
water	30:13	0:0	2	i_channels_padding
op	30:32	0:0	2	=
water	30:34	0:0	2	0
water	30:35	0:0	2	;
water	31:4	0:0	2	unsigned
water	31:13	0:0	2	i_padding
op	31:23	0:0	2	=
water	31:25	0:0	2	0
water	31:26	0:0	2	;
decl	32:4	32:30	2	aob_group_t	p_aob_group[2]
switch	33:4	54:4	2	(p_sys -> i_type)
cond	33:12	33:19	3	p_sys -> i_type
water	33:12	0:0	4	p_sys
op	33:17	0:0	4	->
water	33:19	0:0	4	i_type
stmts	34:4	54:4	3	
water	34:4	0:0	4	{
label	35:4	35:17	4	case LPCM_VOB :
water	36:8	0:0	4	i_ret
op	36:14	0:0	4	=
call	36:16	37:45	4	VobHeader
arg	36:27	36:34	5	&i_rate
op	36:27	0:0	6	&
water	36:28	0:0	6	i_rate
arg	36:36	36:47	5	&i_channels
op	36:36	0:0	6	&
water	36:37	0:0	6	i_channels
arg	36:49	36:69	5	&i_original_channels
op	36:49	0:0	6	&
water	36:50	0:0	6	i_original_channels
arg	36:71	36:78	5	&i_bits
op	36:71	0:0	6	&
water	36:72	0:0	6	i_bits
arg	37:27	37:45	5	p_block->p_buffer
water	37:27	0:0	6	p_block
op	37:34	0:0	6	->
water	37:36	0:0	6	p_buffer
water	37:46	0:0	4	;
break	38:8	38:13	4	
label	39:4	39:17	4	case LPCM_AOB :
water	40:8	0:0	4	i_ret
op	40:14	0:0	4	=
call	40:16	42:45	4	AobHeader
arg	40:27	40:34	5	&i_rate
op	40:27	0:0	6	&
water	40:28	0:0	6	i_rate
arg	40:36	40:47	5	&i_channels
op	40:36	0:0	6	&
water	40:37	0:0	6	i_channels
arg	40:49	40:69	5	&i_original_channels
op	40:49	0:0	6	&
water	40:50	0:0	6	i_original_channels
arg	40:71	40:78	5	&i_bits
op	40:71	0:0	6	&
water	40:72	0:0	6	i_bits
arg	40:80	40:90	5	&i_padding
op	40:80	0:0	6	&
water	40:81	0:0	6	i_padding
arg	41:27	41:38	5	p_aob_group
water	41:27	0:0	6	p_aob_group
arg	42:27	42:45	5	p_block->p_buffer
water	42:27	0:0	6	p_block
op	42:34	0:0	6	->
water	42:36	0:0	6	p_buffer
water	42:46	0:0	4	;
break	43:8	43:13	4	
label	44:4	44:16	4	case LPCM_BD :
water	45:8	0:0	4	i_ret
op	45:14	0:0	4	=
call	45:16	46:44	4	BdHeader
arg	45:26	45:31	5	p_sys
water	45:26	0:0	6	p_sys
arg	45:33	45:40	5	&i_rate
op	45:33	0:0	6	&
water	45:34	0:0	6	i_rate
arg	45:42	45:53	5	&i_channels
op	45:42	0:0	6	&
water	45:43	0:0	6	i_channels
arg	45:55	45:74	5	&i_channels_padding
op	45:55	0:0	6	&
water	45:56	0:0	6	i_channels_padding
arg	45:76	45:96	5	&i_original_channels
op	45:76	0:0	6	&
water	45:77	0:0	6	i_original_channels
arg	45:98	45:105	5	&i_bits
op	45:98	0:0	6	&
water	45:99	0:0	6	i_bits
arg	46:26	46:44	5	p_block->p_buffer
water	46:26	0:0	6	p_block
op	46:33	0:0	6	->
water	46:35	0:0	6	p_buffer
water	46:45	0:0	4	;
break	47:8	47:13	4	
label	48:4	48:18	4	case LPCM_WIDI :
water	49:8	0:0	4	i_ret
op	49:14	0:0	4	=
call	49:16	50:46	4	WidiHeader
arg	49:28	49:35	5	&i_rate
op	49:28	0:0	6	&
water	49:29	0:0	6	i_rate
arg	49:37	49:48	5	&i_channels
op	49:37	0:0	6	&
water	49:38	0:0	6	i_channels
arg	49:50	49:70	5	&i_original_channels
op	49:50	0:0	6	&
water	49:51	0:0	6	i_original_channels
arg	49:72	49:79	5	&i_bits
op	49:72	0:0	6	&
water	49:73	0:0	6	i_bits
arg	50:28	50:46	5	p_block->p_buffer
water	50:28	0:0	6	p_block
op	50:35	0:0	6	->
water	50:37	0:0	6	p_buffer
water	50:47	0:0	4	;
break	51:8	51:13	4	
label	52:4	52:11	4	default :
call	53:8	53:14	4	abort
water	53:15	0:0	4	;
water	54:4	0:0	4	}
if	55:4	60:4	2	(i_ret || p_block -> i_buffer <= p_sys -> i_header_size + i_padding)
cond	55:8	55:61	3	i_ret || p_block -> i_buffer <= p_sys -> i_header_size + i_padding
water	55:8	0:0	4	i_ret
op	55:14	0:0	4	||
water	55:17	0:0	4	p_block
op	55:24	0:0	4	->
water	55:26	0:0	4	i_buffer
op	55:35	0:0	4	<=
water	55:38	0:0	4	p_sys
op	55:43	0:0	4	->
water	55:45	0:0	4	i_header_size
op	55:59	0:0	4	+
water	55:61	0:0	4	i_padding
stmts	56:4	60:4	3	
water	56:4	0:0	4	{
call	57:8	57:60	4	msg_Warn
arg	57:18	57:23	5	p_dec
water	57:18	0:0	6	p_dec
arg	57:25	57:60	5	"no frame sync or too small frame"
water	57:25	0:0	6	"no frame sync or too small frame"
water	57:61	0:0	4	;
call	58:8	58:31	4	block_Release
arg	58:23	58:31	5	p_block
water	58:23	0:0	6	p_block
water	58:32	0:0	4	;
return	59:8	59:19	4	NULL
water	59:15	0:0	5	NULL
water	60:4	0:0	4	}
if	62:4	66:4	2	(p_dec -> fmt_out . audio . i_rate != i_rate)
cond	62:8	62:39	3	p_dec -> fmt_out . audio . i_rate != i_rate
water	62:8	0:0	4	p_dec
op	62:13	0:0	4	->
water	62:15	0:0	4	fmt_out
op	62:22	0:0	4	.
water	62:23	0:0	4	audio
op	62:28	0:0	4	.
water	62:29	0:0	4	i_rate
op	62:36	0:0	4	!=
water	62:39	0:0	4	i_rate
stmts	63:4	66:4	3	
water	63:4	0:0	4	{
call	64:8	64:47	4	date_Init
arg	64:19	64:35	5	&p_sys->end_date
op	64:19	0:0	6	&
water	64:20	0:0	6	p_sys
op	64:25	0:0	6	->
water	64:27	0:0	6	end_date
arg	64:37	64:43	5	i_rate
water	64:37	0:0	6	i_rate
arg	64:45	64:47	5	1
water	64:45	0:0	6	1
water	64:48	0:0	4	;
call	65:8	65:51	4	date_Set
arg	65:18	65:34	5	&p_sys->end_date
op	65:18	0:0	6	&
water	65:19	0:0	6	p_sys
op	65:24	0:0	6	->
water	65:26	0:0	6	end_date
arg	65:36	65:51	5	p_block->i_pts
water	65:36	0:0	6	p_block
op	65:43	0:0	6	->
water	65:45	0:0	6	i_pts
water	65:52	0:0	4	;
water	66:4	0:0	4	}
water	67:4	0:0	2	p_dec
op	67:9	0:0	2	->
water	67:11	0:0	2	fmt_out
op	67:18	0:0	2	.
water	67:19	0:0	2	audio
op	67:24	0:0	2	.
water	67:25	0:0	2	i_rate
op	67:32	0:0	2	=
water	67:34	0:0	2	i_rate
water	67:40	0:0	2	;
water	68:4	0:0	2	p_dec
op	68:9	0:0	2	->
water	68:11	0:0	2	fmt_out
op	68:18	0:0	2	.
water	68:19	0:0	2	audio
op	68:24	0:0	2	.
water	68:25	0:0	2	i_channels
op	68:36	0:0	2	=
water	68:38	0:0	2	i_channels
water	68:48	0:0	2	;
water	69:4	0:0	2	p_dec
op	69:9	0:0	2	->
water	69:11	0:0	2	fmt_out
op	69:18	0:0	2	.
water	69:19	0:0	2	audio
op	69:24	0:0	2	.
water	69:25	0:0	2	i_original_channels
op	69:45	0:0	2	=
water	69:47	0:0	2	i_original_channels
water	69:66	0:0	2	;
water	70:4	0:0	2	p_dec
op	70:9	0:0	2	->
water	70:11	0:0	2	fmt_out
op	70:18	0:0	2	.
water	70:19	0:0	2	audio
op	70:24	0:0	2	.
water	70:25	0:0	2	i_physical_channels
op	70:45	0:0	2	=
water	70:47	0:0	2	i_original_channels
water	70:66	0:0	2	;
water	71:4	0:0	2	i_frame_length
op	71:19	0:0	2	=
water	71:21	0:0	2	(
water	71:22	0:0	2	p_block
op	71:29	0:0	2	->
water	71:31	0:0	2	i_buffer
op	71:40	0:0	2	-
water	71:42	0:0	2	p_sys
op	71:47	0:0	2	->
water	71:49	0:0	2	i_header_size
op	71:63	0:0	2	-
water	71:65	0:0	2	i_padding
water	71:74	0:0	2	)
op	71:76	0:0	2	/
water	72:21	0:0	2	(
water	72:22	0:0	2	i_channels
op	72:33	0:0	2	+
water	72:35	0:0	2	i_channels_padding
water	72:53	0:0	2	)
op	72:55	0:0	2	*
water	72:57	0:0	2	8
op	72:59	0:0	2	/
water	72:61	0:0	2	i_bits
water	72:67	0:0	2	;
if	73:4	81:4	2	(p_sys -> b_packetizer)
cond	73:8	73:15	3	p_sys -> b_packetizer
water	73:8	0:0	4	p_sys
op	73:13	0:0	4	->
water	73:15	0:0	4	b_packetizer
stmts	74:4	81:4	3	
water	74:4	0:0	4	{
water	75:8	0:0	4	p_block
op	75:15	0:0	4	->
water	75:17	0:0	4	i_pts
op	75:23	0:0	4	=
water	75:25	0:0	4	p_block
op	75:32	0:0	4	->
water	75:34	0:0	4	i_dts
op	75:40	0:0	4	=
call	75:42	75:69	4	date_Get
arg	75:52	75:69	5	&p_sys->end_date
op	75:52	0:0	6	&
water	75:53	0:0	6	p_sys
op	75:58	0:0	6	->
water	75:60	0:0	6	end_date
water	75:70	0:0	4	;
water	76:8	0:0	4	p_block
op	76:15	0:0	4	->
water	76:17	0:0	4	i_length
op	76:26	0:0	4	=
call	77:12	77:61	4	date_Increment
arg	77:28	77:44	5	&p_sys->end_date
op	77:28	0:0	6	&
water	77:29	0:0	6	p_sys
op	77:34	0:0	6	->
water	77:36	0:0	6	end_date
arg	77:46	77:61	5	i_frame_length
water	77:46	0:0	6	i_frame_length
op	77:63	0:0	4	-
water	78:12	0:0	4	p_block
op	78:19	0:0	4	->
water	78:21	0:0	4	i_pts
water	78:26	0:0	4	;
return	80:8	80:22	4	p_block
water	80:15	0:0	5	p_block
water	81:4	0:0	4	}
else	82:4	131:4	2
stmts	83:4	131:4	3	
water	83:4	0:0	4	{
if	85:8	90:8	4	(i_bits == 16)
cond	85:12	85:22	5	i_bits == 16
water	85:12	0:0	6	i_bits
op	85:19	0:0	6	==
water	85:22	0:0	6	16
stmts	86:8	90:8	5	
water	86:8	0:0	6	{
water	87:12	0:0	6	p_dec
op	87:17	0:0	6	->
water	87:19	0:0	6	fmt_out
op	87:26	0:0	6	.
water	87:27	0:0	6	audio
op	87:32	0:0	6	.
water	87:33	0:0	6	i_format
op	87:42	0:0	6	=
water	88:12	0:0	6	p_dec
op	88:17	0:0	6	->
water	88:19	0:0	6	fmt_out
op	88:26	0:0	6	.
water	88:27	0:0	6	i_codec
op	88:35	0:0	6	=
water	88:37	0:0	6	VLC_CODEC_S16N
water	88:51	0:0	6	;
water	89:12	0:0	6	p_dec
op	89:17	0:0	6	->
water	89:19	0:0	6	fmt_out
op	89:26	0:0	6	.
water	89:27	0:0	6	audio
op	89:32	0:0	6	.
water	89:33	0:0	6	i_bitspersample
op	89:49	0:0	6	=
water	89:51	0:0	6	16
water	89:53	0:0	6	;
water	90:8	0:0	6	}
else	91:8	96:8	4
stmts	92:8	96:8	5	
water	92:8	0:0	6	{
water	93:12	0:0	6	p_dec
op	93:17	0:0	6	->
water	93:19	0:0	6	fmt_out
op	93:26	0:0	6	.
water	93:27	0:0	6	audio
op	93:32	0:0	6	.
water	93:33	0:0	6	i_format
op	93:42	0:0	6	=
water	94:12	0:0	6	p_dec
op	94:17	0:0	6	->
water	94:19	0:0	6	fmt_out
op	94:26	0:0	6	.
water	94:27	0:0	6	i_codec
op	94:35	0:0	6	=
water	94:37	0:0	6	VLC_CODEC_S32N
water	94:51	0:0	6	;
water	95:12	0:0	6	p_dec
op	95:17	0:0	6	->
water	95:19	0:0	6	fmt_out
op	95:26	0:0	6	.
water	95:27	0:0	6	audio
op	95:32	0:0	6	.
water	95:33	0:0	6	i_bitspersample
op	95:49	0:0	6	=
water	95:51	0:0	6	32
water	95:53	0:0	6	;
water	96:8	0:0	6	}
decl	98:8	98:30	4	block_t	*p_aout_buffer
water	99:8	0:0	4	p_aout_buffer
op	99:22	0:0	4	=
call	99:24	99:70	4	decoder_NewAudioBuffer
arg	99:48	99:53	5	p_dec
water	99:48	0:0	6	p_dec
arg	99:55	99:70	5	i_frame_length
water	99:55	0:0	6	i_frame_length
water	99:71	0:0	4	;
if	100:8	101:23	4	(! p_aout_buffer)
cond	100:12	100:13	5	! p_aout_buffer
op	100:12	0:0	6	!
water	100:13	0:0	6	p_aout_buffer
stmts	101:12	101:23	5	
return	101:12	101:23	6	NULL
water	101:19	0:0	7	NULL
water	102:8	0:0	4	p_aout_buffer
op	102:21	0:0	4	->
water	102:23	0:0	4	i_pts
op	102:29	0:0	4	=
call	102:31	102:58	4	date_Get
arg	102:41	102:58	5	&p_sys->end_date
op	102:41	0:0	6	&
water	102:42	0:0	6	p_sys
op	102:47	0:0	6	->
water	102:49	0:0	6	end_date
water	102:59	0:0	4	;
water	103:8	0:0	4	p_aout_buffer
op	103:21	0:0	4	->
water	103:23	0:0	4	i_length
op	103:32	0:0	4	=
call	104:12	104:61	4	date_Increment
arg	104:28	104:44	5	&p_sys->end_date
op	104:28	0:0	6	&
water	104:29	0:0	6	p_sys
op	104:34	0:0	6	->
water	104:36	0:0	6	end_date
arg	104:46	104:61	5	i_frame_length
water	104:46	0:0	6	i_frame_length
op	105:12	0:0	4	-
water	105:14	0:0	4	p_aout_buffer
op	105:27	0:0	4	->
water	105:29	0:0	4	i_pts
water	105:34	0:0	4	;
water	106:8	0:0	4	p_block
op	106:15	0:0	4	->
water	106:17	0:0	4	p_buffer
op	106:26	0:0	4	+=
water	106:29	0:0	4	p_sys
op	106:34	0:0	4	->
water	106:36	0:0	4	i_header_size
op	106:50	0:0	4	+
water	106:52	0:0	4	i_padding
water	106:61	0:0	4	;
water	107:8	0:0	4	p_block
op	107:15	0:0	4	->
water	107:17	0:0	4	i_buffer
op	107:26	0:0	4	-=
water	107:29	0:0	4	p_sys
op	107:34	0:0	4	->
water	107:36	0:0	4	i_header_size
op	107:50	0:0	4	+
water	107:52	0:0	4	i_padding
water	107:61	0:0	4	;
switch	108:8	122:8	4	(p_sys -> i_type)
cond	108:16	108:23	5	p_sys -> i_type
water	108:16	0:0	6	p_sys
op	108:21	0:0	6	->
water	108:23	0:0	6	i_type
stmts	109:8	122:8	5	
water	109:8	0:0	6	{
label	110:8	110:22	6	case LPCM_WIDI :
label	111:8	111:21	6	case LPCM_VOB :
call	112:12	112:55	6	VobExtract
arg	112:24	112:37	7	p_aout_buffer
water	112:24	0:0	8	p_aout_buffer
arg	112:39	112:46	7	p_block
water	112:39	0:0	8	p_block
arg	112:48	112:55	7	i_bits
water	112:48	0:0	8	i_bits
water	112:56	0:0	6	;
break	113:12	113:17	6	
label	114:8	114:21	6	case LPCM_AOB :
call	115:12	115:68	6	AobExtract
arg	115:24	115:37	7	p_aout_buffer
water	115:24	0:0	8	p_aout_buffer
arg	115:39	115:46	7	p_block
water	115:39	0:0	8	p_block
arg	115:48	115:54	7	i_bits
water	115:48	0:0	8	i_bits
arg	115:56	115:68	7	p_aob_group
water	115:56	0:0	8	p_aob_group
water	115:69	0:0	6	;
break	116:12	116:17	6	
label	117:8	117:15	6	default :
call	118:12	118:20	6	assert
arg	118:19	118:20	7	0
water	118:19	0:0	8	0
water	118:21	0:0	6	;
label	119:8	119:20	6	case LPCM_BD :
call	120:12	120:102	6	BdExtract
arg	120:23	120:36	7	p_aout_buffer
water	120:23	0:0	8	p_aout_buffer
arg	120:38	120:45	7	p_block
water	120:38	0:0	8	p_block
arg	120:47	120:61	7	i_frame_length
water	120:47	0:0	8	i_frame_length
arg	120:63	120:73	7	i_channels
water	120:63	0:0	8	i_channels
arg	120:75	120:93	7	i_channels_padding
water	120:75	0:0	8	i_channels_padding
arg	120:95	120:102	7	i_bits
water	120:95	0:0	8	i_bits
water	120:103	0:0	6	;
break	121:12	121:17	6	
water	122:8	0:0	6	}
if	123:8	128:8	4	(p_sys -> i_chans_to_reorder)
cond	123:12	123:19	5	p_sys -> i_chans_to_reorder
water	123:12	0:0	6	p_sys
op	123:17	0:0	6	->
water	123:19	0:0	6	i_chans_to_reorder
stmts	124:8	128:8	5	
water	124:8	0:0	6	{
call	125:12	127:56	6	aout_ChannelReorder
arg	125:33	125:56	7	p_aout_buffer->p_buffer
water	125:33	0:0	8	p_aout_buffer
op	125:46	0:0	8	->
water	125:48	0:0	8	p_buffer
arg	125:58	125:81	7	p_aout_buffer->i_buffer
water	125:58	0:0	8	p_aout_buffer
op	125:71	0:0	8	->
water	125:73	0:0	8	i_buffer
arg	126:33	126:58	7	p_sys->i_chans_to_reorder
water	126:33	0:0	8	p_sys
op	126:38	0:0	8	->
water	126:40	0:0	8	i_chans_to_reorder
arg	126:60	126:80	7	p_sys->pi_chan_table
water	126:60	0:0	8	p_sys
op	126:65	0:0	8	->
water	126:67	0:0	8	pi_chan_table
arg	127:33	127:56	7	p_dec->fmt_out.i_codec
water	127:33	0:0	8	p_dec
op	127:38	0:0	8	->
water	127:40	0:0	8	fmt_out
op	127:47	0:0	8	.
water	127:48	0:0	8	i_codec
water	127:57	0:0	6	;
water	128:8	0:0	6	}
call	129:8	129:31	4	block_Release
arg	129:23	129:31	5	p_block
water	129:23	0:0	6	p_block
water	129:32	0:0	4	;
return	130:8	130:28	4	p_aout_buffer
water	130:15	0:0	5	p_aout_buffer
water	131:4	0:0	4	}

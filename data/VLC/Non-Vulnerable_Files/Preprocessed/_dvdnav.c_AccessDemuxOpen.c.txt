func	2:0	53:0	0	static int	AccessDemuxOpen
params	2:27	0:0	1	
param	2:29	2:50	2	vlc_object_t *	p_this
stmnts	0:0	52:16	1	
decl	4:4	4:39	2	demux_t	*p_demux
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	demux_t
op	4:31	0:0	2	*
water	4:32	0:0	2	)
water	4:33	0:0	2	p_this
decl	5:4	5:29	2	dvdnav_t	*p_dvdnav
op	5:23	0:0	2	=
water	5:25	0:0	2	NULL
decl	6:4	6:25	2	char	*psz_file
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
decl	7:4	7:31	2	const char	*psz_path
op	7:25	0:0	2	=
water	7:27	0:0	2	NULL
decl	8:4	8:28	2	int	i_ret
op	8:14	0:0	2	=
water	8:16	0:0	2	VLC_EGENERIC
decl	9:4	9:23	2	bool	forced
op	9:16	0:0	2	=
water	9:18	0:0	2	false
if	10:4	12:21	2	(p_demux -> psz_access != NULL && !strncmp (p_demux -> psz_access ,"dvd" ,3 ))
cond	10:8	11:46	3	p_demux -> psz_access != NULL && !strncmp (p_demux -> psz_access ,"dvd" ,3 )
water	10:8	0:0	4	p_demux
op	10:15	0:0	4	->
water	10:17	0:0	4	psz_access
op	10:28	0:0	4	!=
water	10:31	0:0	4	NULL
op	11:5	0:0	4	&&
op	11:8	0:0	4	!
call	11:9	11:46	4	strncmp
arg	11:17	11:36	5	p_demux->psz_access
water	11:17	0:0	6	p_demux
op	11:24	0:0	6	->
water	11:26	0:0	6	psz_access
arg	11:38	11:43	5	"dvd"
water	11:38	0:0	6	"dvd"
arg	11:45	11:46	5	3
water	11:45	0:0	6	3
stmts	12:8	12:21	3	
water	12:8	0:0	4	forced
op	12:15	0:0	4	=
water	12:17	0:0	4	true
water	12:21	0:0	4	;
if	13:4	19:4	2	(! p_demux -> psz_file || ! * p_demux -> psz_file)
cond	13:8	13:41	3	! p_demux -> psz_file || ! * p_demux -> psz_file
op	13:8	0:0	4	!
water	13:9	0:0	4	p_demux
op	13:16	0:0	4	->
water	13:18	0:0	4	psz_file
op	13:27	0:0	4	||
op	13:30	0:0	4	!
op	13:31	0:0	4	*
water	13:32	0:0	4	p_demux
op	13:39	0:0	4	->
water	13:41	0:0	4	psz_file
stmts	14:4	19:4	3	
water	14:4	0:0	4	{
if	16:8	17:31	4	(! forced)
cond	16:12	16:13	5	! forced
op	16:12	0:0	6	!
water	16:13	0:0	6	forced
stmts	17:12	17:31	5	
return	17:12	17:31	6	VLC_EGENERIC
water	17:19	0:0	7	VLC_EGENERIC
water	18:8	0:0	4	psz_file
op	18:17	0:0	4	=
call	18:19	18:52	4	var_InheritString
arg	18:38	18:44	5	p_this
water	18:38	0:0	6	p_this
arg	18:46	18:52	5	"dvd"
water	18:46	0:0	6	"dvd"
water	18:53	0:0	4	;
water	19:4	0:0	4	}
else	20:4	21:46	2
stmts	21:8	21:46	3	
water	21:8	0:0	4	psz_file
op	21:17	0:0	4	=
call	21:19	21:45	4	strdup
arg	21:27	21:45	5	p_demux->psz_file
water	21:27	0:0	6	p_demux
op	21:34	0:0	6	->
water	21:36	0:0	6	psz_file
water	21:46	0:0	4	;
if	23:4	29:4	2	(psz_file != NULL)
cond	23:8	23:20	3	psz_file != NULL
water	23:8	0:0	4	psz_file
op	23:17	0:0	4	!=
water	23:20	0:0	4	NULL
stmts	24:4	29:4	3	
water	24:4	0:0	4	{
decl	26:8	26:40	4	size_t	flen
op	26:20	0:0	4	=
call	26:22	26:39	5	strlen
arg	26:30	26:39	6	psz_file
water	26:30	0:0	7	psz_file
if	27:8	28:37	4	(flen > 0 && psz_file [ flen - 1 ] == '\\')
cond	27:12	27:46	5	flen > 0 && psz_file [ flen - 1 ] == '\\'
water	27:12	0:0	6	flen
op	27:17	0:0	6	>
water	27:19	0:0	6	0
op	27:21	0:0	6	&&
water	27:24	0:0	6	psz_file
op	27:32	0:0	6	[
water	27:33	0:0	6	flen
op	27:38	0:0	6	-
water	27:40	0:0	6	1
op	27:41	0:0	6	]
op	27:43	0:0	6	==
water	27:46	0:0	6	'\\'
stmts	28:12	28:37	5	
water	28:12	0:0	6	psz_file
op	28:20	0:0	6	[
water	28:21	0:0	6	flen
op	28:26	0:0	6	-
water	28:28	0:0	6	1
op	28:29	0:0	6	]
op	28:31	0:0	6	=
water	28:33	0:0	6	'\0'
water	28:37	0:0	6	;
water	29:4	0:0	4	}
else	30:4	31:29	2
stmts	31:8	31:29	3	
water	31:8	0:0	4	psz_file
op	31:17	0:0	4	=
call	31:19	31:28	4	strdup
arg	31:26	31:28	5	""
water	31:26	0:0	6	""
water	31:29	0:0	4	;
if	33:4	34:27	2	(unlikely (psz_file == NULL ))
cond	33:8	33:33	3	unlikely (psz_file == NULL )
call	33:8	33:33	4	unlikely
arg	33:17	33:33	5	psz_file==NULL
water	33:17	0:0	6	psz_file
op	33:26	0:0	6	==
water	33:29	0:0	6	NULL
stmts	34:8	34:27	3	
return	34:8	34:27	4	VLC_EGENERIC
water	34:15	0:0	5	VLC_EGENERIC
if	36:4	37:20	2	(! forced &&ProbeDVD (psz_file ) != VLC_SUCCESS)
cond	36:8	36:43	3	! forced &&ProbeDVD (psz_file ) != VLC_SUCCESS
op	36:8	0:0	4	!
water	36:9	0:0	4	forced
op	36:16	0:0	4	&&
call	36:19	36:38	4	ProbeDVD
arg	36:29	36:38	5	psz_file
water	36:29	0:0	6	psz_file
op	36:40	0:0	4	!=
water	36:43	0:0	4	VLC_SUCCESS
stmts	37:8	37:20	3	
goto	37:8	37:20	4	bailout
water	37:13	0:0	5	bailout
water	39:4	0:0	2	psz_path
op	39:13	0:0	2	=
call	39:15	39:34	2	ToLocale
arg	39:25	39:34	3	psz_file
water	39:25	0:0	4	psz_file
water	39:35	0:0	2	;
if	40:4	44:4	2	(dvdnav_open (& p_dvdnav ,psz_path ) != DVDNAV_STATUS_OK)
cond	40:8	40:46	3	dvdnav_open (& p_dvdnav ,psz_path ) != DVDNAV_STATUS_OK
call	40:8	40:41	4	dvdnav_open
arg	40:21	40:30	5	&p_dvdnav
op	40:21	0:0	6	&
water	40:22	0:0	6	p_dvdnav
arg	40:32	40:41	5	psz_path
water	40:32	0:0	6	psz_path
op	40:43	0:0	4	!=
water	40:46	0:0	4	DVDNAV_STATUS_OK
stmts	41:4	44:4	3	
water	41:4	0:0	4	{
call	42:8	42:59	4	msg_Warn
arg	42:18	42:25	5	p_demux
water	42:18	0:0	6	p_demux
arg	42:27	42:49	5	"cannot open DVD (%s)"
water	42:27	0:0	6	"cannot open DVD (%s)"
arg	42:51	42:59	5	psz_file
water	42:51	0:0	6	psz_file
water	42:60	0:0	4	;
goto	43:8	43:20	4	bailout
water	43:13	0:0	5	bailout
water	44:4	0:0	4	}
water	45:4	0:0	2	i_ret
op	45:10	0:0	2	=
call	45:12	45:59	2	CommonOpen
arg	45:24	45:30	3	p_this
water	45:24	0:0	4	p_this
arg	45:32	45:40	3	p_dvdnav
water	45:32	0:0	4	p_dvdnav
arg	45:42	45:59	3	!!DVD_READ_CACHE
op	45:42	0:0	4	!
op	45:43	0:0	4	!
water	45:44	0:0	4	DVD_READ_CACHE
water	45:60	0:0	2	;
if	46:4	47:32	2	(i_ret != VLC_SUCCESS)
cond	46:8	46:17	3	i_ret != VLC_SUCCESS
water	46:8	0:0	4	i_ret
op	46:14	0:0	4	!=
water	46:17	0:0	4	VLC_SUCCESS
stmts	47:8	47:32	3	
call	47:8	47:31	4	dvdnav_close
arg	47:22	47:31	5	p_dvdnav
water	47:22	0:0	6	p_dvdnav
water	47:32	0:0	4	;
label	48:0	48:7	2	bailout :
call	49:4	49:19	2	free
arg	49:10	49:19	3	psz_file
water	49:10	0:0	4	psz_file
water	49:20	0:0	2	;
if	50:4	51:30	2	(psz_path)
cond	50:8	50:8	3	psz_path
water	50:8	0:0	4	psz_path
stmts	51:8	51:30	3	
call	51:8	51:29	4	LocaleFree
arg	51:20	51:29	5	psz_path
water	51:20	0:0	6	psz_path
water	51:30	0:0	4	;
return	52:4	52:16	2	i_ret
water	52:11	0:0	3	i_ret

func	2:0	68:0	0	static int	RenderYUVA
params	2:21	0:0	1	
param	2:22	2:40	2	filter_t *	p_filter
param	2:42	2:71	2	subpicture_region_t *	p_region
param	3:23	3:64	2	CFMutableAttributedStringRef	p_attrString
stmnts	0:0	67:22	1	
decl	5:4	5:42	2	offscreen_bitmap_t	*p_offScreen
op	5:36	0:0	2	=
water	5:38	0:0	2	NULL
water	6:4	0:0	2	unsigned
water	6:18	0:0	2	i_textblock_height
op	6:37	0:0	2	=
water	6:39	0:0	2	0
water	6:40	0:0	2	;
water	7:4	0:0	2	unsigned
water	7:13	0:0	2	i_width
op	7:21	0:0	2	=
water	7:23	0:0	2	p_filter
op	7:31	0:0	2	->
water	7:33	0:0	2	fmt_out
op	7:40	0:0	2	.
water	7:41	0:0	2	video
op	7:46	0:0	2	.
water	7:47	0:0	2	i_visible_width
water	7:62	0:0	2	;
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	i_height
op	8:22	0:0	2	=
water	8:24	0:0	2	p_filter
op	8:32	0:0	2	->
water	8:34	0:0	2	fmt_out
op	8:41	0:0	2	.
water	8:42	0:0	2	video
op	8:47	0:0	2	.
water	8:48	0:0	2	i_visible_height
water	8:64	0:0	2	;
water	9:4	0:0	2	unsigned
water	9:13	0:0	2	i_text_align
op	9:26	0:0	2	=
water	9:28	0:0	2	p_region
op	9:36	0:0	2	->
water	9:38	0:0	2	i_align
op	9:46	0:0	2	&
water	9:48	0:0	2	0
water	9:49	0:0	2	x3
water	9:51	0:0	2	;
if	10:4	13:4	2	(! p_attrString)
cond	10:8	10:9	3	! p_attrString
op	10:8	0:0	4	!
water	10:9	0:0	4	p_attrString
stmts	10:23	13:4	3	
water	10:23	0:0	4	{
call	11:8	11:58	4	msg_Err
arg	11:16	11:24	5	p_filter
water	11:16	0:0	6	p_filter
arg	11:26	11:58	5	"Invalid argument to RenderYUVA"
water	11:26	0:0	6	"Invalid argument to RenderYUVA"
water	11:59	0:0	4	;
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	13:4	0:0	4	}
water	14:4	0:0	2	p_offScreen
op	14:16	0:0	2	=
call	14:18	15:65	2	Compose
arg	14:26	14:38	3	i_text_align
water	14:26	0:0	4	i_text_align
arg	14:40	14:52	3	p_attrString
water	14:40	0:0	4	p_attrString
arg	15:27	15:34	3	i_width
water	15:27	0:0	4	i_width
arg	15:36	15:44	3	i_height
water	15:36	0:0	4	i_height
arg	15:46	15:65	3	&i_textblock_height
op	15:46	0:0	4	&
water	15:47	0:0	4	i_textblock_height
water	15:66	0:0	2	;
if	16:4	19:4	2	(! p_offScreen)
cond	16:8	16:9	3	! p_offScreen
op	16:8	0:0	4	!
water	16:9	0:0	4	p_offScreen
stmts	16:22	19:4	3	
water	16:22	0:0	4	{
call	17:8	17:47	4	msg_Err
arg	17:16	17:24	5	p_filter
water	17:16	0:0	6	p_filter
arg	17:26	17:47	5	"No offscreen buffer"
water	17:26	0:0	6	"No offscreen buffer"
water	17:48	0:0	4	;
return	18:8	18:27	4	VLC_EGENERIC
water	18:15	0:0	5	VLC_EGENERIC
water	19:4	0:0	4	}
decl	20:4	20:47	2	uint8_t	*p_dst_y
water	20:20	0:0	2	,
decl	20:4	20:47	2	uint8_t	*p_dst_u
water	20:29	0:0	2	,
decl	20:4	20:47	2	uint8_t	*p_dst_v
water	20:38	0:0	2	,
decl	20:4	20:47	2	uint8_t	*p_dst_a
decl	21:4	21:22	2	video_format_t	fmt
decl	22:4	22:16	2	int	i_offset
water	23:4	0:0	2	unsigned
water	23:13	0:0	2	i_pitch
water	23:20	0:0	2	;
decl	24:4	24:25	2	uint8_t	i_y
water	24:15	0:0	2	,
decl	24:4	24:25	2	uint8_t	i_u
water	24:20	0:0	2	,
decl	24:4	24:25	2	uint8_t	i_v
call	26:4	26:42	2	memset
arg	26:11	26:15	3	&fmt
op	26:11	0:0	4	&
water	26:12	0:0	4	fmt
arg	26:17	26:18	3	0
water	26:17	0:0	4	0
arg	26:20	26:42	3	sizeof(video_format_t)
op	26:20	0:0	4	sizeof
water	26:26	0:0	4	(
water	26:27	0:0	4	video_format_t
water	26:41	0:0	4	)
water	26:43	0:0	2	;
water	27:4	0:0	2	fmt
op	27:7	0:0	2	.
water	27:8	0:0	2	i_chroma
op	27:17	0:0	2	=
water	27:19	0:0	2	VLC_CODEC_YUVA
water	27:33	0:0	2	;
water	28:4	0:0	2	fmt
op	28:7	0:0	2	.
water	28:8	0:0	2	i_width
op	28:16	0:0	2	=
water	28:18	0:0	2	fmt
op	28:21	0:0	2	.
water	28:22	0:0	2	i_visible_width
op	28:38	0:0	2	=
water	28:40	0:0	2	i_width
water	28:47	0:0	2	;
water	29:4	0:0	2	fmt
op	29:7	0:0	2	.
water	29:8	0:0	2	i_height
op	29:17	0:0	2	=
water	29:19	0:0	2	fmt
op	29:22	0:0	2	.
water	29:23	0:0	2	i_visible_height
op	29:40	0:0	2	=
call	29:42	29:98	2	__MIN
arg	29:48	29:56	3	i_height
water	29:48	0:0	4	i_height
arg	29:58	29:98	3	i_textblock_height+VERTICAL_MARGIN*2
water	29:58	0:0	4	i_textblock_height
op	29:77	0:0	4	+
water	29:79	0:0	4	VERTICAL_MARGIN
op	29:95	0:0	4	*
water	29:97	0:0	4	2
water	29:99	0:0	2	;
water	30:4	0:0	2	fmt
op	30:7	0:0	2	.
water	30:8	0:0	2	i_x_offset
op	30:19	0:0	2	=
water	30:21	0:0	2	fmt
op	30:24	0:0	2	.
water	30:25	0:0	2	i_y_offset
op	30:36	0:0	2	=
water	30:38	0:0	2	0
water	30:39	0:0	2	;
water	31:4	0:0	2	fmt
op	31:7	0:0	2	.
water	31:8	0:0	2	i_sar_num
op	31:18	0:0	2	=
water	31:20	0:0	2	1
water	31:21	0:0	2	;
water	32:4	0:0	2	fmt
op	32:7	0:0	2	.
water	32:8	0:0	2	i_sar_den
op	32:18	0:0	2	=
water	32:20	0:0	2	1
water	32:21	0:0	2	;
water	33:4	0:0	2	p_region
op	33:12	0:0	2	->
water	33:14	0:0	2	p_picture
op	33:24	0:0	2	=
call	33:26	33:52	2	picture_NewFromFormat
arg	33:48	33:52	3	&fmt
op	33:48	0:0	4	&
water	33:49	0:0	4	fmt
water	33:53	0:0	2	;
if	34:4	38:4	2	(! p_region -> p_picture)
cond	34:8	34:19	3	! p_region -> p_picture
op	34:8	0:0	4	!
water	34:9	0:0	4	p_region
op	34:17	0:0	4	->
water	34:19	0:0	4	p_picture
stmts	34:30	38:4	3	
water	34:30	0:0	4	{
call	35:8	35:32	4	free
arg	35:13	35:32	5	p_offScreen->p_data
water	35:13	0:0	6	p_offScreen
op	35:24	0:0	6	->
water	35:26	0:0	6	p_data
water	35:33	0:0	4	;
call	36:8	36:24	4	free
arg	36:13	36:24	5	p_offScreen
water	36:13	0:0	6	p_offScreen
water	36:25	0:0	4	;
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
water	38:4	0:0	4	}
water	39:4	0:0	2	p_region
op	39:12	0:0	2	->
water	39:14	0:0	2	fmt
op	39:18	0:0	2	=
water	39:20	0:0	2	fmt
water	39:23	0:0	2	;
water	40:4	0:0	2	p_dst_y
op	40:12	0:0	2	=
water	40:14	0:0	2	p_region
op	40:22	0:0	2	->
water	40:24	0:0	2	p_picture
op	40:33	0:0	2	->
water	40:35	0:0	2	Y_PIXELS
water	40:43	0:0	2	;
water	41:4	0:0	2	p_dst_u
op	41:12	0:0	2	=
water	41:14	0:0	2	p_region
op	41:22	0:0	2	->
water	41:24	0:0	2	p_picture
op	41:33	0:0	2	->
water	41:35	0:0	2	U_PIXELS
water	41:43	0:0	2	;
water	42:4	0:0	2	p_dst_v
op	42:12	0:0	2	=
water	42:14	0:0	2	p_region
op	42:22	0:0	2	->
water	42:24	0:0	2	p_picture
op	42:33	0:0	2	->
water	42:35	0:0	2	V_PIXELS
water	42:43	0:0	2	;
water	43:4	0:0	2	p_dst_a
op	43:12	0:0	2	=
water	43:14	0:0	2	p_region
op	43:22	0:0	2	->
water	43:24	0:0	2	p_picture
op	43:33	0:0	2	->
water	43:35	0:0	2	A_PIXELS
water	43:43	0:0	2	;
water	44:4	0:0	2	i_pitch
op	44:12	0:0	2	=
water	44:14	0:0	2	p_region
op	44:22	0:0	2	->
water	44:24	0:0	2	p_picture
op	44:33	0:0	2	->
water	44:35	0:0	2	A_PITCH
water	44:42	0:0	2	;
water	45:4	0:0	2	i_offset
op	45:13	0:0	2	=
water	45:15	0:0	2	(
water	45:16	0:0	2	i_height
op	45:25	0:0	2	+
water	45:27	0:0	2	VERTICAL_MARGIN
op	45:43	0:0	2	<
water	45:45	0:0	2	fmt
op	45:48	0:0	2	.
water	45:49	0:0	2	i_height
water	45:57	0:0	2	)
water	45:59	0:0	2	?
water	45:61	0:0	2	VERTICAL_MARGIN
op	45:77	0:0	2	*
water	45:78	0:0	2	i_pitch
water	45:86	0:0	2	:
water	45:88	0:0	2	0
water	45:90	0:0	2	;
for	46:4	64:4	2	(unsigned y = 0 ;y < fmt . i_height;y ++)
forinit	46:9	46:23	3	unsigned y = 0 ;
water	46:9	0:0	4	unsigned
water	46:18	0:0	4	y
op	46:20	0:0	4	=
water	46:22	0:0	4	0
water	46:23	0:0	4	;
cond	46:25	46:33	3	y < fmt . i_height
water	46:25	0:0	4	y
op	46:27	0:0	4	<
water	46:29	0:0	4	fmt
op	46:32	0:0	4	.
water	46:33	0:0	4	i_height
forexpr	46:43	46:44	3	y ++
water	46:43	0:0	4	y
op	46:44	0:0	4	++
stmts	46:48	64:4	3	
water	46:48	0:0	4	{
for	47:8	62:8	4	(unsigned x = 0 ;x < fmt . i_width;x ++)
forinit	47:13	47:27	5	unsigned x = 0 ;
water	47:13	0:0	6	unsigned
water	47:22	0:0	6	x
op	47:24	0:0	6	=
water	47:26	0:0	6	0
water	47:27	0:0	6	;
cond	47:29	47:37	5	x < fmt . i_width
water	47:29	0:0	6	x
op	47:31	0:0	6	<
water	47:33	0:0	6	fmt
op	47:36	0:0	6	.
water	47:37	0:0	6	i_width
forexpr	47:46	47:47	5	x ++
water	47:46	0:0	6	x
op	47:47	0:0	6	++
stmts	47:51	62:8	5	
water	47:51	0:0	6	{
decl	48:12	48:118	6	int	i_alpha
op	48:24	0:0	6	=
water	48:26	0:0	6	p_offScreen
op	48:37	0:0	6	->
water	48:39	0:0	6	p_data
op	48:45	0:0	6	[
water	48:47	0:0	6	y
op	48:49	0:0	6	*
water	48:51	0:0	6	p_offScreen
op	48:62	0:0	6	->
water	48:64	0:0	6	i_bytesPerRow
op	48:78	0:0	6	+
water	48:80	0:0	6	x
op	48:82	0:0	6	*
water	48:84	0:0	6	p_offScreen
op	48:95	0:0	6	->
water	48:97	0:0	6	i_bytesPerPixel
op	48:117	0:0	6	]
decl	49:12	49:118	6	int	i_red
op	49:24	0:0	6	=
water	49:26	0:0	6	p_offScreen
op	49:37	0:0	6	->
water	49:39	0:0	6	p_data
op	49:45	0:0	6	[
water	49:47	0:0	6	y
op	49:49	0:0	6	*
water	49:51	0:0	6	p_offScreen
op	49:62	0:0	6	->
water	49:64	0:0	6	i_bytesPerRow
op	49:78	0:0	6	+
water	49:80	0:0	6	x
op	49:82	0:0	6	*
water	49:84	0:0	6	p_offScreen
op	49:95	0:0	6	->
water	49:97	0:0	6	i_bytesPerPixel
op	49:113	0:0	6	+
water	49:115	0:0	6	1
op	49:117	0:0	6	]
decl	50:12	50:118	6	int	i_green
op	50:24	0:0	6	=
water	50:26	0:0	6	p_offScreen
op	50:37	0:0	6	->
water	50:39	0:0	6	p_data
op	50:45	0:0	6	[
water	50:47	0:0	6	y
op	50:49	0:0	6	*
water	50:51	0:0	6	p_offScreen
op	50:62	0:0	6	->
water	50:64	0:0	6	i_bytesPerRow
op	50:78	0:0	6	+
water	50:80	0:0	6	x
op	50:82	0:0	6	*
water	50:84	0:0	6	p_offScreen
op	50:95	0:0	6	->
water	50:97	0:0	6	i_bytesPerPixel
op	50:113	0:0	6	+
water	50:115	0:0	6	2
op	50:117	0:0	6	]
decl	51:12	51:118	6	int	i_blue
op	51:24	0:0	6	=
water	51:26	0:0	6	p_offScreen
op	51:37	0:0	6	->
water	51:39	0:0	6	p_data
op	51:45	0:0	6	[
water	51:47	0:0	6	y
op	51:49	0:0	6	*
water	51:51	0:0	6	p_offScreen
op	51:62	0:0	6	->
water	51:64	0:0	6	i_bytesPerRow
op	51:78	0:0	6	+
water	51:80	0:0	6	x
op	51:82	0:0	6	*
water	51:84	0:0	6	p_offScreen
op	51:95	0:0	6	->
water	51:97	0:0	6	i_bytesPerPixel
op	51:113	0:0	6	+
water	51:115	0:0	6	3
op	51:117	0:0	6	]
water	52:12	0:0	6	i_y
op	52:16	0:0	6	=
water	52:18	0:0	6	(
water	52:19	0:0	6	uint8_t
water	52:26	0:0	6	)
call	52:27	53:70	6	__MIN
arg	52:33	53:65	7	abs(2104*i_red+4130*i_green+802*i_blue+4096+131072)>>13
call	52:33	53:58	8	abs
arg	52:37	53:58	9	2104*i_red+4130*i_green+802*i_blue+4096+131072
water	52:37	0:0	10	2104
op	52:42	0:0	10	*
water	52:44	0:0	10	i_red
op	52:51	0:0	10	+
water	52:53	0:0	10	4130
op	52:58	0:0	10	*
water	52:60	0:0	10	i_green
op	52:68	0:0	10	+
water	53:30	0:0	10	802
op	53:34	0:0	10	*
water	53:36	0:0	10	i_blue
op	53:43	0:0	10	+
water	53:45	0:0	10	4096
op	53:50	0:0	10	+
water	53:52	0:0	10	131072
op	53:60	0:0	8	>>
water	53:63	0:0	8	13
arg	53:67	53:70	7	235
water	53:67	0:0	8	235
water	53:71	0:0	6	;
water	54:12	0:0	6	i_u
op	54:16	0:0	6	=
water	54:18	0:0	6	(
water	54:19	0:0	6	uint8_t
water	54:26	0:0	6	)
call	54:27	55:71	6	__MIN
arg	54:33	55:66	7	abs(-1214*i_red+-2384*i_green+3598*i_blue+4096+1048576)>>13
call	54:33	55:59	8	abs
arg	54:37	55:59	9	-1214*i_red+-2384*i_green+3598*i_blue+4096+1048576
op	54:37	0:0	10	-
water	54:38	0:0	10	1214
op	54:43	0:0	10	*
water	54:45	0:0	10	i_red
op	54:52	0:0	10	+
op	54:54	0:0	10	-
water	54:55	0:0	10	2384
op	54:60	0:0	10	*
water	54:62	0:0	10	i_green
op	54:70	0:0	10	+
water	55:29	0:0	10	3598
op	55:34	0:0	10	*
water	55:36	0:0	10	i_blue
op	55:43	0:0	10	+
water	55:45	0:0	10	4096
op	55:50	0:0	10	+
water	55:52	0:0	10	1048576
op	55:61	0:0	8	>>
water	55:64	0:0	8	13
arg	55:68	55:71	7	240
water	55:68	0:0	8	240
water	55:72	0:0	6	;
water	56:12	0:0	6	i_v
op	56:16	0:0	6	=
water	56:18	0:0	6	(
water	56:19	0:0	6	uint8_t
water	56:26	0:0	6	)
call	56:27	57:72	6	__MIN
arg	56:33	57:67	7	abs(3598*i_red+-3013*i_green+-585*i_blue+4096+1048576)>>13
call	56:33	57:60	8	abs
arg	56:37	57:60	9	3598*i_red+-3013*i_green+-585*i_blue+4096+1048576
water	56:37	0:0	10	3598
op	56:42	0:0	10	*
water	56:44	0:0	10	i_red
op	56:50	0:0	10	+
op	56:52	0:0	10	-
water	56:53	0:0	10	3013
op	56:58	0:0	10	*
water	56:60	0:0	10	i_green
op	56:68	0:0	10	+
op	57:30	0:0	10	-
water	57:31	0:0	10	585
op	57:35	0:0	10	*
water	57:37	0:0	10	i_blue
op	57:44	0:0	10	+
water	57:46	0:0	10	4096
op	57:51	0:0	10	+
water	57:53	0:0	10	1048576
op	57:62	0:0	8	>>
water	57:65	0:0	8	13
arg	57:69	57:72	7	240
water	57:69	0:0	8	240
water	57:73	0:0	6	;
water	58:12	0:0	6	p_dst_y
op	58:19	0:0	6	[
water	58:21	0:0	6	i_offset
op	58:30	0:0	6	+
water	58:32	0:0	6	x
op	58:34	0:0	6	]
op	58:36	0:0	6	=
water	58:38	0:0	6	i_y
water	58:41	0:0	6	;
water	59:12	0:0	6	p_dst_u
op	59:19	0:0	6	[
water	59:21	0:0	6	i_offset
op	59:30	0:0	6	+
water	59:32	0:0	6	x
op	59:34	0:0	6	]
op	59:36	0:0	6	=
water	59:38	0:0	6	i_u
water	59:41	0:0	6	;
water	60:12	0:0	6	p_dst_v
op	60:19	0:0	6	[
water	60:21	0:0	6	i_offset
op	60:30	0:0	6	+
water	60:32	0:0	6	x
op	60:34	0:0	6	]
op	60:36	0:0	6	=
water	60:38	0:0	6	i_v
water	60:41	0:0	6	;
water	61:12	0:0	6	p_dst_a
op	61:19	0:0	6	[
water	61:21	0:0	6	i_offset
op	61:30	0:0	6	+
water	61:32	0:0	6	x
op	61:34	0:0	6	]
op	61:36	0:0	6	=
water	61:38	0:0	6	i_alpha
water	61:45	0:0	6	;
water	62:8	0:0	6	}
water	63:8	0:0	4	i_offset
op	63:17	0:0	4	+=
water	63:20	0:0	4	i_pitch
water	63:27	0:0	4	;
water	64:4	0:0	4	}
call	65:4	65:28	2	free
arg	65:9	65:28	3	p_offScreen->p_data
water	65:9	0:0	4	p_offScreen
op	65:20	0:0	4	->
water	65:22	0:0	4	p_data
water	65:29	0:0	2	;
call	66:4	66:20	2	free
arg	66:9	66:20	3	p_offScreen
water	66:9	0:0	4	p_offScreen
water	66:21	0:0	2	;
return	67:4	67:22	2	VLC_SUCCESS
water	67:11	0:0	3	VLC_SUCCESS

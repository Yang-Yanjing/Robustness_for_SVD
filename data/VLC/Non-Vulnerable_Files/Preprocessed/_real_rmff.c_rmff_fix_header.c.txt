func	2:0	96:0	0	void	rmff_fix_header
params	2:20	0:0	1	
param	2:21	2:39	2	access_t *	p_access
param	2:41	2:57	2	rmff_header_t *	h
stmnts	0:0	95:2	1	
decl	3:2	3:28	2	unsigned int	num_headers
op	3:26	0:0	2	=
water	3:27	0:0	2	0
decl	4:2	4:28	2	unsigned int	header_size
op	4:26	0:0	2	=
water	4:27	0:0	2	0
decl	5:2	5:23	2	rmff_mdpr_t	**streams
decl	6:2	6:19	2	int	num_streams
op	6:17	0:0	2	=
water	6:18	0:0	2	0
if	7:2	10:2	2	(! h)
cond	7:6	7:7	3	! h
op	7:6	0:0	4	!
water	7:7	0:0	4	h
stmts	7:10	10:2	3	
water	7:10	0:0	4	{
call	8:4	8:65	4	msg_Warn
arg	8:13	8:21	5	p_access
water	8:13	0:0	6	p_access
arg	8:23	8:65	5	"rmff_fix_header: fatal: no header given."
water	8:23	0:0	6	"rmff_fix_header: fatal: no header given."
water	8:66	0:0	4	;
return	9:4	9:10	4	
water	10:2	0:0	4	}
if	11:2	13:2	2	(! h -> streams)
cond	11:6	11:10	3	! h -> streams
op	11:6	0:0	4	!
water	11:7	0:0	4	h
op	11:8	0:0	4	->
water	11:10	0:0	4	streams
stmts	11:19	13:2	3	
water	11:19	0:0	4	{
call	12:4	12:65	4	msg_Warn
arg	12:13	12:21	5	p_access
water	12:13	0:0	6	p_access
arg	12:23	12:65	5	"rmff_fix_header: warning: no MDPR chunks"
water	12:23	0:0	6	"rmff_fix_header: warning: no MDPR chunks"
water	12:66	0:0	4	;
water	13:2	0:0	4	}
else	13:4	23:2	2
stmts	14:2	23:2	3	
water	14:2	0:0	4	{
water	15:4	0:0	4	streams
op	15:11	0:0	4	=
water	15:12	0:0	4	h
op	15:13	0:0	4	->
water	15:15	0:0	4	streams
water	15:22	0:0	4	;
while	16:4	22:4	4	(* streams)
cond	16:11	16:12	5	* streams
op	16:11	0:0	6	*
water	16:12	0:0	6	streams
stmts	17:4	22:4	5	
water	17:4	0:0	6	{
water	18:8	0:0	6	num_streams
op	18:19	0:0	6	++
water	18:21	0:0	6	;
water	19:8	0:0	6	num_headers
op	19:19	0:0	6	++
water	19:21	0:0	6	;
water	20:8	0:0	6	header_size
op	20:19	0:0	6	+=
water	20:21	0:0	6	(
op	20:22	0:0	6	*
water	20:23	0:0	6	streams
water	20:30	0:0	6	)
op	20:31	0:0	6	->
water	20:33	0:0	6	size
water	20:37	0:0	6	;
water	21:8	0:0	6	streams
op	21:15	0:0	6	++
water	21:17	0:0	6	;
water	22:4	0:0	6	}
water	23:2	0:0	4	}
if	24:2	37:2	2	(h -> prop)
cond	24:6	24:9	3	h -> prop
water	24:6	0:0	4	h
op	24:7	0:0	4	->
water	24:9	0:0	4	prop
stmts	24:15	37:2	3	
water	24:15	0:0	4	{
if	25:4	29:4	4	(h -> prop -> size != 50)
cond	25:8	25:25	5	h -> prop -> size != 50
water	25:8	0:0	6	h
op	25:9	0:0	6	->
water	25:11	0:0	6	prop
op	25:15	0:0	6	->
water	25:17	0:0	6	size
op	25:22	0:0	6	!=
water	25:25	0:0	6	50
stmts	26:4	29:4	5	
water	26:4	0:0	6	{
call	27:6	27:96	6	msg_Dbg
arg	27:14	27:22	7	p_access
water	27:14	0:0	8	p_access
arg	27:24	27:77	7	"rmff_fix_header: correcting prop.size from %i to %i"
water	27:24	0:0	8	"rmff_fix_header: correcting prop.size from %i to %i"
arg	27:79	27:92	7	h->prop->size
water	27:79	0:0	8	h
op	27:80	0:0	8	->
water	27:82	0:0	8	prop
op	27:86	0:0	8	->
water	27:88	0:0	8	size
arg	27:94	27:96	7	50
water	27:94	0:0	8	50
water	27:97	0:0	6	;
water	28:6	0:0	6	h
op	28:7	0:0	6	->
water	28:9	0:0	6	prop
op	28:13	0:0	6	->
water	28:15	0:0	6	size
op	28:19	0:0	6	=
water	28:20	0:0	6	50
water	28:22	0:0	6	;
water	29:4	0:0	6	}
if	30:4	34:4	4	(h -> prop -> num_streams != num_streams)
cond	30:8	30:32	5	h -> prop -> num_streams != num_streams
water	30:8	0:0	6	h
op	30:9	0:0	6	->
water	30:11	0:0	6	prop
op	30:15	0:0	6	->
water	30:17	0:0	6	num_streams
op	30:29	0:0	6	!=
water	30:32	0:0	6	num_streams
stmts	31:4	34:4	5	
water	31:4	0:0	6	{
call	32:6	32:119	6	msg_Dbg
arg	32:14	32:22	7	p_access
water	32:14	0:0	8	p_access
arg	32:24	32:84	7	"rmff_fix_header: correcting prop.num_streams from %i to %i"
water	32:24	0:0	8	"rmff_fix_header: correcting prop.num_streams from %i to %i"
arg	32:86	32:106	7	h->prop->num_streams
water	32:86	0:0	8	h
op	32:87	0:0	8	->
water	32:89	0:0	8	prop
op	32:93	0:0	8	->
water	32:95	0:0	8	num_streams
arg	32:108	32:119	7	num_streams
water	32:108	0:0	8	num_streams
water	32:120	0:0	6	;
water	33:6	0:0	6	h
op	33:7	0:0	6	->
water	33:9	0:0	6	prop
op	33:13	0:0	6	->
water	33:15	0:0	6	num_streams
op	33:26	0:0	6	=
water	33:27	0:0	6	num_streams
water	33:38	0:0	6	;
water	34:4	0:0	6	}
water	35:4	0:0	4	num_headers
op	35:15	0:0	4	++
water	35:17	0:0	4	;
water	36:4	0:0	4	header_size
op	36:15	0:0	4	+=
water	36:17	0:0	4	50
water	36:19	0:0	4	;
water	37:2	0:0	4	}
else	37:4	38:66	2
stmts	38:4	38:66	3	
call	38:4	38:65	4	msg_Warn
arg	38:13	38:21	5	p_access
water	38:13	0:0	6	p_access
arg	38:23	38:65	5	"rmff_fix_header: warning: no PROP chunk."
water	38:23	0:0	6	"rmff_fix_header: warning: no PROP chunk."
water	38:66	0:0	4	;
if	39:2	42:2	2	(h -> cont)
cond	39:6	39:9	3	h -> cont
water	39:6	0:0	4	h
op	39:7	0:0	4	->
water	39:9	0:0	4	cont
stmts	39:15	42:2	3	
water	39:15	0:0	4	{
water	40:4	0:0	4	num_headers
op	40:15	0:0	4	++
water	40:17	0:0	4	;
water	41:4	0:0	4	header_size
op	41:15	0:0	4	+=
water	41:17	0:0	4	h
op	41:18	0:0	4	->
water	41:20	0:0	4	cont
op	41:24	0:0	4	->
water	41:26	0:0	4	size
water	41:30	0:0	4	;
water	42:2	0:0	4	}
else	42:4	43:66	2
stmts	43:4	43:66	3	
call	43:4	43:65	4	msg_Warn
arg	43:13	43:21	5	p_access
water	43:13	0:0	6	p_access
arg	43:23	43:65	5	"rmff_fix_header: warning: no CONT chunk."
water	43:23	0:0	6	"rmff_fix_header: warning: no CONT chunk."
water	43:66	0:0	4	;
if	44:2	55:2	2	(! h -> data)
cond	44:6	44:10	3	! h -> data
op	44:6	0:0	4	!
water	44:7	0:0	4	h
op	44:8	0:0	4	->
water	44:10	0:0	4	data
stmts	44:16	55:2	3	
water	44:16	0:0	4	{
call	45:4	45:69	4	msg_Warn
arg	45:13	45:21	5	p_access
water	45:13	0:0	6	p_access
arg	45:23	45:69	5	"rmff_fix_header: no DATA chunk, creating one"
water	45:23	0:0	6	"rmff_fix_header: no DATA chunk, creating one"
water	45:70	0:0	4	;
water	46:4	0:0	4	h
op	46:5	0:0	4	->
water	46:7	0:0	4	data
op	46:12	0:0	4	=
call	46:14	46:45	4	calloc
arg	46:22	46:23	5	1
water	46:22	0:0	6	1
arg	46:25	46:45	5	sizeof(rmff_data_t)
op	46:25	0:0	6	sizeof
water	46:31	0:0	6	(
water	46:32	0:0	6	rmff_data_t
water	46:43	0:0	6	)
water	46:46	0:0	4	;
if	47:4	54:4	4	(h -> data)
cond	47:8	47:11	5	h -> data
water	47:8	0:0	6	h
op	47:9	0:0	6	->
water	47:11	0:0	6	data
stmts	48:4	54:4	5	
water	48:4	0:0	6	{
water	49:6	0:0	6	h
op	49:7	0:0	6	->
water	49:9	0:0	6	data
op	49:13	0:0	6	->
water	49:15	0:0	6	object_id
op	49:24	0:0	6	=
water	49:25	0:0	6	DATA_TAG
water	49:33	0:0	6	;
water	50:6	0:0	6	h
op	50:7	0:0	6	->
water	50:9	0:0	6	data
op	50:13	0:0	6	->
water	50:15	0:0	6	object_version
op	50:29	0:0	6	=
water	50:30	0:0	6	0
water	50:31	0:0	6	;
water	51:6	0:0	6	h
op	51:7	0:0	6	->
water	51:9	0:0	6	data
op	51:13	0:0	6	->
water	51:15	0:0	6	size
op	51:19	0:0	6	=
water	51:20	0:0	6	18
water	51:22	0:0	6	;
water	52:6	0:0	6	h
op	52:7	0:0	6	->
water	52:9	0:0	6	data
op	52:13	0:0	6	->
water	52:15	0:0	6	num_packets
op	52:26	0:0	6	=
water	52:27	0:0	6	0
water	52:28	0:0	6	;
water	53:6	0:0	6	h
op	53:7	0:0	6	->
water	53:9	0:0	6	data
op	53:13	0:0	6	->
water	53:15	0:0	6	next_data_header
op	53:31	0:0	6	=
water	53:32	0:0	6	0
water	53:33	0:0	6	;
water	54:4	0:0	6	}
water	55:2	0:0	4	}
water	56:2	0:0	2	num_headers
op	56:13	0:0	2	++
water	56:15	0:0	2	;
if	57:2	68:2	2	(! h -> fileheader)
cond	57:6	57:10	3	! h -> fileheader
op	57:6	0:0	4	!
water	57:7	0:0	4	h
op	57:8	0:0	4	->
water	57:10	0:0	4	fileheader
stmts	57:22	68:2	3	
water	57:22	0:0	4	{
call	58:4	58:69	4	msg_Warn
arg	58:13	58:21	5	p_access
water	58:13	0:0	6	p_access
arg	58:23	58:69	5	"rmff_fix_header: no fileheader, creating one"
water	58:23	0:0	6	"rmff_fix_header: no fileheader, creating one"
water	58:70	0:0	4	;
water	59:4	0:0	4	h
op	59:5	0:0	4	->
water	59:7	0:0	4	fileheader
op	59:18	0:0	4	=
call	59:20	59:57	4	calloc
arg	59:28	59:29	5	1
water	59:28	0:0	6	1
arg	59:31	59:57	5	sizeof(rmff_fileheader_t)
op	59:31	0:0	6	sizeof
water	59:37	0:0	6	(
water	59:38	0:0	6	rmff_fileheader_t
water	59:55	0:0	6	)
water	59:58	0:0	4	;
if	60:4	67:4	4	(h -> fileheader)
cond	60:8	60:11	5	h -> fileheader
water	60:8	0:0	6	h
op	60:9	0:0	6	->
water	60:11	0:0	6	fileheader
stmts	61:4	67:4	5	
water	61:4	0:0	6	{
water	62:6	0:0	6	h
op	62:7	0:0	6	->
water	62:9	0:0	6	fileheader
op	62:19	0:0	6	->
water	62:21	0:0	6	object_id
op	62:30	0:0	6	=
water	62:31	0:0	6	RMF_TAG
water	62:38	0:0	6	;
water	63:6	0:0	6	h
op	63:7	0:0	6	->
water	63:9	0:0	6	fileheader
op	63:19	0:0	6	->
water	63:21	0:0	6	size
op	63:25	0:0	6	=
water	63:26	0:0	6	18
water	63:28	0:0	6	;
water	64:6	0:0	6	h
op	64:7	0:0	6	->
water	64:9	0:0	6	fileheader
op	64:19	0:0	6	->
water	64:21	0:0	6	object_version
op	64:35	0:0	6	=
water	64:36	0:0	6	0
water	64:37	0:0	6	;
water	65:6	0:0	6	h
op	65:7	0:0	6	->
water	65:9	0:0	6	fileheader
op	65:19	0:0	6	->
water	65:21	0:0	6	file_version
op	65:33	0:0	6	=
water	65:34	0:0	6	0
water	65:35	0:0	6	;
water	66:6	0:0	6	h
op	66:7	0:0	6	->
water	66:9	0:0	6	fileheader
op	66:19	0:0	6	->
water	66:21	0:0	6	num_headers
op	66:32	0:0	6	=
water	66:33	0:0	6	num_headers
op	66:44	0:0	6	+
water	66:45	0:0	6	1
water	66:46	0:0	6	;
water	67:4	0:0	6	}
water	68:2	0:0	4	}
water	69:2	0:0	2	header_size
op	69:13	0:0	2	+=
water	69:15	0:0	2	h
op	69:16	0:0	2	->
water	69:18	0:0	2	fileheader
op	69:28	0:0	2	->
water	69:30	0:0	2	size
water	69:34	0:0	2	;
water	70:2	0:0	2	num_headers
op	70:13	0:0	2	++
water	70:15	0:0	2	;
if	71:2	74:2	2	(h -> fileheader -> num_headers != num_headers)
cond	71:5	71:35	3	h -> fileheader -> num_headers != num_headers
water	71:5	0:0	4	h
op	71:6	0:0	4	->
water	71:8	0:0	4	fileheader
op	71:18	0:0	4	->
water	71:20	0:0	4	num_headers
op	71:32	0:0	4	!=
water	71:35	0:0	4	num_headers
stmts	71:48	74:2	3	
water	71:48	0:0	4	{
call	72:4	72:115	4	msg_Dbg
arg	72:12	72:20	5	p_access
water	72:12	0:0	6	p_access
arg	72:22	72:74	5	"rmff_fix_header: setting num_headers from %i to %i"
water	72:22	0:0	6	"rmff_fix_header: setting num_headers from %i to %i"
arg	72:76	72:102	5	h->fileheader->num_headers
water	72:76	0:0	6	h
op	72:77	0:0	6	->
water	72:79	0:0	6	fileheader
op	72:89	0:0	6	->
water	72:91	0:0	6	num_headers
arg	72:104	72:115	5	num_headers
water	72:104	0:0	6	num_headers
water	72:116	0:0	4	;
water	73:4	0:0	4	h
op	73:5	0:0	4	->
water	73:7	0:0	4	fileheader
op	73:17	0:0	4	->
water	73:19	0:0	4	num_headers
op	73:30	0:0	4	=
water	73:31	0:0	4	num_headers
water	73:42	0:0	4	;
water	74:2	0:0	4	}
if	75:2	95:2	2	(h -> prop)
cond	75:5	75:8	3	h -> prop
water	75:5	0:0	4	h
op	75:6	0:0	4	->
water	75:8	0:0	4	prop
stmts	75:14	95:2	3	
water	75:14	0:0	4	{
if	76:4	79:4	4	(h -> prop -> data_offset != header_size)
cond	76:8	76:32	5	h -> prop -> data_offset != header_size
water	76:8	0:0	6	h
op	76:9	0:0	6	->
water	76:11	0:0	6	prop
op	76:15	0:0	6	->
water	76:17	0:0	6	data_offset
op	76:29	0:0	6	!=
water	76:32	0:0	6	header_size
stmts	76:45	79:4	5	
water	76:45	0:0	6	{
call	77:6	77:116	6	msg_Dbg
arg	77:14	77:22	7	p_access
water	77:14	0:0	8	p_access
arg	77:24	77:81	7	"rmff_fix_header: setting prop.data_offset from %i to %i"
water	77:24	0:0	8	"rmff_fix_header: setting prop.data_offset from %i to %i"
arg	77:83	77:103	7	h->prop->data_offset
water	77:83	0:0	8	h
op	77:84	0:0	8	->
water	77:86	0:0	8	prop
op	77:90	0:0	8	->
water	77:92	0:0	8	data_offset
arg	77:105	77:116	7	header_size
water	77:105	0:0	8	header_size
water	77:117	0:0	6	;
water	78:6	0:0	6	h
op	78:7	0:0	6	->
water	78:9	0:0	6	prop
op	78:13	0:0	6	->
water	78:15	0:0	6	data_offset
op	78:26	0:0	6	=
water	78:27	0:0	6	header_size
water	78:38	0:0	6	;
water	79:4	0:0	6	}
if	82:4	86:4	4	(h -> prop -> num_packets == 0)
cond	82:8	82:32	5	h -> prop -> num_packets == 0
water	82:8	0:0	6	h
op	82:9	0:0	6	->
water	82:11	0:0	6	prop
op	82:15	0:0	6	->
water	82:17	0:0	6	num_packets
op	82:29	0:0	6	==
water	82:32	0:0	6	0
stmts	82:35	86:4	5	
water	82:35	0:0	6	{
decl	83:6	83:96	6	int	p
op	83:11	0:0	6	=
call	83:12	83:95	7	(int)
arg	83:18	83:95	8	h->prop->avg_bit_rate/8.0*(h->prop->duration/1000.0)/h->prop->avg_packet_size
water	83:18	0:0	9	h
op	83:19	0:0	9	->
water	83:21	0:0	9	prop
op	83:25	0:0	9	->
water	83:27	0:0	9	avg_bit_rate
op	83:39	0:0	9	/
water	83:40	0:0	9	8
op	83:41	0:0	9	.
water	83:42	0:0	9	0
op	83:43	0:0	9	*
water	83:44	0:0	9	(
water	83:45	0:0	9	h
op	83:46	0:0	9	->
water	83:48	0:0	9	prop
op	83:52	0:0	9	->
water	83:54	0:0	9	duration
op	83:62	0:0	9	/
water	83:63	0:0	9	1000
op	83:67	0:0	9	.
water	83:68	0:0	9	0
water	83:69	0:0	9	)
op	83:70	0:0	9	/
water	83:71	0:0	9	h
op	83:72	0:0	9	->
water	83:74	0:0	9	prop
op	83:78	0:0	9	->
water	83:80	0:0	9	avg_packet_size
call	84:6	84:74	6	msg_Dbg
arg	84:14	84:22	7	p_access
water	84:14	0:0	8	p_access
arg	84:24	84:71	7	"rmff_fix_header: assuming prop.num_packets=%i"
water	84:24	0:0	8	"rmff_fix_header: assuming prop.num_packets=%i"
arg	84:73	84:74	7	p
water	84:73	0:0	8	p
water	84:75	0:0	6	;
water	85:6	0:0	6	h
op	85:7	0:0	6	->
water	85:9	0:0	6	prop
op	85:13	0:0	6	->
water	85:15	0:0	6	num_packets
op	85:26	0:0	6	=
water	85:27	0:0	6	p
water	85:28	0:0	6	;
water	86:4	0:0	6	}
if	87:4	90:4	4	(h -> data -> num_packets == 0)
cond	87:8	87:32	5	h -> data -> num_packets == 0
water	87:8	0:0	6	h
op	87:9	0:0	6	->
water	87:11	0:0	6	data
op	87:15	0:0	6	->
water	87:17	0:0	6	num_packets
op	87:29	0:0	6	==
water	87:32	0:0	6	0
stmts	87:35	90:4	5	
water	87:35	0:0	6	{
call	88:6	88:93	6	msg_Dbg
arg	88:14	88:22	7	p_access
water	88:14	0:0	8	p_access
arg	88:24	88:71	7	"rmff_fix_header: assuming data.num_packets=%i"
water	88:24	0:0	8	"rmff_fix_header: assuming data.num_packets=%i"
arg	88:73	88:93	7	h->prop->num_packets
water	88:73	0:0	8	h
op	88:74	0:0	8	->
water	88:76	0:0	8	prop
op	88:80	0:0	8	->
water	88:82	0:0	8	num_packets
water	88:94	0:0	6	;
water	89:6	0:0	6	h
op	89:7	0:0	6	->
water	89:9	0:0	6	data
op	89:13	0:0	6	->
water	89:15	0:0	6	num_packets
op	89:26	0:0	6	=
water	89:27	0:0	6	h
op	89:28	0:0	6	->
water	89:30	0:0	6	prop
op	89:34	0:0	6	->
water	89:36	0:0	6	num_packets
water	89:47	0:0	6	;
water	90:4	0:0	6	}
if	91:4	94:4	4	(h -> data -> size == 18 || ! h -> data -> size)
cond	91:8	91:41	5	h -> data -> size == 18 || ! h -> data -> size
water	91:8	0:0	6	h
op	91:9	0:0	6	->
water	91:11	0:0	6	data
op	91:15	0:0	6	->
water	91:17	0:0	6	size
op	91:22	0:0	6	==
water	91:25	0:0	6	18
op	91:28	0:0	6	||
op	91:31	0:0	6	!
water	91:32	0:0	6	h
op	91:33	0:0	6	->
water	91:35	0:0	6	data
op	91:39	0:0	6	->
water	91:41	0:0	6	size
stmts	91:48	94:4	5	
water	91:48	0:0	6	{
call	92:6	92:111	6	msg_Dbg
arg	92:14	92:22	7	p_access
water	92:14	0:0	8	p_access
arg	92:24	92:64	7	"rmff_fix_header: assuming data.size=%i"
water	92:24	0:0	8	"rmff_fix_header: assuming data.size=%i"
arg	92:66	92:111	7	h->prop->num_packets*h->prop->avg_packet_size
water	92:66	0:0	8	h
op	92:67	0:0	8	->
water	92:69	0:0	8	prop
op	92:73	0:0	8	->
water	92:75	0:0	8	num_packets
op	92:86	0:0	8	*
water	92:87	0:0	8	h
op	92:88	0:0	8	->
water	92:90	0:0	8	prop
op	92:94	0:0	8	->
water	92:96	0:0	8	avg_packet_size
water	92:112	0:0	6	;
water	93:6	0:0	6	h
op	93:7	0:0	6	->
water	93:9	0:0	6	data
op	93:13	0:0	6	->
water	93:15	0:0	6	size
op	93:19	0:0	6	+=
water	93:21	0:0	6	h
op	93:22	0:0	6	->
water	93:24	0:0	6	prop
op	93:28	0:0	6	->
water	93:30	0:0	6	num_packets
op	93:41	0:0	6	*
water	93:42	0:0	6	h
op	93:43	0:0	6	->
water	93:45	0:0	6	prop
op	93:49	0:0	6	->
water	93:51	0:0	6	avg_packet_size
water	93:66	0:0	6	;
water	94:4	0:0	6	}
water	95:2	0:0	4	}

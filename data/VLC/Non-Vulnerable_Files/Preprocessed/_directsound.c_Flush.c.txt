func	2:0	15:0	0	static HRESULT	Flush
params	2:20	0:0	1	
param	2:22	2:44	2	aout_stream_sys_t *	sys
param	2:46	2:56	2	bool	drain
stmnts	0:0	14:14	1	
decl	4:4	4:60	2	HRESULT	ret
op	4:16	0:0	2	=
call	4:18	4:59	3	IDirectSoundBuffer_Stop
arg	4:43	4:59	4	sys->p_dsbuffer
water	4:43	0:0	5	sys
op	4:46	0:0	5	->
water	4:48	0:0	5	p_dsbuffer
if	5:4	13:4	2	(ret == DS_OK && ! drain)
cond	5:8	5:25	3	ret == DS_OK && ! drain
water	5:8	0:0	4	ret
op	5:12	0:0	4	==
water	5:15	0:0	4	DS_OK
op	5:21	0:0	4	&&
op	5:24	0:0	4	!
water	5:25	0:0	4	drain
stmts	6:4	13:4	3	
water	6:4	0:0	4	{
call	7:8	7:33	4	vlc_mutex_lock
arg	7:23	7:33	5	&sys->lock
op	7:23	0:0	6	&
water	7:24	0:0	6	sys
op	7:27	0:0	6	->
water	7:29	0:0	6	lock
water	7:34	0:0	4	;
water	8:8	0:0	4	sys
op	8:11	0:0	4	->
water	8:13	0:0	4	i_data
op	8:20	0:0	4	=
water	8:22	0:0	4	0
water	8:23	0:0	4	;
water	9:8	0:0	4	sys
op	9:11	0:0	4	->
water	9:13	0:0	4	i_last_read
op	9:25	0:0	4	=
water	9:27	0:0	4	sys
op	9:30	0:0	4	->
water	9:32	0:0	4	i_write
water	9:39	0:0	4	;
call	10:8	10:76	4	IDirectSoundBuffer_SetCurrentPosition
arg	10:47	10:62	5	sys->p_dsbuffer
water	10:47	0:0	6	sys
op	10:50	0:0	6	->
water	10:52	0:0	6	p_dsbuffer
arg	10:64	10:76	5	sys->i_write
water	10:64	0:0	6	sys
op	10:67	0:0	6	->
water	10:69	0:0	6	i_write
water	10:77	0:0	4	;
water	11:8	0:0	4	sys
op	11:11	0:0	4	->
water	11:13	0:0	4	b_playing
op	11:23	0:0	4	=
water	11:25	0:0	4	false
water	11:30	0:0	4	;
call	12:8	12:35	4	vlc_mutex_unlock
arg	12:25	12:35	5	&sys->lock
op	12:25	0:0	6	&
water	12:26	0:0	6	sys
op	12:29	0:0	6	->
water	12:31	0:0	6	lock
water	12:36	0:0	4	;
water	13:4	0:0	4	}
return	14:4	14:14	2	ret
water	14:11	0:0	3	ret

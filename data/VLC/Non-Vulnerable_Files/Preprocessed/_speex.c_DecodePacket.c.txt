func	2:0	52:0	0	static block_t *	DecodePacket
params	2:28	0:0	1	
param	2:30	2:46	2	decoder_t *	p_dec
param	2:48	2:72	2	ogg_packet *	p_oggpacket
stmnts	0:0	51:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	11:4	2	(p_oggpacket -> bytes)
cond	5:8	5:21	3	p_oggpacket -> bytes
water	5:8	0:0	4	p_oggpacket
op	5:19	0:0	4	->
water	5:21	0:0	4	bytes
stmts	6:4	11:4	3	
water	6:4	0:0	4	{
call	8:8	9:49	4	speex_bits_read_from
arg	8:30	8:42	5	&p_sys->bits
op	8:30	0:0	6	&
water	8:31	0:0	6	p_sys
op	8:36	0:0	6	->
water	8:38	0:0	6	bits
arg	8:44	8:71	5	(char*)p_oggpacket->packet
water	8:44	0:0	6	(
water	8:45	0:0	6	char
op	8:50	0:0	6	*
water	8:51	0:0	6	)
water	8:52	0:0	6	p_oggpacket
op	8:63	0:0	6	->
water	8:65	0:0	6	packet
arg	9:30	9:49	5	p_oggpacket->bytes
water	9:30	0:0	6	p_oggpacket
op	9:41	0:0	6	->
water	9:43	0:0	6	bytes
water	9:50	0:0	4	;
water	10:8	0:0	4	p_sys
op	10:13	0:0	4	->
water	10:15	0:0	4	i_frame_in_packet
op	10:33	0:0	4	=
water	10:35	0:0	4	0
water	10:36	0:0	4	;
water	11:4	0:0	4	}
if	13:4	47:4	2	(p_sys -> i_frame_in_packet < p_sys -> p_header -> frames_per_packet)
cond	13:8	13:52	3	p_sys -> i_frame_in_packet < p_sys -> p_header -> frames_per_packet
water	13:8	0:0	4	p_sys
op	13:13	0:0	4	->
water	13:15	0:0	4	i_frame_in_packet
op	13:33	0:0	4	<
water	13:35	0:0	4	p_sys
op	13:40	0:0	4	->
water	13:42	0:0	4	p_header
op	13:50	0:0	4	->
water	13:52	0:0	4	frames_per_packet
stmts	14:4	47:4	3	
water	14:4	0:0	4	{
decl	15:8	15:30	4	block_t	*p_aout_buffer
if	16:8	17:23	4	(p_sys -> p_header -> frame_size == 0)
cond	16:12	16:43	5	p_sys -> p_header -> frame_size == 0
water	16:12	0:0	6	p_sys
op	16:17	0:0	6	->
water	16:19	0:0	6	p_header
op	16:27	0:0	6	->
water	16:29	0:0	6	frame_size
op	16:40	0:0	6	==
water	16:43	0:0	6	0
stmts	17:12	17:23	5	
return	17:12	17:23	6	NULL
water	17:19	0:0	7	NULL
water	18:8	0:0	4	p_aout_buffer
op	18:22	0:0	4	=
call	19:12	19:71	4	decoder_NewAudioBuffer
arg	19:36	19:41	5	p_dec
water	19:36	0:0	6	p_dec
arg	19:43	19:71	5	p_sys->p_header->frame_size
water	19:43	0:0	6	p_sys
op	19:48	0:0	6	->
water	19:50	0:0	6	p_header
op	19:58	0:0	6	->
water	19:60	0:0	6	frame_size
water	19:72	0:0	4	;
if	20:8	23:8	4	(! p_aout_buffer)
cond	20:12	20:13	5	! p_aout_buffer
op	20:12	0:0	6	!
water	20:13	0:0	6	p_aout_buffer
stmts	21:8	23:8	5	
water	21:8	0:0	6	{
return	22:12	22:23	6	NULL
water	22:19	0:0	7	NULL
water	23:8	0:0	6	}
switch	24:8	31:8	4	(speex_decode_int (p_sys -> p_state ,& p_sys -> bits ,( int16_t * ) p_aout_buffer -> p_buffer ))
cond	24:16	25:69	5	speex_decode_int (p_sys -> p_state ,& p_sys -> bits ,( int16_t * ) p_aout_buffer -> p_buffer )
call	24:16	25:69	6	speex_decode_int
arg	24:34	24:48	7	p_sys->p_state
water	24:34	0:0	8	p_sys
op	24:39	0:0	8	->
water	24:41	0:0	8	p_state
arg	24:50	24:62	7	&p_sys->bits
op	24:50	0:0	8	&
water	24:51	0:0	8	p_sys
op	24:56	0:0	8	->
water	24:58	0:0	8	bits
arg	25:34	25:69	7	(int16_t*)p_aout_buffer->p_buffer
water	25:34	0:0	8	(
water	25:35	0:0	8	int16_t
op	25:43	0:0	8	*
water	25:44	0:0	8	)
water	25:45	0:0	8	p_aout_buffer
op	25:58	0:0	8	->
water	25:60	0:0	8	p_buffer
stmts	26:8	31:8	5	
water	26:8	0:0	6	{
water	27:12	0:0	6	case
op	27:17	0:0	6	-
water	27:18	0:0	6	2
water	27:19	0:0	6	:
call	28:16	28:68	6	msg_Err
arg	28:25	28:30	7	p_dec
water	28:25	0:0	8	p_dec
arg	28:32	28:68	7	"decoding error: corrupted stream?"
water	28:32	0:0	8	"decoding error: corrupted stream?"
water	28:69	0:0	6	;
water	29:12	0:0	6	case
op	29:17	0:0	6	-
water	29:18	0:0	6	1
water	29:19	0:0	6	:
water	30:16	0:0	6	return
water	30:23	0:0	6	NULL
water	30:27	0:0	6	;
water	31:8	0:0	6	}
if	32:8	35:8	4	(speex_bits_remaining (& p_sys -> bits ) < 0)
cond	32:12	32:51	5	speex_bits_remaining (& p_sys -> bits ) < 0
call	32:12	32:47	6	speex_bits_remaining
arg	32:34	32:47	7	&p_sys->bits
op	32:34	0:0	8	&
water	32:35	0:0	8	p_sys
op	32:40	0:0	8	->
water	32:42	0:0	8	bits
op	32:49	0:0	6	<
water	32:51	0:0	6	0
stmts	33:8	35:8	5	
water	33:8	0:0	6	{
call	34:12	34:67	6	msg_Err
arg	34:21	34:26	7	p_dec
water	34:21	0:0	8	p_dec
arg	34:28	34:67	7	"decoding overflow: corrupted stream?"
water	34:28	0:0	8	"decoding overflow: corrupted stream?"
water	34:68	0:0	6	;
water	35:8	0:0	6	}
if	36:8	39:53	4	(p_sys -> p_header -> nb_channels == 2)
cond	36:12	36:44	5	p_sys -> p_header -> nb_channels == 2
water	36:12	0:0	6	p_sys
op	36:17	0:0	6	->
water	36:19	0:0	6	p_header
op	36:27	0:0	6	->
water	36:29	0:0	6	nb_channels
op	36:41	0:0	6	==
water	36:44	0:0	6	2
stmts	37:12	39:53	5	
call	37:12	39:52	6	speex_decode_stereo_int
arg	37:37	37:71	7	(int16_t*)p_aout_buffer->p_buffer
water	37:37	0:0	8	(
water	37:38	0:0	8	int16_t
op	37:46	0:0	8	*
water	37:47	0:0	8	)
water	37:48	0:0	8	p_aout_buffer
op	37:61	0:0	8	->
water	37:63	0:0	8	p_buffer
arg	38:37	38:64	7	p_sys->p_header->frame_size
water	38:37	0:0	8	p_sys
op	38:42	0:0	8	->
water	38:44	0:0	8	p_header
op	38:52	0:0	8	->
water	38:54	0:0	8	frame_size
arg	39:37	39:52	7	&p_sys->stereo
op	39:37	0:0	8	&
water	39:38	0:0	8	p_sys
op	39:43	0:0	8	->
water	39:45	0:0	8	stereo
water	39:53	0:0	6	;
water	41:8	0:0	4	p_aout_buffer
op	41:21	0:0	4	->
water	41:23	0:0	4	i_pts
op	41:29	0:0	4	=
call	41:31	41:58	4	date_Get
arg	41:41	41:58	5	&p_sys->end_date
op	41:41	0:0	6	&
water	41:42	0:0	6	p_sys
op	41:47	0:0	6	->
water	41:49	0:0	6	end_date
water	41:59	0:0	4	;
water	42:8	0:0	4	p_aout_buffer
op	42:21	0:0	4	->
water	42:23	0:0	4	i_length
op	42:32	0:0	4	=
call	43:12	43:74	4	date_Increment
arg	43:28	43:44	5	&p_sys->end_date
op	43:28	0:0	6	&
water	43:29	0:0	6	p_sys
op	43:34	0:0	6	->
water	43:36	0:0	6	end_date
arg	43:46	43:74	5	p_sys->p_header->frame_size
water	43:46	0:0	6	p_sys
op	43:51	0:0	6	->
water	43:53	0:0	6	p_header
op	43:61	0:0	6	->
water	43:63	0:0	6	frame_size
op	44:12	0:0	4	-
water	44:14	0:0	4	p_aout_buffer
op	44:27	0:0	4	->
water	44:29	0:0	4	i_pts
water	44:34	0:0	4	;
water	45:8	0:0	4	p_sys
op	45:13	0:0	4	->
water	45:15	0:0	4	i_frame_in_packet
op	45:32	0:0	4	++
water	45:34	0:0	4	;
return	46:8	46:28	4	p_aout_buffer
water	46:15	0:0	5	p_aout_buffer
water	47:4	0:0	4	}
else	48:4	51:4	2
stmts	49:4	51:4	3	
water	49:4	0:0	4	{
return	50:8	50:19	4	NULL
water	50:15	0:0	5	NULL
water	51:4	0:0	4	}

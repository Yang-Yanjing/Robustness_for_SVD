func	2:0	83:0	0	static int	Mouse
params	2:16	0:0	1	
param	2:18	2:36	2	filter_t *	p_filter
param	2:38	2:58	2	vlc_mouse_t *	p_mouse
param	2:60	2:84	2	const vlc_mouse_t *	p_old
param	2:86	2:111	2	const vlc_mouse_t *	p_new
stmnts	0:0	82:22	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:57	2	const video_format_t	*p_fmt
op	5:32	0:0	2	=
op	5:34	0:0	2	&
water	5:35	0:0	2	p_filter
op	5:43	0:0	2	->
water	5:45	0:0	2	fmt_in
op	5:51	0:0	2	.
water	5:52	0:0	2	video
decl	7:4	7:80	2	const bool	b_click
op	7:23	0:0	2	=
call	7:25	7:79	3	vlc_mouse_HasPressed
arg	7:47	7:52	4	p_old
water	7:47	0:0	5	p_old
arg	7:54	7:59	4	p_new
water	7:54	0:0	5	p_new
arg	7:61	7:79	4	MOUSE_BUTTON_LEFT
water	7:61	0:0	5	MOUSE_BUTTON_LEFT
decl	8:4	8:59	2	const bool	b_pressed
op	8:25	0:0	2	=
call	8:27	8:58	3	vlc_mouse_IsLeftPressed
arg	8:52	8:58	4	p_new
water	8:52	0:0	5	p_new
decl	9:4	9:23	2	bool	b_grab
op	9:16	0:0	2	=
water	9:18	0:0	2	false
if	11:4	60:4	2	(p_sys -> b_visible)
cond	11:8	11:15	3	p_sys -> b_visible
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	b_visible
stmts	12:4	60:4	3	
water	12:4	0:0	4	{
decl	13:8	13:60	4	const int	i_visu_width
op	13:32	0:0	4	=
water	13:34	0:0	4	p_fmt
op	13:39	0:0	4	->
water	13:41	0:0	4	i_width
op	13:50	0:0	4	/
water	13:52	0:0	4	VIS_ZOOM
decl	14:8	14:60	4	const int	i_visu_height
op	14:32	0:0	4	=
water	14:34	0:0	4	p_fmt
op	14:39	0:0	4	->
water	14:41	0:0	4	i_height
op	14:50	0:0	4	/
water	14:52	0:0	4	VIS_ZOOM
if	15:8	29:8	4	(p_new -> i_x >= 0 && p_new -> i_x < i_visu_width && p_new -> i_y >= 0 && p_new -> i_y < i_visu_height)
cond	15:12	16:44	5	p_new -> i_x >= 0 && p_new -> i_x < i_visu_width && p_new -> i_y >= 0 && p_new -> i_y < i_visu_height
water	15:12	0:0	6	p_new
op	15:17	0:0	6	->
water	15:19	0:0	6	i_x
op	15:23	0:0	6	>=
water	15:26	0:0	6	0
op	15:28	0:0	6	&&
water	15:31	0:0	6	p_new
op	15:36	0:0	6	->
water	15:38	0:0	6	i_x
op	15:42	0:0	6	<
water	15:44	0:0	6	i_visu_width
op	15:57	0:0	6	&&
water	16:12	0:0	6	p_new
op	16:17	0:0	6	->
water	16:19	0:0	6	i_y
op	16:23	0:0	6	>=
water	16:26	0:0	6	0
op	16:28	0:0	6	&&
water	16:31	0:0	6	p_new
op	16:36	0:0	6	->
water	16:38	0:0	6	i_y
op	16:42	0:0	6	<
water	16:44	0:0	6	i_visu_height
stmts	17:8	29:8	5	
water	17:8	0:0	6	{
if	19:12	28:12	6	(b_pressed)
cond	19:16	19:16	7	b_pressed
water	19:16	0:0	8	b_pressed
stmts	20:12	28:12	7	
water	20:12	0:0	8	{
decl	21:16	21:77	8	const int	v_w
op	21:30	0:0	8	=
water	21:32	0:0	8	p_fmt
op	21:37	0:0	8	->
water	21:39	0:0	8	i_width
op	21:48	0:0	8	*
water	21:50	0:0	8	ZOOM_FACTOR
op	21:62	0:0	8	/
water	21:64	0:0	8	p_sys
op	21:69	0:0	8	->
water	21:71	0:0	8	i_zoom
decl	22:16	22:77	8	const int	v_h
op	22:30	0:0	8	=
water	22:32	0:0	8	p_fmt
op	22:37	0:0	8	->
water	22:39	0:0	8	i_height
op	22:48	0:0	8	*
water	22:50	0:0	8	ZOOM_FACTOR
op	22:62	0:0	8	/
water	22:64	0:0	8	p_sys
op	22:69	0:0	8	->
water	22:71	0:0	8	i_zoom
water	23:16	0:0	8	p_sys
op	23:21	0:0	8	->
water	23:23	0:0	8	i_x
op	23:27	0:0	8	=
call	23:29	24:73	8	VLC_CLIP
arg	23:39	23:68	9	p_new->i_x*VIS_ZOOM-v_w/2
water	23:39	0:0	10	p_new
op	23:44	0:0	10	->
water	23:46	0:0	10	i_x
op	23:50	0:0	10	*
water	23:52	0:0	10	VIS_ZOOM
op	23:61	0:0	10	-
water	23:63	0:0	10	v_w
op	23:66	0:0	10	/
water	23:67	0:0	10	2
arg	23:70	23:71	9	0
water	23:70	0:0	10	0
arg	24:43	24:73	9	(int)p_fmt->i_width-v_w-1
water	24:43	0:0	10	(
water	24:44	0:0	10	int
water	24:47	0:0	10	)
water	24:48	0:0	10	p_fmt
op	24:53	0:0	10	->
water	24:55	0:0	10	i_width
op	24:64	0:0	10	-
water	24:66	0:0	10	v_w
op	24:70	0:0	10	-
water	24:72	0:0	10	1
water	24:74	0:0	8	;
water	25:16	0:0	8	p_sys
op	25:21	0:0	8	->
water	25:23	0:0	8	i_y
op	25:27	0:0	8	=
call	25:29	26:73	8	VLC_CLIP
arg	25:39	25:68	9	p_new->i_y*VIS_ZOOM-v_h/2
water	25:39	0:0	10	p_new
op	25:44	0:0	10	->
water	25:46	0:0	10	i_y
op	25:50	0:0	10	*
water	25:52	0:0	10	VIS_ZOOM
op	25:61	0:0	10	-
water	25:63	0:0	10	v_h
op	25:66	0:0	10	/
water	25:67	0:0	10	2
arg	25:70	25:71	9	0
water	25:70	0:0	10	0
arg	26:43	26:73	9	(int)p_fmt->i_height-v_h-1
water	26:43	0:0	10	(
water	26:44	0:0	10	int
water	26:47	0:0	10	)
water	26:48	0:0	10	p_fmt
op	26:53	0:0	10	->
water	26:55	0:0	10	i_height
op	26:64	0:0	10	-
water	26:66	0:0	10	v_h
op	26:70	0:0	10	-
water	26:72	0:0	10	1
water	26:74	0:0	8	;
water	27:16	0:0	8	b_grab
op	27:23	0:0	8	=
water	27:25	0:0	8	true
water	27:29	0:0	8	;
water	28:12	0:0	8	}
water	29:8	0:0	6	}
else	30:8	40:8	4
stmts	30:13	40:8	5	
if	30:13	40:8	6	(p_new -> i_x >= 0 && p_new -> i_x < 80 && p_new -> i_y >= i_visu_height && p_new -> i_y < i_visu_height + 9)
cond	30:17	32:47	7	p_new -> i_x >= 0 && p_new -> i_x < 80 && p_new -> i_y >= i_visu_height && p_new -> i_y < i_visu_height + 9
water	30:17	0:0	8	p_new
op	30:22	0:0	8	->
water	30:24	0:0	8	i_x
op	30:28	0:0	8	>=
water	30:31	0:0	8	0
op	30:33	0:0	8	&&
water	30:36	0:0	8	p_new
op	30:41	0:0	8	->
water	30:43	0:0	8	i_x
op	30:47	0:0	8	<
water	30:49	0:0	8	80
op	30:52	0:0	8	&&
water	31:17	0:0	8	p_new
op	31:22	0:0	8	->
water	31:24	0:0	8	i_y
op	31:28	0:0	8	>=
water	31:31	0:0	8	i_visu_height
op	31:45	0:0	8	&&
water	32:17	0:0	8	p_new
op	32:22	0:0	8	->
water	32:24	0:0	8	i_y
op	32:28	0:0	8	<
water	32:31	0:0	8	i_visu_height
op	32:45	0:0	8	+
water	32:47	0:0	8	9
stmts	33:8	40:8	7	
water	33:8	0:0	8	{
if	35:12	39:12	8	(b_click)
cond	35:16	35:16	9	b_click
water	35:16	0:0	10	b_click
stmts	36:12	39:12	9	
water	36:12	0:0	10	{
water	37:16	0:0	10	p_sys
op	37:21	0:0	10	->
water	37:23	0:0	10	b_visible
op	37:33	0:0	10	=
water	37:35	0:0	10	false
water	37:40	0:0	10	;
water	38:16	0:0	10	b_grab
op	38:23	0:0	10	=
water	38:25	0:0	10	true
water	38:29	0:0	10	;
water	39:12	0:0	10	}
water	40:8	0:0	8	}
else	41:8	59:8	4
stmts	41:13	59:8	5	
if	41:13	59:8	6	(p_new -> i_x >= 0 && p_new -> i_x <= ( i_visu_height + 90 - p_new -> i_y ) * ( i_visu_height + 90 - p_new -> i_y ) / 160 && p_new -> i_y >= i_visu_height + 9 && p_new -> i_y <= i_visu_height + 90)
cond	41:17	45:47	7	p_new -> i_x >= 0 && p_new -> i_x <= ( i_visu_height + 90 - p_new -> i_y ) * ( i_visu_height + 90 - p_new -> i_y ) / 160 && p_new -> i_y >= i_visu_height + 9 && p_new -> i_y <= i_visu_height + 90
water	41:17	0:0	8	p_new
op	41:22	0:0	8	->
water	41:24	0:0	8	i_x
op	41:28	0:0	8	>=
water	41:31	0:0	8	0
op	41:33	0:0	8	&&
water	42:17	0:0	8	p_new
op	42:22	0:0	8	->
water	42:24	0:0	8	i_x
op	42:28	0:0	8	<=
water	42:31	0:0	8	(
water	42:33	0:0	8	i_visu_height
op	42:47	0:0	8	+
water	42:49	0:0	8	90
op	42:52	0:0	8	-
water	42:54	0:0	8	p_new
op	42:59	0:0	8	->
water	42:61	0:0	8	i_y
water	42:65	0:0	8	)
op	42:67	0:0	8	*
water	43:31	0:0	8	(
water	43:33	0:0	8	i_visu_height
op	43:47	0:0	8	+
water	43:49	0:0	8	90
op	43:52	0:0	8	-
water	43:54	0:0	8	p_new
op	43:59	0:0	8	->
water	43:61	0:0	8	i_y
water	43:65	0:0	8	)
op	43:67	0:0	8	/
water	43:69	0:0	8	160
op	43:73	0:0	8	&&
water	44:17	0:0	8	p_new
op	44:22	0:0	8	->
water	44:24	0:0	8	i_y
op	44:28	0:0	8	>=
water	44:31	0:0	8	i_visu_height
op	44:45	0:0	8	+
water	44:47	0:0	8	9
op	44:49	0:0	8	&&
water	45:17	0:0	8	p_new
op	45:22	0:0	8	->
water	45:24	0:0	8	i_y
op	45:28	0:0	8	<=
water	45:31	0:0	8	i_visu_height
op	45:45	0:0	8	+
water	45:47	0:0	8	90
stmts	46:8	59:8	7	
water	46:8	0:0	8	{
if	48:12	58:12	8	(b_pressed)
cond	48:16	48:16	9	b_pressed
water	48:16	0:0	10	b_pressed
stmts	49:12	58:12	9	
water	49:12	0:0	10	{
water	50:16	0:0	10	p_sys
op	50:21	0:0	10	->
water	50:23	0:0	10	i_zoom
op	50:30	0:0	10	=
call	50:32	52:60	10	__MAX
arg	50:39	50:50	11	ZOOM_FACTOR
water	50:39	0:0	12	ZOOM_FACTOR
arg	51:39	52:60	11	(80+i_visu_height-p_new->i_y+2)*ZOOM_FACTOR/10
water	51:39	0:0	12	(
water	51:40	0:0	12	80
op	51:43	0:0	12	+
water	51:45	0:0	12	i_visu_height
op	51:59	0:0	12	-
water	51:61	0:0	12	p_new
op	51:66	0:0	12	->
water	51:68	0:0	12	i_y
op	51:72	0:0	12	+
water	51:74	0:0	12	2
water	51:75	0:0	12	)
op	51:77	0:0	12	*
water	52:43	0:0	12	ZOOM_FACTOR
op	52:55	0:0	12	/
water	52:57	0:0	12	10
water	52:61	0:0	10	;
decl	53:16	53:77	10	const int	v_w
op	53:30	0:0	10	=
water	53:32	0:0	10	p_fmt
op	53:37	0:0	10	->
water	53:39	0:0	10	i_width
op	53:48	0:0	10	*
water	53:50	0:0	10	ZOOM_FACTOR
op	53:62	0:0	10	/
water	53:64	0:0	10	p_sys
op	53:69	0:0	10	->
water	53:71	0:0	10	i_zoom
decl	54:16	54:77	10	const int	v_h
op	54:30	0:0	10	=
water	54:32	0:0	10	p_fmt
op	54:37	0:0	10	->
water	54:39	0:0	10	i_height
op	54:48	0:0	10	*
water	54:50	0:0	10	ZOOM_FACTOR
op	54:62	0:0	10	/
water	54:64	0:0	10	p_sys
op	54:69	0:0	10	->
water	54:71	0:0	10	i_zoom
water	55:16	0:0	10	p_sys
op	55:21	0:0	10	->
water	55:23	0:0	10	i_x
op	55:27	0:0	10	=
call	55:29	55:85	10	VLC_CLIP
arg	55:39	55:49	11	p_sys->i_x
water	55:39	0:0	12	p_sys
op	55:44	0:0	12	->
water	55:46	0:0	12	i_x
arg	55:51	55:52	11	0
water	55:51	0:0	12	0
arg	55:54	55:85	11	(int)p_fmt->i_width-v_w-1
water	55:54	0:0	12	(
water	55:55	0:0	12	int
water	55:58	0:0	12	)
water	55:59	0:0	12	p_fmt
op	55:64	0:0	12	->
water	55:66	0:0	12	i_width
op	55:75	0:0	12	-
water	55:77	0:0	12	v_w
op	55:81	0:0	12	-
water	55:83	0:0	12	1
water	55:86	0:0	10	;
water	56:16	0:0	10	p_sys
op	56:21	0:0	10	->
water	56:23	0:0	10	i_y
op	56:27	0:0	10	=
call	56:29	56:85	10	VLC_CLIP
arg	56:39	56:49	11	p_sys->i_y
water	56:39	0:0	12	p_sys
op	56:44	0:0	12	->
water	56:46	0:0	12	i_y
arg	56:51	56:52	11	0
water	56:51	0:0	12	0
arg	56:54	56:85	11	(int)p_fmt->i_height-v_h-1
water	56:54	0:0	12	(
water	56:55	0:0	12	int
water	56:58	0:0	12	)
water	56:59	0:0	12	p_fmt
op	56:64	0:0	12	->
water	56:66	0:0	12	i_height
op	56:75	0:0	12	-
water	56:77	0:0	12	v_h
op	56:81	0:0	12	-
water	56:83	0:0	12	1
water	56:86	0:0	10	;
water	57:16	0:0	10	b_grab
op	57:23	0:0	10	=
water	57:25	0:0	10	true
water	57:29	0:0	10	;
water	58:12	0:0	10	}
water	59:8	0:0	8	}
water	60:4	0:0	4	}
else	61:4	73:4	2
stmts	62:4	73:4	3	
water	62:4	0:0	4	{
if	63:8	72:8	4	(p_new -> i_x >= 0 && p_new -> i_x < 80 && p_new -> i_y >= 0 && p_new -> i_y <= 10)
cond	63:12	64:45	5	p_new -> i_x >= 0 && p_new -> i_x < 80 && p_new -> i_y >= 0 && p_new -> i_y <= 10
water	63:12	0:0	6	p_new
op	63:17	0:0	6	->
water	63:19	0:0	6	i_x
op	63:23	0:0	6	>=
water	63:26	0:0	6	0
op	63:28	0:0	6	&&
water	63:31	0:0	6	p_new
op	63:36	0:0	6	->
water	63:38	0:0	6	i_x
op	63:42	0:0	6	<
water	63:45	0:0	6	80
op	63:48	0:0	6	&&
water	64:12	0:0	6	p_new
op	64:17	0:0	6	->
water	64:19	0:0	6	i_y
op	64:23	0:0	6	>=
water	64:26	0:0	6	0
op	64:28	0:0	6	&&
water	64:31	0:0	6	p_new
op	64:36	0:0	6	->
water	64:38	0:0	6	i_y
op	64:42	0:0	6	<=
water	64:45	0:0	6	10
stmts	65:8	72:8	5	
water	65:8	0:0	6	{
if	67:12	71:12	6	(b_click)
cond	67:16	67:16	7	b_click
water	67:16	0:0	8	b_click
stmts	68:12	71:12	7	
water	68:12	0:0	8	{
water	69:16	0:0	8	p_sys
op	69:21	0:0	8	->
water	69:23	0:0	8	b_visible
op	69:33	0:0	8	=
water	69:35	0:0	8	true
water	69:39	0:0	8	;
water	70:16	0:0	8	b_grab
op	70:23	0:0	8	=
water	70:25	0:0	8	true
water	70:29	0:0	8	;
water	71:12	0:0	8	}
water	72:8	0:0	6	}
water	73:4	0:0	4	}
if	74:4	75:40	2	(vlc_mouse_HasMoved (p_old ,p_new ))
cond	74:8	74:41	3	vlc_mouse_HasMoved (p_old ,p_new )
call	74:8	74:41	4	vlc_mouse_HasMoved
arg	74:28	74:33	5	p_old
water	74:28	0:0	6	p_old
arg	74:35	74:41	5	p_new
water	74:35	0:0	6	p_new
stmts	75:8	75:40	3	
water	75:8	0:0	4	p_sys
op	75:13	0:0	4	->
water	75:15	0:0	4	i_last_activity
op	75:31	0:0	4	=
call	75:33	75:39	4	mdate
water	75:40	0:0	4	;
if	76:4	77:27	2	(b_grab)
cond	76:8	76:8	3	b_grab
water	76:8	0:0	4	b_grab
stmts	77:8	77:27	3	
return	77:8	77:27	4	VLC_EGENERIC
water	77:15	0:0	5	VLC_EGENERIC
op	79:4	0:0	2	*
water	79:5	0:0	2	p_mouse
op	79:13	0:0	2	=
op	79:15	0:0	2	*
water	79:16	0:0	2	p_new
water	79:21	0:0	2	;
water	80:4	0:0	2	p_mouse
op	80:11	0:0	2	->
water	80:13	0:0	2	i_x
op	80:17	0:0	2	=
water	80:19	0:0	2	p_sys
op	80:24	0:0	2	->
water	80:26	0:0	2	i_x
op	80:30	0:0	2	+
water	80:32	0:0	2	p_new
op	80:37	0:0	2	->
water	80:39	0:0	2	i_x
op	80:43	0:0	2	*
water	80:45	0:0	2	ZOOM_FACTOR
op	80:57	0:0	2	/
water	80:59	0:0	2	p_sys
op	80:64	0:0	2	->
water	80:66	0:0	2	i_zoom
water	80:72	0:0	2	;
water	81:4	0:0	2	p_mouse
op	81:11	0:0	2	->
water	81:13	0:0	2	i_y
op	81:17	0:0	2	=
water	81:19	0:0	2	p_sys
op	81:24	0:0	2	->
water	81:26	0:0	2	i_y
op	81:30	0:0	2	+
water	81:32	0:0	2	p_new
op	81:37	0:0	2	->
water	81:39	0:0	2	i_y
op	81:43	0:0	2	*
water	81:45	0:0	2	ZOOM_FACTOR
op	81:57	0:0	2	/
water	81:59	0:0	2	p_sys
op	81:64	0:0	2	->
water	81:66	0:0	2	i_zoom
water	81:72	0:0	2	;
return	82:4	82:22	2	VLC_SUCCESS
water	82:11	0:0	3	VLC_SUCCESS

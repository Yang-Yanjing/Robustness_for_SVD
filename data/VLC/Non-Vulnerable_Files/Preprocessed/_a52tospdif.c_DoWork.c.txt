func	2:0	40:0	0	static block_t *	DoWork
params	2:22	0:0	1	
param	2:24	2:43	2	filter_t *	p_filter
param	2:45	2:63	2	block_t *	p_in_buf
stmnts	8:4	39:20	1	
water	8:4	0:0	2	static
water	8:11	0:0	2	const
water	8:17	0:0	2	uint8_t
water	8:25	0:0	2	p_sync_le
op	8:34	0:0	2	[
water	8:35	0:0	2	6
op	8:36	0:0	2	]
op	8:38	0:0	2	=
water	8:40	0:0	2	{
water	8:42	0:0	2	0
water	8:43	0:0	2	x72
water	8:46	0:0	2	,
water	8:48	0:0	2	0
water	8:49	0:0	2	xF8
water	8:52	0:0	2	,
water	8:54	0:0	2	0
water	8:55	0:0	2	x1F
water	8:58	0:0	2	,
water	8:60	0:0	2	0
water	8:61	0:0	2	x4E
water	8:64	0:0	2	,
water	8:66	0:0	2	0
water	8:67	0:0	2	x01
water	8:70	0:0	2	,
water	8:72	0:0	2	0
water	8:73	0:0	2	x00
water	8:77	0:0	2	}
water	8:78	0:0	2	;
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	uint8_t
water	9:25	0:0	2	p_sync_be
op	9:34	0:0	2	[
water	9:35	0:0	2	6
op	9:36	0:0	2	]
op	9:38	0:0	2	=
water	9:40	0:0	2	{
water	9:42	0:0	2	0
water	9:43	0:0	2	xF8
water	9:46	0:0	2	,
water	9:48	0:0	2	0
water	9:49	0:0	2	x72
water	9:52	0:0	2	,
water	9:54	0:0	2	0
water	9:55	0:0	2	x4E
water	9:58	0:0	2	,
water	9:60	0:0	2	0
water	9:61	0:0	2	x1F
water	9:64	0:0	2	,
water	9:66	0:0	2	0
water	9:67	0:0	2	x00
water	9:70	0:0	2	,
water	9:72	0:0	2	0
water	9:73	0:0	2	x01
water	9:77	0:0	2	}
water	9:78	0:0	2	;
decl	10:4	10:50	2	uint16_t	i_frame_size
op	10:26	0:0	2	=
water	10:28	0:0	2	p_in_buf
op	10:36	0:0	2	->
water	10:38	0:0	2	i_buffer
op	10:47	0:0	2	/
water	10:49	0:0	2	2
decl	11:4	11:39	2	uint8_t	*p_in
op	11:19	0:0	2	=
water	11:21	0:0	2	p_in_buf
op	11:29	0:0	2	->
water	11:31	0:0	2	p_buffer
decl	12:4	12:55	2	block_t	*p_out_buf
op	12:23	0:0	2	=
call	12:25	12:54	3	block_Alloc
arg	12:38	12:54	4	AOUT_SPDIF_SIZE
water	12:38	0:0	5	AOUT_SPDIF_SIZE
if	13:4	14:16	2	(! p_out_buf)
cond	13:8	13:9	3	! p_out_buf
op	13:8	0:0	4	!
water	13:9	0:0	4	p_out_buf
stmts	14:8	14:16	3	
goto	14:8	14:16	4	out
water	14:13	0:0	5	out
decl	15:4	15:41	2	uint8_t	*p_out
op	15:20	0:0	2	=
water	15:22	0:0	2	p_out_buf
op	15:31	0:0	2	->
water	15:33	0:0	2	p_buffer
if	17:4	23:4	2	(p_filter -> fmt_out . audio . i_format == VLC_CODEC_SPDIFB)
cond	17:8	17:44	3	p_filter -> fmt_out . audio . i_format == VLC_CODEC_SPDIFB
water	17:8	0:0	4	p_filter
op	17:16	0:0	4	->
water	17:18	0:0	4	fmt_out
op	17:25	0:0	4	.
water	17:26	0:0	4	audio
op	17:31	0:0	4	.
water	17:32	0:0	4	i_format
op	17:41	0:0	4	==
water	17:44	0:0	4	VLC_CODEC_SPDIFB
stmts	18:4	23:4	3	
water	18:4	0:0	4	{
call	19:8	19:36	4	memcpy
arg	19:16	19:21	5	p_out
water	19:16	0:0	6	p_out
arg	19:23	19:32	5	p_sync_be
water	19:23	0:0	6	p_sync_be
arg	19:34	19:36	5	6
water	19:34	0:0	6	6
water	19:37	0:0	4	;
water	20:8	0:0	4	p_out
op	20:13	0:0	4	[
water	20:14	0:0	4	4
op	20:15	0:0	4	]
op	20:17	0:0	4	=
water	20:19	0:0	4	p_in
op	20:23	0:0	4	[
water	20:24	0:0	4	5
op	20:25	0:0	4	]
op	20:27	0:0	4	&
water	20:29	0:0	4	0
water	20:30	0:0	4	x7
water	20:32	0:0	4	;
call	21:8	21:45	4	SetWBE
arg	21:16	21:25	5	p_out+6
water	21:16	0:0	6	p_out
op	21:22	0:0	6	+
water	21:24	0:0	6	6
arg	21:27	21:45	5	i_frame_size<<4
water	21:27	0:0	6	i_frame_size
op	21:40	0:0	6	<<
water	21:43	0:0	6	4
water	21:46	0:0	4	;
call	22:8	22:50	4	memcpy
arg	22:16	22:25	5	&p_out[8]
op	22:16	0:0	6	&
water	22:17	0:0	6	p_out
op	22:22	0:0	6	[
water	22:23	0:0	6	8
op	22:24	0:0	6	]
arg	22:27	22:31	5	p_in
water	22:27	0:0	6	p_in
arg	22:33	22:50	5	i_frame_size*2
water	22:33	0:0	6	i_frame_size
op	22:46	0:0	6	*
water	22:48	0:0	6	2
water	22:51	0:0	4	;
water	23:4	0:0	4	}
else	24:4	30:4	2
stmts	25:4	30:4	3	
water	25:4	0:0	4	{
call	26:8	26:36	4	memcpy
arg	26:16	26:21	5	p_out
water	26:16	0:0	6	p_out
arg	26:23	26:32	5	p_sync_le
water	26:23	0:0	6	p_sync_le
arg	26:34	26:36	5	6
water	26:34	0:0	6	6
water	26:37	0:0	4	;
water	27:8	0:0	4	p_out
op	27:13	0:0	4	[
water	27:14	0:0	4	5
op	27:15	0:0	4	]
op	27:17	0:0	4	=
water	27:19	0:0	4	p_in
op	27:23	0:0	4	[
water	27:24	0:0	4	5
op	27:25	0:0	4	]
op	27:27	0:0	4	&
water	27:29	0:0	4	0
water	27:30	0:0	4	x7
water	27:32	0:0	4	;
call	28:8	28:45	4	SetWLE
arg	28:16	28:25	5	p_out+6
water	28:16	0:0	6	p_out
op	28:22	0:0	6	+
water	28:24	0:0	6	6
arg	28:27	28:45	5	i_frame_size<<4
water	28:27	0:0	6	i_frame_size
op	28:40	0:0	6	<<
water	28:43	0:0	6	4
water	28:46	0:0	4	;
call	29:8	29:48	4	swab
arg	29:14	29:18	5	p_in
water	29:14	0:0	6	p_in
arg	29:20	29:29	5	&p_out[8]
op	29:20	0:0	6	&
water	29:21	0:0	6	p_out
op	29:26	0:0	6	[
water	29:27	0:0	6	8
op	29:28	0:0	6	]
arg	29:31	29:48	5	i_frame_size*2
water	29:31	0:0	6	i_frame_size
op	29:44	0:0	6	*
water	29:46	0:0	6	2
water	29:49	0:0	4	;
water	30:4	0:0	4	}
call	31:4	32:55	2	memset
arg	31:12	31:40	3	p_out+8+i_frame_size*2
water	31:12	0:0	4	p_out
op	31:18	0:0	4	+
water	31:20	0:0	4	8
op	31:22	0:0	4	+
water	31:24	0:0	4	i_frame_size
op	31:37	0:0	4	*
water	31:39	0:0	4	2
arg	31:42	31:43	3	0
water	31:42	0:0	4	0
arg	32:16	32:55	3	AOUT_SPDIF_SIZE-i_frame_size*2-8
water	32:16	0:0	4	AOUT_SPDIF_SIZE
op	32:32	0:0	4	-
water	32:34	0:0	4	i_frame_size
op	32:47	0:0	4	*
water	32:49	0:0	4	2
op	32:51	0:0	4	-
water	32:53	0:0	4	8
water	32:56	0:0	2	;
water	33:4	0:0	2	p_out_buf
op	33:13	0:0	2	->
water	33:15	0:0	2	i_dts
op	33:21	0:0	2	=
water	33:23	0:0	2	p_in_buf
op	33:31	0:0	2	->
water	33:33	0:0	2	i_dts
water	33:38	0:0	2	;
water	34:4	0:0	2	p_out_buf
op	34:13	0:0	2	->
water	34:15	0:0	2	i_pts
op	34:21	0:0	2	=
water	34:23	0:0	2	p_in_buf
op	34:31	0:0	2	->
water	34:33	0:0	2	i_pts
water	34:38	0:0	2	;
water	35:4	0:0	2	p_out_buf
op	35:13	0:0	2	->
water	35:15	0:0	2	i_nb_samples
op	35:28	0:0	2	=
water	35:30	0:0	2	p_in_buf
op	35:38	0:0	2	->
water	35:40	0:0	2	i_nb_samples
water	35:52	0:0	2	;
water	36:4	0:0	2	p_out_buf
op	36:13	0:0	2	->
water	36:15	0:0	2	i_buffer
op	36:24	0:0	2	=
water	36:26	0:0	2	AOUT_SPDIF_SIZE
water	36:41	0:0	2	;
label	37:0	37:3	2	out :
call	38:4	38:28	2	block_Release
arg	38:19	38:28	3	p_in_buf
water	38:19	0:0	4	p_in_buf
water	38:29	0:0	2	;
return	39:4	39:20	2	p_out_buf
water	39:11	0:0	3	p_out_buf

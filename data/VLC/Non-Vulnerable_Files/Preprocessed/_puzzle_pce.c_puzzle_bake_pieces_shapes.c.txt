func	2:0	97:0	0	int	puzzle_bake_pieces_shapes
params	2:29	0:0	1	
param	2:31	2:49	2	filter_t *	p_filter
stmnts	0:0	96:22	1	
decl	20:4	20:41	2	filter_sys_t	*p_sys
op	20:24	0:0	2	=
water	20:26	0:0	2	p_filter
op	20:34	0:0	2	->
water	20:36	0:0	2	p_sys
call	21:4	21:41	2	puzzle_free_ps_pieces_shapes
arg	21:33	21:41	3	p_filter
water	21:33	0:0	4	p_filter
water	21:42	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	ps_pieces_shapes
op	22:28	0:0	2	=
call	22:30	22:80	2	malloc
arg	22:38	22:80	3	sizeof(piece_shape_t*)*PIECE_TYPE_NBR
op	22:38	0:0	4	sizeof
water	22:44	0:0	4	(
water	22:46	0:0	4	piece_shape_t
op	22:60	0:0	4	*
water	22:61	0:0	4	)
op	22:63	0:0	4	*
water	22:65	0:0	4	PIECE_TYPE_NBR
water	22:81	0:0	2	;
if	23:4	24:25	2	(! p_sys -> ps_pieces_shapes)
cond	23:8	23:16	3	! p_sys -> ps_pieces_shapes
op	23:8	0:0	4	!
water	23:9	0:0	4	p_sys
op	23:14	0:0	4	->
water	23:16	0:0	4	ps_pieces_shapes
stmts	24:8	24:25	3	
return	24:8	24:25	4	VLC_ENOMEM
water	24:15	0:0	5	VLC_ENOMEM
for	25:4	33:4	2	( int32_t i_piece = 0 ;i_piece < PIECE_TYPE_NBR;i_piece ++)
forinit	0:0	25:28	3	 int32_t i_piece = 0 ;
decl	25:9	25:28	4	int32_t	i_piece
op	25:25	0:0	4	=
water	25:27	0:0	4	0
cond	25:30	25:40	3	i_piece < PIECE_TYPE_NBR
water	25:30	0:0	4	i_piece
op	25:38	0:0	4	<
water	25:40	0:0	4	PIECE_TYPE_NBR
forexpr	25:56	25:63	3	i_piece ++
water	25:56	0:0	4	i_piece
op	25:63	0:0	4	++
stmts	25:67	33:4	3	
water	25:67	0:0	4	{
water	26:8	0:0	4	p_sys
op	26:13	0:0	4	->
water	26:15	0:0	4	ps_pieces_shapes
op	26:31	0:0	4	[
water	26:32	0:0	4	i_piece
op	26:39	0:0	4	]
op	26:41	0:0	4	=
call	26:43	26:104	4	malloc
arg	26:51	26:104	5	sizeof(piece_shape_t)*p_sys->s_allocated.i_planes
op	26:51	0:0	6	sizeof
water	26:57	0:0	6	(
water	26:59	0:0	6	piece_shape_t
water	26:72	0:0	6	)
op	26:74	0:0	6	*
water	26:76	0:0	6	p_sys
op	26:81	0:0	6	->
water	26:83	0:0	6	s_allocated
op	26:94	0:0	6	.
water	26:95	0:0	6	i_planes
water	26:105	0:0	4	;
if	27:8	28:29	4	(! p_sys -> ps_pieces_shapes [ i_piece ])
cond	27:12	27:44	5	! p_sys -> ps_pieces_shapes [ i_piece ]
op	27:12	0:0	6	!
water	27:13	0:0	6	p_sys
op	27:18	0:0	6	->
water	27:20	0:0	6	ps_pieces_shapes
op	27:36	0:0	6	[
water	27:37	0:0	6	i_piece
op	27:44	0:0	6	]
stmts	28:12	28:29	5	
return	28:12	28:29	6	VLC_ENOMEM
water	28:19	0:0	7	VLC_ENOMEM
for	29:8	32:8	4	( uint8_t i_plane = 0 ;i_plane < p_filter -> p_sys -> s_allocated . i_planes;i_plane ++)
forinit	0:0	29:32	5	 uint8_t i_plane = 0 ;
decl	29:13	29:32	6	uint8_t	i_plane
op	29:29	0:0	6	=
water	29:31	0:0	6	0
cond	29:34	29:73	5	i_plane < p_filter -> p_sys -> s_allocated . i_planes
water	29:34	0:0	6	i_plane
op	29:42	0:0	6	<
water	29:44	0:0	6	p_filter
op	29:52	0:0	6	->
water	29:54	0:0	6	p_sys
op	29:59	0:0	6	->
water	29:61	0:0	6	s_allocated
op	29:72	0:0	6	.
water	29:73	0:0	6	i_planes
forexpr	29:83	29:90	5	i_plane ++
water	29:83	0:0	6	i_plane
op	29:90	0:0	6	++
stmts	29:94	32:8	5	
water	29:94	0:0	6	{
water	30:12	0:0	6	p_sys
op	30:17	0:0	6	->
water	30:19	0:0	6	ps_pieces_shapes
op	30:35	0:0	6	[
water	30:36	0:0	6	i_piece
op	30:43	0:0	6	]
op	30:44	0:0	6	[
water	30:45	0:0	6	i_plane
op	30:52	0:0	6	]
op	30:53	0:0	6	.
water	30:54	0:0	6	i_row_nbr
op	30:64	0:0	6	=
water	30:66	0:0	6	0
water	30:67	0:0	6	;
water	31:12	0:0	6	p_sys
op	31:17	0:0	6	->
water	31:19	0:0	6	ps_pieces_shapes
op	31:35	0:0	6	[
water	31:36	0:0	6	i_piece
op	31:43	0:0	6	]
op	31:44	0:0	6	[
water	31:45	0:0	6	i_plane
op	31:52	0:0	6	]
op	31:53	0:0	6	.
water	31:54	0:0	6	ps_piece_shape_row
op	31:73	0:0	6	=
water	31:75	0:0	6	NULL
water	31:79	0:0	6	;
water	32:8	0:0	6	}
water	33:4	0:0	4	}
decl	34:4	34:31	2	int32_t	i_currect_shape
op	34:28	0:0	2	=
water	34:30	0:0	2	0
for	35:4	53:4	2	( uint8_t i_plane = 0 ;i_plane < p_filter -> p_sys -> s_allocated . i_planes;i_plane ++)
forinit	0:0	35:28	3	 uint8_t i_plane = 0 ;
decl	35:9	35:28	4	uint8_t	i_plane
op	35:25	0:0	4	=
water	35:27	0:0	4	0
cond	35:30	35:69	3	i_plane < p_filter -> p_sys -> s_allocated . i_planes
water	35:30	0:0	4	i_plane
op	35:38	0:0	4	<
water	35:40	0:0	4	p_filter
op	35:48	0:0	4	->
water	35:50	0:0	4	p_sys
op	35:55	0:0	4	->
water	35:57	0:0	4	s_allocated
op	35:68	0:0	4	.
water	35:69	0:0	4	i_planes
forexpr	35:79	35:86	3	i_plane ++
water	35:79	0:0	4	i_plane
op	35:86	0:0	4	++
stmts	35:90	53:4	3	
water	35:90	0:0	4	{
decl	36:8	36:17	4	int	i_ret
water	37:8	0:0	4	i_ret
op	37:14	0:0	4	=
call	37:16	37:135	4	puzzle_generate_sect_border
arg	37:45	37:53	5	p_filter
water	37:45	0:0	6	p_filter
arg	37:55	37:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+0][i_plane]
op	37:55	0:0	6	&
water	37:56	0:0	6	p_sys
op	37:61	0:0	6	->
water	37:63	0:0	6	ps_pieces_shapes
op	37:79	0:0	6	[
water	37:80	0:0	6	i_currect_shape
op	37:95	0:0	6	+
water	37:96	0:0	6	0
op	37:97	0:0	6	]
op	37:98	0:0	6	[
water	37:99	0:0	6	i_plane
op	37:106	0:0	6	]
arg	37:109	37:116	5	i_plane
water	37:109	0:0	6	i_plane
arg	37:118	37:135	5	puzzle_SHAPE_LEFT
water	37:118	0:0	6	puzzle_SHAPE_LEFT
water	37:136	0:0	4	;
if	38:8	38:46	4	(i_ret != VLC_SUCCESS)
cond	38:12	38:21	5	i_ret != VLC_SUCCESS
water	38:12	0:0	6	i_ret
op	38:18	0:0	6	!=
water	38:21	0:0	6	VLC_SUCCESS
stmts	38:34	38:46	5	
return	38:34	38:46	6	i_ret
water	38:41	0:0	7	i_ret
water	39:8	0:0	4	i_ret
op	39:14	0:0	4	=
call	39:16	39:135	4	puzzle_generate_sect_border
arg	39:45	39:53	5	p_filter
water	39:45	0:0	6	p_filter
arg	39:55	39:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+1][i_plane]
op	39:55	0:0	6	&
water	39:56	0:0	6	p_sys
op	39:61	0:0	6	->
water	39:63	0:0	6	ps_pieces_shapes
op	39:79	0:0	6	[
water	39:80	0:0	6	i_currect_shape
op	39:95	0:0	6	+
water	39:96	0:0	6	1
op	39:97	0:0	6	]
op	39:98	0:0	6	[
water	39:99	0:0	6	i_plane
op	39:106	0:0	6	]
arg	39:109	39:116	5	i_plane
water	39:109	0:0	6	i_plane
arg	39:118	39:135	5	puzzle_SHAPE_LEFT
water	39:118	0:0	6	puzzle_SHAPE_LEFT
water	39:136	0:0	4	;
if	40:8	40:46	4	(i_ret != VLC_SUCCESS)
cond	40:12	40:21	5	i_ret != VLC_SUCCESS
water	40:12	0:0	6	i_ret
op	40:18	0:0	6	!=
water	40:21	0:0	6	VLC_SUCCESS
stmts	40:34	40:46	5	
return	40:34	40:46	6	i_ret
water	40:41	0:0	7	i_ret
water	41:8	0:0	4	i_ret
op	41:14	0:0	4	=
call	41:16	41:134	4	puzzle_generate_sect_border
arg	41:45	41:53	5	p_filter
water	41:45	0:0	6	p_filter
arg	41:55	41:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+2][i_plane]
op	41:55	0:0	6	&
water	41:56	0:0	6	p_sys
op	41:61	0:0	6	->
water	41:63	0:0	6	ps_pieces_shapes
op	41:79	0:0	6	[
water	41:80	0:0	6	i_currect_shape
op	41:95	0:0	6	+
water	41:96	0:0	6	2
op	41:97	0:0	6	]
op	41:98	0:0	6	[
water	41:99	0:0	6	i_plane
op	41:106	0:0	6	]
arg	41:109	41:116	5	i_plane
water	41:109	0:0	6	i_plane
arg	41:118	41:134	5	puzzle_SHAPE_TOP
water	41:118	0:0	6	puzzle_SHAPE_TOP
water	41:135	0:0	4	;
if	42:8	42:46	4	(i_ret != VLC_SUCCESS)
cond	42:12	42:21	5	i_ret != VLC_SUCCESS
water	42:12	0:0	6	i_ret
op	42:18	0:0	6	!=
water	42:21	0:0	6	VLC_SUCCESS
stmts	42:34	42:46	5	
return	42:34	42:46	6	i_ret
water	42:41	0:0	7	i_ret
water	43:8	0:0	4	i_ret
op	43:14	0:0	4	=
call	43:16	43:134	4	puzzle_generate_sect_border
arg	43:45	43:53	5	p_filter
water	43:45	0:0	6	p_filter
arg	43:55	43:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+3][i_plane]
op	43:55	0:0	6	&
water	43:56	0:0	6	p_sys
op	43:61	0:0	6	->
water	43:63	0:0	6	ps_pieces_shapes
op	43:79	0:0	6	[
water	43:80	0:0	6	i_currect_shape
op	43:95	0:0	6	+
water	43:96	0:0	6	3
op	43:97	0:0	6	]
op	43:98	0:0	6	[
water	43:99	0:0	6	i_plane
op	43:106	0:0	6	]
arg	43:109	43:116	5	i_plane
water	43:109	0:0	6	i_plane
arg	43:118	43:134	5	puzzle_SHAPE_TOP
water	43:118	0:0	6	puzzle_SHAPE_TOP
water	43:135	0:0	4	;
if	44:8	44:46	4	(i_ret != VLC_SUCCESS)
cond	44:12	44:21	5	i_ret != VLC_SUCCESS
water	44:12	0:0	6	i_ret
op	44:18	0:0	6	!=
water	44:21	0:0	6	VLC_SUCCESS
stmts	44:34	44:46	5	
return	44:34	44:46	6	i_ret
water	44:41	0:0	7	i_ret
water	45:8	0:0	4	i_ret
op	45:14	0:0	4	=
call	45:16	45:134	4	puzzle_generate_sect_border
arg	45:45	45:53	5	p_filter
water	45:45	0:0	6	p_filter
arg	45:55	45:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+4][i_plane]
op	45:55	0:0	6	&
water	45:56	0:0	6	p_sys
op	45:61	0:0	6	->
water	45:63	0:0	6	ps_pieces_shapes
op	45:79	0:0	6	[
water	45:80	0:0	6	i_currect_shape
op	45:95	0:0	6	+
water	45:96	0:0	6	4
op	45:97	0:0	6	]
op	45:98	0:0	6	[
water	45:99	0:0	6	i_plane
op	45:106	0:0	6	]
arg	45:109	45:116	5	i_plane
water	45:109	0:0	6	i_plane
arg	45:118	45:134	5	puzzle_SHAPE_BTM
water	45:118	0:0	6	puzzle_SHAPE_BTM
water	45:135	0:0	4	;
if	46:8	46:46	4	(i_ret != VLC_SUCCESS)
cond	46:12	46:21	5	i_ret != VLC_SUCCESS
water	46:12	0:0	6	i_ret
op	46:18	0:0	6	!=
water	46:21	0:0	6	VLC_SUCCESS
stmts	46:34	46:46	5	
return	46:34	46:46	6	i_ret
water	46:41	0:0	7	i_ret
water	47:8	0:0	4	i_ret
op	47:14	0:0	4	=
call	47:16	47:134	4	puzzle_generate_sect_border
arg	47:45	47:53	5	p_filter
water	47:45	0:0	6	p_filter
arg	47:55	47:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+5][i_plane]
op	47:55	0:0	6	&
water	47:56	0:0	6	p_sys
op	47:61	0:0	6	->
water	47:63	0:0	6	ps_pieces_shapes
op	47:79	0:0	6	[
water	47:80	0:0	6	i_currect_shape
op	47:95	0:0	6	+
water	47:96	0:0	6	5
op	47:97	0:0	6	]
op	47:98	0:0	6	[
water	47:99	0:0	6	i_plane
op	47:106	0:0	6	]
arg	47:109	47:116	5	i_plane
water	47:109	0:0	6	i_plane
arg	47:118	47:134	5	puzzle_SHAPE_BTM
water	47:118	0:0	6	puzzle_SHAPE_BTM
water	47:135	0:0	4	;
if	48:8	48:46	4	(i_ret != VLC_SUCCESS)
cond	48:12	48:21	5	i_ret != VLC_SUCCESS
water	48:12	0:0	6	i_ret
op	48:18	0:0	6	!=
water	48:21	0:0	6	VLC_SUCCESS
stmts	48:34	48:46	5	
return	48:34	48:46	6	i_ret
water	48:41	0:0	7	i_ret
water	49:8	0:0	4	i_ret
op	49:14	0:0	4	=
call	49:16	49:136	4	puzzle_generate_sect_border
arg	49:45	49:53	5	p_filter
water	49:45	0:0	6	p_filter
arg	49:55	49:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+6][i_plane]
op	49:55	0:0	6	&
water	49:56	0:0	6	p_sys
op	49:61	0:0	6	->
water	49:63	0:0	6	ps_pieces_shapes
op	49:79	0:0	6	[
water	49:80	0:0	6	i_currect_shape
op	49:95	0:0	6	+
water	49:96	0:0	6	6
op	49:97	0:0	6	]
op	49:98	0:0	6	[
water	49:99	0:0	6	i_plane
op	49:106	0:0	6	]
arg	49:109	49:116	5	i_plane
water	49:109	0:0	6	i_plane
arg	49:118	49:136	5	puzzle_SHAPE_RIGHT
water	49:118	0:0	6	puzzle_SHAPE_RIGHT
water	49:137	0:0	4	;
if	50:8	50:46	4	(i_ret != VLC_SUCCESS)
cond	50:12	50:21	5	i_ret != VLC_SUCCESS
water	50:12	0:0	6	i_ret
op	50:18	0:0	6	!=
water	50:21	0:0	6	VLC_SUCCESS
stmts	50:34	50:46	5	
return	50:34	50:46	6	i_ret
water	50:41	0:0	7	i_ret
water	51:8	0:0	4	i_ret
op	51:14	0:0	4	=
call	51:16	51:136	4	puzzle_generate_sect_border
arg	51:45	51:53	5	p_filter
water	51:45	0:0	6	p_filter
arg	51:55	51:107	5	&p_sys->ps_pieces_shapes[i_currect_shape+7][i_plane]
op	51:55	0:0	6	&
water	51:56	0:0	6	p_sys
op	51:61	0:0	6	->
water	51:63	0:0	6	ps_pieces_shapes
op	51:79	0:0	6	[
water	51:80	0:0	6	i_currect_shape
op	51:95	0:0	6	+
water	51:96	0:0	6	7
op	51:97	0:0	6	]
op	51:98	0:0	6	[
water	51:99	0:0	6	i_plane
op	51:106	0:0	6	]
arg	51:109	51:116	5	i_plane
water	51:109	0:0	6	i_plane
arg	51:118	51:136	5	puzzle_SHAPE_RIGHT
water	51:118	0:0	6	puzzle_SHAPE_RIGHT
water	51:137	0:0	4	;
if	52:8	52:46	4	(i_ret != VLC_SUCCESS)
cond	52:12	52:21	5	i_ret != VLC_SUCCESS
water	52:12	0:0	6	i_ret
op	52:18	0:0	6	!=
water	52:21	0:0	6	VLC_SUCCESS
stmts	52:34	52:46	5	
return	52:34	52:46	6	i_ret
water	52:41	0:0	7	i_ret
water	53:4	0:0	4	}
water	54:4	0:0	2	i_currect_shape
op	54:20	0:0	2	+=
water	54:23	0:0	2	8
water	54:24	0:0	2	;
decl	55:4	55:62	2	int32_t	i_width
op	55:20	0:0	2	=
water	55:22	0:0	2	p_sys
op	55:27	0:0	2	->
water	55:29	0:0	2	ps_desk_planes
op	55:43	0:0	2	[
water	55:44	0:0	2	0
op	55:45	0:0	2	]
op	55:46	0:0	2	.
water	55:47	0:0	2	i_pce_max_width
decl	56:4	56:62	2	int32_t	i_lines
op	56:20	0:0	2	=
water	56:22	0:0	2	p_sys
op	56:27	0:0	2	->
water	56:29	0:0	2	ps_desk_planes
op	56:43	0:0	2	[
water	56:44	0:0	2	0
op	56:45	0:0	2	]
op	56:46	0:0	2	.
water	56:47	0:0	2	i_pce_max_lines
for	57:4	94:4	2	( int32_t i_shape = 0 ;i_shape < SHAPES_QTY;i_shape ++)
forinit	0:0	57:28	3	 int32_t i_shape = 0 ;
decl	57:9	57:28	4	int32_t	i_shape
op	57:25	0:0	4	=
water	57:27	0:0	4	0
cond	57:30	57:38	3	i_shape < SHAPES_QTY
water	57:30	0:0	4	i_shape
op	57:37	0:0	4	<
water	57:38	0:0	4	SHAPES_QTY
forexpr	57:50	57:57	3	i_shape ++
water	57:50	0:0	4	i_shape
op	57:57	0:0	4	++
stmts	57:61	94:4	3	
water	57:61	0:0	4	{
decl	58:8	58:145	4	point_t	*ps_scale_pts_H
op	58:32	0:0	4	=
call	58:34	58:144	5	puzzle_scale_curve_H
arg	58:55	58:62	6	i_width
water	58:55	0:0	7	i_width
arg	58:64	58:71	6	i_lines
water	58:64	0:0	7	i_lines
arg	58:77	58:78	6	7
water	58:77	0:0	7	7
arg	58:80	58:111	6	p_sys->ps_bezier_pts_H[i_shape]
water	58:80	0:0	7	p_sys
op	58:85	0:0	7	->
water	58:87	0:0	7	ps_bezier_pts_H
op	58:102	0:0	7	[
water	58:103	0:0	7	i_shape
op	58:110	0:0	7	]
arg	58:113	58:144	6	p_sys->s_allocated.i_shape_size
water	58:113	0:0	7	p_sys
op	58:118	0:0	7	->
water	58:120	0:0	7	s_allocated
op	58:131	0:0	7	.
water	58:132	0:0	7	i_shape_size
decl	59:8	59:145	4	point_t	*ps_scale_pts_V
op	59:32	0:0	4	=
call	59:34	59:144	5	puzzle_H_2_scale_curve_V
arg	59:59	59:66	6	i_width
water	59:59	0:0	7	i_width
arg	59:68	59:75	6	i_lines
water	59:68	0:0	7	i_lines
arg	59:77	59:78	6	7
water	59:77	0:0	7	7
arg	59:80	59:111	6	p_sys->ps_bezier_pts_H[i_shape]
water	59:80	0:0	7	p_sys
op	59:85	0:0	7	->
water	59:87	0:0	7	ps_bezier_pts_H
op	59:102	0:0	7	[
water	59:103	0:0	7	i_shape
op	59:110	0:0	7	]
arg	59:113	59:144	6	p_sys->s_allocated.i_shape_size
water	59:113	0:0	7	p_sys
op	59:118	0:0	7	->
water	59:120	0:0	7	s_allocated
op	59:131	0:0	7	.
water	59:132	0:0	7	i_shape_size
decl	60:8	60:78	4	point_t	*ps_neg_pts_H
op	60:30	0:0	4	=
call	60:34	60:77	5	puzzle_curve_H_2_negative
arg	60:60	60:61	6	7
water	60:60	0:0	7	7
arg	60:63	60:77	6	ps_scale_pts_H
water	60:63	0:0	7	ps_scale_pts_H
decl	61:8	61:78	4	point_t	*ps_neg_pts_V
op	61:30	0:0	4	=
call	61:34	61:77	5	puzzle_curve_V_2_negative
arg	61:60	61:61	6	7
water	61:60	0:0	7	7
arg	61:63	61:77	6	ps_scale_pts_V
water	61:63	0:0	7	ps_scale_pts_V
if	62:8	68:8	4	(! ps_scale_pts_H || ! ps_scale_pts_V || ! ps_neg_pts_H || ! ps_neg_pts_V)
cond	62:12	62:68	5	! ps_scale_pts_H || ! ps_scale_pts_V || ! ps_neg_pts_H || ! ps_neg_pts_V
op	62:12	0:0	6	!
water	62:13	0:0	6	ps_scale_pts_H
op	62:28	0:0	6	||
op	62:31	0:0	6	!
water	62:32	0:0	6	ps_scale_pts_V
op	62:47	0:0	6	||
op	62:50	0:0	6	!
water	62:51	0:0	6	ps_neg_pts_H
op	62:64	0:0	6	||
op	62:67	0:0	6	!
water	62:68	0:0	6	ps_neg_pts_V
stmts	62:82	68:8	5	
water	62:82	0:0	6	{
call	63:12	63:31	6	free
arg	63:17	63:31	7	ps_scale_pts_H
water	63:17	0:0	8	ps_scale_pts_H
water	63:32	0:0	6	;
call	64:12	64:31	6	free
arg	64:17	64:31	7	ps_scale_pts_V
water	64:17	0:0	8	ps_scale_pts_V
water	64:32	0:0	6	;
call	65:12	65:29	6	free
arg	65:17	65:29	7	ps_neg_pts_H
water	65:17	0:0	8	ps_neg_pts_H
water	65:30	0:0	6	;
call	66:12	66:29	6	free
arg	66:17	66:29	7	ps_neg_pts_V
water	66:17	0:0	8	ps_neg_pts_V
water	66:30	0:0	6	;
return	67:12	67:31	6	VLC_EGENERIC
water	67:19	0:0	7	VLC_EGENERIC
water	68:8	0:0	6	}
decl	69:8	69:17	4	int	i_ret
for	70:8	87:8	4	( uint8_t i_plane = 0 ;i_plane < p_filter -> p_sys -> s_allocated . i_planes;i_plane ++)
forinit	0:0	70:32	5	 uint8_t i_plane = 0 ;
decl	70:13	70:32	6	uint8_t	i_plane
op	70:29	0:0	6	=
water	70:31	0:0	6	0
cond	70:34	70:73	5	i_plane < p_filter -> p_sys -> s_allocated . i_planes
water	70:34	0:0	6	i_plane
op	70:42	0:0	6	<
water	70:44	0:0	6	p_filter
op	70:52	0:0	6	->
water	70:54	0:0	6	p_sys
op	70:59	0:0	6	->
water	70:61	0:0	6	s_allocated
op	70:72	0:0	6	.
water	70:73	0:0	6	i_planes
forexpr	70:83	70:90	5	i_plane ++
water	70:83	0:0	6	i_plane
op	70:90	0:0	6	++
stmts	70:94	87:8	5	
water	70:94	0:0	6	{
water	71:12	0:0	6	i_ret
op	71:18	0:0	6	=
call	71:20	71:158	6	puzzle_generate_sect_bezier
arg	71:49	71:57	7	p_filter
water	71:49	0:0	8	p_filter
arg	71:59	71:109	7	&p_sys->ps_pieces_shapes[i_currect_shape][i_plane]
op	71:59	0:0	8	&
water	71:60	0:0	8	p_sys
op	71:65	0:0	8	->
water	71:67	0:0	8	ps_pieces_shapes
op	71:83	0:0	8	[
water	71:84	0:0	8	i_currect_shape
op	71:99	0:0	8	]
op	71:100	0:0	8	[
water	71:101	0:0	8	i_plane
op	71:108	0:0	8	]
arg	71:113	71:114	7	7
water	71:113	0:0	8	7
arg	71:116	71:130	7	ps_scale_pts_V
water	71:116	0:0	8	ps_scale_pts_V
arg	71:132	71:139	7	i_plane
water	71:132	0:0	8	i_plane
arg	71:141	71:158	7	puzzle_SHAPE_LEFT
water	71:141	0:0	8	puzzle_SHAPE_LEFT
water	71:159	0:0	6	;
if	72:12	72:43	6	(i_ret != VLC_SUCCESS)
cond	72:16	72:25	7	i_ret != VLC_SUCCESS
water	72:16	0:0	8	i_ret
op	72:22	0:0	8	!=
water	72:25	0:0	8	VLC_SUCCESS
stmts	72:38	72:43	7	
break	72:38	72:43	8	
water	73:12	0:0	6	i_ret
op	73:18	0:0	6	=
call	73:20	73:158	6	puzzle_generate_sect_bezier
arg	73:49	73:57	7	p_filter
water	73:49	0:0	8	p_filter
arg	73:59	73:111	7	&p_sys->ps_pieces_shapes[i_currect_shape+1][i_plane]
op	73:59	0:0	8	&
water	73:60	0:0	8	p_sys
op	73:65	0:0	8	->
water	73:67	0:0	8	ps_pieces_shapes
op	73:83	0:0	8	[
water	73:84	0:0	8	i_currect_shape
op	73:99	0:0	8	+
water	73:100	0:0	8	1
op	73:101	0:0	8	]
op	73:102	0:0	8	[
water	73:103	0:0	8	i_plane
op	73:110	0:0	8	]
arg	73:113	73:114	7	7
water	73:113	0:0	8	7
arg	73:116	73:128	7	ps_neg_pts_V
water	73:116	0:0	8	ps_neg_pts_V
arg	73:132	73:139	7	i_plane
water	73:132	0:0	8	i_plane
arg	73:141	73:158	7	puzzle_SHAPE_LEFT
water	73:141	0:0	8	puzzle_SHAPE_LEFT
water	73:159	0:0	6	;
if	74:12	74:43	6	(i_ret != VLC_SUCCESS)
cond	74:16	74:25	7	i_ret != VLC_SUCCESS
water	74:16	0:0	8	i_ret
op	74:22	0:0	8	!=
water	74:25	0:0	8	VLC_SUCCESS
stmts	74:38	74:43	7	
break	74:38	74:43	8	
water	75:12	0:0	6	i_ret
op	75:18	0:0	6	=
call	75:20	75:158	6	puzzle_generate_sect_bezier
arg	75:50	75:58	7	p_filter
water	75:50	0:0	8	p_filter
arg	75:60	75:112	7	&p_sys->ps_pieces_shapes[i_currect_shape+2][i_plane]
op	75:60	0:0	8	&
water	75:61	0:0	8	p_sys
op	75:66	0:0	8	->
water	75:68	0:0	8	ps_pieces_shapes
op	75:84	0:0	8	[
water	75:85	0:0	8	i_currect_shape
op	75:100	0:0	8	+
water	75:101	0:0	8	2
op	75:102	0:0	8	]
op	75:103	0:0	8	[
water	75:104	0:0	8	i_plane
op	75:111	0:0	8	]
arg	75:114	75:115	7	7
water	75:114	0:0	8	7
arg	75:117	75:131	7	ps_scale_pts_H
water	75:117	0:0	8	ps_scale_pts_H
arg	75:133	75:140	7	i_plane
water	75:133	0:0	8	i_plane
arg	75:142	75:158	7	puzzle_SHAPE_TOP
water	75:142	0:0	8	puzzle_SHAPE_TOP
water	75:159	0:0	6	;
if	76:12	76:43	6	(i_ret != VLC_SUCCESS)
cond	76:16	76:25	7	i_ret != VLC_SUCCESS
water	76:16	0:0	8	i_ret
op	76:22	0:0	8	!=
water	76:25	0:0	8	VLC_SUCCESS
stmts	76:38	76:43	7	
break	76:38	76:43	8	
water	77:12	0:0	6	i_ret
op	77:18	0:0	6	=
call	77:20	77:158	6	puzzle_generate_sect_bezier
arg	77:50	77:58	7	p_filter
water	77:50	0:0	8	p_filter
arg	77:60	77:112	7	&p_sys->ps_pieces_shapes[i_currect_shape+3][i_plane]
op	77:60	0:0	8	&
water	77:61	0:0	8	p_sys
op	77:66	0:0	8	->
water	77:68	0:0	8	ps_pieces_shapes
op	77:84	0:0	8	[
water	77:85	0:0	8	i_currect_shape
op	77:100	0:0	8	+
water	77:101	0:0	8	3
op	77:102	0:0	8	]
op	77:103	0:0	8	[
water	77:104	0:0	8	i_plane
op	77:111	0:0	8	]
arg	77:114	77:115	7	7
water	77:114	0:0	8	7
arg	77:117	77:129	7	ps_neg_pts_H
water	77:117	0:0	8	ps_neg_pts_H
arg	77:133	77:140	7	i_plane
water	77:133	0:0	8	i_plane
arg	77:142	77:158	7	puzzle_SHAPE_TOP
water	77:142	0:0	8	puzzle_SHAPE_TOP
water	77:159	0:0	6	;
if	78:12	78:43	6	(i_ret != VLC_SUCCESS)
cond	78:16	78:25	7	i_ret != VLC_SUCCESS
water	78:16	0:0	8	i_ret
op	78:22	0:0	8	!=
water	78:25	0:0	8	VLC_SUCCESS
stmts	78:38	78:43	7	
break	78:38	78:43	8	
water	79:12	0:0	6	i_ret
op	79:18	0:0	6	=
call	79:20	79:177	6	puzzle_generate_sectTop2Btm
arg	79:49	79:57	7	p_filter
water	79:49	0:0	8	p_filter
arg	79:62	79:114	7	&p_sys->ps_pieces_shapes[i_currect_shape+4][i_plane]
op	79:62	0:0	8	&
water	79:63	0:0	8	p_sys
op	79:68	0:0	8	->
water	79:70	0:0	8	ps_pieces_shapes
op	79:86	0:0	8	[
water	79:87	0:0	8	i_currect_shape
op	79:102	0:0	8	+
water	79:103	0:0	8	4
op	79:104	0:0	8	]
op	79:105	0:0	8	[
water	79:106	0:0	8	i_plane
op	79:113	0:0	8	]
arg	79:116	79:168	7	&p_sys->ps_pieces_shapes[i_currect_shape+2][i_plane]
op	79:116	0:0	8	&
water	79:117	0:0	8	p_sys
op	79:122	0:0	8	->
water	79:124	0:0	8	ps_pieces_shapes
op	79:140	0:0	8	[
water	79:141	0:0	8	i_currect_shape
op	79:156	0:0	8	+
water	79:157	0:0	8	2
op	79:158	0:0	8	]
op	79:159	0:0	8	[
water	79:160	0:0	8	i_plane
op	79:167	0:0	8	]
arg	79:170	79:177	7	i_plane
water	79:170	0:0	8	i_plane
water	79:178	0:0	6	;
if	80:12	80:43	6	(i_ret != VLC_SUCCESS)
cond	80:16	80:25	7	i_ret != VLC_SUCCESS
water	80:16	0:0	8	i_ret
op	80:22	0:0	8	!=
water	80:25	0:0	8	VLC_SUCCESS
stmts	80:38	80:43	7	
break	80:38	80:43	8	
water	81:12	0:0	6	i_ret
op	81:18	0:0	6	=
call	81:20	81:177	6	puzzle_generate_sectTop2Btm
arg	81:49	81:57	7	p_filter
water	81:49	0:0	8	p_filter
arg	81:62	81:114	7	&p_sys->ps_pieces_shapes[i_currect_shape+5][i_plane]
op	81:62	0:0	8	&
water	81:63	0:0	8	p_sys
op	81:68	0:0	8	->
water	81:70	0:0	8	ps_pieces_shapes
op	81:86	0:0	8	[
water	81:87	0:0	8	i_currect_shape
op	81:102	0:0	8	+
water	81:103	0:0	8	5
op	81:104	0:0	8	]
op	81:105	0:0	8	[
water	81:106	0:0	8	i_plane
op	81:113	0:0	8	]
arg	81:116	81:168	7	&p_sys->ps_pieces_shapes[i_currect_shape+3][i_plane]
op	81:116	0:0	8	&
water	81:117	0:0	8	p_sys
op	81:122	0:0	8	->
water	81:124	0:0	8	ps_pieces_shapes
op	81:140	0:0	8	[
water	81:141	0:0	8	i_currect_shape
op	81:156	0:0	8	+
water	81:157	0:0	8	3
op	81:158	0:0	8	]
op	81:159	0:0	8	[
water	81:160	0:0	8	i_plane
op	81:167	0:0	8	]
arg	81:170	81:177	7	i_plane
water	81:170	0:0	8	i_plane
water	81:178	0:0	6	;
if	82:12	82:43	6	(i_ret != VLC_SUCCESS)
cond	82:16	82:25	7	i_ret != VLC_SUCCESS
water	82:16	0:0	8	i_ret
op	82:22	0:0	8	!=
water	82:25	0:0	8	VLC_SUCCESS
stmts	82:38	82:43	7	
break	82:38	82:43	8	
water	83:12	0:0	6	i_ret
op	83:18	0:0	6	=
call	83:20	83:177	6	puzzle_generate_sectLeft2Right
arg	83:52	83:60	7	p_filter
water	83:52	0:0	8	p_filter
arg	83:62	83:114	7	&p_sys->ps_pieces_shapes[i_currect_shape+6][i_plane]
op	83:62	0:0	8	&
water	83:63	0:0	8	p_sys
op	83:68	0:0	8	->
water	83:70	0:0	8	ps_pieces_shapes
op	83:86	0:0	8	[
water	83:87	0:0	8	i_currect_shape
op	83:102	0:0	8	+
water	83:103	0:0	8	6
op	83:104	0:0	8	]
op	83:105	0:0	8	[
water	83:106	0:0	8	i_plane
op	83:113	0:0	8	]
arg	83:116	83:166	7	&p_sys->ps_pieces_shapes[i_currect_shape][i_plane]
op	83:116	0:0	8	&
water	83:117	0:0	8	p_sys
op	83:122	0:0	8	->
water	83:124	0:0	8	ps_pieces_shapes
op	83:140	0:0	8	[
water	83:141	0:0	8	i_currect_shape
op	83:156	0:0	8	]
op	83:157	0:0	8	[
water	83:158	0:0	8	i_plane
op	83:165	0:0	8	]
arg	83:170	83:177	7	i_plane
water	83:170	0:0	8	i_plane
water	83:178	0:0	6	;
if	84:12	84:43	6	(i_ret != VLC_SUCCESS)
cond	84:16	84:25	7	i_ret != VLC_SUCCESS
water	84:16	0:0	8	i_ret
op	84:22	0:0	8	!=
water	84:25	0:0	8	VLC_SUCCESS
stmts	84:38	84:43	7	
break	84:38	84:43	8	
water	85:12	0:0	6	i_ret
op	85:18	0:0	6	=
call	85:20	85:177	6	puzzle_generate_sectLeft2Right
arg	85:52	85:60	7	p_filter
water	85:52	0:0	8	p_filter
arg	85:62	85:114	7	&p_sys->ps_pieces_shapes[i_currect_shape+7][i_plane]
op	85:62	0:0	8	&
water	85:63	0:0	8	p_sys
op	85:68	0:0	8	->
water	85:70	0:0	8	ps_pieces_shapes
op	85:86	0:0	8	[
water	85:87	0:0	8	i_currect_shape
op	85:102	0:0	8	+
water	85:103	0:0	8	7
op	85:104	0:0	8	]
op	85:105	0:0	8	[
water	85:106	0:0	8	i_plane
op	85:113	0:0	8	]
arg	85:116	85:168	7	&p_sys->ps_pieces_shapes[i_currect_shape+1][i_plane]
op	85:116	0:0	8	&
water	85:117	0:0	8	p_sys
op	85:122	0:0	8	->
water	85:124	0:0	8	ps_pieces_shapes
op	85:140	0:0	8	[
water	85:141	0:0	8	i_currect_shape
op	85:156	0:0	8	+
water	85:157	0:0	8	1
op	85:158	0:0	8	]
op	85:159	0:0	8	[
water	85:160	0:0	8	i_plane
op	85:167	0:0	8	]
arg	85:170	85:177	7	i_plane
water	85:170	0:0	8	i_plane
water	85:178	0:0	6	;
if	86:12	86:43	6	(i_ret != VLC_SUCCESS)
cond	86:16	86:25	7	i_ret != VLC_SUCCESS
water	86:16	0:0	8	i_ret
op	86:22	0:0	8	!=
water	86:25	0:0	8	VLC_SUCCESS
stmts	86:38	86:43	7	
break	86:38	86:43	8	
water	87:8	0:0	6	}
call	88:8	88:27	4	free
arg	88:13	88:27	5	ps_scale_pts_H
water	88:13	0:0	6	ps_scale_pts_H
water	88:28	0:0	4	;
call	89:8	89:27	4	free
arg	89:13	89:27	5	ps_scale_pts_V
water	89:13	0:0	6	ps_scale_pts_V
water	89:28	0:0	4	;
call	90:8	90:25	4	free
arg	90:13	90:25	5	ps_neg_pts_H
water	90:13	0:0	6	ps_neg_pts_H
water	90:26	0:0	4	;
call	91:8	91:25	4	free
arg	91:13	91:25	5	ps_neg_pts_V
water	91:13	0:0	6	ps_neg_pts_V
water	91:26	0:0	4	;
if	92:8	92:46	4	(i_ret != VLC_SUCCESS)
cond	92:12	92:21	5	i_ret != VLC_SUCCESS
water	92:12	0:0	6	i_ret
op	92:18	0:0	6	!=
water	92:21	0:0	6	VLC_SUCCESS
stmts	92:34	92:46	5	
return	92:34	92:46	6	i_ret
water	92:41	0:0	7	i_ret
water	93:8	0:0	4	i_currect_shape
op	93:24	0:0	4	+=
water	93:27	0:0	4	8
water	93:28	0:0	4	;
water	94:4	0:0	4	}
water	95:4	0:0	2	p_sys
op	95:9	0:0	2	->
water	95:11	0:0	2	b_shape_init
op	95:24	0:0	2	=
water	95:26	0:0	2	true
water	95:30	0:0	2	;
return	96:4	96:22	2	VLC_SUCCESS
water	96:11	0:0	3	VLC_SUCCESS

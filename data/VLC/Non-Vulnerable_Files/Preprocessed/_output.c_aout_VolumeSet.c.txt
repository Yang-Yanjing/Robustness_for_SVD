func	2:0	12:0	0	int	aout_VolumeSet
params	2:19	0:0	1	
param	2:20	2:40	2	audio_output_t *	aout
param	2:42	2:51	2	float	vol
stmnts	0:0	11:12	1	
decl	4:4	4:43	2	aout_owner_t	*owner
op	4:24	0:0	2	=
call	4:26	4:42	3	aout_owner
arg	4:38	4:42	4	aout
water	4:38	0:0	5	aout
call	5:4	5:22	2	assert
arg	5:12	5:22	3	vol>=0.f
water	5:12	0:0	4	vol
op	5:16	0:0	4	>=
water	5:19	0:0	4	0
op	5:20	0:0	4	.
water	5:21	0:0	4	f
water	5:23	0:0	2	;
call	6:4	6:36	2	vlc_mutex_lock
arg	6:20	6:36	3	&owner->req.lock
op	6:20	0:0	4	&
water	6:21	0:0	4	owner
op	6:26	0:0	4	->
water	6:28	0:0	4	req
op	6:31	0:0	4	.
water	6:32	0:0	4	lock
water	6:37	0:0	2	;
water	7:4	0:0	2	owner
op	7:9	0:0	2	->
water	7:11	0:0	2	req
op	7:14	0:0	2	.
water	7:15	0:0	2	volume
op	7:22	0:0	2	=
water	7:24	0:0	2	vol
water	7:27	0:0	2	;
call	8:4	8:38	2	vlc_mutex_unlock
arg	8:22	8:38	3	&owner->req.lock
op	8:22	0:0	4	&
water	8:23	0:0	4	owner
op	8:28	0:0	4	->
water	8:30	0:0	4	req
op	8:33	0:0	4	.
water	8:34	0:0	4	lock
water	8:39	0:0	2	;
if	9:4	10:32	2	(aout_OutputTryLock (aout ) == 0)
cond	9:8	9:37	3	aout_OutputTryLock (aout ) == 0
call	9:8	9:32	4	aout_OutputTryLock
arg	9:28	9:32	5	aout
water	9:28	0:0	6	aout
op	9:34	0:0	4	==
water	9:37	0:0	4	0
stmts	10:8	10:32	3	
call	10:8	10:31	4	aout_OutputUnlock
arg	10:27	10:31	5	aout
water	10:27	0:0	6	aout
water	10:32	0:0	4	;
return	11:4	11:12	2	0
water	11:11	0:0	3	0

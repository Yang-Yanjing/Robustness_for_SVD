func	2:0	41:0	0	playlist_item_t *	GetPrevUncle
params	2:29	0:0	1	
param	2:31	2:53	2	playlist_t *	p_playlist
param	2:55	2:78	2	playlist_item_t *	p_item
param	3:31	3:55	2	playlist_item_t *	p_root
stmnts	0:0	40:15	1	
decl	5:4	5:48	2	playlist_item_t	*p_parent
op	5:30	0:0	2	=
water	5:32	0:0	2	p_item
op	5:38	0:0	2	->
water	5:40	0:0	2	p_parent
decl	6:4	6:34	2	playlist_item_t	*p_grandparent
decl	7:4	7:24	2	bool	b_found
op	7:17	0:0	2	=
water	7:19	0:0	2	false
water	8:4	0:0	2	(
water	8:5	0:0	2	void
water	8:9	0:0	2	)
water	8:10	0:0	2	p_playlist
water	8:20	0:0	2	;
if	9:4	38:4	2	(p_parent != NULL)
cond	9:8	9:20	3	p_parent != NULL
water	9:8	0:0	4	p_parent
op	9:17	0:0	4	!=
water	9:20	0:0	4	NULL
stmts	10:4	38:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	p_grandparent
op	11:22	0:0	4	=
water	11:24	0:0	4	p_parent
op	11:32	0:0	4	->
water	11:34	0:0	4	p_parent
water	11:42	0:0	4	;
while	12:8	37:8	4	(1)
cond	12:15	12:15	5	1
water	12:15	0:0	6	1
stmts	13:8	37:8	5	
water	13:8	0:0	6	{
decl	14:12	14:17	6	int	i
for	15:12	22:12	6	(i = p_grandparent -> i_children - 1 ;i >= 0;i --)
forinit	15:17	15:50	7	i = p_grandparent -> i_children - 1 ;
water	15:17	0:0	8	i
op	15:19	0:0	8	=
water	15:21	0:0	8	p_grandparent
op	15:34	0:0	8	->
water	15:36	0:0	8	i_children
op	15:47	0:0	8	-
water	15:48	0:0	8	1
water	15:50	0:0	8	;
cond	15:52	15:57	7	i >= 0
water	15:52	0:0	8	i
op	15:54	0:0	8	>=
water	15:57	0:0	8	0
forexpr	15:60	15:61	7	i --
water	15:60	0:0	8	i
op	15:61	0:0	8	--
stmts	16:12	22:12	7	
water	16:12	0:0	8	{
if	17:16	21:16	8	(p_parent == p_grandparent -> pp_children [ i ])
cond	17:20	17:60	9	p_parent == p_grandparent -> pp_children [ i ]
water	17:20	0:0	10	p_parent
op	17:29	0:0	10	==
water	17:32	0:0	10	p_grandparent
op	17:45	0:0	10	->
water	17:47	0:0	10	pp_children
op	17:58	0:0	10	[
water	17:59	0:0	10	i
op	17:60	0:0	10	]
stmts	18:16	21:16	9	
water	18:16	0:0	10	{
water	19:20	0:0	10	b_found
op	19:28	0:0	10	=
water	19:30	0:0	10	true
water	19:34	0:0	10	;
break	20:20	20:25	10	
water	21:16	0:0	10	}
water	22:12	0:0	8	}
if	23:12	26:12	6	(b_found && i - 1 > 0)
cond	23:16	23:35	7	b_found && i - 1 > 0
water	23:16	0:0	8	b_found
op	23:24	0:0	8	&&
water	23:27	0:0	8	i
op	23:29	0:0	8	-
water	23:31	0:0	8	1
op	23:33	0:0	8	>
water	23:35	0:0	8	0
stmts	24:12	26:12	7	
water	24:12	0:0	8	{
return	25:16	25:54	8	p_grandparent->pp_children[i-1]
water	25:23	0:0	9	p_grandparent
op	25:36	0:0	9	->
water	25:38	0:0	9	pp_children
op	25:49	0:0	9	[
water	25:50	0:0	9	i
op	25:51	0:0	9	-
water	25:52	0:0	9	1
op	25:53	0:0	9	]
water	26:12	0:0	8	}
if	28:12	31:12	6	(p_grandparent == p_root)
cond	28:16	28:33	7	p_grandparent == p_root
water	28:16	0:0	8	p_grandparent
op	28:30	0:0	8	==
water	28:33	0:0	8	p_root
stmts	29:12	31:12	7	
water	29:12	0:0	8	{
return	30:16	30:27	8	NULL
water	30:23	0:0	9	NULL
water	31:12	0:0	8	}
else	32:12	36:12	6
stmts	33:12	36:12	7	
water	33:12	0:0	8	{
water	34:16	0:0	8	p_parent
op	34:25	0:0	8	=
water	34:27	0:0	8	p_grandparent
water	34:40	0:0	8	;
water	35:16	0:0	8	p_grandparent
op	35:30	0:0	8	=
water	35:32	0:0	8	p_parent
op	35:40	0:0	8	->
water	35:42	0:0	8	p_parent
water	35:50	0:0	8	;
water	36:12	0:0	8	}
water	37:8	0:0	6	}
water	38:4	0:0	4	}
return	40:4	40:15	2	NULL
water	40:11	0:0	3	NULL

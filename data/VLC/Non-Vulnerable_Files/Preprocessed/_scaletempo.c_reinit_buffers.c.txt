func	2:0	97:0	0	static int	reinit_buffers
params	2:25	0:0	1	
param	2:27	2:46	2	filter_t *	p_filter
stmnts	0:0	96:22	1	
decl	4:4	4:37	2	filter_sys_t	*p
op	4:20	0:0	2	=
water	4:22	0:0	2	p_filter
op	4:30	0:0	2	->
water	4:32	0:0	2	p_sys
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	i
water	5:14	0:0	2	,
water	5:15	0:0	2	j
water	5:16	0:0	2	;
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	frames_stride
op	6:27	0:0	2	=
water	6:29	0:0	2	p
op	6:30	0:0	2	->
water	6:32	0:0	2	ms_stride
op	6:42	0:0	2	*
water	6:44	0:0	2	p
op	6:45	0:0	2	->
water	6:47	0:0	2	sample_rate
op	6:59	0:0	2	/
water	6:61	0:0	2	1000
op	6:65	0:0	2	.
water	6:66	0:0	2	0
water	6:67	0:0	2	;
water	7:4	0:0	2	p
op	7:5	0:0	2	->
water	7:7	0:0	2	bytes_stride
op	7:20	0:0	2	=
water	7:22	0:0	2	frames_stride
op	7:36	0:0	2	*
water	7:38	0:0	2	p
op	7:39	0:0	2	->
water	7:41	0:0	2	bytes_per_frame
water	7:56	0:0	2	;
water	9:4	0:0	2	unsigned
water	9:13	0:0	2	frames_overlap
op	9:28	0:0	2	=
water	9:30	0:0	2	frames_stride
op	9:44	0:0	2	*
water	9:46	0:0	2	p
op	9:47	0:0	2	->
water	9:49	0:0	2	percent_overlap
water	9:64	0:0	2	;
if	10:4	16:4	2	(frames_overlap < 1)
cond	10:8	10:25	3	frames_overlap < 1
water	10:8	0:0	4	frames_overlap
op	10:23	0:0	4	<
water	10:25	0:0	4	1
stmts	11:4	16:4	3	
water	11:4	0:0	4	{
water	12:8	0:0	4	p
op	12:9	0:0	4	->
water	12:11	0:0	4	bytes_overlap
op	12:28	0:0	4	=
water	12:30	0:0	4	0
water	12:31	0:0	4	;
water	13:8	0:0	4	p
op	13:9	0:0	4	->
water	13:11	0:0	4	bytes_standing
op	13:28	0:0	4	=
water	13:30	0:0	4	p
op	13:31	0:0	4	->
water	13:33	0:0	4	bytes_stride
water	13:45	0:0	4	;
water	14:8	0:0	4	p
op	14:9	0:0	4	->
water	14:11	0:0	4	samples_standing
op	14:28	0:0	4	=
water	14:30	0:0	4	p
op	14:31	0:0	4	->
water	14:33	0:0	4	bytes_standing
op	14:48	0:0	4	/
water	14:50	0:0	4	p
op	14:51	0:0	4	->
water	14:53	0:0	4	bytes_per_sample
water	14:69	0:0	4	;
water	15:8	0:0	4	p
op	15:9	0:0	4	->
water	15:11	0:0	4	output_overlap
op	15:28	0:0	4	=
water	15:30	0:0	4	NULL
water	15:34	0:0	4	;
water	16:4	0:0	4	}
else	17:4	39:4	2
stmts	18:4	39:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	unsigned
water	19:17	0:0	4	prev_overlap
op	19:32	0:0	4	=
water	19:34	0:0	4	p
op	19:35	0:0	4	->
water	19:37	0:0	4	bytes_overlap
water	19:50	0:0	4	;
water	20:8	0:0	4	p
op	20:9	0:0	4	->
water	20:11	0:0	4	bytes_overlap
op	20:28	0:0	4	=
water	20:30	0:0	4	frames_overlap
op	20:45	0:0	4	*
water	20:47	0:0	4	p
op	20:48	0:0	4	->
water	20:50	0:0	4	bytes_per_frame
water	20:65	0:0	4	;
water	21:8	0:0	4	p
op	21:9	0:0	4	->
water	21:11	0:0	4	samples_overlap
op	21:28	0:0	4	=
water	21:30	0:0	4	frames_overlap
op	21:45	0:0	4	*
water	21:47	0:0	4	p
op	21:48	0:0	4	->
water	21:50	0:0	4	samples_per_frame
water	21:67	0:0	4	;
water	22:8	0:0	4	p
op	22:9	0:0	4	->
water	22:11	0:0	4	bytes_standing
op	22:28	0:0	4	=
water	22:30	0:0	4	p
op	22:31	0:0	4	->
water	22:33	0:0	4	bytes_stride
op	22:46	0:0	4	-
water	22:48	0:0	4	p
op	22:49	0:0	4	->
water	22:51	0:0	4	bytes_overlap
water	22:64	0:0	4	;
water	23:8	0:0	4	p
op	23:9	0:0	4	->
water	23:11	0:0	4	samples_standing
op	23:28	0:0	4	=
water	23:30	0:0	4	p
op	23:31	0:0	4	->
water	23:33	0:0	4	bytes_standing
op	23:48	0:0	4	/
water	23:50	0:0	4	p
op	23:51	0:0	4	->
water	23:53	0:0	4	bytes_per_sample
water	23:69	0:0	4	;
water	24:8	0:0	4	p
op	24:9	0:0	4	->
water	24:11	0:0	4	buf_overlap
op	24:28	0:0	4	=
call	24:30	24:55	4	malloc
arg	24:38	24:55	5	p->bytes_overlap
water	24:38	0:0	6	p
op	24:39	0:0	6	->
water	24:41	0:0	6	bytes_overlap
water	24:56	0:0	4	;
water	25:8	0:0	4	p
op	25:9	0:0	4	->
water	25:11	0:0	4	table_blend
op	25:28	0:0	4	=
call	25:30	25:61	4	malloc
arg	25:38	25:61	5	p->samples_overlap*4
water	25:38	0:0	6	p
op	25:39	0:0	6	->
water	25:41	0:0	6	samples_overlap
op	25:57	0:0	6	*
water	25:59	0:0	6	4
water	25:62	0:0	4	;
if	26:8	27:29	4	(! p -> buf_overlap || ! p -> table_blend)
cond	26:12	26:35	5	! p -> buf_overlap || ! p -> table_blend
op	26:12	0:0	6	!
water	26:13	0:0	6	p
op	26:14	0:0	6	->
water	26:16	0:0	6	buf_overlap
op	26:28	0:0	6	||
op	26:31	0:0	6	!
water	26:32	0:0	6	p
op	26:33	0:0	6	->
water	26:35	0:0	6	table_blend
stmts	27:12	27:29	5	
return	27:12	27:29	6	VLC_ENOMEM
water	27:19	0:0	7	VLC_ENOMEM
if	28:8	29:98	4	(p -> bytes_overlap > prev_overlap)
cond	28:12	28:31	5	p -> bytes_overlap > prev_overlap
water	28:12	0:0	6	p
op	28:13	0:0	6	->
water	28:15	0:0	6	bytes_overlap
op	28:29	0:0	6	>
water	28:31	0:0	6	prev_overlap
stmts	29:12	29:98	5	
call	29:12	29:97	6	memset
arg	29:20	29:60	7	(uint8_t*)p->buf_overlap+prev_overlap
water	29:20	0:0	8	(
water	29:21	0:0	8	uint8_t
op	29:29	0:0	8	*
water	29:30	0:0	8	)
water	29:31	0:0	8	p
op	29:32	0:0	8	->
water	29:34	0:0	8	buf_overlap
op	29:46	0:0	8	+
water	29:48	0:0	8	prev_overlap
arg	29:62	29:63	7	0
water	29:62	0:0	8	0
arg	29:65	29:97	7	p->bytes_overlap-prev_overlap
water	29:65	0:0	8	p
op	29:66	0:0	8	->
water	29:68	0:0	8	bytes_overlap
op	29:82	0:0	8	-
water	29:84	0:0	8	prev_overlap
water	29:98	0:0	6	;
decl	30:8	30:34	4	float	*pb
op	30:18	0:0	4	=
water	30:20	0:0	4	p
op	30:21	0:0	4	->
water	30:23	0:0	4	table_blend
decl	31:8	31:39	4	float	t
op	31:16	0:0	4	=
water	31:18	0:0	4	(
water	31:19	0:0	4	float
water	31:24	0:0	4	)
water	31:25	0:0	4	frames_overlap
for	32:8	37:8	4	(i = 0 ;i < frames_overlap;i ++)
forinit	32:13	32:18	5	i = 0 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:22	5	i < frames_overlap
water	32:20	0:0	6	i
op	32:21	0:0	6	<
water	32:22	0:0	6	frames_overlap
forexpr	32:38	32:39	5	i ++
water	32:38	0:0	6	i
op	32:39	0:0	6	++
stmts	33:8	37:8	5	
water	33:8	0:0	6	{
decl	34:12	34:27	6	float	v
op	34:20	0:0	6	=
water	34:22	0:0	6	i
op	34:24	0:0	6	/
water	34:26	0:0	6	t
for	35:12	36:25	6	(j = 0 ;j < p -> samples_per_frame;j ++)
forinit	35:17	35:22	7	j = 0 ;
water	35:17	0:0	8	j
op	35:19	0:0	8	=
water	35:21	0:0	8	0
water	35:22	0:0	8	;
cond	35:24	35:31	7	j < p -> samples_per_frame
water	35:24	0:0	8	j
op	35:26	0:0	8	<
water	35:28	0:0	8	p
op	35:29	0:0	8	->
water	35:31	0:0	8	samples_per_frame
forexpr	35:50	35:51	7	j ++
water	35:50	0:0	8	j
op	35:51	0:0	8	++
stmts	36:16	36:25	7	
op	36:16	0:0	8	*
water	36:17	0:0	8	pb
op	36:19	0:0	8	++
op	36:22	0:0	8	=
water	36:24	0:0	8	v
water	36:25	0:0	8	;
water	37:8	0:0	6	}
water	38:8	0:0	4	p
op	38:9	0:0	4	->
water	38:11	0:0	4	output_overlap
op	38:26	0:0	4	=
water	38:28	0:0	4	output_overlap_float
water	38:48	0:0	4	;
water	39:4	0:0	4	}
water	41:4	0:0	2	p
op	41:5	0:0	2	->
water	41:7	0:0	2	frames_search
op	41:21	0:0	2	=
water	41:23	0:0	2	(
water	41:25	0:0	2	frames_overlap
op	41:40	0:0	2	<=
water	41:43	0:0	2	1
water	41:45	0:0	2	)
water	41:47	0:0	2	?
water	41:49	0:0	2	0
water	41:51	0:0	2	:
water	41:53	0:0	2	p
op	41:54	0:0	2	->
water	41:56	0:0	2	ms_search
op	41:66	0:0	2	*
water	41:68	0:0	2	p
op	41:69	0:0	2	->
water	41:71	0:0	2	sample_rate
op	41:83	0:0	2	/
water	41:85	0:0	2	1000
op	41:89	0:0	2	.
water	41:90	0:0	2	0
water	41:91	0:0	2	;
if	42:4	45:4	2	(p -> frames_search < 1)
cond	42:8	42:27	3	p -> frames_search < 1
water	42:8	0:0	4	p
op	42:9	0:0	4	->
water	42:11	0:0	4	frames_search
op	42:25	0:0	4	<
water	42:27	0:0	4	1
stmts	43:4	45:4	3	
water	43:4	0:0	4	{
water	44:8	0:0	4	p
op	44:9	0:0	4	->
water	44:11	0:0	4	best_overlap_offset
op	44:31	0:0	4	=
water	44:33	0:0	4	NULL
water	44:37	0:0	4	;
water	45:4	0:0	4	}
else	46:4	61:4	2
stmts	47:4	61:4	3	
water	47:4	0:0	4	{
water	48:8	0:0	4	unsigned
water	48:17	0:0	4	bytes_pre_corr
op	48:32	0:0	4	=
water	48:34	0:0	4	(
water	48:36	0:0	4	p
op	48:37	0:0	4	->
water	48:39	0:0	4	samples_overlap
op	48:55	0:0	4	-
water	48:57	0:0	4	p
op	48:58	0:0	4	->
water	48:60	0:0	4	samples_per_frame
water	48:78	0:0	4	)
op	48:80	0:0	4	*
water	48:82	0:0	4	4
water	48:83	0:0	4	;
water	49:8	0:0	4	p
op	49:9	0:0	4	->
water	49:11	0:0	4	buf_pre_corr
op	49:24	0:0	4	=
call	49:26	49:49	4	malloc
arg	49:34	49:49	5	bytes_pre_corr
water	49:34	0:0	6	bytes_pre_corr
water	49:50	0:0	4	;
water	50:8	0:0	4	p
op	50:9	0:0	4	->
water	50:11	0:0	4	table_window
op	50:24	0:0	4	=
call	50:26	50:49	4	malloc
arg	50:34	50:49	5	bytes_pre_corr
water	50:34	0:0	6	bytes_pre_corr
water	50:50	0:0	4	;
if	51:8	52:29	4	(! p -> buf_pre_corr || ! p -> table_window)
cond	51:12	51:38	5	! p -> buf_pre_corr || ! p -> table_window
op	51:12	0:0	6	!
water	51:14	0:0	6	p
op	51:15	0:0	6	->
water	51:17	0:0	6	buf_pre_corr
op	51:30	0:0	6	||
op	51:33	0:0	6	!
water	51:35	0:0	6	p
op	51:36	0:0	6	->
water	51:38	0:0	6	table_window
stmts	52:12	52:29	5	
return	52:12	52:29	6	VLC_ENOMEM
water	52:19	0:0	7	VLC_ENOMEM
decl	53:8	53:35	4	float	*pw
op	53:18	0:0	4	=
water	53:20	0:0	4	p
op	53:21	0:0	4	->
water	53:23	0:0	4	table_window
for	54:8	59:8	4	(i = 1 ;i < frames_overlap;i ++)
forinit	54:13	54:18	5	i = 1 ;
water	54:13	0:0	6	i
op	54:15	0:0	6	=
water	54:17	0:0	6	1
water	54:18	0:0	6	;
cond	54:20	54:22	5	i < frames_overlap
water	54:20	0:0	6	i
op	54:21	0:0	6	<
water	54:22	0:0	6	frames_overlap
forexpr	54:38	54:39	5	i ++
water	54:38	0:0	6	i
op	54:39	0:0	6	++
stmts	55:8	59:8	5	
water	55:8	0:0	6	{
decl	56:12	56:48	6	float	v
op	56:20	0:0	6	=
water	56:22	0:0	6	i
op	56:24	0:0	6	*
water	56:26	0:0	6	(
water	56:28	0:0	6	frames_overlap
op	56:43	0:0	6	-
water	56:45	0:0	6	i
water	56:47	0:0	6	)
for	57:12	58:25	6	(j = 0 ;j < p -> samples_per_frame;j ++)
forinit	57:17	57:22	7	j = 0 ;
water	57:17	0:0	8	j
op	57:19	0:0	8	=
water	57:21	0:0	8	0
water	57:22	0:0	8	;
cond	57:24	57:31	7	j < p -> samples_per_frame
water	57:24	0:0	8	j
op	57:26	0:0	8	<
water	57:28	0:0	8	p
op	57:29	0:0	8	->
water	57:31	0:0	8	samples_per_frame
forexpr	57:50	57:51	7	j ++
water	57:50	0:0	8	j
op	57:51	0:0	8	++
stmts	58:16	58:25	7	
op	58:16	0:0	8	*
water	58:17	0:0	8	pw
op	58:19	0:0	8	++
op	58:22	0:0	8	=
water	58:24	0:0	8	v
water	58:25	0:0	8	;
water	59:8	0:0	6	}
water	60:8	0:0	4	p
op	60:9	0:0	4	->
water	60:11	0:0	4	best_overlap_offset
op	60:31	0:0	4	=
water	60:33	0:0	4	best_overlap_offset_float
water	60:58	0:0	4	;
water	61:4	0:0	4	}
water	62:4	0:0	2	unsigned
water	62:13	0:0	2	new_size
op	62:22	0:0	2	=
water	62:24	0:0	2	(
water	62:26	0:0	2	p
op	62:27	0:0	2	->
water	62:29	0:0	2	frames_search
op	62:43	0:0	2	+
water	62:45	0:0	2	frames_stride
op	62:59	0:0	2	+
water	62:61	0:0	2	frames_overlap
water	62:76	0:0	2	)
op	62:78	0:0	2	*
water	62:80	0:0	2	p
op	62:81	0:0	2	->
water	62:83	0:0	2	bytes_per_frame
water	62:98	0:0	2	;
if	63:4	79:4	2	(p -> bytes_queued > new_size)
cond	63:8	63:26	3	p -> bytes_queued > new_size
water	63:8	0:0	4	p
op	63:9	0:0	4	->
water	63:11	0:0	4	bytes_queued
op	63:24	0:0	4	>
water	63:26	0:0	4	new_size
stmts	64:4	79:4	3	
water	64:4	0:0	4	{
if	65:8	69:8	4	(p -> bytes_to_slide > p -> bytes_queued)
cond	65:12	65:35	5	p -> bytes_to_slide > p -> bytes_queued
water	65:12	0:0	6	p
op	65:13	0:0	6	->
water	65:15	0:0	6	bytes_to_slide
op	65:30	0:0	6	>
water	65:32	0:0	6	p
op	65:33	0:0	6	->
water	65:35	0:0	6	bytes_queued
stmts	66:8	69:8	5	
water	66:8	0:0	6	{
water	67:10	0:0	6	p
op	67:11	0:0	6	->
water	67:13	0:0	6	bytes_to_slide
op	67:28	0:0	6	-=
water	67:31	0:0	6	p
op	67:32	0:0	6	->
water	67:34	0:0	6	bytes_queued
water	67:46	0:0	6	;
water	68:10	0:0	6	p
op	68:11	0:0	6	->
water	68:13	0:0	6	bytes_queued
op	68:29	0:0	6	=
water	68:31	0:0	6	0
water	68:32	0:0	6	;
water	69:8	0:0	6	}
else	70:8	78:8	4
stmts	71:8	78:8	5	
water	71:8	0:0	6	{
water	72:12	0:0	6	unsigned
water	72:21	0:0	6	new_queued
op	72:32	0:0	6	=
call	72:34	72:87	6	__MIN
arg	72:41	72:76	7	p->bytes_queued-p->bytes_to_slide
water	72:41	0:0	8	p
op	72:42	0:0	8	->
water	72:44	0:0	8	bytes_queued
op	72:57	0:0	8	-
water	72:59	0:0	8	p
op	72:60	0:0	8	->
water	72:62	0:0	8	bytes_to_slide
arg	72:78	72:87	7	new_size
water	72:78	0:0	8	new_size
water	72:88	0:0	6	;
call	73:12	75:32	6	memmove
arg	73:21	73:33	7	p->buf_queue
water	73:21	0:0	8	p
op	73:22	0:0	8	->
water	73:24	0:0	8	buf_queue
arg	74:21	74:64	7	p->buf_queue+p->bytes_queued-new_queued
water	74:21	0:0	8	p
op	74:22	0:0	8	->
water	74:24	0:0	8	buf_queue
op	74:34	0:0	8	+
water	74:36	0:0	8	p
op	74:37	0:0	8	->
water	74:39	0:0	8	bytes_queued
op	74:52	0:0	8	-
water	74:54	0:0	8	new_queued
arg	75:21	75:32	7	new_queued
water	75:21	0:0	8	new_queued
water	75:33	0:0	6	;
water	76:12	0:0	6	p
op	76:13	0:0	6	->
water	76:15	0:0	6	bytes_to_slide
op	76:30	0:0	6	=
water	76:32	0:0	6	0
water	76:33	0:0	6	;
water	77:12	0:0	6	p
op	77:13	0:0	6	->
water	77:15	0:0	6	bytes_queued
op	77:30	0:0	6	=
water	77:32	0:0	6	new_queued
water	77:42	0:0	6	;
water	78:8	0:0	6	}
water	79:4	0:0	4	}
water	80:4	0:0	2	p
op	80:5	0:0	2	->
water	80:7	0:0	2	bytes_queue_max
op	80:23	0:0	2	=
water	80:25	0:0	2	new_size
water	80:33	0:0	2	;
water	81:4	0:0	2	p
op	81:5	0:0	2	->
water	81:7	0:0	2	buf_queue
op	81:17	0:0	2	=
call	81:19	81:46	2	malloc
arg	81:27	81:46	3	p->bytes_queue_max
water	81:27	0:0	4	p
op	81:28	0:0	4	->
water	81:30	0:0	4	bytes_queue_max
water	81:47	0:0	2	;
if	82:4	83:25	2	(! p -> buf_queue)
cond	82:8	82:13	3	! p -> buf_queue
op	82:8	0:0	4	!
water	82:10	0:0	4	p
op	82:11	0:0	4	->
water	82:13	0:0	4	buf_queue
stmts	83:8	83:25	3	
return	83:8	83:25	4	VLC_ENOMEM
water	83:15	0:0	5	VLC_ENOMEM
water	84:4	0:0	2	p
op	84:5	0:0	2	->
water	84:7	0:0	2	bytes_stride_scaled
op	84:28	0:0	2	=
water	84:30	0:0	2	p
op	84:31	0:0	2	->
water	84:33	0:0	2	bytes_stride
op	84:46	0:0	2	*
water	84:48	0:0	2	p
op	84:49	0:0	2	->
water	84:51	0:0	2	scale
water	84:56	0:0	2	;
water	85:4	0:0	2	p
op	85:5	0:0	2	->
water	85:7	0:0	2	frames_stride_scaled
op	85:28	0:0	2	=
water	85:30	0:0	2	p
op	85:31	0:0	2	->
water	85:33	0:0	2	bytes_stride_scaled
op	85:53	0:0	2	/
water	85:55	0:0	2	p
op	85:56	0:0	2	->
water	85:58	0:0	2	bytes_per_frame
water	85:73	0:0	2	;
call	86:4	95:19	2	msg_Dbg
arg	86:13	86:33	3	VLC_OBJECT(p_filter)
call	86:13	86:32	4	VLC_OBJECT
arg	86:24	86:32	5	p_filter
water	86:24	0:0	6	p_filter
arg	87:13	87:111	3	"%.3f scale, %.3f stride_in, %i stride_out, %i standing, %i overlap, %i search, %i queue, %s mode"
water	87:13	0:0	4	"%.3f scale, %.3f stride_in, %i stride_out, %i standing, %i overlap, %i search, %i queue, %s mode"
arg	88:13	88:21	3	p->scale
water	88:13	0:0	4	p
op	88:14	0:0	4	->
water	88:16	0:0	4	scale
arg	89:13	89:36	3	p->frames_stride_scaled
water	89:13	0:0	4	p
op	89:14	0:0	4	->
water	89:16	0:0	4	frames_stride_scaled
arg	90:13	90:58	3	(int)(p->bytes_stride/p->bytes_per_frame)
call	90:13	90:57	4	(int)
arg	90:20	90:57	5	p->bytes_stride/p->bytes_per_frame
water	90:20	0:0	6	p
op	90:21	0:0	6	->
water	90:23	0:0	6	bytes_stride
op	90:36	0:0	6	/
water	90:38	0:0	6	p
op	90:39	0:0	6	->
water	90:41	0:0	6	bytes_per_frame
arg	91:13	91:60	3	(int)(p->bytes_standing/p->bytes_per_frame)
call	91:13	91:59	4	(int)
arg	91:20	91:59	5	p->bytes_standing/p->bytes_per_frame
water	91:20	0:0	6	p
op	91:21	0:0	6	->
water	91:23	0:0	6	bytes_standing
op	91:38	0:0	6	/
water	91:40	0:0	6	p
op	91:41	0:0	6	->
water	91:43	0:0	6	bytes_per_frame
arg	92:13	92:59	3	(int)(p->bytes_overlap/p->bytes_per_frame)
call	92:13	92:58	4	(int)
arg	92:20	92:58	5	p->bytes_overlap/p->bytes_per_frame
water	92:20	0:0	6	p
op	92:21	0:0	6	->
water	92:23	0:0	6	bytes_overlap
op	92:37	0:0	6	/
water	92:39	0:0	6	p
op	92:40	0:0	6	->
water	92:42	0:0	6	bytes_per_frame
arg	93:13	93:29	3	p->frames_search
water	93:13	0:0	4	p
op	93:14	0:0	4	->
water	93:16	0:0	4	frames_search
arg	94:13	94:61	3	(int)(p->bytes_queue_max/p->bytes_per_frame)
call	94:13	94:60	4	(int)
arg	94:20	94:60	5	p->bytes_queue_max/p->bytes_per_frame
water	94:20	0:0	6	p
op	94:21	0:0	6	->
water	94:23	0:0	6	bytes_queue_max
op	94:39	0:0	6	/
water	94:41	0:0	6	p
op	94:42	0:0	6	->
water	94:44	0:0	6	bytes_per_frame
arg	95:13	95:19	3	"fl32"
water	95:13	0:0	4	"fl32"
water	95:20	0:0	2	;
return	96:4	96:22	2	VLC_SUCCESS
water	96:11	0:0	3	VLC_SUCCESS

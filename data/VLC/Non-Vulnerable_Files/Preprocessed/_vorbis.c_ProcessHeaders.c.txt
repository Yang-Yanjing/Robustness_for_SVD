func	2:0	81:0	0	static int	ProcessHeaders
params	2:25	0:0	1	
param	2:27	2:44	2	decoder_t *	p_dec
stmnts	0:0	80:22	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	ogg_packet	oggpacket
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	pi_size
op	6:20	0:0	2	[
water	6:21	0:0	2	XIPH_MAX_HEADER_COUNT
op	6:42	0:0	2	]
water	6:43	0:0	2	;
decl	7:4	7:40	2	void	*pp_data[XIPH_MAX_HEADER_COUNT]
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	i_count
water	8:20	0:0	2	;
if	9:4	11:27	2	(xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra ))
cond	9:8	10:71	3	xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra )
call	9:8	10:71	4	xiph_SplitHeaders
arg	9:27	9:34	5	pi_size
water	9:27	0:0	6	pi_size
arg	9:36	9:43	5	pp_data
water	9:36	0:0	6	pp_data
arg	9:45	9:53	5	&i_count
op	9:45	0:0	6	&
water	9:46	0:0	6	i_count
arg	10:27	10:48	5	p_dec->fmt_in.i_extra
water	10:27	0:0	6	p_dec
op	10:32	0:0	6	->
water	10:34	0:0	6	fmt_in
op	10:40	0:0	6	.
water	10:41	0:0	6	i_extra
arg	10:50	10:71	5	p_dec->fmt_in.p_extra
water	10:50	0:0	6	p_dec
op	10:55	0:0	6	->
water	10:57	0:0	6	fmt_in
op	10:63	0:0	6	.
water	10:64	0:0	6	p_extra
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	13:27	2	(i_count < 3)
cond	12:8	12:18	3	i_count < 3
water	12:8	0:0	4	i_count
op	12:16	0:0	4	<
water	12:18	0:0	4	3
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	2	oggpacket
op	14:13	0:0	2	.
water	14:14	0:0	2	granulepos
op	14:25	0:0	2	=
op	14:27	0:0	2	-
water	14:28	0:0	2	1
water	14:29	0:0	2	;
water	15:4	0:0	2	oggpacket
op	15:13	0:0	2	.
water	15:14	0:0	2	e_o_s
op	15:20	0:0	2	=
water	15:22	0:0	2	0
water	15:23	0:0	2	;
water	16:4	0:0	2	oggpacket
op	16:13	0:0	2	.
water	16:14	0:0	2	packetno
op	16:23	0:0	2	=
water	16:25	0:0	2	0
water	16:26	0:0	2	;
water	18:4	0:0	2	oggpacket
op	18:13	0:0	2	.
water	18:14	0:0	2	b_o_s
op	18:21	0:0	2	=
water	18:23	0:0	2	1
water	18:24	0:0	2	;
water	19:4	0:0	2	oggpacket
op	19:13	0:0	2	.
water	19:14	0:0	2	bytes
op	19:21	0:0	2	=
water	19:23	0:0	2	pi_size
op	19:30	0:0	2	[
water	19:31	0:0	2	0
op	19:32	0:0	2	]
water	19:33	0:0	2	;
water	20:4	0:0	2	oggpacket
op	20:13	0:0	2	.
water	20:14	0:0	2	packet
op	20:21	0:0	2	=
water	20:23	0:0	2	pp_data
op	20:30	0:0	2	[
water	20:31	0:0	2	0
op	20:32	0:0	2	]
water	20:33	0:0	2	;
if	21:4	25:4	2	(vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0)
cond	21:8	21:74	3	vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0
call	21:8	21:70	4	vorbis_synthesis_headerin
arg	21:35	21:45	5	&p_sys->vi
op	21:35	0:0	6	&
water	21:36	0:0	6	p_sys
op	21:41	0:0	6	->
water	21:43	0:0	6	vi
arg	21:47	21:57	5	&p_sys->vc
op	21:47	0:0	6	&
water	21:48	0:0	6	p_sys
op	21:53	0:0	6	->
water	21:55	0:0	6	vc
arg	21:59	21:70	5	&oggpacket
op	21:59	0:0	6	&
water	21:60	0:0	6	oggpacket
op	21:72	0:0	4	<
water	21:74	0:0	4	0
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:75	4	msg_Err
arg	23:17	23:22	5	p_dec
water	23:17	0:0	6	p_dec
arg	23:24	23:75	5	"this bitstream does not contain Vorbis audio data"
water	23:24	0:0	6	"this bitstream does not contain Vorbis audio data"
water	23:76	0:0	4	;
return	24:8	24:27	4	VLC_EGENERIC
water	24:15	0:0	5	VLC_EGENERIC
water	25:4	0:0	4	}
water	27:4	0:0	2	p_dec
op	27:9	0:0	2	->
water	27:11	0:0	2	fmt_out
op	27:18	0:0	2	.
water	27:19	0:0	2	audio
op	27:24	0:0	2	.
water	27:25	0:0	2	i_rate
op	27:36	0:0	2	=
water	27:38	0:0	2	p_sys
op	27:43	0:0	2	->
water	27:45	0:0	2	vi
op	27:47	0:0	2	.
water	27:48	0:0	2	rate
water	27:52	0:0	2	;
water	28:4	0:0	2	p_dec
op	28:9	0:0	2	->
water	28:11	0:0	2	fmt_out
op	28:18	0:0	2	.
water	28:19	0:0	2	audio
op	28:24	0:0	2	.
water	28:25	0:0	2	i_channels
op	28:36	0:0	2	=
water	28:38	0:0	2	p_sys
op	28:43	0:0	2	->
water	28:45	0:0	2	vi
op	28:47	0:0	2	.
water	28:48	0:0	2	channels
water	28:56	0:0	2	;
if	29:4	35:4	2	(p_dec -> fmt_out . audio . i_channels >=ARRAY_SIZE (pi_channels_maps ))
cond	29:8	29:70	3	p_dec -> fmt_out . audio . i_channels >=ARRAY_SIZE (pi_channels_maps )
water	29:8	0:0	4	p_dec
op	29:13	0:0	4	->
water	29:15	0:0	4	fmt_out
op	29:22	0:0	4	.
water	29:23	0:0	4	audio
op	29:28	0:0	4	.
water	29:29	0:0	4	i_channels
op	29:40	0:0	4	>=
call	29:43	29:70	4	ARRAY_SIZE
arg	29:54	29:70	5	pi_channels_maps
water	29:54	0:0	6	pi_channels_maps
stmts	30:4	35:4	3	
water	30:4	0:0	4	{
call	31:8	33:49	4	msg_Err
arg	31:17	31:22	5	p_dec
water	31:17	0:0	6	p_dec
arg	31:24	31:64	5	"invalid number of channels (1-%zu): %i"
water	31:24	0:0	6	"invalid number of channels (1-%zu): %i"
arg	32:17	32:45	5	ARRAY_SIZE(pi_channels_maps)
call	32:17	32:44	6	ARRAY_SIZE
arg	32:28	32:44	7	pi_channels_maps
water	32:28	0:0	8	pi_channels_maps
arg	33:17	33:49	5	p_dec->fmt_out.audio.i_channels
water	33:17	0:0	6	p_dec
op	33:22	0:0	6	->
water	33:24	0:0	6	fmt_out
op	33:31	0:0	6	.
water	33:32	0:0	6	audio
op	33:37	0:0	6	.
water	33:38	0:0	6	i_channels
water	33:50	0:0	4	;
return	34:8	34:27	4	VLC_EGENERIC
water	34:15	0:0	5	VLC_EGENERIC
water	35:4	0:0	4	}
water	36:4	0:0	2	p_dec
op	36:9	0:0	2	->
water	36:11	0:0	2	fmt_out
op	36:18	0:0	2	.
water	36:19	0:0	2	audio
op	36:24	0:0	2	.
water	36:25	0:0	2	i_physical_channels
op	36:45	0:0	2	=
water	37:8	0:0	2	p_dec
op	37:13	0:0	2	->
water	37:15	0:0	2	fmt_out
op	37:22	0:0	2	.
water	37:23	0:0	2	audio
op	37:28	0:0	2	.
water	37:29	0:0	2	i_original_channels
op	37:49	0:0	2	=
water	38:12	0:0	2	pi_channels_maps
op	38:28	0:0	2	[
water	38:29	0:0	2	p_sys
op	38:34	0:0	2	->
water	38:36	0:0	2	vi
op	38:38	0:0	2	.
water	38:39	0:0	2	channels
op	38:47	0:0	2	]
water	38:48	0:0	2	;
water	39:4	0:0	2	p_dec
op	39:9	0:0	2	->
water	39:11	0:0	2	fmt_out
op	39:18	0:0	2	.
water	39:19	0:0	2	i_bitrate
op	39:29	0:0	2	=
call	39:31	39:77	2	__MAX
arg	39:38	39:39	3	0
water	39:38	0:0	4	0
arg	39:41	39:77	3	(int32_t)p_sys->vi.bitrate_nominal
water	39:41	0:0	4	(
water	39:42	0:0	4	int32_t
water	39:49	0:0	4	)
water	39:51	0:0	4	p_sys
op	39:56	0:0	4	->
water	39:58	0:0	4	vi
op	39:60	0:0	4	.
water	39:61	0:0	4	bitrate_nominal
water	39:78	0:0	2	;
call	40:4	40:51	2	date_Init
arg	40:15	40:31	3	&p_sys->end_date
op	40:15	0:0	4	&
water	40:16	0:0	4	p_sys
op	40:21	0:0	4	->
water	40:23	0:0	4	end_date
arg	40:33	40:47	3	p_sys->vi.rate
water	40:33	0:0	4	p_sys
op	40:38	0:0	4	->
water	40:40	0:0	4	vi
op	40:42	0:0	4	.
water	40:43	0:0	4	rate
arg	40:49	40:51	3	1
water	40:49	0:0	4	1
water	40:52	0:0	2	;
call	41:4	42:74	2	msg_Dbg
arg	41:13	41:18	3	p_dec
water	41:13	0:0	4	p_dec
arg	41:20	41:60	3	"channels:%d samplerate:%ld bitrate:%ud"
water	41:20	0:0	4	"channels:%d samplerate:%ld bitrate:%ud"
arg	42:13	42:31	3	p_sys->vi.channels
water	42:13	0:0	4	p_sys
op	42:18	0:0	4	->
water	42:20	0:0	4	vi
op	42:22	0:0	4	.
water	42:23	0:0	4	channels
arg	42:33	42:47	3	p_sys->vi.rate
water	42:33	0:0	4	p_sys
op	42:38	0:0	4	->
water	42:40	0:0	4	vi
op	42:42	0:0	4	.
water	42:43	0:0	4	rate
arg	42:49	42:74	3	p_dec->fmt_out.i_bitrate
water	42:49	0:0	4	p_dec
op	42:54	0:0	4	->
water	42:56	0:0	4	fmt_out
op	42:63	0:0	4	.
water	42:64	0:0	4	i_bitrate
water	42:75	0:0	2	;
water	44:4	0:0	2	oggpacket
op	44:13	0:0	2	.
water	44:14	0:0	2	b_o_s
op	44:21	0:0	2	=
water	44:23	0:0	2	0
water	44:24	0:0	2	;
water	45:4	0:0	2	oggpacket
op	45:13	0:0	2	.
water	45:14	0:0	2	bytes
op	45:21	0:0	2	=
water	45:23	0:0	2	pi_size
op	45:30	0:0	2	[
water	45:31	0:0	2	1
op	45:32	0:0	2	]
water	45:33	0:0	2	;
water	46:4	0:0	2	oggpacket
op	46:13	0:0	2	.
water	46:14	0:0	2	packet
op	46:21	0:0	2	=
water	46:23	0:0	2	pp_data
op	46:30	0:0	2	[
water	46:31	0:0	2	1
op	46:32	0:0	2	]
water	46:33	0:0	2	;
if	47:4	51:4	2	(vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0)
cond	47:8	47:74	3	vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0
call	47:8	47:70	4	vorbis_synthesis_headerin
arg	47:35	47:45	5	&p_sys->vi
op	47:35	0:0	6	&
water	47:36	0:0	6	p_sys
op	47:41	0:0	6	->
water	47:43	0:0	6	vi
arg	47:47	47:57	5	&p_sys->vc
op	47:47	0:0	6	&
water	47:48	0:0	6	p_sys
op	47:53	0:0	6	->
water	47:55	0:0	6	vc
arg	47:59	47:70	5	&oggpacket
op	47:59	0:0	6	&
water	47:60	0:0	6	oggpacket
op	47:72	0:0	4	<
water	47:74	0:0	4	0
stmts	48:4	51:4	3	
water	48:4	0:0	4	{
call	49:8	49:57	4	msg_Err
arg	49:17	49:22	5	p_dec
water	49:17	0:0	6	p_dec
arg	49:24	49:57	5	"2nd Vorbis header is corrupted"
water	49:24	0:0	6	"2nd Vorbis header is corrupted"
water	49:58	0:0	4	;
return	50:8	50:27	4	VLC_EGENERIC
water	50:15	0:0	5	VLC_EGENERIC
water	51:4	0:0	4	}
call	52:4	52:31	2	ParseVorbisComments
arg	52:25	52:31	3	p_dec
water	52:25	0:0	4	p_dec
water	52:32	0:0	2	;
water	56:4	0:0	2	oggpacket
op	56:13	0:0	2	.
water	56:14	0:0	2	b_o_s
op	56:21	0:0	2	=
water	56:23	0:0	2	0
water	56:24	0:0	2	;
water	57:4	0:0	2	oggpacket
op	57:13	0:0	2	.
water	57:14	0:0	2	bytes
op	57:21	0:0	2	=
water	57:23	0:0	2	pi_size
op	57:30	0:0	2	[
water	57:31	0:0	2	2
op	57:32	0:0	2	]
water	57:33	0:0	2	;
water	58:4	0:0	2	oggpacket
op	58:13	0:0	2	.
water	58:14	0:0	2	packet
op	58:21	0:0	2	=
water	58:23	0:0	2	pp_data
op	58:30	0:0	2	[
water	58:31	0:0	2	2
op	58:32	0:0	2	]
water	58:33	0:0	2	;
if	59:4	63:4	2	(vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0)
cond	59:8	59:74	3	vorbis_synthesis_headerin (& p_sys -> vi ,& p_sys -> vc ,& oggpacket ) < 0
call	59:8	59:70	4	vorbis_synthesis_headerin
arg	59:35	59:45	5	&p_sys->vi
op	59:35	0:0	6	&
water	59:36	0:0	6	p_sys
op	59:41	0:0	6	->
water	59:43	0:0	6	vi
arg	59:47	59:57	5	&p_sys->vc
op	59:47	0:0	6	&
water	59:48	0:0	6	p_sys
op	59:53	0:0	6	->
water	59:55	0:0	6	vc
arg	59:59	59:70	5	&oggpacket
op	59:59	0:0	6	&
water	59:60	0:0	6	oggpacket
op	59:72	0:0	4	<
water	59:74	0:0	4	0
stmts	60:4	63:4	3	
water	60:4	0:0	4	{
call	61:8	61:57	4	msg_Err
arg	61:17	61:22	5	p_dec
water	61:17	0:0	6	p_dec
arg	61:24	61:57	5	"3rd Vorbis header is corrupted"
water	61:24	0:0	6	"3rd Vorbis header is corrupted"
water	61:58	0:0	4	;
return	62:8	62:27	4	VLC_EGENERIC
water	62:15	0:0	5	VLC_EGENERIC
water	63:4	0:0	4	}
if	64:4	69:4	2	(! p_sys -> b_packetizer)
cond	64:8	64:16	3	! p_sys -> b_packetizer
op	64:8	0:0	4	!
water	64:9	0:0	4	p_sys
op	64:14	0:0	4	->
water	64:16	0:0	4	b_packetizer
stmts	65:4	69:4	3	
water	65:4	0:0	4	{
call	67:8	67:54	4	vorbis_synthesis_init
arg	67:31	67:41	5	&p_sys->vd
op	67:31	0:0	6	&
water	67:32	0:0	6	p_sys
op	67:37	0:0	6	->
water	67:39	0:0	6	vd
arg	67:43	67:54	5	&p_sys->vi
op	67:43	0:0	6	&
water	67:44	0:0	6	p_sys
op	67:49	0:0	6	->
water	67:51	0:0	6	vi
water	67:55	0:0	4	;
call	68:8	68:50	4	vorbis_block_init
arg	68:27	68:37	5	&p_sys->vd
op	68:27	0:0	6	&
water	68:28	0:0	6	p_sys
op	68:33	0:0	6	->
water	68:35	0:0	6	vd
arg	68:39	68:50	5	&p_sys->vb
op	68:39	0:0	6	&
water	68:40	0:0	6	p_sys
op	68:45	0:0	6	->
water	68:47	0:0	6	vb
water	68:51	0:0	4	;
water	69:4	0:0	4	}
else	70:4	77:4	2
stmts	71:4	77:4	3	
water	71:4	0:0	4	{
water	72:8	0:0	4	p_dec
op	72:13	0:0	4	->
water	72:15	0:0	4	fmt_out
op	72:22	0:0	4	.
water	72:23	0:0	4	i_extra
op	72:31	0:0	4	=
water	72:33	0:0	4	p_dec
op	72:38	0:0	4	->
water	72:40	0:0	4	fmt_in
op	72:46	0:0	4	.
water	72:47	0:0	4	i_extra
water	72:54	0:0	4	;
water	73:8	0:0	4	p_dec
op	73:13	0:0	4	->
water	73:15	0:0	4	fmt_out
op	73:22	0:0	4	.
water	73:23	0:0	4	p_extra
op	73:31	0:0	4	=
call	73:33	74:66	4	xrealloc
arg	73:43	73:65	5	p_dec->fmt_out.p_extra
water	73:43	0:0	6	p_dec
op	73:48	0:0	6	->
water	73:50	0:0	6	fmt_out
op	73:57	0:0	6	.
water	73:58	0:0	6	p_extra
arg	74:43	74:66	5	p_dec->fmt_out.i_extra
water	74:43	0:0	6	p_dec
op	74:48	0:0	6	->
water	74:50	0:0	6	fmt_out
op	74:57	0:0	6	.
water	74:58	0:0	6	i_extra
water	74:67	0:0	4	;
call	75:8	76:62	4	memcpy
arg	75:16	75:38	5	p_dec->fmt_out.p_extra
water	75:16	0:0	6	p_dec
op	75:21	0:0	6	->
water	75:23	0:0	6	fmt_out
op	75:30	0:0	6	.
water	75:31	0:0	6	p_extra
arg	76:16	76:37	5	p_dec->fmt_in.p_extra
water	76:16	0:0	6	p_dec
op	76:21	0:0	6	->
water	76:23	0:0	6	fmt_in
op	76:29	0:0	6	.
water	76:30	0:0	6	p_extra
arg	76:39	76:62	5	p_dec->fmt_out.i_extra
water	76:39	0:0	6	p_dec
op	76:44	0:0	6	->
water	76:46	0:0	6	fmt_out
op	76:53	0:0	6	.
water	76:54	0:0	6	i_extra
water	76:63	0:0	4	;
water	77:4	0:0	4	}
call	78:4	79:58	2	ConfigureChannelOrder
arg	78:26	78:46	3	p_sys->pi_chan_table
water	78:26	0:0	4	p_sys
op	78:31	0:0	4	->
water	78:33	0:0	4	pi_chan_table
arg	78:48	78:66	3	p_sys->vi.channels
water	78:48	0:0	4	p_sys
op	78:53	0:0	4	->
water	78:55	0:0	4	vi
op	78:57	0:0	4	.
water	78:58	0:0	4	channels
arg	79:12	79:52	3	p_dec->fmt_out.audio.i_physical_channels
water	79:12	0:0	4	p_dec
op	79:17	0:0	4	->
water	79:19	0:0	4	fmt_out
op	79:26	0:0	4	.
water	79:27	0:0	4	audio
op	79:32	0:0	4	.
water	79:33	0:0	4	i_physical_channels
arg	79:54	79:58	3	true
water	79:54	0:0	4	true
water	79:59	0:0	2	;
return	80:4	80:22	2	VLC_SUCCESS
water	80:11	0:0	3	VLC_SUCCESS

func	2:0	34:0	0	static char *	unescapeXml
params	2:24	0:0	1	
param	2:26	2:47	2	const char *	psz_text
stmnts	0:0	33:18	1	
decl	4:4	4:52	2	char	*psz_ret
op	4:18	0:0	2	=
call	4:20	4:51	3	malloc
arg	4:28	4:51	4	strlen(psz_text)+1
call	4:28	4:45	5	strlen
arg	4:36	4:45	6	psz_text
water	4:36	0:0	7	psz_text
op	4:47	0:0	5	+
water	4:49	0:0	5	1
if	5:4	5:42	2	(unlikely (! psz_ret ))
cond	5:8	5:27	3	unlikely (! psz_ret )
call	5:8	5:27	4	unlikely
arg	5:18	5:27	5	!psz_ret
op	5:18	0:0	6	!
water	5:19	0:0	6	psz_ret
stmts	5:31	5:42	3	
return	5:31	5:42	4	NULL
water	5:38	0:0	5	NULL
decl	6:4	6:27	2	char	*psz_tmp
op	6:18	0:0	2	=
water	6:20	0:0	2	psz_ret
for	7:4	31:4	2	( char * psz_iter = ( char * ) psz_text ;* psz_iter;++ psz_iter , ++ psz_tmp)
forinit	0:0	7:42	3	 char * psz_iter = ( char * ) psz_text ;
decl	7:9	7:42	4	char	*psz_iter
op	7:24	0:0	4	=
water	7:26	0:0	4	(
water	7:27	0:0	4	char
op	7:31	0:0	4	*
water	7:32	0:0	4	)
water	7:34	0:0	4	psz_text
cond	7:44	7:45	3	* psz_iter
op	7:44	0:0	4	*
water	7:45	0:0	4	psz_iter
forexpr	7:55	7:69	3	++ psz_iter , ++ psz_tmp
op	7:55	0:0	4	++
water	7:57	0:0	4	psz_iter
water	7:65	0:0	4	,
op	7:67	0:0	4	++
water	7:69	0:0	4	psz_tmp
stmts	8:4	31:4	3	
water	8:4	0:0	4	{
if	9:8	20:8	4	(* psz_iter == '?')
cond	9:12	9:25	5	* psz_iter == '?'
op	9:12	0:0	6	*
water	9:13	0:0	6	psz_iter
op	9:22	0:0	6	==
water	9:25	0:0	6	'?'
stmts	10:8	20:8	5	
water	10:8	0:0	6	{
decl	11:12	11:23	6	int	i_value
if	12:12	17:12	6	(!sscanf (++ psz_iter ,"%02x" ,& i_value ))
cond	12:16	12:54	7	!sscanf (++ psz_iter ,"%02x" ,& i_value )
op	12:16	0:0	8	!
call	12:17	12:54	8	sscanf
arg	12:25	12:35	9	++psz_iter
op	12:25	0:0	10	++
water	12:27	0:0	10	psz_iter
arg	12:37	12:43	9	"%02x"
water	12:37	0:0	10	"%02x"
arg	12:45	12:54	9	&i_value
op	12:45	0:0	10	&
water	12:46	0:0	10	i_value
stmts	13:12	17:12	7	
water	13:12	0:0	8	{
call	15:16	15:30	8	free
arg	15:22	15:30	9	psz_ret
water	15:22	0:0	10	psz_ret
water	15:31	0:0	8	;
return	16:16	16:27	8	NULL
water	16:23	0:0	9	NULL
water	17:12	0:0	8	}
op	18:12	0:0	6	*
water	18:13	0:0	6	psz_tmp
op	18:21	0:0	6	=
water	18:23	0:0	6	(
water	18:24	0:0	6	char
water	18:28	0:0	6	)
water	18:30	0:0	6	i_value
water	18:37	0:0	6	;
water	19:12	0:0	6	psz_iter
op	19:20	0:0	6	++
water	19:22	0:0	6	;
water	20:8	0:0	6	}
else	21:8	24:8	4
stmts	21:13	24:8	5	
if	21:13	24:8	6	(isAllowedChar (* psz_iter ))
cond	21:17	21:42	7	isAllowedChar (* psz_iter )
call	21:17	21:42	8	isAllowedChar
arg	21:32	21:42	9	*psz_iter
op	21:32	0:0	10	*
water	21:33	0:0	10	psz_iter
stmts	22:8	24:8	7	
water	22:8	0:0	8	{
op	23:12	0:0	8	*
water	23:13	0:0	8	psz_tmp
op	23:21	0:0	8	=
op	23:23	0:0	8	*
water	23:24	0:0	8	psz_iter
water	23:32	0:0	8	;
water	24:8	0:0	8	}
else	25:8	30:8	4
stmts	26:8	30:8	5	
water	26:8	0:0	6	{
call	28:12	28:26	6	free
arg	28:18	28:26	7	psz_ret
water	28:18	0:0	8	psz_ret
water	28:27	0:0	6	;
return	29:12	29:23	6	NULL
water	29:19	0:0	7	NULL
water	30:8	0:0	6	}
water	31:4	0:0	4	}
op	32:4	0:0	2	*
water	32:5	0:0	2	psz_tmp
op	32:13	0:0	2	=
water	32:15	0:0	2	'\0'
water	32:19	0:0	2	;
return	33:4	33:18	2	psz_ret
water	33:11	0:0	3	psz_ret

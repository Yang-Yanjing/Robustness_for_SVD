func	2:0	19:0	0	static int	OpenFilter
params	2:21	0:0	1	
param	2:23	2:44	2	vlc_object_t *	p_this
stmnts	0:0	18:16	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:23	2	filter_sys_t	*p_sys
decl	6:4	6:13	2	int	i_ret
if	7:4	9:27	2	(p_filter -> fmt_in . i_codec != VLC_CODEC_DTS || p_filter -> fmt_out . audio . i_format != VLC_CODEC_FL32)
cond	7:8	8:44	3	p_filter -> fmt_in . i_codec != VLC_CODEC_DTS || p_filter -> fmt_out . audio . i_format != VLC_CODEC_FL32
water	7:8	0:0	4	p_filter
op	7:16	0:0	4	->
water	7:18	0:0	4	fmt_in
op	7:24	0:0	4	.
water	7:25	0:0	4	i_codec
op	7:33	0:0	4	!=
water	7:36	0:0	4	VLC_CODEC_DTS
op	8:5	0:0	4	||
water	8:8	0:0	4	p_filter
op	8:16	0:0	4	->
water	8:18	0:0	4	fmt_out
op	8:25	0:0	4	.
water	8:26	0:0	4	audio
op	8:31	0:0	4	.
water	8:32	0:0	4	i_format
op	8:41	0:0	4	!=
water	8:44	0:0	4	VLC_CODEC_FL32
stmts	9:8	9:27	3	
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
water	11:4	0:0	2	p_sys
op	11:10	0:0	2	=
water	11:12	0:0	2	p_filter
op	11:20	0:0	2	->
water	11:22	0:0	2	p_sys
op	11:28	0:0	2	=
call	11:30	11:59	2	malloc
arg	11:38	11:59	3	sizeof(filter_sys_t)
op	11:38	0:0	4	sizeof
water	11:44	0:0	4	(
water	11:45	0:0	4	filter_sys_t
water	11:57	0:0	4	)
water	11:60	0:0	2	;
if	12:4	13:25	2	(p_sys == NULL)
cond	12:8	12:17	3	p_sys == NULL
water	12:8	0:0	4	p_sys
op	12:14	0:0	4	==
water	12:17	0:0	4	NULL
stmts	13:8	13:25	3	
return	13:8	13:25	4	VLC_ENOMEM
water	13:15	0:0	5	VLC_ENOMEM
water	14:4	0:0	2	i_ret
op	14:10	0:0	2	=
call	14:12	15:68	2	Open
arg	14:18	14:38	3	VLC_OBJECT(p_filter)
call	14:18	14:37	4	VLC_OBJECT
arg	14:29	14:37	5	p_filter
water	14:29	0:0	6	p_filter
arg	14:40	14:45	3	p_sys
water	14:40	0:0	4	p_sys
arg	15:18	15:41	3	&p_filter->fmt_in.audio
op	15:18	0:0	4	&
water	15:19	0:0	4	p_filter
op	15:27	0:0	4	->
water	15:29	0:0	4	fmt_in
op	15:35	0:0	4	.
water	15:36	0:0	4	audio
arg	15:43	15:68	3	&p_filter->fmt_out.audio
op	15:43	0:0	4	&
water	15:44	0:0	4	p_filter
op	15:52	0:0	4	->
water	15:54	0:0	4	fmt_out
op	15:61	0:0	4	.
water	15:62	0:0	4	audio
water	15:69	0:0	2	;
water	16:4	0:0	2	p_filter
op	16:12	0:0	2	->
water	16:14	0:0	2	pf_audio_filter
op	16:30	0:0	2	=
water	16:32	0:0	2	Convert
water	16:39	0:0	2	;
water	17:4	0:0	2	p_filter
op	17:12	0:0	2	->
water	17:14	0:0	2	fmt_out
op	17:21	0:0	2	.
water	17:22	0:0	2	audio
op	17:27	0:0	2	.
water	17:28	0:0	2	i_rate
op	17:35	0:0	2	=
water	17:37	0:0	2	p_filter
op	17:45	0:0	2	->
water	17:47	0:0	2	fmt_in
op	17:53	0:0	2	.
water	17:54	0:0	2	audio
op	17:59	0:0	2	.
water	17:60	0:0	2	i_rate
water	17:66	0:0	2	;
return	18:4	18:16	2	i_ret
water	18:11	0:0	3	i_ret

func	2:0	109:0	0	static int	Init
params	2:15	0:0	1	
param	2:17	2:36	2	filter_t *	p_filter
stmnts	0:0	108:22	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:58	2	const video_format_t	*p_fmti
op	5:33	0:0	2	=
op	5:35	0:0	2	&
water	5:36	0:0	2	p_filter
op	5:44	0:0	2	->
water	5:46	0:0	2	fmt_in
op	5:52	0:0	2	.
water	5:53	0:0	2	video
decl	6:4	6:59	2	video_format_t	*p_fmto
op	6:33	0:0	2	=
op	6:35	0:0	2	&
water	6:36	0:0	2	p_filter
op	6:44	0:0	2	->
water	6:46	0:0	2	fmt_out
op	6:53	0:0	2	.
water	6:54	0:0	2	video
if	7:4	8:27	2	(p_fmti -> orientation != p_fmto -> orientation)
cond	7:8	7:39	3	p_fmti -> orientation != p_fmto -> orientation
water	7:8	0:0	4	p_fmti
op	7:14	0:0	4	->
water	7:16	0:0	4	orientation
op	7:28	0:0	4	!=
water	7:31	0:0	4	p_fmto
op	7:37	0:0	4	->
water	7:39	0:0	4	orientation
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	9:4	14:4	2	(video_format_IsSimilar (p_fmti ,& p_sys -> fmt_in ) &&video_format_IsSimilar (p_fmto ,& p_sys -> fmt_out ) && p_sys -> ctx)
cond	9:8	11:15	3	video_format_IsSimilar (p_fmti ,& p_sys -> fmt_in ) &&video_format_IsSimilar (p_fmto ,& p_sys -> fmt_out ) && p_sys -> ctx
call	9:8	9:55	4	video_format_IsSimilar
arg	9:32	9:38	5	p_fmti
water	9:32	0:0	6	p_fmti
arg	9:40	9:55	5	&p_sys->fmt_in
op	9:40	0:0	6	&
water	9:41	0:0	6	p_sys
op	9:46	0:0	6	->
water	9:48	0:0	6	fmt_in
op	9:57	0:0	4	&&
call	10:8	10:56	4	video_format_IsSimilar
arg	10:32	10:38	5	p_fmto
water	10:32	0:0	6	p_fmto
arg	10:40	10:56	5	&p_sys->fmt_out
op	10:40	0:0	6	&
water	10:41	0:0	6	p_sys
op	10:46	0:0	6	->
water	10:48	0:0	6	fmt_out
op	10:58	0:0	4	&&
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	ctx
stmts	12:4	14:4	3	
water	12:4	0:0	4	{
return	13:8	13:26	4	VLC_SUCCESS
water	13:15	0:0	5	VLC_SUCCESS
water	14:4	0:0	4	}
call	15:4	15:20	2	Clean
arg	15:11	15:20	3	p_filter
water	15:11	0:0	4	p_filter
water	15:21	0:0	2	;
decl	17:4	17:27	2	ScalerConfiguration	cfg
if	18:4	22:4	2	(GetParameters (& cfg ,p_fmti ,p_fmto ,p_sys -> i_sws_flags ))
cond	18:8	18:64	3	GetParameters (& cfg ,p_fmti ,p_fmto ,p_sys -> i_sws_flags )
call	18:8	18:64	4	GetParameters
arg	18:23	18:27	5	&cfg
op	18:23	0:0	6	&
water	18:24	0:0	6	cfg
arg	18:29	18:35	5	p_fmti
water	18:29	0:0	6	p_fmti
arg	18:37	18:43	5	p_fmto
water	18:37	0:0	6	p_fmto
arg	18:45	18:64	5	p_sys->i_sws_flags
water	18:45	0:0	6	p_sys
op	18:50	0:0	6	->
water	18:52	0:0	6	i_sws_flags
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:50	4	msg_Err
arg	20:17	20:25	5	p_filter
water	20:17	0:0	6	p_filter
arg	20:27	20:50	5	"format not supported"
water	20:27	0:0	6	"format not supported"
water	20:51	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
if	23:4	30:4	2	(p_fmti -> i_visible_width <= 0 || p_fmti -> i_visible_height <= 0 || p_fmto -> i_visible_width <= 0 || p_fmto -> i_visible_height <= 0)
cond	23:8	24:68	3	p_fmti -> i_visible_width <= 0 || p_fmti -> i_visible_height <= 0 || p_fmto -> i_visible_width <= 0 || p_fmto -> i_visible_height <= 0
water	23:8	0:0	4	p_fmti
op	23:14	0:0	4	->
water	23:16	0:0	4	i_visible_width
op	23:32	0:0	4	<=
water	23:35	0:0	4	0
op	23:37	0:0	4	||
water	23:40	0:0	4	p_fmti
op	23:46	0:0	4	->
water	23:48	0:0	4	i_visible_height
op	23:65	0:0	4	<=
water	23:68	0:0	4	0
op	23:70	0:0	4	||
water	24:8	0:0	4	p_fmto
op	24:14	0:0	4	->
water	24:16	0:0	4	i_visible_width
op	24:32	0:0	4	<=
water	24:35	0:0	4	0
op	24:37	0:0	4	||
water	24:40	0:0	4	p_fmto
op	24:46	0:0	4	->
water	24:48	0:0	4	i_visible_height
op	24:65	0:0	4	<=
water	24:68	0:0	4	0
stmts	25:4	30:4	3	
water	25:4	0:0	4	{
call	26:8	28:66	4	msg_Err
arg	26:17	26:25	5	p_filter
water	26:17	0:0	6	p_filter
arg	26:27	26:60	5	"invalid scaling: %ix%i -> %ix%i"
water	26:27	0:0	6	"invalid scaling: %ix%i -> %ix%i"
arg	27:17	27:40	5	p_fmti->i_visible_width
water	27:17	0:0	6	p_fmti
op	27:23	0:0	6	->
water	27:25	0:0	6	i_visible_width
arg	27:42	27:66	5	p_fmti->i_visible_height
water	27:42	0:0	6	p_fmti
op	27:48	0:0	6	->
water	27:50	0:0	6	i_visible_height
arg	28:17	28:40	5	p_fmto->i_visible_width
water	28:17	0:0	6	p_fmto
op	28:23	0:0	6	->
water	28:25	0:0	6	i_visible_width
arg	28:42	28:66	5	p_fmto->i_visible_height
water	28:42	0:0	6	p_fmto
op	28:48	0:0	6	->
water	28:50	0:0	6	i_visible_height
water	28:67	0:0	4	;
return	29:8	29:27	4	VLC_EGENERIC
water	29:15	0:0	5	VLC_EGENERIC
water	30:4	0:0	4	}
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	desc_in
op	31:19	0:0	2	=
call	31:21	31:71	2	vlc_fourcc_GetChromaDescription
arg	31:54	31:71	3	p_fmti->i_chroma
water	31:54	0:0	4	p_fmti
op	31:60	0:0	4	->
water	31:62	0:0	4	i_chroma
water	31:72	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	desc_out
op	32:20	0:0	2	=
call	32:22	32:72	2	vlc_fourcc_GetChromaDescription
arg	32:55	32:72	3	p_fmto->i_chroma
water	32:55	0:0	4	p_fmto
op	32:61	0:0	4	->
water	32:63	0:0	4	i_chroma
water	32:73	0:0	2	;
if	33:4	34:27	2	(p_sys -> desc_in == NULL || p_sys -> desc_out == NULL)
cond	33:8	33:53	3	p_sys -> desc_in == NULL || p_sys -> desc_out == NULL
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	desc_in
op	33:23	0:0	4	==
water	33:26	0:0	4	NULL
op	33:31	0:0	4	||
water	33:34	0:0	4	p_sys
op	33:39	0:0	4	->
water	33:41	0:0	4	desc_out
op	33:50	0:0	4	==
water	33:53	0:0	4	NULL
stmts	34:8	34:27	3	
return	34:8	34:27	4	VLC_EGENERIC
water	34:15	0:0	5	VLC_EGENERIC
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	i_extend_factor
op	36:27	0:0	2	=
water	36:29	0:0	2	1
water	36:30	0:0	2	;
while	37:4	38:32	2	(__MIN (p_fmti -> i_visible_width ,p_fmto -> i_visible_width ) * p_sys -> i_extend_factor < MINIMUM_WIDTH)
cond	37:11	37:96	3	__MIN (p_fmti -> i_visible_width ,p_fmto -> i_visible_width ) * p_sys -> i_extend_factor < MINIMUM_WIDTH
call	37:11	37:67	4	__MIN
arg	37:18	37:41	5	p_fmti->i_visible_width
water	37:18	0:0	6	p_fmti
op	37:24	0:0	6	->
water	37:26	0:0	6	i_visible_width
arg	37:43	37:67	5	p_fmto->i_visible_width
water	37:43	0:0	6	p_fmto
op	37:49	0:0	6	->
water	37:51	0:0	6	i_visible_width
op	37:69	0:0	4	*
water	37:71	0:0	4	p_sys
op	37:76	0:0	4	->
water	37:78	0:0	4	i_extend_factor
op	37:94	0:0	4	<
water	37:96	0:0	4	MINIMUM_WIDTH
stmts	38:8	38:32	3	
water	38:8	0:0	4	p_sys
op	38:13	0:0	4	->
water	38:15	0:0	4	i_extend_factor
op	38:30	0:0	4	++
water	38:32	0:0	4	;
water	39:4	0:0	2	const
water	39:10	0:0	2	unsigned
water	39:19	0:0	2	i_fmti_visible_width
op	39:40	0:0	2	=
water	39:42	0:0	2	p_fmti
op	39:48	0:0	2	->
water	39:50	0:0	2	i_visible_width
op	39:66	0:0	2	*
water	39:68	0:0	2	p_sys
op	39:73	0:0	2	->
water	39:75	0:0	2	i_extend_factor
water	39:90	0:0	2	;
water	40:4	0:0	2	const
water	40:10	0:0	2	unsigned
water	40:19	0:0	2	i_fmto_visible_width
op	40:40	0:0	2	=
water	40:42	0:0	2	p_fmto
op	40:48	0:0	2	->
water	40:50	0:0	2	i_visible_width
op	40:66	0:0	2	*
water	40:68	0:0	2	p_sys
op	40:73	0:0	2	->
water	40:75	0:0	2	i_extend_factor
water	40:90	0:0	2	;
for	41:4	54:4	2	( int n = 0 ;n < ( cfg . b_has_a ? 2 : 1 );n ++)
forinit	0:0	41:18	3	 int n = 0 ;
decl	41:9	41:18	4	int	n
op	41:15	0:0	4	=
water	41:17	0:0	4	0
cond	41:20	41:44	3	n < ( cfg . b_has_a ? 2 : 1 )
water	41:20	0:0	4	n
op	41:22	0:0	4	<
water	41:24	0:0	4	(
water	41:25	0:0	4	cfg
op	41:28	0:0	4	.
water	41:29	0:0	4	b_has_a
water	41:37	0:0	4	?
water	41:39	0:0	4	2
water	41:41	0:0	4	:
water	41:43	0:0	4	1
water	41:44	0:0	4	)
forexpr	41:47	41:48	3	n ++
water	41:47	0:0	4	n
op	41:48	0:0	4	++
stmts	42:4	54:4	3	
water	42:4	0:0	4	{
decl	43:8	43:65	4	const int	i_fmti
op	43:25	0:0	4	=
water	43:27	0:0	4	n
op	43:29	0:0	4	==
water	43:32	0:0	4	0
water	43:34	0:0	4	?
water	43:36	0:0	4	cfg
op	43:39	0:0	4	.
water	43:40	0:0	4	i_fmti
water	43:47	0:0	4	:
water	43:49	0:0	4	AV_PIX_FMT_GRAY8
decl	44:8	44:65	4	const int	i_fmto
op	44:25	0:0	4	=
water	44:27	0:0	4	n
op	44:29	0:0	4	==
water	44:32	0:0	4	0
water	44:34	0:0	4	?
water	44:36	0:0	4	cfg
op	44:39	0:0	4	.
water	44:40	0:0	4	i_fmto
water	44:47	0:0	4	:
water	44:49	0:0	4	AV_PIX_FMT_GRAY8
decl	45:8	45:30	4	struct SwsContext	*ctx
water	46:8	0:0	4	ctx
op	46:12	0:0	4	=
call	46:14	49:74	4	sws_getContext
arg	46:30	46:50	5	i_fmti_visible_width
water	46:30	0:0	6	i_fmti_visible_width
arg	46:52	46:76	5	p_fmti->i_visible_height
water	46:52	0:0	6	p_fmti
op	46:58	0:0	6	->
water	46:60	0:0	6	i_visible_height
arg	46:78	46:84	5	i_fmti
water	46:78	0:0	6	i_fmti
arg	47:30	47:50	5	i_fmto_visible_width
water	47:30	0:0	6	i_fmto_visible_width
arg	47:52	47:76	5	p_fmto->i_visible_height
water	47:52	0:0	6	p_fmto
op	47:58	0:0	6	->
water	47:60	0:0	6	i_visible_height
arg	47:78	47:84	5	i_fmto
water	47:78	0:0	6	i_fmto
arg	48:30	48:65	5	cfg.i_sws_flags|p_sys->i_cpu_mask
water	48:30	0:0	6	cfg
op	48:33	0:0	6	.
water	48:34	0:0	6	i_sws_flags
op	48:46	0:0	6	|
water	48:48	0:0	6	p_sys
op	48:53	0:0	6	->
water	48:55	0:0	6	i_cpu_mask
arg	49:30	49:49	5	p_sys->p_src_filter
water	49:30	0:0	6	p_sys
op	49:35	0:0	6	->
water	49:37	0:0	6	p_src_filter
arg	49:51	49:70	5	p_sys->p_dst_filter
water	49:51	0:0	6	p_sys
op	49:56	0:0	6	->
water	49:58	0:0	6	p_dst_filter
arg	49:72	49:74	5	0
water	49:72	0:0	6	0
water	49:75	0:0	4	;
if	50:8	51:28	4	(n == 0)
cond	50:12	50:17	5	n == 0
water	50:12	0:0	6	n
op	50:14	0:0	6	==
water	50:17	0:0	6	0
stmts	51:12	51:28	5	
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	ctx
op	51:23	0:0	6	=
water	51:25	0:0	6	ctx
water	51:28	0:0	6	;
else	52:8	53:29	4
stmts	53:12	53:29	5	
water	53:12	0:0	6	p_sys
op	53:17	0:0	6	->
water	53:19	0:0	6	ctxA
op	53:24	0:0	6	=
water	53:26	0:0	6	ctx
water	53:29	0:0	6	;
water	54:4	0:0	4	}
if	55:4	59:4	2	(p_sys -> ctxA)
cond	55:8	55:15	3	p_sys -> ctxA
water	55:8	0:0	4	p_sys
op	55:13	0:0	4	->
water	55:15	0:0	4	ctxA
stmts	56:4	59:4	3	
water	56:4	0:0	4	{
water	57:8	0:0	4	p_sys
op	57:13	0:0	4	->
water	57:15	0:0	4	p_src_a
op	57:23	0:0	4	=
call	57:25	57:107	4	picture_New
arg	57:38	57:52	5	VLC_CODEC_GREY
water	57:38	0:0	6	VLC_CODEC_GREY
arg	57:54	57:74	5	i_fmti_visible_width
water	57:54	0:0	6	i_fmti_visible_width
arg	57:76	57:100	5	p_fmti->i_visible_height
water	57:76	0:0	6	p_fmti
op	57:82	0:0	6	->
water	57:84	0:0	6	i_visible_height
arg	57:102	57:103	5	0
water	57:102	0:0	6	0
arg	57:105	57:107	5	1
water	57:105	0:0	6	1
water	57:108	0:0	4	;
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	p_dst_a
op	58:23	0:0	4	=
call	58:25	58:107	4	picture_New
arg	58:38	58:52	5	VLC_CODEC_GREY
water	58:38	0:0	6	VLC_CODEC_GREY
arg	58:54	58:74	5	i_fmto_visible_width
water	58:54	0:0	6	i_fmto_visible_width
arg	58:76	58:100	5	p_fmto->i_visible_height
water	58:76	0:0	6	p_fmto
op	58:82	0:0	6	->
water	58:84	0:0	6	i_visible_height
arg	58:102	58:103	5	0
water	58:102	0:0	6	0
arg	58:105	58:107	5	1
water	58:105	0:0	6	1
water	58:108	0:0	4	;
water	59:4	0:0	4	}
if	60:4	68:4	2	(p_sys -> i_extend_factor != 1)
cond	60:8	60:34	3	p_sys -> i_extend_factor != 1
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	i_extend_factor
op	60:31	0:0	4	!=
water	60:34	0:0	4	1
stmts	61:4	68:4	3	
water	61:4	0:0	4	{
water	62:8	0:0	4	p_sys
op	62:13	0:0	4	->
water	62:15	0:0	4	p_src_e
op	62:23	0:0	4	=
call	62:25	62:109	4	picture_New
arg	62:38	62:54	5	p_fmti->i_chroma
water	62:38	0:0	6	p_fmti
op	62:44	0:0	6	->
water	62:46	0:0	6	i_chroma
arg	62:56	62:76	5	i_fmti_visible_width
water	62:56	0:0	6	i_fmti_visible_width
arg	62:78	62:102	5	p_fmti->i_visible_height
water	62:78	0:0	6	p_fmti
op	62:84	0:0	6	->
water	62:86	0:0	6	i_visible_height
arg	62:104	62:105	5	0
water	62:104	0:0	6	0
arg	62:107	62:109	5	1
water	62:107	0:0	6	1
water	62:110	0:0	4	;
water	63:8	0:0	4	p_sys
op	63:13	0:0	4	->
water	63:15	0:0	4	p_dst_e
op	63:23	0:0	4	=
call	63:25	63:109	4	picture_New
arg	63:38	63:54	5	p_fmto->i_chroma
water	63:38	0:0	6	p_fmto
op	63:44	0:0	6	->
water	63:46	0:0	6	i_chroma
arg	63:56	63:76	5	i_fmto_visible_width
water	63:56	0:0	6	i_fmto_visible_width
arg	63:78	63:102	5	p_fmto->i_visible_height
water	63:78	0:0	6	p_fmto
op	63:84	0:0	6	->
water	63:86	0:0	6	i_visible_height
arg	63:104	63:105	5	0
water	63:104	0:0	6	0
arg	63:107	63:109	5	1
water	63:107	0:0	6	1
water	63:110	0:0	4	;
if	64:8	65:115	4	(p_sys -> p_src_e)
cond	64:12	64:19	5	p_sys -> p_src_e
water	64:12	0:0	6	p_sys
op	64:17	0:0	6	->
water	64:19	0:0	6	p_src_e
stmts	65:12	65:115	5	
call	65:12	65:114	6	memset
arg	65:20	65:49	7	p_sys->p_src_e->p[0].p_pixels
water	65:20	0:0	8	p_sys
op	65:25	0:0	8	->
water	65:27	0:0	8	p_src_e
op	65:34	0:0	8	->
water	65:36	0:0	8	p
op	65:37	0:0	8	[
water	65:38	0:0	8	0
op	65:39	0:0	8	]
op	65:40	0:0	8	.
water	65:41	0:0	8	p_pixels
arg	65:51	65:52	7	0
water	65:51	0:0	8	0
arg	65:54	65:114	7	p_sys->p_src_e->p[0].i_pitch*p_sys->p_src_e->p[0].i_lines
water	65:54	0:0	8	p_sys
op	65:59	0:0	8	->
water	65:61	0:0	8	p_src_e
op	65:68	0:0	8	->
water	65:70	0:0	8	p
op	65:71	0:0	8	[
water	65:72	0:0	8	0
op	65:73	0:0	8	]
op	65:74	0:0	8	.
water	65:75	0:0	8	i_pitch
op	65:83	0:0	8	*
water	65:85	0:0	8	p_sys
op	65:90	0:0	8	->
water	65:92	0:0	8	p_src_e
op	65:99	0:0	8	->
water	65:101	0:0	8	p
op	65:102	0:0	8	[
water	65:103	0:0	8	0
op	65:104	0:0	8	]
op	65:105	0:0	8	.
water	65:106	0:0	8	i_lines
water	65:115	0:0	6	;
if	66:8	67:115	4	(p_sys -> p_dst_e)
cond	66:12	66:19	5	p_sys -> p_dst_e
water	66:12	0:0	6	p_sys
op	66:17	0:0	6	->
water	66:19	0:0	6	p_dst_e
stmts	67:12	67:115	5	
call	67:12	67:114	6	memset
arg	67:20	67:49	7	p_sys->p_dst_e->p[0].p_pixels
water	67:20	0:0	8	p_sys
op	67:25	0:0	8	->
water	67:27	0:0	8	p_dst_e
op	67:34	0:0	8	->
water	67:36	0:0	8	p
op	67:37	0:0	8	[
water	67:38	0:0	8	0
op	67:39	0:0	8	]
op	67:40	0:0	8	.
water	67:41	0:0	8	p_pixels
arg	67:51	67:52	7	0
water	67:51	0:0	8	0
arg	67:54	67:114	7	p_sys->p_dst_e->p[0].i_pitch*p_sys->p_dst_e->p[0].i_lines
water	67:54	0:0	8	p_sys
op	67:59	0:0	8	->
water	67:61	0:0	8	p_dst_e
op	67:68	0:0	8	->
water	67:70	0:0	8	p
op	67:71	0:0	8	[
water	67:72	0:0	8	0
op	67:73	0:0	8	]
op	67:74	0:0	8	.
water	67:75	0:0	8	i_pitch
op	67:83	0:0	8	*
water	67:85	0:0	8	p_sys
op	67:90	0:0	8	->
water	67:92	0:0	8	p_dst_e
op	67:99	0:0	8	->
water	67:101	0:0	8	p
op	67:102	0:0	8	[
water	67:103	0:0	8	0
op	67:104	0:0	8	]
op	67:105	0:0	8	.
water	67:106	0:0	8	i_lines
water	67:115	0:0	6	;
water	68:4	0:0	4	}
if	69:4	76:4	2	(! p_sys -> ctx || ( cfg . b_has_a && ( ! p_sys -> ctxA || ! p_sys -> p_src_a || ! p_sys -> p_dst_a ) ) || ( p_sys -> i_extend_factor != 1 && ( ! p_sys -> p_src_e || ! p_sys -> p_dst_e ) ))
cond	69:8	71:80	3	! p_sys -> ctx || ( cfg . b_has_a && ( ! p_sys -> ctxA || ! p_sys -> p_src_a || ! p_sys -> p_dst_a ) ) || ( p_sys -> i_extend_factor != 1 && ( ! p_sys -> p_src_e || ! p_sys -> p_dst_e ) )
op	69:8	0:0	4	!
water	69:9	0:0	4	p_sys
op	69:14	0:0	4	->
water	69:16	0:0	4	ctx
op	69:20	0:0	4	||
water	70:8	0:0	4	(
water	70:10	0:0	4	cfg
op	70:13	0:0	4	.
water	70:14	0:0	4	b_has_a
op	70:22	0:0	4	&&
water	70:25	0:0	4	(
op	70:27	0:0	4	!
water	70:28	0:0	4	p_sys
op	70:33	0:0	4	->
water	70:35	0:0	4	ctxA
op	70:40	0:0	4	||
op	70:43	0:0	4	!
water	70:44	0:0	4	p_sys
op	70:49	0:0	4	->
water	70:51	0:0	4	p_src_a
op	70:59	0:0	4	||
op	70:62	0:0	4	!
water	70:63	0:0	4	p_sys
op	70:68	0:0	4	->
water	70:70	0:0	4	p_dst_a
water	70:78	0:0	4	)
water	70:80	0:0	4	)
op	70:82	0:0	4	||
water	71:8	0:0	4	(
water	71:10	0:0	4	p_sys
op	71:15	0:0	4	->
water	71:17	0:0	4	i_extend_factor
op	71:33	0:0	4	!=
water	71:36	0:0	4	1
op	71:38	0:0	4	&&
water	71:41	0:0	4	(
op	71:43	0:0	4	!
water	71:44	0:0	4	p_sys
op	71:49	0:0	4	->
water	71:51	0:0	4	p_src_e
op	71:59	0:0	4	||
op	71:62	0:0	4	!
water	71:63	0:0	4	p_sys
op	71:68	0:0	4	->
water	71:70	0:0	4	p_dst_e
water	71:78	0:0	4	)
water	71:80	0:0	4	)
stmts	72:4	76:4	3	
water	72:4	0:0	4	{
call	73:8	73:76	4	msg_Err
arg	73:17	73:25	5	p_filter
water	73:17	0:0	6	p_filter
arg	73:27	73:76	5	"could not init SwScaler and/or allocate memory"
water	73:27	0:0	6	"could not init SwScaler and/or allocate memory"
water	73:77	0:0	4	;
call	74:8	74:24	4	Clean
arg	74:15	74:24	5	p_filter
water	74:15	0:0	6	p_filter
water	74:25	0:0	4	;
return	75:8	75:27	4	VLC_EGENERIC
water	75:15	0:0	5	VLC_EGENERIC
water	76:4	0:0	4	}
if	77:4	95:4	2	(p_filter -> b_allow_fmt_out_change)
cond	77:8	77:18	3	p_filter -> b_allow_fmt_out_change
water	77:8	0:0	4	p_filter
op	77:16	0:0	4	->
water	77:18	0:0	4	b_allow_fmt_out_change
stmts	78:4	95:4	3	
water	78:4	0:0	4	{
water	87:8	0:0	4	unsigned
water	87:17	0:0	4	i_sar_num
op	87:27	0:0	4	=
water	87:29	0:0	4	p_fmti
op	87:35	0:0	4	->
water	87:37	0:0	4	i_sar_num
op	87:47	0:0	4	*
water	87:49	0:0	4	p_fmti
op	87:55	0:0	4	->
water	87:57	0:0	4	i_visible_width
water	87:72	0:0	4	;
water	88:8	0:0	4	unsigned
water	88:17	0:0	4	i_sar_den
op	88:27	0:0	4	=
water	88:29	0:0	4	p_fmti
op	88:35	0:0	4	->
water	88:37	0:0	4	i_sar_den
op	88:47	0:0	4	*
water	88:49	0:0	4	p_fmto
op	88:55	0:0	4	->
water	88:57	0:0	4	i_visible_width
water	88:72	0:0	4	;
call	89:8	89:71	4	vlc_ureduce
arg	89:20	89:30	5	&i_sar_num
op	89:20	0:0	6	&
water	89:21	0:0	6	i_sar_num
arg	89:32	89:42	5	&i_sar_den
op	89:32	0:0	6	&
water	89:33	0:0	6	i_sar_den
arg	89:44	89:53	5	i_sar_num
water	89:44	0:0	6	i_sar_num
arg	89:55	89:64	5	i_sar_den
water	89:55	0:0	6	i_sar_den
arg	89:66	89:71	5	65536
water	89:66	0:0	6	65536
water	89:72	0:0	4	;
water	90:8	0:0	4	i_sar_num
op	90:18	0:0	4	*=
water	90:21	0:0	4	p_fmto
op	90:27	0:0	4	->
water	90:29	0:0	4	i_visible_height
water	90:45	0:0	4	;
water	91:8	0:0	4	i_sar_den
op	91:18	0:0	4	*=
water	91:21	0:0	4	p_fmti
op	91:27	0:0	4	->
water	91:29	0:0	4	i_visible_height
water	91:45	0:0	4	;
call	92:8	92:71	4	vlc_ureduce
arg	92:20	92:30	5	&i_sar_num
op	92:20	0:0	6	&
water	92:21	0:0	6	i_sar_num
arg	92:32	92:42	5	&i_sar_den
op	92:32	0:0	6	&
water	92:33	0:0	6	i_sar_den
arg	92:44	92:53	5	i_sar_num
water	92:44	0:0	6	i_sar_num
arg	92:55	92:64	5	i_sar_den
water	92:55	0:0	6	i_sar_den
arg	92:66	92:71	5	65536
water	92:66	0:0	6	65536
water	92:72	0:0	4	;
water	93:8	0:0	4	p_fmto
op	93:14	0:0	4	->
water	93:16	0:0	4	i_sar_num
op	93:26	0:0	4	=
water	93:28	0:0	4	i_sar_num
water	93:37	0:0	4	;
water	94:8	0:0	4	p_fmto
op	94:14	0:0	4	->
water	94:16	0:0	4	i_sar_den
op	94:26	0:0	4	=
water	94:28	0:0	4	i_sar_den
water	94:37	0:0	4	;
water	95:4	0:0	4	}
water	96:4	0:0	2	p_sys
op	96:9	0:0	2	->
water	96:11	0:0	2	b_add_a
op	96:19	0:0	2	=
water	96:21	0:0	2	cfg
op	96:24	0:0	2	.
water	96:25	0:0	2	b_add_a
water	96:32	0:0	2	;
water	97:4	0:0	2	p_sys
op	97:9	0:0	2	->
water	97:11	0:0	2	b_copy
op	97:18	0:0	2	=
water	97:20	0:0	2	cfg
op	97:23	0:0	2	.
water	97:24	0:0	2	b_copy
water	97:30	0:0	2	;
water	98:4	0:0	2	p_sys
op	98:9	0:0	2	->
water	98:11	0:0	2	fmt_in
op	98:19	0:0	2	=
op	98:21	0:0	2	*
water	98:22	0:0	2	p_fmti
water	98:28	0:0	2	;
water	99:4	0:0	2	p_sys
op	99:9	0:0	2	->
water	99:11	0:0	2	fmt_out
op	99:19	0:0	2	=
op	99:21	0:0	2	*
water	99:22	0:0	2	p_fmto
water	99:28	0:0	2	;
water	100:4	0:0	2	p_sys
op	100:9	0:0	2	->
water	100:11	0:0	2	b_swap_uvi
op	100:22	0:0	2	=
water	100:24	0:0	2	cfg
op	100:27	0:0	2	.
water	100:28	0:0	2	b_swap_uvi
water	100:38	0:0	2	;
water	101:4	0:0	2	p_sys
op	101:9	0:0	2	->
water	101:11	0:0	2	b_swap_uvo
op	101:22	0:0	2	=
water	101:24	0:0	2	cfg
op	101:27	0:0	2	.
water	101:28	0:0	2	b_swap_uvo
water	101:38	0:0	2	;
call	103:4	106:36	2	msg_Dbg
arg	103:13	103:21	3	p_filter
water	103:13	0:0	4	p_filter
arg	103:23	103:96	3	"%ix%i (%ix%i) chroma: %4.4s -> %ix%i (%ix%i) chroma: %4.4s extend by %d"
water	103:23	0:0	4	"%ix%i (%ix%i) chroma: %4.4s -> %ix%i (%ix%i) chroma: %4.4s extend by %d"
arg	104:13	104:36	3	p_fmti->i_visible_width
water	104:13	0:0	4	p_fmti
op	104:19	0:0	4	->
water	104:21	0:0	4	i_visible_width
arg	104:38	104:62	3	p_fmti->i_visible_height
water	104:38	0:0	4	p_fmti
op	104:44	0:0	4	->
water	104:46	0:0	4	i_visible_height
arg	104:64	104:79	3	p_fmti->i_width
water	104:64	0:0	4	p_fmti
op	104:70	0:0	4	->
water	104:72	0:0	4	i_width
arg	104:81	104:97	3	p_fmti->i_height
water	104:81	0:0	4	p_fmti
op	104:87	0:0	4	->
water	104:89	0:0	4	i_height
arg	104:99	104:124	3	(char*)&p_fmti->i_chroma
water	104:99	0:0	4	(
water	104:100	0:0	4	char
op	104:105	0:0	4	*
water	104:106	0:0	4	)
op	104:107	0:0	4	&
water	104:108	0:0	4	p_fmti
op	104:114	0:0	4	->
water	104:116	0:0	4	i_chroma
arg	105:13	105:36	3	p_fmto->i_visible_width
water	105:13	0:0	4	p_fmto
op	105:19	0:0	4	->
water	105:21	0:0	4	i_visible_width
arg	105:38	105:62	3	p_fmto->i_visible_height
water	105:38	0:0	4	p_fmto
op	105:44	0:0	4	->
water	105:46	0:0	4	i_visible_height
arg	105:64	105:79	3	p_fmto->i_width
water	105:64	0:0	4	p_fmto
op	105:70	0:0	4	->
water	105:72	0:0	4	i_width
arg	105:81	105:97	3	p_fmto->i_height
water	105:81	0:0	4	p_fmto
op	105:87	0:0	4	->
water	105:89	0:0	4	i_height
arg	105:99	105:124	3	(char*)&p_fmto->i_chroma
water	105:99	0:0	4	(
water	105:100	0:0	4	char
op	105:105	0:0	4	*
water	105:106	0:0	4	)
op	105:107	0:0	4	&
water	105:108	0:0	4	p_fmto
op	105:114	0:0	4	->
water	105:116	0:0	4	i_chroma
arg	106:13	106:36	3	p_sys->i_extend_factor
water	106:13	0:0	4	p_sys
op	106:18	0:0	4	->
water	106:20	0:0	4	i_extend_factor
water	106:37	0:0	2	;
return	108:4	108:22	2	VLC_SUCCESS
water	108:11	0:0	3	VLC_SUCCESS

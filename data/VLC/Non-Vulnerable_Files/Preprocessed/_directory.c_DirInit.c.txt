func	2:0	79:0	0	int	DirInit
params	2:12	0:0	1	
param	2:13	2:31	2	access_t *	p_access
param	2:33	2:44	2	DIR *	handle
stmnts	0:0	78:23	1	
decl	4:4	4:50	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
call	4:26	4:49	3	malloc
arg	4:34	4:49	4	sizeof(*p_sys)
op	4:34	0:0	5	sizeof
water	4:41	0:0	5	(
op	4:42	0:0	5	*
water	4:43	0:0	5	p_sys
water	4:48	0:0	5	)
if	5:4	6:18	2	(unlikely (p_sys == NULL ))
cond	5:8	5:30	3	unlikely (p_sys == NULL )
call	5:8	5:30	4	unlikely
arg	5:17	5:30	5	p_sys==NULL
water	5:17	0:0	6	p_sys
op	5:23	0:0	6	==
water	5:26	0:0	6	NULL
stmts	6:8	6:18	3	
goto	6:8	6:18	4	error
water	6:13	0:0	5	error
decl	7:4	7:13	2	char	*uri
if	8:4	12:4	2	(!strcmp (p_access -> psz_access ,"fd" ))
cond	8:8	8:43	3	!strcmp (p_access -> psz_access ,"fd" )
op	8:8	0:0	4	!
call	8:9	8:43	4	strcmp
arg	8:17	8:37	5	p_access->psz_access
water	8:17	0:0	6	p_access
op	8:25	0:0	6	->
water	8:27	0:0	6	psz_access
arg	8:39	8:43	5	"fd"
water	8:39	0:0	6	"fd"
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
if	10:8	11:22	4	(asprintf (& uri ,"fd://%s" ,p_access -> psz_location ) == - 1)
cond	10:12	10:67	5	asprintf (& uri ,"fd://%s" ,p_access -> psz_location ) == - 1
call	10:12	10:61	6	asprintf
arg	10:22	10:26	7	&uri
op	10:22	0:0	8	&
water	10:23	0:0	8	uri
arg	10:28	10:37	7	"fd://%s"
water	10:28	0:0	8	"fd://%s"
arg	10:39	10:61	7	p_access->psz_location
water	10:39	0:0	8	p_access
op	10:47	0:0	8	->
water	10:49	0:0	8	psz_location
op	10:63	0:0	6	==
op	10:66	0:0	6	-
water	10:67	0:0	6	1
stmts	11:12	11:22	5	
water	11:12	0:0	6	uri
op	11:16	0:0	6	=
water	11:18	0:0	6	NULL
water	11:22	0:0	6	;
water	12:4	0:0	4	}
else	13:4	14:59	2
stmts	14:8	14:59	3	
water	14:8	0:0	4	uri
op	14:12	0:0	4	=
call	14:14	14:58	4	vlc_path2uri
arg	14:28	14:50	5	p_access->psz_filepath
water	14:28	0:0	6	p_access
op	14:36	0:0	6	->
water	14:38	0:0	6	psz_filepath
arg	14:52	14:58	5	"file"
water	14:52	0:0	6	"file"
water	14:59	0:0	4	;
if	15:4	16:18	2	(unlikely (uri == NULL ))
cond	15:8	15:28	3	unlikely (uri == NULL )
call	15:8	15:28	4	unlikely
arg	15:17	15:28	5	uri==NULL
water	15:17	0:0	6	uri
op	15:21	0:0	6	==
water	15:24	0:0	6	NULL
stmts	16:8	16:18	3	
goto	16:8	16:18	4	error
water	16:13	0:0	5	error
decl	18:4	18:47	2	directory_t	*root
op	18:22	0:0	2	=
call	18:24	18:46	3	malloc
arg	18:32	18:46	4	sizeof(*root)
op	18:32	0:0	5	sizeof
water	18:39	0:0	5	(
op	18:40	0:0	5	*
water	18:41	0:0	5	root
water	18:45	0:0	5	)
if	19:4	23:4	2	(unlikely (root == NULL ))
cond	19:8	19:29	3	unlikely (root == NULL )
call	19:8	19:29	4	unlikely
arg	19:17	19:29	5	root==NULL
water	19:17	0:0	6	root
op	19:22	0:0	6	==
water	19:25	0:0	6	NULL
stmts	20:4	23:4	3	
water	20:4	0:0	4	{
call	21:8	21:17	4	free
arg	21:14	21:17	5	uri
water	21:14	0:0	6	uri
water	21:18	0:0	4	;
goto	22:8	22:18	4	error
water	22:13	0:0	5	error
water	23:4	0:0	4	}
decl	24:4	24:67	2	char	*psz_sort
op	24:19	0:0	2	=
call	24:21	24:66	3	var_InheritString
arg	24:40	24:48	4	p_access
water	24:40	0:0	5	p_access
arg	24:50	24:66	4	"directory-sort"
water	24:50	0:0	5	"directory-sort"
if	25:4	26:31	2	(! psz_sort)
cond	25:8	25:9	3	! psz_sort
op	25:8	0:0	4	!
water	25:9	0:0	4	psz_sort
stmts	26:8	26:31	3	
water	26:8	0:0	4	p_sys
op	26:13	0:0	4	->
water	26:15	0:0	4	compar
op	26:22	0:0	4	=
water	26:24	0:0	4	collate
water	26:31	0:0	4	;
else	27:4	28:31	2
stmts	27:9	28:31	3	
if	27:9	28:31	4	(!strcasecmp (psz_sort ,"version" ))
cond	27:13	27:45	5	!strcasecmp (psz_sort ,"version" )
op	27:13	0:0	6	!
call	27:14	27:45	6	strcasecmp
arg	27:26	27:34	7	psz_sort
water	27:26	0:0	8	psz_sort
arg	27:36	27:45	7	"version"
water	27:36	0:0	8	"version"
stmts	28:8	28:31	5	
water	28:8	0:0	6	p_sys
op	28:13	0:0	6	->
water	28:15	0:0	6	compar
op	28:22	0:0	6	=
water	28:24	0:0	6	version
water	28:31	0:0	6	;
else	29:4	30:28	2
stmts	29:9	30:28	3	
if	29:9	30:28	4	(!strcasecmp (psz_sort ,"none" ))
cond	29:13	29:42	5	!strcasecmp (psz_sort ,"none" )
op	29:13	0:0	6	!
call	29:14	29:42	6	strcasecmp
arg	29:26	29:34	7	psz_sort
water	29:26	0:0	8	psz_sort
arg	29:36	29:42	7	"none"
water	29:36	0:0	8	"none"
stmts	30:8	30:28	5	
water	30:8	0:0	6	p_sys
op	30:13	0:0	6	->
water	30:15	0:0	6	compar
op	30:22	0:0	6	=
water	30:24	0:0	6	NULL
water	30:28	0:0	6	;
else	31:4	32:31	2
stmts	32:8	32:31	3	
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	compar
op	32:22	0:0	4	=
water	32:24	0:0	4	collate
water	32:31	0:0	4	;
call	33:4	33:17	2	free
arg	33:9	33:17	3	psz_sort
water	33:9	0:0	4	psz_sort
water	33:18	0:0	2	;
water	34:4	0:0	2	root
op	34:8	0:0	2	->
water	34:10	0:0	2	parent
op	34:17	0:0	2	=
water	34:19	0:0	2	NULL
water	34:23	0:0	2	;
water	35:4	0:0	2	root
op	35:8	0:0	2	->
water	35:10	0:0	2	handle
op	35:17	0:0	2	=
water	35:19	0:0	2	handle
water	35:25	0:0	2	;
water	36:4	0:0	2	root
op	36:8	0:0	2	->
water	36:10	0:0	2	uri
op	36:14	0:0	2	=
water	36:16	0:0	2	uri
water	36:19	0:0	2	;
water	37:4	0:0	2	root
op	37:8	0:0	2	->
water	37:10	0:0	2	filec
op	37:16	0:0	2	=
call	37:18	37:75	2	vlc_loaddir
arg	37:31	37:37	3	handle
water	37:31	0:0	4	handle
arg	37:39	37:51	3	&root->filev
op	37:39	0:0	4	&
water	37:40	0:0	4	root
op	37:44	0:0	4	->
water	37:46	0:0	4	filev
arg	37:53	37:60	3	visible
water	37:53	0:0	4	visible
arg	37:62	37:75	3	p_sys->compar
water	37:62	0:0	4	p_sys
op	37:67	0:0	4	->
water	37:69	0:0	4	compar
water	37:76	0:0	2	;
if	38:4	39:26	2	(root -> filec < 0)
cond	38:8	38:22	3	root -> filec < 0
water	38:8	0:0	4	root
op	38:12	0:0	4	->
water	38:14	0:0	4	filec
op	38:20	0:0	4	<
water	38:22	0:0	4	0
stmts	39:8	39:26	3	
water	39:8	0:0	4	root
op	39:12	0:0	4	->
water	39:14	0:0	4	filev
op	39:20	0:0	4	=
water	39:22	0:0	4	NULL
water	39:26	0:0	4	;
water	40:4	0:0	2	root
op	40:8	0:0	2	->
water	40:10	0:0	2	i
op	40:12	0:0	2	=
water	40:14	0:0	2	0
water	40:15	0:0	2	;
decl	42:4	42:18	2	struct stat	st
if	43:4	48:4	2	(fstat (dirfd (handle ) ,& st ))
cond	43:8	43:34	3	fstat (dirfd (handle ) ,& st )
call	43:8	43:34	4	fstat
arg	43:15	43:29	5	dirfd(handle)
call	43:15	43:28	6	dirfd
arg	43:22	43:28	7	handle
water	43:22	0:0	8	handle
arg	43:31	43:34	5	&st
op	43:31	0:0	6	&
water	43:32	0:0	6	st
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
call	45:8	45:18	4	free
arg	45:14	45:18	5	root
water	45:14	0:0	6	root
water	45:19	0:0	4	;
call	46:8	46:17	4	free
arg	46:14	46:17	5	uri
water	46:14	0:0	6	uri
water	46:18	0:0	4	;
goto	47:8	47:18	4	error
water	47:13	0:0	5	error
water	48:4	0:0	4	}
water	49:4	0:0	2	root
op	49:8	0:0	2	->
water	49:10	0:0	2	device
op	49:17	0:0	2	=
water	49:19	0:0	2	st
op	49:21	0:0	2	.
water	49:22	0:0	2	st_dev
water	49:28	0:0	2	;
water	50:4	0:0	2	root
op	50:8	0:0	2	->
water	50:10	0:0	2	inode
op	50:16	0:0	2	=
water	50:18	0:0	2	st
op	50:20	0:0	2	.
water	50:21	0:0	2	st_ino
water	50:27	0:0	2	;
water	52:4	0:0	2	root
op	52:8	0:0	2	->
water	52:10	0:0	2	path
op	52:15	0:0	2	=
call	52:17	52:47	2	strdup
arg	52:25	52:47	3	p_access->psz_filepath
water	52:25	0:0	4	p_access
op	52:33	0:0	4	->
water	52:35	0:0	4	psz_filepath
water	52:48	0:0	2	;
water	54:4	0:0	2	p_access
op	54:12	0:0	2	->
water	54:14	0:0	2	p_sys
op	54:20	0:0	2	=
water	54:22	0:0	2	p_sys
water	54:27	0:0	2	;
water	55:4	0:0	2	p_sys
op	55:9	0:0	2	->
water	55:11	0:0	2	current
op	55:19	0:0	2	=
water	55:21	0:0	2	root
water	55:25	0:0	2	;
water	56:4	0:0	2	p_sys
op	56:9	0:0	2	->
water	56:11	0:0	2	ignored_exts
op	56:24	0:0	2	=
call	56:26	56:73	2	var_InheritString
arg	56:45	56:53	3	p_access
water	56:45	0:0	4	p_access
arg	56:55	56:73	3	"ignore-filetypes"
water	56:55	0:0	4	"ignore-filetypes"
water	56:74	0:0	2	;
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	header
op	57:18	0:0	2	=
water	57:20	0:0	2	true
water	57:24	0:0	2	;
water	58:4	0:0	2	p_sys
op	58:9	0:0	2	->
water	58:11	0:0	2	i_item_count
op	58:24	0:0	2	=
water	58:26	0:0	2	0
water	58:27	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	xspf_ext
op	59:20	0:0	2	=
call	59:22	59:32	2	strdup
arg	59:30	59:32	3	""
water	59:30	0:0	4	""
water	59:33	0:0	2	;
decl	61:4	61:57	2	char	*psz
op	61:14	0:0	2	=
call	61:16	61:56	3	var_InheritString
arg	61:35	61:43	4	p_access
water	61:35	0:0	5	p_access
arg	61:45	61:56	4	"recursive"
water	61:45	0:0	5	"recursive"
if	62:4	63:31	2	(psz == NULL || !strcasecmp (psz ,"none" ))
cond	62:8	62:47	3	psz == NULL || !strcasecmp (psz ,"none" )
water	62:8	0:0	4	psz
op	62:12	0:0	4	==
water	62:15	0:0	4	NULL
op	62:20	0:0	4	||
op	62:23	0:0	4	!
call	62:24	62:47	4	strcasecmp
arg	62:36	62:39	5	psz
water	62:36	0:0	6	psz
arg	62:41	62:47	5	"none"
water	62:41	0:0	6	"none"
stmts	63:8	63:31	3	
water	63:8	0:0	4	p_sys
op	63:13	0:0	4	->
water	63:15	0:0	4	mode
op	63:20	0:0	4	=
water	63:22	0:0	4	MODE_NONE
water	63:31	0:0	4	;
else	64:4	65:35	2
stmts	64:9	65:35	3	
if	64:9	65:35	4	(!strcasecmp (psz ,"collapse" ))
cond	64:13	64:42	5	!strcasecmp (psz ,"collapse" )
op	64:13	0:0	6	!
call	64:14	64:42	6	strcasecmp
arg	64:26	64:29	7	psz
water	64:26	0:0	8	psz
arg	64:31	64:42	7	"collapse"
water	64:31	0:0	8	"collapse"
stmts	65:8	65:35	5	
water	65:8	0:0	6	p_sys
op	65:13	0:0	6	->
water	65:15	0:0	6	mode
op	65:20	0:0	6	=
water	65:22	0:0	6	MODE_COLLAPSE
water	65:35	0:0	6	;
else	66:4	67:33	2
stmts	67:8	67:33	3	
water	67:8	0:0	4	p_sys
op	67:13	0:0	4	->
water	67:15	0:0	4	mode
op	67:20	0:0	4	=
water	67:22	0:0	4	MODE_EXPAND
water	67:33	0:0	4	;
call	68:4	68:14	2	free
arg	68:10	68:14	3	psz
water	68:10	0:0	4	psz
water	68:15	0:0	2	;
call	69:4	69:30	2	access_InitFields
arg	69:22	69:30	3	p_access
water	69:22	0:0	4	p_access
water	69:31	0:0	2	;
water	70:4	0:0	2	p_access
op	70:12	0:0	2	->
water	70:14	0:0	2	pf_read
op	70:23	0:0	2	=
water	70:25	0:0	2	NULL
water	70:29	0:0	2	;
water	71:4	0:0	2	p_access
op	71:12	0:0	2	->
water	71:14	0:0	2	pf_block
op	71:23	0:0	2	=
water	71:25	0:0	2	DirBlock
water	71:33	0:0	2	;
water	72:4	0:0	2	p_access
op	72:12	0:0	2	->
water	72:14	0:0	2	pf_seek
op	72:23	0:0	2	=
water	72:25	0:0	2	NULL
water	72:29	0:0	2	;
water	73:4	0:0	2	p_access
op	73:12	0:0	2	->
water	73:14	0:0	2	pf_control
op	73:25	0:0	2	=
water	73:27	0:0	2	DirControl
water	73:37	0:0	2	;
return	74:4	74:22	2	VLC_SUCCESS
water	74:11	0:0	3	VLC_SUCCESS
label	75:0	75:5	2	error :
call	76:4	76:20	2	closedir
arg	76:14	76:20	3	handle
water	76:14	0:0	4	handle
water	76:21	0:0	2	;
call	77:4	77:15	2	free
arg	77:10	77:15	3	p_sys
water	77:10	0:0	4	p_sys
water	77:16	0:0	2	;
return	78:4	78:23	2	VLC_EGENERIC
water	78:11	0:0	3	VLC_EGENERIC

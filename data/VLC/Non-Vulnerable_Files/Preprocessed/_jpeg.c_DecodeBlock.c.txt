func	2:0	72:0	0	static picture_t *	DecodeBlock
params	2:29	0:0	1	
param	2:30	2:46	2	decoder_t *	p_dec
param	2:48	2:66	2	block_t * *	pp_block
stmnts	0:0	71:15	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:20	2	block_t	*p_block
decl	6:4	6:24	2	picture_t	*p_pic
op	6:21	0:0	2	=
water	6:23	0:0	2	0
decl	7:4	7:36	2	JSAMPARRAY	p_row_pointers
op	7:30	0:0	2	=
water	7:32	0:0	2	NULL
if	8:4	11:4	2	(! pp_block || ! * pp_block)
cond	8:8	8:23	3	! pp_block || ! * pp_block
op	8:8	0:0	4	!
water	8:9	0:0	4	pp_block
op	8:18	0:0	4	||
op	8:21	0:0	4	!
op	8:22	0:0	4	*
water	8:23	0:0	4	pp_block
stmts	9:4	11:4	3	
water	9:4	0:0	4	{
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
water	11:4	0:0	4	}
water	12:4	0:0	2	p_block
op	12:12	0:0	2	=
op	12:14	0:0	2	*
water	12:15	0:0	2	pp_block
water	12:23	0:0	2	;
if	13:4	18:4	2	(p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY)
cond	13:8	13:27	3	p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY
water	13:8	0:0	4	p_block
op	13:15	0:0	4	->
water	13:17	0:0	4	i_flags
op	13:25	0:0	4	&
water	13:27	0:0	4	BLOCK_FLAG_DISCONTINUITY
stmts	14:4	18:4	3	
water	14:4	0:0	4	{
call	15:8	15:29	4	block_Release
arg	15:22	15:29	5	p_block
water	15:22	0:0	6	p_block
water	15:30	0:0	4	;
op	16:8	0:0	4	*
water	16:9	0:0	4	pp_block
op	16:18	0:0	4	=
water	16:20	0:0	4	NULL
water	16:24	0:0	4	;
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
water	18:4	0:0	4	}
if	20:4	23:4	2	(setjmp (p_sys -> setjmp_buffer ))
cond	20:8	20:35	3	setjmp (p_sys -> setjmp_buffer )
call	20:8	20:35	4	setjmp
arg	20:15	20:35	5	p_sys->setjmp_buffer
water	20:15	0:0	6	p_sys
op	20:20	0:0	6	->
water	20:22	0:0	6	setjmp_buffer
stmts	21:4	23:4	3	
water	21:4	0:0	4	{
goto	22:8	22:18	4	error
water	22:13	0:0	5	error
water	23:4	0:0	4	}
call	24:4	24:41	2	jpeg_create_decompress
arg	24:27	24:41	3	&p_sys->p_jpeg
op	24:27	0:0	4	&
water	24:28	0:0	4	p_sys
op	24:33	0:0	4	->
water	24:35	0:0	4	p_jpeg
water	24:42	0:0	2	;
call	25:4	25:69	2	jpeg_mem_src
arg	25:17	25:31	3	&p_sys->p_jpeg
op	25:17	0:0	4	&
water	25:18	0:0	4	p_sys
op	25:23	0:0	4	->
water	25:25	0:0	4	p_jpeg
arg	25:33	25:50	3	p_block->p_buffer
water	25:33	0:0	4	p_block
op	25:40	0:0	4	->
water	25:42	0:0	4	p_buffer
arg	25:52	25:69	3	p_block->i_buffer
water	25:52	0:0	4	p_block
op	25:59	0:0	4	->
water	25:61	0:0	4	i_buffer
water	25:70	0:0	2	;
call	26:4	26:41	2	jpeg_read_header
arg	26:21	26:35	3	&p_sys->p_jpeg
op	26:21	0:0	4	&
water	26:22	0:0	4	p_sys
op	26:27	0:0	4	->
water	26:29	0:0	4	p_jpeg
arg	26:37	26:41	3	TRUE
water	26:37	0:0	4	TRUE
water	26:42	0:0	2	;
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	p_jpeg
op	27:17	0:0	2	.
water	27:18	0:0	2	out_color_space
op	27:34	0:0	2	=
water	27:36	0:0	2	JCS_RGB
water	27:43	0:0	2	;
call	28:4	28:40	2	jpeg_start_decompress
arg	28:26	28:40	3	&p_sys->p_jpeg
op	28:26	0:0	4	&
water	28:27	0:0	4	p_sys
op	28:32	0:0	4	->
water	28:34	0:0	4	p_jpeg
water	28:41	0:0	2	;
water	30:4	0:0	2	p_dec
op	30:9	0:0	2	->
water	30:11	0:0	2	fmt_out
op	30:18	0:0	2	.
water	30:19	0:0	2	i_codec
op	30:27	0:0	2	=
water	30:29	0:0	2	VLC_CODEC_RGB24
water	30:44	0:0	2	;
water	31:4	0:0	2	p_dec
op	31:9	0:0	2	->
water	31:11	0:0	2	fmt_out
op	31:18	0:0	2	.
water	31:19	0:0	2	video
op	31:24	0:0	2	.
water	31:25	0:0	2	i_visible_width
op	31:42	0:0	2	=
water	31:44	0:0	2	p_dec
op	31:49	0:0	2	->
water	31:51	0:0	2	fmt_out
op	31:58	0:0	2	.
water	31:59	0:0	2	video
op	31:64	0:0	2	.
water	31:65	0:0	2	i_width
op	31:74	0:0	2	=
water	31:76	0:0	2	p_sys
op	31:81	0:0	2	->
water	31:83	0:0	2	p_jpeg
op	31:89	0:0	2	.
water	31:90	0:0	2	output_width
water	31:102	0:0	2	;
water	32:4	0:0	2	p_dec
op	32:9	0:0	2	->
water	32:11	0:0	2	fmt_out
op	32:18	0:0	2	.
water	32:19	0:0	2	video
op	32:24	0:0	2	.
water	32:25	0:0	2	i_visible_height
op	32:42	0:0	2	=
water	32:44	0:0	2	p_dec
op	32:49	0:0	2	->
water	32:51	0:0	2	fmt_out
op	32:58	0:0	2	.
water	32:59	0:0	2	video
op	32:64	0:0	2	.
water	32:65	0:0	2	i_height
op	32:74	0:0	2	=
water	32:76	0:0	2	p_sys
op	32:81	0:0	2	->
water	32:83	0:0	2	p_jpeg
op	32:89	0:0	2	.
water	32:90	0:0	2	output_height
water	32:103	0:0	2	;
water	33:4	0:0	2	p_dec
op	33:9	0:0	2	->
water	33:11	0:0	2	fmt_out
op	33:18	0:0	2	.
water	33:19	0:0	2	video
op	33:24	0:0	2	.
water	33:25	0:0	2	i_sar_num
op	33:35	0:0	2	=
water	33:37	0:0	2	1
water	33:38	0:0	2	;
water	34:4	0:0	2	p_dec
op	34:9	0:0	2	->
water	34:11	0:0	2	fmt_out
op	34:18	0:0	2	.
water	34:19	0:0	2	video
op	34:24	0:0	2	.
water	34:25	0:0	2	i_sar_den
op	34:35	0:0	2	=
water	34:37	0:0	2	1
water	34:38	0:0	2	;
water	35:4	0:0	2	p_dec
op	35:9	0:0	2	->
water	35:11	0:0	2	fmt_out
op	35:18	0:0	2	.
water	35:19	0:0	2	video
op	35:24	0:0	2	.
water	35:25	0:0	2	i_rmask
op	35:33	0:0	2	=
water	35:35	0:0	2	0
water	35:36	0:0	2	x000000ff
water	35:45	0:0	2	;
water	36:4	0:0	2	p_dec
op	36:9	0:0	2	->
water	36:11	0:0	2	fmt_out
op	36:18	0:0	2	.
water	36:19	0:0	2	video
op	36:24	0:0	2	.
water	36:25	0:0	2	i_gmask
op	36:33	0:0	2	=
water	36:35	0:0	2	0
water	36:36	0:0	2	x0000ff00
water	36:45	0:0	2	;
water	37:4	0:0	2	p_dec
op	37:9	0:0	2	->
water	37:11	0:0	2	fmt_out
op	37:18	0:0	2	.
water	37:19	0:0	2	video
op	37:24	0:0	2	.
water	37:25	0:0	2	i_bmask
op	37:33	0:0	2	=
water	37:35	0:0	2	0
water	37:36	0:0	2	x00ff0000
water	37:45	0:0	2	;
water	39:4	0:0	2	p_pic
op	39:10	0:0	2	=
call	39:12	39:36	2	decoder_NewPicture
arg	39:31	39:36	3	p_dec
water	39:31	0:0	4	p_dec
water	39:37	0:0	2	;
if	40:4	43:4	2	(! p_pic)
cond	40:8	40:9	3	! p_pic
op	40:8	0:0	4	!
water	40:9	0:0	4	p_pic
stmts	41:4	43:4	3	
water	41:4	0:0	4	{
goto	42:8	42:18	4	error
water	42:13	0:0	5	error
water	43:4	0:0	4	}
water	45:4	0:0	2	p_row_pointers
op	45:19	0:0	2	=
call	45:21	45:74	2	malloc
arg	45:28	45:74	3	sizeof(JSAMPROW)*p_sys->p_jpeg.output_height
op	45:28	0:0	4	sizeof
water	45:34	0:0	4	(
water	45:35	0:0	4	JSAMPROW
water	45:43	0:0	4	)
op	45:45	0:0	4	*
water	45:47	0:0	4	p_sys
op	45:52	0:0	4	->
water	45:54	0:0	4	p_jpeg
op	45:60	0:0	4	.
water	45:61	0:0	4	output_height
water	45:75	0:0	2	;
if	46:4	49:4	2	(! p_row_pointers)
cond	46:8	46:9	3	! p_row_pointers
op	46:8	0:0	4	!
water	46:9	0:0	4	p_row_pointers
stmts	47:4	49:4	3	
water	47:4	0:0	4	{
goto	48:8	48:18	4	error
water	48:13	0:0	5	error
water	49:4	0:0	4	}
for	50:4	52:4	2	(unsigned i = 0 ;i < p_sys -> p_jpeg . output_height;i ++)
forinit	50:9	50:23	3	unsigned i = 0 ;
water	50:9	0:0	4	unsigned
water	50:18	0:0	4	i
op	50:20	0:0	4	=
water	50:22	0:0	4	0
water	50:23	0:0	4	;
cond	50:25	50:43	3	i < p_sys -> p_jpeg . output_height
water	50:25	0:0	4	i
op	50:27	0:0	4	<
water	50:29	0:0	4	p_sys
op	50:34	0:0	4	->
water	50:36	0:0	4	p_jpeg
op	50:42	0:0	4	.
water	50:43	0:0	4	output_height
forexpr	50:58	50:59	3	i ++
water	50:58	0:0	4	i
op	50:59	0:0	4	++
stmts	50:63	52:4	3	
water	50:63	0:0	4	{
water	51:8	0:0	4	p_row_pointers
op	51:22	0:0	4	[
water	51:23	0:0	4	i
op	51:24	0:0	4	]
op	51:26	0:0	4	=
water	51:28	0:0	4	p_pic
op	51:33	0:0	4	->
water	51:35	0:0	4	p
op	51:36	0:0	4	->
water	51:38	0:0	4	p_pixels
op	51:47	0:0	4	+
water	51:49	0:0	4	p_pic
op	51:54	0:0	4	->
water	51:56	0:0	4	p
op	51:57	0:0	4	->
water	51:59	0:0	4	i_pitch
op	51:67	0:0	4	*
water	51:69	0:0	4	i
water	51:70	0:0	4	;
water	52:4	0:0	4	}
while	53:4	58:4	2	(p_sys -> p_jpeg . output_scanline < p_sys -> p_jpeg . output_height)
cond	53:11	53:57	3	p_sys -> p_jpeg . output_scanline < p_sys -> p_jpeg . output_height
water	53:11	0:0	4	p_sys
op	53:16	0:0	4	->
water	53:18	0:0	4	p_jpeg
op	53:24	0:0	4	.
water	53:25	0:0	4	output_scanline
op	53:41	0:0	4	<
water	53:43	0:0	4	p_sys
op	53:48	0:0	4	->
water	53:50	0:0	4	p_jpeg
op	53:56	0:0	4	.
water	53:57	0:0	4	output_height
stmts	54:4	58:4	3	
water	54:4	0:0	4	{
call	55:8	57:75	4	jpeg_read_scanlines
arg	55:28	55:42	5	&p_sys->p_jpeg
op	55:28	0:0	6	&
water	55:29	0:0	6	p_sys
op	55:34	0:0	6	->
water	55:36	0:0	6	p_jpeg
arg	56:16	56:62	5	p_row_pointers+p_sys->p_jpeg.output_scanline
water	56:16	0:0	6	p_row_pointers
op	56:31	0:0	6	+
water	56:33	0:0	6	p_sys
op	56:38	0:0	6	->
water	56:40	0:0	6	p_jpeg
op	56:46	0:0	6	.
water	56:47	0:0	6	output_scanline
arg	57:16	57:75	5	p_sys->p_jpeg.output_height-p_sys->p_jpeg.output_scanline
water	57:16	0:0	6	p_sys
op	57:21	0:0	6	->
water	57:23	0:0	6	p_jpeg
op	57:29	0:0	6	.
water	57:30	0:0	6	output_height
op	57:44	0:0	6	-
water	57:46	0:0	6	p_sys
op	57:51	0:0	6	->
water	57:53	0:0	6	p_jpeg
op	57:59	0:0	6	.
water	57:60	0:0	6	output_scanline
water	57:76	0:0	4	;
water	58:4	0:0	4	}
call	59:4	59:41	2	jpeg_finish_decompress
arg	59:27	59:41	3	&p_sys->p_jpeg
op	59:27	0:0	4	&
water	59:28	0:0	4	p_sys
op	59:33	0:0	4	->
water	59:35	0:0	4	p_jpeg
water	59:42	0:0	2	;
call	60:4	60:42	2	jpeg_destroy_decompress
arg	60:28	60:42	3	&p_sys->p_jpeg
op	60:28	0:0	4	&
water	60:29	0:0	4	p_sys
op	60:34	0:0	4	->
water	60:36	0:0	4	p_jpeg
water	60:43	0:0	2	;
call	61:4	61:23	2	free
arg	61:9	61:23	3	p_row_pointers
water	61:9	0:0	4	p_row_pointers
water	61:24	0:0	2	;
water	62:4	0:0	2	p_pic
op	62:9	0:0	2	->
water	62:11	0:0	2	date
op	62:16	0:0	2	=
water	62:18	0:0	2	p_block
op	62:25	0:0	2	->
water	62:27	0:0	2	i_pts
op	62:33	0:0	2	>
water	62:35	0:0	2	VLC_TS_INVALID
water	62:50	0:0	2	?
water	62:52	0:0	2	p_block
op	62:59	0:0	2	->
water	62:61	0:0	2	i_pts
water	62:67	0:0	2	:
water	62:69	0:0	2	p_block
op	62:76	0:0	2	->
water	62:78	0:0	2	i_dts
water	62:83	0:0	2	;
call	63:4	63:25	2	block_Release
arg	63:18	63:25	3	p_block
water	63:18	0:0	4	p_block
water	63:26	0:0	2	;
op	64:4	0:0	2	*
water	64:5	0:0	2	pp_block
op	64:14	0:0	2	=
water	64:16	0:0	2	NULL
water	64:20	0:0	2	;
return	65:4	65:16	2	p_pic
water	65:11	0:0	3	p_pic
label	66:0	66:5	2	error :
call	67:4	67:42	2	jpeg_destroy_decompress
arg	67:28	67:42	3	&p_sys->p_jpeg
op	67:28	0:0	4	&
water	67:29	0:0	4	p_sys
op	67:34	0:0	4	->
water	67:36	0:0	4	p_jpeg
water	67:43	0:0	2	;
call	68:4	68:23	2	free
arg	68:9	68:23	3	p_row_pointers
water	68:9	0:0	4	p_row_pointers
water	68:24	0:0	2	;
call	69:4	69:25	2	block_Release
arg	69:18	69:25	3	p_block
water	69:18	0:0	4	p_block
water	69:26	0:0	2	;
op	70:4	0:0	2	*
water	70:5	0:0	2	pp_block
op	70:14	0:0	2	=
water	70:16	0:0	2	NULL
water	70:20	0:0	2	;
return	71:4	71:15	2	NULL
water	71:11	0:0	3	NULL

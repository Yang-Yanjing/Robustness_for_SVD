func	2:0	109:0	0	static int	OpenWaveOut
params	2:22	0:0	1	
param	2:24	2:46	2	audio_output_t *	p_aout
param	2:48	2:68	2	uint32_t	i_device_id
param	2:70	2:82	2	int	i_format
param	3:24	3:38	2	int	i_channels
param	3:40	3:57	2	int	i_nb_channels
param	3:59	3:69	2	int	i_rate
param	4:24	4:37	2	bool	b_probe
stmnts	0:0	107:22	1	
decl	6:4	6:19	2	MMRESULT	result
water	9:4	0:0	2	waveformat
op	9:14	0:0	2	.
water	9:15	0:0	2	dwChannelMask
op	9:29	0:0	2	=
water	9:31	0:0	2	0
water	9:32	0:0	2	;
for	10:4	12:57	2	(unsigned i = 0 ;pi_vlc_chan_order_wg4 [ i ];i ++)
forinit	10:9	10:23	3	unsigned i = 0 ;
water	10:9	0:0	4	unsigned
water	10:18	0:0	4	i
op	10:20	0:0	4	=
water	10:22	0:0	4	0
water	10:23	0:0	4	;
cond	10:25	10:48	3	pi_vlc_chan_order_wg4 [ i ]
water	10:25	0:0	4	pi_vlc_chan_order_wg4
op	10:46	0:0	4	[
water	10:47	0:0	4	i
op	10:48	0:0	4	]
forexpr	10:51	10:52	3	i ++
water	10:51	0:0	4	i
op	10:52	0:0	4	++
stmts	11:8	12:57	3	
if	11:8	12:57	4	(i_channels & pi_vlc_chan_order_wg4 [ i ])
cond	11:12	11:48	5	i_channels & pi_vlc_chan_order_wg4 [ i ]
water	11:12	0:0	6	i_channels
op	11:23	0:0	6	&
water	11:25	0:0	6	pi_vlc_chan_order_wg4
op	11:46	0:0	6	[
water	11:47	0:0	6	i
op	11:48	0:0	6	]
stmts	12:12	12:57	5	
water	12:12	0:0	6	waveformat
op	12:22	0:0	6	.
water	12:23	0:0	6	dwChannelMask
op	12:37	0:0	6	|=
water	12:40	0:0	6	pi_channels_in
op	12:54	0:0	6	[
water	12:55	0:0	6	i
op	12:56	0:0	6	]
water	12:57	0:0	6	;
switch	13:4	39:4	2	(i_format)
cond	13:12	13:12	3	i_format
water	13:12	0:0	4	i_format
stmts	14:4	39:4	3	
water	14:4	0:0	4	{
label	15:4	15:25	4	case VLC_CODEC_SPDIFL :
water	16:8	0:0	4	i_nb_channels
op	16:22	0:0	4	=
water	16:24	0:0	4	2
water	16:25	0:0	4	;
water	18:8	0:0	4	waveformat
op	18:18	0:0	4	.
water	18:19	0:0	4	dwChannelMask
op	18:33	0:0	4	=
water	18:35	0:0	4	SPEAKER_FRONT_LEFT
op	18:54	0:0	4	|
water	18:56	0:0	4	SPEAKER_FRONT_RIGHT
water	18:75	0:0	4	;
water	19:8	0:0	4	waveformat
op	19:18	0:0	4	.
water	19:19	0:0	4	Format
op	19:25	0:0	4	.
water	19:26	0:0	4	wBitsPerSample
op	19:41	0:0	4	=
water	19:43	0:0	4	16
water	19:45	0:0	4	;
water	20:8	0:0	4	waveformat
op	20:18	0:0	4	.
water	20:19	0:0	4	Samples
op	20:26	0:0	4	.
water	20:27	0:0	4	wValidBitsPerSample
op	20:47	0:0	4	=
water	21:12	0:0	4	waveformat
op	21:22	0:0	4	.
water	21:23	0:0	4	Format
op	21:29	0:0	4	.
water	21:30	0:0	4	wBitsPerSample
water	21:44	0:0	4	;
water	22:8	0:0	4	waveformat
op	22:18	0:0	4	.
water	22:19	0:0	4	Format
op	22:25	0:0	4	.
water	22:26	0:0	4	wFormatTag
op	22:37	0:0	4	=
water	22:39	0:0	4	WAVE_FORMAT_DOLBY_AC3_SPDIF
water	22:66	0:0	4	;
water	23:8	0:0	4	waveformat
op	23:18	0:0	4	.
water	23:19	0:0	4	SubFormat
op	23:29	0:0	4	=
water	23:31	0:0	4	__KSDATAFORMAT_SUBTYPE_DOLBY_AC3_SPDIF
water	23:69	0:0	4	;
break	24:8	24:13	4	
label	25:4	25:23	4	case VLC_CODEC_FL32 :
water	26:8	0:0	4	waveformat
op	26:18	0:0	4	.
water	26:19	0:0	4	Format
op	26:25	0:0	4	.
water	26:26	0:0	4	wBitsPerSample
op	26:41	0:0	4	=
op	26:43	0:0	4	sizeof
water	26:49	0:0	4	(
water	26:50	0:0	4	float
water	26:55	0:0	4	)
op	26:57	0:0	4	*
water	26:59	0:0	4	8
water	26:60	0:0	4	;
water	27:8	0:0	4	waveformat
op	27:18	0:0	4	.
water	27:19	0:0	4	Samples
op	27:26	0:0	4	.
water	27:27	0:0	4	wValidBitsPerSample
op	27:47	0:0	4	=
water	28:12	0:0	4	waveformat
op	28:22	0:0	4	.
water	28:23	0:0	4	Format
op	28:29	0:0	4	.
water	28:30	0:0	4	wBitsPerSample
water	28:44	0:0	4	;
water	29:8	0:0	4	waveformat
op	29:18	0:0	4	.
water	29:19	0:0	4	Format
op	29:25	0:0	4	.
water	29:26	0:0	4	wFormatTag
op	29:37	0:0	4	=
water	29:39	0:0	4	WAVE_FORMAT_IEEE_FLOAT
water	29:61	0:0	4	;
water	30:8	0:0	4	waveformat
op	30:18	0:0	4	.
water	30:19	0:0	4	SubFormat
op	30:29	0:0	4	=
water	30:31	0:0	4	__KSDATAFORMAT_SUBTYPE_IEEE_FLOAT
water	30:64	0:0	4	;
break	31:8	31:13	4	
label	32:4	32:23	4	case VLC_CODEC_S16N :
water	33:8	0:0	4	waveformat
op	33:18	0:0	4	.
water	33:19	0:0	4	Format
op	33:25	0:0	4	.
water	33:26	0:0	4	wBitsPerSample
op	33:41	0:0	4	=
water	33:43	0:0	4	16
water	33:45	0:0	4	;
water	34:8	0:0	4	waveformat
op	34:18	0:0	4	.
water	34:19	0:0	4	Samples
op	34:26	0:0	4	.
water	34:27	0:0	4	wValidBitsPerSample
op	34:47	0:0	4	=
water	35:12	0:0	4	waveformat
op	35:22	0:0	4	.
water	35:23	0:0	4	Format
op	35:29	0:0	4	.
water	35:30	0:0	4	wBitsPerSample
water	35:44	0:0	4	;
water	36:8	0:0	4	waveformat
op	36:18	0:0	4	.
water	36:19	0:0	4	Format
op	36:25	0:0	4	.
water	36:26	0:0	4	wFormatTag
op	36:37	0:0	4	=
water	36:39	0:0	4	WAVE_FORMAT_PCM
water	36:54	0:0	4	;
water	37:8	0:0	4	waveformat
op	37:18	0:0	4	.
water	37:19	0:0	4	SubFormat
op	37:29	0:0	4	=
water	37:31	0:0	4	__KSDATAFORMAT_SUBTYPE_PCM
water	37:57	0:0	4	;
break	38:8	38:13	4	
water	39:4	0:0	4	}
water	40:4	0:0	2	waveformat
op	40:14	0:0	2	.
water	40:15	0:0	2	Format
op	40:21	0:0	2	.
water	40:22	0:0	2	nChannels
op	40:32	0:0	2	=
water	40:34	0:0	2	i_nb_channels
water	40:47	0:0	2	;
water	41:4	0:0	2	waveformat
op	41:14	0:0	2	.
water	41:15	0:0	2	Format
op	41:21	0:0	2	.
water	41:22	0:0	2	nSamplesPerSec
op	41:37	0:0	2	=
water	41:39	0:0	2	i_rate
water	41:45	0:0	2	;
water	42:4	0:0	2	waveformat
op	42:14	0:0	2	.
water	42:15	0:0	2	Format
op	42:21	0:0	2	.
water	42:22	0:0	2	nBlockAlign
op	42:34	0:0	2	=
water	43:8	0:0	2	waveformat
op	43:18	0:0	2	.
water	43:19	0:0	2	Format
op	43:25	0:0	2	.
water	43:26	0:0	2	wBitsPerSample
op	43:41	0:0	2	/
water	43:43	0:0	2	8
op	43:45	0:0	2	*
water	43:47	0:0	2	i_nb_channels
water	43:60	0:0	2	;
water	44:4	0:0	2	waveformat
op	44:14	0:0	2	.
water	44:15	0:0	2	Format
op	44:21	0:0	2	.
water	44:22	0:0	2	nAvgBytesPerSec
op	44:38	0:0	2	=
water	45:8	0:0	2	waveformat
op	45:18	0:0	2	.
water	45:19	0:0	2	Format
op	45:25	0:0	2	.
water	45:26	0:0	2	nSamplesPerSec
op	45:41	0:0	2	*
water	45:43	0:0	2	waveformat
op	45:53	0:0	2	.
water	45:54	0:0	2	Format
op	45:60	0:0	2	.
water	45:61	0:0	2	nBlockAlign
water	45:72	0:0	2	;
if	47:4	50:4	2	(i_nb_channels <= 2)
cond	47:8	47:25	3	i_nb_channels <= 2
water	47:8	0:0	4	i_nb_channels
op	47:22	0:0	4	<=
water	47:25	0:0	4	2
stmts	48:4	50:4	3	
water	48:4	0:0	4	{
water	49:8	0:0	4	waveformat
op	49:18	0:0	4	.
water	49:19	0:0	4	Format
op	49:25	0:0	4	.
water	49:26	0:0	4	cbSize
op	49:33	0:0	4	=
water	49:35	0:0	4	0
water	49:36	0:0	4	;
water	50:4	0:0	4	}
else	51:4	56:4	2
stmts	52:4	56:4	3	
water	52:4	0:0	4	{
water	53:8	0:0	4	waveformat
op	53:18	0:0	4	.
water	53:19	0:0	4	Format
op	53:25	0:0	4	.
water	53:26	0:0	4	wFormatTag
op	53:37	0:0	4	=
water	53:39	0:0	4	WAVE_FORMAT_EXTENSIBLE
water	53:61	0:0	4	;
water	54:8	0:0	4	waveformat
op	54:18	0:0	4	.
water	54:19	0:0	4	Format
op	54:25	0:0	4	.
water	54:26	0:0	4	cbSize
op	54:33	0:0	4	=
op	55:12	0:0	4	sizeof
water	55:18	0:0	4	(
water	55:19	0:0	4	WAVEFORMATEXTENSIBLE
water	55:39	0:0	4	)
op	55:41	0:0	4	-
op	55:43	0:0	4	sizeof
water	55:49	0:0	4	(
water	55:50	0:0	4	WAVEFORMATEX
water	55:62	0:0	4	)
water	55:63	0:0	4	;
water	56:4	0:0	4	}
if	57:4	79:4	2	(! b_probe)
cond	57:7	57:8	3	! b_probe
op	57:7	0:0	4	!
water	57:8	0:0	4	b_probe
stmts	57:17	79:4	3	
water	57:17	0:0	4	{
call	58:8	58:61	4	msg_Dbg
arg	58:17	58:23	5	p_aout
water	58:17	0:0	6	p_aout
arg	58:25	58:48	5	"OpenWaveDevice-ID: %u"
water	58:25	0:0	6	"OpenWaveDevice-ID: %u"
arg	58:50	58:61	5	i_device_id
water	58:50	0:0	6	i_device_id
water	58:62	0:0	4	;
call	59:8	60:41	4	msg_Dbg
arg	59:17	59:23	5	p_aout
water	59:17	0:0	6	p_aout
arg	59:24	59:64	5	"waveformat.Format.cbSize          = %d"
water	59:24	0:0	6	"waveformat.Format.cbSize          = %d"
arg	60:17	60:41	5	waveformat.Format.cbSize
water	60:17	0:0	6	waveformat
op	60:27	0:0	6	.
water	60:28	0:0	6	Format
op	60:34	0:0	6	.
water	60:35	0:0	6	cbSize
water	60:42	0:0	4	;
call	61:8	62:45	4	msg_Dbg
arg	61:17	61:23	5	p_aout
water	61:17	0:0	6	p_aout
arg	61:24	61:64	5	"waveformat.Format.wFormatTag      = %u"
water	61:24	0:0	6	"waveformat.Format.wFormatTag      = %u"
arg	62:17	62:45	5	waveformat.Format.wFormatTag
water	62:17	0:0	6	waveformat
op	62:27	0:0	6	.
water	62:28	0:0	6	Format
op	62:34	0:0	6	.
water	62:35	0:0	6	wFormatTag
water	62:46	0:0	4	;
call	63:8	64:44	4	msg_Dbg
arg	63:17	63:23	5	p_aout
water	63:17	0:0	6	p_aout
arg	63:24	63:64	5	"waveformat.Format.nChannels       = %u"
water	63:24	0:0	6	"waveformat.Format.nChannels       = %u"
arg	64:17	64:44	5	waveformat.Format.nChannels
water	64:17	0:0	6	waveformat
op	64:27	0:0	6	.
water	64:28	0:0	6	Format
op	64:34	0:0	6	.
water	64:35	0:0	6	nChannels
water	64:45	0:0	4	;
call	65:8	66:54	4	msg_Dbg
arg	65:17	65:23	5	p_aout
water	65:17	0:0	6	p_aout
arg	65:24	65:64	5	"waveformat.Format.nSamplesPerSec  = %d"
water	65:24	0:0	6	"waveformat.Format.nSamplesPerSec  = %d"
arg	66:17	66:54	5	(int)waveformat.Format.nSamplesPerSec
water	66:17	0:0	6	(
water	66:18	0:0	6	int
water	66:21	0:0	6	)
water	66:22	0:0	6	waveformat
op	66:32	0:0	6	.
water	66:33	0:0	6	Format
op	66:39	0:0	6	.
water	66:40	0:0	6	nSamplesPerSec
water	66:55	0:0	4	;
call	67:8	68:55	4	msg_Dbg
arg	67:17	67:23	5	p_aout
water	67:17	0:0	6	p_aout
arg	67:24	67:64	5	"waveformat.Format.nAvgBytesPerSec = %u"
water	67:24	0:0	6	"waveformat.Format.nAvgBytesPerSec = %u"
arg	68:17	68:55	5	(int)waveformat.Format.nAvgBytesPerSec
water	68:17	0:0	6	(
water	68:18	0:0	6	int
water	68:21	0:0	6	)
water	68:22	0:0	6	waveformat
op	68:32	0:0	6	.
water	68:33	0:0	6	Format
op	68:39	0:0	6	.
water	68:40	0:0	6	nAvgBytesPerSec
water	68:56	0:0	4	;
call	69:8	70:46	4	msg_Dbg
arg	69:17	69:23	5	p_aout
water	69:17	0:0	6	p_aout
arg	69:24	69:64	5	"waveformat.Format.nBlockAlign     = %d"
water	69:24	0:0	6	"waveformat.Format.nBlockAlign     = %d"
arg	70:17	70:46	5	waveformat.Format.nBlockAlign
water	70:17	0:0	6	waveformat
op	70:27	0:0	6	.
water	70:28	0:0	6	Format
op	70:34	0:0	6	.
water	70:35	0:0	6	nBlockAlign
water	70:47	0:0	4	;
call	71:8	72:49	4	msg_Dbg
arg	71:17	71:23	5	p_aout
water	71:17	0:0	6	p_aout
arg	71:24	71:64	5	"waveformat.Format.wBitsPerSample  = %d"
water	71:24	0:0	6	"waveformat.Format.wBitsPerSample  = %d"
arg	72:17	72:49	5	waveformat.Format.wBitsPerSample
water	72:17	0:0	6	waveformat
op	72:27	0:0	6	.
water	72:28	0:0	6	Format
op	72:34	0:0	6	.
water	72:35	0:0	6	wBitsPerSample
water	72:50	0:0	4	;
call	73:8	74:55	4	msg_Dbg
arg	73:17	73:23	5	p_aout
water	73:17	0:0	6	p_aout
arg	73:24	73:69	5	"waveformat.Samples.wValidBitsPerSample = %d"
water	73:24	0:0	6	"waveformat.Samples.wValidBitsPerSample = %d"
arg	74:17	74:55	5	waveformat.Samples.wValidBitsPerSample
water	74:17	0:0	6	waveformat
op	74:27	0:0	6	.
water	74:28	0:0	6	Samples
op	74:35	0:0	6	.
water	74:36	0:0	6	wValidBitsPerSample
water	74:56	0:0	4	;
call	75:8	76:52	4	msg_Dbg
arg	75:17	75:23	5	p_aout
water	75:17	0:0	6	p_aout
arg	75:24	75:66	5	"waveformat.Samples.wSamplesPerBlock = %d"
water	75:24	0:0	6	"waveformat.Samples.wSamplesPerBlock = %d"
arg	76:17	76:52	5	waveformat.Samples.wSamplesPerBlock
water	76:17	0:0	6	waveformat
op	76:27	0:0	6	.
water	76:28	0:0	6	Samples
op	76:35	0:0	6	.
water	76:36	0:0	6	wSamplesPerBlock
water	76:53	0:0	4	;
call	77:8	78:41	4	msg_Dbg
arg	77:17	77:23	5	p_aout
water	77:17	0:0	6	p_aout
arg	77:24	77:64	5	"waveformat.dwChannelMask          = %u"
water	77:24	0:0	6	"waveformat.dwChannelMask          = %u"
arg	78:17	78:41	5	waveformat.dwChannelMask
water	78:17	0:0	6	waveformat
op	78:27	0:0	6	.
water	78:28	0:0	6	dwChannelMask
water	78:42	0:0	4	;
water	79:4	0:0	4	}
water	81:4	0:0	2	result
op	81:11	0:0	2	=
call	81:13	84:76	2	waveOutOpen
arg	81:26	81:49	3	&p_aout->sys->h_waveout
op	81:26	0:0	4	&
water	81:27	0:0	4	p_aout
op	81:33	0:0	4	->
water	81:35	0:0	4	sys
op	81:38	0:0	4	->
water	81:40	0:0	4	h_waveout
arg	81:51	81:62	3	i_device_id
water	81:51	0:0	4	i_device_id
arg	82:26	82:53	3	(WAVEFORMATEX*)&waveformat
water	82:26	0:0	4	(
water	82:27	0:0	4	WAVEFORMATEX
op	82:40	0:0	4	*
water	82:41	0:0	4	)
op	82:42	0:0	4	&
water	82:43	0:0	4	waveformat
arg	83:26	83:52	3	(DWORD_PTR)WaveOutCallback
water	83:26	0:0	4	(
water	83:27	0:0	4	DWORD_PTR
water	83:36	0:0	4	)
water	83:37	0:0	4	WaveOutCallback
arg	83:54	83:71	3	(DWORD_PTR)p_aout
water	83:54	0:0	4	(
water	83:55	0:0	4	DWORD_PTR
water	83:64	0:0	4	)
water	83:65	0:0	4	p_aout
arg	84:26	84:76	3	CALLBACK_FUNCTION|(b_probe?WAVE_FORMAT_QUERY:0)
water	84:26	0:0	4	CALLBACK_FUNCTION
op	84:44	0:0	4	|
water	84:46	0:0	4	(
water	84:47	0:0	4	b_probe
water	84:54	0:0	4	?
water	84:55	0:0	4	WAVE_FORMAT_QUERY
water	84:72	0:0	4	:
water	84:73	0:0	4	0
water	84:74	0:0	4	)
water	84:77	0:0	2	;
if	85:4	89:4	2	(result == WAVERR_BADFORMAT)
cond	85:8	85:18	3	result == WAVERR_BADFORMAT
water	85:8	0:0	4	result
op	85:15	0:0	4	==
water	85:18	0:0	4	WAVERR_BADFORMAT
stmts	86:4	89:4	3	
water	86:4	0:0	4	{
call	87:8	87:64	4	msg_Warn
arg	87:18	87:24	5	p_aout
water	87:18	0:0	6	p_aout
arg	87:26	87:64	5	"waveOutOpen failed WAVERR_BADFORMAT"
water	87:26	0:0	6	"waveOutOpen failed WAVERR_BADFORMAT"
water	87:65	0:0	4	;
return	88:8	88:27	4	VLC_EGENERIC
water	88:15	0:0	5	VLC_EGENERIC
water	89:4	0:0	4	}
if	90:4	94:4	2	(result == MMSYSERR_ALLOCATED)
cond	90:8	90:18	3	result == MMSYSERR_ALLOCATED
water	90:8	0:0	4	result
op	90:15	0:0	4	==
water	90:18	0:0	4	MMSYSERR_ALLOCATED
stmts	91:4	94:4	3	
water	91:4	0:0	4	{
call	92:8	92:64	4	msg_Warn
arg	92:18	92:24	5	p_aout
water	92:18	0:0	6	p_aout
arg	92:26	92:64	5	"waveOutOpen failed WAVERR_ALLOCATED"
water	92:26	0:0	6	"waveOutOpen failed WAVERR_ALLOCATED"
water	92:65	0:0	4	;
return	93:8	93:27	4	VLC_EGENERIC
water	93:15	0:0	5	VLC_EGENERIC
water	94:4	0:0	4	}
if	95:4	99:4	2	(result != MMSYSERR_NOERROR)
cond	95:8	95:18	3	result != MMSYSERR_NOERROR
water	95:8	0:0	4	result
op	95:15	0:0	4	!=
water	95:18	0:0	4	MMSYSERR_NOERROR
stmts	96:4	99:4	3	
water	96:4	0:0	4	{
call	97:8	97:47	4	msg_Warn
arg	97:18	97:24	5	p_aout
water	97:18	0:0	6	p_aout
arg	97:26	97:47	5	"waveOutOpen failed"
water	97:26	0:0	6	"waveOutOpen failed"
water	97:48	0:0	4	;
return	98:8	98:27	4	VLC_EGENERIC
water	98:15	0:0	5	VLC_EGENERIC
water	99:4	0:0	4	}
water	100:4	0:0	2	p_aout
op	100:10	0:0	2	->
water	100:12	0:0	2	sys
op	100:15	0:0	2	->
water	100:17	0:0	2	chans_to_reorder
op	100:34	0:0	2	=
call	101:8	103:58	2	aout_CheckChannelReorder
arg	101:34	101:48	3	pi_channels_in
water	101:34	0:0	4	pi_channels_in
arg	101:50	101:65	3	pi_channels_out
water	101:50	0:0	4	pi_channels_out
arg	102:34	102:58	3	waveformat.dwChannelMask
water	102:34	0:0	4	waveformat
op	102:44	0:0	4	.
water	102:45	0:0	4	dwChannelMask
arg	103:34	103:58	3	p_aout->sys->chan_table
water	103:34	0:0	4	p_aout
op	103:40	0:0	4	->
water	103:42	0:0	4	sys
op	103:45	0:0	4	->
water	103:47	0:0	4	chan_table
water	103:59	0:0	2	;
if	104:4	105:54	2	(p_aout -> sys -> chans_to_reorder)
cond	104:8	104:21	3	p_aout -> sys -> chans_to_reorder
water	104:8	0:0	4	p_aout
op	104:14	0:0	4	->
water	104:16	0:0	4	sys
op	104:19	0:0	4	->
water	104:21	0:0	4	chans_to_reorder
stmts	105:8	105:54	3	
call	105:8	105:53	4	msg_Dbg
arg	105:17	105:23	5	p_aout
water	105:17	0:0	6	p_aout
arg	105:25	105:53	5	"channel reordering needed"
water	105:25	0:0	6	"channel reordering needed"
water	105:54	0:0	4	;
water	106:4	0:0	2	p_aout
op	106:10	0:0	2	->
water	106:12	0:0	2	sys
op	106:15	0:0	2	->
water	106:17	0:0	2	format
op	106:24	0:0	2	=
water	106:26	0:0	2	i_format
water	106:34	0:0	2	;
return	107:4	107:22	2	VLC_SUCCESS
water	107:11	0:0	3	VLC_SUCCESS

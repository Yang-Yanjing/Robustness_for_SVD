func	2:0	110:0	0	static int	vlm_ControlMediaInstanceStart
params	2:40	0:0	1	
param	2:42	2:54	2	vlm_t *	p_vlm
param	2:56	2:66	2	int64_t	id
param	2:68	2:86	2	const char *	psz_id
param	2:88	2:105	2	int	i_input_index
param	2:107	2:134	2	const char *	psz_vod_output
stmnts	0:0	109:22	1	
decl	4:4	4:67	2	vlm_media_sys_t	*p_media
op	4:29	0:0	2	=
call	4:31	4:66	3	vlm_ControlMediaGetById
arg	4:56	4:61	4	p_vlm
water	4:56	0:0	5	p_vlm
arg	4:63	4:66	4	id
water	4:63	0:0	5	id
decl	5:4	5:40	2	vlm_media_instance_sys_t	*p_instance
decl	6:4	6:17	2	char	*psz_log
if	7:4	8:27	2	(! p_media || ! p_media -> cfg . b_enabled || p_media -> cfg . i_input <= 0)
cond	7:8	7:71	3	! p_media || ! p_media -> cfg . b_enabled || p_media -> cfg . i_input <= 0
op	7:8	0:0	4	!
water	7:9	0:0	4	p_media
op	7:17	0:0	4	||
op	7:20	0:0	4	!
water	7:21	0:0	4	p_media
op	7:28	0:0	4	->
water	7:30	0:0	4	cfg
op	7:33	0:0	4	.
water	7:34	0:0	4	b_enabled
op	7:44	0:0	4	||
water	7:47	0:0	4	p_media
op	7:54	0:0	4	->
water	7:56	0:0	4	cfg
op	7:59	0:0	4	.
water	7:60	0:0	4	i_input
op	7:68	0:0	4	<=
water	7:71	0:0	4	0
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	10:4	11:27	2	(( p_media -> cfg . b_vod && ! psz_vod_output ) || ( ! p_media -> cfg . b_vod && psz_vod_output ))
cond	10:8	10:93	3	( p_media -> cfg . b_vod && ! psz_vod_output ) || ( ! p_media -> cfg . b_vod && psz_vod_output )
water	10:8	0:0	4	(
water	10:10	0:0	4	p_media
op	10:17	0:0	4	->
water	10:19	0:0	4	cfg
op	10:22	0:0	4	.
water	10:23	0:0	4	b_vod
op	10:29	0:0	4	&&
op	10:32	0:0	4	!
water	10:33	0:0	4	psz_vod_output
water	10:48	0:0	4	)
op	10:50	0:0	4	||
water	10:53	0:0	4	(
op	10:55	0:0	4	!
water	10:56	0:0	4	p_media
op	10:63	0:0	4	->
water	10:65	0:0	4	cfg
op	10:68	0:0	4	.
water	10:69	0:0	4	b_vod
op	10:75	0:0	4	&&
water	10:78	0:0	4	psz_vod_output
water	10:93	0:0	4	)
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	13:27	2	(i_input_index < 0 || i_input_index >= p_media -> cfg . i_input)
cond	12:8	12:59	3	i_input_index < 0 || i_input_index >= p_media -> cfg . i_input
water	12:8	0:0	4	i_input_index
op	12:22	0:0	4	<
water	12:24	0:0	4	0
op	12:26	0:0	4	||
water	12:29	0:0	4	i_input_index
op	12:43	0:0	4	>=
water	12:46	0:0	4	p_media
op	12:53	0:0	4	->
water	12:55	0:0	4	cfg
op	12:58	0:0	4	.
water	12:59	0:0	4	i_input
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	2	p_instance
op	14:15	0:0	2	=
call	14:17	14:68	2	vlm_ControlMediaInstanceGetByName
arg	14:52	14:59	3	p_media
water	14:52	0:0	4	p_media
arg	14:61	14:68	3	psz_id
water	14:61	0:0	4	psz_id
water	14:69	0:0	2	;
if	15:4	52:4	2	(! p_instance)
cond	15:8	15:9	3	! p_instance
op	15:8	0:0	4	!
water	15:9	0:0	4	p_instance
stmts	16:4	52:4	3	
water	16:4	0:0	4	{
decl	17:8	17:42	4	vlm_media_t	*p_cfg
op	17:27	0:0	4	=
op	17:29	0:0	4	&
water	17:30	0:0	4	p_media
op	17:37	0:0	4	->
water	17:39	0:0	4	cfg
decl	18:8	18:13	4	int	i
water	19:8	0:0	4	p_instance
op	19:19	0:0	4	=
call	19:21	19:57	4	vlm_MediaInstanceNew
arg	19:43	19:48	5	p_vlm
water	19:43	0:0	6	p_vlm
arg	19:50	19:57	5	psz_id
water	19:50	0:0	6	psz_id
water	19:58	0:0	4	;
if	20:8	21:29	4	(! p_instance)
cond	20:12	20:13	5	! p_instance
op	20:12	0:0	6	!
water	20:13	0:0	6	p_instance
stmts	21:12	21:29	5	
return	21:12	21:29	6	VLC_ENOMEM
water	21:19	0:0	7	VLC_ENOMEM
if	22:8	29:8	4	(p_cfg -> b_vod)
cond	22:13	22:20	5	p_cfg -> b_vod
water	22:13	0:0	6	p_cfg
op	22:18	0:0	6	->
water	22:20	0:0	6	b_vod
stmts	23:8	29:8	5	
water	23:8	0:0	6	{
call	24:12	24:75	6	var_Create
arg	24:24	24:44	7	p_instance->p_parent
water	24:24	0:0	8	p_instance
op	24:34	0:0	8	->
water	24:36	0:0	8	p_parent
arg	24:46	24:57	7	"vod-media"
water	24:46	0:0	8	"vod-media"
arg	24:59	24:75	7	VLC_VAR_ADDRESS
water	24:59	0:0	8	VLC_VAR_ADDRESS
water	24:76	0:0	6	;
call	25:12	26:49	6	var_SetAddress
arg	25:28	25:48	7	p_instance->p_parent
water	25:28	0:0	8	p_instance
op	25:38	0:0	8	->
water	25:40	0:0	8	p_parent
arg	25:50	25:61	7	"vod-media"
water	25:50	0:0	8	"vod-media"
arg	26:28	26:49	7	p_media->vod.p_media
water	26:28	0:0	8	p_media
op	26:35	0:0	8	->
water	26:37	0:0	8	vod
op	26:40	0:0	8	.
water	26:41	0:0	8	p_media
water	26:50	0:0	6	;
call	27:12	27:76	6	var_Create
arg	27:24	27:44	7	p_instance->p_parent
water	27:24	0:0	8	p_instance
op	27:34	0:0	8	->
water	27:36	0:0	8	p_parent
arg	27:46	27:59	7	"vod-session"
water	27:46	0:0	8	"vod-session"
arg	27:61	27:76	7	VLC_VAR_STRING
water	27:61	0:0	8	VLC_VAR_STRING
water	27:77	0:0	6	;
call	28:12	28:71	6	var_SetString
arg	28:27	28:47	7	p_instance->p_parent
water	28:27	0:0	8	p_instance
op	28:37	0:0	8	->
water	28:39	0:0	8	p_parent
arg	28:49	28:62	7	"vod-session"
water	28:49	0:0	8	"vod-session"
arg	28:64	28:71	7	psz_id
water	28:64	0:0	8	psz_id
water	28:72	0:0	6	;
water	29:8	0:0	6	}
if	30:8	41:8	4	(p_cfg -> psz_output != NULL || psz_vod_output != NULL)
cond	30:12	30:59	5	p_cfg -> psz_output != NULL || psz_vod_output != NULL
water	30:12	0:0	6	p_cfg
op	30:17	0:0	6	->
water	30:19	0:0	6	psz_output
op	30:30	0:0	6	!=
water	30:33	0:0	6	NULL
op	30:38	0:0	6	||
water	30:41	0:0	6	psz_vod_output
op	30:56	0:0	6	!=
water	30:59	0:0	6	NULL
stmts	31:8	41:8	5	
water	31:8	0:0	6	{
decl	32:12	32:28	6	char	*psz_buffer
if	33:12	40:12	6	(asprintf (& psz_buffer ,"sout=%s%s%s" ,p_cfg -> psz_output ? p_cfg -> psz_output : "" ,( p_cfg -> psz_output && psz_vod_output ) ? ":" : psz_vod_output ? "#" : "" ,psz_vod_output ? psz_vod_output : "" ) != - 1)
cond	33:16	36:65	7	asprintf (& psz_buffer ,"sout=%s%s%s" ,p_cfg -> psz_output ? p_cfg -> psz_output : "" ,( p_cfg -> psz_output && psz_vod_output ) ? ":" : psz_vod_output ? "#" : "" ,psz_vod_output ? psz_vod_output : "" ) != - 1
call	33:16	36:59	8	asprintf
arg	33:26	33:37	9	&psz_buffer
op	33:26	0:0	10	&
water	33:27	0:0	10	psz_buffer
arg	33:39	33:52	9	"sout=%s%s%s"
water	33:39	0:0	10	"sout=%s%s%s"
arg	34:22	34:64	9	p_cfg->psz_output?p_cfg->psz_output:""
water	34:22	0:0	10	p_cfg
op	34:27	0:0	10	->
water	34:29	0:0	10	psz_output
water	34:40	0:0	10	?
water	34:42	0:0	10	p_cfg
op	34:47	0:0	10	->
water	34:49	0:0	10	psz_output
water	34:60	0:0	10	:
water	34:62	0:0	10	""
arg	35:22	35:93	9	(p_cfg->psz_output&&psz_vod_output)?":":psz_vod_output?"#":""
water	35:22	0:0	10	(
water	35:23	0:0	10	p_cfg
op	35:28	0:0	10	->
water	35:30	0:0	10	psz_output
op	35:41	0:0	10	&&
water	35:44	0:0	10	psz_vod_output
water	35:58	0:0	10	)
water	35:60	0:0	10	?
water	35:62	0:0	10	":"
water	35:66	0:0	10	:
water	35:68	0:0	10	psz_vod_output
water	35:83	0:0	10	?
water	35:85	0:0	10	"#"
water	35:89	0:0	10	:
water	35:91	0:0	10	""
arg	36:22	36:59	9	psz_vod_output?psz_vod_output:""
water	36:22	0:0	10	psz_vod_output
water	36:37	0:0	10	?
water	36:39	0:0	10	psz_vod_output
water	36:54	0:0	10	:
water	36:56	0:0	10	""
op	36:61	0:0	8	!=
op	36:64	0:0	8	-
water	36:65	0:0	8	1
stmts	37:12	40:12	7	
water	37:12	0:0	8	{
call	38:16	38:95	8	input_item_AddOption
arg	38:38	38:56	9	p_instance->p_item
water	38:38	0:0	10	p_instance
op	38:48	0:0	10	->
water	38:50	0:0	10	p_item
arg	38:58	38:68	9	psz_buffer
water	38:58	0:0	10	psz_buffer
arg	38:70	38:95	9	VLC_INPUT_OPTION_TRUSTED
water	38:70	0:0	10	VLC_INPUT_OPTION_TRUSTED
water	38:96	0:0	8	;
call	39:16	39:33	8	free
arg	39:22	39:33	9	psz_buffer
water	39:22	0:0	10	psz_buffer
water	39:34	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
for	42:8	50:8	4	(i = 0 ;i < p_cfg -> i_option;i ++)
forinit	42:13	42:18	5	i = 0 ;
water	42:13	0:0	6	i
op	42:15	0:0	6	=
water	42:17	0:0	6	0
water	42:18	0:0	6	;
cond	42:20	42:31	5	i < p_cfg -> i_option
water	42:20	0:0	6	i
op	42:22	0:0	6	<
water	42:24	0:0	6	p_cfg
op	42:29	0:0	6	->
water	42:31	0:0	6	i_option
forexpr	42:41	42:42	5	i ++
water	42:41	0:0	6	i
op	42:42	0:0	6	++
stmts	43:8	50:8	5	
water	43:8	0:0	6	{
if	44:12	45:46	6	(!strcmp (p_cfg -> ppsz_option [ i ] ,"sout-keep" ))
cond	44:16	44:60	7	!strcmp (p_cfg -> ppsz_option [ i ] ,"sout-keep" )
op	44:16	0:0	8	!
call	44:17	44:60	8	strcmp
arg	44:25	44:46	9	p_cfg->ppsz_option[i]
water	44:25	0:0	10	p_cfg
op	44:30	0:0	10	->
water	44:32	0:0	10	ppsz_option
op	44:43	0:0	10	[
water	44:44	0:0	10	i
op	44:45	0:0	10	]
arg	44:48	44:60	9	"sout-keep"
water	44:48	0:0	10	"sout-keep"
stmts	45:16	45:46	7	
water	45:16	0:0	8	p_instance
op	45:26	0:0	8	->
water	45:28	0:0	8	b_sout_keep
op	45:40	0:0	8	=
water	45:42	0:0	8	true
water	45:46	0:0	8	;
else	46:12	47:47	6
stmts	46:17	47:47	7	
if	46:17	47:47	8	(!strcmp (p_cfg -> ppsz_option [ i ] ,"nosout-keep" ) || !strcmp (p_cfg -> ppsz_option [ i ] ,"no-sout-keep" ))
cond	46:21	46:119	9	!strcmp (p_cfg -> ppsz_option [ i ] ,"nosout-keep" ) || !strcmp (p_cfg -> ppsz_option [ i ] ,"no-sout-keep" )
op	46:21	0:0	10	!
call	46:22	46:67	10	strcmp
arg	46:30	46:51	11	p_cfg->ppsz_option[i]
water	46:30	0:0	12	p_cfg
op	46:35	0:0	12	->
water	46:37	0:0	12	ppsz_option
op	46:48	0:0	12	[
water	46:49	0:0	12	i
op	46:50	0:0	12	]
arg	46:53	46:67	11	"nosout-keep"
water	46:53	0:0	12	"nosout-keep"
op	46:69	0:0	10	||
op	46:72	0:0	10	!
call	46:73	46:119	10	strcmp
arg	46:81	46:102	11	p_cfg->ppsz_option[i]
water	46:81	0:0	12	p_cfg
op	46:86	0:0	12	->
water	46:88	0:0	12	ppsz_option
op	46:99	0:0	12	[
water	46:100	0:0	12	i
op	46:101	0:0	12	]
arg	46:104	46:119	11	"no-sout-keep"
water	46:104	0:0	12	"no-sout-keep"
stmts	47:16	47:47	9	
water	47:16	0:0	10	p_instance
op	47:26	0:0	10	->
water	47:28	0:0	10	b_sout_keep
op	47:40	0:0	10	=
water	47:42	0:0	10	false
water	47:47	0:0	10	;
else	48:12	49:107	6
stmts	49:16	49:107	7	
call	49:16	49:106	8	input_item_AddOption
arg	49:38	49:56	9	p_instance->p_item
water	49:38	0:0	10	p_instance
op	49:48	0:0	10	->
water	49:50	0:0	10	p_item
arg	49:58	49:79	9	p_cfg->ppsz_option[i]
water	49:58	0:0	10	p_cfg
op	49:63	0:0	10	->
water	49:65	0:0	10	ppsz_option
op	49:76	0:0	10	[
water	49:77	0:0	10	i
op	49:78	0:0	10	]
arg	49:81	49:106	9	VLC_INPUT_OPTION_TRUSTED
water	49:81	0:0	10	VLC_INPUT_OPTION_TRUSTED
water	49:107	0:0	8	;
water	50:8	0:0	6	}
call	51:8	51:71	4	TAB_APPEND
arg	51:20	51:39	5	p_media->i_instance
water	51:20	0:0	6	p_media
op	51:27	0:0	6	->
water	51:29	0:0	6	i_instance
arg	51:41	51:58	5	p_media->instance
water	51:41	0:0	6	p_media
op	51:48	0:0	6	->
water	51:50	0:0	6	instance
arg	51:60	51:71	5	p_instance
water	51:60	0:0	6	p_instance
water	51:72	0:0	4	;
water	52:4	0:0	4	}
decl	54:4	54:49	2	input_thread_t	*p_input
op	54:28	0:0	2	=
water	54:30	0:0	2	p_instance
op	54:40	0:0	2	->
water	54:42	0:0	2	p_input
if	55:4	72:4	2	(p_input)
cond	55:8	55:8	3	p_input
water	55:8	0:0	4	p_input
stmts	56:4	72:4	3	
water	56:4	0:0	4	{
if	57:8	63:8	4	(p_instance -> i_index == i_input_index && ! p_input -> b_eof && ! p_input -> b_error)
cond	57:12	58:41	5	p_instance -> i_index == i_input_index && ! p_input -> b_eof && ! p_input -> b_error
water	57:12	0:0	6	p_instance
op	57:22	0:0	6	->
water	57:24	0:0	6	i_index
op	57:32	0:0	6	==
water	57:35	0:0	6	i_input_index
op	57:49	0:0	6	&&
op	58:12	0:0	6	!
water	58:13	0:0	6	p_input
op	58:20	0:0	6	->
water	58:22	0:0	6	b_eof
op	58:28	0:0	6	&&
op	58:31	0:0	6	!
water	58:32	0:0	6	p_input
op	58:39	0:0	6	->
water	58:41	0:0	6	b_error
stmts	59:8	63:8	5	
water	59:8	0:0	6	{
if	60:12	61:62	6	(var_GetInteger (p_input ,"state" ) == PAUSE_S)
cond	60:16	60:54	7	var_GetInteger (p_input ,"state" ) == PAUSE_S
call	60:16	60:49	8	var_GetInteger
arg	60:32	60:39	9	p_input
water	60:32	0:0	10	p_input
arg	60:41	60:49	9	"state"
water	60:41	0:0	10	"state"
op	60:51	0:0	8	==
water	60:54	0:0	8	PAUSE_S
stmts	61:16	61:62	7	
call	61:16	61:61	8	var_SetInteger
arg	61:32	61:39	9	p_input
water	61:32	0:0	10	p_input
arg	61:41	61:48	9	"state"
water	61:41	0:0	10	"state"
arg	61:51	61:61	9	PLAYING_S
water	61:51	0:0	10	PLAYING_S
water	61:62	0:0	8	;
return	62:12	62:30	6	VLC_SUCCESS
water	62:19	0:0	7	VLC_SUCCESS
water	63:8	0:0	6	}
call	64:8	64:34	4	input_Stop
arg	64:20	64:27	5	p_input
water	64:20	0:0	6	p_input
arg	64:29	64:34	5	true
water	64:29	0:0	6	true
water	64:35	0:0	4	;
call	65:8	65:28	4	input_Join
arg	65:20	65:28	5	p_input
water	65:20	0:0	6	p_input
water	65:29	0:0	4	;
call	66:8	66:80	4	var_DelCallback
arg	66:25	66:44	5	p_instance->p_input
water	66:25	0:0	6	p_instance
op	66:35	0:0	6	->
water	66:37	0:0	6	p_input
arg	66:46	66:58	5	"intf-event"
water	66:46	0:0	6	"intf-event"
arg	66:60	66:70	5	InputEvent
water	66:60	0:0	6	InputEvent
arg	66:72	66:80	5	p_media
water	66:72	0:0	6	p_media
water	66:81	0:0	4	;
call	67:8	67:31	4	input_Release
arg	67:23	67:31	5	p_input
water	67:23	0:0	6	p_input
water	67:32	0:0	4	;
if	68:8	69:72	4	(! p_instance -> b_sout_keep)
cond	68:12	68:25	5	! p_instance -> b_sout_keep
op	68:12	0:0	6	!
water	68:13	0:0	6	p_instance
op	68:23	0:0	6	->
water	68:25	0:0	6	b_sout_keep
stmts	69:12	69:72	5	
call	69:12	69:71	6	input_resource_TerminateSout
arg	69:42	69:71	7	p_instance->p_input_resource
water	69:42	0:0	8	p_instance
op	69:52	0:0	8	->
water	69:54	0:0	8	p_input_resource
water	69:72	0:0	6	;
call	70:8	70:67	4	input_resource_TerminateVout
arg	70:38	70:67	5	p_instance->p_input_resource
water	70:38	0:0	6	p_instance
op	70:48	0:0	6	->
water	70:50	0:0	6	p_input_resource
water	70:68	0:0	4	;
call	71:8	71:76	4	vlm_SendEventMediaInstanceStopped
arg	71:43	71:48	5	p_vlm
water	71:43	0:0	6	p_vlm
arg	71:50	71:52	5	id
water	71:50	0:0	6	id
arg	71:54	71:76	5	p_media->cfg.psz_name
water	71:54	0:0	6	p_media
op	71:61	0:0	6	->
water	71:63	0:0	6	cfg
op	71:66	0:0	6	.
water	71:67	0:0	6	psz_name
water	71:77	0:0	4	;
water	72:4	0:0	4	}
water	74:4	0:0	2	p_instance
op	74:14	0:0	2	->
water	74:16	0:0	2	i_index
op	74:24	0:0	2	=
water	74:26	0:0	2	i_input_index
water	74:39	0:0	2	;
if	75:4	81:4	2	(strstr (p_media -> cfg . ppsz_input [ p_instance -> i_index ] ,"://" ) == NULL)
cond	75:8	75:73	3	strstr (p_media -> cfg . ppsz_input [ p_instance -> i_index ] ,"://" ) == NULL
call	75:8	75:68	4	strstr
arg	75:16	75:60	5	p_media->cfg.ppsz_input[p_instance->i_index]
water	75:16	0:0	6	p_media
op	75:23	0:0	6	->
water	75:25	0:0	6	cfg
op	75:28	0:0	6	.
water	75:29	0:0	6	ppsz_input
op	75:39	0:0	6	[
water	75:40	0:0	6	p_instance
op	75:50	0:0	6	->
water	75:52	0:0	6	i_index
op	75:59	0:0	6	]
arg	75:62	75:68	5	"://"
water	75:62	0:0	6	"://"
op	75:70	0:0	4	==
water	75:73	0:0	4	NULL
stmts	76:4	81:4	3	
water	76:4	0:0	4	{
decl	77:8	78:78	4	char	*psz_uri
op	77:22	0:0	4	=
call	77:24	78:77	5	vlc_path2uri
arg	78:26	78:70	6	p_media->cfg.ppsz_input[p_instance->i_index]
water	78:26	0:0	7	p_media
op	78:33	0:0	7	->
water	78:35	0:0	7	cfg
op	78:38	0:0	7	.
water	78:39	0:0	7	ppsz_input
op	78:49	0:0	7	[
water	78:50	0:0	7	p_instance
op	78:60	0:0	7	->
water	78:62	0:0	7	i_index
op	78:69	0:0	7	]
arg	78:72	78:77	6	NULL
water	78:72	0:0	7	NULL
call	79:8	79:55	4	input_item_SetURI
arg	79:27	79:45	5	p_instance->p_item
water	79:27	0:0	6	p_instance
op	79:37	0:0	6	->
water	79:39	0:0	6	p_item
arg	79:47	79:55	5	psz_uri
water	79:47	0:0	6	psz_uri
water	79:57	0:0	4	;
call	80:8	80:22	4	free
arg	80:14	80:22	5	psz_uri
water	80:14	0:0	6	psz_uri
water	80:23	0:0	4	;
water	81:4	0:0	4	}
else	82:4	83:94	2
stmts	83:8	83:94	3	
call	83:8	83:92	4	input_item_SetURI
arg	83:27	83:45	5	p_instance->p_item
water	83:27	0:0	6	p_instance
op	83:37	0:0	6	->
water	83:39	0:0	6	p_item
arg	83:47	83:92	5	p_media->cfg.ppsz_input[p_instance->i_index]
water	83:47	0:0	6	p_media
op	83:54	0:0	6	->
water	83:56	0:0	6	cfg
op	83:59	0:0	6	.
water	83:60	0:0	6	ppsz_input
op	83:70	0:0	6	[
water	83:71	0:0	6	p_instance
op	83:81	0:0	6	->
water	83:83	0:0	6	i_index
op	83:90	0:0	6	]
water	83:94	0:0	4	;
if	84:4	108:4	2	(asprintf (& psz_log ,_ ("Media: %s" ) ,p_media -> cfg . psz_name ) != - 1)
cond	84:8	84:72	3	asprintf (& psz_log ,_ ("Media: %s" ) ,p_media -> cfg . psz_name ) != - 1
call	84:8	84:66	4	asprintf
arg	84:18	84:26	5	&psz_log
op	84:18	0:0	6	&
water	84:19	0:0	6	psz_log
arg	84:28	84:42	5	_("Media: %s")
call	84:28	84:41	6	_
arg	84:30	84:41	7	"Media: %s"
water	84:30	0:0	8	"Media: %s"
arg	84:44	84:66	5	p_media->cfg.psz_name
water	84:44	0:0	6	p_media
op	84:51	0:0	6	->
water	84:53	0:0	6	cfg
op	84:56	0:0	6	.
water	84:57	0:0	6	psz_name
op	84:68	0:0	4	!=
op	84:71	0:0	4	-
water	84:72	0:0	4	1
stmts	85:4	108:4	3	
water	85:4	0:0	4	{
water	86:8	0:0	4	p_instance
op	86:18	0:0	4	->
water	86:20	0:0	4	p_input
op	86:28	0:0	4	=
call	86:30	88:73	4	input_Create
arg	86:44	86:64	5	p_instance->p_parent
water	86:44	0:0	6	p_instance
op	86:54	0:0	6	->
water	86:56	0:0	6	p_parent
arg	87:44	87:62	5	p_instance->p_item
water	87:44	0:0	6	p_instance
op	87:54	0:0	6	->
water	87:56	0:0	6	p_item
arg	87:64	87:71	5	psz_log
water	87:64	0:0	6	psz_log
arg	88:44	88:73	5	p_instance->p_input_resource
water	88:44	0:0	6	p_instance
op	88:54	0:0	6	->
water	88:56	0:0	6	p_input_resource
water	88:74	0:0	4	;
if	89:8	98:8	4	(p_instance -> p_input)
cond	89:12	89:24	5	p_instance -> p_input
water	89:12	0:0	6	p_instance
op	89:22	0:0	6	->
water	89:24	0:0	6	p_input
stmts	90:8	98:8	5	
water	90:8	0:0	6	{
call	91:12	91:84	6	var_AddCallback
arg	91:29	91:48	7	p_instance->p_input
water	91:29	0:0	8	p_instance
op	91:39	0:0	8	->
water	91:41	0:0	8	p_input
arg	91:50	91:62	7	"intf-event"
water	91:50	0:0	8	"intf-event"
arg	91:64	91:74	7	InputEvent
water	91:64	0:0	8	InputEvent
arg	91:76	91:84	7	p_media
water	91:76	0:0	8	p_media
water	91:85	0:0	6	;
if	92:12	97:12	6	(input_Start (p_instance -> p_input ) != VLC_SUCCESS)
cond	92:16	92:54	7	input_Start (p_instance -> p_input ) != VLC_SUCCESS
call	92:16	92:49	8	input_Start
arg	92:29	92:49	9	p_instance->p_input
water	92:29	0:0	10	p_instance
op	92:39	0:0	10	->
water	92:41	0:0	10	p_input
op	92:51	0:0	8	!=
water	92:54	0:0	8	VLC_SUCCESS
stmts	93:12	97:12	7	
water	93:12	0:0	8	{
call	94:16	94:88	8	var_DelCallback
arg	94:33	94:52	9	p_instance->p_input
water	94:33	0:0	10	p_instance
op	94:43	0:0	10	->
water	94:45	0:0	10	p_input
arg	94:54	94:66	9	"intf-event"
water	94:54	0:0	10	"intf-event"
arg	94:68	94:78	9	InputEvent
water	94:68	0:0	10	InputEvent
arg	94:80	94:88	9	p_media
water	94:80	0:0	10	p_media
water	94:89	0:0	8	;
call	95:16	95:56	8	vlc_object_release
arg	95:36	95:56	9	p_instance->p_input
water	95:36	0:0	10	p_instance
op	95:46	0:0	10	->
water	95:48	0:0	10	p_input
water	95:57	0:0	8	;
water	96:16	0:0	8	p_instance
op	96:26	0:0	8	->
water	96:28	0:0	8	p_input
op	96:36	0:0	8	=
water	96:38	0:0	8	NULL
water	96:42	0:0	8	;
water	97:12	0:0	8	}
water	98:8	0:0	6	}
if	99:8	102:8	4	(! p_instance -> p_input)
cond	99:12	99:25	5	! p_instance -> p_input
op	99:12	0:0	6	!
water	99:13	0:0	6	p_instance
op	99:23	0:0	6	->
water	99:25	0:0	6	p_input
stmts	100:8	102:8	5	
water	100:8	0:0	6	{
call	101:12	101:68	6	vlm_MediaInstanceDelete
arg	101:37	101:42	7	p_vlm
water	101:37	0:0	8	p_vlm
arg	101:44	101:46	7	id
water	101:44	0:0	8	id
arg	101:48	101:58	7	p_instance
water	101:48	0:0	8	p_instance
arg	101:60	101:68	7	p_media
water	101:60	0:0	8	p_media
water	101:69	0:0	6	;
water	102:8	0:0	6	}
else	103:8	106:8	4
stmts	104:8	106:8	5	
water	104:8	0:0	6	{
call	105:12	105:80	6	vlm_SendEventMediaInstanceStarted
arg	105:47	105:52	7	p_vlm
water	105:47	0:0	8	p_vlm
arg	105:54	105:56	7	id
water	105:54	0:0	8	id
arg	105:58	105:80	7	p_media->cfg.psz_name
water	105:58	0:0	8	p_media
op	105:65	0:0	8	->
water	105:67	0:0	8	cfg
op	105:70	0:0	8	.
water	105:71	0:0	8	psz_name
water	105:81	0:0	6	;
water	106:8	0:0	6	}
call	107:8	107:22	4	free
arg	107:14	107:22	5	psz_log
water	107:14	0:0	6	psz_log
water	107:23	0:0	4	;
water	108:4	0:0	4	}
return	109:4	109:22	2	VLC_SUCCESS
water	109:11	0:0	3	VLC_SUCCESS

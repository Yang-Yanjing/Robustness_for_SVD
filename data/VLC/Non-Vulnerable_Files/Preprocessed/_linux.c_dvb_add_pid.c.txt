func	2:0	42:0	0	int	dvb_add_pid
params	2:16	0:0	1	
param	2:17	2:32	2	dvb_device_t *	d
param	2:34	2:46	2	uint16_t	pid
stmnts	4:4	41:13	1	
if	4:4	5:16	2	(d -> budget)
cond	4:8	4:11	3	d -> budget
water	4:8	0:0	4	d
op	4:9	0:0	4	->
water	4:11	0:0	4	budget
stmts	5:8	5:16	3	
return	5:8	5:16	4	0
water	5:15	0:0	5	0
if	7:4	8:16	2	(pid == 0 ||ioctl (d -> demux ,DMX_ADD_PID ,& pid ) >= 0)
cond	7:8	7:59	3	pid == 0 ||ioctl (d -> demux ,DMX_ADD_PID ,& pid ) >= 0
water	7:8	0:0	4	pid
op	7:12	0:0	4	==
water	7:15	0:0	4	0
op	7:17	0:0	4	||
call	7:20	7:54	4	ioctl
arg	7:27	7:35	5	d->demux
water	7:27	0:0	6	d
op	7:28	0:0	6	->
water	7:30	0:0	6	demux
arg	7:37	7:48	5	DMX_ADD_PID
water	7:37	0:0	6	DMX_ADD_PID
arg	7:50	7:54	5	&pid
op	7:50	0:0	6	&
water	7:51	0:0	6	pid
op	7:56	0:0	4	>=
water	7:59	0:0	4	0
stmts	8:8	8:16	3	
return	8:8	8:16	4	0
water	8:15	0:0	5	0
for	10:4	35:4	2	( size_t i = 0 ;i < MAX_PIDS;i ++)
forinit	0:0	10:21	3	 size_t i = 0 ;
decl	10:9	10:21	4	size_t	i
op	10:18	0:0	4	=
water	10:20	0:0	4	0
cond	10:23	10:27	3	i < MAX_PIDS
water	10:23	0:0	4	i
op	10:25	0:0	4	<
water	10:27	0:0	4	MAX_PIDS
forexpr	10:37	10:38	3	i ++
water	10:37	0:0	4	i
op	10:38	0:0	4	++
stmts	11:4	35:4	3	
water	11:4	0:0	4	{
if	12:8	13:20	4	(d -> pids [ i ] . pid == pid)
cond	12:12	12:30	5	d -> pids [ i ] . pid == pid
water	12:12	0:0	6	d
op	12:13	0:0	6	->
water	12:15	0:0	6	pids
op	12:19	0:0	6	[
water	12:20	0:0	6	i
op	12:21	0:0	6	]
op	12:22	0:0	6	.
water	12:23	0:0	6	pid
op	12:27	0:0	6	==
water	12:30	0:0	6	pid
stmts	13:12	13:20	5	
return	13:12	13:20	6	0
water	13:19	0:0	7	0
if	14:8	15:20	4	(d -> pids [ i ] . fd != - 1)
cond	14:12	14:30	5	d -> pids [ i ] . fd != - 1
water	14:12	0:0	6	d
op	14:13	0:0	6	->
water	14:15	0:0	6	pids
op	14:19	0:0	6	[
water	14:20	0:0	6	i
op	14:21	0:0	6	]
op	14:22	0:0	6	.
water	14:23	0:0	6	fd
op	14:26	0:0	6	!=
op	14:29	0:0	6	-
water	14:30	0:0	6	1
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
decl	16:8	16:53	4	int	fd
op	16:15	0:0	4	=
call	16:17	16:52	5	dvb_open_node
arg	16:32	16:33	6	d
water	16:32	0:0	7	d
arg	16:35	16:42	6	"demux"
water	16:35	0:0	7	"demux"
arg	16:44	16:52	6	O_RDONLY
water	16:44	0:0	7	O_RDONLY
if	17:8	18:22	4	(fd == - 1)
cond	17:12	17:19	5	fd == - 1
water	17:12	0:0	6	fd
op	17:15	0:0	6	==
op	17:18	0:0	6	-
water	17:19	0:0	6	1
stmts	18:12	18:22	5	
goto	18:12	18:22	6	error
water	18:17	0:0	7	error
decl	21:8	21:42	4	struct dmx_pes_filter_params	param
water	22:8	0:0	4	param
op	22:13	0:0	4	.
water	22:14	0:0	4	pid
op	22:18	0:0	4	=
water	22:20	0:0	4	pid
water	22:23	0:0	4	;
water	23:8	0:0	4	param
op	23:13	0:0	4	.
water	23:14	0:0	4	input
op	23:20	0:0	4	=
water	23:22	0:0	4	DMX_IN_FRONTEND
water	23:37	0:0	4	;
water	24:8	0:0	4	param
op	24:13	0:0	4	.
water	24:14	0:0	4	output
op	24:21	0:0	4	=
water	24:23	0:0	4	DMX_OUT_TS_TAP
water	24:37	0:0	4	;
water	25:8	0:0	4	param
op	25:13	0:0	4	.
water	25:14	0:0	4	pes_type
op	25:23	0:0	4	=
water	25:25	0:0	4	DMX_PES_OTHER
water	25:38	0:0	4	;
water	26:8	0:0	4	param
op	26:13	0:0	4	.
water	26:14	0:0	4	flags
op	26:20	0:0	4	=
water	26:22	0:0	4	DMX_IMMEDIATE_START
water	26:41	0:0	4	;
if	27:8	31:8	4	(ioctl (fd ,DMX_SET_PES_FILTER ,& param ) < 0)
cond	27:12	27:53	5	ioctl (fd ,DMX_SET_PES_FILTER ,& param ) < 0
call	27:12	27:49	6	ioctl
arg	27:19	27:21	7	fd
water	27:19	0:0	8	fd
arg	27:23	27:41	7	DMX_SET_PES_FILTER
water	27:23	0:0	8	DMX_SET_PES_FILTER
arg	27:43	27:49	7	&param
op	27:43	0:0	8	&
water	27:44	0:0	8	param
op	27:51	0:0	6	<
water	27:53	0:0	6	0
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
call	29:12	29:21	6	close
arg	29:19	29:21	7	fd
water	29:19	0:0	8	fd
water	29:22	0:0	6	;
goto	30:12	30:22	6	error
water	30:17	0:0	7	error
water	31:8	0:0	6	}
water	32:8	0:0	4	d
op	32:9	0:0	4	->
water	32:11	0:0	4	pids
op	32:15	0:0	4	[
water	32:16	0:0	4	i
op	32:17	0:0	4	]
op	32:18	0:0	4	.
water	32:19	0:0	4	fd
op	32:22	0:0	4	=
water	32:24	0:0	4	fd
water	32:26	0:0	4	;
water	33:8	0:0	4	d
op	33:9	0:0	4	->
water	33:11	0:0	4	pids
op	33:15	0:0	4	[
water	33:16	0:0	4	i
op	33:17	0:0	4	]
op	33:18	0:0	4	.
water	33:19	0:0	4	pid
op	33:23	0:0	4	=
water	33:25	0:0	4	pid
water	33:28	0:0	4	;
return	34:8	34:16	4	0
water	34:15	0:0	5	0
water	35:4	0:0	4	}
water	36:4	0:0	2	errno
op	36:10	0:0	2	=
water	36:12	0:0	2	EMFILE
water	36:18	0:0	2	;
label	37:0	37:5	2	error :
call	39:4	40:34	2	msg_Err
arg	39:13	39:19	3	d->obj
water	39:13	0:0	4	d
op	39:14	0:0	4	->
water	39:16	0:0	4	obj
arg	39:21	39:55	3	"cannot add PID 0x%04"PRIu16": %s"
water	39:21	0:0	4	"cannot add PID 0x%04"
water	39:43	0:0	4	PRIu16
water	39:49	0:0	4	": %s"
arg	39:57	39:60	3	pid
water	39:57	0:0	4	pid
arg	40:13	40:34	3	vlc_strerror_c(errno)
call	40:13	40:33	4	vlc_strerror_c
arg	40:28	40:33	5	errno
water	40:28	0:0	6	errno
water	40:35	0:0	2	;
return	41:4	41:13	2	-1
op	41:11	0:0	3	-
water	41:12	0:0	3	1

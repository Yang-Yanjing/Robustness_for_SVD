func	2:0	50:0	0	int	net_Accept
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
param	2:38	2:48	2	int *	pi_fd
stmnts	0:0	49:13	1	
decl	4:4	4:43	2	int	evfd
op	4:13	0:0	2	=
call	4:15	4:42	3	vlc_object_waitpipe
arg	4:36	4:42	4	p_this
water	4:36	0:0	5	p_this
call	5:4	5:25	2	assert
arg	5:12	5:25	3	pi_fd!=NULL
water	5:12	0:0	4	pi_fd
op	5:18	0:0	4	!=
water	5:21	0:0	4	NULL
water	5:26	0:0	2	;
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	n
op	6:15	0:0	2	=
water	6:17	0:0	2	0
water	6:18	0:0	2	;
while	7:4	8:11	2	(pi_fd [ n ] != - 1)
cond	7:11	7:24	3	pi_fd [ n ] != - 1
water	7:11	0:0	4	pi_fd
op	7:16	0:0	4	[
water	7:17	0:0	4	n
op	7:18	0:0	4	]
op	7:20	0:0	4	!=
op	7:23	0:0	4	-
water	7:24	0:0	4	1
stmts	8:8	8:11	3	
water	8:8	0:0	4	n
op	8:9	0:0	4	++
water	8:11	0:0	4	;
decl	9:4	9:28	2	struct pollfd	ufd[n+1]
for	11:4	15:4	2	(unsigned i = 0 ;i <= n;i ++)
forinit	11:9	11:23	3	unsigned i = 0 ;
water	11:9	0:0	4	unsigned
water	11:18	0:0	4	i
op	11:20	0:0	4	=
water	11:22	0:0	4	0
water	11:23	0:0	4	;
cond	11:25	11:30	3	i <= n
water	11:25	0:0	4	i
op	11:27	0:0	4	<=
water	11:30	0:0	4	n
forexpr	11:33	11:34	3	i ++
water	11:33	0:0	4	i
op	11:34	0:0	4	++
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
water	13:8	0:0	4	ufd
op	13:11	0:0	4	[
water	13:12	0:0	4	i
op	13:13	0:0	4	]
op	13:14	0:0	4	.
water	13:15	0:0	4	fd
op	13:18	0:0	4	=
water	13:20	0:0	4	(
water	13:21	0:0	4	i
op	13:23	0:0	4	<
water	13:25	0:0	4	n
water	13:26	0:0	4	)
water	13:28	0:0	4	?
water	13:30	0:0	4	pi_fd
op	13:35	0:0	4	[
water	13:36	0:0	4	i
op	13:37	0:0	4	]
water	13:39	0:0	4	:
water	13:41	0:0	4	evfd
water	13:45	0:0	4	;
water	14:8	0:0	4	ufd
op	14:11	0:0	4	[
water	14:12	0:0	4	i
op	14:13	0:0	4	]
op	14:14	0:0	4	.
water	14:15	0:0	4	events
op	14:22	0:0	4	=
water	14:24	0:0	4	POLLIN
water	14:30	0:0	4	;
water	15:4	0:0	4	}
water	16:4	0:0	2	ufd
op	16:7	0:0	2	[
water	16:8	0:0	2	n
op	16:9	0:0	2	]
op	16:10	0:0	2	.
water	16:11	0:0	2	revents
op	16:19	0:0	2	=
water	16:21	0:0	2	0
water	16:22	0:0	2	;
for	17:4	48:4	2	(;;)
forinit	17:9	17:9	3	;
water	17:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	18:4	48:4	3	
water	18:4	0:0	4	{
while	19:8	26:8	4	(poll (ufd ,n + ( evfd != - 1 ) ,- 1 ) == - 1)
cond	19:15	19:52	5	poll (ufd ,n + ( evfd != - 1 ) ,- 1 ) == - 1
call	19:15	19:46	6	poll
arg	19:21	19:24	7	ufd
water	19:21	0:0	8	ufd
arg	19:26	19:42	7	n+(evfd!=-1)
water	19:26	0:0	8	n
op	19:28	0:0	8	+
water	19:30	0:0	8	(
water	19:31	0:0	8	evfd
op	19:36	0:0	8	!=
op	19:39	0:0	8	-
water	19:40	0:0	8	1
water	19:41	0:0	8	)
arg	19:44	19:46	7	-1
op	19:44	0:0	8	-
water	19:45	0:0	8	1
op	19:48	0:0	6	==
op	19:51	0:0	6	-
water	19:52	0:0	6	1
stmts	20:8	26:8	5	
water	20:8	0:0	6	{
if	21:12	25:12	6	(net_errno != EINTR)
cond	21:16	21:29	7	net_errno != EINTR
water	21:16	0:0	8	net_errno
op	21:26	0:0	8	!=
water	21:29	0:0	8	EINTR
stmts	22:12	25:12	7	
water	22:12	0:0	8	{
call	23:16	23:76	8	msg_Err
arg	23:25	23:31	9	p_this
water	23:25	0:0	10	p_this
arg	23:33	23:49	9	"poll error: %s"
water	23:33	0:0	10	"poll error: %s"
arg	23:51	23:76	9	vlc_strerror_c(net_errno)
call	23:51	23:75	10	vlc_strerror_c
arg	23:66	23:75	11	net_errno
water	23:66	0:0	12	net_errno
water	23:77	0:0	8	;
return	24:16	24:25	8	-1
op	24:23	0:0	9	-
water	24:24	0:0	9	1
water	25:12	0:0	8	}
water	26:8	0:0	6	}
for	27:8	42:8	4	(unsigned i = 0 ;i < n;i ++)
forinit	27:13	27:27	5	unsigned i = 0 ;
water	27:13	0:0	6	unsigned
water	27:22	0:0	6	i
op	27:24	0:0	6	=
water	27:26	0:0	6	0
water	27:27	0:0	6	;
cond	27:29	27:33	5	i < n
water	27:29	0:0	6	i
op	27:31	0:0	6	<
water	27:33	0:0	6	n
forexpr	27:36	27:37	5	i ++
water	27:36	0:0	6	i
op	27:37	0:0	6	++
stmts	28:8	42:8	5	
water	28:8	0:0	6	{
if	29:12	30:24	6	(ufd [ i ] . revents == 0)
cond	29:16	29:34	7	ufd [ i ] . revents == 0
water	29:16	0:0	8	ufd
op	29:19	0:0	8	[
water	29:20	0:0	8	i
op	29:21	0:0	8	]
op	29:22	0:0	8	.
water	29:23	0:0	8	revents
op	29:31	0:0	8	==
water	29:34	0:0	8	0
stmts	30:16	30:24	7	
continue	30:16	30:24	8	
decl	31:12	31:31	6	int	sfd
op	31:20	0:0	6	=
water	31:22	0:0	6	ufd
op	31:25	0:0	6	[
water	31:26	0:0	6	i
op	31:27	0:0	6	]
op	31:28	0:0	6	.
water	31:29	0:0	6	fd
decl	32:12	32:51	6	int	fd
op	32:19	0:0	6	=
call	32:21	32:50	7	net_AcceptSingle
arg	32:39	32:45	8	p_this
water	32:39	0:0	9	p_this
arg	32:47	32:50	8	sfd
water	32:47	0:0	9	sfd
if	33:12	34:24	6	(fd == - 1)
cond	33:16	33:23	7	fd == - 1
water	33:16	0:0	8	fd
op	33:19	0:0	8	==
op	33:22	0:0	8	-
water	33:23	0:0	8	1
stmts	34:16	34:24	7	
continue	34:16	34:24	8	
call	39:12	39:58	6	memmove
arg	39:21	39:30	7	pi_fd+i
water	39:21	0:0	8	pi_fd
op	39:27	0:0	8	+
water	39:29	0:0	8	i
arg	39:32	39:45	7	pi_fd+i+1
water	39:32	0:0	8	pi_fd
op	39:38	0:0	8	+
water	39:40	0:0	8	i
op	39:42	0:0	8	+
water	39:44	0:0	8	1
arg	39:47	39:58	7	n-(i+1)
water	39:47	0:0	8	n
op	39:49	0:0	8	-
water	39:51	0:0	8	(
water	39:52	0:0	8	i
op	39:54	0:0	8	+
water	39:56	0:0	8	1
water	39:57	0:0	8	)
water	39:59	0:0	6	;
water	40:12	0:0	6	pi_fd
op	40:17	0:0	6	[
water	40:18	0:0	6	n
op	40:20	0:0	6	-
water	40:22	0:0	6	1
op	40:23	0:0	6	]
op	40:25	0:0	6	=
water	40:27	0:0	6	sfd
water	40:30	0:0	6	;
return	41:12	41:21	6	fd
water	41:19	0:0	7	fd
water	42:8	0:0	6	}
if	43:8	47:8	4	(ufd [ n ] . revents)
cond	43:12	43:19	5	ufd [ n ] . revents
water	43:12	0:0	6	ufd
op	43:15	0:0	6	[
water	43:16	0:0	6	n
op	43:17	0:0	6	]
op	43:18	0:0	6	.
water	43:19	0:0	6	revents
stmts	44:8	47:8	5	
water	44:8	0:0	6	{
water	45:12	0:0	6	errno
op	45:18	0:0	6	=
water	45:20	0:0	6	EINTR
water	45:25	0:0	6	;
break	46:12	46:17	6	
water	47:8	0:0	6	}
water	48:4	0:0	4	}
return	49:4	49:13	2	-1
op	49:11	0:0	3	-
water	49:12	0:0	3	1

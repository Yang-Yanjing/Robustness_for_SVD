func	2:0	32:0	0	static int	DecodeFrame
params	2:22	0:0	1	
param	2:24	2:41	2	demux_t *	p_demux
stmnts	0:0	31:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	16:4	2	(p_sys -> b_vbi)
cond	5:9	5:16	3	p_sys -> b_vbi
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	b_vbi
stmts	6:4	16:4	3	
water	6:4	0:0	4	{
call	7:8	7:27	4	DecodeWSS
arg	7:19	7:27	5	p_demux
water	7:19	0:0	6	p_demux
water	7:28	0:0	4	;
if	8:8	15:8	4	(p_sys -> i_height == 576)
cond	8:13	8:32	5	p_sys -> i_height == 576
water	8:13	0:0	6	p_sys
op	8:18	0:0	6	->
water	8:20	0:0	6	i_height
op	8:29	0:0	6	==
water	8:32	0:0	6	576
stmts	9:8	15:8	5	
water	9:8	0:0	6	{
call	12:12	12:54	6	memset
arg	12:20	12:30	7	p_sys->p_y
water	12:20	0:0	8	p_sys
op	12:25	0:0	8	->
water	12:27	0:0	8	p_y
arg	12:32	12:33	7	0
water	12:32	0:0	8	0
arg	12:35	12:54	7	p_sys->i_width/2
water	12:35	0:0	8	p_sys
op	12:40	0:0	8	->
water	12:42	0:0	8	i_width
op	12:50	0:0	8	/
water	12:52	0:0	8	2
water	12:55	0:0	6	;
call	13:12	14:50	6	memset
arg	13:20	13:74	7	p_sys->p_y+p_sys->i_width*574+p_sys->i_width/2
water	13:20	0:0	8	p_sys
op	13:25	0:0	8	->
water	13:27	0:0	8	p_y
op	13:31	0:0	8	+
water	13:33	0:0	8	p_sys
op	13:38	0:0	8	->
water	13:40	0:0	8	i_width
op	13:48	0:0	8	*
water	13:50	0:0	8	574
op	13:54	0:0	8	+
water	13:56	0:0	8	p_sys
op	13:61	0:0	8	->
water	13:63	0:0	8	i_width
op	13:71	0:0	8	/
water	13:73	0:0	8	2
arg	14:24	14:25	7	0
water	14:24	0:0	8	0
arg	14:27	14:50	7	p_sys->i_width*3/2
water	14:27	0:0	8	p_sys
op	14:32	0:0	8	->
water	14:34	0:0	8	i_width
op	14:42	0:0	8	*
water	14:44	0:0	8	3
op	14:46	0:0	8	/
water	14:48	0:0	8	2
water	14:51	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
if	17:4	19:29	2	(p_sys -> i_telx_count)
cond	17:9	17:16	3	p_sys -> i_telx_count
water	17:9	0:0	4	p_sys
op	17:14	0:0	4	->
water	17:16	0:0	4	i_telx_count
stmts	18:8	19:29	3	
if	18:8	19:29	4	(DecodeTelx (p_demux ) != VLC_SUCCESS)
cond	18:13	18:38	5	DecodeTelx (p_demux ) != VLC_SUCCESS
call	18:13	18:33	6	DecodeTelx
arg	18:25	18:33	7	p_demux
water	18:25	0:0	8	p_demux
op	18:35	0:0	6	!=
water	18:38	0:0	6	VLC_SUCCESS
stmts	19:12	19:29	5	
return	19:12	19:29	6	VLC_ENOMEM
water	19:19	0:0	7	VLC_ENOMEM
for	20:4	25:4	2	( int i = 0 ;i < MAX_AUDIOS;i ++)
forinit	0:0	20:19	3	 int i = 0 ;
decl	20:10	20:19	4	int	i
op	20:16	0:0	4	=
water	20:18	0:0	4	0
cond	20:21	20:25	3	i < MAX_AUDIOS
water	20:21	0:0	4	i
op	20:23	0:0	4	<
water	20:25	0:0	4	MAX_AUDIOS
forexpr	20:37	20:38	3	i ++
water	20:37	0:0	4	i
op	20:38	0:0	4	++
stmts	21:4	25:4	3	
water	21:4	0:0	4	{
if	22:8	24:35	4	(p_sys -> p_audios [ i ] . i_group && p_sys -> p_audios [ i ] . p_es != NULL)
cond	22:13	22:70	5	p_sys -> p_audios [ i ] . i_group && p_sys -> p_audios [ i ] . p_es != NULL
water	22:13	0:0	6	p_sys
op	22:18	0:0	6	->
water	22:20	0:0	6	p_audios
op	22:28	0:0	6	[
water	22:29	0:0	6	i
op	22:30	0:0	6	]
op	22:31	0:0	6	.
water	22:32	0:0	6	i_group
op	22:40	0:0	6	&&
water	22:43	0:0	6	p_sys
op	22:48	0:0	6	->
water	22:50	0:0	6	p_audios
op	22:58	0:0	6	[
water	22:59	0:0	6	i
op	22:60	0:0	6	]
op	22:61	0:0	6	.
water	22:62	0:0	6	p_es
op	22:67	0:0	6	!=
water	22:70	0:0	6	NULL
stmts	23:12	24:35	5	
if	23:12	24:35	6	(DecodeAudio (p_demux ,& p_sys -> p_audios [ i ] ) != VLC_SUCCESS)
cond	23:16	23:63	7	DecodeAudio (p_demux ,& p_sys -> p_audios [ i ] ) != VLC_SUCCESS
call	23:16	23:58	8	DecodeAudio
arg	23:29	23:36	9	p_demux
water	23:29	0:0	10	p_demux
arg	23:38	23:58	9	&p_sys->p_audios[i]
op	23:38	0:0	10	&
water	23:39	0:0	10	p_sys
op	23:44	0:0	10	->
water	23:46	0:0	10	p_audios
op	23:54	0:0	10	[
water	23:55	0:0	10	i
op	23:56	0:0	10	]
op	23:60	0:0	8	!=
water	23:63	0:0	8	VLC_SUCCESS
stmts	24:16	24:35	7	
return	24:16	24:35	8	VLC_EGENERIC
water	24:23	0:0	9	VLC_EGENERIC
water	25:4	0:0	4	}
call	26:4	26:25	2	DecodeVideo
arg	26:17	26:25	3	p_demux
water	26:17	0:0	4	p_demux
water	26:26	0:0	2	;
call	27:4	27:69	2	es_out_Control
arg	27:20	27:32	3	p_demux->out
water	27:20	0:0	4	p_demux
op	27:27	0:0	4	->
water	27:29	0:0	4	out
arg	27:34	27:48	3	ES_OUT_SET_PCR
water	27:34	0:0	4	ES_OUT_SET_PCR
arg	27:50	27:69	3	p_sys->i_next_date
water	27:50	0:0	4	p_sys
op	27:55	0:0	4	->
water	27:57	0:0	4	i_next_date
water	27:70	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	i_next_date
op	28:23	0:0	2	+=
water	28:26	0:0	2	p_sys
op	28:31	0:0	2	->
water	28:33	0:0	2	i_incr
water	28:39	0:0	2	;
if	29:4	30:25	2	(NewFrame (p_demux ) != VLC_SUCCESS)
cond	29:8	29:31	3	NewFrame (p_demux ) != VLC_SUCCESS
call	29:8	29:26	4	NewFrame
arg	29:18	29:26	5	p_demux
water	29:18	0:0	6	p_demux
op	29:28	0:0	4	!=
water	29:31	0:0	4	VLC_SUCCESS
stmts	30:8	30:25	3	
return	30:8	30:25	4	VLC_ENOMEM
water	30:15	0:0	5	VLC_ENOMEM
return	31:4	31:22	2	VLC_SUCCESS
water	31:11	0:0	3	VLC_SUCCESS

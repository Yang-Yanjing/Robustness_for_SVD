func	2:0	130:0	0	static int	CmdInitControl
params	2:25	0:0	1	
param	2:27	2:42	2	ts_cmd_t *	p_cmd
param	2:44	2:55	2	int	i_query
param	2:57	2:69	2	va_list	args
param	2:71	2:83	2	bool	b_copy
stmnts	4:4	129:22	1	
water	4:4	0:0	2	p_cmd
op	4:9	0:0	2	->
water	4:11	0:0	2	i_type
op	4:18	0:0	2	=
water	4:20	0:0	2	C_CONTROL
water	4:29	0:0	2	;
water	5:4	0:0	2	p_cmd
op	5:9	0:0	2	->
water	5:11	0:0	2	i_date
op	5:18	0:0	2	=
call	5:20	5:26	2	mdate
water	5:27	0:0	2	;
water	6:4	0:0	2	p_cmd
op	6:9	0:0	2	->
water	6:11	0:0	2	u
op	6:12	0:0	2	.
water	6:13	0:0	2	control
op	6:20	0:0	2	.
water	6:21	0:0	2	i_query
op	6:29	0:0	2	=
water	6:31	0:0	2	i_query
water	6:38	0:0	2	;
switch	7:4	128:4	2	(i_query)
cond	7:12	7:12	3	i_query
water	7:12	0:0	4	i_query
stmts	8:4	128:4	3	
water	8:4	0:0	4	{
label	10:4	10:24	4	case ES_OUT_SET_MODE :
label	11:4	11:25	4	case ES_OUT_SET_GROUP :
label	12:4	12:25	4	case ES_OUT_DEL_GROUP :
water	13:8	0:0	4	p_cmd
op	13:13	0:0	4	->
water	13:15	0:0	4	u
op	13:16	0:0	4	.
water	13:17	0:0	4	control
op	13:24	0:0	4	.
water	13:25	0:0	4	u
op	13:26	0:0	4	.
water	13:27	0:0	4	i_int
op	13:33	0:0	4	=
water	13:35	0:0	4	(
water	13:36	0:0	4	int
water	13:39	0:0	4	)
call	13:40	13:58	4	va_arg
arg	13:48	13:52	5	args
water	13:48	0:0	6	args
arg	13:54	13:58	5	int
water	13:54	0:0	6	int
water	13:59	0:0	4	;
break	14:8	14:13	4	
label	15:4	15:23	4	case ES_OUT_SET_PCR :
label	16:4	16:37	4	case ES_OUT_SET_NEXT_DISPLAY_TIME :
water	17:8	0:0	4	p_cmd
op	17:13	0:0	4	->
water	17:15	0:0	4	u
op	17:16	0:0	4	.
water	17:17	0:0	4	control
op	17:24	0:0	4	.
water	17:25	0:0	4	u
op	17:26	0:0	4	.
water	17:27	0:0	4	i_i64
op	17:33	0:0	4	=
water	17:35	0:0	4	(
water	17:36	0:0	4	int64_t
water	17:43	0:0	4	)
call	17:44	17:66	4	va_arg
arg	17:52	17:56	5	args
water	17:52	0:0	6	args
arg	17:58	17:66	5	int64_t
water	17:58	0:0	6	int64_t
water	17:67	0:0	4	;
break	18:8	18:13	4	
label	19:4	19:29	4	case ES_OUT_SET_GROUP_PCR :
water	20:8	0:0	4	p_cmd
op	20:13	0:0	4	->
water	20:15	0:0	4	u
op	20:16	0:0	4	.
water	20:17	0:0	4	control
op	20:24	0:0	4	.
water	20:25	0:0	4	u
op	20:26	0:0	4	.
water	20:27	0:0	4	int_i64
op	20:34	0:0	4	.
water	20:35	0:0	4	i_int
op	20:41	0:0	4	=
water	20:43	0:0	4	(
water	20:44	0:0	4	int
water	20:47	0:0	4	)
call	20:48	20:66	4	va_arg
arg	20:56	20:60	5	args
water	20:56	0:0	6	args
arg	20:62	20:66	5	int
water	20:62	0:0	6	int
water	20:67	0:0	4	;
water	21:8	0:0	4	p_cmd
op	21:13	0:0	4	->
water	21:15	0:0	4	u
op	21:16	0:0	4	.
water	21:17	0:0	4	control
op	21:24	0:0	4	.
water	21:25	0:0	4	u
op	21:26	0:0	4	.
water	21:27	0:0	4	int_i64
op	21:34	0:0	4	.
water	21:35	0:0	4	i_i64
op	21:41	0:0	4	=
water	21:43	0:0	4	(
water	21:44	0:0	4	int64_t
water	21:51	0:0	4	)
call	21:52	21:74	4	va_arg
arg	21:60	21:64	5	args
water	21:60	0:0	6	args
arg	21:66	21:74	5	int64_t
water	21:66	0:0	6	int64_t
water	21:75	0:0	4	;
break	22:8	22:13	4	
label	23:4	23:38	4	case ES_OUT_SET_ES_SCRAMBLED_STATE :
water	24:8	0:0	4	p_cmd
op	24:13	0:0	4	->
water	24:15	0:0	4	u
op	24:16	0:0	4	.
water	24:17	0:0	4	control
op	24:24	0:0	4	.
water	24:25	0:0	4	u
op	24:26	0:0	4	.
water	24:27	0:0	4	es_bool
op	24:34	0:0	4	.
water	24:35	0:0	4	p_es
op	24:40	0:0	4	=
water	24:42	0:0	4	(
water	24:43	0:0	4	es_out_id_t
op	24:54	0:0	4	*
water	24:55	0:0	4	)
call	24:56	24:84	4	va_arg
arg	24:64	24:68	5	args
water	24:64	0:0	6	args
arg	24:70	24:84	5	es_out_id_t*
water	24:70	0:0	6	es_out_id_t
op	24:82	0:0	6	*
water	24:85	0:0	4	;
water	25:8	0:0	4	p_cmd
op	25:13	0:0	4	->
water	25:15	0:0	4	u
op	25:16	0:0	4	.
water	25:17	0:0	4	control
op	25:24	0:0	4	.
water	25:25	0:0	4	u
op	25:26	0:0	4	.
water	25:27	0:0	4	es_bool
op	25:34	0:0	4	.
water	25:35	0:0	4	b_bool
op	25:42	0:0	4	=
water	25:44	0:0	4	(
water	25:45	0:0	4	bool
water	25:49	0:0	4	)
call	25:50	25:68	4	va_arg
arg	25:58	25:62	5	args
water	25:58	0:0	6	args
arg	25:64	25:68	5	int
water	25:64	0:0	6	int
water	25:69	0:0	4	;
break	26:8	26:13	4	
label	27:4	27:25	4	case ES_OUT_RESET_PCR :
label	28:4	28:23	4	case ES_OUT_SET_EOS :
break	29:8	29:13	4	
label	30:4	30:24	4	case ES_OUT_SET_META :
label	31:4	31:30	4	case ES_OUT_SET_GROUP_META :
water	32:4	0:0	4	{
if	33:8	34:72	4	(i_query == ES_OUT_SET_GROUP_META)
cond	33:12	33:23	5	i_query == ES_OUT_SET_GROUP_META
water	33:12	0:0	6	i_query
op	33:20	0:0	6	==
water	33:23	0:0	6	ES_OUT_SET_GROUP_META
stmts	34:12	34:72	5	
water	34:12	0:0	6	p_cmd
op	34:17	0:0	6	->
water	34:19	0:0	6	u
op	34:20	0:0	6	.
water	34:21	0:0	6	control
op	34:28	0:0	6	.
water	34:29	0:0	6	u
op	34:30	0:0	6	.
water	34:31	0:0	6	int_meta
op	34:39	0:0	6	.
water	34:40	0:0	6	i_int
op	34:46	0:0	6	=
water	34:48	0:0	6	(
water	34:49	0:0	6	int
water	34:52	0:0	6	)
call	34:53	34:71	6	va_arg
arg	34:61	34:65	7	args
water	34:61	0:0	8	args
arg	34:67	34:71	7	int
water	34:67	0:0	8	int
water	34:72	0:0	6	;
decl	35:8	35:69	4	const vlc_meta_t	*p_meta
op	35:33	0:0	4	=
call	35:35	35:68	5	va_arg
arg	35:43	35:47	6	args
water	35:43	0:0	7	args
arg	35:49	35:68	6	constvlc_meta_t*
water	35:49	0:0	7	const
water	35:55	0:0	7	vlc_meta_t
op	35:66	0:0	7	*
if	36:8	42:8	4	(b_copy)
cond	36:12	36:12	5	b_copy
water	36:12	0:0	6	b_copy
stmts	37:8	42:8	5	
water	37:8	0:0	6	{
water	38:12	0:0	6	p_cmd
op	38:17	0:0	6	->
water	38:19	0:0	6	u
op	38:20	0:0	6	.
water	38:21	0:0	6	control
op	38:28	0:0	6	.
water	38:29	0:0	6	u
op	38:30	0:0	6	.
water	38:31	0:0	6	int_meta
op	38:39	0:0	6	.
water	38:40	0:0	6	p_meta
op	38:47	0:0	6	=
call	38:49	38:62	6	vlc_meta_New
water	38:63	0:0	6	;
if	39:12	40:35	6	(! p_cmd -> u . control . u . int_meta . p_meta)
cond	39:16	39:45	7	! p_cmd -> u . control . u . int_meta . p_meta
op	39:16	0:0	8	!
water	39:17	0:0	8	p_cmd
op	39:22	0:0	8	->
water	39:24	0:0	8	u
op	39:25	0:0	8	.
water	39:26	0:0	8	control
op	39:33	0:0	8	.
water	39:34	0:0	8	u
op	39:35	0:0	8	.
water	39:36	0:0	8	int_meta
op	39:44	0:0	8	.
water	39:45	0:0	8	p_meta
stmts	40:16	40:35	7	
return	40:16	40:35	8	VLC_EGENERIC
water	40:23	0:0	9	VLC_EGENERIC
call	41:12	41:71	6	vlc_meta_Merge
arg	41:28	41:62	7	p_cmd->u.control.u.int_meta.p_meta
water	41:28	0:0	8	p_cmd
op	41:33	0:0	8	->
water	41:35	0:0	8	u
op	41:36	0:0	8	.
water	41:37	0:0	8	control
op	41:44	0:0	8	.
water	41:45	0:0	8	u
op	41:46	0:0	8	.
water	41:47	0:0	8	int_meta
op	41:55	0:0	8	.
water	41:56	0:0	8	p_meta
arg	41:64	41:71	7	p_meta
water	41:64	0:0	8	p_meta
water	41:72	0:0	6	;
water	42:8	0:0	6	}
else	43:8	47:8	4
stmts	44:8	47:8	5	
water	44:8	0:0	6	{
water	46:12	0:0	6	p_cmd
op	46:17	0:0	6	->
water	46:19	0:0	6	u
op	46:20	0:0	6	.
water	46:21	0:0	6	control
op	46:28	0:0	6	.
water	46:29	0:0	6	u
op	46:30	0:0	6	.
water	46:31	0:0	6	int_meta
op	46:39	0:0	6	.
water	46:40	0:0	6	p_meta
op	46:47	0:0	6	=
water	46:49	0:0	6	(
water	46:50	0:0	6	vlc_meta_t
op	46:60	0:0	6	*
water	46:61	0:0	6	)
water	46:62	0:0	6	p_meta
water	46:68	0:0	6	;
water	47:8	0:0	6	}
break	48:8	48:13	4	
water	49:4	0:0	4	}
label	50:4	50:29	4	case ES_OUT_SET_GROUP_EPG :
water	51:4	0:0	4	{
water	52:8	0:0	4	p_cmd
op	52:13	0:0	4	->
water	52:15	0:0	4	u
op	52:16	0:0	4	.
water	52:17	0:0	4	control
op	52:24	0:0	4	.
water	52:25	0:0	4	u
op	52:26	0:0	4	.
water	52:27	0:0	4	int_epg
op	52:34	0:0	4	.
water	52:35	0:0	4	i_int
op	52:41	0:0	4	=
water	52:43	0:0	4	(
water	52:44	0:0	4	int
water	52:47	0:0	4	)
call	52:48	52:66	4	va_arg
arg	52:56	52:60	5	args
water	52:56	0:0	6	args
arg	52:62	52:66	5	int
water	52:62	0:0	6	int
water	52:67	0:0	4	;
decl	53:8	53:66	4	const vlc_epg_t	*p_epg
op	53:31	0:0	4	=
call	53:33	53:65	5	va_arg
arg	53:41	53:45	6	args
water	53:41	0:0	7	args
arg	53:47	53:65	6	constvlc_epg_t*
water	53:47	0:0	7	const
water	53:53	0:0	7	vlc_epg_t
op	53:63	0:0	7	*
if	54:8	70:8	4	(b_copy)
cond	54:12	54:12	5	b_copy
water	54:12	0:0	6	b_copy
stmts	55:8	70:8	5	
water	55:8	0:0	6	{
water	56:12	0:0	6	p_cmd
op	56:17	0:0	6	->
water	56:19	0:0	6	u
op	56:20	0:0	6	.
water	56:21	0:0	6	control
op	56:28	0:0	6	.
water	56:29	0:0	6	u
op	56:30	0:0	6	.
water	56:31	0:0	6	int_epg
op	56:38	0:0	6	.
water	56:39	0:0	6	p_epg
op	56:45	0:0	6	=
call	56:47	56:76	6	vlc_epg_New
arg	56:60	56:76	7	p_epg->psz_name
water	56:60	0:0	8	p_epg
op	56:65	0:0	8	->
water	56:67	0:0	8	psz_name
water	56:77	0:0	6	;
if	57:12	58:35	6	(! p_cmd -> u . control . u . int_epg . p_epg)
cond	57:16	57:44	7	! p_cmd -> u . control . u . int_epg . p_epg
op	57:16	0:0	8	!
water	57:17	0:0	8	p_cmd
op	57:22	0:0	8	->
water	57:24	0:0	8	u
op	57:25	0:0	8	.
water	57:26	0:0	8	control
op	57:33	0:0	8	.
water	57:34	0:0	8	u
op	57:35	0:0	8	.
water	57:36	0:0	8	int_epg
op	57:43	0:0	8	.
water	57:44	0:0	8	p_epg
stmts	58:16	58:35	7	
return	58:16	58:35	8	VLC_EGENERIC
water	58:23	0:0	9	VLC_EGENERIC
for	59:12	67:12	6	( int i = 0 ;i < p_epg -> i_event;i ++)
forinit	0:0	59:26	7	 int i = 0 ;
decl	59:17	59:26	8	int	i
op	59:23	0:0	8	=
water	59:25	0:0	8	0
cond	59:28	59:39	7	i < p_epg -> i_event
water	59:28	0:0	8	i
op	59:30	0:0	8	<
water	59:32	0:0	8	p_epg
op	59:37	0:0	8	->
water	59:39	0:0	8	i_event
forexpr	59:48	59:49	7	i ++
water	59:48	0:0	8	i
op	59:49	0:0	8	++
stmts	60:12	67:12	7	
water	60:12	0:0	8	{
decl	61:16	61:59	8	vlc_epg_event_t	*p_evt
op	61:39	0:0	8	=
water	61:41	0:0	8	p_epg
op	61:46	0:0	8	->
water	61:48	0:0	8	pp_event
op	61:56	0:0	8	[
water	61:57	0:0	8	i
op	61:58	0:0	8	]
call	62:16	66:60	8	vlc_epg_AddEvent
arg	62:34	62:66	9	p_cmd->u.control.u.int_epg.p_epg
water	62:34	0:0	10	p_cmd
op	62:39	0:0	10	->
water	62:41	0:0	10	u
op	62:42	0:0	10	.
water	62:43	0:0	10	control
op	62:50	0:0	10	.
water	62:51	0:0	10	u
op	62:52	0:0	10	.
water	62:53	0:0	10	int_epg
op	62:60	0:0	10	.
water	62:61	0:0	10	p_epg
arg	63:34	63:48	9	p_evt->i_start
water	63:34	0:0	10	p_evt
op	63:39	0:0	10	->
water	63:41	0:0	10	i_start
arg	63:50	63:67	9	p_evt->i_duration
water	63:50	0:0	10	p_evt
op	63:55	0:0	10	->
water	63:57	0:0	10	i_duration
arg	64:34	64:49	9	p_evt->psz_name
water	64:34	0:0	10	p_evt
op	64:39	0:0	10	->
water	64:41	0:0	10	psz_name
arg	65:34	65:62	9	p_evt->psz_short_description
water	65:34	0:0	10	p_evt
op	65:39	0:0	10	->
water	65:41	0:0	10	psz_short_description
arg	66:34	66:56	9	p_evt->psz_description
water	66:34	0:0	10	p_evt
op	66:39	0:0	10	->
water	66:41	0:0	10	psz_description
arg	66:58	66:60	9	0
water	66:58	0:0	10	0
water	66:61	0:0	8	;
water	67:12	0:0	8	}
call	68:12	69:82	6	vlc_epg_SetCurrent
arg	68:32	68:64	7	p_cmd->u.control.u.int_epg.p_epg
water	68:32	0:0	8	p_cmd
op	68:37	0:0	8	->
water	68:39	0:0	8	u
op	68:40	0:0	8	.
water	68:41	0:0	8	control
op	68:48	0:0	8	.
water	68:49	0:0	8	u
op	68:50	0:0	8	.
water	68:51	0:0	8	int_epg
op	68:58	0:0	8	.
water	68:59	0:0	8	p_epg
arg	69:32	69:82	7	p_epg->p_current?p_epg->p_current->i_start:-1
water	69:32	0:0	8	p_epg
op	69:37	0:0	8	->
water	69:39	0:0	8	p_current
water	69:49	0:0	8	?
water	69:51	0:0	8	p_epg
op	69:56	0:0	8	->
water	69:58	0:0	8	p_current
op	69:67	0:0	8	->
water	69:69	0:0	8	i_start
water	69:77	0:0	8	:
op	69:79	0:0	8	-
water	69:80	0:0	8	1
water	69:83	0:0	6	;
water	70:8	0:0	6	}
else	71:8	75:8	4
stmts	72:8	75:8	5	
water	72:8	0:0	6	{
water	74:12	0:0	6	p_cmd
op	74:17	0:0	6	->
water	74:19	0:0	6	u
op	74:20	0:0	6	.
water	74:21	0:0	6	control
op	74:28	0:0	6	.
water	74:29	0:0	6	u
op	74:30	0:0	6	.
water	74:31	0:0	6	int_epg
op	74:38	0:0	6	.
water	74:39	0:0	6	p_epg
op	74:45	0:0	6	=
water	74:47	0:0	6	(
water	74:48	0:0	6	vlc_epg_t
op	74:57	0:0	6	*
water	74:58	0:0	6	)
water	74:59	0:0	6	p_epg
water	74:64	0:0	6	;
water	75:8	0:0	6	}
break	76:8	76:13	4	
water	77:4	0:0	4	}
label	79:4	79:22	4	case ES_OUT_SET_ES :
label	80:4	80:26	4	case ES_OUT_RESTART_ES :
label	81:4	81:30	4	case ES_OUT_SET_ES_DEFAULT :
water	82:8	0:0	4	p_cmd
op	82:13	0:0	4	->
water	82:15	0:0	4	u
op	82:16	0:0	4	.
water	82:17	0:0	4	control
op	82:24	0:0	4	.
water	82:25	0:0	4	u
op	82:26	0:0	4	.
water	82:27	0:0	4	p_es
op	82:32	0:0	4	=
water	82:34	0:0	4	(
water	82:35	0:0	4	es_out_id_t
op	82:46	0:0	4	*
water	82:47	0:0	4	)
call	82:48	82:76	4	va_arg
arg	82:56	82:60	5	args
water	82:56	0:0	6	args
arg	82:62	82:76	5	es_out_id_t*
water	82:62	0:0	6	es_out_id_t
op	82:74	0:0	6	*
water	82:77	0:0	4	;
break	83:8	83:13	4	
label	84:4	84:28	4	case ES_OUT_SET_ES_STATE :
water	85:8	0:0	4	p_cmd
op	85:13	0:0	4	->
water	85:15	0:0	4	u
op	85:16	0:0	4	.
water	85:17	0:0	4	control
op	85:24	0:0	4	.
water	85:25	0:0	4	u
op	85:26	0:0	4	.
water	85:27	0:0	4	es_bool
op	85:34	0:0	4	.
water	85:35	0:0	4	p_es
op	85:40	0:0	4	=
water	85:42	0:0	4	(
water	85:43	0:0	4	es_out_id_t
op	85:54	0:0	4	*
water	85:55	0:0	4	)
call	85:56	85:84	4	va_arg
arg	85:64	85:68	5	args
water	85:64	0:0	6	args
arg	85:70	85:84	5	es_out_id_t*
water	85:70	0:0	6	es_out_id_t
op	85:82	0:0	6	*
water	85:85	0:0	4	;
water	86:8	0:0	4	p_cmd
op	86:13	0:0	4	->
water	86:15	0:0	4	u
op	86:16	0:0	4	.
water	86:17	0:0	4	control
op	86:24	0:0	4	.
water	86:25	0:0	4	u
op	86:26	0:0	4	.
water	86:27	0:0	4	es_bool
op	86:34	0:0	4	.
water	86:35	0:0	4	b_bool
op	86:42	0:0	4	=
water	86:44	0:0	4	(
water	86:45	0:0	4	bool
water	86:49	0:0	4	)
call	86:50	86:68	4	va_arg
arg	86:58	86:62	5	args
water	86:58	0:0	6	args
arg	86:64	86:68	5	int
water	86:64	0:0	6	int
water	86:69	0:0	4	;
break	87:8	87:13	4	
label	88:4	88:26	4	case ES_OUT_SET_ES_FMT :
water	89:4	0:0	4	{
water	90:8	0:0	4	p_cmd
op	90:13	0:0	4	->
water	90:15	0:0	4	u
op	90:16	0:0	4	.
water	90:17	0:0	4	control
op	90:24	0:0	4	.
water	90:25	0:0	4	u
op	90:26	0:0	4	.
water	90:27	0:0	4	es_fmt
op	90:33	0:0	4	.
water	90:34	0:0	4	p_es
op	90:39	0:0	4	=
water	90:41	0:0	4	(
water	90:42	0:0	4	es_out_id_t
op	90:53	0:0	4	*
water	90:54	0:0	4	)
call	90:55	90:83	4	va_arg
arg	90:63	90:67	5	args
water	90:63	0:0	6	args
arg	90:69	90:83	5	es_out_id_t*
water	90:69	0:0	6	es_out_id_t
op	90:81	0:0	6	*
water	90:84	0:0	4	;
decl	91:8	91:72	4	es_format_t	*p_fmt
op	91:27	0:0	4	=
water	91:29	0:0	4	(
water	91:30	0:0	4	es_format_t
op	91:41	0:0	4	*
water	91:42	0:0	4	)
call	91:43	91:71	5	va_arg
arg	91:51	91:55	6	args
water	91:51	0:0	7	args
arg	91:57	91:71	6	es_format_t*
water	91:57	0:0	7	es_format_t
op	91:69	0:0	7	*
if	92:8	98:8	4	(b_copy)
cond	92:12	92:12	5	b_copy
water	92:12	0:0	6	b_copy
stmts	93:8	98:8	5	
water	93:8	0:0	6	{
water	94:12	0:0	6	p_cmd
op	94:17	0:0	6	->
water	94:19	0:0	6	u
op	94:20	0:0	6	.
water	94:21	0:0	6	control
op	94:28	0:0	6	.
water	94:29	0:0	6	u
op	94:30	0:0	6	.
water	94:31	0:0	6	es_fmt
op	94:37	0:0	6	.
water	94:38	0:0	6	p_fmt
op	94:44	0:0	6	=
call	94:46	94:69	6	malloc
arg	94:54	94:69	7	sizeof(*p_fmt)
op	94:54	0:0	8	sizeof
water	94:60	0:0	8	(
op	94:61	0:0	8	*
water	94:62	0:0	8	p_fmt
water	94:67	0:0	8	)
water	94:70	0:0	6	;
if	95:12	96:35	6	(! p_cmd -> u . control . u . es_fmt . p_fmt)
cond	95:16	95:43	7	! p_cmd -> u . control . u . es_fmt . p_fmt
op	95:16	0:0	8	!
water	95:17	0:0	8	p_cmd
op	95:22	0:0	8	->
water	95:24	0:0	8	u
op	95:25	0:0	8	.
water	95:26	0:0	8	control
op	95:33	0:0	8	.
water	95:34	0:0	8	u
op	95:35	0:0	8	.
water	95:36	0:0	8	es_fmt
op	95:42	0:0	8	.
water	95:43	0:0	8	p_fmt
stmts	96:16	96:35	7	
return	96:16	96:35	8	VLC_EGENERIC
water	96:23	0:0	9	VLC_EGENERIC
call	97:12	97:67	6	es_format_Copy
arg	97:28	97:59	7	p_cmd->u.control.u.es_fmt.p_fmt
water	97:28	0:0	8	p_cmd
op	97:33	0:0	8	->
water	97:35	0:0	8	u
op	97:36	0:0	8	.
water	97:37	0:0	8	control
op	97:44	0:0	8	.
water	97:45	0:0	8	u
op	97:46	0:0	8	.
water	97:47	0:0	8	es_fmt
op	97:53	0:0	8	.
water	97:54	0:0	8	p_fmt
arg	97:61	97:67	7	p_fmt
water	97:61	0:0	8	p_fmt
water	97:68	0:0	6	;
water	98:8	0:0	6	}
else	99:8	102:8	4
stmts	100:8	102:8	5	
water	100:8	0:0	6	{
water	101:12	0:0	6	p_cmd
op	101:17	0:0	6	->
water	101:19	0:0	6	u
op	101:20	0:0	6	.
water	101:21	0:0	6	control
op	101:28	0:0	6	.
water	101:29	0:0	6	u
op	101:30	0:0	6	.
water	101:31	0:0	6	es_fmt
op	101:37	0:0	6	.
water	101:38	0:0	6	p_fmt
op	101:44	0:0	6	=
water	101:46	0:0	6	p_fmt
water	101:51	0:0	6	;
water	102:8	0:0	6	}
break	103:8	103:13	4	
water	104:4	0:0	4	}
label	105:4	105:25	4	case ES_OUT_SET_TIMES :
water	106:4	0:0	4	{
decl	107:8	107:58	4	double	f_position
op	107:26	0:0	4	=
water	107:28	0:0	4	(
water	107:29	0:0	4	double
water	107:35	0:0	4	)
call	107:36	107:57	5	va_arg
arg	107:44	107:48	6	args
water	107:44	0:0	7	args
arg	107:50	107:57	6	double
water	107:50	0:0	7	double
decl	108:8	108:57	4	mtime_t	i_time
op	108:23	0:0	4	=
water	108:25	0:0	4	(
water	108:26	0:0	4	mtime_t
water	108:33	0:0	4	)
call	108:34	108:56	5	va_arg
arg	108:42	108:46	6	args
water	108:42	0:0	7	args
arg	108:48	108:56	6	mtime_t
water	108:48	0:0	7	mtime_t
decl	109:8	109:59	4	mtime_t	i_length
op	109:25	0:0	4	=
water	109:27	0:0	4	(
water	109:28	0:0	4	mtime_t
water	109:35	0:0	4	)
call	109:36	109:58	5	va_arg
arg	109:44	109:48	6	args
water	109:44	0:0	7	args
arg	109:50	109:58	6	mtime_t
water	109:50	0:0	7	mtime_t
water	110:8	0:0	4	p_cmd
op	110:13	0:0	4	->
water	110:15	0:0	4	u
op	110:16	0:0	4	.
water	110:17	0:0	4	control
op	110:24	0:0	4	.
water	110:25	0:0	4	u
op	110:26	0:0	4	.
water	110:27	0:0	4	times
op	110:32	0:0	4	.
water	110:33	0:0	4	f_position
op	110:44	0:0	4	=
water	110:46	0:0	4	f_position
water	110:56	0:0	4	;
water	111:8	0:0	4	p_cmd
op	111:13	0:0	4	->
water	111:15	0:0	4	u
op	111:16	0:0	4	.
water	111:17	0:0	4	control
op	111:24	0:0	4	.
water	111:25	0:0	4	u
op	111:26	0:0	4	.
water	111:27	0:0	4	times
op	111:32	0:0	4	.
water	111:33	0:0	4	i_time
op	111:40	0:0	4	=
water	111:42	0:0	4	i_time
water	111:48	0:0	4	;
water	112:8	0:0	4	p_cmd
op	112:13	0:0	4	->
water	112:15	0:0	4	u
op	112:16	0:0	4	.
water	112:17	0:0	4	control
op	112:24	0:0	4	.
water	112:25	0:0	4	u
op	112:26	0:0	4	.
water	112:27	0:0	4	times
op	112:32	0:0	4	.
water	112:33	0:0	4	i_length
op	112:42	0:0	4	=
water	112:44	0:0	4	i_length
water	112:52	0:0	4	;
break	113:8	113:13	4	
water	114:4	0:0	4	}
label	115:4	115:26	4	case ES_OUT_SET_JITTER :
water	116:4	0:0	4	{
decl	117:8	117:62	4	mtime_t	i_pts_delay
op	117:28	0:0	4	=
water	117:30	0:0	4	(
water	117:31	0:0	4	mtime_t
water	117:38	0:0	4	)
call	117:39	117:61	5	va_arg
arg	117:47	117:51	6	args
water	117:47	0:0	7	args
arg	117:53	117:61	6	mtime_t
water	117:53	0:0	7	mtime_t
decl	118:8	118:63	4	mtime_t	i_pts_jitter
op	118:29	0:0	4	=
water	118:31	0:0	4	(
water	118:32	0:0	4	mtime_t
water	118:39	0:0	4	)
call	118:40	118:62	5	va_arg
arg	118:48	118:52	6	args
water	118:48	0:0	7	args
arg	118:54	118:62	6	mtime_t
water	118:54	0:0	7	mtime_t
decl	119:8	119:55	4	int	i_cr_average
op	119:29	0:0	4	=
water	119:31	0:0	4	(
water	119:32	0:0	4	int
water	119:35	0:0	4	)
call	119:36	119:54	5	va_arg
arg	119:44	119:48	6	args
water	119:44	0:0	7	args
arg	119:50	119:54	6	int
water	119:50	0:0	7	int
water	120:8	0:0	4	p_cmd
op	120:13	0:0	4	->
water	120:15	0:0	4	u
op	120:16	0:0	4	.
water	120:17	0:0	4	control
op	120:24	0:0	4	.
water	120:25	0:0	4	u
op	120:26	0:0	4	.
water	120:27	0:0	4	jitter
op	120:33	0:0	4	.
water	120:34	0:0	4	i_pts_delay
op	120:46	0:0	4	=
water	120:48	0:0	4	i_pts_delay
water	120:59	0:0	4	;
water	121:8	0:0	4	p_cmd
op	121:13	0:0	4	->
water	121:15	0:0	4	u
op	121:16	0:0	4	.
water	121:17	0:0	4	control
op	121:24	0:0	4	.
water	121:25	0:0	4	u
op	121:26	0:0	4	.
water	121:27	0:0	4	jitter
op	121:33	0:0	4	.
water	121:34	0:0	4	i_pts_jitter
op	121:47	0:0	4	=
water	121:49	0:0	4	i_pts_jitter
water	121:61	0:0	4	;
water	122:8	0:0	4	p_cmd
op	122:13	0:0	4	->
water	122:15	0:0	4	u
op	122:16	0:0	4	.
water	122:17	0:0	4	control
op	122:24	0:0	4	.
water	122:25	0:0	4	u
op	122:26	0:0	4	.
water	122:27	0:0	4	jitter
op	122:33	0:0	4	.
water	122:34	0:0	4	i_cr_average
op	122:47	0:0	4	=
water	122:49	0:0	4	i_cr_average
water	122:61	0:0	4	;
break	123:8	123:13	4	
water	124:4	0:0	4	}
label	125:4	125:11	4	default :
call	126:8	126:16	4	assert
arg	126:15	126:16	5	0
water	126:15	0:0	6	0
water	126:17	0:0	4	;
return	127:8	127:27	4	VLC_EGENERIC
water	127:15	0:0	5	VLC_EGENERIC
water	128:4	0:0	4	}
return	129:4	129:22	2	VLC_SUCCESS
water	129:11	0:0	3	VLC_SUCCESS

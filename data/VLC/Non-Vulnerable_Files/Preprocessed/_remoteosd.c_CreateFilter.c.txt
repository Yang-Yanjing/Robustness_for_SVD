func	2:0	75:0	0	static int	CreateFilter
params	2:24	0:0	1	
param	2:26	2:47	2	vlc_object_t *	p_this
stmnts	0:0	74:23	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:30	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	NULL
call	6:4	6:52	2	msg_Dbg
arg	6:13	6:21	3	p_filter
water	6:13	0:0	4	p_filter
arg	6:23	6:52	3	"Creating vnc osd filter..."
water	6:23	0:0	4	"Creating vnc osd filter..."
water	6:53	0:0	2	;
water	7:4	0:0	2	p_filter
op	7:12	0:0	2	->
water	7:14	0:0	2	p_sys
op	7:20	0:0	2	=
water	7:22	0:0	2	p_sys
op	7:28	0:0	2	=
call	7:30	7:56	2	calloc
arg	7:38	7:39	3	1
water	7:38	0:0	4	1
arg	7:41	7:56	3	sizeof(*p_sys)
op	7:41	0:0	4	sizeof
water	7:47	0:0	4	(
op	7:48	0:0	4	*
water	7:49	0:0	4	p_sys
water	7:54	0:0	4	)
water	7:57	0:0	2	;
if	8:4	9:25	2	(! p_filter -> p_sys)
cond	8:8	8:19	3	! p_filter -> p_sys
op	8:8	0:0	4	!
water	8:9	0:0	4	p_filter
op	8:17	0:0	4	->
water	8:19	0:0	4	p_sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
call	11:4	11:33	2	vlc_mutex_init
arg	11:20	11:33	3	&p_sys->lock
op	11:20	0:0	4	&
water	11:21	0:0	4	p_sys
op	11:26	0:0	4	->
water	11:28	0:0	4	lock
water	11:34	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	b_continue
op	12:22	0:0	2	=
water	12:24	0:0	2	true
water	12:28	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	i_socket
op	13:20	0:0	2	=
op	13:22	0:0	2	-
water	13:23	0:0	2	1
water	13:24	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	p_pic
op	14:17	0:0	2	=
water	14:19	0:0	2	NULL
water	14:23	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	psz_host
op	15:20	0:0	2	=
call	15:22	15:69	2	var_CreateGetString
arg	15:43	15:49	3	p_this
water	15:43	0:0	4	p_this
arg	15:51	15:69	3	RMTOSD_CFG"host"
water	15:51	0:0	4	RMTOSD_CFG
water	15:62	0:0	4	"host"
water	15:70	0:0	2	;
if	16:4	20:4	2	(EMPTY_STR (p_sys -> psz_host ))
cond	16:8	16:33	3	EMPTY_STR (p_sys -> psz_host )
call	16:8	16:33	4	EMPTY_STR
arg	16:18	16:33	5	p_sys->psz_host
water	16:18	0:0	6	p_sys
op	16:23	0:0	6	->
water	16:25	0:0	6	psz_host
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:52	4	msg_Err
arg	18:17	18:25	5	p_filter
water	18:17	0:0	6	p_filter
arg	18:27	18:52	5	"unable to get vnc host"
water	18:27	0:0	6	"unable to get vnc host"
water	18:53	0:0	4	;
goto	19:8	19:18	4	error
water	19:13	0:0	5	error
water	20:4	0:0	4	}
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	psz_passwd
op	21:22	0:0	2	=
call	21:24	21:75	2	var_CreateGetString
arg	21:45	21:51	3	p_this
water	21:45	0:0	4	p_this
arg	21:53	21:75	3	RMTOSD_CFG"password"
water	21:53	0:0	4	RMTOSD_CFG
water	21:64	0:0	4	"password"
water	21:76	0:0	2	;
if	22:4	26:4	2	(! p_sys -> psz_passwd)
cond	22:8	22:16	3	! p_sys -> psz_passwd
op	22:8	0:0	4	!
water	22:9	0:0	4	p_sys
op	22:14	0:0	4	->
water	22:16	0:0	4	psz_passwd
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:56	4	msg_Err
arg	24:17	24:25	5	p_filter
water	24:17	0:0	6	p_filter
arg	24:27	24:56	5	"unable to get vnc password"
water	24:27	0:0	6	"unable to get vnc password"
water	24:57	0:0	4	;
goto	25:8	25:18	4	error
water	25:13	0:0	5	error
water	26:4	0:0	4	}
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	i_port
op	27:18	0:0	2	=
call	27:20	27:75	2	var_CreateGetIntegerCommand
arg	27:49	27:55	3	p_this
water	27:49	0:0	4	p_this
arg	27:57	27:75	3	RMTOSD_CFG"port"
water	27:57	0:0	4	RMTOSD_CFG
water	27:68	0:0	4	"port"
water	27:76	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	i_alpha
op	28:19	0:0	2	=
call	28:21	28:77	2	var_CreateGetIntegerCommand
arg	28:50	28:56	3	p_this
water	28:50	0:0	4	p_this
arg	28:58	28:77	3	RMTOSD_CFG"alpha"
water	28:58	0:0	4	RMTOSD_CFG
water	28:69	0:0	4	"alpha"
water	28:78	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_vnc_poll_interval
op	30:32	0:0	2	=
call	30:34	31:75	2	var_CreateGetIntegerCommand
arg	30:63	30:69	3	p_this
water	30:63	0:0	4	p_this
arg	31:55	31:75	3	RMTOSD_CFG"update"
water	31:55	0:0	4	RMTOSD_CFG
water	31:66	0:0	4	"update"
water	31:76	0:0	2	;
if	32:4	35:4	2	(p_sys -> i_vnc_poll_interval < 100)
cond	32:9	32:38	3	p_sys -> i_vnc_poll_interval < 100
water	32:9	0:0	4	p_sys
op	32:14	0:0	4	->
water	32:16	0:0	4	i_vnc_poll_interval
op	32:36	0:0	4	<
water	32:38	0:0	4	100
stmts	33:4	35:4	3	
water	33:4	0:0	4	{
water	34:7	0:0	4	p_sys
op	34:12	0:0	4	->
water	34:14	0:0	4	i_vnc_poll_interval
op	34:34	0:0	4	=
water	34:36	0:0	4	100
water	34:39	0:0	4	;
water	35:4	0:0	4	}
for	36:4	42:4	2	( int i = 0 ;i < 256;i ++)
forinit	0:0	36:19	3	 int i = 0 ;
decl	36:10	36:19	4	int	i
op	36:16	0:0	4	=
water	36:18	0:0	4	0
cond	36:21	36:25	3	i < 256
water	36:21	0:0	4	i
op	36:23	0:0	4	<
water	36:25	0:0	4	256
forexpr	36:30	36:31	3	i ++
water	36:30	0:0	4	i
op	36:31	0:0	4	++
stmts	37:4	42:4	3	
water	37:4	0:0	4	{
water	38:8	0:0	4	p_sys
op	38:13	0:0	4	->
water	38:15	0:0	4	ar_color_table_yuv
op	38:33	0:0	4	[
water	38:34	0:0	4	i
op	38:35	0:0	4	]
op	38:36	0:0	4	[
water	38:37	0:0	4	0
op	38:38	0:0	4	]
op	38:40	0:0	4	=
water	38:42	0:0	4	255
water	38:45	0:0	4	;
water	39:8	0:0	4	p_sys
op	39:13	0:0	4	->
water	39:15	0:0	4	ar_color_table_yuv
op	39:33	0:0	4	[
water	39:34	0:0	4	i
op	39:35	0:0	4	]
op	39:36	0:0	4	[
water	39:37	0:0	4	1
op	39:38	0:0	4	]
op	39:40	0:0	4	=
water	39:42	0:0	4	255
water	39:45	0:0	4	;
water	40:8	0:0	4	p_sys
op	40:13	0:0	4	->
water	40:15	0:0	4	ar_color_table_yuv
op	40:33	0:0	4	[
water	40:34	0:0	4	i
op	40:35	0:0	4	]
op	40:36	0:0	4	[
water	40:37	0:0	4	2
op	40:38	0:0	4	]
op	40:40	0:0	4	=
water	40:42	0:0	4	255
water	40:45	0:0	4	;
water	41:8	0:0	4	p_sys
op	41:13	0:0	4	->
water	41:15	0:0	4	ar_color_table_yuv
op	41:33	0:0	4	[
water	41:34	0:0	4	i
op	41:35	0:0	4	]
op	41:36	0:0	4	[
water	41:37	0:0	4	3
op	41:38	0:0	4	]
op	41:40	0:0	4	=
water	41:42	0:0	4	255
water	41:45	0:0	4	;
water	42:4	0:0	4	}
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	b_vnc_poll
op	43:22	0:0	2	=
call	43:24	44:69	2	var_CreateGetBoolCommand
arg	43:50	43:56	3	p_this
water	43:50	0:0	4	p_this
arg	44:44	44:69	3	RMTOSD_CFG"vnc-polling"
water	44:44	0:0	4	RMTOSD_CFG
water	44:55	0:0	4	"vnc-polling"
water	44:70	0:0	2	;
water	45:4	0:0	2	p_sys
op	45:9	0:0	2	->
water	45:11	0:0	2	b_vnc_mouse_events
op	45:30	0:0	2	=
call	45:32	46:70	2	var_CreateGetBoolCommand
arg	45:58	45:64	3	p_this
water	45:58	0:0	4	p_this
arg	46:44	46:70	3	RMTOSD_CFG"mouse-events"
water	46:44	0:0	4	RMTOSD_CFG
water	46:55	0:0	4	"mouse-events"
water	46:71	0:0	2	;
water	47:4	0:0	2	p_sys
op	47:9	0:0	2	->
water	47:11	0:0	2	b_vnc_key_events
op	47:28	0:0	2	=
call	47:30	48:68	2	var_CreateGetBoolCommand
arg	47:56	47:62	3	p_this
water	47:56	0:0	4	p_this
arg	48:44	48:68	3	RMTOSD_CFG"key-events"
water	48:44	0:0	4	RMTOSD_CFG
water	48:55	0:0	4	"key-events"
water	48:69	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	b_need_update
op	50:26	0:0	2	=
water	50:28	0:0	2	false
water	50:33	0:0	2	;
water	52:4	0:0	2	p_filter
op	52:12	0:0	2	->
water	52:14	0:0	2	pf_sub_source
op	52:28	0:0	2	=
water	52:30	0:0	2	Filter
water	52:36	0:0	2	;
water	53:4	0:0	2	p_filter
op	53:12	0:0	2	->
water	53:14	0:0	2	pf_sub_mouse
op	53:28	0:0	2	=
water	53:30	0:0	2	MouseEvent
water	53:40	0:0	2	;
call	54:4	54:73	2	var_AddCallback
arg	54:21	54:39	3	p_filter->p_libvlc
water	54:21	0:0	4	p_filter
op	54:29	0:0	4	->
water	54:31	0:0	4	p_libvlc
arg	54:41	54:54	3	"key-pressed"
water	54:41	0:0	4	"key-pressed"
arg	54:56	54:64	3	KeyEvent
water	54:56	0:0	4	KeyEvent
arg	54:66	54:73	3	p_this
water	54:66	0:0	4	p_this
water	54:74	0:0	2	;
call	55:4	55:62	2	es_format_Init
arg	55:20	55:38	3	&p_filter->fmt_out
op	55:20	0:0	4	&
water	55:21	0:0	4	p_filter
op	55:29	0:0	4	->
water	55:31	0:0	4	fmt_out
arg	55:40	55:46	3	SPU_ES
water	55:40	0:0	4	SPU_ES
arg	55:48	55:62	3	VLC_CODEC_SPU
water	55:48	0:0	4	VLC_CODEC_SPU
water	55:63	0:0	2	;
water	56:4	0:0	2	p_filter
op	56:12	0:0	2	->
water	56:14	0:0	2	fmt_out
op	56:21	0:0	2	.
water	56:22	0:0	2	i_priority
op	56:33	0:0	2	=
water	56:35	0:0	2	ES_PRIORITY_SELECTABLE_MIN
water	56:61	0:0	2	;
call	57:4	57:20	2	vlc_gcrypt_init
water	57:21	0:0	2	;
if	59:4	64:4	2	(vlc_clone (& p_sys -> worker_thread ,vnc_worker_thread ,p_filter ,VLC_THREAD_PRIORITY_LOW ))
cond	59:8	60:72	3	vlc_clone (& p_sys -> worker_thread ,vnc_worker_thread ,p_filter ,VLC_THREAD_PRIORITY_LOW )
call	59:8	60:72	4	vlc_clone
arg	59:19	59:40	5	&p_sys->worker_thread
op	59:19	0:0	6	&
water	59:20	0:0	6	p_sys
op	59:25	0:0	6	->
water	59:27	0:0	6	worker_thread
arg	60:19	60:36	5	vnc_worker_thread
water	60:19	0:0	6	vnc_worker_thread
arg	60:38	60:46	5	p_filter
water	60:38	0:0	6	p_filter
arg	60:48	60:72	5	VLC_THREAD_PRIORITY_LOW
water	60:48	0:0	6	VLC_THREAD_PRIORITY_LOW
stmts	61:4	64:4	3	
water	61:4	0:0	4	{
call	62:8	62:68	4	msg_Err
arg	62:17	62:25	5	p_filter
water	62:17	0:0	6	p_filter
arg	62:27	62:68	5	"cannot spawn vnc message reader thread"
water	62:27	0:0	6	"cannot spawn vnc message reader thread"
water	62:69	0:0	4	;
goto	63:8	63:18	4	error
water	63:13	0:0	5	error
water	64:4	0:0	4	}
call	65:4	65:47	2	msg_Dbg
arg	65:13	65:21	3	p_filter
water	65:13	0:0	4	p_filter
arg	65:23	65:47	3	"osdvnc filter started"
water	65:23	0:0	4	"osdvnc filter started"
water	65:48	0:0	2	;
return	66:4	66:22	2	VLC_SUCCESS
water	66:11	0:0	3	VLC_SUCCESS
label	67:0	67:5	2	error :
call	68:4	68:49	2	msg_Err
arg	68:13	68:21	3	p_filter
water	68:13	0:0	4	p_filter
arg	68:23	68:49	3	"osdvnc filter discarded"
water	68:23	0:0	4	"osdvnc filter discarded"
water	68:50	0:0	2	;
call	69:4	69:26	2	stop_osdvnc
arg	69:17	69:26	3	p_filter
water	69:17	0:0	4	p_filter
water	69:27	0:0	2	;
call	70:4	70:36	2	vlc_mutex_destroy
arg	70:23	70:36	3	&p_sys->lock
op	70:23	0:0	4	&
water	70:24	0:0	4	p_sys
op	70:29	0:0	4	->
water	70:31	0:0	4	lock
water	70:37	0:0	2	;
call	71:4	71:26	2	free
arg	71:10	71:26	3	p_sys->psz_host
water	71:10	0:0	4	p_sys
op	71:15	0:0	4	->
water	71:17	0:0	4	psz_host
water	71:27	0:0	2	;
call	72:4	72:28	2	free
arg	72:10	72:28	3	p_sys->psz_passwd
water	72:10	0:0	4	p_sys
op	72:15	0:0	4	->
water	72:17	0:0	4	psz_passwd
water	72:29	0:0	2	;
call	73:4	73:16	2	free
arg	73:10	73:16	3	p_sys
water	73:10	0:0	4	p_sys
water	73:17	0:0	2	;
return	74:4	74:23	2	VLC_EGENERIC
water	74:11	0:0	3	VLC_EGENERIC

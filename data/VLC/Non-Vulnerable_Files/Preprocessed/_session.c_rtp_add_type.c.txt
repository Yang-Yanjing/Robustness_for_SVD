func	2:0	24:0	0	int	rtp_add_type
params	2:17	0:0	1	
param	2:18	2:32	2	demux_t *	demux
param	2:34	2:52	2	rtp_session_t *	ses
param	2:54	2:72	2	const rtp_pt_t *	pt
stmnts	4:4	23:12	1	
if	4:4	8:4	2	(ses -> srcc > 0)
cond	4:8	4:20	3	ses -> srcc > 0
water	4:8	0:0	4	ses
op	4:11	0:0	4	->
water	4:13	0:0	4	srcc
op	4:18	0:0	4	>
water	4:20	0:0	4	0
stmts	5:4	8:4	3	
water	5:4	0:0	4	{
call	6:8	6:74	4	msg_Err
arg	6:17	6:22	5	demux
water	6:17	0:0	6	demux
arg	6:24	6:74	5	"cannot change RTP payload formats during session"
water	6:24	0:0	6	"cannot change RTP payload formats during session"
water	6:75	0:0	4	;
return	7:8	7:21	4	EINVAL
water	7:15	0:0	5	EINVAL
water	8:4	0:0	4	}
decl	9:4	9:74	2	rtp_pt_t	*ppt
op	9:18	0:0	2	=
call	9:20	9:73	3	realloc
arg	9:29	9:37	4	ses->ptv
water	9:29	0:0	5	ses
op	9:32	0:0	5	->
water	9:34	0:0	5	ptv
arg	9:39	9:73	4	(ses->ptc+1)*sizeof(rtp_pt_t)
water	9:39	0:0	5	(
water	9:40	0:0	5	ses
op	9:43	0:0	5	->
water	9:45	0:0	5	ptc
op	9:49	0:0	5	+
water	9:51	0:0	5	1
water	9:52	0:0	5	)
op	9:54	0:0	5	*
op	9:56	0:0	5	sizeof
water	9:63	0:0	5	(
water	9:64	0:0	5	rtp_pt_t
water	9:72	0:0	5	)
if	10:4	11:21	2	(ppt == NULL)
cond	10:8	10:15	3	ppt == NULL
water	10:8	0:0	4	ppt
op	10:12	0:0	4	==
water	10:15	0:0	4	NULL
stmts	11:8	11:21	3	
return	11:8	11:21	4	ENOMEM
water	11:15	0:0	5	ENOMEM
water	12:4	0:0	2	ses
op	12:7	0:0	2	->
water	12:9	0:0	2	ptv
op	12:13	0:0	2	=
water	12:15	0:0	2	ppt
water	12:18	0:0	2	;
water	13:4	0:0	2	ppt
op	13:8	0:0	2	+=
water	13:11	0:0	2	ses
op	13:14	0:0	2	->
water	13:16	0:0	2	ptc
op	13:19	0:0	2	++
water	13:21	0:0	2	;
water	14:4	0:0	2	ppt
op	14:7	0:0	2	->
water	14:9	0:0	2	init
op	14:14	0:0	2	=
water	14:16	0:0	2	pt
op	14:18	0:0	2	->
water	14:20	0:0	2	init
water	14:25	0:0	2	?
water	14:27	0:0	2	pt
op	14:29	0:0	2	->
water	14:31	0:0	2	init
water	14:36	0:0	2	:
water	14:38	0:0	2	no_init
water	14:45	0:0	2	;
water	15:4	0:0	2	ppt
op	15:7	0:0	2	->
water	15:9	0:0	2	destroy
op	15:17	0:0	2	=
water	15:19	0:0	2	pt
op	15:21	0:0	2	->
water	15:23	0:0	2	destroy
water	15:31	0:0	2	?
water	15:33	0:0	2	pt
op	15:35	0:0	2	->
water	15:37	0:0	2	destroy
water	15:45	0:0	2	:
water	15:47	0:0	2	no_destroy
water	15:57	0:0	2	;
water	16:4	0:0	2	ppt
op	16:7	0:0	2	->
water	16:9	0:0	2	decode
op	16:16	0:0	2	=
water	16:18	0:0	2	pt
op	16:20	0:0	2	->
water	16:22	0:0	2	decode
water	16:29	0:0	2	?
water	16:31	0:0	2	pt
op	16:33	0:0	2	->
water	16:35	0:0	2	decode
water	16:42	0:0	2	:
water	16:44	0:0	2	no_decode
water	16:53	0:0	2	;
water	17:4	0:0	2	ppt
op	17:7	0:0	2	->
water	17:9	0:0	2	frequency
op	17:19	0:0	2	=
water	17:21	0:0	2	pt
op	17:23	0:0	2	->
water	17:25	0:0	2	frequency
water	17:34	0:0	2	;
water	18:4	0:0	2	ppt
op	18:7	0:0	2	->
water	18:9	0:0	2	number
op	18:16	0:0	2	=
water	18:18	0:0	2	pt
op	18:20	0:0	2	->
water	18:22	0:0	2	number
water	18:28	0:0	2	;
call	19:4	20:40	2	msg_Dbg
arg	19:13	19:18	3	demux
water	19:13	0:0	4	demux
arg	19:20	19:68	3	"added payload type %"PRIu8" (f = %"PRIu32" Hz)"
water	19:20	0:0	4	"added payload type %"
water	19:42	0:0	4	PRIu8
water	19:47	0:0	4	" (f = %"
water	19:56	0:0	4	PRIu32
water	19:62	0:0	4	" Hz)"
arg	20:13	20:24	3	ppt->number
water	20:13	0:0	4	ppt
op	20:16	0:0	4	->
water	20:18	0:0	4	number
arg	20:26	20:40	3	ppt->frequency
water	20:26	0:0	4	ppt
op	20:29	0:0	4	->
water	20:31	0:0	4	frequency
water	20:41	0:0	2	;
call	21:4	21:30	2	assert
arg	21:12	21:30	3	ppt->frequency>0
water	21:12	0:0	4	ppt
op	21:15	0:0	4	->
water	21:17	0:0	4	frequency
op	21:27	0:0	4	>
water	21:29	0:0	4	0
water	21:31	0:0	2	;
water	22:4	0:0	2	(
water	22:5	0:0	2	void
water	22:9	0:0	2	)
water	22:10	0:0	2	demux
water	22:15	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

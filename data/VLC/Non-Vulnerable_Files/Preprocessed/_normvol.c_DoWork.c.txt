func	2:0	77:0	0	static block_t *	DoWork
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
param	2:44	2:62	2	block_t *	p_in_buf
stmnts	0:0	76:15	1	
decl	4:4	4:17	2	float	*pf_sum
decl	5:4	5:18	2	float	*pf_gain
decl	6:4	6:23	2	float	f_average
op	6:20	0:0	2	=
water	6:22	0:0	2	0
decl	7:4	7:17	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:17	2	int	i_chan
decl	8:4	8:42	2	int	i_samples
op	8:18	0:0	2	=
water	8:20	0:0	2	p_in_buf
op	8:28	0:0	2	->
water	8:30	0:0	2	i_nb_samples
decl	9:4	9:69	2	int	i_channels
op	9:19	0:0	2	=
call	9:21	9:68	3	aout_FormatNbChannels
arg	9:44	9:68	4	&p_filter->fmt_in.audio
op	9:44	0:0	5	&
water	9:45	0:0	5	p_filter
op	9:53	0:0	5	->
water	9:55	0:0	5	fmt_in
op	9:61	0:0	5	.
water	9:62	0:0	5	audio
decl	10:4	10:45	2	float	*p_out
op	10:17	0:0	2	=
water	10:19	0:0	2	(
water	10:20	0:0	2	float
op	10:25	0:0	2	*
water	10:26	0:0	2	)
water	10:27	0:0	2	p_in_buf
op	10:35	0:0	2	->
water	10:37	0:0	2	p_buffer
decl	11:4	11:45	2	float	*p_in
op	11:16	0:0	2	=
water	11:19	0:0	2	(
water	11:20	0:0	2	float
op	11:25	0:0	2	*
water	11:26	0:0	2	)
water	11:27	0:0	2	p_in_buf
op	11:35	0:0	2	->
water	11:37	0:0	2	p_buffer
decl	12:4	12:48	2	struct filter_sys_t	*p_sys
op	12:31	0:0	2	=
water	12:33	0:0	2	p_filter
op	12:41	0:0	2	->
water	12:43	0:0	2	p_sys
water	13:4	0:0	2	pf_sum
op	13:11	0:0	2	=
call	13:13	13:47	2	calloc
arg	13:21	13:31	3	i_channels
water	13:21	0:0	4	i_channels
arg	13:33	13:47	3	sizeof(float)
op	13:33	0:0	4	sizeof
water	13:39	0:0	4	(
water	13:40	0:0	4	float
water	13:45	0:0	4	)
water	13:48	0:0	2	;
if	14:4	15:16	2	(! pf_sum)
cond	14:8	14:9	3	! pf_sum
op	14:8	0:0	4	!
water	14:9	0:0	4	pf_sum
stmts	15:8	15:16	3	
goto	15:8	15:16	4	out
water	15:13	0:0	5	out
water	16:4	0:0	2	pf_gain
op	16:12	0:0	2	=
call	16:14	16:49	2	malloc
arg	16:22	16:49	3	sizeof(float)*i_channels
op	16:22	0:0	4	sizeof
water	16:28	0:0	4	(
water	16:29	0:0	4	float
water	16:34	0:0	4	)
op	16:36	0:0	4	*
water	16:38	0:0	4	i_channels
water	16:50	0:0	2	;
if	17:4	21:4	2	(! pf_gain)
cond	17:8	17:9	3	! pf_gain
op	17:8	0:0	4	!
water	17:9	0:0	4	pf_gain
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:21	4	free
arg	19:14	19:21	5	pf_sum
water	19:14	0:0	6	pf_sum
water	19:22	0:0	4	;
goto	20:8	20:16	4	out
water	20:13	0:0	5	out
water	21:4	0:0	4	}
for	23:4	31:4	2	(i = 0 ;i < i_samples;i ++)
forinit	23:9	23:15	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:15	0:0	4	;
cond	23:17	23:21	3	i < i_samples
water	23:17	0:0	4	i
op	23:19	0:0	4	<
water	23:21	0:0	4	i_samples
forexpr	23:32	23:33	3	i ++
water	23:32	0:0	4	i
op	23:33	0:0	4	++
stmts	24:4	31:4	3	
water	24:4	0:0	4	{
for	25:8	29:8	4	(i_chan = 0 ;i_chan < i_channels;i_chan ++)
forinit	25:13	25:23	5	i_chan = 0 ;
water	25:13	0:0	6	i_chan
op	25:20	0:0	6	=
water	25:22	0:0	6	0
water	25:23	0:0	6	;
cond	25:25	25:34	5	i_chan < i_channels
water	25:25	0:0	6	i_chan
op	25:32	0:0	6	<
water	25:34	0:0	6	i_channels
forexpr	25:46	25:52	5	i_chan ++
water	25:46	0:0	6	i_chan
op	25:52	0:0	6	++
stmts	26:8	29:8	5	
water	26:8	0:0	6	{
decl	27:12	27:41	6	float	f_sample
op	27:27	0:0	6	=
water	27:29	0:0	6	p_in
op	27:33	0:0	6	[
water	27:34	0:0	6	i_chan
op	27:40	0:0	6	]
water	28:12	0:0	6	pf_sum
op	28:18	0:0	6	[
water	28:19	0:0	6	i_chan
op	28:25	0:0	6	]
op	28:27	0:0	6	+=
water	28:30	0:0	6	f_sample
op	28:39	0:0	6	*
water	28:41	0:0	6	f_sample
water	28:49	0:0	6	;
water	29:8	0:0	6	}
water	30:8	0:0	4	p_in
op	30:13	0:0	4	+=
water	30:16	0:0	4	i_channels
water	30:26	0:0	4	;
water	31:4	0:0	4	}
for	33:4	61:4	2	(i_chan = 0 ;i_chan < i_channels;i_chan ++)
forinit	33:9	33:19	3	i_chan = 0 ;
water	33:9	0:0	4	i_chan
op	33:16	0:0	4	=
water	33:18	0:0	4	0
water	33:19	0:0	4	;
cond	33:21	33:30	3	i_chan < i_channels
water	33:21	0:0	4	i_chan
op	33:28	0:0	4	<
water	33:30	0:0	4	i_channels
forexpr	33:42	33:48	3	i_chan ++
water	33:42	0:0	4	i_chan
op	33:48	0:0	4	++
stmts	34:4	61:4	3	
water	34:4	0:0	4	{
call	36:8	38:51	4	memmove
arg	36:17	36:54	5	&p_sys->p_last[i_chan*p_sys->i_nb]
op	36:17	0:0	6	&
water	36:18	0:0	6	p_sys
op	36:23	0:0	6	->
water	36:25	0:0	6	p_last
op	36:31	0:0	6	[
water	36:33	0:0	6	i_chan
op	36:40	0:0	6	*
water	36:42	0:0	6	p_sys
op	36:47	0:0	6	->
water	36:49	0:0	6	i_nb
op	36:53	0:0	6	]
arg	37:24	37:64	5	&p_sys->p_last[i_chan*p_sys->i_nb+1]
op	37:24	0:0	6	&
water	37:25	0:0	6	p_sys
op	37:30	0:0	6	->
water	37:32	0:0	6	p_last
op	37:38	0:0	6	[
water	37:39	0:0	6	i_chan
op	37:46	0:0	6	*
water	37:48	0:0	6	p_sys
op	37:53	0:0	6	->
water	37:55	0:0	6	i_nb
op	37:60	0:0	6	+
water	37:62	0:0	6	1
op	37:63	0:0	6	]
arg	38:17	38:51	5	(p_sys->i_nb-1)*sizeof(float)
water	38:17	0:0	6	(
water	38:18	0:0	6	p_sys
op	38:23	0:0	6	->
water	38:25	0:0	6	i_nb
op	38:29	0:0	6	-
water	38:30	0:0	6	1
water	38:31	0:0	6	)
op	38:33	0:0	6	*
op	38:35	0:0	6	sizeof
water	38:41	0:0	6	(
water	38:43	0:0	6	float
water	38:49	0:0	6	)
water	38:52	0:0	4	;
water	40:8	0:0	4	p_sys
op	40:13	0:0	4	->
water	40:15	0:0	4	p_last
op	40:21	0:0	4	[
water	40:23	0:0	4	i_chan
op	40:30	0:0	4	*
water	40:32	0:0	4	p_sys
op	40:37	0:0	4	->
water	40:39	0:0	4	i_nb
op	40:44	0:0	4	+
water	40:46	0:0	4	p_sys
op	40:51	0:0	4	->
water	40:53	0:0	4	i_nb
op	40:58	0:0	4	-
water	40:60	0:0	4	1
op	40:61	0:0	4	]
op	40:63	0:0	4	=
call	41:16	41:37	4	sqrt
arg	41:22	41:37	5	pf_sum[i_chan]
water	41:22	0:0	6	pf_sum
op	41:28	0:0	6	[
water	41:29	0:0	6	i_chan
op	41:35	0:0	6	]
water	41:38	0:0	4	;
water	42:8	0:0	4	pf_sum
op	42:14	0:0	4	[
water	42:15	0:0	4	i_chan
op	42:21	0:0	4	]
op	42:23	0:0	4	=
water	42:25	0:0	4	0
water	42:26	0:0	4	;
water	44:8	0:0	4	f_average
op	44:18	0:0	4	=
water	44:20	0:0	4	0
water	44:21	0:0	4	;
for	45:8	48:8	4	(i = 0 ;i < p_sys -> i_nb;i ++)
forinit	45:13	45:18	5	i = 0 ;
water	45:13	0:0	6	i
op	45:15	0:0	6	=
water	45:17	0:0	6	0
water	45:18	0:0	6	;
cond	45:20	45:31	5	i < p_sys -> i_nb
water	45:20	0:0	6	i
op	45:22	0:0	6	<
water	45:24	0:0	6	p_sys
op	45:29	0:0	6	->
water	45:31	0:0	6	i_nb
forexpr	45:38	45:39	5	i ++
water	45:38	0:0	6	i
op	45:39	0:0	6	++
stmts	46:8	48:8	5	
water	46:8	0:0	6	{
water	47:12	0:0	6	f_average
op	47:22	0:0	6	+=
water	47:25	0:0	6	p_sys
op	47:30	0:0	6	->
water	47:32	0:0	6	p_last
op	47:38	0:0	6	[
water	47:40	0:0	6	i_chan
op	47:47	0:0	6	*
water	47:49	0:0	6	p_sys
op	47:54	0:0	6	->
water	47:56	0:0	6	i_nb
op	47:61	0:0	6	+
water	47:63	0:0	6	i
op	47:65	0:0	6	]
water	47:66	0:0	6	;
water	48:8	0:0	6	}
water	49:8	0:0	4	f_average
op	49:18	0:0	4	=
water	49:20	0:0	4	f_average
op	49:30	0:0	4	/
water	49:32	0:0	4	p_sys
op	49:37	0:0	4	->
water	49:39	0:0	4	i_nb
water	49:43	0:0	4	;
water	51:8	0:0	4	p_sys
op	51:13	0:0	4	->
water	51:15	0:0	4	f_max
op	51:21	0:0	4	=
call	51:23	51:74	4	var_GetFloat
arg	51:37	51:55	5	p_filter->p_parent
water	51:37	0:0	6	p_filter
op	51:45	0:0	6	->
water	51:47	0:0	6	p_parent
arg	51:57	51:74	5	"norm-max-level"
water	51:57	0:0	6	"norm-max-level"
water	51:75	0:0	4	;
if	53:8	56:8	4	(f_average > p_sys -> f_max)
cond	53:12	53:31	5	f_average > p_sys -> f_max
water	53:12	0:0	6	f_average
op	53:22	0:0	6	>
water	53:24	0:0	6	p_sys
op	53:29	0:0	6	->
water	53:31	0:0	6	f_max
stmts	54:8	56:8	5	
water	54:8	0:0	6	{
water	55:13	0:0	6	pf_gain
op	55:20	0:0	6	[
water	55:21	0:0	6	i_chan
op	55:27	0:0	6	]
op	55:29	0:0	6	=
water	55:31	0:0	6	f_average
op	55:41	0:0	6	/
water	55:43	0:0	6	p_sys
op	55:48	0:0	6	->
water	55:50	0:0	6	f_max
water	55:55	0:0	6	;
water	56:8	0:0	6	}
else	57:8	60:8	4
stmts	58:8	60:8	5	
water	58:8	0:0	6	{
water	59:11	0:0	6	pf_gain
op	59:18	0:0	6	[
water	59:19	0:0	6	i_chan
op	59:25	0:0	6	]
op	59:27	0:0	6	=
water	59:29	0:0	6	1
water	59:30	0:0	6	;
water	60:8	0:0	6	}
water	61:4	0:0	4	}
for	63:4	70:4	2	(i = 0 ;i < i_samples;i ++)
forinit	63:9	63:14	3	i = 0 ;
water	63:9	0:0	4	i
op	63:11	0:0	4	=
water	63:13	0:0	4	0
water	63:14	0:0	4	;
cond	63:16	63:20	3	i < i_samples
water	63:16	0:0	4	i
op	63:18	0:0	4	<
water	63:20	0:0	4	i_samples
forexpr	63:31	63:32	3	i ++
water	63:31	0:0	4	i
op	63:32	0:0	4	++
stmts	64:4	70:4	3	
water	64:4	0:0	4	{
for	65:8	68:8	4	(i_chan = 0 ;i_chan < i_channels;i_chan ++)
forinit	65:13	65:23	5	i_chan = 0 ;
water	65:13	0:0	6	i_chan
op	65:20	0:0	6	=
water	65:22	0:0	6	0
water	65:23	0:0	6	;
cond	65:25	65:34	5	i_chan < i_channels
water	65:25	0:0	6	i_chan
op	65:32	0:0	6	<
water	65:34	0:0	6	i_channels
forexpr	65:46	65:52	5	i_chan ++
water	65:46	0:0	6	i_chan
op	65:52	0:0	6	++
stmts	66:8	68:8	5	
water	66:8	0:0	6	{
water	67:12	0:0	6	p_out
op	67:17	0:0	6	[
water	67:18	0:0	6	i_chan
op	67:24	0:0	6	]
op	67:26	0:0	6	/=
water	67:29	0:0	6	pf_gain
op	67:36	0:0	6	[
water	67:37	0:0	6	i_chan
op	67:43	0:0	6	]
water	67:44	0:0	6	;
water	68:8	0:0	6	}
water	69:8	0:0	4	p_out
op	69:14	0:0	4	+=
water	69:17	0:0	4	i_channels
water	69:27	0:0	4	;
water	70:4	0:0	4	}
call	71:4	71:17	2	free
arg	71:10	71:17	3	pf_sum
water	71:10	0:0	4	pf_sum
water	71:18	0:0	2	;
call	72:4	72:18	2	free
arg	72:10	72:18	3	pf_gain
water	72:10	0:0	4	pf_gain
water	72:19	0:0	2	;
return	73:4	73:19	2	p_in_buf
water	73:11	0:0	3	p_in_buf
label	74:0	74:3	2	out :
call	75:4	75:28	2	block_Release
arg	75:19	75:28	3	p_in_buf
water	75:19	0:0	4	p_in_buf
water	75:29	0:0	2	;
return	76:4	76:15	2	NULL
water	76:11	0:0	3	NULL

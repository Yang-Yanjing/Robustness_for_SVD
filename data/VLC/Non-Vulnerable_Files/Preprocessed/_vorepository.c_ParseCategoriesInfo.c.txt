func	2:0	108:0	0	static int	ParseCategoriesInfo
params	2:30	0:0	1	
param	2:32	2:57	2	addons_finder_t *	p_finder
param	2:59	2:78	2	stream_t *	p_stream
stmnts	0:0	107:31	1	
decl	4:4	4:33	2	int	i_num_entries_created
op	4:30	0:0	2	=
water	4:32	0:0	2	0
decl	5:4	5:22	2	const char	*p_node
decl	6:4	6:28	2	const char	*attr
water	6:20	0:0	2	,
decl	6:4	6:28	2	const char	*value
decl	7:4	7:27	2	int	i_current_node_type
decl	8:4	8:33	2	addon_entry_t	*p_entry
op	8:27	0:0	2	=
water	8:29	0:0	2	NULL
decl	9:4	9:71	2	xml_reader_t	*p_xml_reader
op	9:31	0:0	2	=
call	9:33	9:70	3	xml_ReaderCreate
arg	9:51	9:59	4	p_finder
water	9:51	0:0	5	p_finder
arg	9:61	9:70	4	p_stream
water	9:61	0:0	5	p_stream
if	10:4	10:32	2	(! p_xml_reader)
cond	10:8	10:9	3	! p_xml_reader
op	10:8	0:0	4	!
water	10:9	0:0	4	p_xml_reader
stmts	10:24	10:32	3	
return	10:24	10:32	4	0
water	10:31	0:0	5	0
if	11:4	15:4	2	(xml_ReaderNextNode (p_xml_reader ,& p_node ) != XML_READER_STARTELEM)
cond	11:8	11:55	3	xml_ReaderNextNode (p_xml_reader ,& p_node ) != XML_READER_STARTELEM
call	11:8	11:50	4	xml_ReaderNextNode
arg	11:28	11:40	5	p_xml_reader
water	11:28	0:0	6	p_xml_reader
arg	11:42	11:50	5	&p_node
op	11:42	0:0	6	&
water	11:43	0:0	6	p_node
op	11:52	0:0	4	!=
water	11:55	0:0	4	XML_READER_STARTELEM
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:46	4	msg_Err
arg	13:17	13:25	5	p_finder
water	13:17	0:0	6	p_finder
arg	13:27	13:46	5	"invalid xml file"
water	13:27	0:0	6	"invalid xml file"
water	13:47	0:0	4	;
goto	14:8	14:16	4	end
water	14:13	0:0	5	end
water	15:4	0:0	4	}
if	16:4	20:4	2	(strcmp (p_node ,"videolan" ))
cond	16:9	16:35	3	strcmp (p_node ,"videolan" )
call	16:9	16:35	4	strcmp
arg	16:17	16:23	5	p_node
water	16:17	0:0	6	p_node
arg	16:25	16:35	5	"videolan"
water	16:25	0:0	6	"videolan"
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:57	4	msg_Err
arg	18:17	18:25	5	p_finder
water	18:17	0:0	6	p_finder
arg	18:27	18:57	5	"unsupported XML data format"
water	18:27	0:0	6	"unsupported XML data format"
water	18:58	0:0	4	;
goto	19:8	19:16	4	end
water	19:13	0:0	5	end
water	20:4	0:0	4	}
while	21:4	102:4	2	(( i_current_node_type =xml_ReaderNextNode (p_xml_reader ,& p_node ) ) > 0)
cond	21:11	21:81	3	( i_current_node_type =xml_ReaderNextNode (p_xml_reader ,& p_node ) ) > 0
water	21:11	0:0	4	(
water	21:12	0:0	4	i_current_node_type
op	21:32	0:0	4	=
call	21:34	21:76	4	xml_ReaderNextNode
arg	21:54	21:66	5	p_xml_reader
water	21:54	0:0	6	p_xml_reader
arg	21:68	21:76	5	&p_node
op	21:68	0:0	6	&
water	21:69	0:0	6	p_node
water	21:77	0:0	4	)
op	21:79	0:0	4	>
water	21:81	0:0	4	0
stmts	22:4	102:4	3	
water	22:4	0:0	4	{
switch	23:8	101:8	4	(i_current_node_type)
cond	23:16	23:16	5	i_current_node_type
water	23:16	0:0	6	i_current_node_type
stmts	24:8	101:8	5	
water	24:8	0:0	6	{
label	25:8	25:33	6	case XML_READER_STARTELEM :
water	26:8	0:0	6	{
if	27:12	65:12	6	(!strcmp (p_node ,"addon" ))
cond	27:17	27:43	7	!strcmp (p_node ,"addon" )
op	27:17	0:0	8	!
call	27:19	27:43	8	strcmp
arg	27:27	27:33	9	p_node
water	27:27	0:0	10	p_node
arg	27:35	27:43	9	"addon"
water	27:35	0:0	10	"addon"
stmts	28:12	65:12	7	
water	28:12	0:0	8	{
if	29:16	30:50	8	(p_entry)
cond	29:21	29:21	9	p_entry
water	29:21	0:0	10	p_entry
stmts	30:20	30:50	9	
call	30:20	30:49	10	addon_entry_Release
arg	30:41	30:49	11	p_entry
water	30:41	0:0	12	p_entry
water	30:50	0:0	10	;
water	31:16	0:0	8	p_entry
op	31:24	0:0	8	=
call	31:26	31:42	8	addon_entry_New
water	31:43	0:0	8	;
water	32:16	0:0	8	p_entry
op	32:23	0:0	8	->
water	32:25	0:0	8	psz_source_module
op	32:43	0:0	8	=
call	32:45	32:76	8	strdup
arg	32:53	32:76	9	ADDONS_MODULE_SHORTCUT
water	32:53	0:0	10	ADDONS_MODULE_SHORTCUT
water	32:77	0:0	8	;
water	33:16	0:0	8	p_entry
op	33:23	0:0	8	->
water	33:25	0:0	8	e_flags
op	33:33	0:0	8	=
water	33:35	0:0	8	ADDON_MANAGEABLE
water	33:51	0:0	8	;
water	34:16	0:0	8	p_entry
op	34:23	0:0	8	->
water	34:25	0:0	8	e_state
op	34:33	0:0	8	=
water	34:35	0:0	8	ADDON_NOTINSTALLED
water	34:53	0:0	8	;
while	35:16	63:16	8	(( attr =xml_ReaderNextAttr (p_xml_reader ,& value ) ))
cond	35:23	35:73	9	( attr =xml_ReaderNextAttr (p_xml_reader ,& value ) )
water	35:23	0:0	10	(
water	35:24	0:0	10	attr
op	35:29	0:0	10	=
call	35:31	35:72	10	xml_ReaderNextAttr
arg	35:51	35:63	11	p_xml_reader
water	35:51	0:0	12	p_xml_reader
arg	35:65	35:72	11	&value
op	35:65	0:0	12	&
water	35:66	0:0	12	value
water	35:73	0:0	10	)
stmts	36:16	63:16	9	
water	36:16	0:0	10	{
if	37:20	40:20	10	(!strcmp (attr ,"type" ))
cond	37:25	37:47	11	!strcmp (attr ,"type" )
op	37:25	0:0	12	!
call	37:26	37:47	12	strcmp
arg	37:34	37:38	13	attr
water	37:34	0:0	14	attr
arg	37:40	37:47	13	"type"
water	37:40	0:0	14	"type"
stmts	38:20	40:20	11	
water	38:20	0:0	12	{
water	39:24	0:0	12	p_entry
op	39:31	0:0	12	->
water	39:33	0:0	12	e_type
op	39:40	0:0	12	=
call	39:42	39:58	12	ReadType
arg	39:52	39:58	13	value
water	39:52	0:0	14	value
water	39:59	0:0	12	;
water	40:20	0:0	12	}
else	41:20	44:20	10
stmts	41:25	44:20	11	
if	41:25	44:20	12	(!strcmp (attr ,"id" ))
cond	41:30	41:50	13	!strcmp (attr ,"id" )
op	41:30	0:0	14	!
call	41:31	41:50	14	strcmp
arg	41:39	41:43	15	attr
water	41:39	0:0	16	attr
arg	41:45	41:50	15	"id"
water	41:45	0:0	16	"id"
stmts	42:20	44:20	13	
water	42:20	0:0	14	{
call	43:24	43:65	14	addons_uuid_read
arg	43:42	43:47	15	value
water	43:42	0:0	16	value
arg	43:49	43:65	15	&p_entry->uuid
op	43:49	0:0	16	&
water	43:51	0:0	16	p_entry
op	43:58	0:0	16	->
water	43:60	0:0	16	uuid
water	43:66	0:0	14	;
water	44:20	0:0	14	}
else	45:20	50:20	10
stmts	45:25	50:20	11	
if	45:25	50:20	12	(!strcmp (attr ,"downloads" ))
cond	45:30	45:57	13	!strcmp (attr ,"downloads" )
op	45:30	0:0	14	!
call	45:31	45:57	14	strcmp
arg	45:39	45:43	15	attr
water	45:39	0:0	16	attr
arg	45:45	45:57	15	"downloads"
water	45:45	0:0	16	"downloads"
stmts	46:20	50:20	13	
water	46:20	0:0	14	{
water	47:24	0:0	14	p_entry
op	47:31	0:0	14	->
water	47:33	0:0	14	i_downloads
op	47:45	0:0	14	=
call	47:47	47:59	14	atoi
arg	47:53	47:59	15	value
water	47:53	0:0	16	value
water	47:60	0:0	14	;
if	48:24	49:52	14	(p_entry -> i_downloads < 0)
cond	48:29	48:52	15	p_entry -> i_downloads < 0
water	48:29	0:0	16	p_entry
op	48:36	0:0	16	->
water	48:38	0:0	16	i_downloads
op	48:50	0:0	16	<
water	48:52	0:0	16	0
stmts	49:28	49:52	15	
water	49:28	0:0	16	p_entry
op	49:35	0:0	16	->
water	49:37	0:0	16	i_downloads
op	49:49	0:0	16	=
water	49:51	0:0	16	0
water	49:52	0:0	16	;
water	50:20	0:0	14	}
else	51:20	58:20	10
stmts	51:25	58:20	11	
if	51:25	58:20	12	(!strcmp (attr ,"score" ))
cond	51:30	51:53	13	!strcmp (attr ,"score" )
op	51:30	0:0	14	!
call	51:31	51:53	14	strcmp
arg	51:39	51:43	15	attr
water	51:39	0:0	16	attr
arg	51:45	51:53	15	"score"
water	51:45	0:0	16	"score"
stmts	52:20	58:20	13	
water	52:20	0:0	14	{
water	53:24	0:0	14	p_entry
op	53:31	0:0	14	->
water	53:33	0:0	14	i_score
op	53:41	0:0	14	=
call	53:43	53:55	14	atoi
arg	53:49	53:55	15	value
water	53:49	0:0	16	value
water	53:56	0:0	14	;
if	54:24	55:48	14	(p_entry -> i_score < 0)
cond	54:29	54:48	15	p_entry -> i_score < 0
water	54:29	0:0	16	p_entry
op	54:36	0:0	16	->
water	54:38	0:0	16	i_score
op	54:46	0:0	16	<
water	54:48	0:0	16	0
stmts	55:28	55:48	15	
water	55:28	0:0	16	p_entry
op	55:35	0:0	16	->
water	55:37	0:0	16	i_score
op	55:45	0:0	16	=
water	55:47	0:0	16	0
water	55:48	0:0	16	;
else	56:24	57:62	14
stmts	56:29	57:62	15	
if	56:29	57:62	16	(p_entry -> i_score > ADDON_MAX_SCORE)
cond	56:34	56:53	17	p_entry -> i_score > ADDON_MAX_SCORE
water	56:34	0:0	18	p_entry
op	56:41	0:0	18	->
water	56:43	0:0	18	i_score
op	56:51	0:0	18	>
water	56:53	0:0	18	ADDON_MAX_SCORE
stmts	57:28	57:62	17	
water	57:28	0:0	18	p_entry
op	57:35	0:0	18	->
water	57:37	0:0	18	i_score
op	57:45	0:0	18	=
water	57:47	0:0	18	ADDON_MAX_SCORE
water	57:62	0:0	18	;
water	58:20	0:0	14	}
else	59:20	62:20	10
stmts	59:25	62:20	11	
if	59:25	62:20	12	(!strcmp (attr ,"version" ))
cond	59:30	59:55	13	!strcmp (attr ,"version" )
op	59:30	0:0	14	!
call	59:31	59:55	14	strcmp
arg	59:39	59:43	15	attr
water	59:39	0:0	16	attr
arg	59:45	59:55	15	"version"
water	59:45	0:0	16	"version"
stmts	60:20	62:20	13	
water	60:20	0:0	14	{
water	61:24	0:0	14	p_entry
op	61:31	0:0	14	->
water	61:33	0:0	14	psz_version
op	61:45	0:0	14	=
call	61:47	61:61	14	strdup
arg	61:55	61:61	15	value
water	61:55	0:0	16	value
water	61:62	0:0	14	;
water	62:20	0:0	14	}
water	63:16	0:0	10	}
break	64:16	64:21	8	
water	65:12	0:0	8	}
if	66:12	66:33	6	(! p_entry)
cond	66:17	66:18	7	! p_entry
op	66:17	0:0	8	!
water	66:18	0:0	8	p_entry
stmts	66:28	66:33	7	
break	66:28	66:33	8	
call	67:12	67:59	6	BINDNODE
arg	67:21	67:27	7	"name"
water	67:21	0:0	8	"name"
arg	67:29	67:46	7	p_entry->psz_name
water	67:29	0:0	8	p_entry
op	67:36	0:0	8	->
water	67:38	0:0	8	psz_name
arg	67:48	67:59	7	TYPE_STRING
water	67:48	0:0	8	TYPE_STRING
call	68:12	68:69	6	BINDNODE
arg	68:21	68:30	7	"archive"
water	68:21	0:0	8	"archive"
arg	68:32	68:56	7	p_entry->psz_archive_uri
water	68:32	0:0	8	p_entry
op	68:39	0:0	8	->
water	68:41	0:0	8	psz_archive_uri
arg	68:58	68:69	7	TYPE_STRING
water	68:58	0:0	8	TYPE_STRING
call	69:12	69:65	6	BINDNODE
arg	69:21	69:30	7	"summary"
water	69:21	0:0	8	"summary"
arg	69:32	69:52	7	p_entry->psz_summary
water	69:32	0:0	8	p_entry
op	69:39	0:0	8	->
water	69:41	0:0	8	psz_summary
arg	69:54	69:65	7	TYPE_STRING
water	69:54	0:0	8	TYPE_STRING
call	70:12	70:73	6	BINDNODE
arg	70:21	70:34	7	"description"
water	70:21	0:0	8	"description"
arg	70:36	70:60	7	p_entry->psz_description
water	70:36	0:0	8	p_entry
op	70:43	0:0	8	->
water	70:45	0:0	8	psz_description
arg	70:62	70:73	7	TYPE_STRING
water	70:62	0:0	8	TYPE_STRING
call	71:12	71:66	6	BINDNODE
arg	71:21	71:28	7	"image"
water	71:21	0:0	8	"image"
arg	71:30	71:53	7	p_entry->psz_image_data
water	71:30	0:0	8	p_entry
op	71:37	0:0	8	->
water	71:39	0:0	8	psz_image_data
arg	71:55	71:66	7	TYPE_STRING
water	71:55	0:0	8	TYPE_STRING
call	72:12	72:64	6	BINDNODE
arg	72:21	72:30	7	"creator"
water	72:21	0:0	8	"creator"
arg	72:32	72:51	7	p_entry->psz_author
water	72:32	0:0	8	p_entry
op	72:39	0:0	8	->
water	72:41	0:0	8	psz_author
arg	72:53	72:64	7	TYPE_STRING
water	72:53	0:0	8	TYPE_STRING
call	73:12	73:70	6	BINDNODE
arg	73:21	73:32	7	"sourceurl"
water	73:21	0:0	8	"sourceurl"
arg	73:34	73:57	7	p_entry->psz_source_uri
water	73:34	0:0	8	p_entry
op	73:41	0:0	8	->
water	73:43	0:0	8	psz_source_uri
arg	73:59	73:70	7	TYPE_STRING
water	73:59	0:0	8	TYPE_STRING
water	74:12	0:0	6	data_pointer
op	74:24	0:0	6	.
water	74:25	0:0	6	e_type
op	74:32	0:0	6	=
water	74:34	0:0	6	TYPE_NONE
water	74:43	0:0	6	;
break	75:12	75:17	6	
water	76:8	0:0	6	}
label	77:8	77:28	6	case XML_READER_TEXT :
if	78:12	78:69	6	(data_pointer . e_type == TYPE_NONE || ! p_entry)
cond	78:17	78:54	7	data_pointer . e_type == TYPE_NONE || ! p_entry
water	78:17	0:0	8	data_pointer
op	78:29	0:0	8	.
water	78:30	0:0	8	e_type
op	78:37	0:0	8	==
water	78:40	0:0	8	TYPE_NONE
op	78:50	0:0	8	||
op	78:53	0:0	8	!
water	78:54	0:0	8	p_entry
stmts	78:64	78:69	7	
break	78:64	78:69	8	
if	79:12	80:60	6	(data_pointer . e_type == TYPE_STRING)
cond	79:17	79:40	7	data_pointer . e_type == TYPE_STRING
water	79:17	0:0	8	data_pointer
op	79:29	0:0	8	.
water	79:30	0:0	8	e_type
op	79:37	0:0	8	==
water	79:40	0:0	8	TYPE_STRING
stmts	80:16	80:60	7	
op	80:16	0:0	8	*
water	80:17	0:0	8	data_pointer
op	80:29	0:0	8	.
water	80:30	0:0	8	u_data
op	80:36	0:0	8	.
water	80:37	0:0	8	ppsz
op	80:42	0:0	8	=
call	80:44	80:59	8	strdup
arg	80:52	80:59	9	p_node
water	80:52	0:0	10	p_node
water	80:60	0:0	8	;
else	81:12	83:56	6
stmts	82:12	83:56	7	
if	82:12	83:56	8	(data_pointer . e_type == TYPE_LONG)
cond	82:17	82:40	9	data_pointer . e_type == TYPE_LONG
water	82:17	0:0	10	data_pointer
op	82:29	0:0	10	.
water	82:30	0:0	10	e_type
op	82:37	0:0	10	==
water	82:40	0:0	10	TYPE_LONG
stmts	83:16	83:56	9	
op	83:16	0:0	10	*
water	83:17	0:0	10	data_pointer
op	83:29	0:0	10	.
water	83:30	0:0	10	u_data
op	83:36	0:0	10	.
water	83:37	0:0	10	pl
op	83:40	0:0	10	=
call	83:42	83:55	10	atol
arg	83:48	83:55	11	p_node
water	83:48	0:0	12	p_node
water	83:56	0:0	10	;
else	84:12	86:56	6
stmts	85:12	86:56	7	
if	85:12	86:56	8	(data_pointer . e_type == TYPE_INTEGER)
cond	85:17	85:40	9	data_pointer . e_type == TYPE_INTEGER
water	85:17	0:0	10	data_pointer
op	85:29	0:0	10	.
water	85:30	0:0	10	e_type
op	85:37	0:0	10	==
water	85:40	0:0	10	TYPE_INTEGER
stmts	86:16	86:56	9	
op	86:16	0:0	10	*
water	86:17	0:0	10	data_pointer
op	86:29	0:0	10	.
water	86:30	0:0	10	u_data
op	86:36	0:0	10	.
water	86:37	0:0	10	pi
op	86:40	0:0	10	=
call	86:42	86:55	10	atoi
arg	86:48	86:55	11	p_node
water	86:48	0:0	12	p_node
water	86:56	0:0	10	;
break	87:12	87:17	6	
label	88:8	88:31	6	case XML_READER_ENDELEM :
if	89:12	89:33	6	(! p_entry)
cond	89:17	89:18	7	! p_entry
op	89:17	0:0	8	!
water	89:18	0:0	8	p_entry
stmts	89:28	89:33	7	
break	89:28	89:33	8	
if	90:12	96:12	6	(!strcmp (p_node ,"addon" ))
cond	90:17	90:43	7	!strcmp (p_node ,"addon" )
op	90:17	0:0	8	!
call	90:19	90:43	8	strcmp
arg	90:27	90:33	9	p_node
water	90:27	0:0	10	p_node
arg	90:35	90:43	9	"addon"
water	90:35	0:0	10	"addon"
stmts	91:12	96:12	7	
water	91:12	0:0	8	{
call	93:16	93:57	8	ARRAY_APPEND
arg	93:30	93:47	9	p_finder->entries
water	93:30	0:0	10	p_finder
op	93:38	0:0	10	->
water	93:40	0:0	10	entries
arg	93:49	93:57	9	p_entry
water	93:49	0:0	10	p_entry
water	93:58	0:0	8	;
water	94:16	0:0	8	p_entry
op	94:24	0:0	8	=
water	94:26	0:0	8	NULL
water	94:30	0:0	8	;
water	95:16	0:0	8	i_num_entries_created
op	95:37	0:0	8	++
water	95:39	0:0	8	;
water	96:12	0:0	8	}
water	97:12	0:0	6	data_pointer
op	97:24	0:0	6	.
water	97:25	0:0	6	e_type
op	97:32	0:0	6	=
water	97:34	0:0	6	TYPE_NONE
water	97:43	0:0	6	;
break	98:12	98:17	6	
label	99:8	99:15	6	default :
break	100:12	100:17	6	
water	101:8	0:0	6	}
water	102:4	0:0	4	}
label	103:0	103:3	2	end :
if	104:3	105:37	2	(p_entry)
cond	104:8	104:8	3	p_entry
water	104:8	0:0	4	p_entry
stmts	105:7	105:37	3	
call	105:7	105:36	4	addon_entry_Release
arg	105:28	105:36	5	p_entry
water	105:28	0:0	6	p_entry
water	105:37	0:0	4	;
call	106:3	106:34	2	xml_ReaderDelete
arg	106:21	106:34	3	p_xml_reader
water	106:21	0:0	4	p_xml_reader
water	106:35	0:0	2	;
return	107:3	107:31	2	i_num_entries_created
water	107:10	0:0	3	i_num_entries_created

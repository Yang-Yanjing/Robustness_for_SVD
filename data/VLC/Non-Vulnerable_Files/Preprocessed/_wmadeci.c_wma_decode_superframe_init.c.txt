func	2:0	27:0	0	int	wma_decode_superframe_init
params	2:30	0:0	1	
param	2:31	2:50	2	WMADecodeContext *	s
param	3:33	3:45	2	uint8_t *	buf
param	4:33	4:45	2	int	buf_size
stmnts	6:4	26:12	1	
if	6:4	10:4	2	(buf_size == 0)
cond	6:8	6:18	3	buf_size == 0
water	6:8	0:0	4	buf_size
op	6:16	0:0	4	==
water	6:18	0:0	4	0
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	last_superframe_len
op	8:31	0:0	4	=
water	8:33	0:0	4	0
water	8:34	0:0	4	;
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	4	}
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	current_frame
op	11:21	0:0	2	=
water	11:23	0:0	2	0
water	11:24	0:0	2	;
call	12:4	12:41	2	init_get_bits
arg	12:18	12:24	3	&s->gb
op	12:18	0:0	4	&
water	12:19	0:0	4	s
op	12:20	0:0	4	->
water	12:22	0:0	4	gb
arg	12:26	12:29	3	buf
water	12:26	0:0	4	buf
arg	12:31	12:41	3	buf_size*8
water	12:31	0:0	4	buf_size
op	12:39	0:0	4	*
water	12:40	0:0	4	8
water	12:42	0:0	2	;
if	13:4	23:4	2	(s -> use_bit_reservoir)
cond	13:8	13:11	3	s -> use_bit_reservoir
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	use_bit_reservoir
stmts	14:4	23:4	3	
water	14:4	0:0	4	{
call	16:8	16:26	4	get_bits
arg	16:17	16:23	5	&s->gb
op	16:17	0:0	6	&
water	16:18	0:0	6	s
op	16:19	0:0	6	->
water	16:21	0:0	6	gb
arg	16:25	16:26	5	4
water	16:25	0:0	6	4
water	16:27	0:0	4	;
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	nb_frames
op	17:21	0:0	4	=
call	17:23	17:41	4	get_bits
arg	17:32	17:38	5	&s->gb
op	17:32	0:0	6	&
water	17:33	0:0	6	s
op	17:34	0:0	6	->
water	17:36	0:0	6	gb
arg	17:40	17:41	5	4
water	17:40	0:0	6	4
water	17:42	0:0	4	;
if	18:8	19:27	4	(s -> last_superframe_len == 0)
cond	18:12	18:38	5	s -> last_superframe_len == 0
water	18:12	0:0	6	s
op	18:13	0:0	6	->
water	18:15	0:0	6	last_superframe_len
op	18:35	0:0	6	==
water	18:38	0:0	6	0
stmts	19:12	19:27	5	
water	19:12	0:0	6	s
op	19:13	0:0	6	->
water	19:15	0:0	6	nb_frames
op	19:25	0:0	6	--
water	19:27	0:0	6	;
else	20:8	21:26	4
stmts	20:13	21:26	5	
if	20:13	21:26	6	(s -> nb_frames == 0)
cond	20:17	20:33	7	s -> nb_frames == 0
water	20:17	0:0	8	s
op	20:18	0:0	8	->
water	20:20	0:0	8	nb_frames
op	20:30	0:0	8	==
water	20:33	0:0	8	0
stmts	21:12	21:26	7	
water	21:12	0:0	8	s
op	21:13	0:0	8	->
water	21:15	0:0	8	nb_frames
op	21:24	0:0	8	++
water	21:26	0:0	8	;
water	22:8	0:0	4	s
op	22:9	0:0	4	->
water	22:11	0:0	4	bit_offset
op	22:22	0:0	4	=
call	22:24	22:64	4	get_bits
arg	22:33	22:39	5	&s->gb
op	22:33	0:0	6	&
water	22:34	0:0	6	s
op	22:35	0:0	6	->
water	22:37	0:0	6	gb
arg	22:41	22:64	5	s->byte_offset_bits+3
water	22:41	0:0	6	s
op	22:42	0:0	6	->
water	22:44	0:0	6	byte_offset_bits
op	22:61	0:0	6	+
water	22:63	0:0	6	3
water	22:65	0:0	4	;
water	23:4	0:0	4	}
else	23:6	25:4	2
stmts	23:11	25:4	3	
water	23:11	0:0	4	{
water	24:8	0:0	4	s
op	24:9	0:0	4	->
water	24:11	0:0	4	nb_frames
op	24:21	0:0	4	=
water	24:23	0:0	4	1
water	24:24	0:0	4	;
water	25:4	0:0	4	}
return	26:4	26:12	2	1
water	26:11	0:0	3	1

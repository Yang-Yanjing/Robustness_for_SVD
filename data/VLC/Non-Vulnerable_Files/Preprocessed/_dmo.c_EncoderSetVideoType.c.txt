func	2:0	131:0	0	static int	EncoderSetVideoType
params	2:30	0:0	1	
param	2:32	2:48	2	encoder_t *	p_enc
param	2:50	2:70	2	IMediaObject *	p_dmo
stmnts	0:0	130:22	1	
decl	4:4	4:28	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:28	2	int	i_selected
water	4:21	0:0	2	,
decl	4:4	4:28	2	int	i_err
decl	5:4	5:27	2	DMO_MEDIA_TYPE	dmo_type
decl	6:4	6:31	2	VIDEOINFOHEADER	vih
water	6:23	0:0	2	,
decl	6:4	6:31	2	VIDEOINFOHEADER	*p_vih
decl	7:4	7:31	2	VLC_BITMAPINFOHEADER	*p_bih
water	9:4	0:0	2	p_enc
op	9:9	0:0	2	->
water	9:11	0:0	2	fmt_in
op	9:17	0:0	2	.
water	9:18	0:0	2	video
op	9:23	0:0	2	.
water	9:24	0:0	2	i_bits_per_pixel
op	9:41	0:0	2	=
water	10:8	0:0	2	p_enc
op	10:13	0:0	2	->
water	10:15	0:0	2	fmt_out
op	10:22	0:0	2	.
water	10:23	0:0	2	video
op	10:28	0:0	2	.
water	10:29	0:0	2	i_bits_per_pixel
op	10:46	0:0	2	=
water	10:48	0:0	2	12
water	10:50	0:0	2	;
water	12:4	0:0	2	i
op	12:6	0:0	2	=
water	12:8	0:0	2	0
water	12:9	0:0	2	;
while	13:4	23:4	2	(!p_dmo -> vt -> GetInputType (p_dmo ,0 ,i ++ ,& dmo_type ))
cond	13:11	13:62	3	!p_dmo -> vt -> GetInputType (p_dmo ,0 ,i ++ ,& dmo_type )
op	13:11	0:0	4	!
call	13:12	13:62	4	p_dmo->vt->GetInputType
arg	13:37	13:42	5	p_dmo
water	13:37	0:0	6	p_dmo
arg	13:44	13:45	5	0
water	13:44	0:0	6	0
arg	13:47	13:50	5	i++
water	13:47	0:0	6	i
op	13:48	0:0	6	++
arg	13:52	13:62	5	&dmo_type
op	13:52	0:0	6	&
water	13:53	0:0	6	dmo_type
stmts	14:4	23:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	p_vih
op	15:14	0:0	4	=
water	15:16	0:0	4	(
water	15:17	0:0	4	VIDEOINFOHEADER
op	15:33	0:0	4	*
water	15:34	0:0	4	)
water	15:35	0:0	4	dmo_type
op	15:43	0:0	4	.
water	15:44	0:0	4	pbFormat
water	15:52	0:0	4	;
call	16:8	17:49	4	msg_Dbg
arg	16:17	16:22	5	p_enc
water	16:17	0:0	6	p_enc
arg	16:24	16:55	5	"available input chroma: %4.4s"
water	16:24	0:0	6	"available input chroma: %4.4s"
arg	17:17	17:49	5	(char*)&dmo_type.subtype.Data1
water	17:17	0:0	6	(
water	17:18	0:0	6	char
op	17:23	0:0	6	*
water	17:24	0:0	6	)
op	17:25	0:0	6	&
water	17:26	0:0	6	dmo_type
op	17:34	0:0	6	.
water	17:35	0:0	6	subtype
op	17:42	0:0	6	.
water	17:43	0:0	6	Data1
water	17:50	0:0	4	;
if	18:8	19:54	4	(!memcmp (& dmo_type . subtype ,& MEDIASUBTYPE_RGB565 ,16 ))
cond	18:12	18:65	5	!memcmp (& dmo_type . subtype ,& MEDIASUBTYPE_RGB565 ,16 )
op	18:12	0:0	6	!
call	18:13	18:65	6	memcmp
arg	18:21	18:38	7	&dmo_type.subtype
op	18:21	0:0	8	&
water	18:22	0:0	8	dmo_type
op	18:30	0:0	8	.
water	18:31	0:0	8	subtype
arg	18:40	18:60	7	&MEDIASUBTYPE_RGB565
op	18:40	0:0	8	&
water	18:41	0:0	8	MEDIASUBTYPE_RGB565
arg	18:62	18:65	7	16
water	18:62	0:0	8	16
stmts	19:12	19:54	5	
call	19:12	19:53	6	msg_Dbg
arg	19:21	19:26	7	p_enc
water	19:21	0:0	8	p_enc
arg	19:28	19:53	7	"-> MEDIASUBTYPE_RGB565"
water	19:28	0:0	8	"-> MEDIASUBTYPE_RGB565"
water	19:54	0:0	6	;
if	20:8	21:53	4	(!memcmp (& dmo_type . subtype ,& MEDIASUBTYPE_RGB24 ,16 ))
cond	20:12	20:64	5	!memcmp (& dmo_type . subtype ,& MEDIASUBTYPE_RGB24 ,16 )
op	20:12	0:0	6	!
call	20:13	20:64	6	memcmp
arg	20:21	20:38	7	&dmo_type.subtype
op	20:21	0:0	8	&
water	20:22	0:0	8	dmo_type
op	20:30	0:0	8	.
water	20:31	0:0	8	subtype
arg	20:40	20:59	7	&MEDIASUBTYPE_RGB24
op	20:40	0:0	8	&
water	20:41	0:0	8	MEDIASUBTYPE_RGB24
arg	20:61	20:64	7	16
water	20:61	0:0	8	16
stmts	21:12	21:53	5	
call	21:12	21:52	6	msg_Dbg
arg	21:21	21:26	7	p_enc
water	21:21	0:0	8	p_enc
arg	21:28	21:52	7	"-> MEDIASUBTYPE_RGB24"
water	21:28	0:0	8	"-> MEDIASUBTYPE_RGB24"
water	21:53	0:0	6	;
call	22:8	22:36	4	DMOFreeMediaType
arg	22:26	22:36	5	&dmo_type
op	22:26	0:0	6	&
water	22:27	0:0	6	dmo_type
water	22:37	0:0	4	;
water	23:4	0:0	4	}
call	25:4	25:43	2	memset
arg	25:12	25:21	3	&dmo_type
op	25:12	0:0	4	&
water	25:13	0:0	4	dmo_type
arg	25:23	25:24	3	0
water	25:23	0:0	4	0
arg	25:26	25:43	3	sizeof(dmo_type)
op	25:26	0:0	4	sizeof
water	25:32	0:0	4	(
water	25:33	0:0	4	dmo_type
water	25:41	0:0	4	)
water	25:44	0:0	2	;
call	26:4	26:45	2	memset
arg	26:12	26:16	3	&vih
op	26:12	0:0	4	&
water	26:13	0:0	4	vih
arg	26:18	26:19	3	0
water	26:18	0:0	4	0
arg	26:21	26:45	3	sizeof(VIDEOINFOHEADER)
op	26:21	0:0	4	sizeof
water	26:27	0:0	4	(
water	26:28	0:0	4	VIDEOINFOHEADER
water	26:43	0:0	4	)
water	26:46	0:0	2	;
water	27:4	0:0	2	p_bih
op	27:10	0:0	2	=
op	27:12	0:0	2	&
water	27:13	0:0	2	vih
op	27:16	0:0	2	.
water	27:17	0:0	2	bmiHeader
water	27:26	0:0	2	;
water	28:4	0:0	2	p_bih
op	28:9	0:0	2	->
water	28:11	0:0	2	biCompression
op	28:25	0:0	2	=
water	28:27	0:0	2	VLC_CODEC_I420
water	28:41	0:0	2	;
water	29:4	0:0	2	p_bih
op	29:9	0:0	2	->
water	29:11	0:0	2	biWidth
op	29:19	0:0	2	=
water	29:21	0:0	2	p_enc
op	29:26	0:0	2	->
water	29:28	0:0	2	fmt_in
op	29:34	0:0	2	.
water	29:35	0:0	2	video
op	29:40	0:0	2	.
water	29:41	0:0	2	i_visible_width
water	29:56	0:0	2	;
water	30:4	0:0	2	p_bih
op	30:9	0:0	2	->
water	30:11	0:0	2	biHeight
op	30:20	0:0	2	=
water	30:22	0:0	2	p_enc
op	30:27	0:0	2	->
water	30:29	0:0	2	fmt_in
op	30:35	0:0	2	.
water	30:36	0:0	2	video
op	30:41	0:0	2	.
water	30:42	0:0	2	i_visible_height
water	30:58	0:0	2	;
water	31:4	0:0	2	p_bih
op	31:9	0:0	2	->
water	31:11	0:0	2	biBitCount
op	31:22	0:0	2	=
water	31:24	0:0	2	p_enc
op	31:29	0:0	2	->
water	31:31	0:0	2	fmt_in
op	31:37	0:0	2	.
water	31:38	0:0	2	video
op	31:43	0:0	2	.
water	31:44	0:0	2	i_bits_per_pixel
water	31:60	0:0	2	;
water	32:4	0:0	2	p_bih
op	32:9	0:0	2	->
water	32:11	0:0	2	biSizeImage
op	32:23	0:0	2	=
water	32:25	0:0	2	p_enc
op	32:30	0:0	2	->
water	32:32	0:0	2	fmt_in
op	32:38	0:0	2	.
water	32:39	0:0	2	video
op	32:44	0:0	2	.
water	32:45	0:0	2	i_visible_width
op	32:61	0:0	2	*
water	33:8	0:0	2	p_enc
op	33:13	0:0	2	->
water	33:15	0:0	2	fmt_in
op	33:21	0:0	2	.
water	33:22	0:0	2	video
op	33:27	0:0	2	.
water	33:28	0:0	2	i_visible_height
op	33:45	0:0	2	*
water	33:47	0:0	2	p_enc
op	33:52	0:0	2	->
water	33:54	0:0	2	fmt_in
op	33:60	0:0	2	.
water	33:61	0:0	2	video
op	33:66	0:0	2	.
water	33:67	0:0	2	i_bits_per_pixel
op	33:84	0:0	2	/
water	33:85	0:0	2	8
water	33:86	0:0	2	;
water	34:4	0:0	2	p_bih
op	34:9	0:0	2	->
water	34:11	0:0	2	biPlanes
op	34:20	0:0	2	=
water	34:22	0:0	2	3
water	34:23	0:0	2	;
water	35:4	0:0	2	p_bih
op	35:9	0:0	2	->
water	35:11	0:0	2	biSize
op	35:18	0:0	2	=
op	35:20	0:0	2	sizeof
water	35:26	0:0	2	(
water	35:27	0:0	2	VLC_BITMAPINFOHEADER
water	35:47	0:0	2	)
water	35:48	0:0	2	;
water	36:4	0:0	2	vih
op	36:7	0:0	2	.
water	36:8	0:0	2	rcSource
op	36:16	0:0	2	.
water	36:17	0:0	2	left
op	36:22	0:0	2	=
water	36:24	0:0	2	vih
op	36:27	0:0	2	.
water	36:28	0:0	2	rcSource
op	36:36	0:0	2	.
water	36:37	0:0	2	top
op	36:41	0:0	2	=
water	36:43	0:0	2	0
water	36:44	0:0	2	;
water	37:4	0:0	2	vih
op	37:7	0:0	2	.
water	37:8	0:0	2	rcSource
op	37:16	0:0	2	.
water	37:17	0:0	2	right
op	37:23	0:0	2	=
water	37:25	0:0	2	p_enc
op	37:30	0:0	2	->
water	37:32	0:0	2	fmt_in
op	37:38	0:0	2	.
water	37:39	0:0	2	video
op	37:44	0:0	2	.
water	37:45	0:0	2	i_visible_width
water	37:60	0:0	2	;
water	38:4	0:0	2	vih
op	38:7	0:0	2	.
water	38:8	0:0	2	rcSource
op	38:16	0:0	2	.
water	38:17	0:0	2	bottom
op	38:24	0:0	2	=
water	38:26	0:0	2	p_enc
op	38:31	0:0	2	->
water	38:33	0:0	2	fmt_in
op	38:39	0:0	2	.
water	38:40	0:0	2	video
op	38:45	0:0	2	.
water	38:46	0:0	2	i_visible_height
water	38:62	0:0	2	;
water	39:4	0:0	2	vih
op	39:7	0:0	2	.
water	39:8	0:0	2	rcTarget
op	39:17	0:0	2	=
water	39:19	0:0	2	vih
op	39:22	0:0	2	.
water	39:23	0:0	2	rcSource
water	39:31	0:0	2	;
water	40:4	0:0	2	vih
op	40:7	0:0	2	.
water	40:8	0:0	2	AvgTimePerFrame
op	40:24	0:0	2	=
call	40:26	40:42	2	INT64_C
arg	40:34	40:42	3	10000000
water	40:34	0:0	4	10000000
op	40:44	0:0	2	/
water	40:46	0:0	2	25
water	40:48	0:0	2	;
water	41:4	0:0	2	dmo_type
op	41:12	0:0	2	.
water	41:13	0:0	2	majortype
op	41:23	0:0	2	=
water	41:25	0:0	2	MEDIATYPE_Video
water	41:40	0:0	2	;
water	43:4	0:0	2	dmo_type
op	43:12	0:0	2	.
water	43:13	0:0	2	subtype
op	43:21	0:0	2	=
water	43:23	0:0	2	MEDIASUBTYPE_I420
water	43:40	0:0	2	;
water	45:4	0:0	2	dmo_type
op	45:12	0:0	2	.
water	45:13	0:0	2	formattype
op	45:24	0:0	2	=
water	45:26	0:0	2	FORMAT_VideoInfo
water	45:42	0:0	2	;
water	46:4	0:0	2	dmo_type
op	46:12	0:0	2	.
water	46:13	0:0	2	bFixedSizeSamples
op	46:31	0:0	2	=
water	46:33	0:0	2	TRUE
water	46:37	0:0	2	;
water	47:4	0:0	2	dmo_type
op	47:12	0:0	2	.
water	47:13	0:0	2	bTemporalCompression
op	47:34	0:0	2	=
water	47:36	0:0	2	FALSE
water	47:41	0:0	2	;
water	48:4	0:0	2	dmo_type
op	48:12	0:0	2	.
water	48:13	0:0	2	lSampleSize
op	48:25	0:0	2	=
water	48:27	0:0	2	p_bih
op	48:32	0:0	2	->
water	48:34	0:0	2	biSizeImage
water	48:45	0:0	2	;
water	49:4	0:0	2	dmo_type
op	49:12	0:0	2	.
water	49:13	0:0	2	cbFormat
op	49:22	0:0	2	=
op	49:24	0:0	2	sizeof
water	49:30	0:0	2	(
water	49:31	0:0	2	VIDEOINFOHEADER
water	49:46	0:0	2	)
water	49:47	0:0	2	;
water	50:4	0:0	2	dmo_type
op	50:12	0:0	2	.
water	50:13	0:0	2	pbFormat
op	50:22	0:0	2	=
water	50:24	0:0	2	(
water	50:25	0:0	2	char
op	50:30	0:0	2	*
water	50:31	0:0	2	)
op	50:32	0:0	2	&
water	50:33	0:0	2	vih
water	50:36	0:0	2	;
if	51:4	55:4	2	(( i_err =p_dmo -> vt -> SetInputType (p_dmo ,0 ,& dmo_type ,0 ) ))
cond	51:8	51:68	3	( i_err =p_dmo -> vt -> SetInputType (p_dmo ,0 ,& dmo_type ,0 ) )
water	51:8	0:0	4	(
water	51:10	0:0	4	i_err
op	51:16	0:0	4	=
call	51:18	51:66	4	p_dmo->vt->SetInputType
arg	51:43	51:48	5	p_dmo
water	51:43	0:0	6	p_dmo
arg	51:50	51:51	5	0
water	51:50	0:0	6	0
arg	51:53	51:62	5	&dmo_type
op	51:53	0:0	6	&
water	51:54	0:0	6	dmo_type
arg	51:64	51:66	5	0
water	51:64	0:0	6	0
water	51:68	0:0	4	)
stmts	52:4	55:4	3	
water	52:4	0:0	4	{
call	53:8	53:62	4	msg_Err
arg	53:17	53:22	5	p_enc
water	53:17	0:0	6	p_enc
arg	53:24	53:54	5	"can't set DMO input type: %x"
water	53:24	0:0	6	"can't set DMO input type: %x"
arg	53:56	53:62	5	i_err
water	53:56	0:0	6	i_err
water	53:63	0:0	4	;
return	54:8	54:27	4	VLC_EGENERIC
water	54:15	0:0	5	VLC_EGENERIC
water	55:4	0:0	4	}
call	56:4	56:50	2	msg_Dbg
arg	56:13	56:18	3	p_enc
water	56:13	0:0	4	p_enc
arg	56:20	56:50	3	"successfully set input type"
water	56:20	0:0	4	"successfully set input type"
water	56:51	0:0	2	;
call	58:4	58:43	2	memset
arg	58:12	58:21	3	&dmo_type
op	58:12	0:0	4	&
water	58:13	0:0	4	dmo_type
arg	58:23	58:24	3	0
water	58:23	0:0	4	0
arg	58:26	58:43	3	sizeof(dmo_type)
op	58:26	0:0	4	sizeof
water	58:32	0:0	4	(
water	58:33	0:0	4	dmo_type
water	58:41	0:0	4	)
water	58:44	0:0	2	;
water	59:4	0:0	2	dmo_type
op	59:12	0:0	2	.
water	59:13	0:0	2	pUnk
op	59:18	0:0	2	=
water	59:20	0:0	2	0
water	59:21	0:0	2	;
water	61:4	0:0	2	i
op	61:6	0:0	2	=
water	61:8	0:0	2	0
water	61:9	0:0	2	,
water	61:11	0:0	2	i_selected
op	61:22	0:0	2	=
op	61:24	0:0	2	-
water	61:25	0:0	2	1
water	61:26	0:0	2	;
while	62:4	70:4	2	(!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& dmo_type ))
cond	62:11	62:63	3	!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& dmo_type )
op	62:11	0:0	4	!
call	62:12	62:63	4	p_dmo->vt->GetOutputType
arg	62:38	62:43	5	p_dmo
water	62:38	0:0	6	p_dmo
arg	62:45	62:46	5	0
water	62:45	0:0	6	0
arg	62:48	62:51	5	i++
water	62:48	0:0	6	i
op	62:49	0:0	6	++
arg	62:53	62:63	5	&dmo_type
op	62:53	0:0	6	&
water	62:54	0:0	6	dmo_type
stmts	63:4	70:4	3	
water	63:4	0:0	4	{
water	64:8	0:0	4	p_vih
op	64:14	0:0	4	=
water	64:16	0:0	4	(
water	64:17	0:0	4	VIDEOINFOHEADER
op	64:33	0:0	4	*
water	64:34	0:0	4	)
water	64:35	0:0	4	dmo_type
op	64:43	0:0	4	.
water	64:44	0:0	4	pbFormat
water	64:52	0:0	4	;
call	65:8	66:49	4	msg_Dbg
arg	65:17	65:22	5	p_enc
water	65:17	0:0	6	p_enc
arg	65:24	65:55	5	"available output codec: %4.4s"
water	65:24	0:0	6	"available output codec: %4.4s"
arg	66:17	66:49	5	(char*)&dmo_type.subtype.Data1
water	66:17	0:0	6	(
water	66:18	0:0	6	char
op	66:23	0:0	6	*
water	66:24	0:0	6	)
op	66:25	0:0	6	&
water	66:26	0:0	6	dmo_type
op	66:34	0:0	6	.
water	66:35	0:0	6	subtype
op	66:42	0:0	6	.
water	66:43	0:0	6	Data1
water	66:50	0:0	4	;
if	67:8	68:30	4	(p_vih -> bmiHeader . biCompression == p_enc -> fmt_out . i_codec)
cond	67:12	67:61	5	p_vih -> bmiHeader . biCompression == p_enc -> fmt_out . i_codec
water	67:12	0:0	6	p_vih
op	67:17	0:0	6	->
water	67:19	0:0	6	bmiHeader
op	67:28	0:0	6	.
water	67:29	0:0	6	biCompression
op	67:43	0:0	6	==
water	67:46	0:0	6	p_enc
op	67:51	0:0	6	->
water	67:53	0:0	6	fmt_out
op	67:60	0:0	6	.
water	67:61	0:0	6	i_codec
stmts	68:12	68:30	5	
water	68:12	0:0	6	i_selected
op	68:23	0:0	6	=
water	68:25	0:0	6	i
op	68:27	0:0	6	-
water	68:29	0:0	6	1
water	68:30	0:0	6	;
call	69:8	69:36	4	DMOFreeMediaType
arg	69:26	69:36	5	&dmo_type
op	69:26	0:0	6	&
water	69:27	0:0	6	dmo_type
water	69:37	0:0	4	;
water	70:4	0:0	4	}
if	71:4	76:4	2	(i_selected < 0)
cond	71:8	71:21	3	i_selected < 0
water	71:8	0:0	4	i_selected
op	71:19	0:0	4	<
water	71:21	0:0	4	0
stmts	72:4	76:4	3	
water	72:4	0:0	4	{
call	73:8	74:49	4	msg_Err
arg	73:17	73:22	5	p_enc
water	73:17	0:0	6	p_enc
arg	73:24	73:52	5	"couldn't find codec: %4.4s"
water	73:24	0:0	6	"couldn't find codec: %4.4s"
arg	74:17	74:49	5	(char*)&p_enc->fmt_out.i_codec
water	74:17	0:0	6	(
water	74:18	0:0	6	char
op	74:23	0:0	6	*
water	74:24	0:0	6	)
op	74:25	0:0	6	&
water	74:26	0:0	6	p_enc
op	74:31	0:0	6	->
water	74:33	0:0	6	fmt_out
op	74:40	0:0	6	.
water	74:41	0:0	6	i_codec
water	74:50	0:0	4	;
return	75:8	75:27	4	VLC_EGENERIC
water	75:15	0:0	5	VLC_EGENERIC
water	76:4	0:0	4	}
call	77:4	77:62	2	p_dmo->vt->GetOutputType
arg	77:30	77:35	3	p_dmo
water	77:30	0:0	4	p_dmo
arg	77:37	77:38	3	0
water	77:37	0:0	4	0
arg	77:40	77:50	3	i_selected
water	77:40	0:0	4	i_selected
arg	77:52	77:62	3	&dmo_type
op	77:52	0:0	4	&
water	77:53	0:0	4	dmo_type
water	77:63	0:0	2	;
water	78:4	0:0	2	(
water	78:5	0:0	2	(
water	78:6	0:0	2	VIDEOINFOHEADER
op	78:22	0:0	2	*
water	78:23	0:0	2	)
water	78:24	0:0	2	dmo_type
op	78:32	0:0	2	.
water	78:33	0:0	2	pbFormat
water	78:41	0:0	2	)
op	78:42	0:0	2	->
water	78:44	0:0	2	dwBitRate
op	78:54	0:0	2	=
water	79:8	0:0	2	p_enc
op	79:13	0:0	2	->
water	79:15	0:0	2	fmt_out
op	79:22	0:0	2	.
water	79:23	0:0	2	i_bitrate
water	79:32	0:0	2	;
while	81:4	119:4	2	(1)
cond	81:11	81:11	3	1
water	81:11	0:0	4	1
stmts	82:4	119:4	3	
water	82:4	0:0	4	{
decl	83:8	83:39	4	IWMCodecPrivateData	*p_privdata
decl	84:8	84:30	4	VIDEOINFOHEADER	*p_vih
decl	85:8	85:27	4	uint8_t	*p_data
op	85:24	0:0	4	=
water	85:26	0:0	4	0
decl	86:8	86:34	4	uint32_t	i_data
op	86:24	0:0	4	=
water	86:26	0:0	4	0
water	86:27	0:0	4	,
decl	86:8	86:34	4	uint32_t	i_vih
water	87:8	0:0	4	i_err
op	87:14	0:0	4	=
call	87:16	89:63	4	p_dmo->vt->QueryInterface
arg	87:43	87:60	5	(IUnknown*)p_dmo
water	87:43	0:0	6	(
water	87:44	0:0	6	IUnknown
op	87:53	0:0	6	*
water	87:54	0:0	6	)
water	87:55	0:0	6	p_dmo
arg	88:43	88:67	5	&IID_IWMCodecPrivateData
op	88:43	0:0	6	&
water	88:44	0:0	6	IID_IWMCodecPrivateData
arg	89:43	89:63	5	(void**)&p_privdata
water	89:43	0:0	6	(
water	89:44	0:0	6	void
op	89:48	0:0	6	*
op	89:49	0:0	6	*
water	89:50	0:0	6	)
op	89:51	0:0	6	&
water	89:52	0:0	6	p_privdata
water	89:64	0:0	4	;
if	90:8	90:25	4	(i_err)
cond	90:12	90:12	5	i_err
water	90:12	0:0	6	i_err
stmts	90:20	90:25	5	
break	90:20	90:25	6	
water	91:8	0:0	4	i_err
op	91:14	0:0	4	=
call	91:16	91:76	4	p_privdata->vt->SetPartialOutputType
arg	91:54	91:64	5	p_privdata
water	91:54	0:0	6	p_privdata
arg	91:66	91:76	5	&dmo_type
op	91:66	0:0	6	&
water	91:67	0:0	6	dmo_type
water	91:77	0:0	4	;
if	92:8	97:8	4	(i_err)
cond	92:12	92:12	5	i_err
water	92:12	0:0	6	i_err
stmts	93:8	97:8	5	
water	93:8	0:0	6	{
call	94:12	94:60	6	msg_Err
arg	94:21	94:26	7	p_enc
water	94:21	0:0	8	p_enc
arg	94:28	94:60	7	"SetPartialOutputType() failed"
water	94:28	0:0	8	"SetPartialOutputType() failed"
water	94:61	0:0	6	;
call	95:12	95:60	6	p_privdata->vt->Release
arg	95:37	95:60	7	(IUnknown*)p_privdata
water	95:37	0:0	8	(
water	95:38	0:0	8	IUnknown
op	95:47	0:0	8	*
water	95:48	0:0	8	)
water	95:49	0:0	8	p_privdata
water	95:61	0:0	6	;
break	96:12	96:17	6	
water	97:8	0:0	6	}
water	98:8	0:0	4	i_err
op	98:14	0:0	4	=
call	98:16	98:74	4	p_privdata->vt->GetPrivateData
arg	98:48	98:58	5	p_privdata
water	98:48	0:0	6	p_privdata
arg	98:60	98:64	5	NULL
water	98:60	0:0	6	NULL
arg	98:66	98:74	5	&i_data
op	98:66	0:0	6	&
water	98:67	0:0	6	i_data
water	98:75	0:0	4	;
if	99:8	104:8	4	(i_err)
cond	99:12	99:12	5	i_err
water	99:12	0:0	6	i_err
stmts	100:8	104:8	5	
water	100:8	0:0	6	{
call	101:12	101:54	6	msg_Err
arg	101:21	101:26	7	p_enc
water	101:21	0:0	8	p_enc
arg	101:28	101:54	7	"GetPrivateData() failed"
water	101:28	0:0	8	"GetPrivateData() failed"
water	101:55	0:0	6	;
call	102:12	102:60	6	p_privdata->vt->Release
arg	102:37	102:60	7	(IUnknown*)p_privdata
water	102:37	0:0	8	(
water	102:38	0:0	8	IUnknown
op	102:47	0:0	8	*
water	102:48	0:0	8	)
water	102:49	0:0	8	p_privdata
water	102:61	0:0	6	;
break	103:12	103:17	6	
water	104:8	0:0	6	}
water	105:8	0:0	4	p_data
op	105:15	0:0	4	=
call	105:17	105:32	4	malloc
arg	105:25	105:32	5	i_data
water	105:25	0:0	6	i_data
water	105:33	0:0	4	;
water	106:8	0:0	4	i_err
op	106:14	0:0	4	=
call	106:16	106:76	4	p_privdata->vt->GetPrivateData
arg	106:48	106:58	5	p_privdata
water	106:48	0:0	6	p_privdata
arg	106:60	106:66	5	p_data
water	106:60	0:0	6	p_data
arg	106:68	106:76	5	&i_data
op	106:68	0:0	6	&
water	106:69	0:0	6	i_data
water	106:77	0:0	4	;
water	108:8	0:0	4	i_vih
op	108:14	0:0	4	=
water	108:16	0:0	4	dmo_type
op	108:24	0:0	4	.
water	108:25	0:0	4	cbFormat
op	108:34	0:0	4	+
water	108:36	0:0	4	i_data
water	108:42	0:0	4	;
water	109:8	0:0	4	p_vih
op	109:14	0:0	4	=
call	109:16	109:38	4	CoTaskMemAlloc
arg	109:32	109:38	5	i_vih
water	109:32	0:0	6	i_vih
water	109:39	0:0	4	;
call	110:8	110:60	4	memcpy
arg	110:16	110:21	5	p_vih
water	110:16	0:0	6	p_vih
arg	110:23	110:40	5	dmo_type.pbFormat
water	110:23	0:0	6	dmo_type
op	110:31	0:0	6	.
water	110:32	0:0	6	pbFormat
arg	110:42	110:60	5	dmo_type.cbFormat
water	110:42	0:0	6	dmo_type
op	110:50	0:0	6	.
water	110:51	0:0	6	cbFormat
water	110:61	0:0	4	;
call	111:8	111:71	4	memcpy
arg	111:16	111:54	5	((uint8_t*)p_vih)+dmo_type.cbFormat
water	111:16	0:0	6	(
water	111:17	0:0	6	(
water	111:18	0:0	6	uint8_t
op	111:26	0:0	6	*
water	111:27	0:0	6	)
water	111:28	0:0	6	p_vih
water	111:33	0:0	6	)
op	111:35	0:0	6	+
water	111:37	0:0	6	dmo_type
op	111:45	0:0	6	.
water	111:46	0:0	6	cbFormat
arg	111:56	111:62	5	p_data
water	111:56	0:0	6	p_data
arg	111:64	111:71	5	i_data
water	111:64	0:0	6	i_data
water	111:72	0:0	4	;
call	112:8	112:36	4	DMOFreeMediaType
arg	112:26	112:36	5	&dmo_type
op	112:26	0:0	6	&
water	112:27	0:0	6	dmo_type
water	112:37	0:0	4	;
water	113:8	0:0	4	dmo_type
op	113:16	0:0	4	.
water	113:17	0:0	4	pbFormat
op	113:26	0:0	4	=
water	113:28	0:0	4	(
water	113:29	0:0	4	char
op	113:33	0:0	4	*
water	113:34	0:0	4	)
water	113:35	0:0	4	p_vih
water	113:40	0:0	4	;
water	114:8	0:0	4	dmo_type
op	114:16	0:0	4	.
water	114:17	0:0	4	cbFormat
op	114:26	0:0	4	=
water	114:28	0:0	4	i_vih
water	114:33	0:0	4	;
call	115:8	115:55	4	msg_Dbg
arg	115:17	115:22	5	p_enc
water	115:17	0:0	6	p_enc
arg	115:24	115:46	5	"found extra data: %i"
water	115:24	0:0	6	"found extra data: %i"
arg	115:48	115:55	5	i_data
water	115:48	0:0	6	i_data
water	115:56	0:0	4	;
water	116:8	0:0	4	p_enc
op	116:13	0:0	4	->
water	116:15	0:0	4	fmt_out
op	116:22	0:0	4	.
water	116:23	0:0	4	i_extra
op	116:31	0:0	4	=
water	116:33	0:0	4	i_data
water	116:39	0:0	4	;
water	117:8	0:0	4	p_enc
op	117:13	0:0	4	->
water	117:15	0:0	4	fmt_out
op	117:22	0:0	4	.
water	117:23	0:0	4	p_extra
op	117:31	0:0	4	=
water	117:33	0:0	4	p_data
water	117:39	0:0	4	;
break	118:8	118:13	4	
water	119:4	0:0	4	}
water	120:4	0:0	2	i_err
op	120:10	0:0	2	=
call	120:12	120:61	2	p_dmo->vt->SetOutputType
arg	120:38	120:43	3	p_dmo
water	120:38	0:0	4	p_dmo
arg	120:45	120:46	3	0
water	120:45	0:0	4	0
arg	120:48	120:57	3	&dmo_type
op	120:48	0:0	4	&
water	120:49	0:0	4	dmo_type
arg	120:59	120:61	3	0
water	120:59	0:0	4	0
water	120:62	0:0	2	;
water	121:4	0:0	2	p_vih
op	121:10	0:0	2	=
water	121:12	0:0	2	(
water	121:13	0:0	2	VIDEOINFOHEADER
op	121:29	0:0	2	*
water	121:30	0:0	2	)
water	121:31	0:0	2	dmo_type
op	121:39	0:0	2	.
water	121:40	0:0	2	pbFormat
water	121:48	0:0	2	;
water	122:4	0:0	2	p_enc
op	122:9	0:0	2	->
water	122:11	0:0	2	fmt_in
op	122:17	0:0	2	.
water	122:18	0:0	2	i_codec
op	122:26	0:0	2	=
water	122:28	0:0	2	VLC_CODEC_I420
water	122:42	0:0	2	;
call	123:4	123:32	2	DMOFreeMediaType
arg	123:22	123:32	3	&dmo_type
op	123:22	0:0	4	&
water	123:23	0:0	4	dmo_type
water	123:33	0:0	2	;
if	124:4	128:4	2	(i_err)
cond	124:8	124:8	3	i_err
water	124:8	0:0	4	i_err
stmts	125:4	128:4	3	
water	125:4	0:0	4	{
call	126:8	126:77	4	msg_Err
arg	126:17	126:22	5	p_enc
water	126:17	0:0	6	p_enc
arg	126:24	126:69	5	"can't set DMO output type for encoder: 0x%x"
water	126:24	0:0	6	"can't set DMO output type for encoder: 0x%x"
arg	126:71	126:77	5	i_err
water	126:71	0:0	6	i_err
water	126:78	0:0	4	;
return	127:8	127:27	4	VLC_EGENERIC
water	127:15	0:0	5	VLC_EGENERIC
water	128:4	0:0	4	}
call	129:4	129:63	2	msg_Dbg
arg	129:13	129:18	3	p_enc
water	129:13	0:0	4	p_enc
arg	129:20	129:63	3	"successfully set output type for encoder"
water	129:20	0:0	4	"successfully set output type for encoder"
water	129:64	0:0	2	;
return	130:4	130:22	2	VLC_SUCCESS
water	130:11	0:0	3	VLC_SUCCESS

decl	1:7	1:40	0	void	Release
water	1:19	0:0	0	(
water	1:21	0:0	0	void
op	1:26	0:0	0	*
water	1:27	0:0	0	,
water	1:29	0:0	0	uint8_t
op	1:37	0:0	0	*
water	1:39	0:0	0	)
func	2:0	22:0	0	static void	vda_Copy422YpCbCr8
params	2:30	0:0	1	
param	2:32	2:48	2	picture_t *	p_pic
param	3:32	3:56	2	CVPixelBufferRef	buffer
stmnts	0:0	21:47	1	
decl	5:4	5:34	2	int	i_dst_stride
water	5:20	0:0	2	,
decl	5:4	5:34	2	int	i_src_stride
decl	6:4	6:26	2	uint8_t	*p_dst
water	6:18	0:0	2	,
decl	6:4	6:26	2	uint8_t	*p_src
call	7:4	7:44	2	CVPixelBufferLockBaseAddress
arg	7:34	7:40	3	buffer
water	7:34	0:0	4	buffer
arg	7:42	7:44	3	0
water	7:42	0:0	4	0
water	7:45	0:0	2	;
for	8:4	20:4	2	( int i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	0:0	8:24	3	 int i_plane = 0 ;
decl	8:9	8:24	4	int	i_plane
op	8:21	0:0	4	=
water	8:23	0:0	4	0
cond	8:26	8:43	3	i_plane < p_pic -> i_planes
water	8:26	0:0	4	i_plane
op	8:34	0:0	4	<
water	8:36	0:0	4	p_pic
op	8:41	0:0	4	->
water	8:43	0:0	4	i_planes
forexpr	8:53	8:60	3	i_plane ++
water	8:53	0:0	4	i_plane
op	8:60	0:0	4	++
stmts	9:4	20:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	p_dst
op	10:14	0:0	4	=
water	10:16	0:0	4	p_pic
op	10:21	0:0	4	->
water	10:23	0:0	4	p
op	10:24	0:0	4	[
water	10:25	0:0	4	i_plane
op	10:32	0:0	4	]
op	10:33	0:0	4	.
water	10:34	0:0	4	p_pixels
water	10:42	0:0	4	;
water	11:8	0:0	4	p_src
op	11:14	0:0	4	=
call	11:16	11:68	4	CVPixelBufferGetBaseAddressOfPlane
arg	11:52	11:58	5	buffer
water	11:52	0:0	6	buffer
arg	11:60	11:68	5	i_plane
water	11:60	0:0	6	i_plane
water	11:69	0:0	4	;
water	12:8	0:0	4	i_dst_stride
op	12:22	0:0	4	=
water	12:24	0:0	4	p_pic
op	12:29	0:0	4	->
water	12:31	0:0	4	p
op	12:32	0:0	4	[
water	12:33	0:0	4	i_plane
op	12:40	0:0	4	]
op	12:41	0:0	4	.
water	12:42	0:0	4	i_pitch
water	12:49	0:0	4	;
water	13:8	0:0	4	i_src_stride
op	13:22	0:0	4	=
call	13:24	13:76	4	CVPixelBufferGetBytesPerRowOfPlane
arg	13:60	13:66	5	buffer
water	13:60	0:0	6	buffer
arg	13:68	13:76	5	i_plane
water	13:68	0:0	6	i_plane
water	13:77	0:0	4	;
for	14:8	19:8	4	( int i_line = 0 ;i_line < p_pic -> p [ i_plane ] . i_visible_lines;i_line ++)
forinit	0:0	14:27	5	 int i_line = 0 ;
decl	14:13	14:27	6	int	i_line
op	14:24	0:0	6	=
water	14:26	0:0	6	0
cond	14:29	14:56	5	i_line < p_pic -> p [ i_plane ] . i_visible_lines
water	14:29	0:0	6	i_line
op	14:36	0:0	6	<
water	14:38	0:0	6	p_pic
op	14:43	0:0	6	->
water	14:45	0:0	6	p
op	14:46	0:0	6	[
water	14:47	0:0	6	i_plane
op	14:54	0:0	6	]
op	14:55	0:0	6	.
water	14:56	0:0	6	i_visible_lines
forexpr	14:74	14:80	5	i_line ++
water	14:74	0:0	6	i_line
op	14:80	0:0	6	++
stmts	15:8	19:8	5	
water	15:8	0:0	6	{
call	16:12	16:47	6	memcpy
arg	16:20	16:25	7	p_dst
water	16:20	0:0	8	p_dst
arg	16:27	16:32	7	p_src
water	16:27	0:0	8	p_src
arg	16:34	16:47	7	i_src_stride
water	16:34	0:0	8	i_src_stride
water	16:48	0:0	6	;
water	17:12	0:0	6	p_src
op	17:18	0:0	6	+=
water	17:21	0:0	6	i_src_stride
water	17:33	0:0	6	;
water	18:12	0:0	6	p_dst
op	18:18	0:0	6	+=
water	18:21	0:0	6	i_dst_stride
water	18:33	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
call	21:4	21:46	2	CVPixelBufferUnlockBaseAddress
arg	21:36	21:42	3	buffer
water	21:36	0:0	4	buffer
arg	21:44	21:46	3	0
water	21:44	0:0	4	0
water	21:47	0:0	2	;

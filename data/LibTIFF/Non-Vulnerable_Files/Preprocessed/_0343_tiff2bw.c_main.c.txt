func	1:0	158:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	157:11	1	
decl	4:1	4:34	2	uint32	rowsperstrip
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	uint32
water	4:30	0:0	2	)
op	4:32	0:0	2	-
water	4:33	0:0	2	1
decl	5:1	5:15	2	TIFF	*in
water	5:9	0:0	2	,
decl	5:1	5:15	2	TIFF	*out
decl	6:1	6:12	2	uint32	w
water	6:9	0:0	2	,
decl	6:1	6:12	2	uint32	h
decl	7:1	7:23	2	uint16	samplesperpixel
decl	8:1	8:21	2	uint16	bitspersample
decl	9:1	9:14	2	uint16	config
decl	10:1	10:19	2	uint16	photometric
decl	11:1	11:12	2	uint16	*red
decl	12:1	12:14	2	uint16	*green
decl	13:1	13:13	2	uint16	*blue
decl	14:1	14:16	2	tsize_t	rowsize
water	15:1	0:0	2	register
water	15:10	0:0	2	uint32
water	15:17	0:0	2	row
water	15:20	0:0	2	;
water	16:1	0:0	2	register
water	16:10	0:0	2	tsample_t
water	16:20	0:0	2	s
water	16:21	0:0	2	;
decl	17:1	17:30	2	unsigned char	*inbuf
water	17:21	0:0	2	,
decl	17:1	17:30	2	unsigned char	*outbuf
decl	18:1	18:17	2	char	thing[1024]
decl	19:1	19:6	2	int	c
water	20:1	0:0	2	extern
water	20:8	0:0	2	int
water	20:12	0:0	2	optind
water	20:18	0:0	2	;
water	21:1	0:0	2	extern
water	21:8	0:0	2	char
op	21:13	0:0	2	*
water	21:14	0:0	2	optarg
water	21:20	0:0	2	;
while	22:1	43:2	2	(( c =getopt (argc ,argv ,"c:r:R:G:B:" ) ) != - 1)
cond	22:8	22:51	3	( c =getopt (argc ,argv ,"c:r:R:G:B:" ) ) != - 1
water	22:8	0:0	4	(
water	22:9	0:0	4	c
op	22:11	0:0	4	=
call	22:13	22:44	4	getopt
arg	22:20	22:24	5	argc
water	22:20	0:0	6	argc
arg	22:26	22:30	5	argv
water	22:26	0:0	6	argv
arg	22:32	22:44	5	"c:r:R:G:B:"
water	22:32	0:0	6	"c:r:R:G:B:"
water	22:45	0:0	4	)
op	22:47	0:0	4	!=
op	22:50	0:0	4	-
water	22:51	0:0	4	1
stmts	23:2	43:2	3	
switch	23:2	43:2	4	(c)
cond	23:10	23:10	5	c
water	23:10	0:0	6	c
stmts	23:13	43:2	5	
water	23:13	0:0	6	{
water	24:2	0:0	6	case
water	24:7	0:0	6	'c'
water	24:10	0:0	6	:
water	25:3	0:0	6	if
water	25:6	0:0	6	(
op	25:7	0:0	6	!
call	25:8	25:37	6	processCompressOptions
arg	25:31	25:37	7	optarg
water	25:31	0:0	8	optarg
water	25:38	0:0	6	)
call	26:4	26:10	6	usage
water	26:11	0:0	6	;
break	27:3	27:8	6	
water	28:2	0:0	6	case
water	28:7	0:0	6	'r'
water	28:10	0:0	6	:
water	29:3	0:0	6	rowsperstrip
op	29:16	0:0	6	=
call	29:18	29:29	6	atoi
arg	29:23	29:29	7	optarg
water	29:23	0:0	8	optarg
water	29:30	0:0	6	;
break	30:3	30:8	6	
water	31:2	0:0	6	case
water	31:7	0:0	6	'R'
water	31:10	0:0	6	:
water	32:3	0:0	6	RED
op	32:7	0:0	6	=
call	32:9	32:25	6	PCT
arg	32:13	32:25	7	atoi(optarg)
call	32:13	32:24	8	atoi
arg	32:18	32:24	9	optarg
water	32:18	0:0	10	optarg
water	32:26	0:0	6	;
break	33:3	33:8	6	
water	34:2	0:0	6	case
water	34:7	0:0	6	'G'
water	34:10	0:0	6	:
water	35:3	0:0	6	GREEN
op	35:9	0:0	6	=
call	35:11	35:27	6	PCT
arg	35:15	35:27	7	atoi(optarg)
call	35:15	35:26	8	atoi
arg	35:20	35:26	9	optarg
water	35:20	0:0	10	optarg
water	35:28	0:0	6	;
break	36:3	36:8	6	
water	37:2	0:0	6	case
water	37:7	0:0	6	'B'
water	37:10	0:0	6	:
water	38:3	0:0	6	BLUE
op	38:8	0:0	6	=
call	38:10	38:26	6	PCT
arg	38:14	38:26	7	atoi(optarg)
call	38:14	38:25	8	atoi
arg	38:19	38:25	9	optarg
water	38:19	0:0	10	optarg
water	38:27	0:0	6	;
break	39:3	39:8	6	
water	40:2	0:0	6	case
water	40:7	0:0	6	'?'
water	40:10	0:0	6	:
call	41:3	41:9	6	usage
water	41:10	0:0	6	;
water	43:2	0:0	6	}
if	44:1	45:9	2	(argc - optind < 2)
cond	44:5	44:21	3	argc - optind < 2
water	44:5	0:0	4	argc
op	44:10	0:0	4	-
water	44:12	0:0	4	optind
op	44:19	0:0	4	<
water	44:21	0:0	4	2
stmts	45:2	45:9	3	
call	45:2	45:8	4	usage
water	45:9	0:0	4	;
water	46:1	0:0	2	in
op	46:4	0:0	2	=
call	46:6	46:32	2	TIFFOpen
arg	46:15	46:27	3	argv[optind]
water	46:15	0:0	4	argv
op	46:19	0:0	4	[
water	46:20	0:0	4	optind
op	46:26	0:0	4	]
arg	46:29	46:32	3	"r"
water	46:29	0:0	4	"r"
water	46:33	0:0	2	;
if	47:1	48:13	2	(in == NULL)
cond	47:5	47:11	3	in == NULL
water	47:5	0:0	4	in
op	47:8	0:0	4	==
water	47:11	0:0	4	NULL
stmts	48:2	48:13	3	
return	48:2	48:13	4	(-1)
water	48:9	0:0	5	(
op	48:10	0:0	5	-
water	48:11	0:0	5	1
water	48:12	0:0	5	)
water	49:1	0:0	2	photometric
op	49:13	0:0	2	=
water	49:15	0:0	2	0
water	49:16	0:0	2	;
call	50:1	50:51	2	TIFFGetField
arg	50:14	50:16	3	in
water	50:14	0:0	4	in
arg	50:18	50:37	3	TIFFTAG_PHOTOMETRIC
water	50:18	0:0	4	TIFFTAG_PHOTOMETRIC
arg	50:39	50:51	3	&photometric
op	50:39	0:0	4	&
water	50:40	0:0	4	photometric
water	50:52	0:0	2	;
if	51:1	56:1	2	(photometric != PHOTOMETRIC_RGB && photometric != PHOTOMETRIC_PALETTE)
cond	51:5	51:54	3	photometric != PHOTOMETRIC_RGB && photometric != PHOTOMETRIC_PALETTE
water	51:5	0:0	4	photometric
op	51:17	0:0	4	!=
water	51:20	0:0	4	PHOTOMETRIC_RGB
op	51:36	0:0	4	&&
water	51:39	0:0	4	photometric
op	51:51	0:0	4	!=
water	51:54	0:0	4	PHOTOMETRIC_PALETTE
stmts	51:76	56:1	3	
water	51:76	0:0	4	{
call	52:2	54:18	4	fprintf
arg	52:10	52:16	5	stderr
water	52:10	0:0	6	stderr
arg	53:5	53:69	5	"%s: Bad photometric; can only handle RGB and Palette images.\n"
water	53:5	0:0	6	"%s: Bad photometric; can only handle RGB and Palette images.\n"
arg	54:6	54:18	5	argv[optind]
water	54:6	0:0	6	argv
op	54:10	0:0	6	[
water	54:11	0:0	6	optind
op	54:17	0:0	6	]
water	54:19	0:0	4	;
return	55:2	55:13	4	(-1)
water	55:9	0:0	5	(
op	55:10	0:0	5	-
water	55:11	0:0	5	1
water	55:12	0:0	5	)
water	56:1	0:0	4	}
call	57:1	57:59	2	TIFFGetField
arg	57:14	57:16	3	in
water	57:14	0:0	4	in
arg	57:18	57:41	3	TIFFTAG_SAMPLESPERPIXEL
water	57:18	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	57:43	57:59	3	&samplesperpixel
op	57:43	0:0	4	&
water	57:44	0:0	4	samplesperpixel
water	57:60	0:0	2	;
if	58:1	62:1	2	(samplesperpixel != 1 && samplesperpixel != 3)
cond	58:5	58:48	3	samplesperpixel != 1 && samplesperpixel != 3
water	58:5	0:0	4	samplesperpixel
op	58:21	0:0	4	!=
water	58:24	0:0	4	1
op	58:26	0:0	4	&&
water	58:29	0:0	4	samplesperpixel
op	58:45	0:0	4	!=
water	58:48	0:0	4	3
stmts	58:51	62:1	3	
water	58:51	0:0	4	{
call	59:2	60:35	4	fprintf
arg	59:10	59:16	5	stderr
water	59:10	0:0	6	stderr
arg	59:18	59:47	5	"%s: Bad samples/pixel %u.\n"
water	59:18	0:0	6	"%s: Bad samples/pixel %u.\n"
arg	60:6	60:18	5	argv[optind]
water	60:6	0:0	6	argv
op	60:10	0:0	6	[
water	60:11	0:0	6	optind
op	60:17	0:0	6	]
arg	60:20	60:35	5	samplesperpixel
water	60:20	0:0	6	samplesperpixel
water	60:36	0:0	4	;
return	61:2	61:13	4	(-1)
water	61:9	0:0	5	(
op	61:10	0:0	5	-
water	61:11	0:0	5	1
water	61:12	0:0	5	)
water	62:1	0:0	4	}
call	63:1	63:55	2	TIFFGetField
arg	63:14	63:16	3	in
water	63:14	0:0	4	in
arg	63:18	63:39	3	TIFFTAG_BITSPERSAMPLE
water	63:18	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	63:41	63:55	3	&bitspersample
op	63:41	0:0	4	&
water	63:42	0:0	4	bitspersample
water	63:56	0:0	2	;
if	64:1	68:1	2	(bitspersample != 8)
cond	64:5	64:22	3	bitspersample != 8
water	64:5	0:0	4	bitspersample
op	64:19	0:0	4	!=
water	64:22	0:0	4	8
stmts	64:25	68:1	3	
water	64:25	0:0	4	{
call	65:2	66:62	4	fprintf
arg	65:10	65:16	5	stderr
water	65:10	0:0	6	stderr
arg	66:6	66:48	5	" %s: Sorry, only handle 8-bit samples.\n"
water	66:6	0:0	6	" %s: Sorry, only handle 8-bit samples.\n"
arg	66:50	66:62	5	argv[optind]
water	66:50	0:0	6	argv
op	66:54	0:0	6	[
water	66:55	0:0	6	optind
op	66:61	0:0	6	]
water	66:63	0:0	4	;
return	67:2	67:13	4	(-1)
water	67:9	0:0	5	(
op	67:10	0:0	5	-
water	67:11	0:0	5	1
water	67:12	0:0	5	)
water	68:1	0:0	4	}
call	69:1	69:40	2	TIFFGetField
arg	69:14	69:16	3	in
water	69:14	0:0	4	in
arg	69:18	69:36	3	TIFFTAG_IMAGEWIDTH
water	69:18	0:0	4	TIFFTAG_IMAGEWIDTH
arg	69:38	69:40	3	&w
op	69:38	0:0	4	&
water	69:39	0:0	4	w
water	69:41	0:0	2	;
call	70:1	70:41	2	TIFFGetField
arg	70:14	70:16	3	in
water	70:14	0:0	4	in
arg	70:18	70:37	3	TIFFTAG_IMAGELENGTH
water	70:18	0:0	4	TIFFTAG_IMAGELENGTH
arg	70:39	70:41	3	&h
op	70:39	0:0	4	&
water	70:40	0:0	4	h
water	70:42	0:0	2	;
call	71:1	71:47	2	TIFFGetField
arg	71:14	71:16	3	in
water	71:14	0:0	4	in
arg	71:18	71:38	3	TIFFTAG_PLANARCONFIG
water	71:18	0:0	4	TIFFTAG_PLANARCONFIG
arg	71:40	71:47	3	&config
op	71:40	0:0	4	&
water	71:41	0:0	4	config
water	71:48	0:0	2	;
water	72:1	0:0	2	out
op	72:5	0:0	2	=
call	72:7	72:35	2	TIFFOpen
arg	72:16	72:30	3	argv[optind+1]
water	72:16	0:0	4	argv
op	72:20	0:0	4	[
water	72:21	0:0	4	optind
op	72:27	0:0	4	+
water	72:28	0:0	4	1
op	72:29	0:0	4	]
arg	72:32	72:35	3	"w"
water	72:32	0:0	4	"w"
water	72:36	0:0	2	;
if	73:1	74:13	2	(out == NULL)
cond	73:5	73:12	3	out == NULL
water	73:5	0:0	4	out
op	73:9	0:0	4	==
water	73:12	0:0	4	NULL
stmts	74:2	74:13	3	
return	74:2	74:13	4	(-1)
water	74:9	0:0	5	(
op	74:10	0:0	5	-
water	74:11	0:0	5	1
water	74:12	0:0	5	)
call	75:1	75:40	2	TIFFSetField
arg	75:14	75:17	3	out
water	75:14	0:0	4	out
arg	75:19	75:37	3	TIFFTAG_IMAGEWIDTH
water	75:19	0:0	4	TIFFTAG_IMAGEWIDTH
arg	75:39	75:40	3	w
water	75:39	0:0	4	w
water	75:41	0:0	2	;
call	76:1	76:41	2	TIFFSetField
arg	76:14	76:17	3	out
water	76:14	0:0	4	out
arg	76:19	76:38	3	TIFFTAG_IMAGELENGTH
water	76:19	0:0	4	TIFFTAG_IMAGELENGTH
arg	76:40	76:41	3	h
water	76:40	0:0	4	h
water	76:42	0:0	2	;
call	77:1	77:43	2	TIFFSetField
arg	77:14	77:17	3	out
water	77:14	0:0	4	out
arg	77:19	77:40	3	TIFFTAG_BITSPERSAMPLE
water	77:19	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	77:42	77:43	3	8
water	77:42	0:0	4	8
water	77:44	0:0	2	;
call	78:1	78:45	2	TIFFSetField
arg	78:14	78:17	3	out
water	78:14	0:0	4	out
arg	78:19	78:42	3	TIFFTAG_SAMPLESPERPIXEL
water	78:19	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	78:44	78:45	3	1
water	78:44	0:0	4	1
water	78:46	0:0	2	;
call	79:1	79:60	2	TIFFSetField
arg	79:14	79:17	3	out
water	79:14	0:0	4	out
arg	79:19	79:39	3	TIFFTAG_PLANARCONFIG
water	79:19	0:0	4	TIFFTAG_PLANARCONFIG
arg	79:41	79:60	3	PLANARCONFIG_CONTIG
water	79:41	0:0	4	PLANARCONFIG_CONTIG
water	79:61	0:0	2	;
call	80:1	80:15	2	cpTags
arg	80:8	80:10	3	in
water	80:8	0:0	4	in
arg	80:12	80:15	3	out
water	80:12	0:0	4	out
water	80:16	0:0	2	;
if	81:1	94:1	2	(compression != ( uint16 ) - 1)
cond	81:5	81:30	3	compression != ( uint16 ) - 1
water	81:5	0:0	4	compression
op	81:17	0:0	4	!=
water	81:20	0:0	4	(
water	81:21	0:0	4	uint16
water	81:27	0:0	4	)
op	81:29	0:0	4	-
water	81:30	0:0	4	1
stmts	81:33	94:1	3	
water	81:33	0:0	4	{
call	82:2	82:52	4	TIFFSetField
arg	82:15	82:18	5	out
water	82:15	0:0	6	out
arg	82:20	82:39	5	TIFFTAG_COMPRESSION
water	82:20	0:0	6	TIFFTAG_COMPRESSION
arg	82:41	82:52	5	compression
water	82:41	0:0	6	compression
water	82:53	0:0	4	;
switch	83:2	93:2	4	(compression)
cond	83:10	83:10	5	compression
water	83:10	0:0	6	compression
stmts	83:23	93:2	5	
water	83:23	0:0	6	{
label	84:2	84:23	6	case COMPRESSION_JPEG :
call	85:3	85:49	6	TIFFSetField
arg	85:16	85:19	7	out
water	85:16	0:0	8	out
arg	85:21	85:40	7	TIFFTAG_JPEGQUALITY
water	85:21	0:0	8	TIFFTAG_JPEGQUALITY
arg	85:42	85:49	7	quality
water	85:42	0:0	8	quality
water	85:50	0:0	6	;
call	86:3	86:57	6	TIFFSetField
arg	86:16	86:19	7	out
water	86:16	0:0	8	out
arg	86:21	86:42	7	TIFFTAG_JPEGCOLORMODE
water	86:21	0:0	8	TIFFTAG_JPEGCOLORMODE
arg	86:44	86:57	7	jpegcolormode
water	86:44	0:0	8	jpegcolormode
water	86:58	0:0	6	;
break	87:3	87:8	6	
label	88:2	88:22	6	case COMPRESSION_LZW :
label	89:2	89:26	6	case COMPRESSION_DEFLATE :
if	90:3	91:51	6	(predictor != 0)
cond	90:7	90:20	7	predictor != 0
water	90:7	0:0	8	predictor
op	90:17	0:0	8	!=
water	90:20	0:0	8	0
stmts	91:4	91:51	7	
call	91:4	91:50	8	TIFFSetField
arg	91:17	91:20	9	out
water	91:17	0:0	10	out
arg	91:22	91:39	9	TIFFTAG_PREDICTOR
water	91:22	0:0	10	TIFFTAG_PREDICTOR
arg	91:41	91:50	9	predictor
water	91:41	0:0	10	predictor
water	91:51	0:0	8	;
break	92:3	92:8	6	
water	93:2	0:0	6	}
water	94:1	0:0	4	}
call	95:1	95:62	2	TIFFSetField
arg	95:14	95:17	3	out
water	95:14	0:0	4	out
arg	95:19	95:38	3	TIFFTAG_PHOTOMETRIC
water	95:19	0:0	4	TIFFTAG_PHOTOMETRIC
arg	95:40	95:62	3	PHOTOMETRIC_MINISBLACK
water	95:40	0:0	4	PHOTOMETRIC_MINISBLACK
water	95:63	0:0	2	;
call	96:1	96:49	2	sprintf
arg	96:9	96:14	3	thing
water	96:9	0:0	4	thing
arg	96:16	96:35	3	"B&W version of %s"
water	96:16	0:0	4	"B&W version of %s"
arg	96:37	96:49	3	argv[optind]
water	96:37	0:0	4	argv
op	96:41	0:0	4	[
water	96:42	0:0	4	optind
op	96:48	0:0	4	]
water	96:50	0:0	2	;
call	97:1	97:50	2	TIFFSetField
arg	97:14	97:17	3	out
water	97:14	0:0	4	out
arg	97:19	97:43	3	TIFFTAG_IMAGEDESCRIPTION
water	97:19	0:0	4	TIFFTAG_IMAGEDESCRIPTION
arg	97:45	97:50	3	thing
water	97:45	0:0	4	thing
water	97:51	0:0	2	;
call	98:1	98:46	2	TIFFSetField
arg	98:14	98:17	3	out
water	98:14	0:0	4	out
arg	98:19	98:35	3	TIFFTAG_SOFTWARE
water	98:19	0:0	4	TIFFTAG_SOFTWARE
arg	98:37	98:46	3	"tiff2bw"
water	98:37	0:0	4	"tiff2bw"
water	98:47	0:0	2	;
water	99:1	0:0	2	outbuf
op	99:8	0:0	2	=
water	99:10	0:0	2	(
water	99:11	0:0	2	unsigned
water	99:20	0:0	2	char
op	99:25	0:0	2	*
water	99:26	0:0	2	)
call	99:27	99:60	2	_TIFFmalloc
arg	99:39	99:60	3	TIFFScanlineSize(out)
call	99:39	99:59	4	TIFFScanlineSize
arg	99:56	99:59	5	out
water	99:56	0:0	6	out
water	99:61	0:0	2	;
call	100:1	101:44	2	TIFFSetField
arg	100:14	100:17	3	out
water	100:14	0:0	4	out
arg	100:19	100:39	3	TIFFTAG_ROWSPERSTRIP
water	100:19	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	101:5	101:44	3	TIFFDefaultStripSize(out,rowsperstrip)
call	101:5	101:43	4	TIFFDefaultStripSize
arg	101:26	101:29	5	out
water	101:26	0:0	6	out
arg	101:31	101:43	5	rowsperstrip
water	101:31	0:0	6	rowsperstrip
water	101:45	0:0	2	;
switch	103:1	154:1	2	(pack (photometric ,config ))
cond	103:9	103:33	3	pack (photometric ,config )
call	103:9	103:33	4	pack
arg	103:14	103:25	5	photometric
water	103:14	0:0	6	photometric
arg	103:27	103:33	5	config
water	103:27	0:0	6	config
stmts	103:36	154:1	3	
water	103:36	0:0	4	{
water	104:1	0:0	4	case
call	104:6	104:51	4	pack
arg	104:11	104:30	5	PHOTOMETRIC_PALETTE
water	104:11	0:0	6	PHOTOMETRIC_PALETTE
arg	104:32	104:51	5	PLANARCONFIG_CONTIG
water	104:32	0:0	6	PLANARCONFIG_CONTIG
water	104:52	0:0	4	:
water	105:1	0:0	4	case
call	105:6	105:53	4	pack
arg	105:11	105:30	5	PHOTOMETRIC_PALETTE
water	105:11	0:0	6	PHOTOMETRIC_PALETTE
arg	105:32	105:53	5	PLANARCONFIG_SEPARATE
water	105:32	0:0	6	PLANARCONFIG_SEPARATE
water	105:54	0:0	4	:
call	106:2	106:56	4	TIFFGetField
arg	106:15	106:17	5	in
water	106:15	0:0	6	in
arg	106:19	106:35	5	TIFFTAG_COLORMAP
water	106:19	0:0	6	TIFFTAG_COLORMAP
arg	106:37	106:41	5	&red
op	106:37	0:0	6	&
water	106:38	0:0	6	red
arg	106:43	106:49	5	&green
op	106:43	0:0	6	&
water	106:44	0:0	6	green
arg	106:51	106:56	5	&blue
op	106:51	0:0	6	&
water	106:52	0:0	6	blue
water	106:57	0:0	4	;
if	111:2	120:2	4	(checkcmap (in ,1 << bitspersample ,red ,green ,blue ) == 16)
cond	111:6	111:59	5	checkcmap (in ,1 << bitspersample ,red ,green ,blue ) == 16
call	111:6	111:54	6	checkcmap
arg	111:16	111:18	7	in
water	111:16	0:0	8	in
arg	111:20	111:36	7	1<<bitspersample
water	111:20	0:0	8	1
op	111:21	0:0	8	<<
water	111:23	0:0	8	bitspersample
arg	111:38	111:41	7	red
water	111:38	0:0	8	red
arg	111:43	111:48	7	green
water	111:43	0:0	8	green
arg	111:50	111:54	7	blue
water	111:50	0:0	8	blue
op	111:56	0:0	6	==
water	111:59	0:0	6	16
stmts	111:63	120:2	5	
water	111:63	0:0	6	{
decl	112:3	112:8	6	int	i
for	114:3	118:3	6	(i = ( 1 << bitspersample ) - 1 ;i >= 0;i --)
forinit	114:8	114:32	7	i = ( 1 << bitspersample ) - 1 ;
water	114:8	0:0	8	i
op	114:10	0:0	8	=
water	114:12	0:0	8	(
water	114:13	0:0	8	1
op	114:14	0:0	8	<<
water	114:16	0:0	8	bitspersample
water	114:29	0:0	8	)
op	114:30	0:0	8	-
water	114:31	0:0	8	1
water	114:32	0:0	8	;
cond	114:34	114:39	7	i >= 0
water	114:34	0:0	8	i
op	114:36	0:0	8	>=
water	114:39	0:0	8	0
forexpr	114:42	114:43	7	i --
water	114:42	0:0	8	i
op	114:43	0:0	8	--
stmts	114:47	118:3	7	
water	114:47	0:0	8	{
water	115:4	0:0	8	red
op	115:7	0:0	8	[
water	115:8	0:0	8	i
op	115:9	0:0	8	]
op	115:11	0:0	8	=
call	115:13	115:23	8	CVT
arg	115:17	115:23	9	red[i]
water	115:17	0:0	10	red
op	115:20	0:0	10	[
water	115:21	0:0	10	i
op	115:22	0:0	10	]
water	115:24	0:0	8	;
water	116:4	0:0	8	green
op	116:9	0:0	8	[
water	116:10	0:0	8	i
op	116:11	0:0	8	]
op	116:13	0:0	8	=
call	116:15	116:27	8	CVT
arg	116:19	116:27	9	green[i]
water	116:19	0:0	10	green
op	116:24	0:0	10	[
water	116:25	0:0	10	i
op	116:26	0:0	10	]
water	116:28	0:0	8	;
water	117:4	0:0	8	blue
op	117:8	0:0	8	[
water	117:9	0:0	8	i
op	117:10	0:0	8	]
op	117:12	0:0	8	=
call	117:14	117:25	8	CVT
arg	117:18	117:25	9	blue[i]
water	117:18	0:0	10	blue
op	117:22	0:0	10	[
water	117:23	0:0	10	i
op	117:24	0:0	10	]
water	117:26	0:0	8	;
water	118:3	0:0	8	}
water	120:2	0:0	6	}
water	121:2	0:0	4	inbuf
op	121:8	0:0	4	=
water	121:10	0:0	4	(
water	121:11	0:0	4	unsigned
water	121:20	0:0	4	char
op	121:25	0:0	4	*
water	121:26	0:0	4	)
call	121:27	121:59	4	_TIFFmalloc
arg	121:39	121:59	5	TIFFScanlineSize(in)
call	121:39	121:58	6	TIFFScanlineSize
arg	121:56	121:58	7	in
water	121:56	0:0	8	in
water	121:60	0:0	4	;
for	122:2	128:2	4	(row = 0 ;row < h;row ++)
forinit	122:7	122:14	5	row = 0 ;
water	122:7	0:0	6	row
op	122:11	0:0	6	=
water	122:13	0:0	6	0
water	122:14	0:0	6	;
cond	122:16	122:22	5	row < h
water	122:16	0:0	6	row
op	122:20	0:0	6	<
water	122:22	0:0	6	h
forexpr	122:25	122:28	5	row ++
water	122:25	0:0	6	row
op	122:28	0:0	6	++
stmts	122:32	128:2	5	
water	122:32	0:0	6	{
if	123:3	124:9	6	(TIFFReadScanline (in ,inbuf ,row ,0 ) < 0)
cond	123:7	123:45	7	TIFFReadScanline (in ,inbuf ,row ,0 ) < 0
call	123:7	123:41	8	TIFFReadScanline
arg	123:24	123:26	9	in
water	123:24	0:0	10	in
arg	123:28	123:33	9	inbuf
water	123:28	0:0	10	inbuf
arg	123:35	123:38	9	row
water	123:35	0:0	10	row
arg	123:40	123:41	9	0
water	123:40	0:0	10	0
op	123:43	0:0	8	<
water	123:45	0:0	8	0
stmts	124:4	124:9	7	
break	124:4	124:9	8	
call	125:3	125:53	6	compresspalette
arg	125:19	125:25	7	outbuf
water	125:19	0:0	8	outbuf
arg	125:27	125:32	7	inbuf
water	125:27	0:0	8	inbuf
arg	125:34	125:35	7	w
water	125:34	0:0	8	w
arg	125:37	125:40	7	red
water	125:37	0:0	8	red
arg	125:42	125:47	7	green
water	125:42	0:0	8	green
arg	125:49	125:53	7	blue
water	125:49	0:0	8	blue
water	125:54	0:0	6	;
if	126:3	127:9	6	(TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0)
cond	126:7	126:48	7	TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0
call	126:7	126:44	8	TIFFWriteScanline
arg	126:25	126:28	9	out
water	126:25	0:0	10	out
arg	126:30	126:36	9	outbuf
water	126:30	0:0	10	outbuf
arg	126:38	126:41	9	row
water	126:38	0:0	10	row
arg	126:43	126:44	9	0
water	126:43	0:0	10	0
op	126:46	0:0	8	<
water	126:48	0:0	8	0
stmts	127:4	127:9	7	
break	127:4	127:9	8	
water	128:2	0:0	6	}
break	129:2	129:7	4	
water	130:1	0:0	4	case
call	130:6	130:47	4	pack
arg	130:11	130:26	5	PHOTOMETRIC_RGB
water	130:11	0:0	6	PHOTOMETRIC_RGB
arg	130:28	130:47	5	PLANARCONFIG_CONTIG
water	130:28	0:0	6	PLANARCONFIG_CONTIG
water	130:48	0:0	4	:
water	131:2	0:0	4	inbuf
op	131:8	0:0	4	=
water	131:10	0:0	4	(
water	131:11	0:0	4	unsigned
water	131:20	0:0	4	char
op	131:25	0:0	4	*
water	131:26	0:0	4	)
call	131:27	131:59	4	_TIFFmalloc
arg	131:39	131:59	5	TIFFScanlineSize(in)
call	131:39	131:58	6	TIFFScanlineSize
arg	131:56	131:58	7	in
water	131:56	0:0	8	in
water	131:60	0:0	4	;
for	132:2	138:2	4	(row = 0 ;row < h;row ++)
forinit	132:7	132:14	5	row = 0 ;
water	132:7	0:0	6	row
op	132:11	0:0	6	=
water	132:13	0:0	6	0
water	132:14	0:0	6	;
cond	132:16	132:22	5	row < h
water	132:16	0:0	6	row
op	132:20	0:0	6	<
water	132:22	0:0	6	h
forexpr	132:25	132:28	5	row ++
water	132:25	0:0	6	row
op	132:28	0:0	6	++
stmts	132:32	138:2	5	
water	132:32	0:0	6	{
if	133:3	134:9	6	(TIFFReadScanline (in ,inbuf ,row ,0 ) < 0)
cond	133:7	133:45	7	TIFFReadScanline (in ,inbuf ,row ,0 ) < 0
call	133:7	133:41	8	TIFFReadScanline
arg	133:24	133:26	9	in
water	133:24	0:0	10	in
arg	133:28	133:33	9	inbuf
water	133:28	0:0	10	inbuf
arg	133:35	133:38	9	row
water	133:35	0:0	10	row
arg	133:40	133:41	9	0
water	133:40	0:0	10	0
op	133:43	0:0	8	<
water	133:45	0:0	8	0
stmts	134:4	134:9	7	
break	134:4	134:9	8	
call	135:3	135:34	6	compresscontig
arg	135:18	135:24	7	outbuf
water	135:18	0:0	8	outbuf
arg	135:26	135:31	7	inbuf
water	135:26	0:0	8	inbuf
arg	135:33	135:34	7	w
water	135:33	0:0	8	w
water	135:35	0:0	6	;
if	136:3	137:9	6	(TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0)
cond	136:7	136:48	7	TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0
call	136:7	136:44	8	TIFFWriteScanline
arg	136:25	136:28	9	out
water	136:25	0:0	10	out
arg	136:30	136:36	9	outbuf
water	136:30	0:0	10	outbuf
arg	136:38	136:41	9	row
water	136:38	0:0	10	row
arg	136:43	136:44	9	0
water	136:43	0:0	10	0
op	136:46	0:0	8	<
water	136:48	0:0	8	0
stmts	137:4	137:9	7	
break	137:4	137:9	8	
water	138:2	0:0	6	}
break	139:2	139:7	4	
water	140:1	0:0	4	case
call	140:6	140:49	4	pack
arg	140:11	140:26	5	PHOTOMETRIC_RGB
water	140:11	0:0	6	PHOTOMETRIC_RGB
arg	140:28	140:49	5	PLANARCONFIG_SEPARATE
water	140:28	0:0	6	PLANARCONFIG_SEPARATE
water	140:50	0:0	4	:
water	141:2	0:0	4	rowsize
op	141:10	0:0	4	=
call	141:12	141:31	4	TIFFScanlineSize
arg	141:29	141:31	5	in
water	141:29	0:0	6	in
water	141:32	0:0	4	;
water	142:2	0:0	4	inbuf
op	142:8	0:0	4	=
water	142:10	0:0	4	(
water	142:11	0:0	4	unsigned
water	142:20	0:0	4	char
op	142:25	0:0	4	*
water	142:26	0:0	4	)
call	142:27	142:48	4	_TIFFmalloc
arg	142:39	142:48	5	3*rowsize
water	142:39	0:0	6	3
op	142:40	0:0	6	*
water	142:41	0:0	6	rowsize
water	142:49	0:0	4	;
for	143:2	152:2	4	(row = 0 ;row < h;row ++)
forinit	143:7	143:14	5	row = 0 ;
water	143:7	0:0	6	row
op	143:11	0:0	6	=
water	143:13	0:0	6	0
water	143:14	0:0	6	;
cond	143:16	143:22	5	row < h
water	143:16	0:0	6	row
op	143:20	0:0	6	<
water	143:22	0:0	6	h
forexpr	143:25	143:28	5	row ++
water	143:25	0:0	6	row
op	143:28	0:0	6	++
stmts	143:32	152:2	5	
water	143:32	0:0	6	{
for	144:3	147:17	6	(s = 0 ;s < 3;s ++)
forinit	144:8	144:13	7	s = 0 ;
water	144:8	0:0	8	s
op	144:10	0:0	8	=
water	144:12	0:0	8	0
water	144:13	0:0	8	;
cond	144:15	144:19	7	s < 3
water	144:15	0:0	8	s
op	144:17	0:0	8	<
water	144:19	0:0	8	3
forexpr	144:22	144:23	7	s ++
water	144:22	0:0	8	s
op	144:23	0:0	8	++
stmts	145:4	147:17	7	
if	145:4	147:17	8	(TIFFReadScanline (in ,inbuf + s * rowsize ,row ,s ) < 0)
cond	145:8	146:35	9	TIFFReadScanline (in ,inbuf + s * rowsize ,row ,s ) < 0
call	145:8	146:31	10	TIFFReadScanline
arg	145:25	145:27	11	in
water	145:25	0:0	12	in
arg	146:8	146:23	11	inbuf+s*rowsize
water	146:8	0:0	12	inbuf
op	146:13	0:0	12	+
water	146:14	0:0	12	s
op	146:15	0:0	12	*
water	146:16	0:0	12	rowsize
arg	146:25	146:28	11	row
water	146:25	0:0	12	row
arg	146:30	146:31	11	s
water	146:30	0:0	12	s
op	146:33	0:0	10	<
water	146:35	0:0	10	0
stmts	147:6	147:17	9	
return	147:6	147:17	10	(-1)
water	147:13	0:0	11	(
op	147:14	0:0	11	-
water	147:15	0:0	11	1
water	147:16	0:0	11	)
call	148:3	149:47	6	compresssep
arg	148:15	148:21	7	outbuf
water	148:15	0:0	8	outbuf
arg	149:7	149:12	7	inbuf
water	149:7	0:0	8	inbuf
arg	149:14	149:27	7	inbuf+rowsize
water	149:14	0:0	8	inbuf
op	149:19	0:0	8	+
water	149:20	0:0	8	rowsize
arg	149:29	149:44	7	inbuf+2*rowsize
water	149:29	0:0	8	inbuf
op	149:34	0:0	8	+
water	149:35	0:0	8	2
op	149:36	0:0	8	*
water	149:37	0:0	8	rowsize
arg	149:46	149:47	7	w
water	149:46	0:0	8	w
water	149:48	0:0	6	;
if	150:3	151:9	6	(TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0)
cond	150:7	150:48	7	TIFFWriteScanline (out ,outbuf ,row ,0 ) < 0
call	150:7	150:44	8	TIFFWriteScanline
arg	150:25	150:28	9	out
water	150:25	0:0	10	out
arg	150:30	150:36	9	outbuf
water	150:30	0:0	10	outbuf
arg	150:38	150:41	9	row
water	150:38	0:0	10	row
arg	150:43	150:44	9	0
water	150:43	0:0	10	0
op	150:46	0:0	8	<
water	150:48	0:0	8	0
stmts	151:4	151:9	7	
break	151:4	151:9	8	
water	152:2	0:0	6	}
break	153:2	153:7	4	
water	154:1	0:0	4	}
call	156:1	156:14	2	TIFFClose
arg	156:11	156:14	3	out
water	156:11	0:0	4	out
water	156:15	0:0	2	;
return	157:1	157:11	2	(0)
water	157:8	0:0	3	(
water	157:9	0:0	3	0
water	157:10	0:0	3	)

func	1:0	55:0	0	static void	PrintIntDiff
params	2:12	0:0	1	
param	2:13	2:23	2	uint32	row
param	2:25	2:35	2	int	sample
param	2:37	2:47	2	uint32	pix
param	2:49	2:58	2	uint32	w1
param	2:60	2:69	2	uint32	w2
stmnts	4:1	54:1	1	
if	4:1	5:12	2	(sample < 0)
cond	4:5	4:14	3	sample < 0
water	4:5	0:0	4	sample
op	4:12	0:0	4	<
water	4:14	0:0	4	0
stmts	5:2	5:12	3	
water	5:2	0:0	4	sample
op	5:9	0:0	4	=
water	5:11	0:0	4	0
water	5:12	0:0	4	;
switch	6:1	54:1	2	(bitspersample)
cond	6:9	6:9	3	bitspersample
water	6:9	0:0	4	bitspersample
stmts	6:24	54:1	3	
water	6:24	0:0	4	{
label	7:1	7:7	4	case 1 :
label	8:1	8:7	4	case 2 :
label	9:1	9:7	4	case 4 :
water	10:5	0:0	4	{
decl	11:2	11:23	4	int32	mask1
water	11:13	0:0	4	,
decl	11:2	11:23	4	int32	mask2
water	11:20	0:0	4	,
decl	11:2	11:23	4	int32	s
water	12:2	0:0	4	mask1
op	12:8	0:0	4	=
op	12:11	0:0	4	~
water	12:12	0:0	4	(
water	12:13	0:0	4	(
op	12:14	0:0	4	-
water	12:15	0:0	4	1
water	12:16	0:0	4	)
op	12:18	0:0	4	<<
water	12:21	0:0	4	bitspersample
water	12:34	0:0	4	)
water	12:35	0:0	4	;
water	13:2	0:0	4	s
op	13:4	0:0	4	=
water	13:6	0:0	4	(
water	13:7	0:0	4	8
op	13:9	0:0	4	-
water	13:11	0:0	4	bitspersample
water	13:24	0:0	4	)
water	13:25	0:0	4	;
water	14:2	0:0	4	mask2
op	14:8	0:0	4	=
water	14:10	0:0	4	mask1
op	14:16	0:0	4	<<
water	14:19	0:0	4	s
water	14:20	0:0	4	;
for	15:2	28:2	4	(;mask2 && pix < imagewidth;mask2 >>= bitspersample , s -= bitspersample , pix ++)
forinit	15:7	15:7	5	;
water	15:7	0:0	6	;
cond	15:9	15:24	5	mask2 && pix < imagewidth
water	15:9	0:0	6	mask2
op	15:15	0:0	6	&&
water	15:18	0:0	6	pix
op	15:22	0:0	6	<
water	15:24	0:0	6	imagewidth
forexpr	16:7	16:55	5	mask2 >>= bitspersample , s -= bitspersample , pix ++
water	16:7	0:0	6	mask2
op	16:13	0:0	6	>>=
water	16:17	0:0	6	bitspersample
water	16:30	0:0	6	,
water	16:32	0:0	6	s
op	16:34	0:0	6	-=
water	16:37	0:0	6	bitspersample
water	16:50	0:0	6	,
water	16:52	0:0	6	pix
op	16:55	0:0	6	++
stmts	16:59	28:2	5	
water	16:59	0:0	6	{
if	17:3	27:3	6	(( w1 & mask2 ) ^ ( w2 & mask2 ))
cond	17:7	17:33	7	( w1 & mask2 ) ^ ( w2 & mask2 )
water	17:7	0:0	8	(
water	17:8	0:0	8	w1
op	17:11	0:0	8	&
water	17:13	0:0	8	mask2
water	17:18	0:0	8	)
op	17:20	0:0	8	^
water	17:22	0:0	8	(
water	17:23	0:0	8	w2
op	17:26	0:0	8	&
water	17:28	0:0	8	mask2
water	17:33	0:0	8	)
stmts	17:36	27:3	7	
water	17:36	0:0	8	{
call	18:4	24:38	8	printf
arg	19:3	19:52	9	"Scanline %lu, pixel %lu, sample %d: %01x %01x\n"
water	19:3	0:0	10	"Scanline %lu, pixel %lu, sample %d: %01x %01x\n"
arg	20:9	20:28	9	(unsignedlong)row
water	20:9	0:0	10	(
water	20:10	0:0	10	unsigned
water	20:19	0:0	10	long
water	20:23	0:0	10	)
water	20:25	0:0	10	row
arg	21:5	21:24	9	(unsignedlong)pix
water	21:5	0:0	10	(
water	21:6	0:0	10	unsigned
water	21:15	0:0	10	long
water	21:19	0:0	10	)
water	21:21	0:0	10	pix
arg	22:5	22:11	9	sample
water	22:5	0:0	10	sample
arg	23:5	23:38	9	(unsignedint)((w1>>s)&mask1)
call	23:5	23:37	10	(unsignedint)
arg	23:20	23:37	11	(w1>>s)&mask1
water	23:20	0:0	12	(
water	23:21	0:0	12	w1
op	23:24	0:0	12	>>
water	23:27	0:0	12	s
water	23:28	0:0	12	)
op	23:30	0:0	12	&
water	23:32	0:0	12	mask1
arg	24:5	24:38	9	(unsignedint)((w2>>s)&mask1)
call	24:5	24:37	10	(unsignedint)
arg	24:20	24:37	11	(w2>>s)&mask1
water	24:20	0:0	12	(
water	24:21	0:0	12	w2
op	24:24	0:0	12	>>
water	24:27	0:0	12	s
water	24:28	0:0	12	)
op	24:30	0:0	12	&
water	24:32	0:0	12	mask1
water	24:39	0:0	8	;
if	25:4	26:12	8	(-- stopondiff == 0)
cond	25:8	25:24	9	-- stopondiff == 0
op	25:8	0:0	10	--
water	25:10	0:0	10	stopondiff
op	25:21	0:0	10	==
water	25:24	0:0	10	0
stmts	26:5	26:12	9	
call	26:5	26:11	10	exit
arg	26:10	26:11	11	1
water	26:10	0:0	12	1
water	26:12	0:0	10	;
water	27:3	0:0	8	}
water	28:2	0:0	6	}
break	29:2	29:7	4	
water	30:5	0:0	4	}
label	31:1	31:7	4	case 8 :
call	32:2	34:45	4	printf
arg	32:9	32:58	5	"Scanline %lu, pixel %lu, sample %d: %02x %02x\n"
water	32:9	0:0	6	"Scanline %lu, pixel %lu, sample %d: %02x %02x\n"
arg	33:9	33:28	5	(unsignedlong)row
water	33:9	0:0	6	(
water	33:10	0:0	6	unsigned
water	33:19	0:0	6	long
water	33:23	0:0	6	)
water	33:25	0:0	6	row
arg	33:30	33:49	5	(unsignedlong)pix
water	33:30	0:0	6	(
water	33:31	0:0	6	unsigned
water	33:40	0:0	6	long
water	33:44	0:0	6	)
water	33:46	0:0	6	pix
arg	33:51	33:57	5	sample
water	33:51	0:0	6	sample
arg	34:9	34:26	5	(unsignedint)w1
water	34:9	0:0	6	(
water	34:10	0:0	6	unsigned
water	34:19	0:0	6	int
water	34:22	0:0	6	)
water	34:24	0:0	6	w1
arg	34:28	34:45	5	(unsignedint)w2
water	34:28	0:0	6	(
water	34:29	0:0	6	unsigned
water	34:38	0:0	6	int
water	34:41	0:0	6	)
water	34:43	0:0	6	w2
water	34:46	0:0	4	;
if	35:2	36:10	4	(-- stopondiff == 0)
cond	35:6	35:22	5	-- stopondiff == 0
op	35:6	0:0	6	--
water	35:8	0:0	6	stopondiff
op	35:19	0:0	6	==
water	35:22	0:0	6	0
stmts	36:3	36:10	5	
call	36:3	36:9	6	exit
arg	36:8	36:9	7	1
water	36:8	0:0	8	1
water	36:10	0:0	6	;
break	37:2	37:7	4	
label	38:1	38:8	4	case 16 :
call	39:2	41:42	4	printf
arg	39:9	39:58	5	"Scanline %lu, pixel %lu, sample %d: %04x %04x\n"
water	39:9	0:0	6	"Scanline %lu, pixel %lu, sample %d: %04x %04x\n"
arg	40:6	40:25	5	(unsignedlong)row
water	40:6	0:0	6	(
water	40:7	0:0	6	unsigned
water	40:16	0:0	6	long
water	40:20	0:0	6	)
water	40:22	0:0	6	row
arg	40:27	40:46	5	(unsignedlong)pix
water	40:27	0:0	6	(
water	40:28	0:0	6	unsigned
water	40:37	0:0	6	long
water	40:41	0:0	6	)
water	40:43	0:0	6	pix
arg	40:48	40:54	5	sample
water	40:48	0:0	6	sample
arg	41:6	41:23	5	(unsignedint)w1
water	41:6	0:0	6	(
water	41:7	0:0	6	unsigned
water	41:16	0:0	6	int
water	41:19	0:0	6	)
water	41:21	0:0	6	w1
arg	41:25	41:42	5	(unsignedint)w2
water	41:25	0:0	6	(
water	41:26	0:0	6	unsigned
water	41:35	0:0	6	int
water	41:38	0:0	6	)
water	41:40	0:0	6	w2
water	41:43	0:0	4	;
if	42:2	43:10	4	(-- stopondiff == 0)
cond	42:6	42:22	5	-- stopondiff == 0
op	42:6	0:0	6	--
water	42:8	0:0	6	stopondiff
op	42:19	0:0	6	==
water	42:22	0:0	6	0
stmts	43:3	43:10	5	
call	43:3	43:9	6	exit
arg	43:8	43:9	7	1
water	43:8	0:0	8	1
water	43:10	0:0	6	;
break	44:2	44:7	4	
label	45:1	45:8	4	case 32 :
call	46:2	48:42	4	printf
arg	46:9	46:58	5	"Scanline %lu, pixel %lu, sample %d: %08x %08x\n"
water	46:9	0:0	6	"Scanline %lu, pixel %lu, sample %d: %08x %08x\n"
arg	47:6	47:25	5	(unsignedlong)row
water	47:6	0:0	6	(
water	47:7	0:0	6	unsigned
water	47:16	0:0	6	long
water	47:20	0:0	6	)
water	47:22	0:0	6	row
arg	47:27	47:46	5	(unsignedlong)pix
water	47:27	0:0	6	(
water	47:28	0:0	6	unsigned
water	47:37	0:0	6	long
water	47:41	0:0	6	)
water	47:43	0:0	6	pix
arg	47:48	47:54	5	sample
water	47:48	0:0	6	sample
arg	48:6	48:23	5	(unsignedint)w1
water	48:6	0:0	6	(
water	48:7	0:0	6	unsigned
water	48:16	0:0	6	int
water	48:19	0:0	6	)
water	48:21	0:0	6	w1
arg	48:25	48:42	5	(unsignedint)w2
water	48:25	0:0	6	(
water	48:26	0:0	6	unsigned
water	48:35	0:0	6	int
water	48:38	0:0	6	)
water	48:40	0:0	6	w2
water	48:43	0:0	4	;
if	49:2	50:10	4	(-- stopondiff == 0)
cond	49:6	49:22	5	-- stopondiff == 0
op	49:6	0:0	6	--
water	49:8	0:0	6	stopondiff
op	49:19	0:0	6	==
water	49:22	0:0	6	0
stmts	50:3	50:10	5	
call	50:3	50:9	6	exit
arg	50:8	50:9	7	1
water	50:8	0:0	8	1
water	50:10	0:0	6	;
break	51:2	51:7	4	
label	52:1	52:8	4	default :
break	53:2	53:7	4	
water	54:1	0:0	4	}

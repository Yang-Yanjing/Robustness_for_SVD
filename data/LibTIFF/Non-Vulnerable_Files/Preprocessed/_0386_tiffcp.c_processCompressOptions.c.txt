func	1:0	44:0	0	static int	processCompressOptions
params	2:22	0:0	1	
param	2:23	2:32	2	char *	opt
stmnts	4:1	43:11	1	
if	4:1	6:1	2	(streq (opt ,"none" ))
cond	4:5	4:22	3	streq (opt ,"none" )
call	4:5	4:22	4	streq
arg	4:11	4:14	5	opt
water	4:11	0:0	6	opt
arg	4:16	4:22	5	"none"
water	4:16	0:0	6	"none"
stmts	4:25	6:1	3	
water	4:25	0:0	4	{
water	5:2	0:0	4	defcompression
op	5:17	0:0	4	=
water	5:19	0:0	4	COMPRESSION_NONE
water	5:35	0:0	4	;
water	6:1	0:0	4	}
else	6:3	8:1	2
stmts	6:8	8:1	3	
if	6:8	8:1	4	(streq (opt ,"packbits" ))
cond	6:12	6:33	5	streq (opt ,"packbits" )
call	6:12	6:33	6	streq
arg	6:18	6:21	7	opt
water	6:18	0:0	8	opt
arg	6:23	6:33	7	"packbits"
water	6:23	0:0	8	"packbits"
stmts	6:36	8:1	5	
water	6:36	0:0	6	{
water	7:2	0:0	6	defcompression
op	7:17	0:0	6	=
water	7:19	0:0	6	COMPRESSION_PACKBITS
water	7:39	0:0	6	;
water	8:1	0:0	6	}
else	8:3	21:1	2
stmts	8:8	21:1	3	
if	8:8	21:1	4	(strneq (opt ,"jpeg" ,4 ))
cond	8:12	8:33	5	strneq (opt ,"jpeg" ,4 )
call	8:12	8:33	6	strneq
arg	8:19	8:22	7	opt
water	8:19	0:0	8	opt
arg	8:24	8:30	7	"jpeg"
water	8:24	0:0	8	"jpeg"
arg	8:32	8:33	7	4
water	8:32	0:0	8	4
stmts	8:36	21:1	5	
water	8:36	0:0	6	{
decl	9:2	9:29	6	char	*cp
op	9:11	0:0	6	=
call	9:13	9:28	7	strchr
arg	9:20	9:23	8	opt
water	9:20	0:0	9	opt
arg	9:25	9:28	8	':'
water	9:25	0:0	9	':'
water	10:2	0:0	6	defcompression
op	10:17	0:0	6	=
water	10:19	0:0	6	COMPRESSION_JPEG
water	10:35	0:0	6	;
while	11:2	20:2	6	(cp)
cond	11:9	11:9	7	cp
water	11:9	0:0	8	cp
stmts	12:2	20:2	7	
water	12:2	0:0	8	{
if	13:3	14:24	8	(isdigit (( int ) cp [ 1 ] ))
cond	13:7	13:25	9	isdigit (( int ) cp [ 1 ] )
call	13:7	13:25	10	isdigit
arg	13:15	13:25	11	(int)cp[1]
water	13:15	0:0	12	(
water	13:16	0:0	12	int
water	13:19	0:0	12	)
water	13:20	0:0	12	cp
op	13:22	0:0	12	[
water	13:23	0:0	12	1
op	13:24	0:0	12	]
stmts	14:4	14:24	9	
water	14:4	0:0	10	quality
op	14:12	0:0	10	=
call	14:14	14:23	10	atoi
arg	14:19	14:23	11	cp+1
water	14:19	0:0	12	cp
op	14:21	0:0	12	+
water	14:22	0:0	12	1
water	14:24	0:0	10	;
else	15:3	16:37	8
stmts	15:8	16:37	9	
if	15:8	16:37	10	(cp [ 1 ] == 'r')
cond	15:12	15:21	11	cp [ 1 ] == 'r'
water	15:12	0:0	12	cp
op	15:14	0:0	12	[
water	15:15	0:0	12	1
op	15:16	0:0	12	]
op	15:18	0:0	12	==
water	15:21	0:0	12	'r'
stmts	16:4	16:37	11	
water	16:4	0:0	12	jpegcolormode
op	16:18	0:0	12	=
water	16:20	0:0	12	JPEGCOLORMODE_RAW
water	16:37	0:0	12	;
else	17:3	18:11	8
stmts	18:4	18:11	9	
call	18:4	18:10	10	usage
water	18:11	0:0	10	;
water	19:3	0:0	8	cp
op	19:6	0:0	8	=
call	19:8	19:23	8	strchr
arg	19:15	19:19	9	cp+1
water	19:15	0:0	10	cp
op	19:17	0:0	10	+
water	19:18	0:0	10	1
arg	19:20	19:23	9	':'
water	19:20	0:0	10	':'
water	19:24	0:0	8	;
water	20:2	0:0	8	}
water	21:1	0:0	6	}
else	21:3	24:1	2
stmts	21:8	24:1	3	
if	21:8	24:1	4	(strneq (opt ,"g3" ,2 ))
cond	21:12	21:31	5	strneq (opt ,"g3" ,2 )
call	21:12	21:31	6	strneq
arg	21:19	21:22	7	opt
water	21:19	0:0	8	opt
arg	21:24	21:28	7	"g3"
water	21:24	0:0	8	"g3"
arg	21:30	21:31	7	2
water	21:30	0:0	8	2
stmts	21:34	24:1	5	
water	21:34	0:0	6	{
call	22:2	22:22	6	processG3Options
arg	22:19	22:22	7	opt
water	22:19	0:0	8	opt
water	22:23	0:0	6	;
water	23:2	0:0	6	defcompression
op	23:17	0:0	6	=
water	23:19	0:0	6	COMPRESSION_CCITTFAX3
water	23:40	0:0	6	;
water	24:1	0:0	6	}
else	24:3	26:1	2
stmts	24:8	26:1	3	
if	24:8	26:1	4	(streq (opt ,"g4" ))
cond	24:12	24:27	5	streq (opt ,"g4" )
call	24:12	24:27	6	streq
arg	24:18	24:21	7	opt
water	24:18	0:0	8	opt
arg	24:23	24:27	7	"g4"
water	24:23	0:0	8	"g4"
stmts	24:30	26:1	5	
water	24:30	0:0	6	{
water	25:2	0:0	6	defcompression
op	25:17	0:0	6	=
water	25:19	0:0	6	COMPRESSION_CCITTFAX4
water	25:40	0:0	6	;
water	26:1	0:0	6	}
else	26:3	31:1	2
stmts	26:8	31:1	3	
if	26:8	31:1	4	(strneq (opt ,"lzw" ,3 ))
cond	26:12	26:32	5	strneq (opt ,"lzw" ,3 )
call	26:12	26:32	6	strneq
arg	26:19	26:22	7	opt
water	26:19	0:0	8	opt
arg	26:24	26:29	7	"lzw"
water	26:24	0:0	8	"lzw"
arg	26:31	26:32	7	3
water	26:31	0:0	8	3
stmts	26:35	31:1	5	
water	26:35	0:0	6	{
decl	27:2	27:29	6	char	*cp
op	27:11	0:0	6	=
call	27:13	27:28	7	strchr
arg	27:20	27:23	8	opt
water	27:20	0:0	9	opt
arg	27:25	27:28	8	':'
water	27:25	0:0	9	':'
if	28:2	29:28	6	(cp)
cond	28:6	28:6	7	cp
water	28:6	0:0	8	cp
stmts	29:3	29:28	7	
water	29:3	0:0	8	defpredictor
op	29:16	0:0	8	=
call	29:18	29:27	8	atoi
arg	29:23	29:27	9	cp+1
water	29:23	0:0	10	cp
op	29:25	0:0	10	+
water	29:26	0:0	10	1
water	29:28	0:0	8	;
water	30:2	0:0	6	defcompression
op	30:17	0:0	6	=
water	30:19	0:0	6	COMPRESSION_LZW
water	30:34	0:0	6	;
water	31:1	0:0	6	}
else	31:3	34:1	2
stmts	31:8	34:1	3	
if	31:8	34:1	4	(strneq (opt ,"zip" ,3 ))
cond	31:12	31:32	5	strneq (opt ,"zip" ,3 )
call	31:12	31:32	6	strneq
arg	31:19	31:22	7	opt
water	31:19	0:0	8	opt
arg	31:24	31:29	7	"zip"
water	31:24	0:0	8	"zip"
arg	31:31	31:32	7	3
water	31:31	0:0	8	3
stmts	31:35	34:1	5	
water	31:35	0:0	6	{
call	32:2	32:23	6	processZIPOptions
arg	32:20	32:23	7	opt
water	32:20	0:0	8	opt
water	32:24	0:0	6	;
water	33:2	0:0	6	defcompression
op	33:17	0:0	6	=
water	33:19	0:0	6	COMPRESSION_ADOBE_DEFLATE
water	33:44	0:0	6	;
water	34:1	0:0	6	}
else	34:3	37:1	2
stmts	34:8	37:1	3	
if	34:8	37:1	4	(strneq (opt ,"lzma" ,4 ))
cond	34:12	34:33	5	strneq (opt ,"lzma" ,4 )
call	34:12	34:33	6	strneq
arg	34:19	34:22	7	opt
water	34:19	0:0	8	opt
arg	34:24	34:30	7	"lzma"
water	34:24	0:0	8	"lzma"
arg	34:32	34:33	7	4
water	34:32	0:0	8	4
stmts	34:36	37:1	5	
water	34:36	0:0	6	{
call	35:2	35:23	6	processZIPOptions
arg	35:20	35:23	7	opt
water	35:20	0:0	8	opt
water	35:24	0:0	6	;
water	36:2	0:0	6	defcompression
op	36:17	0:0	6	=
water	36:19	0:0	6	COMPRESSION_LZMA
water	36:35	0:0	6	;
water	37:1	0:0	6	}
else	37:3	39:1	2
stmts	37:8	39:1	3	
if	37:8	39:1	4	(strneq (opt ,"jbig" ,4 ))
cond	37:12	37:33	5	strneq (opt ,"jbig" ,4 )
call	37:12	37:33	6	strneq
arg	37:19	37:22	7	opt
water	37:19	0:0	8	opt
arg	37:24	37:30	7	"jbig"
water	37:24	0:0	8	"jbig"
arg	37:32	37:33	7	4
water	37:32	0:0	8	4
stmts	37:36	39:1	5	
water	37:36	0:0	6	{
water	38:2	0:0	6	defcompression
op	38:17	0:0	6	=
water	38:19	0:0	6	COMPRESSION_JBIG
water	38:35	0:0	6	;
water	39:1	0:0	6	}
else	39:3	41:1	2
stmts	39:8	41:1	3	
if	39:8	41:1	4	(strneq (opt ,"sgilog" ,6 ))
cond	39:12	39:35	5	strneq (opt ,"sgilog" ,6 )
call	39:12	39:35	6	strneq
arg	39:19	39:22	7	opt
water	39:19	0:0	8	opt
arg	39:24	39:32	7	"sgilog"
water	39:24	0:0	8	"sgilog"
arg	39:34	39:35	7	6
water	39:34	0:0	8	6
stmts	39:38	41:1	5	
water	39:38	0:0	6	{
water	40:2	0:0	6	defcompression
op	40:17	0:0	6	=
water	40:19	0:0	6	COMPRESSION_SGILOG
water	40:37	0:0	6	;
water	41:1	0:0	6	}
else	41:3	42:12	2
stmts	42:2	42:12	3	
return	42:2	42:12	4	(0)
water	42:9	0:0	5	(
water	42:10	0:0	5	0
water	42:11	0:0	5	)
return	43:1	43:11	2	(1)
water	43:8	0:0	3	(
water	43:9	0:0	3	1
water	43:10	0:0	3	)

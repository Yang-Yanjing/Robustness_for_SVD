func	1:0	87:0	0	static void	printruns
params	2:9	0:0	1	
param	2:10	2:28	2	unsigned char *	buf
param	2:30	2:42	2	uint32 *	runs
param	2:44	2:56	2	uint32 *	erun
param	2:58	2:70	2	uint32	lastx
stmnts	4:4	86:18	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	struct
water	4:18	0:0	2	{
water	5:1	0:0	2	char
water	5:6	0:0	2	white
water	5:11	0:0	2	,
water	5:13	0:0	2	black
water	5:18	0:0	2	;
water	6:1	0:0	2	unsigned
water	6:10	0:0	2	short
water	6:16	0:0	2	width
water	6:21	0:0	2	;
water	7:4	0:0	2	}
water	7:6	0:0	2	WBarr
op	7:11	0:0	2	[
op	7:12	0:0	2	]
op	7:14	0:0	2	=
water	7:16	0:0	2	{
water	8:1	0:0	2	{
water	8:3	0:0	2	'd'
water	8:6	0:0	2	,
water	8:8	0:0	2	'n'
water	8:11	0:0	2	,
water	8:13	0:0	2	512
water	8:17	0:0	2	}
water	8:18	0:0	2	,
water	8:20	0:0	2	{
water	8:22	0:0	2	'e'
water	8:25	0:0	2	,
water	8:27	0:0	2	'o'
water	8:30	0:0	2	,
water	8:32	0:0	2	256
water	8:36	0:0	2	}
water	8:37	0:0	2	,
water	8:39	0:0	2	{
water	8:41	0:0	2	'f'
water	8:44	0:0	2	,
water	8:46	0:0	2	'p'
water	8:49	0:0	2	,
water	8:51	0:0	2	128
water	8:55	0:0	2	}
water	8:56	0:0	2	,
water	9:1	0:0	2	{
water	9:3	0:0	2	'g'
water	9:6	0:0	2	,
water	9:8	0:0	2	'q'
water	9:11	0:0	2	,
water	9:14	0:0	2	64
water	9:17	0:0	2	}
water	9:18	0:0	2	,
water	9:20	0:0	2	{
water	9:22	0:0	2	'h'
water	9:25	0:0	2	,
water	9:27	0:0	2	'r'
water	9:30	0:0	2	,
water	9:33	0:0	2	32
water	9:36	0:0	2	}
water	9:37	0:0	2	,
water	9:39	0:0	2	{
water	9:41	0:0	2	'i'
water	9:44	0:0	2	,
water	9:46	0:0	2	's'
water	9:49	0:0	2	,
water	9:52	0:0	2	16
water	9:55	0:0	2	}
water	9:56	0:0	2	,
water	10:1	0:0	2	{
water	10:3	0:0	2	'j'
water	10:6	0:0	2	,
water	10:8	0:0	2	't'
water	10:11	0:0	2	,
water	10:15	0:0	2	8
water	10:17	0:0	2	}
water	10:18	0:0	2	,
water	10:20	0:0	2	{
water	10:22	0:0	2	'k'
water	10:25	0:0	2	,
water	10:27	0:0	2	'u'
water	10:30	0:0	2	,
water	10:34	0:0	2	4
water	10:36	0:0	2	}
water	10:37	0:0	2	,
water	10:39	0:0	2	{
water	10:41	0:0	2	'l'
water	10:44	0:0	2	,
water	10:46	0:0	2	'v'
water	10:49	0:0	2	,
water	10:53	0:0	2	2
water	10:55	0:0	2	}
water	10:56	0:0	2	,
water	11:1	0:0	2	{
water	11:3	0:0	2	'm'
water	11:6	0:0	2	,
water	11:8	0:0	2	'w'
water	11:11	0:0	2	,
water	11:15	0:0	2	1
water	11:17	0:0	2	}
water	12:4	0:0	2	}
water	12:5	0:0	2	;
water	13:4	0:0	2	static
water	13:11	0:0	2	char
op	13:15	0:0	2	*
water	13:17	0:0	2	svalue
op	13:24	0:0	2	=
water	14:1	0:0	2	" !\"#$&'*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abc"
water	14:68	0:0	2	;
decl	15:4	15:21	2	int	colormode
op	15:18	0:0	2	=
water	15:20	0:0	2	1
decl	16:4	16:24	2	uint32	runlength
op	16:21	0:0	2	=
water	16:23	0:0	2	0
decl	17:4	17:19	2	int	n
op	17:10	0:0	2	=
water	17:12	0:0	2	maxline
decl	18:4	18:16	2	uint32	x
op	18:13	0:0	2	=
water	18:15	0:0	2	0
decl	19:4	19:9	2	int	l
water	20:4	0:0	2	(
water	20:5	0:0	2	void
water	20:9	0:0	2	)
water	20:11	0:0	2	buf
water	20:14	0:0	2	;
call	21:4	21:25	2	printf
arg	21:11	21:18	3	"%d m("
water	21:11	0:0	4	"%d m("
arg	21:20	21:25	3	row++
water	21:20	0:0	4	row
op	21:23	0:0	4	++
water	21:26	0:0	2	;
while	22:4	85:4	2	(runs < erun)
cond	22:11	22:18	3	runs < erun
water	22:11	0:0	4	runs
op	22:16	0:0	4	<
water	22:18	0:0	4	erun
stmts	22:24	85:4	3	
water	22:24	0:0	4	{
if	23:1	31:1	4	(runlength <= 0)
cond	23:5	23:18	5	runlength <= 0
water	23:5	0:0	6	runlength
op	23:15	0:0	6	<=
water	23:18	0:0	6	0
stmts	23:21	31:1	5	
water	23:21	0:0	6	{
water	24:5	0:0	6	colormode
op	24:15	0:0	6	^=
water	24:18	0:0	6	1
water	24:19	0:0	6	;
water	25:5	0:0	6	runlength
op	25:15	0:0	6	=
op	25:17	0:0	6	*
water	25:18	0:0	6	runs
op	25:22	0:0	6	++
water	25:24	0:0	6	;
if	26:5	27:32	6	(x + runlength > lastx)
cond	26:9	26:23	7	x + runlength > lastx
water	26:9	0:0	8	x
op	26:10	0:0	8	+
water	26:11	0:0	8	runlength
op	26:21	0:0	8	>
water	26:23	0:0	8	lastx
stmts	27:2	27:32	7	
water	27:2	0:0	8	runlength
op	27:12	0:0	8	=
water	27:14	0:0	8	runs
op	27:18	0:0	8	[
op	27:19	0:0	8	-
water	27:20	0:0	8	1
op	27:21	0:0	8	]
op	27:23	0:0	8	=
water	27:25	0:0	8	lastx
op	27:30	0:0	8	-
water	27:31	0:0	8	x
water	27:32	0:0	8	;
water	28:5	0:0	6	x
op	28:7	0:0	6	+=
water	28:10	0:0	6	runlength
water	28:19	0:0	6	;
if	29:5	30:7	6	(! colormode && runs == erun)
cond	29:9	29:31	7	! colormode && runs == erun
op	29:9	0:0	8	!
water	29:10	0:0	8	colormode
op	29:20	0:0	8	&&
water	29:23	0:0	8	runs
op	29:28	0:0	8	==
water	29:31	0:0	8	erun
stmts	30:2	30:7	7	
break	30:2	30:7	8	
water	31:1	0:0	6	}
water	42:1	0:0	4	l
op	42:3	0:0	4	=
water	42:5	0:0	4	0
water	42:6	0:0	4	;
while	43:1	53:1	4	(runlength > 6)
cond	43:8	43:20	5	runlength > 6
water	43:8	0:0	6	runlength
op	43:18	0:0	6	>
water	43:20	0:0	6	6
stmts	43:23	53:1	5	
water	43:23	0:0	6	{
if	44:5	51:5	6	(runlength >= WBarr [ l ] . width)
cond	44:9	44:31	7	runlength >= WBarr [ l ] . width
water	44:9	0:0	8	runlength
op	44:19	0:0	8	>=
water	44:22	0:0	8	WBarr
op	44:27	0:0	8	[
water	44:28	0:0	8	l
op	44:29	0:0	8	]
op	44:30	0:0	8	.
water	44:31	0:0	8	width
stmts	44:38	51:5	7	
water	44:38	0:0	8	{
if	45:2	48:2	8	(n == 0)
cond	45:6	45:11	9	n == 0
water	45:6	0:0	10	n
op	45:8	0:0	10	==
water	45:11	0:0	10	0
stmts	45:14	48:2	9	
water	45:14	0:0	10	{
call	46:6	46:18	10	putchar
arg	46:14	46:18	11	'\n'
water	46:14	0:0	12	'\n'
water	46:19	0:0	10	;
water	47:6	0:0	10	n
op	47:8	0:0	10	=
water	47:10	0:0	10	maxline
water	47:17	0:0	10	;
water	48:2	0:0	10	}
call	49:2	49:53	8	putchar
arg	49:10	49:53	9	colormode?WBarr[l].black:WBarr[l].white
water	49:10	0:0	10	colormode
water	49:20	0:0	10	?
water	49:22	0:0	10	WBarr
op	49:27	0:0	10	[
water	49:28	0:0	10	l
op	49:29	0:0	10	]
op	49:30	0:0	10	.
water	49:31	0:0	10	black
water	49:37	0:0	10	:
water	49:39	0:0	10	WBarr
op	49:44	0:0	10	[
water	49:45	0:0	10	l
op	49:46	0:0	10	]
op	49:47	0:0	10	.
water	49:48	0:0	10	white
water	49:54	0:0	8	,
water	49:56	0:0	8	n
op	49:57	0:0	8	--
water	49:59	0:0	8	;
water	50:2	0:0	8	runlength
op	50:12	0:0	8	-=
water	50:15	0:0	8	WBarr
op	50:20	0:0	8	[
water	50:21	0:0	8	l
op	50:22	0:0	8	]
op	50:23	0:0	8	.
water	50:24	0:0	8	width
water	50:29	0:0	8	;
water	51:5	0:0	8	}
else	51:7	52:5	6
stmts	52:2	52:5	7	
water	52:2	0:0	8	l
op	52:3	0:0	8	++
water	52:5	0:0	8	;
water	53:1	0:0	6	}
while	54:1	84:1	4	(runlength > 0 && runlength <= 6)
cond	54:8	54:38	5	runlength > 0 && runlength <= 6
water	54:8	0:0	6	runlength
op	54:18	0:0	6	>
water	54:20	0:0	6	0
op	54:22	0:0	6	&&
water	54:25	0:0	6	runlength
op	54:35	0:0	6	<=
water	54:38	0:0	6	6
stmts	54:41	84:1	5	
water	54:41	0:0	6	{
decl	55:5	55:24	6	uint32	bitsleft
op	55:21	0:0	6	=
water	55:23	0:0	6	6
decl	56:5	56:14	6	int	t
op	56:11	0:0	6	=
water	56:13	0:0	6	0
while	57:5	78:5	6	(bitsleft)
cond	57:12	57:12	7	bitsleft
water	57:12	0:0	8	bitsleft
stmts	57:22	78:5	7	
water	57:22	0:0	8	{
if	58:2	72:2	8	(runlength <= bitsleft)
cond	58:6	58:19	9	runlength <= bitsleft
water	58:6	0:0	10	runlength
op	58:16	0:0	10	<=
water	58:19	0:0	10	bitsleft
stmts	58:29	72:2	9	
water	58:29	0:0	10	{
if	59:6	60:52	10	(colormode)
cond	59:10	59:10	11	colormode
water	59:10	0:0	12	colormode
stmts	60:3	60:52	11	
water	60:3	0:0	12	t
op	60:5	0:0	12	|=
water	60:8	0:0	12	(
water	60:9	0:0	12	(
water	60:10	0:0	12	1
op	60:12	0:0	12	<<
water	60:15	0:0	12	runlength
water	60:24	0:0	12	)
op	60:25	0:0	12	-
water	60:26	0:0	12	1
water	60:27	0:0	12	)
op	60:29	0:0	12	<<
water	60:32	0:0	12	(
water	60:33	0:0	12	bitsleft
op	60:41	0:0	12	-
water	60:42	0:0	12	runlength
water	60:51	0:0	12	)
water	60:52	0:0	12	;
water	61:6	0:0	10	bitsleft
op	61:15	0:0	10	-=
water	61:18	0:0	10	runlength
water	61:27	0:0	10	;
water	62:6	0:0	10	runlength
op	62:16	0:0	10	=
water	62:18	0:0	10	0
water	62:19	0:0	10	;
if	63:6	71:6	10	(bitsleft)
cond	63:10	63:10	11	bitsleft
water	63:10	0:0	12	bitsleft
stmts	63:20	71:6	11	
water	63:20	0:0	12	{
if	64:3	65:12	12	(runs >= erun)
cond	64:7	64:15	13	runs >= erun
water	64:7	0:0	14	runs
op	64:12	0:0	14	>=
water	64:15	0:0	14	erun
stmts	65:7	65:12	13	
break	65:7	65:12	14	
water	66:3	0:0	12	colormode
op	66:13	0:0	12	^=
water	66:16	0:0	12	1
water	66:17	0:0	12	;
water	67:3	0:0	12	runlength
op	67:13	0:0	12	=
op	67:15	0:0	12	*
water	67:16	0:0	12	runs
op	67:20	0:0	12	++
water	67:22	0:0	12	;
if	68:3	69:37	12	(x + runlength > lastx)
cond	68:7	68:21	13	x + runlength > lastx
water	68:7	0:0	14	x
op	68:8	0:0	14	+
water	68:9	0:0	14	runlength
op	68:19	0:0	14	>
water	68:21	0:0	14	lastx
stmts	69:7	69:37	13	
water	69:7	0:0	14	runlength
op	69:17	0:0	14	=
water	69:19	0:0	14	runs
op	69:23	0:0	14	[
op	69:24	0:0	14	-
water	69:25	0:0	14	1
op	69:26	0:0	14	]
op	69:28	0:0	14	=
water	69:30	0:0	14	lastx
op	69:35	0:0	14	-
water	69:36	0:0	14	x
water	69:37	0:0	14	;
water	70:3	0:0	12	x
op	70:5	0:0	12	+=
water	70:8	0:0	12	runlength
water	70:17	0:0	12	;
water	71:6	0:0	12	}
water	72:2	0:0	10	}
else	72:4	77:2	8
stmts	72:9	77:2	9	
water	72:9	0:0	10	{
if	73:6	74:27	10	(colormode)
cond	73:10	73:10	11	colormode
water	73:10	0:0	12	colormode
stmts	74:3	74:27	11	
water	74:3	0:0	12	t
op	74:5	0:0	12	|=
water	74:8	0:0	12	(
water	74:9	0:0	12	(
water	74:10	0:0	12	1
op	74:12	0:0	12	<<
water	74:15	0:0	12	bitsleft
water	74:23	0:0	12	)
op	74:24	0:0	12	-
water	74:25	0:0	12	1
water	74:26	0:0	12	)
water	74:27	0:0	12	;
water	75:6	0:0	10	runlength
op	75:16	0:0	10	-=
water	75:19	0:0	10	bitsleft
water	75:27	0:0	10	;
water	76:6	0:0	10	bitsleft
op	76:15	0:0	10	=
water	76:17	0:0	10	0
water	76:18	0:0	10	;
water	77:2	0:0	10	}
water	78:5	0:0	8	}
if	79:5	82:5	6	(n == 0)
cond	79:9	79:14	7	n == 0
water	79:9	0:0	8	n
op	79:11	0:0	8	==
water	79:14	0:0	8	0
stmts	79:17	82:5	7	
water	79:17	0:0	8	{
call	80:2	80:14	8	putchar
arg	80:10	80:14	9	'\n'
water	80:10	0:0	10	'\n'
water	80:15	0:0	8	;
water	81:2	0:0	8	n
op	81:4	0:0	8	=
water	81:6	0:0	8	maxline
water	81:13	0:0	8	;
water	82:5	0:0	8	}
call	83:5	83:22	6	putchar
arg	83:13	83:22	7	svalue[t]
water	83:13	0:0	8	svalue
op	83:19	0:0	8	[
water	83:20	0:0	8	t
op	83:21	0:0	8	]
water	83:23	0:0	6	,
water	83:25	0:0	6	n
op	83:26	0:0	6	--
water	83:28	0:0	6	;
water	84:1	0:0	6	}
water	85:4	0:0	4	}
call	86:4	86:17	2	printf
arg	86:11	86:17	3	")s\n"
water	86:11	0:0	4	")s\n"
water	86:18	0:0	2	;

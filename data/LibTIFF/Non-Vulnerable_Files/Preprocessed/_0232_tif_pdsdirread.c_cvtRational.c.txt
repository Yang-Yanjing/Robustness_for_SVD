func	1:0	16:0	0	static int	cvtRational
params	2:11	0:0	1	
param	2:12	2:21	2	TIFF *	tif
param	2:23	2:40	2	TIFFDirEntry *	dir
param	2:42	2:52	2	uint32	num
param	2:54	2:66	2	uint32	denom
param	2:68	2:77	2	float *	rv
stmnts	4:1	15:1	1	
if	4:1	9:1	2	(denom == 0)
cond	4:5	4:14	3	denom == 0
water	4:5	0:0	4	denom
op	4:11	0:0	4	==
water	4:14	0:0	4	0
stmts	4:17	9:1	3	
water	4:17	0:0	4	{
call	5:2	7:60	4	TIFFErrorExt
arg	5:15	5:34	5	tif->tif_clientdata
water	5:15	0:0	6	tif
op	5:18	0:0	6	->
water	5:20	0:0	6	tif_clientdata
arg	5:36	5:49	5	tif->tif_name
water	5:36	0:0	6	tif
op	5:39	0:0	6	->
water	5:41	0:0	6	tif_name
arg	6:6	6:54	5	"%s: Rational with zero denominator (num = %lu)"
water	6:6	0:0	6	"%s: Rational with zero denominator (num = %lu)"
arg	7:6	7:55	5	_TIFFFieldWithTag(tif,dir->tdir_tag)->field_name
call	7:6	7:42	6	_TIFFFieldWithTag
arg	7:24	7:27	7	tif
water	7:24	0:0	8	tif
arg	7:29	7:42	7	dir->tdir_tag
water	7:29	0:0	8	dir
op	7:32	0:0	8	->
water	7:34	0:0	8	tdir_tag
op	7:43	0:0	6	->
water	7:45	0:0	6	field_name
arg	7:57	7:60	5	num
water	7:57	0:0	6	num
water	7:61	0:0	4	;
return	8:2	8:12	4	(0)
water	8:9	0:0	5	(
water	8:10	0:0	5	0
water	8:11	0:0	5	)
water	9:1	0:0	4	}
else	9:3	15:1	2
stmts	9:8	15:1	3	
water	9:8	0:0	4	{
if	10:2	11:36	4	(dir -> tdir_type == TIFF_RATIONAL)
cond	10:6	10:24	5	dir -> tdir_type == TIFF_RATIONAL
water	10:6	0:0	6	dir
op	10:9	0:0	6	->
water	10:11	0:0	6	tdir_type
op	10:21	0:0	6	==
water	10:24	0:0	6	TIFF_RATIONAL
stmts	11:3	11:36	5	
op	11:3	0:0	6	*
water	11:4	0:0	6	rv
op	11:7	0:0	6	=
water	11:9	0:0	6	(
water	11:10	0:0	6	(
water	11:11	0:0	6	float
water	11:16	0:0	6	)
water	11:17	0:0	6	num
op	11:21	0:0	6	/
water	11:23	0:0	6	(
water	11:24	0:0	6	float
water	11:29	0:0	6	)
water	11:30	0:0	6	denom
water	11:35	0:0	6	)
water	11:36	0:0	6	;
else	12:2	13:50	4
stmts	13:3	13:50	5	
op	13:3	0:0	6	*
water	13:4	0:0	6	rv
op	13:7	0:0	6	=
water	13:9	0:0	6	(
call	13:10	13:23	6	(float)
arg	13:18	13:23	7	int32
water	13:18	0:0	8	int32
water	13:24	0:0	6	num
op	13:28	0:0	6	/
call	13:30	13:43	6	(float)
arg	13:38	13:43	7	int32
water	13:38	0:0	8	int32
water	13:44	0:0	6	denom
water	13:49	0:0	6	)
water	13:50	0:0	6	;
return	14:2	14:12	4	(1)
water	14:9	0:0	5	(
water	14:10	0:0	5	1
water	14:11	0:0	5	)
water	15:1	0:0	4	}

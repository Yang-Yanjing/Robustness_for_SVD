func	1:0	57:0	0	inline static int32	find0span
params	2:9	0:0	1	
param	2:10	2:27	2	unsigned char *	bp
param	2:29	2:37	2	int32	bs
param	2:39	2:47	2	int32	be
stmnts	0:0	56:14	1	
decl	4:1	4:21	2	int32	bits
op	4:12	0:0	2	=
water	4:14	0:0	2	be
op	4:17	0:0	2	-
water	4:19	0:0	2	bs
decl	5:1	5:14	2	int32	n
water	5:8	0:0	2	,
decl	5:1	5:14	2	int32	span
water	6:1	0:0	2	bp
op	6:4	0:0	2	+=
water	6:7	0:0	2	bs
op	6:9	0:0	2	>>
water	6:11	0:0	2	3
water	6:12	0:0	2	;
if	10:1	20:1	2	(bits > 0 && ( n = ( bs & 7 ) ))
cond	10:5	10:30	3	bits > 0 && ( n = ( bs & 7 ) )
water	10:5	0:0	4	bits
op	10:10	0:0	4	>
water	10:12	0:0	4	0
op	10:14	0:0	4	&&
water	10:17	0:0	4	(
water	10:18	0:0	4	n
op	10:20	0:0	4	=
water	10:22	0:0	4	(
water	10:23	0:0	4	bs
op	10:26	0:0	4	&
water	10:28	0:0	4	7
water	10:29	0:0	4	)
water	10:30	0:0	4	)
stmts	10:33	20:1	3	
water	10:33	0:0	4	{
water	11:2	0:0	4	span
op	11:7	0:0	4	=
water	11:9	0:0	4	zeroruns
op	11:17	0:0	4	[
water	11:18	0:0	4	(
op	11:19	0:0	4	*
water	11:20	0:0	4	bp
op	11:23	0:0	4	<<
water	11:26	0:0	4	n
water	11:27	0:0	4	)
op	11:29	0:0	4	&
water	11:31	0:0	4	0
water	11:32	0:0	4	xff
op	11:35	0:0	4	]
water	11:36	0:0	4	;
if	12:2	13:13	4	(span > 8 - n)
cond	12:6	12:15	5	span > 8 - n
water	12:6	0:0	6	span
op	12:11	0:0	6	>
water	12:13	0:0	6	8
op	12:14	0:0	6	-
water	12:15	0:0	6	n
stmts	13:3	13:13	5	
water	13:3	0:0	6	span
op	13:8	0:0	6	=
water	13:10	0:0	6	8
op	13:11	0:0	6	-
water	13:12	0:0	6	n
water	13:13	0:0	6	;
if	14:2	15:14	4	(span > bits)
cond	14:6	14:13	5	span > bits
water	14:6	0:0	6	span
op	14:11	0:0	6	>
water	14:13	0:0	6	bits
stmts	15:3	15:14	5	
water	15:3	0:0	6	span
op	15:8	0:0	6	=
water	15:10	0:0	6	bits
water	15:14	0:0	6	;
if	16:2	17:16	4	(n + span < 8)
cond	16:6	16:15	5	n + span < 8
water	16:6	0:0	6	n
op	16:7	0:0	6	+
water	16:8	0:0	6	span
op	16:13	0:0	6	<
water	16:15	0:0	6	8
stmts	17:3	17:16	5	
return	17:3	17:16	6	(span)
water	17:10	0:0	7	(
water	17:11	0:0	7	span
water	17:15	0:0	7	)
water	18:2	0:0	4	bits
op	18:7	0:0	4	-=
water	18:10	0:0	4	span
water	18:14	0:0	4	;
water	19:2	0:0	4	bp
op	19:4	0:0	4	++
water	19:6	0:0	4	;
water	20:1	0:0	4	}
else	20:3	21:10	2
stmts	21:2	21:10	3	
water	21:2	0:0	4	span
op	21:7	0:0	4	=
water	21:9	0:0	4	0
water	21:10	0:0	4	;
if	22:1	39:1	2	(bits >=( int32 ) (2 * 8 * sizeof ( long ) ))
cond	22:5	22:41	3	bits >=( int32 ) (2 * 8 * sizeof ( long ) )
water	22:5	0:0	4	bits
op	22:10	0:0	4	>=
call	22:13	22:41	4	(int32)
arg	22:21	22:41	5	2*8*sizeof(long)
water	22:21	0:0	6	2
op	22:23	0:0	6	*
water	22:25	0:0	6	8
op	22:27	0:0	6	*
op	22:29	0:0	6	sizeof
water	22:35	0:0	6	(
water	22:36	0:0	6	long
water	22:40	0:0	6	)
stmts	22:44	39:1	3	
water	22:44	0:0	4	{
decl	23:2	23:10	4	long	*lp
while	27:2	32:2	4	(!isAligned (bp ,long ))
cond	27:9	27:28	5	!isAligned (bp ,long )
op	27:9	0:0	6	!
call	27:10	27:28	6	isAligned
arg	27:20	27:22	7	bp
water	27:20	0:0	8	bp
arg	27:24	27:28	7	long
water	27:24	0:0	8	long
stmts	27:31	32:2	5	
water	27:31	0:0	6	{
if	28:3	29:33	6	(* bp != 0 x00)
cond	28:7	28:15	7	* bp != 0 x00
op	28:7	0:0	8	*
water	28:8	0:0	8	bp
op	28:11	0:0	8	!=
water	28:14	0:0	8	0
water	28:15	0:0	8	x00
stmts	29:4	29:33	7	
return	29:4	29:33	8	(span+zeroruns[*bp])
water	29:11	0:0	9	(
water	29:12	0:0	9	span
op	29:17	0:0	9	+
water	29:19	0:0	9	zeroruns
op	29:27	0:0	9	[
op	29:28	0:0	9	*
water	29:29	0:0	9	bp
op	29:31	0:0	9	]
water	29:32	0:0	9	)
water	30:3	0:0	6	span
op	30:8	0:0	6	+=
water	30:11	0:0	6	8
water	30:12	0:0	6	,
water	30:14	0:0	6	bits
op	30:19	0:0	6	-=
water	30:22	0:0	6	8
water	30:23	0:0	6	;
water	31:3	0:0	6	bp
op	31:5	0:0	6	++
water	31:7	0:0	6	;
water	32:2	0:0	6	}
water	33:2	0:0	4	lp
op	33:5	0:0	4	=
water	33:7	0:0	4	(
water	33:8	0:0	4	long
op	33:12	0:0	4	*
water	33:13	0:0	4	)
water	33:15	0:0	4	bp
water	33:17	0:0	4	;
while	34:2	37:2	4	(( bits >=( int32 ) (8 * sizeof ( long ) ) ) && ( 0 == * lp ))
cond	34:9	34:57	5	( bits >=( int32 ) (8 * sizeof ( long ) ) ) && ( 0 == * lp )
water	34:9	0:0	6	(
water	34:10	0:0	6	bits
op	34:15	0:0	6	>=
call	34:18	34:42	6	(int32)
arg	34:26	34:42	7	8*sizeof(long)
water	34:26	0:0	8	8
op	34:28	0:0	8	*
op	34:30	0:0	8	sizeof
water	34:36	0:0	8	(
water	34:37	0:0	8	long
water	34:41	0:0	8	)
water	34:43	0:0	6	)
op	34:45	0:0	6	&&
water	34:48	0:0	6	(
water	34:49	0:0	6	0
op	34:51	0:0	6	==
op	34:54	0:0	6	*
water	34:55	0:0	6	lp
water	34:57	0:0	6	)
stmts	34:60	37:2	5	
water	34:60	0:0	6	{
water	35:3	0:0	6	span
op	35:8	0:0	6	+=
water	35:11	0:0	6	8
op	35:12	0:0	6	*
op	35:13	0:0	6	sizeof
water	35:20	0:0	6	(
water	35:21	0:0	6	long
water	35:25	0:0	6	)
water	35:26	0:0	6	,
water	35:28	0:0	6	bits
op	35:33	0:0	6	-=
water	35:36	0:0	6	8
op	35:37	0:0	6	*
op	35:38	0:0	6	sizeof
water	35:45	0:0	6	(
water	35:46	0:0	6	long
water	35:50	0:0	6	)
water	35:51	0:0	6	;
water	36:3	0:0	6	lp
op	36:5	0:0	6	++
water	36:7	0:0	6	;
water	37:2	0:0	6	}
water	38:2	0:0	4	bp
op	38:5	0:0	4	=
water	38:7	0:0	4	(
water	38:8	0:0	4	unsigned
water	38:17	0:0	4	char
op	38:21	0:0	4	*
water	38:22	0:0	4	)
water	38:24	0:0	4	lp
water	38:26	0:0	4	;
water	39:1	0:0	4	}
while	43:1	48:1	2	(bits >= 8)
cond	43:8	43:16	3	bits >= 8
water	43:8	0:0	4	bits
op	43:13	0:0	4	>=
water	43:16	0:0	4	8
stmts	43:19	48:1	3	
water	43:19	0:0	4	{
if	44:2	45:32	4	(* bp != 0 x00)
cond	44:6	44:14	5	* bp != 0 x00
op	44:6	0:0	6	*
water	44:7	0:0	6	bp
op	44:10	0:0	6	!=
water	44:13	0:0	6	0
water	44:14	0:0	6	x00
stmts	45:3	45:32	5	
return	45:3	45:32	6	(span+zeroruns[*bp])
water	45:10	0:0	7	(
water	45:11	0:0	7	span
op	45:16	0:0	7	+
water	45:18	0:0	7	zeroruns
op	45:26	0:0	7	[
op	45:27	0:0	7	*
water	45:28	0:0	7	bp
op	45:30	0:0	7	]
water	45:31	0:0	7	)
water	46:2	0:0	4	span
op	46:7	0:0	4	+=
water	46:10	0:0	4	8
water	46:11	0:0	4	,
water	46:13	0:0	4	bits
op	46:18	0:0	4	-=
water	46:21	0:0	4	8
water	46:22	0:0	4	;
water	47:2	0:0	4	bp
op	47:4	0:0	4	++
water	47:6	0:0	4	;
water	48:1	0:0	4	}
if	52:1	55:1	2	(bits > 0)
cond	52:5	52:12	3	bits > 0
water	52:5	0:0	4	bits
op	52:10	0:0	4	>
water	52:12	0:0	4	0
stmts	52:15	55:1	3	
water	52:15	0:0	4	{
water	53:2	0:0	4	n
op	53:4	0:0	4	=
water	53:6	0:0	4	zeroruns
op	53:14	0:0	4	[
op	53:15	0:0	4	*
water	53:16	0:0	4	bp
op	53:18	0:0	4	]
water	53:19	0:0	4	;
water	54:2	0:0	4	span
op	54:7	0:0	4	+=
water	54:10	0:0	4	(
water	54:11	0:0	4	n
op	54:13	0:0	4	>
water	54:15	0:0	4	bits
water	54:20	0:0	4	?
water	54:22	0:0	4	bits
water	54:27	0:0	4	:
water	54:29	0:0	4	n
water	54:30	0:0	4	)
water	54:31	0:0	4	;
water	55:1	0:0	4	}
return	56:1	56:14	2	(span)
water	56:8	0:0	3	(
water	56:9	0:0	3	span
water	56:13	0:0	3	)

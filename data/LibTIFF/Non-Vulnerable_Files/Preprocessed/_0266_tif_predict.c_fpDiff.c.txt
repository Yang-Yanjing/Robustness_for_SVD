func	1:0	37:0	0	static int	fpDiff
params	2:6	0:0	1	
param	2:7	2:16	2	TIFF *	tif
param	2:18	2:28	2	uint8 *	cp0
param	2:30	2:41	2	tmsize_t	cc
stmnts	0:0	36:12	1	
decl	4:1	4:46	2	tmsize_t	stride
op	4:17	0:0	2	=
call	4:19	4:37	3	PredictorState
arg	4:34	4:37	4	tif
water	4:34	0:0	5	tif
op	4:38	0:0	2	->
water	4:40	0:0	2	stride
decl	5:1	5:47	2	uint32	bps
op	5:12	0:0	2	=
water	5:14	0:0	2	tif
op	5:17	0:0	2	->
water	5:19	0:0	2	tif_dir
op	5:26	0:0	2	.
water	5:27	0:0	2	td_bitspersample
op	5:44	0:0	2	/
water	5:46	0:0	2	8
decl	6:1	6:23	2	tmsize_t	wc
op	6:13	0:0	2	=
water	6:15	0:0	2	cc
op	6:18	0:0	2	/
water	6:20	0:0	2	bps
decl	7:1	7:15	2	tmsize_t	count
decl	8:1	8:26	2	uint8	*cp
op	8:11	0:0	2	=
water	8:13	0:0	2	(
water	8:14	0:0	2	uint8
op	8:20	0:0	2	*
water	8:21	0:0	2	)
water	8:23	0:0	2	cp0
decl	9:1	9:11	2	uint8	*tmp
if	10:4	15:4	2	(( cc % ( bps * stride ) ) != 0)
cond	10:7	10:26	3	( cc % ( bps * stride ) ) != 0
water	10:7	0:0	4	(
water	10:8	0:0	4	cc
op	10:10	0:0	4	%
water	10:11	0:0	4	(
water	10:12	0:0	4	bps
op	10:15	0:0	4	*
water	10:16	0:0	4	stride
water	10:22	0:0	4	)
water	10:23	0:0	4	)
op	10:24	0:0	4	!=
water	10:26	0:0	4	0
stmts	11:4	15:4	3	
water	11:4	0:0	4	{
call	12:8	13:49	4	TIFFErrorExt
arg	12:21	12:40	5	tif->tif_clientdata
water	12:21	0:0	6	tif
op	12:24	0:0	6	->
water	12:26	0:0	6	tif_clientdata
arg	12:42	12:50	5	"fpDiff"
water	12:42	0:0	6	"fpDiff"
arg	13:21	13:25	5	"%s"
water	13:21	0:0	6	"%s"
arg	13:27	13:49	5	"(cc%(bps*stride))!=0"
water	13:27	0:0	6	"(cc%(bps*stride))!=0"
water	13:50	0:0	4	;
return	14:8	14:16	4	0
water	14:15	0:0	5	0
water	15:4	0:0	4	}
water	16:4	0:0	2	tmp
op	16:8	0:0	2	=
water	16:10	0:0	2	(
water	16:11	0:0	2	uint8
op	16:17	0:0	2	*
water	16:18	0:0	2	)
call	16:19	16:33	2	_TIFFmalloc
arg	16:31	16:33	3	cc
water	16:31	0:0	4	cc
water	16:34	0:0	2	;
if	17:1	18:10	2	(! tmp)
cond	17:5	17:6	3	! tmp
op	17:5	0:0	4	!
water	17:6	0:0	4	tmp
stmts	18:2	18:10	3	
return	18:2	18:10	4	0
water	18:9	0:0	5	0
call	19:1	19:25	2	_TIFFmemcpy
arg	19:13	19:16	3	tmp
water	19:13	0:0	4	tmp
arg	19:18	19:21	3	cp0
water	19:18	0:0	4	cp0
arg	19:23	19:25	3	cc
water	19:23	0:0	4	cc
water	19:26	0:0	2	;
for	20:1	30:1	2	(count = 0 ;count < wc;count ++)
forinit	20:6	20:15	3	count = 0 ;
water	20:6	0:0	4	count
op	20:12	0:0	4	=
water	20:14	0:0	4	0
water	20:15	0:0	4	;
cond	20:17	20:25	3	count < wc
water	20:17	0:0	4	count
op	20:23	0:0	4	<
water	20:25	0:0	4	wc
forexpr	20:29	20:34	3	count ++
water	20:29	0:0	4	count
op	20:34	0:0	4	++
stmts	20:38	30:1	3	
water	20:38	0:0	4	{
decl	21:2	21:13	4	uint32	byte
for	22:2	29:2	4	(byte = 0 ;byte < bps;byte ++)
forinit	22:7	22:15	5	byte = 0 ;
water	22:7	0:0	6	byte
op	22:12	0:0	6	=
water	22:14	0:0	6	0
water	22:15	0:0	6	;
cond	22:17	22:24	5	byte < bps
water	22:17	0:0	6	byte
op	22:22	0:0	6	<
water	22:24	0:0	6	bps
forexpr	22:29	22:33	5	byte ++
water	22:29	0:0	6	byte
op	22:33	0:0	6	++
stmts	22:37	29:2	5	
water	22:37	0:0	6	{
water	24:3	0:0	6	cp
op	24:5	0:0	6	[
water	24:6	0:0	6	byte
op	24:11	0:0	6	*
water	24:13	0:0	6	wc
op	24:16	0:0	6	+
water	24:18	0:0	6	count
op	24:23	0:0	6	]
op	24:25	0:0	6	=
water	24:27	0:0	6	tmp
op	24:30	0:0	6	[
water	24:31	0:0	6	bps
op	24:35	0:0	6	*
water	24:37	0:0	6	count
op	24:43	0:0	6	+
water	24:45	0:0	6	byte
op	24:49	0:0	6	]
water	24:50	0:0	6	;
water	26:3	0:0	6	cp
op	26:5	0:0	6	[
water	26:6	0:0	6	(
water	26:7	0:0	6	bps
op	26:11	0:0	6	-
water	26:13	0:0	6	byte
op	26:18	0:0	6	-
water	26:20	0:0	6	1
water	26:21	0:0	6	)
op	26:23	0:0	6	*
water	26:25	0:0	6	wc
op	26:28	0:0	6	+
water	26:30	0:0	6	count
op	26:35	0:0	6	]
op	26:37	0:0	6	=
water	27:4	0:0	6	tmp
op	27:7	0:0	6	[
water	27:8	0:0	6	bps
op	27:12	0:0	6	*
water	27:14	0:0	6	count
op	27:20	0:0	6	+
water	27:22	0:0	6	byte
op	27:26	0:0	6	]
water	27:27	0:0	6	;
water	29:2	0:0	6	}
water	30:1	0:0	4	}
call	31:1	31:14	2	_TIFFfree
arg	31:11	31:14	3	tmp
water	31:11	0:0	4	tmp
water	31:15	0:0	2	;
water	32:1	0:0	2	cp
op	32:4	0:0	2	=
water	32:6	0:0	2	(
water	32:7	0:0	2	uint8
op	32:13	0:0	2	*
water	32:14	0:0	2	)
water	32:16	0:0	2	cp0
water	32:19	0:0	2	;
water	33:1	0:0	2	cp
op	33:4	0:0	2	+=
water	33:7	0:0	2	cc
op	33:10	0:0	2	-
water	33:12	0:0	2	stride
op	33:19	0:0	2	-
water	33:21	0:0	2	1
water	33:22	0:0	2	;
for	34:1	35:73	2	(count = cc ;count > stride;count -= stride)
forinit	34:6	34:16	3	count = cc ;
water	34:6	0:0	4	count
op	34:12	0:0	4	=
water	34:14	0:0	4	cc
water	34:16	0:0	4	;
cond	34:18	34:26	3	count > stride
water	34:18	0:0	4	count
op	34:24	0:0	4	>
water	34:26	0:0	4	stride
forexpr	34:34	34:43	3	count -= stride
water	34:34	0:0	4	count
op	34:40	0:0	4	-=
water	34:43	0:0	4	stride
stmts	35:2	35:73	3	
water	35:2	0:0	4	REPEAT4
water	35:9	0:0	4	(
water	35:10	0:0	4	stride
water	35:16	0:0	4	,
water	35:18	0:0	4	cp
op	35:20	0:0	4	[
water	35:21	0:0	4	stride
op	35:27	0:0	4	]
op	35:29	0:0	4	=
call	35:31	35:72	4	(unsignedchar)
arg	35:47	35:72	5	(cp[stride]-cp[0])&0xff
water	35:47	0:0	6	(
water	35:48	0:0	6	cp
op	35:50	0:0	6	[
water	35:51	0:0	6	stride
op	35:57	0:0	6	]
op	35:59	0:0	6	-
water	35:61	0:0	6	cp
op	35:63	0:0	6	[
water	35:64	0:0	6	0
op	35:65	0:0	6	]
water	35:66	0:0	6	)
op	35:67	0:0	6	&
water	35:68	0:0	6	0
water	35:69	0:0	6	xff
water	35:73	0:0	4	;
water	35:75	0:0	2	cp
op	35:77	0:0	2	--
water	35:79	0:0	2	)
water	36:4	0:0	2	return
water	36:11	0:0	2	1
water	36:12	0:0	2	;

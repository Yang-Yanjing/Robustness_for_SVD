func	1:0	182:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:31	2	char *	argv[]
stmnts	0:0	181:10	1	
decl	7:2	9:8	2	int	i
water	8:5	0:0	2	,
decl	7:2	9:8	2	int	mode
decl	10:2	12:19	2	FILE	*ifile
op	11:11	0:0	2	=
water	11:13	0:0	2	stdin
water	11:18	0:0	2	,
decl	10:2	12:19	2	FILE	*ofile
op	12:11	0:0	2	=
water	12:13	0:0	2	stdout
decl	13:2	15:73	2	char	c
water	14:5	0:0	2	,
decl	13:2	15:73	2	char	*usage
op	15:11	0:0	2	=
water	15:13	0:0	2	"usage: iptcutil -t | -b [-i file] [-o file] <input >output"
if	16:2	20:4	2	(argc < 2)
cond	16:6	16:13	3	argc < 2
water	16:6	0:0	4	argc
op	16:11	0:0	4	<
water	16:13	0:0	4	2
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:6	18:16	4	puts
arg	18:11	18:16	5	usage
water	18:11	0:0	6	usage
water	18:17	0:0	4	;
return	19:6	19:14	4	1
water	19:13	0:0	5	1
water	20:4	0:0	4	}
water	21:2	0:0	2	mode
op	21:7	0:0	2	=
water	21:9	0:0	2	0
water	21:10	0:0	2	;
for	24:2	78:4	2	(i = 1 ;i < argc;i ++)
forinit	24:7	24:10	3	i = 1 ;
water	24:7	0:0	4	i
op	24:8	0:0	4	=
water	24:9	0:0	4	1
water	24:10	0:0	4	;
cond	24:12	24:14	3	i < argc
water	24:12	0:0	4	i
op	24:13	0:0	4	<
water	24:14	0:0	4	argc
forexpr	24:20	24:21	3	i ++
water	24:20	0:0	4	i
op	24:21	0:0	4	++
stmts	25:4	78:4	3	
water	25:4	0:0	4	{
water	26:6	0:0	4	c
op	26:8	0:0	4	=
water	26:10	0:0	4	argv
op	26:14	0:0	4	[
water	26:15	0:0	4	i
op	26:16	0:0	4	]
op	26:17	0:0	4	[
water	26:18	0:0	4	0
op	26:19	0:0	4	]
water	26:20	0:0	4	;
if	27:6	72:8	4	(c == '-' || c == '/')
cond	27:10	27:27	5	c == '-' || c == '/'
water	27:10	0:0	6	c
op	27:12	0:0	6	==
water	27:15	0:0	6	'-'
op	27:19	0:0	6	||
water	27:22	0:0	6	c
op	27:24	0:0	6	==
water	27:27	0:0	6	'/'
stmts	28:8	72:8	5	
water	28:8	0:0	6	{
water	29:10	0:0	6	c
op	29:12	0:0	6	=
water	29:14	0:0	6	argv
op	29:18	0:0	6	[
water	29:19	0:0	6	i
op	29:20	0:0	6	]
op	29:21	0:0	6	[
water	29:22	0:0	6	1
op	29:23	0:0	6	]
water	29:24	0:0	6	;
switch	30:10	71:12	6	(c)
cond	30:18	30:18	7	c
water	30:18	0:0	8	c
stmts	31:12	71:12	7	
water	31:12	0:0	8	{
water	32:12	0:0	8	case
water	32:17	0:0	8	't'
water	32:20	0:0	8	:
water	33:14	0:0	8	mode
op	33:19	0:0	8	=
water	33:21	0:0	8	1
water	33:22	0:0	8	;
call	36:14	36:52	8	_setmode
arg	36:24	36:40	9	_fileno(ofile)
call	36:24	36:39	10	_fileno
arg	36:33	36:39	11	ofile
water	36:33	0:0	12	ofile
arg	36:42	36:52	9	_O_BINARY
water	36:42	0:0	10	_O_BINARY
water	36:53	0:0	8	;
break	38:14	38:19	8	
water	39:12	0:0	8	case
water	39:17	0:0	8	'b'
water	39:20	0:0	8	:
water	40:14	0:0	8	mode
op	40:19	0:0	8	=
water	40:21	0:0	8	0
water	40:22	0:0	8	;
call	43:14	43:52	8	_setmode
arg	43:24	43:40	9	_fileno(ifile)
call	43:24	43:39	10	_fileno
arg	43:33	43:39	11	ifile
water	43:33	0:0	12	ifile
arg	43:42	43:52	9	_O_BINARY
water	43:42	0:0	10	_O_BINARY
water	43:53	0:0	8	;
break	45:14	45:19	8	
water	46:12	0:0	8	case
water	46:17	0:0	8	'i'
water	46:20	0:0	8	:
water	47:14	0:0	8	if
water	47:17	0:0	8	(
water	47:18	0:0	8	mode
op	47:23	0:0	8	==
water	47:26	0:0	8	0
water	47:27	0:0	8	)
water	48:16	0:0	8	ifile
op	48:22	0:0	8	=
call	48:24	48:45	8	fopen
arg	48:30	48:39	9	argv[++i]
water	48:30	0:0	10	argv
op	48:34	0:0	10	[
op	48:35	0:0	10	++
water	48:37	0:0	10	i
op	48:38	0:0	10	]
arg	48:41	48:45	9	"rb"
water	48:41	0:0	10	"rb"
water	48:46	0:0	8	;
else	49:14	50:46	8
stmts	50:16	50:46	9	
water	50:16	0:0	10	ifile
op	50:22	0:0	10	=
call	50:24	50:45	10	fopen
arg	50:30	50:39	11	argv[++i]
water	50:30	0:0	12	argv
op	50:34	0:0	12	[
op	50:35	0:0	12	++
water	50:37	0:0	12	i
op	50:38	0:0	12	]
arg	50:41	50:45	11	"rt"
water	50:41	0:0	12	"rt"
water	50:46	0:0	10	;
if	51:14	55:16	8	(ifile == ( FILE * ) NULL)
cond	51:18	51:35	9	ifile == ( FILE * ) NULL
water	51:18	0:0	10	ifile
op	51:24	0:0	10	==
water	51:27	0:0	10	(
water	51:28	0:0	10	FILE
op	51:33	0:0	10	*
water	51:34	0:0	10	)
water	51:35	0:0	10	NULL
stmts	52:16	55:16	9	
water	52:16	0:0	10	{
call	53:18	53:56	10	printf
arg	53:25	53:47	11	"Unable to open: %s\n"
water	53:25	0:0	12	"Unable to open: %s\n"
arg	53:49	53:56	11	argv[i]
water	53:49	0:0	12	argv
op	53:53	0:0	12	[
water	53:54	0:0	12	i
op	53:55	0:0	12	]
water	53:57	0:0	10	;
return	54:18	54:26	10	1
water	54:25	0:0	11	1
water	55:16	0:0	10	}
break	56:14	56:19	8	
water	57:12	0:0	8	case
water	57:17	0:0	8	'o'
water	57:20	0:0	8	:
water	58:14	0:0	8	if
water	58:17	0:0	8	(
water	58:18	0:0	8	mode
op	58:23	0:0	8	==
water	58:26	0:0	8	0
water	58:27	0:0	8	)
water	59:16	0:0	8	ofile
op	59:22	0:0	8	=
call	59:24	59:45	8	fopen
arg	59:30	59:39	9	argv[++i]
water	59:30	0:0	10	argv
op	59:34	0:0	10	[
op	59:35	0:0	10	++
water	59:37	0:0	10	i
op	59:38	0:0	10	]
arg	59:41	59:45	9	"wt"
water	59:41	0:0	10	"wt"
water	59:46	0:0	8	;
else	60:14	61:46	8
stmts	61:16	61:46	9	
water	61:16	0:0	10	ofile
op	61:22	0:0	10	=
call	61:24	61:45	10	fopen
arg	61:30	61:39	11	argv[++i]
water	61:30	0:0	12	argv
op	61:34	0:0	12	[
op	61:35	0:0	12	++
water	61:37	0:0	12	i
op	61:38	0:0	12	]
arg	61:41	61:45	11	"wb"
water	61:41	0:0	12	"wb"
water	61:46	0:0	10	;
if	62:14	66:16	8	(ofile == ( FILE * ) NULL)
cond	62:18	62:35	9	ofile == ( FILE * ) NULL
water	62:18	0:0	10	ofile
op	62:24	0:0	10	==
water	62:27	0:0	10	(
water	62:28	0:0	10	FILE
op	62:33	0:0	10	*
water	62:34	0:0	10	)
water	62:35	0:0	10	NULL
stmts	63:16	66:16	9	
water	63:16	0:0	10	{
call	64:18	64:56	10	printf
arg	64:25	64:47	11	"Unable to open: %s\n"
water	64:25	0:0	12	"Unable to open: %s\n"
arg	64:49	64:56	11	argv[i]
water	64:49	0:0	12	argv
op	64:53	0:0	12	[
water	64:54	0:0	12	i
op	64:55	0:0	12	]
water	64:57	0:0	10	;
return	65:18	65:26	10	1
water	65:25	0:0	11	1
water	66:16	0:0	10	}
break	67:14	67:19	8	
label	68:12	68:19	8	default :
call	69:14	69:52	8	printf
arg	69:21	69:43	9	"Unknown option: %s\n"
water	69:21	0:0	10	"Unknown option: %s\n"
arg	69:45	69:52	9	argv[i]
water	69:45	0:0	10	argv
op	69:49	0:0	10	[
water	69:50	0:0	10	i
op	69:51	0:0	10	]
water	69:53	0:0	8	;
return	70:14	70:22	8	1
water	70:21	0:0	9	1
water	71:12	0:0	8	}
water	72:8	0:0	6	}
else	73:6	77:8	4
stmts	74:8	77:8	5	
water	74:8	0:0	6	{
call	75:10	75:20	6	puts
arg	75:15	75:20	7	usage
water	75:15	0:0	8	usage
water	75:21	0:0	6	;
return	76:10	76:18	6	1
water	76:17	0:0	7	1
water	77:8	0:0	6	}
water	78:4	0:0	4	}
if	79:2	80:28	2	(mode == 0)
cond	79:6	79:14	3	mode == 0
water	79:6	0:0	4	mode
op	79:11	0:0	4	==
water	79:14	0:0	4	0
stmts	80:4	80:28	3	
call	80:4	80:27	4	formatIPTC
arg	80:15	80:20	5	ifile
water	80:15	0:0	6	ifile
arg	80:22	80:27	5	ofile
water	80:22	0:0	6	ofile
water	80:28	0:0	4	;
if	81:2	180:4	2	(mode == 1)
cond	81:6	81:14	3	mode == 1
water	81:6	0:0	4	mode
op	81:11	0:0	4	==
water	81:14	0:0	4	1
stmts	82:4	180:4	3	
water	82:4	0:0	4	{
decl	83:6	88:15	4	char	brkused
water	84:15	0:0	4	,
decl	83:6	88:15	4	char	quoted
water	85:14	0:0	4	,
decl	83:6	88:15	4	char	*line
water	86:13	0:0	4	,
decl	83:6	88:15	4	char	*token
water	87:14	0:0	4	,
decl	83:6	88:15	4	char	*newstr
decl	89:6	91:12	4	int	state
water	90:13	0:0	4	,
decl	89:6	91:12	4	int	next
decl	92:6	94:19	4	unsigned char	recnum
op	93:15	0:0	4	=
water	93:17	0:0	4	0
water	93:18	0:0	4	,
decl	92:6	94:19	4	unsigned char	dataset
op	94:16	0:0	4	=
water	94:18	0:0	4	0
decl	95:6	96:28	4	int	inputlen
op	96:17	0:0	4	=
water	96:19	0:0	4	BUFFER_SZ
water	97:6	0:0	4	line
op	97:11	0:0	4	=
water	97:13	0:0	4	(
water	97:14	0:0	4	char
op	97:19	0:0	4	*
water	97:20	0:0	4	)
call	97:22	97:37	4	malloc
arg	97:29	97:37	5	inputlen
water	97:29	0:0	6	inputlen
water	97:38	0:0	4	;
water	98:6	0:0	4	token
op	98:12	0:0	4	=
water	98:14	0:0	4	(
water	98:15	0:0	4	char
op	98:20	0:0	4	*
water	98:21	0:0	4	)
water	98:22	0:0	4	NULL
water	98:26	0:0	4	;
while	99:6	176:8	4	(( line =super_fgets (line ,& inputlen ,ifile ) ) != NULL)
cond	99:12	99:56	5	( line =super_fgets (line ,& inputlen ,ifile ) ) != NULL
water	99:12	0:0	6	(
water	99:13	0:0	6	line
op	99:18	0:0	6	=
call	99:20	99:52	6	super_fgets
arg	99:32	99:36	7	line
water	99:32	0:0	8	line
arg	99:37	99:46	7	&inputlen
op	99:37	0:0	8	&
water	99:38	0:0	8	inputlen
arg	99:47	99:52	7	ifile
water	99:47	0:0	8	ifile
water	99:53	0:0	6	)
op	99:54	0:0	6	!=
water	99:56	0:0	6	NULL
stmts	100:8	176:8	5	
water	100:8	0:0	6	{
water	101:10	0:0	6	state
op	101:15	0:0	6	=
water	101:16	0:0	6	0
water	101:17	0:0	6	;
water	102:10	0:0	6	next
op	102:14	0:0	6	=
water	102:15	0:0	6	0
water	102:16	0:0	6	;
water	103:10	0:0	6	token
op	103:16	0:0	6	=
water	103:18	0:0	6	(
water	103:19	0:0	6	char
op	103:24	0:0	6	*
water	103:25	0:0	6	)
call	103:27	103:42	6	malloc
arg	103:34	103:42	7	inputlen
water	103:34	0:0	8	inputlen
water	103:43	0:0	6	;
water	104:10	0:0	6	newstr
op	104:17	0:0	6	=
water	104:19	0:0	6	(
water	104:20	0:0	6	char
op	104:25	0:0	6	*
water	104:26	0:0	6	)
call	104:28	104:43	6	malloc
arg	104:35	104:43	7	inputlen
water	104:35	0:0	8	inputlen
water	104:44	0:0	6	;
while	105:10	171:12	6	(tokenizer (0 ,token ,inputlen ,line ,"" ,"=" ,"\"" ,0 ,& brkused ,& next ,& quoted ) == 0)
cond	105:16	106:51	7	tokenizer (0 ,token ,inputlen ,line ,"" ,"=" ,"\"" ,0 ,& brkused ,& next ,& quoted ) == 0
call	105:16	106:48	8	tokenizer
arg	105:26	105:27	9	0
water	105:26	0:0	10	0
arg	105:29	105:34	9	token
water	105:29	0:0	10	token
arg	105:36	105:44	9	inputlen
water	105:36	0:0	10	inputlen
arg	105:46	105:50	9	line
water	105:46	0:0	10	line
arg	105:52	105:54	9	""
water	105:52	0:0	10	""
arg	105:56	105:59	9	"="
water	105:56	0:0	10	"="
arg	105:61	105:65	9	"\""
water	105:61	0:0	10	"\""
arg	105:67	105:68	9	0
water	105:67	0:0	10	0
arg	106:26	106:34	9	&brkused
op	106:26	0:0	10	&
water	106:27	0:0	10	brkused
arg	106:35	106:40	9	&next
op	106:35	0:0	10	&
water	106:36	0:0	10	next
arg	106:41	106:48	9	&quoted
op	106:41	0:0	10	&
water	106:42	0:0	10	quoted
op	106:49	0:0	8	==
water	106:51	0:0	8	0
stmts	107:12	171:12	7	
water	107:12	0:0	8	{
if	108:14	128:16	8	(state == 0)
cond	108:18	108:27	9	state == 0
water	108:18	0:0	10	state
op	108:24	0:0	10	==
water	108:27	0:0	10	0
stmts	109:16	128:16	9	
water	109:16	0:0	10	{
decl	110:18	112:24	10	int	state
water	111:25	0:0	10	,
decl	110:18	112:24	10	int	next
decl	113:18	115:26	10	char	brkused
water	114:27	0:0	10	,
decl	113:18	115:26	10	char	quoted
water	116:18	0:0	10	state
op	116:23	0:0	10	=
water	116:24	0:0	10	0
water	116:25	0:0	10	;
water	117:18	0:0	10	next
op	117:22	0:0	10	=
water	117:23	0:0	10	0
water	117:24	0:0	10	;
while	118:18	127:20	10	(tokenizer (0 ,newstr ,inputlen ,token ,"" ,"#" ,"" ,0 ,& brkused ,& next ,& quoted ) == 0)
cond	118:24	119:61	11	tokenizer (0 ,newstr ,inputlen ,token ,"" ,"#" ,"" ,0 ,& brkused ,& next ,& quoted ) == 0
call	118:24	119:58	12	tokenizer
arg	118:34	118:35	13	0
water	118:34	0:0	14	0
arg	118:37	118:43	13	newstr
water	118:37	0:0	14	newstr
arg	118:45	118:53	13	inputlen
water	118:45	0:0	14	inputlen
arg	118:55	118:60	13	token
water	118:55	0:0	14	token
arg	118:62	118:64	13	""
water	118:62	0:0	14	""
arg	118:66	118:69	13	"#"
water	118:66	0:0	14	"#"
arg	118:71	118:73	13	""
water	118:71	0:0	14	""
arg	118:75	118:76	13	0
water	118:75	0:0	14	0
arg	119:34	119:42	13	&brkused
op	119:34	0:0	14	&
water	119:35	0:0	14	brkused
arg	119:44	119:49	13	&next
op	119:44	0:0	14	&
water	119:45	0:0	14	next
arg	119:51	119:58	13	&quoted
op	119:51	0:0	14	&
water	119:52	0:0	14	quoted
op	119:59	0:0	12	==
water	119:61	0:0	12	0
stmts	120:20	127:20	11	
water	120:20	0:0	12	{
if	121:22	122:62	12	(state == 0)
cond	121:26	121:35	13	state == 0
water	121:26	0:0	14	state
op	121:32	0:0	14	==
water	121:35	0:0	14	0
stmts	122:24	122:62	13	
water	122:24	0:0	14	dataset
op	122:32	0:0	14	=
water	122:34	0:0	14	(
water	122:35	0:0	14	unsigned
water	122:44	0:0	14	char
water	122:48	0:0	14	)
call	122:50	122:61	14	atoi
arg	122:55	122:61	15	newstr
water	122:55	0:0	16	newstr
water	122:62	0:0	14	;
else	123:22	125:63	12
stmts	124:24	125:63	13	
if	124:24	125:63	14	(state == 1)
cond	124:28	124:37	15	state == 1
water	124:28	0:0	16	state
op	124:34	0:0	16	==
water	124:37	0:0	16	1
stmts	125:26	125:63	15	
water	125:26	0:0	16	recnum
op	125:33	0:0	16	=
water	125:35	0:0	16	(
water	125:36	0:0	16	unsigned
water	125:45	0:0	16	char
water	125:49	0:0	16	)
call	125:51	125:62	16	atoi
arg	125:56	125:62	17	newstr
water	125:56	0:0	18	newstr
water	125:63	0:0	16	;
water	126:22	0:0	12	state
op	126:27	0:0	12	++
water	126:29	0:0	12	;
water	127:20	0:0	12	}
water	128:16	0:0	10	}
else	129:14	169:18	8
stmts	130:16	169:18	9	
if	130:16	169:18	10	(state == 1)
cond	130:20	130:29	11	state == 1
water	130:20	0:0	12	state
op	130:26	0:0	12	==
water	130:29	0:0	12	1
stmts	131:18	169:18	11	
water	131:18	0:0	12	{
decl	132:20	133:26	12	int	next
decl	134:20	135:25	12	unsigned long	len
decl	136:20	138:28	12	char	brkused
water	137:29	0:0	12	,
decl	136:20	138:28	12	char	quoted
water	139:20	0:0	12	next
op	139:24	0:0	12	=
water	139:25	0:0	12	0
water	139:26	0:0	12	;
water	140:20	0:0	12	len
op	140:24	0:0	12	=
call	140:26	140:38	12	strlen
arg	140:33	140:38	13	token
water	140:33	0:0	14	token
water	140:39	0:0	12	;
while	141:20	150:22	12	(tokenizer (0 ,newstr ,inputlen ,token ,"" ,"&" ,"" ,0 ,& brkused ,& next ,& quoted ) == 0)
cond	141:26	142:63	13	tokenizer (0 ,newstr ,inputlen ,token ,"" ,"&" ,"" ,0 ,& brkused ,& next ,& quoted ) == 0
call	141:26	142:60	14	tokenizer
arg	141:36	141:37	15	0
water	141:36	0:0	16	0
arg	141:39	141:45	15	newstr
water	141:39	0:0	16	newstr
arg	141:47	141:55	15	inputlen
water	141:47	0:0	16	inputlen
arg	141:57	141:62	15	token
water	141:57	0:0	16	token
arg	141:64	141:66	15	""
water	141:64	0:0	16	""
arg	141:68	141:71	15	"&"
water	141:68	0:0	16	"&"
arg	141:73	141:75	15	""
water	141:73	0:0	16	""
arg	141:77	141:78	15	0
water	141:77	0:0	16	0
arg	142:36	142:44	15	&brkused
op	142:36	0:0	16	&
water	142:37	0:0	16	brkused
arg	142:46	142:51	15	&next
op	142:46	0:0	16	&
water	142:47	0:0	16	next
arg	142:53	142:60	15	&quoted
op	142:53	0:0	16	&
water	142:54	0:0	16	quoted
op	142:61	0:0	14	==
water	142:63	0:0	14	0
stmts	143:22	150:22	13	
water	143:22	0:0	14	{
if	144:24	149:26	14	(brkused && next > 0)
cond	144:28	144:46	15	brkused && next > 0
water	144:28	0:0	16	brkused
op	144:36	0:0	16	&&
water	144:39	0:0	16	next
op	144:44	0:0	16	>
water	144:46	0:0	16	0
stmts	145:26	149:26	15	
water	145:26	0:0	16	{
decl	146:28	147:49	16	char	*s
op	147:33	0:0	16	=
op	147:35	0:0	16	&
water	147:36	0:0	16	token
op	147:41	0:0	16	[
water	147:42	0:0	16	next
op	147:46	0:0	16	-
water	147:47	0:0	16	1
op	147:48	0:0	16	]
water	148:28	0:0	16	len
op	148:32	0:0	16	-=
call	148:35	148:64	16	convertHTMLcodes
arg	148:52	148:53	17	s
water	148:52	0:0	18	s
arg	148:55	148:64	17	strlen(s)
call	148:55	148:63	18	strlen
arg	148:62	148:63	19	s
water	148:62	0:0	20	s
water	148:65	0:0	16	;
water	149:26	0:0	16	}
water	150:22	0:0	14	}
call	151:20	151:37	12	fputc
arg	151:26	151:30	13	0x1c
water	151:26	0:0	14	0
water	151:27	0:0	14	x1c
arg	151:32	151:37	13	ofile
water	151:32	0:0	14	ofile
water	151:38	0:0	12	;
call	152:20	152:40	12	fputc
arg	152:26	152:33	13	dataset
water	152:26	0:0	14	dataset
arg	152:35	152:40	13	ofile
water	152:35	0:0	14	ofile
water	152:41	0:0	12	;
call	153:20	153:39	12	fputc
arg	153:26	153:32	13	recnum
water	153:26	0:0	14	recnum
arg	153:34	153:39	13	ofile
water	153:34	0:0	14	ofile
water	153:40	0:0	12	;
if	154:20	158:22	12	(len < 0 x10000)
cond	154:24	154:31	13	len < 0 x10000
water	154:24	0:0	14	len
op	154:28	0:0	14	<
water	154:30	0:0	14	0
water	154:31	0:0	14	x10000
stmts	155:22	158:22	13	
water	155:22	0:0	14	{
call	156:24	156:53	14	fputc
arg	156:30	156:46	15	(len>>8)&255
water	156:30	0:0	16	(
water	156:31	0:0	16	len
op	156:35	0:0	16	>>
water	156:38	0:0	16	8
water	156:39	0:0	16	)
op	156:41	0:0	16	&
water	156:43	0:0	16	255
arg	156:48	156:53	15	ofile
water	156:48	0:0	16	ofile
water	156:54	0:0	14	;
call	157:24	157:46	14	fputc
arg	157:30	157:39	15	len&255
water	157:30	0:0	16	len
op	157:34	0:0	16	&
water	157:36	0:0	16	255
arg	157:41	157:46	15	ofile
water	157:41	0:0	16	ofile
water	157:47	0:0	14	;
water	158:22	0:0	14	}
else	159:20	165:22	12
stmts	160:22	165:22	13	
water	160:22	0:0	14	{
call	161:24	161:63	14	fputc
arg	161:30	161:56	15	((len>>24)&255)|0x80
water	161:30	0:0	16	(
water	161:31	0:0	16	(
water	161:32	0:0	16	len
op	161:36	0:0	16	>>
water	161:39	0:0	16	24
water	161:41	0:0	16	)
op	161:43	0:0	16	&
water	161:45	0:0	16	255
water	161:48	0:0	16	)
op	161:50	0:0	16	|
water	161:52	0:0	16	0
water	161:53	0:0	16	x80
arg	161:58	161:63	15	ofile
water	161:58	0:0	16	ofile
water	161:64	0:0	14	;
call	162:24	162:54	14	fputc
arg	162:30	162:47	15	(len>>16)&255
water	162:30	0:0	16	(
water	162:31	0:0	16	len
op	162:35	0:0	16	>>
water	162:38	0:0	16	16
water	162:40	0:0	16	)
op	162:42	0:0	16	&
water	162:44	0:0	16	255
arg	162:49	162:54	15	ofile
water	162:49	0:0	16	ofile
water	162:55	0:0	14	;
call	163:24	163:53	14	fputc
arg	163:30	163:46	15	(len>>8)&255
water	163:30	0:0	16	(
water	163:31	0:0	16	len
op	163:35	0:0	16	>>
water	163:38	0:0	16	8
water	163:39	0:0	16	)
op	163:41	0:0	16	&
water	163:43	0:0	16	255
arg	163:48	163:53	15	ofile
water	163:48	0:0	16	ofile
water	163:54	0:0	14	;
call	164:24	164:46	14	fputc
arg	164:30	164:39	15	len&255
water	164:30	0:0	16	len
op	164:34	0:0	16	&
water	164:36	0:0	16	255
arg	164:41	164:46	15	ofile
water	164:41	0:0	16	ofile
water	164:47	0:0	14	;
water	165:22	0:0	14	}
water	166:20	0:0	12	next
op	166:24	0:0	12	=
water	166:25	0:0	12	0
water	166:26	0:0	12	;
while	167:20	168:49	12	(len --)
cond	167:27	167:30	13	len --
water	167:27	0:0	14	len
op	167:30	0:0	14	--
stmts	168:22	168:49	13	
call	168:22	168:48	14	fputc
arg	168:28	168:41	15	token[next++]
water	168:28	0:0	16	token
op	168:33	0:0	16	[
water	168:34	0:0	16	next
op	168:38	0:0	16	++
op	168:40	0:0	16	]
arg	168:43	168:48	15	ofile
water	168:43	0:0	16	ofile
water	168:49	0:0	14	;
water	169:18	0:0	12	}
water	170:14	0:0	8	state
op	170:19	0:0	8	++
water	170:21	0:0	8	;
water	171:12	0:0	8	}
call	172:10	172:20	6	free
arg	172:15	172:20	7	token
water	172:15	0:0	8	token
water	172:21	0:0	6	;
water	173:10	0:0	6	token
op	173:16	0:0	6	=
water	173:18	0:0	6	(
water	173:19	0:0	6	char
op	173:24	0:0	6	*
water	173:25	0:0	6	)
water	173:26	0:0	6	NULL
water	173:30	0:0	6	;
call	174:10	174:21	6	free
arg	174:15	174:21	7	newstr
water	174:15	0:0	8	newstr
water	174:22	0:0	6	;
water	175:10	0:0	6	newstr
op	175:17	0:0	6	=
water	175:19	0:0	6	(
water	175:20	0:0	6	char
op	175:25	0:0	6	*
water	175:26	0:0	6	)
water	175:27	0:0	6	NULL
water	175:31	0:0	6	;
water	176:8	0:0	6	}
call	177:6	177:15	4	free
arg	177:11	177:15	5	line
water	177:11	0:0	6	line
water	177:16	0:0	4	;
call	178:6	178:20	4	fclose
arg	178:14	178:20	5	ifile
water	178:14	0:0	6	ifile
water	178:21	0:0	4	;
call	179:6	179:20	4	fclose
arg	179:14	179:20	5	ofile
water	179:14	0:0	6	ofile
water	179:21	0:0	4	;
water	180:4	0:0	4	}
return	181:2	181:10	2	0
water	181:9	0:0	3	0

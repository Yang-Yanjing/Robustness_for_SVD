func	1:0	434:0	0	void	TIFFPrintDirectory
params	2:18	0:0	1	
param	2:19	2:28	2	TIFF *	tif
param	2:30	2:38	2	FILE *	fd
param	2:40	2:50	2	long	flags
stmnts	0:0	433:1	1	
decl	4:1	4:34	2	TIFFDirectory	*td
op	4:19	0:0	2	=
op	4:21	0:0	2	&
water	4:22	0:0	2	tif
op	4:25	0:0	2	->
water	4:27	0:0	2	tif_dir
decl	5:1	5:10	2	char	*sep
decl	6:1	6:10	2	long	l
water	6:7	0:0	2	,
decl	6:1	6:10	2	long	n
call	8:1	10:36	2	fprintf
arg	8:9	8:11	3	fd
water	8:9	0:0	4	fd
arg	8:13	8:57	3	"TIFF Directory at offset 0x%I64x (%I64u)\n"
water	8:13	0:0	4	"TIFF Directory at offset 0x%I64x (%I64u)\n"
arg	9:2	9:36	3	(unsigned__int64)tif->tif_diroff
water	9:2	0:0	4	(
water	9:3	0:0	4	unsigned
water	9:12	0:0	4	__int64
water	9:19	0:0	4	)
water	9:21	0:0	4	tif
op	9:24	0:0	4	->
water	9:26	0:0	4	tif_diroff
arg	10:2	10:36	3	(unsigned__int64)tif->tif_diroff
water	10:2	0:0	4	(
water	10:3	0:0	4	unsigned
water	10:12	0:0	4	__int64
water	10:19	0:0	4	)
water	10:21	0:0	4	tif
op	10:24	0:0	4	->
water	10:26	0:0	4	tif_diroff
water	10:37	0:0	2	;
call	12:1	14:38	2	fprintf
arg	12:9	12:11	3	fd
water	12:9	0:0	4	fd
arg	12:13	12:55	3	"TIFF Directory at offset 0x%llx (%llu)\n"
water	12:13	0:0	4	"TIFF Directory at offset 0x%llx (%llu)\n"
arg	13:2	13:38	3	(unsignedlonglong)tif->tif_diroff
water	13:2	0:0	4	(
water	13:3	0:0	4	unsigned
water	13:12	0:0	4	long
water	13:17	0:0	4	long
water	13:21	0:0	4	)
water	13:23	0:0	4	tif
op	13:26	0:0	4	->
water	13:28	0:0	4	tif_diroff
arg	14:2	14:38	3	(unsignedlonglong)tif->tif_diroff
water	14:2	0:0	4	(
water	14:3	0:0	4	unsigned
water	14:12	0:0	4	long
water	14:17	0:0	4	long
water	14:21	0:0	4	)
water	14:23	0:0	4	tif
op	14:26	0:0	4	->
water	14:28	0:0	4	tif_diroff
water	14:39	0:0	2	;
if	16:1	31:1	2	(TIFFFieldSet (tif ,FIELD_SUBFILETYPE ))
cond	16:5	16:39	3	TIFFFieldSet (tif ,FIELD_SUBFILETYPE )
call	16:5	16:39	4	TIFFFieldSet
arg	16:18	16:21	5	tif
water	16:18	0:0	6	tif
arg	16:22	16:39	5	FIELD_SUBFILETYPE
water	16:22	0:0	6	FIELD_SUBFILETYPE
stmts	16:42	31:1	3	
water	16:42	0:0	4	{
call	17:2	17:31	4	fprintf
arg	17:10	17:12	5	fd
water	17:10	0:0	6	fd
arg	17:14	17:31	5	"  Subfile Type:"
water	17:14	0:0	6	"  Subfile Type:"
water	17:32	0:0	4	;
water	18:2	0:0	4	sep
op	18:6	0:0	4	=
water	18:8	0:0	4	" "
water	18:11	0:0	4	;
if	19:2	22:2	4	(td -> td_subfiletype & FILETYPE_REDUCEDIMAGE)
cond	19:6	19:27	5	td -> td_subfiletype & FILETYPE_REDUCEDIMAGE
water	19:6	0:0	6	td
op	19:8	0:0	6	->
water	19:10	0:0	6	td_subfiletype
op	19:25	0:0	6	&
water	19:27	0:0	6	FILETYPE_REDUCEDIMAGE
stmts	19:50	22:2	5	
water	19:50	0:0	6	{
call	20:3	20:48	6	fprintf
arg	20:11	20:13	7	fd
water	20:11	0:0	8	fd
arg	20:15	20:43	7	"%sreduced-resolution image"
water	20:15	0:0	8	"%sreduced-resolution image"
arg	20:45	20:48	7	sep
water	20:45	0:0	8	sep
water	20:49	0:0	6	;
water	21:3	0:0	6	sep
op	21:7	0:0	6	=
water	21:9	0:0	6	"/"
water	21:12	0:0	6	;
water	22:2	0:0	6	}
if	23:2	26:2	4	(td -> td_subfiletype & FILETYPE_PAGE)
cond	23:6	23:27	5	td -> td_subfiletype & FILETYPE_PAGE
water	23:6	0:0	6	td
op	23:8	0:0	6	->
water	23:10	0:0	6	td_subfiletype
op	23:25	0:0	6	&
water	23:27	0:0	6	FILETYPE_PAGE
stmts	23:42	26:2	5	
water	23:42	0:0	6	{
call	24:3	24:43	6	fprintf
arg	24:11	24:13	7	fd
water	24:11	0:0	8	fd
arg	24:15	24:38	7	"%smulti-page document"
water	24:15	0:0	8	"%smulti-page document"
arg	24:40	24:43	7	sep
water	24:40	0:0	8	sep
water	24:44	0:0	6	;
water	25:3	0:0	6	sep
op	25:7	0:0	6	=
water	25:9	0:0	6	"/"
water	25:12	0:0	6	;
water	26:2	0:0	6	}
if	27:2	28:42	4	(td -> td_subfiletype & FILETYPE_MASK)
cond	27:6	27:27	5	td -> td_subfiletype & FILETYPE_MASK
water	27:6	0:0	6	td
op	27:8	0:0	6	->
water	27:10	0:0	6	td_subfiletype
op	27:25	0:0	6	&
water	27:27	0:0	6	FILETYPE_MASK
stmts	28:3	28:42	5	
call	28:3	28:41	6	fprintf
arg	28:11	28:13	7	fd
water	28:11	0:0	8	fd
arg	28:15	28:36	7	"%stransparency mask"
water	28:15	0:0	8	"%stransparency mask"
arg	28:38	28:41	7	sep
water	28:38	0:0	8	sep
water	28:42	0:0	6	;
call	29:2	30:67	4	fprintf
arg	29:10	29:12	5	fd
water	29:10	0:0	6	fd
arg	29:14	29:32	5	" (%lu = 0x%lx)\n"
water	29:14	0:0	6	" (%lu = 0x%lx)\n"
arg	30:6	30:40	5	(unsignedlong)td->td_subfiletype
water	30:6	0:0	6	(
water	30:7	0:0	6	unsigned
water	30:16	0:0	6	long
water	30:20	0:0	6	)
water	30:22	0:0	6	td
op	30:24	0:0	6	->
water	30:26	0:0	6	td_subfiletype
arg	30:42	30:67	5	(long)td->td_subfiletype
water	30:42	0:0	6	(
water	30:43	0:0	6	long
water	30:47	0:0	6	)
water	30:49	0:0	6	td
op	30:51	0:0	6	->
water	30:53	0:0	6	td_subfiletype
water	30:68	0:0	4	;
water	31:1	0:0	4	}
if	32:1	39:1	2	(TIFFFieldSet (tif ,FIELD_IMAGEDIMENSIONS ))
cond	32:5	32:43	3	TIFFFieldSet (tif ,FIELD_IMAGEDIMENSIONS )
call	32:5	32:43	4	TIFFFieldSet
arg	32:18	32:21	5	tif
water	32:18	0:0	6	tif
arg	32:22	32:43	5	FIELD_IMAGEDIMENSIONS
water	32:22	0:0	6	FIELD_IMAGEDIMENSIONS
stmts	32:46	39:1	3	
water	32:46	0:0	4	{
call	33:2	34:75	4	fprintf
arg	33:10	33:12	5	fd
water	33:10	0:0	6	fd
arg	33:14	33:52	5	"  Image Width: %lu Image Length: %lu"
water	33:14	0:0	6	"  Image Width: %lu Image Length: %lu"
arg	34:6	34:39	5	(unsignedlong)td->td_imagewidth
water	34:6	0:0	6	(
water	34:7	0:0	6	unsigned
water	34:16	0:0	6	long
water	34:20	0:0	6	)
water	34:22	0:0	6	td
op	34:24	0:0	6	->
water	34:26	0:0	6	td_imagewidth
arg	34:41	34:75	5	(unsignedlong)td->td_imagelength
water	34:41	0:0	6	(
water	34:42	0:0	6	unsigned
water	34:51	0:0	6	long
water	34:55	0:0	6	)
water	34:57	0:0	6	td
op	34:59	0:0	6	->
water	34:61	0:0	6	td_imagelength
water	34:76	0:0	4	;
if	35:2	37:41	4	(TIFFFieldSet (tif ,FIELD_IMAGEDEPTH ))
cond	35:6	35:39	5	TIFFFieldSet (tif ,FIELD_IMAGEDEPTH )
call	35:6	35:39	6	TIFFFieldSet
arg	35:19	35:22	7	tif
water	35:19	0:0	8	tif
arg	35:23	35:39	7	FIELD_IMAGEDEPTH
water	35:23	0:0	8	FIELD_IMAGEDEPTH
stmts	36:3	37:41	5	
call	36:3	37:40	6	fprintf
arg	36:11	36:13	7	fd
water	36:11	0:0	8	fd
arg	36:15	36:34	7	" Image Depth: %lu"
water	36:15	0:0	8	" Image Depth: %lu"
arg	37:7	37:40	7	(unsignedlong)td->td_imagedepth
water	37:7	0:0	8	(
water	37:8	0:0	8	unsigned
water	37:17	0:0	8	long
water	37:21	0:0	8	)
water	37:23	0:0	8	td
op	37:25	0:0	8	->
water	37:27	0:0	8	td_imagedepth
water	37:41	0:0	6	;
call	38:2	38:18	4	fprintf
arg	38:10	38:12	5	fd
water	38:10	0:0	6	fd
arg	38:14	38:18	5	"\n"
water	38:14	0:0	6	"\n"
water	38:19	0:0	4	;
water	39:1	0:0	4	}
if	40:1	47:1	2	(TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS ))
cond	40:5	40:42	3	TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS )
call	40:5	40:42	4	TIFFFieldSet
arg	40:18	40:21	5	tif
water	40:18	0:0	6	tif
arg	40:22	40:42	5	FIELD_TILEDIMENSIONS
water	40:22	0:0	6	FIELD_TILEDIMENSIONS
stmts	40:45	47:1	3	
water	40:45	0:0	4	{
call	41:2	42:73	4	fprintf
arg	41:10	41:12	5	fd
water	41:10	0:0	6	fd
arg	41:14	41:50	5	"  Tile Width: %lu Tile Length: %lu"
water	41:14	0:0	6	"  Tile Width: %lu Tile Length: %lu"
arg	42:6	42:38	5	(unsignedlong)td->td_tilewidth
water	42:6	0:0	6	(
water	42:7	0:0	6	unsigned
water	42:16	0:0	6	long
water	42:20	0:0	6	)
water	42:22	0:0	6	td
op	42:24	0:0	6	->
water	42:26	0:0	6	td_tilewidth
arg	42:40	42:73	5	(unsignedlong)td->td_tilelength
water	42:40	0:0	6	(
water	42:41	0:0	6	unsigned
water	42:50	0:0	6	long
water	42:54	0:0	6	)
water	42:56	0:0	6	td
op	42:58	0:0	6	->
water	42:60	0:0	6	td_tilelength
water	42:74	0:0	4	;
if	43:2	45:40	4	(TIFFFieldSet (tif ,FIELD_TILEDEPTH ))
cond	43:6	43:38	5	TIFFFieldSet (tif ,FIELD_TILEDEPTH )
call	43:6	43:38	6	TIFFFieldSet
arg	43:19	43:22	7	tif
water	43:19	0:0	8	tif
arg	43:23	43:38	7	FIELD_TILEDEPTH
water	43:23	0:0	8	FIELD_TILEDEPTH
stmts	44:3	45:40	5	
call	44:3	45:39	6	fprintf
arg	44:11	44:13	7	fd
water	44:11	0:0	8	fd
arg	44:15	44:33	7	" Tile Depth: %lu"
water	44:15	0:0	8	" Tile Depth: %lu"
arg	45:7	45:39	7	(unsignedlong)td->td_tiledepth
water	45:7	0:0	8	(
water	45:8	0:0	8	unsigned
water	45:17	0:0	8	long
water	45:21	0:0	8	)
water	45:23	0:0	8	td
op	45:25	0:0	8	->
water	45:27	0:0	8	td_tiledepth
water	45:40	0:0	6	;
call	46:2	46:18	4	fprintf
arg	46:10	46:12	5	fd
water	46:10	0:0	6	fd
arg	46:14	46:18	5	"\n"
water	46:14	0:0	6	"\n"
water	46:19	0:0	4	;
water	47:1	0:0	4	}
if	48:1	70:1	2	(TIFFFieldSet (tif ,FIELD_RESOLUTION ))
cond	48:5	48:38	3	TIFFFieldSet (tif ,FIELD_RESOLUTION )
call	48:5	48:38	4	TIFFFieldSet
arg	48:18	48:21	5	tif
water	48:18	0:0	6	tif
arg	48:22	48:38	5	FIELD_RESOLUTION
water	48:22	0:0	6	FIELD_RESOLUTION
stmts	48:41	70:1	3	
water	48:41	0:0	4	{
call	49:2	50:44	4	fprintf
arg	49:10	49:12	5	fd
water	49:10	0:0	6	fd
arg	49:14	49:36	5	"  Resolution: %g, %g"
water	49:14	0:0	6	"  Resolution: %g, %g"
arg	50:6	50:24	5	td->td_xresolution
water	50:6	0:0	6	td
op	50:8	0:0	6	->
water	50:10	0:0	6	td_xresolution
arg	50:26	50:44	5	td->td_yresolution
water	50:26	0:0	6	td
op	50:28	0:0	6	->
water	50:30	0:0	6	td_yresolution
water	50:45	0:0	4	;
if	51:2	68:2	4	(TIFFFieldSet (tif ,FIELD_RESOLUTIONUNIT ))
cond	51:6	51:43	5	TIFFFieldSet (tif ,FIELD_RESOLUTIONUNIT )
call	51:6	51:43	6	TIFFFieldSet
arg	51:19	51:22	7	tif
water	51:19	0:0	8	tif
arg	51:23	51:43	7	FIELD_RESOLUTIONUNIT
water	51:23	0:0	8	FIELD_RESOLUTIONUNIT
stmts	51:46	68:2	5	
water	51:46	0:0	6	{
switch	52:3	67:3	6	(td -> td_resolutionunit)
cond	52:11	52:15	7	td -> td_resolutionunit
water	52:11	0:0	8	td
op	52:13	0:0	8	->
water	52:15	0:0	8	td_resolutionunit
stmts	52:34	67:3	7	
water	52:34	0:0	8	{
label	53:3	53:20	8	case RESUNIT_NONE :
call	54:4	54:29	8	fprintf
arg	54:12	54:14	9	fd
water	54:12	0:0	10	fd
arg	54:16	54:29	9	" (unitless)"
water	54:16	0:0	10	" (unitless)"
water	54:30	0:0	8	;
break	55:4	55:9	8	
label	56:3	56:20	8	case RESUNIT_INCH :
call	57:4	57:30	8	fprintf
arg	57:12	57:14	9	fd
water	57:12	0:0	10	fd
arg	57:16	57:30	9	" pixels/inch"
water	57:16	0:0	10	" pixels/inch"
water	57:31	0:0	8	;
break	58:4	58:9	8	
label	59:3	59:26	8	case RESUNIT_CENTIMETER :
call	60:4	60:28	8	fprintf
arg	60:12	60:14	9	fd
water	60:12	0:0	10	fd
arg	60:16	60:28	9	" pixels/cm"
water	60:16	0:0	10	" pixels/cm"
water	60:29	0:0	8	;
break	61:4	61:9	8	
label	62:3	62:10	8	default :
call	63:4	65:29	8	fprintf
arg	63:12	63:14	9	fd
water	63:12	0:0	10	fd
arg	63:16	63:35	9	" (unit %u = 0x%x)"
water	63:16	0:0	10	" (unit %u = 0x%x)"
arg	64:8	64:29	9	td->td_resolutionunit
water	64:8	0:0	10	td
op	64:10	0:0	10	->
water	64:12	0:0	10	td_resolutionunit
arg	65:8	65:29	9	td->td_resolutionunit
water	65:8	0:0	10	td
op	65:10	0:0	10	->
water	65:12	0:0	10	td_resolutionunit
water	65:30	0:0	8	;
break	66:4	66:9	8	
water	67:3	0:0	8	}
water	68:2	0:0	6	}
call	69:2	69:18	4	fprintf
arg	69:10	69:12	5	fd
water	69:10	0:0	6	fd
arg	69:14	69:18	5	"\n"
water	69:14	0:0	6	"\n"
water	69:19	0:0	4	;
water	70:1	0:0	4	}
if	71:1	73:41	2	(TIFFFieldSet (tif ,FIELD_POSITION ))
cond	71:5	71:36	3	TIFFFieldSet (tif ,FIELD_POSITION )
call	71:5	71:36	4	TIFFFieldSet
arg	71:18	71:21	5	tif
water	71:18	0:0	6	tif
arg	71:22	71:36	5	FIELD_POSITION
water	71:22	0:0	6	FIELD_POSITION
stmts	72:2	73:41	3	
call	72:2	73:40	4	fprintf
arg	72:10	72:12	5	fd
water	72:10	0:0	6	fd
arg	72:14	72:36	5	"  Position: %g, %g\n"
water	72:14	0:0	6	"  Position: %g, %g\n"
arg	73:6	73:22	5	td->td_xposition
water	73:6	0:0	6	td
op	73:8	0:0	6	->
water	73:10	0:0	6	td_xposition
arg	73:24	73:40	5	td->td_yposition
water	73:24	0:0	6	td
op	73:26	0:0	6	->
water	73:28	0:0	6	td_yposition
water	73:41	0:0	4	;
if	74:1	75:58	2	(TIFFFieldSet (tif ,FIELD_BITSPERSAMPLE ))
cond	74:5	74:41	3	TIFFFieldSet (tif ,FIELD_BITSPERSAMPLE )
call	74:5	74:41	4	TIFFFieldSet
arg	74:18	74:21	5	tif
water	74:18	0:0	6	tif
arg	74:22	74:41	5	FIELD_BITSPERSAMPLE
water	74:22	0:0	6	FIELD_BITSPERSAMPLE
stmts	75:2	75:58	3	
call	75:2	75:57	4	fprintf
arg	75:10	75:12	5	fd
water	75:10	0:0	6	fd
arg	75:14	75:35	5	"  Bits/Sample: %u\n"
water	75:14	0:0	6	"  Bits/Sample: %u\n"
arg	75:37	75:57	5	td->td_bitspersample
water	75:37	0:0	6	td
op	75:39	0:0	6	->
water	75:41	0:0	6	td_bitspersample
water	75:58	0:0	4	;
if	76:1	102:1	2	(TIFFFieldSet (tif ,FIELD_SAMPLEFORMAT ))
cond	76:5	76:40	3	TIFFFieldSet (tif ,FIELD_SAMPLEFORMAT )
call	76:5	76:40	4	TIFFFieldSet
arg	76:18	76:21	5	tif
water	76:18	0:0	6	tif
arg	76:22	76:40	5	FIELD_SAMPLEFORMAT
water	76:22	0:0	6	FIELD_SAMPLEFORMAT
stmts	76:43	102:1	3	
water	76:43	0:0	4	{
call	77:2	77:33	4	fprintf
arg	77:10	77:12	5	fd
water	77:10	0:0	6	fd
arg	77:14	77:33	5	"  Sample Format: "
water	77:14	0:0	6	"  Sample Format: "
water	77:34	0:0	4	;
switch	78:2	101:2	4	(td -> td_sampleformat)
cond	78:10	78:14	5	td -> td_sampleformat
water	78:10	0:0	6	td
op	78:12	0:0	6	->
water	78:14	0:0	6	td_sampleformat
stmts	78:31	101:2	5	
water	78:31	0:0	6	{
label	79:2	79:24	6	case SAMPLEFORMAT_VOID :
call	80:3	80:23	6	fprintf
arg	80:11	80:13	7	fd
water	80:11	0:0	8	fd
arg	80:15	80:23	7	"void\n"
water	80:15	0:0	8	"void\n"
water	80:24	0:0	6	;
break	81:3	81:8	6	
label	82:2	82:23	6	case SAMPLEFORMAT_INT :
call	83:3	83:33	6	fprintf
arg	83:11	83:13	7	fd
water	83:11	0:0	8	fd
arg	83:15	83:33	7	"signed integer\n"
water	83:15	0:0	8	"signed integer\n"
water	83:34	0:0	6	;
break	84:3	84:8	6	
label	85:2	85:24	6	case SAMPLEFORMAT_UINT :
call	86:3	86:35	6	fprintf
arg	86:11	86:13	7	fd
water	86:11	0:0	8	fd
arg	86:15	86:35	7	"unsigned integer\n"
water	86:15	0:0	8	"unsigned integer\n"
water	86:36	0:0	6	;
break	87:3	87:8	6	
label	88:2	88:26	6	case SAMPLEFORMAT_IEEEFP :
call	89:3	89:38	6	fprintf
arg	89:11	89:13	7	fd
water	89:11	0:0	8	fd
arg	89:15	89:38	7	"IEEE floating point\n"
water	89:15	0:0	8	"IEEE floating point\n"
water	89:39	0:0	6	;
break	90:3	90:8	6	
label	91:2	91:30	6	case SAMPLEFORMAT_COMPLEXINT :
call	92:3	92:41	6	fprintf
arg	92:11	92:13	7	fd
water	92:11	0:0	8	fd
arg	92:15	92:41	7	"complex signed integer\n"
water	92:15	0:0	8	"complex signed integer\n"
water	92:42	0:0	6	;
break	93:3	93:8	6	
label	94:2	94:33	6	case SAMPLEFORMAT_COMPLEXIEEEFP :
call	95:3	95:46	6	fprintf
arg	95:11	95:13	7	fd
water	95:11	0:0	8	fd
arg	95:15	95:46	7	"complex IEEE floating point\n"
water	95:15	0:0	8	"complex IEEE floating point\n"
water	95:47	0:0	6	;
break	96:3	96:8	6	
label	97:2	97:9	6	default :
call	98:3	99:47	6	fprintf
arg	98:11	98:13	7	fd
water	98:11	0:0	8	fd
arg	98:15	98:28	7	"%u (0x%x)\n"
water	98:15	0:0	8	"%u (0x%x)\n"
arg	99:7	99:26	7	td->td_sampleformat
water	99:7	0:0	8	td
op	99:9	0:0	8	->
water	99:11	0:0	8	td_sampleformat
arg	99:28	99:47	7	td->td_sampleformat
water	99:28	0:0	8	td
op	99:30	0:0	8	->
water	99:32	0:0	8	td_sampleformat
water	99:48	0:0	6	;
break	100:3	100:8	6	
water	101:2	0:0	6	}
water	102:1	0:0	4	}
if	103:1	111:1	2	(TIFFFieldSet (tif ,FIELD_COMPRESSION ))
cond	103:5	103:39	3	TIFFFieldSet (tif ,FIELD_COMPRESSION )
call	103:5	103:39	4	TIFFFieldSet
arg	103:18	103:21	5	tif
water	103:18	0:0	6	tif
arg	103:22	103:39	5	FIELD_COMPRESSION
water	103:22	0:0	6	FIELD_COMPRESSION
stmts	103:42	111:1	3	
water	103:42	0:0	4	{
decl	104:2	104:56	4	const TIFFCodec	*c
op	104:21	0:0	4	=
call	104:23	104:55	5	TIFFFindCODEC
arg	104:37	104:55	6	td->td_compression
water	104:37	0:0	7	td
op	104:39	0:0	7	->
water	104:41	0:0	7	td_compression
call	105:2	105:38	4	fprintf
arg	105:10	105:12	5	fd
water	105:10	0:0	6	fd
arg	105:14	105:38	5	"  Compression Scheme: "
water	105:14	0:0	6	"  Compression Scheme: "
water	105:39	0:0	4	;
if	106:2	107:31	4	(c)
cond	106:6	106:6	5	c
water	106:6	0:0	6	c
stmts	107:3	107:31	5	
call	107:3	107:30	6	fprintf
arg	107:11	107:13	7	fd
water	107:11	0:0	8	fd
arg	107:15	107:21	7	"%s\n"
water	107:15	0:0	8	"%s\n"
arg	107:23	107:30	7	c->name
water	107:23	0:0	8	c
op	107:24	0:0	8	->
water	107:26	0:0	8	name
water	107:31	0:0	6	;
else	108:2	110:46	4
stmts	109:3	110:46	5	
call	109:3	110:45	6	fprintf
arg	109:11	109:13	7	fd
water	109:11	0:0	8	fd
arg	109:15	109:28	7	"%u (0x%x)\n"
water	109:15	0:0	8	"%u (0x%x)\n"
arg	110:7	110:25	7	td->td_compression
water	110:7	0:0	8	td
op	110:9	0:0	8	->
water	110:11	0:0	8	td_compression
arg	110:27	110:45	7	td->td_compression
water	110:27	0:0	8	td
op	110:29	0:0	8	->
water	110:31	0:0	8	td_compression
water	110:46	0:0	6	;
water	111:1	0:0	4	}
if	112:1	130:1	2	(TIFFFieldSet (tif ,FIELD_PHOTOMETRIC ))
cond	112:5	112:39	3	TIFFFieldSet (tif ,FIELD_PHOTOMETRIC )
call	112:5	112:39	4	TIFFFieldSet
arg	112:18	112:21	5	tif
water	112:18	0:0	6	tif
arg	112:22	112:39	5	FIELD_PHOTOMETRIC
water	112:22	0:0	6	FIELD_PHOTOMETRIC
stmts	112:42	130:1	3	
water	112:42	0:0	4	{
call	113:2	113:46	4	fprintf
arg	113:10	113:12	5	fd
water	113:10	0:0	6	fd
arg	113:14	113:46	5	"  Photometric Interpretation: "
water	113:14	0:0	6	"  Photometric Interpretation: "
water	113:47	0:0	4	;
if	114:2	115:54	4	(td -> td_photometric < NPHOTONAMES)
cond	114:6	114:27	5	td -> td_photometric < NPHOTONAMES
water	114:6	0:0	6	td
op	114:8	0:0	6	->
water	114:10	0:0	6	td_photometric
op	114:25	0:0	6	<
water	114:27	0:0	6	NPHOTONAMES
stmts	115:3	115:54	5	
call	115:3	115:53	6	fprintf
arg	115:11	115:13	7	fd
water	115:11	0:0	8	fd
arg	115:15	115:21	7	"%s\n"
water	115:15	0:0	8	"%s\n"
arg	115:23	115:53	7	photoNames[td->td_photometric]
water	115:23	0:0	8	photoNames
op	115:33	0:0	8	[
water	115:34	0:0	8	td
op	115:36	0:0	8	->
water	115:38	0:0	8	td_photometric
op	115:52	0:0	8	]
water	115:54	0:0	6	;
else	116:2	129:2	4
stmts	116:7	129:2	5	
water	116:7	0:0	6	{
switch	117:3	128:3	6	(td -> td_photometric)
cond	117:11	117:15	7	td -> td_photometric
water	117:11	0:0	8	td
op	117:13	0:0	8	->
water	117:15	0:0	8	td_photometric
stmts	117:31	128:3	7	
water	117:31	0:0	8	{
label	118:3	118:24	8	case PHOTOMETRIC_LOGL :
call	119:4	119:31	8	fprintf
arg	119:12	119:14	9	fd
water	119:12	0:0	10	fd
arg	119:16	119:31	9	"CIE Log2(L)\n"
water	119:16	0:0	10	"CIE Log2(L)\n"
water	119:32	0:0	8	;
break	120:4	120:9	8	
label	121:3	121:26	8	case PHOTOMETRIC_LOGLUV :
call	122:4	122:39	8	fprintf
arg	122:12	122:14	9	fd
water	122:12	0:0	10	fd
arg	122:16	122:39	9	"CIE Log2(L) (u',v')\n"
water	122:16	0:0	10	"CIE Log2(L) (u',v')\n"
water	122:40	0:0	8	;
break	123:4	123:9	8	
label	124:3	124:10	8	default :
call	125:4	126:46	8	fprintf
arg	125:12	125:14	9	fd
water	125:12	0:0	10	fd
arg	125:16	125:29	9	"%u (0x%x)\n"
water	125:16	0:0	10	"%u (0x%x)\n"
arg	126:8	126:26	9	td->td_photometric
water	126:8	0:0	10	td
op	126:10	0:0	10	->
water	126:12	0:0	10	td_photometric
arg	126:28	126:46	9	td->td_photometric
water	126:28	0:0	10	td
op	126:30	0:0	10	->
water	126:32	0:0	10	td_photometric
water	126:47	0:0	8	;
break	127:4	127:9	8	
water	128:3	0:0	8	}
water	129:2	0:0	6	}
water	130:1	0:0	4	}
if	131:1	154:1	2	(TIFFFieldSet (tif ,FIELD_EXTRASAMPLES ) && td -> td_extrasamples)
cond	131:5	131:49	3	TIFFFieldSet (tif ,FIELD_EXTRASAMPLES ) && td -> td_extrasamples
call	131:5	131:40	4	TIFFFieldSet
arg	131:18	131:21	5	tif
water	131:18	0:0	6	tif
arg	131:22	131:40	5	FIELD_EXTRASAMPLES
water	131:22	0:0	6	FIELD_EXTRASAMPLES
op	131:42	0:0	4	&&
water	131:45	0:0	4	td
op	131:47	0:0	4	->
water	131:49	0:0	4	td_extrasamples
stmts	131:66	154:1	3	
water	131:66	0:0	4	{
decl	132:2	132:10	4	uint16	i
call	133:2	133:57	4	fprintf
arg	133:10	133:12	5	fd
water	133:10	0:0	6	fd
arg	133:14	133:36	5	"  Extra Samples: %u<"
water	133:14	0:0	6	"  Extra Samples: %u<"
arg	133:38	133:57	5	td->td_extrasamples
water	133:38	0:0	6	td
op	133:40	0:0	6	->
water	133:42	0:0	6	td_extrasamples
water	133:58	0:0	4	;
water	134:2	0:0	4	sep
op	134:6	0:0	4	=
water	134:8	0:0	4	""
water	134:10	0:0	4	;
for	135:2	152:2	4	(i = 0 ;i < td -> td_extrasamples;i ++)
forinit	135:7	135:12	5	i = 0 ;
water	135:7	0:0	6	i
op	135:9	0:0	6	=
water	135:11	0:0	6	0
water	135:12	0:0	6	;
cond	135:14	135:22	5	i < td -> td_extrasamples
water	135:14	0:0	6	i
op	135:16	0:0	6	<
water	135:18	0:0	6	td
op	135:20	0:0	6	->
water	135:22	0:0	6	td_extrasamples
forexpr	135:39	135:40	5	i ++
water	135:39	0:0	6	i
op	135:40	0:0	6	++
stmts	135:44	152:2	5	
water	135:44	0:0	6	{
switch	136:3	150:3	6	(td -> td_sampleinfo [ i ])
cond	136:11	136:30	7	td -> td_sampleinfo [ i ]
water	136:11	0:0	8	td
op	136:13	0:0	8	->
water	136:15	0:0	8	td_sampleinfo
op	136:28	0:0	8	[
water	136:29	0:0	8	i
op	136:30	0:0	8	]
stmts	136:33	150:3	7	
water	136:33	0:0	8	{
label	137:3	137:31	8	case EXTRASAMPLE_UNSPECIFIED :
call	138:4	138:36	8	fprintf
arg	138:12	138:14	9	fd
water	138:12	0:0	10	fd
arg	138:16	138:31	9	"%sunspecified"
water	138:16	0:0	10	"%sunspecified"
arg	138:33	138:36	9	sep
water	138:33	0:0	10	sep
water	138:37	0:0	8	;
break	139:4	139:9	8	
label	140:3	140:30	8	case EXTRASAMPLE_ASSOCALPHA :
call	141:4	141:36	8	fprintf
arg	141:12	141:14	9	fd
water	141:12	0:0	10	fd
arg	141:16	141:31	9	"%sassoc-alpha"
water	141:16	0:0	10	"%sassoc-alpha"
arg	141:33	141:36	9	sep
water	141:33	0:0	10	sep
water	141:37	0:0	8	;
break	142:4	142:9	8	
label	143:3	143:30	8	case EXTRASAMPLE_UNASSALPHA :
call	144:4	144:38	8	fprintf
arg	144:12	144:14	9	fd
water	144:12	0:0	10	fd
arg	144:16	144:33	9	"%sunassoc-alpha"
water	144:16	0:0	10	"%sunassoc-alpha"
arg	144:35	144:38	9	sep
water	144:35	0:0	10	sep
water	144:39	0:0	8	;
break	145:4	145:9	8	
label	146:3	146:10	8	default :
call	147:4	148:50	8	fprintf
arg	147:12	147:14	9	fd
water	147:12	0:0	10	fd
arg	147:16	147:29	9	"%s%u (0x%x)"
water	147:16	0:0	10	"%s%u (0x%x)"
arg	147:31	147:34	9	sep
water	147:31	0:0	10	sep
arg	148:8	148:28	9	td->td_sampleinfo[i]
water	148:8	0:0	10	td
op	148:10	0:0	10	->
water	148:12	0:0	10	td_sampleinfo
op	148:25	0:0	10	[
water	148:26	0:0	10	i
op	148:27	0:0	10	]
arg	148:30	148:50	9	td->td_sampleinfo[i]
water	148:30	0:0	10	td
op	148:32	0:0	10	->
water	148:34	0:0	10	td_sampleinfo
op	148:47	0:0	10	[
water	148:48	0:0	10	i
op	148:49	0:0	10	]
water	148:51	0:0	8	;
break	149:4	149:9	8	
water	150:3	0:0	8	}
water	151:3	0:0	6	sep
op	151:7	0:0	6	=
water	151:9	0:0	6	", "
water	151:13	0:0	6	;
water	152:2	0:0	6	}
call	153:2	153:19	4	fprintf
arg	153:10	153:12	5	fd
water	153:10	0:0	6	fd
arg	153:14	153:19	5	">\n"
water	153:14	0:0	6	">\n"
water	153:20	0:0	4	;
water	154:1	0:0	4	}
if	155:1	171:1	2	(TIFFFieldSet (tif ,FIELD_INKNAMES ))
cond	155:5	155:36	3	TIFFFieldSet (tif ,FIELD_INKNAMES )
call	155:5	155:36	4	TIFFFieldSet
arg	155:18	155:21	5	tif
water	155:18	0:0	6	tif
arg	155:22	155:36	5	FIELD_INKNAMES
water	155:22	0:0	6	FIELD_INKNAMES
stmts	155:39	171:1	3	
water	155:39	0:0	4	{
decl	156:2	156:10	4	char	*cp
decl	157:2	157:10	4	uint16	i
call	158:2	158:29	4	fprintf
arg	158:10	158:12	5	fd
water	158:10	0:0	6	fd
arg	158:14	158:29	5	"  Ink Names: "
water	158:14	0:0	6	"  Ink Names: "
water	158:30	0:0	4	;
water	159:2	0:0	4	i
op	159:4	0:0	4	=
water	159:6	0:0	4	td
op	159:8	0:0	4	->
water	159:10	0:0	4	td_samplesperpixel
water	159:28	0:0	4	;
water	160:2	0:0	4	sep
op	160:6	0:0	4	=
water	160:8	0:0	4	""
water	160:10	0:0	4	;
for	161:2	169:2	4	(cp = td -> td_inknames ;i > 0 && cp < td -> td_inknames + td -> td_inknameslen;cp =strchr (cp ,'\0' ) + 1 , i --)
forinit	161:7	161:27	5	cp = td -> td_inknames ;
water	161:7	0:0	6	cp
op	161:10	0:0	6	=
water	161:12	0:0	6	td
op	161:14	0:0	6	->
water	161:16	0:0	6	td_inknames
water	161:27	0:0	6	;
cond	162:7	162:43	5	i > 0 && cp < td -> td_inknames + td -> td_inknameslen
water	162:7	0:0	6	i
op	162:9	0:0	6	>
water	162:11	0:0	6	0
op	162:13	0:0	6	&&
water	162:16	0:0	6	cp
op	162:19	0:0	6	<
water	162:21	0:0	6	td
op	162:23	0:0	6	->
water	162:25	0:0	6	td_inknames
op	162:37	0:0	6	+
water	162:39	0:0	6	td
op	162:41	0:0	6	->
water	162:43	0:0	6	td_inknameslen
forexpr	163:7	163:32	5	cp =strchr (cp ,'\0' ) + 1 , i --
water	163:7	0:0	6	cp
op	163:10	0:0	6	=
call	163:12	163:26	6	strchr
arg	163:19	163:21	7	cp
water	163:19	0:0	8	cp
arg	163:22	163:26	7	'\0'
water	163:22	0:0	8	'\0'
op	163:27	0:0	6	+
water	163:28	0:0	6	1
water	163:29	0:0	6	,
water	163:31	0:0	6	i
op	163:32	0:0	6	--
stmts	163:36	169:2	5	
water	163:36	0:0	6	{
decl	164:3	165:47	6	size_t	max_chars
op	164:20	0:0	6	=
water	165:4	0:0	6	td
op	165:6	0:0	6	->
water	165:8	0:0	6	td_inknameslen
op	165:23	0:0	6	-
water	165:25	0:0	6	(
water	165:26	0:0	6	cp
op	165:29	0:0	6	-
water	165:31	0:0	6	td
op	165:33	0:0	6	->
water	165:35	0:0	6	td_inknames
water	165:46	0:0	6	)
call	166:3	166:16	6	fputs
arg	166:9	166:12	7	sep
water	166:9	0:0	8	sep
arg	166:14	166:16	7	fd
water	166:14	0:0	8	fd
water	166:17	0:0	6	;
call	167:3	167:43	6	_TIFFprintAsciiBounded
arg	167:26	167:28	7	fd
water	167:26	0:0	8	fd
arg	167:30	167:32	7	cp
water	167:30	0:0	8	cp
arg	167:34	167:43	7	max_chars
water	167:34	0:0	8	max_chars
water	167:44	0:0	6	;
water	168:3	0:0	6	sep
op	168:7	0:0	6	=
water	168:9	0:0	6	", "
water	168:13	0:0	6	;
water	169:2	0:0	6	}
call	170:16	170:30	4	fputs
arg	170:22	170:26	5	"\n"
water	170:22	0:0	6	"\n"
arg	170:28	170:30	5	fd
water	170:28	0:0	6	fd
water	170:31	0:0	4	;
water	171:1	0:0	4	}
if	172:1	189:1	2	(TIFFFieldSet (tif ,FIELD_THRESHHOLDING ))
cond	172:5	172:41	3	TIFFFieldSet (tif ,FIELD_THRESHHOLDING )
call	172:5	172:41	4	TIFFFieldSet
arg	172:18	172:21	5	tif
water	172:18	0:0	6	tif
arg	172:22	172:41	5	FIELD_THRESHHOLDING
water	172:22	0:0	6	FIELD_THRESHHOLDING
stmts	172:44	189:1	3	
water	172:44	0:0	4	{
call	173:2	173:32	4	fprintf
arg	173:10	173:12	5	fd
water	173:10	0:0	6	fd
arg	173:14	173:32	5	"  Thresholding: "
water	173:14	0:0	6	"  Thresholding: "
water	173:33	0:0	4	;
switch	174:2	188:2	4	(td -> td_threshholding)
cond	174:10	174:14	5	td -> td_threshholding
water	174:10	0:0	6	td
op	174:12	0:0	6	->
water	174:14	0:0	6	td_threshholding
stmts	174:32	188:2	5	
water	174:32	0:0	6	{
label	175:2	175:25	6	case THRESHHOLD_BILEVEL :
call	176:3	176:35	6	fprintf
arg	176:11	176:13	7	fd
water	176:11	0:0	8	fd
arg	176:15	176:35	7	"bilevel art scan\n"
water	176:15	0:0	8	"bilevel art scan\n"
water	176:36	0:0	6	;
break	177:3	177:8	6	
label	178:2	178:26	6	case THRESHHOLD_HALFTONE :
call	179:3	179:44	6	fprintf
arg	179:11	179:13	7	fd
water	179:11	0:0	8	fd
arg	179:15	179:44	7	"halftone or dithered scan\n"
water	179:15	0:0	8	"halftone or dithered scan\n"
water	179:45	0:0	6	;
break	180:3	180:8	6	
label	181:2	181:30	6	case THRESHHOLD_ERRORDIFFUSE :
call	182:3	182:33	6	fprintf
arg	182:11	182:13	7	fd
water	182:11	0:0	8	fd
arg	182:15	182:33	7	"error diffused\n"
water	182:15	0:0	8	"error diffused\n"
water	182:34	0:0	6	;
break	183:3	183:8	6	
label	184:2	184:9	6	default :
call	185:3	186:49	6	fprintf
arg	185:11	185:13	7	fd
water	185:11	0:0	8	fd
arg	185:15	185:28	7	"%u (0x%x)\n"
water	185:15	0:0	8	"%u (0x%x)\n"
arg	186:7	186:27	7	td->td_threshholding
water	186:7	0:0	8	td
op	186:9	0:0	8	->
water	186:11	0:0	8	td_threshholding
arg	186:29	186:49	7	td->td_threshholding
water	186:29	0:0	8	td
op	186:31	0:0	8	->
water	186:33	0:0	8	td_threshholding
water	186:50	0:0	6	;
break	187:3	187:8	6	
water	188:2	0:0	6	}
water	189:1	0:0	4	}
if	190:1	204:1	2	(TIFFFieldSet (tif ,FIELD_FILLORDER ))
cond	190:5	190:37	3	TIFFFieldSet (tif ,FIELD_FILLORDER )
call	190:5	190:37	4	TIFFFieldSet
arg	190:18	190:21	5	tif
water	190:18	0:0	6	tif
arg	190:22	190:37	5	FIELD_FILLORDER
water	190:22	0:0	6	FIELD_FILLORDER
stmts	190:40	204:1	3	
water	190:40	0:0	4	{
call	191:2	191:29	4	fprintf
arg	191:10	191:12	5	fd
water	191:10	0:0	6	fd
arg	191:14	191:29	5	"  FillOrder: "
water	191:14	0:0	6	"  FillOrder: "
water	191:30	0:0	4	;
switch	192:2	203:2	4	(td -> td_fillorder)
cond	192:10	192:14	5	td -> td_fillorder
water	192:10	0:0	6	td
op	192:12	0:0	6	->
water	192:14	0:0	6	td_fillorder
stmts	192:28	203:2	5	
water	192:28	0:0	6	{
label	193:2	193:24	6	case FILLORDER_MSB2LSB :
call	194:3	194:29	6	fprintf
arg	194:11	194:13	7	fd
water	194:11	0:0	8	fd
arg	194:15	194:29	7	"msb-to-lsb\n"
water	194:15	0:0	8	"msb-to-lsb\n"
water	194:30	0:0	6	;
break	195:3	195:8	6	
label	196:2	196:24	6	case FILLORDER_LSB2MSB :
call	197:3	197:29	6	fprintf
arg	197:11	197:13	7	fd
water	197:11	0:0	8	fd
arg	197:15	197:29	7	"lsb-to-msb\n"
water	197:15	0:0	8	"lsb-to-msb\n"
water	197:30	0:0	6	;
break	198:3	198:8	6	
label	199:2	199:9	6	default :
call	200:3	201:41	6	fprintf
arg	200:11	200:13	7	fd
water	200:11	0:0	8	fd
arg	200:15	200:28	7	"%u (0x%x)\n"
water	200:15	0:0	8	"%u (0x%x)\n"
arg	201:7	201:23	7	td->td_fillorder
water	201:7	0:0	8	td
op	201:9	0:0	8	->
water	201:11	0:0	8	td_fillorder
arg	201:25	201:41	7	td->td_fillorder
water	201:25	0:0	8	td
op	201:27	0:0	8	->
water	201:29	0:0	8	td_fillorder
water	201:42	0:0	6	;
break	202:3	202:8	6	
water	203:2	0:0	6	}
water	204:1	0:0	4	}
if	205:1	209:1	2	(TIFFFieldSet (tif ,FIELD_YCBCRSUBSAMPLING ))
cond	205:5	205:44	3	TIFFFieldSet (tif ,FIELD_YCBCRSUBSAMPLING )
call	205:5	205:44	4	TIFFFieldSet
arg	205:18	205:21	5	tif
water	205:18	0:0	6	tif
arg	205:22	205:44	5	FIELD_YCBCRSUBSAMPLING
water	205:22	0:0	6	FIELD_YCBCRSUBSAMPLING
stmts	206:8	209:1	3	
water	206:8	0:0	4	{
call	207:2	208:58	4	fprintf
arg	207:10	207:12	5	fd
water	207:10	0:0	6	fd
arg	207:14	207:45	5	"  YCbCr Subsampling: %u, %u\n"
water	207:14	0:0	6	"  YCbCr Subsampling: %u, %u\n"
arg	208:3	208:29	5	td->td_ycbcrsubsampling[0]
water	208:3	0:0	6	td
op	208:5	0:0	6	->
water	208:7	0:0	6	td_ycbcrsubsampling
op	208:26	0:0	6	[
water	208:27	0:0	6	0
op	208:28	0:0	6	]
arg	208:31	208:58	5	td->td_ycbcrsubsampling[1]
water	208:31	0:0	6	td
op	208:33	0:0	6	->
water	208:35	0:0	6	td_ycbcrsubsampling
op	208:54	0:0	6	[
water	208:55	0:0	6	1
op	208:56	0:0	6	]
water	208:59	0:0	4	;
water	209:1	0:0	4	}
if	210:1	224:1	2	(TIFFFieldSet (tif ,FIELD_YCBCRPOSITIONING ))
cond	210:5	210:44	3	TIFFFieldSet (tif ,FIELD_YCBCRPOSITIONING )
call	210:5	210:44	4	TIFFFieldSet
arg	210:18	210:21	5	tif
water	210:18	0:0	6	tif
arg	210:22	210:44	5	FIELD_YCBCRPOSITIONING
water	210:22	0:0	6	FIELD_YCBCRPOSITIONING
stmts	210:47	224:1	3	
water	210:47	0:0	4	{
call	211:2	211:37	4	fprintf
arg	211:10	211:12	5	fd
water	211:10	0:0	6	fd
arg	211:14	211:37	5	"  YCbCr Positioning: "
water	211:14	0:0	6	"  YCbCr Positioning: "
water	211:38	0:0	4	;
switch	212:2	223:2	4	(td -> td_ycbcrpositioning)
cond	212:10	212:14	5	td -> td_ycbcrpositioning
water	212:10	0:0	6	td
op	212:12	0:0	6	->
water	212:14	0:0	6	td_ycbcrpositioning
stmts	212:35	223:2	5	
water	212:35	0:0	6	{
label	213:2	213:29	6	case YCBCRPOSITION_CENTERED :
call	214:3	214:27	6	fprintf
arg	214:11	214:13	7	fd
water	214:11	0:0	8	fd
arg	214:15	214:27	7	"centered\n"
water	214:15	0:0	8	"centered\n"
water	214:28	0:0	6	;
break	215:3	215:8	6	
label	216:2	216:28	6	case YCBCRPOSITION_COSITED :
call	217:3	217:26	6	fprintf
arg	217:11	217:13	7	fd
water	217:11	0:0	8	fd
arg	217:15	217:26	7	"cosited\n"
water	217:15	0:0	8	"cosited\n"
water	217:27	0:0	6	;
break	218:3	218:8	6	
label	219:2	219:9	6	default :
call	220:3	221:55	6	fprintf
arg	220:11	220:13	7	fd
water	220:11	0:0	8	fd
arg	220:15	220:28	7	"%u (0x%x)\n"
water	220:15	0:0	8	"%u (0x%x)\n"
arg	221:7	221:30	7	td->td_ycbcrpositioning
water	221:7	0:0	8	td
op	221:9	0:0	8	->
water	221:11	0:0	8	td_ycbcrpositioning
arg	221:32	221:55	7	td->td_ycbcrpositioning
water	221:32	0:0	8	td
op	221:34	0:0	8	->
water	221:36	0:0	8	td_ycbcrpositioning
water	221:56	0:0	6	;
break	222:3	222:8	6	
water	223:2	0:0	6	}
water	224:1	0:0	4	}
if	225:1	227:55	2	(TIFFFieldSet (tif ,FIELD_HALFTONEHINTS ))
cond	225:5	225:41	3	TIFFFieldSet (tif ,FIELD_HALFTONEHINTS )
call	225:5	225:41	4	TIFFFieldSet
arg	225:18	225:21	5	tif
water	225:18	0:0	6	tif
arg	225:22	225:41	5	FIELD_HALFTONEHINTS
water	225:22	0:0	6	FIELD_HALFTONEHINTS
stmts	226:2	227:55	3	
call	226:2	227:54	4	fprintf
arg	226:10	226:12	5	fd
water	226:10	0:0	6	fd
arg	226:14	226:52	5	"  Halftone Hints: light %u dark %u\n"
water	226:14	0:0	6	"  Halftone Hints: light %u dark %u\n"
arg	227:6	227:29	5	td->td_halftonehints[0]
water	227:6	0:0	6	td
op	227:8	0:0	6	->
water	227:10	0:0	6	td_halftonehints
op	227:26	0:0	6	[
water	227:27	0:0	6	0
op	227:28	0:0	6	]
arg	227:31	227:54	5	td->td_halftonehints[1]
water	227:31	0:0	6	td
op	227:33	0:0	6	->
water	227:35	0:0	6	td_halftonehints
op	227:51	0:0	6	[
water	227:52	0:0	6	1
op	227:53	0:0	6	]
water	227:55	0:0	4	;
if	228:1	235:1	2	(TIFFFieldSet (tif ,FIELD_ORIENTATION ))
cond	228:5	228:39	3	TIFFFieldSet (tif ,FIELD_ORIENTATION )
call	228:5	228:39	4	TIFFFieldSet
arg	228:18	228:21	5	tif
water	228:18	0:0	6	tif
arg	228:22	228:39	5	FIELD_ORIENTATION
water	228:22	0:0	6	FIELD_ORIENTATION
stmts	228:42	235:1	3	
water	228:42	0:0	4	{
call	229:2	229:31	4	fprintf
arg	229:10	229:12	5	fd
water	229:10	0:0	6	fd
arg	229:14	229:31	5	"  Orientation: "
water	229:14	0:0	6	"  Orientation: "
water	229:32	0:0	4	;
if	230:2	231:55	4	(td -> td_orientation < NORIENTNAMES)
cond	230:6	230:27	5	td -> td_orientation < NORIENTNAMES
water	230:6	0:0	6	td
op	230:8	0:0	6	->
water	230:10	0:0	6	td_orientation
op	230:25	0:0	6	<
water	230:27	0:0	6	NORIENTNAMES
stmts	231:3	231:55	5	
call	231:3	231:54	6	fprintf
arg	231:11	231:13	7	fd
water	231:11	0:0	8	fd
arg	231:15	231:21	7	"%s\n"
water	231:15	0:0	8	"%s\n"
arg	231:23	231:54	7	orientNames[td->td_orientation]
water	231:23	0:0	8	orientNames
op	231:34	0:0	8	[
water	231:35	0:0	8	td
op	231:37	0:0	8	->
water	231:39	0:0	8	td_orientation
op	231:53	0:0	8	]
water	231:55	0:0	6	;
else	232:2	234:46	4
stmts	233:3	234:46	5	
call	233:3	234:45	6	fprintf
arg	233:11	233:13	7	fd
water	233:11	0:0	8	fd
arg	233:15	233:28	7	"%u (0x%x)\n"
water	233:15	0:0	8	"%u (0x%x)\n"
arg	234:7	234:25	7	td->td_orientation
water	234:7	0:0	8	td
op	234:9	0:0	8	->
water	234:11	0:0	8	td_orientation
arg	234:27	234:45	7	td->td_orientation
water	234:27	0:0	8	td
op	234:29	0:0	8	->
water	234:31	0:0	8	td_orientation
water	234:46	0:0	6	;
water	235:1	0:0	4	}
if	236:1	237:62	2	(TIFFFieldSet (tif ,FIELD_SAMPLESPERPIXEL ))
cond	236:5	236:43	3	TIFFFieldSet (tif ,FIELD_SAMPLESPERPIXEL )
call	236:5	236:43	4	TIFFFieldSet
arg	236:18	236:21	5	tif
water	236:18	0:0	6	tif
arg	236:22	236:43	5	FIELD_SAMPLESPERPIXEL
water	236:22	0:0	6	FIELD_SAMPLESPERPIXEL
stmts	237:2	237:62	3	
call	237:2	237:61	4	fprintf
arg	237:10	237:12	5	fd
water	237:10	0:0	6	fd
arg	237:14	237:37	5	"  Samples/Pixel: %u\n"
water	237:14	0:0	6	"  Samples/Pixel: %u\n"
arg	237:39	237:61	5	td->td_samplesperpixel
water	237:39	0:0	6	td
op	237:41	0:0	6	->
water	237:43	0:0	6	td_samplesperpixel
water	237:62	0:0	4	;
if	238:1	244:1	2	(TIFFFieldSet (tif ,FIELD_ROWSPERSTRIP ))
cond	238:5	238:40	3	TIFFFieldSet (tif ,FIELD_ROWSPERSTRIP )
call	238:5	238:40	4	TIFFFieldSet
arg	238:18	238:21	5	tif
water	238:18	0:0	6	tif
arg	238:22	238:40	5	FIELD_ROWSPERSTRIP
water	238:22	0:0	6	FIELD_ROWSPERSTRIP
stmts	238:43	244:1	3	
water	238:43	0:0	4	{
call	239:2	239:30	4	fprintf
arg	239:10	239:12	5	fd
water	239:10	0:0	6	fd
arg	239:14	239:30	5	"  Rows/Strip: "
water	239:14	0:0	6	"  Rows/Strip: "
water	239:31	0:0	4	;
if	240:2	241:30	4	(td -> td_rowsperstrip == ( uint32 ) - 1)
cond	240:6	240:39	5	td -> td_rowsperstrip == ( uint32 ) - 1
water	240:6	0:0	6	td
op	240:8	0:0	6	->
water	240:10	0:0	6	td_rowsperstrip
op	240:26	0:0	6	==
water	240:29	0:0	6	(
water	240:30	0:0	6	uint32
water	240:36	0:0	6	)
op	240:38	0:0	6	-
water	240:39	0:0	6	1
stmts	241:3	241:30	5	
call	241:3	241:29	6	fprintf
arg	241:11	241:13	7	fd
water	241:11	0:0	8	fd
arg	241:15	241:29	7	"(infinite)\n"
water	241:15	0:0	8	"(infinite)\n"
water	241:30	0:0	6	;
else	242:2	243:60	4
stmts	243:3	243:60	5	
call	243:3	243:59	6	fprintf
arg	243:11	243:13	7	fd
water	243:11	0:0	8	fd
arg	243:15	243:22	7	"%lu\n"
water	243:15	0:0	8	"%lu\n"
arg	243:24	243:59	7	(unsignedlong)td->td_rowsperstrip
water	243:24	0:0	8	(
water	243:25	0:0	8	unsigned
water	243:34	0:0	8	long
water	243:38	0:0	8	)
water	243:40	0:0	8	td
op	243:42	0:0	8	->
water	243:44	0:0	8	td_rowsperstrip
water	243:60	0:0	6	;
water	244:1	0:0	4	}
if	245:1	246:64	2	(TIFFFieldSet (tif ,FIELD_MINSAMPLEVALUE ))
cond	245:5	245:42	3	TIFFFieldSet (tif ,FIELD_MINSAMPLEVALUE )
call	245:5	245:42	4	TIFFFieldSet
arg	245:18	245:21	5	tif
water	245:18	0:0	6	tif
arg	245:22	245:42	5	FIELD_MINSAMPLEVALUE
water	245:22	0:0	6	FIELD_MINSAMPLEVALUE
stmts	246:2	246:64	3	
call	246:2	246:63	4	fprintf
arg	246:10	246:12	5	fd
water	246:10	0:0	6	fd
arg	246:14	246:40	5	"  Min Sample Value: %u\n"
water	246:14	0:0	6	"  Min Sample Value: %u\n"
arg	246:42	246:63	5	td->td_minsamplevalue
water	246:42	0:0	6	td
op	246:44	0:0	6	->
water	246:46	0:0	6	td_minsamplevalue
water	246:64	0:0	4	;
if	247:1	248:64	2	(TIFFFieldSet (tif ,FIELD_MAXSAMPLEVALUE ))
cond	247:5	247:42	3	TIFFFieldSet (tif ,FIELD_MAXSAMPLEVALUE )
call	247:5	247:42	4	TIFFFieldSet
arg	247:18	247:21	5	tif
water	247:18	0:0	6	tif
arg	247:22	247:42	5	FIELD_MAXSAMPLEVALUE
water	247:22	0:0	6	FIELD_MAXSAMPLEVALUE
stmts	248:2	248:64	3	
call	248:2	248:63	4	fprintf
arg	248:10	248:12	5	fd
water	248:10	0:0	6	fd
arg	248:14	248:40	5	"  Max Sample Value: %u\n"
water	248:14	0:0	6	"  Max Sample Value: %u\n"
arg	248:42	248:63	5	td->td_maxsamplevalue
water	248:42	0:0	6	td
op	248:44	0:0	6	->
water	248:46	0:0	6	td_maxsamplevalue
water	248:64	0:0	4	;
if	249:1	256:1	2	(TIFFFieldSet (tif ,FIELD_SMINSAMPLEVALUE ))
cond	249:5	249:43	3	TIFFFieldSet (tif ,FIELD_SMINSAMPLEVALUE )
call	249:5	249:43	4	TIFFFieldSet
arg	249:18	249:21	5	tif
water	249:18	0:0	6	tif
arg	249:22	249:43	5	FIELD_SMINSAMPLEVALUE
water	249:22	0:0	6	FIELD_SMINSAMPLEVALUE
stmts	249:46	256:1	3	
water	249:46	0:0	4	{
decl	250:2	250:7	4	int	i
decl	251:2	251:76	4	int	count
op	251:12	0:0	4	=
water	251:14	0:0	4	(
water	251:15	0:0	4	tif
op	251:18	0:0	4	->
water	251:20	0:0	4	tif_flags
op	251:30	0:0	4	&
water	251:32	0:0	4	TIFF_PERSAMPLE
water	251:46	0:0	4	)
water	251:48	0:0	4	?
water	251:50	0:0	4	td
op	251:52	0:0	4	->
water	251:54	0:0	4	td_samplesperpixel
water	251:73	0:0	4	:
water	251:75	0:0	4	1
call	252:2	252:36	4	fprintf
arg	252:10	252:12	5	fd
water	252:10	0:0	6	fd
arg	252:14	252:36	5	"  SMin Sample Value:"
water	252:14	0:0	6	"  SMin Sample Value:"
water	252:37	0:0	4	;
for	253:2	254:48	4	(i = 0 ;i < count;++ i)
forinit	253:7	253:12	5	i = 0 ;
water	253:7	0:0	6	i
op	253:9	0:0	6	=
water	253:11	0:0	6	0
water	253:12	0:0	6	;
cond	253:14	253:18	5	i < count
water	253:14	0:0	6	i
op	253:16	0:0	6	<
water	253:18	0:0	6	count
forexpr	253:25	253:27	5	++ i
op	253:25	0:0	6	++
water	253:27	0:0	6	i
stmts	254:3	254:48	5	
call	254:3	254:47	6	fprintf
arg	254:11	254:13	7	fd
water	254:11	0:0	8	fd
arg	254:15	254:20	7	" %g"
water	254:15	0:0	8	" %g"
arg	254:22	254:47	7	td->td_sminsamplevalue[i]
water	254:22	0:0	8	td
op	254:24	0:0	8	->
water	254:26	0:0	8	td_sminsamplevalue
op	254:44	0:0	8	[
water	254:45	0:0	8	i
op	254:46	0:0	8	]
water	254:48	0:0	6	;
call	255:2	255:18	4	fprintf
arg	255:10	255:12	5	fd
water	255:10	0:0	6	fd
arg	255:14	255:18	5	"\n"
water	255:14	0:0	6	"\n"
water	255:19	0:0	4	;
water	256:1	0:0	4	}
if	257:1	264:1	2	(TIFFFieldSet (tif ,FIELD_SMAXSAMPLEVALUE ))
cond	257:5	257:43	3	TIFFFieldSet (tif ,FIELD_SMAXSAMPLEVALUE )
call	257:5	257:43	4	TIFFFieldSet
arg	257:18	257:21	5	tif
water	257:18	0:0	6	tif
arg	257:22	257:43	5	FIELD_SMAXSAMPLEVALUE
water	257:22	0:0	6	FIELD_SMAXSAMPLEVALUE
stmts	257:46	264:1	3	
water	257:46	0:0	4	{
decl	258:2	258:7	4	int	i
decl	259:2	259:76	4	int	count
op	259:12	0:0	4	=
water	259:14	0:0	4	(
water	259:15	0:0	4	tif
op	259:18	0:0	4	->
water	259:20	0:0	4	tif_flags
op	259:30	0:0	4	&
water	259:32	0:0	4	TIFF_PERSAMPLE
water	259:46	0:0	4	)
water	259:48	0:0	4	?
water	259:50	0:0	4	td
op	259:52	0:0	4	->
water	259:54	0:0	4	td_samplesperpixel
water	259:73	0:0	4	:
water	259:75	0:0	4	1
call	260:2	260:36	4	fprintf
arg	260:10	260:12	5	fd
water	260:10	0:0	6	fd
arg	260:14	260:36	5	"  SMax Sample Value:"
water	260:14	0:0	6	"  SMax Sample Value:"
water	260:37	0:0	4	;
for	261:2	262:48	4	(i = 0 ;i < count;++ i)
forinit	261:7	261:12	5	i = 0 ;
water	261:7	0:0	6	i
op	261:9	0:0	6	=
water	261:11	0:0	6	0
water	261:12	0:0	6	;
cond	261:14	261:18	5	i < count
water	261:14	0:0	6	i
op	261:16	0:0	6	<
water	261:18	0:0	6	count
forexpr	261:25	261:27	5	++ i
op	261:25	0:0	6	++
water	261:27	0:0	6	i
stmts	262:3	262:48	5	
call	262:3	262:47	6	fprintf
arg	262:11	262:13	7	fd
water	262:11	0:0	8	fd
arg	262:15	262:20	7	" %g"
water	262:15	0:0	8	" %g"
arg	262:22	262:47	7	td->td_smaxsamplevalue[i]
water	262:22	0:0	8	td
op	262:24	0:0	8	->
water	262:26	0:0	8	td_smaxsamplevalue
op	262:44	0:0	8	[
water	262:45	0:0	8	i
op	262:46	0:0	8	]
water	262:48	0:0	6	;
call	263:2	263:18	4	fprintf
arg	263:10	263:12	5	fd
water	263:10	0:0	6	fd
arg	263:14	263:18	5	"\n"
water	263:14	0:0	6	"\n"
water	263:19	0:0	4	;
water	264:1	0:0	4	}
if	265:1	279:1	2	(TIFFFieldSet (tif ,FIELD_PLANARCONFIG ))
cond	265:5	265:40	3	TIFFFieldSet (tif ,FIELD_PLANARCONFIG )
call	265:5	265:40	4	TIFFFieldSet
arg	265:18	265:21	5	tif
water	265:18	0:0	6	tif
arg	265:22	265:40	5	FIELD_PLANARCONFIG
water	265:22	0:0	6	FIELD_PLANARCONFIG
stmts	265:43	279:1	3	
water	265:43	0:0	4	{
call	266:2	266:40	4	fprintf
arg	266:10	266:12	5	fd
water	266:10	0:0	6	fd
arg	266:14	266:40	5	"  Planar Configuration: "
water	266:14	0:0	6	"  Planar Configuration: "
water	266:41	0:0	4	;
switch	267:2	278:2	4	(td -> td_planarconfig)
cond	267:10	267:14	5	td -> td_planarconfig
water	267:10	0:0	6	td
op	267:12	0:0	6	->
water	267:14	0:0	6	td_planarconfig
stmts	267:31	278:2	5	
water	267:31	0:0	6	{
label	268:2	268:26	6	case PLANARCONFIG_CONTIG :
call	269:3	269:37	6	fprintf
arg	269:11	269:13	7	fd
water	269:11	0:0	8	fd
arg	269:15	269:37	7	"single image plane\n"
water	269:15	0:0	8	"single image plane\n"
water	269:38	0:0	6	;
break	270:3	270:8	6	
label	271:2	271:28	6	case PLANARCONFIG_SEPARATE :
call	272:3	272:40	6	fprintf
arg	272:11	272:13	7	fd
water	272:11	0:0	8	fd
arg	272:15	272:40	7	"separate image planes\n"
water	272:15	0:0	8	"separate image planes\n"
water	272:41	0:0	6	;
break	273:3	273:8	6	
label	274:2	274:9	6	default :
call	275:3	276:47	6	fprintf
arg	275:11	275:13	7	fd
water	275:11	0:0	8	fd
arg	275:15	275:28	7	"%u (0x%x)\n"
water	275:15	0:0	8	"%u (0x%x)\n"
arg	276:7	276:26	7	td->td_planarconfig
water	276:7	0:0	8	td
op	276:9	0:0	8	->
water	276:11	0:0	8	td_planarconfig
arg	276:28	276:47	7	td->td_planarconfig
water	276:28	0:0	8	td
op	276:30	0:0	8	->
water	276:32	0:0	8	td_planarconfig
water	276:48	0:0	6	;
break	277:3	277:8	6	
water	278:2	0:0	6	}
water	279:1	0:0	4	}
if	280:1	282:49	2	(TIFFFieldSet (tif ,FIELD_PAGENUMBER ))
cond	280:5	280:38	3	TIFFFieldSet (tif ,FIELD_PAGENUMBER )
call	280:5	280:38	4	TIFFFieldSet
arg	280:18	280:21	5	tif
water	280:18	0:0	6	tif
arg	280:22	280:38	5	FIELD_PAGENUMBER
water	280:22	0:0	6	FIELD_PAGENUMBER
stmts	281:2	282:49	3	
call	281:2	282:48	4	fprintf
arg	281:10	281:12	5	fd
water	281:10	0:0	6	fd
arg	281:14	281:38	5	"  Page Number: %u-%u\n"
water	281:14	0:0	6	"  Page Number: %u-%u\n"
arg	282:6	282:26	5	td->td_pagenumber[0]
water	282:6	0:0	6	td
op	282:8	0:0	6	->
water	282:10	0:0	6	td_pagenumber
op	282:23	0:0	6	[
water	282:24	0:0	6	0
op	282:25	0:0	6	]
arg	282:28	282:48	5	td->td_pagenumber[1]
water	282:28	0:0	6	td
op	282:30	0:0	6	->
water	282:32	0:0	6	td_pagenumber
op	282:45	0:0	6	[
water	282:46	0:0	6	1
op	282:47	0:0	6	]
water	282:49	0:0	4	;
if	283:1	296:1	2	(TIFFFieldSet (tif ,FIELD_COLORMAP ))
cond	283:5	283:36	3	TIFFFieldSet (tif ,FIELD_COLORMAP )
call	283:5	283:36	4	TIFFFieldSet
arg	283:18	283:21	5	tif
water	283:18	0:0	6	tif
arg	283:22	283:36	5	FIELD_COLORMAP
water	283:22	0:0	6	FIELD_COLORMAP
stmts	283:39	296:1	3	
water	283:39	0:0	4	{
call	284:2	284:29	4	fprintf
arg	284:10	284:12	5	fd
water	284:10	0:0	6	fd
arg	284:14	284:29	5	"  Color Map: "
water	284:14	0:0	6	"  Color Map: "
water	284:30	0:0	4	;
if	285:2	294:2	4	(flags & TIFFPRINT_COLORMAP)
cond	285:6	285:14	5	flags & TIFFPRINT_COLORMAP
water	285:6	0:0	6	flags
op	285:12	0:0	6	&
water	285:14	0:0	6	TIFFPRINT_COLORMAP
stmts	285:34	294:2	5	
water	285:34	0:0	6	{
call	286:3	286:19	6	fprintf
arg	286:11	286:13	7	fd
water	286:11	0:0	8	fd
arg	286:15	286:19	7	"\n"
water	286:15	0:0	8	"\n"
water	286:20	0:0	6	;
water	287:3	0:0	6	n
op	287:5	0:0	6	=
water	287:7	0:0	6	1
water	287:8	0:0	6	L
op	287:9	0:0	6	<<
water	287:11	0:0	6	td
op	287:13	0:0	6	->
water	287:15	0:0	6	td_bitspersample
water	287:31	0:0	6	;
for	288:3	293:30	6	(l = 0 ;l < n;l ++)
forinit	288:8	288:13	7	l = 0 ;
water	288:8	0:0	8	l
op	288:10	0:0	8	=
water	288:12	0:0	8	0
water	288:13	0:0	8	;
cond	288:15	288:19	7	l < n
water	288:15	0:0	8	l
op	288:17	0:0	8	<
water	288:19	0:0	8	n
forexpr	288:22	288:23	7	l ++
water	288:22	0:0	8	l
op	288:23	0:0	8	++
stmts	289:4	293:30	7	
call	289:4	293:29	8	fprintf
arg	289:12	289:14	9	fd
water	289:12	0:0	10	fd
arg	289:16	289:40	9	"   %5ld: %5u %5u %5u\n"
water	289:16	0:0	10	"   %5ld: %5u %5u %5u\n"
arg	290:8	290:9	9	l
water	290:8	0:0	10	l
arg	291:8	291:29	9	td->td_colormap[0][l]
water	291:8	0:0	10	td
op	291:10	0:0	10	->
water	291:12	0:0	10	td_colormap
op	291:23	0:0	10	[
water	291:24	0:0	10	0
op	291:25	0:0	10	]
op	291:26	0:0	10	[
water	291:27	0:0	10	l
op	291:28	0:0	10	]
arg	292:8	292:29	9	td->td_colormap[1][l]
water	292:8	0:0	10	td
op	292:10	0:0	10	->
water	292:12	0:0	10	td_colormap
op	292:23	0:0	10	[
water	292:24	0:0	10	1
op	292:25	0:0	10	]
op	292:26	0:0	10	[
water	292:27	0:0	10	l
op	292:28	0:0	10	]
arg	293:8	293:29	9	td->td_colormap[2][l]
water	293:8	0:0	10	td
op	293:10	0:0	10	->
water	293:12	0:0	10	td_colormap
op	293:23	0:0	10	[
water	293:24	0:0	10	2
op	293:25	0:0	10	]
op	293:26	0:0	10	[
water	293:27	0:0	10	l
op	293:28	0:0	10	]
water	293:30	0:0	8	;
water	294:2	0:0	6	}
else	294:4	295:29	4
stmts	295:3	295:29	5	
call	295:3	295:28	6	fprintf
arg	295:11	295:13	7	fd
water	295:11	0:0	8	fd
arg	295:15	295:28	7	"(present)\n"
water	295:15	0:0	8	"(present)\n"
water	295:29	0:0	6	;
water	296:1	0:0	4	}
if	297:1	304:1	2	(TIFFFieldSet (tif ,FIELD_REFBLACKWHITE ))
cond	297:5	297:41	3	TIFFFieldSet (tif ,FIELD_REFBLACKWHITE )
call	297:5	297:41	4	TIFFFieldSet
arg	297:18	297:21	5	tif
water	297:18	0:0	6	tif
arg	297:22	297:41	5	FIELD_REFBLACKWHITE
water	297:22	0:0	6	FIELD_REFBLACKWHITE
stmts	297:44	304:1	3	
water	297:44	0:0	4	{
decl	298:2	298:7	4	int	i
call	299:2	299:42	4	fprintf
arg	299:10	299:12	5	fd
water	299:10	0:0	6	fd
arg	299:14	299:42	5	"  Reference Black/White:\n"
water	299:14	0:0	6	"  Reference Black/White:\n"
water	299:43	0:0	4	;
for	300:2	303:31	4	(i = 0 ;i < 3;i ++)
forinit	300:7	300:12	5	i = 0 ;
water	300:7	0:0	6	i
op	300:9	0:0	6	=
water	300:11	0:0	6	0
water	300:12	0:0	6	;
cond	300:14	300:18	5	i < 3
water	300:14	0:0	6	i
op	300:16	0:0	6	<
water	300:18	0:0	6	3
forexpr	300:21	300:22	5	i ++
water	300:21	0:0	6	i
op	300:22	0:0	6	++
stmts	301:2	303:31	5	
call	301:2	303:30	6	fprintf
arg	301:10	301:12	7	fd
water	301:10	0:0	8	fd
arg	301:14	301:34	7	"    %2d: %5g %5g\n"
water	301:14	0:0	8	"    %2d: %5g %5g\n"
arg	301:36	301:37	7	i
water	301:36	0:0	8	i
arg	302:3	302:30	7	td->td_refblackwhite[2*i+0]
water	302:3	0:0	8	td
op	302:5	0:0	8	->
water	302:7	0:0	8	td_refblackwhite
op	302:23	0:0	8	[
water	302:24	0:0	8	2
op	302:25	0:0	8	*
water	302:26	0:0	8	i
op	302:27	0:0	8	+
water	302:28	0:0	8	0
op	302:29	0:0	8	]
arg	303:3	303:30	7	td->td_refblackwhite[2*i+1]
water	303:3	0:0	8	td
op	303:5	0:0	8	->
water	303:7	0:0	8	td_refblackwhite
op	303:23	0:0	8	[
water	303:24	0:0	8	2
op	303:25	0:0	8	*
water	303:26	0:0	8	i
op	303:27	0:0	8	+
water	303:28	0:0	8	1
op	303:29	0:0	8	]
water	303:31	0:0	6	;
water	304:1	0:0	4	}
if	305:1	321:1	2	(TIFFFieldSet (tif ,FIELD_TRANSFERFUNCTION ))
cond	305:5	305:44	3	TIFFFieldSet (tif ,FIELD_TRANSFERFUNCTION )
call	305:5	305:44	4	TIFFFieldSet
arg	305:18	305:21	5	tif
water	305:18	0:0	6	tif
arg	305:22	305:44	5	FIELD_TRANSFERFUNCTION
water	305:22	0:0	6	FIELD_TRANSFERFUNCTION
stmts	305:47	321:1	3	
water	305:47	0:0	4	{
call	306:2	306:37	4	fprintf
arg	306:10	306:12	5	fd
water	306:10	0:0	6	fd
arg	306:14	306:37	5	"  Transfer Function: "
water	306:14	0:0	6	"  Transfer Function: "
water	306:38	0:0	4	;
if	307:2	319:2	4	(flags & TIFFPRINT_CURVES)
cond	307:6	307:14	5	flags & TIFFPRINT_CURVES
water	307:6	0:0	6	flags
op	307:12	0:0	6	&
water	307:14	0:0	6	TIFFPRINT_CURVES
stmts	307:32	319:2	5	
water	307:32	0:0	6	{
call	308:3	308:19	6	fprintf
arg	308:11	308:13	7	fd
water	308:11	0:0	8	fd
arg	308:15	308:19	7	"\n"
water	308:15	0:0	8	"\n"
water	308:20	0:0	6	;
water	309:3	0:0	6	n
op	309:5	0:0	6	=
water	309:7	0:0	6	1
water	309:8	0:0	6	L
op	309:9	0:0	6	<<
water	309:11	0:0	6	td
op	309:13	0:0	6	->
water	309:15	0:0	6	td_bitspersample
water	309:31	0:0	6	;
for	310:3	318:3	6	(l = 0 ;l < n;l ++)
forinit	310:8	310:13	7	l = 0 ;
water	310:8	0:0	8	l
op	310:10	0:0	8	=
water	310:12	0:0	8	0
water	310:13	0:0	8	;
cond	310:15	310:19	7	l < n
water	310:15	0:0	8	l
op	310:17	0:0	8	<
water	310:19	0:0	8	n
forexpr	310:22	310:23	7	l ++
water	310:22	0:0	8	l
op	310:23	0:0	8	++
stmts	310:27	318:3	7	
water	310:27	0:0	8	{
decl	311:4	311:12	8	uint16	i
call	312:4	313:40	8	fprintf
arg	312:12	312:14	9	fd
water	312:12	0:0	10	fd
arg	312:16	312:31	9	"    %2ld: %5u"
water	312:16	0:0	10	"    %2ld: %5u"
arg	313:8	313:9	9	l
water	313:8	0:0	10	l
arg	313:11	313:40	9	td->td_transferfunction[0][l]
water	313:11	0:0	10	td
op	313:13	0:0	10	->
water	313:15	0:0	10	td_transferfunction
op	313:34	0:0	10	[
water	313:35	0:0	10	0
op	313:36	0:0	10	]
op	313:37	0:0	10	[
water	313:38	0:0	10	l
op	313:39	0:0	10	]
water	313:41	0:0	8	;
for	314:4	316:39	8	(i = 1 ;i < td -> td_samplesperpixel;i ++)
forinit	314:9	314:14	9	i = 1 ;
water	314:9	0:0	10	i
op	314:11	0:0	10	=
water	314:13	0:0	10	1
water	314:14	0:0	10	;
cond	314:16	314:24	9	i < td -> td_samplesperpixel
water	314:16	0:0	10	i
op	314:18	0:0	10	<
water	314:20	0:0	10	td
op	314:22	0:0	10	->
water	314:24	0:0	10	td_samplesperpixel
forexpr	314:44	314:45	9	i ++
water	314:44	0:0	10	i
op	314:45	0:0	10	++
stmts	315:5	316:39	9	
call	315:5	316:38	10	fprintf
arg	315:13	315:15	11	fd
water	315:13	0:0	12	fd
arg	315:17	315:23	11	" %5u"
water	315:17	0:0	12	" %5u"
arg	316:9	316:38	11	td->td_transferfunction[i][l]
water	316:9	0:0	12	td
op	316:11	0:0	12	->
water	316:13	0:0	12	td_transferfunction
op	316:32	0:0	12	[
water	316:33	0:0	12	i
op	316:34	0:0	12	]
op	316:35	0:0	12	[
water	316:36	0:0	12	l
op	316:37	0:0	12	]
water	316:39	0:0	10	;
call	317:4	317:18	8	fputc
arg	317:10	317:14	9	'\n'
water	317:10	0:0	10	'\n'
arg	317:16	317:18	9	fd
water	317:16	0:0	10	fd
water	317:19	0:0	8	;
water	318:3	0:0	8	}
water	319:2	0:0	6	}
else	319:4	320:29	4
stmts	320:3	320:29	5	
call	320:3	320:28	6	fprintf
arg	320:11	320:13	7	fd
water	320:11	0:0	8	fd
arg	320:15	320:28	7	"(present)\n"
water	320:15	0:0	8	"(present)\n"
water	320:29	0:0	6	;
water	321:1	0:0	4	}
if	322:1	334:1	2	(TIFFFieldSet (tif ,FIELD_SUBIFD ) && ( td -> td_subifd ))
cond	322:5	322:54	3	TIFFFieldSet (tif ,FIELD_SUBIFD ) && ( td -> td_subifd )
call	322:5	322:35	4	TIFFFieldSet
arg	322:18	322:21	5	tif
water	322:18	0:0	6	tif
arg	322:23	322:35	5	FIELD_SUBIFD
water	322:23	0:0	6	FIELD_SUBIFD
op	322:37	0:0	4	&&
water	322:40	0:0	4	(
water	322:41	0:0	4	td
op	322:43	0:0	4	->
water	322:45	0:0	4	td_subifd
water	322:54	0:0	4	)
stmts	322:57	334:1	3	
water	322:57	0:0	4	{
decl	323:2	323:10	4	uint16	i
call	324:2	324:33	4	fprintf
arg	324:10	324:12	5	fd
water	324:10	0:0	6	fd
arg	324:14	324:33	5	"  SubIFD Offsets:"
water	324:14	0:0	6	"  SubIFD Offsets:"
water	324:34	0:0	4	;
for	325:2	328:40	4	(i = 0 ;i < td -> td_nsubifd;i ++)
forinit	325:7	325:12	5	i = 0 ;
water	325:7	0:0	6	i
op	325:9	0:0	6	=
water	325:11	0:0	6	0
water	325:12	0:0	6	;
cond	325:14	325:22	5	i < td -> td_nsubifd
water	325:14	0:0	6	i
op	325:16	0:0	6	<
water	325:18	0:0	6	td
op	325:20	0:0	6	->
water	325:22	0:0	6	td_nsubifd
forexpr	325:34	325:35	5	i ++
water	325:34	0:0	6	i
op	325:35	0:0	6	++
stmts	327:3	328:40	5	
call	327:3	328:39	6	fprintf
arg	327:11	327:13	7	fd
water	327:11	0:0	8	fd
arg	327:15	327:24	7	" %5I64u"
water	327:15	0:0	8	" %5I64u"
arg	328:4	328:39	7	(unsigned__int64)td->td_subifd[i]
water	328:4	0:0	8	(
water	328:5	0:0	8	unsigned
water	328:14	0:0	8	__int64
water	328:21	0:0	8	)
water	328:23	0:0	8	td
op	328:25	0:0	8	->
water	328:27	0:0	8	td_subifd
op	328:36	0:0	8	[
water	328:37	0:0	8	i
op	328:38	0:0	8	]
water	328:40	0:0	6	;
call	330:3	331:41	4	fprintf
arg	330:11	330:13	5	fd
water	330:11	0:0	6	fd
arg	330:15	330:23	5	" %5llu"
water	330:15	0:0	6	" %5llu"
arg	331:4	331:41	5	(unsignedlonglong)td->td_subifd[i]
water	331:4	0:0	6	(
water	331:5	0:0	6	unsigned
water	331:14	0:0	6	long
water	331:19	0:0	6	long
water	331:23	0:0	6	)
water	331:25	0:0	6	td
op	331:27	0:0	6	->
water	331:29	0:0	6	td_subifd
op	331:38	0:0	6	[
water	331:39	0:0	6	i
op	331:40	0:0	6	]
water	331:42	0:0	4	;
call	333:2	333:16	4	fputc
arg	333:8	333:12	5	'\n'
water	333:8	0:0	6	'\n'
arg	333:14	333:16	5	fd
water	333:14	0:0	6	fd
water	333:17	0:0	4	;
water	334:1	0:0	4	}
water	338:1	0:0	2	{
decl	339:2	339:8	2	int	i
decl	340:2	340:13	2	short	count
water	341:2	0:0	2	count
op	341:8	0:0	2	=
water	341:10	0:0	2	(
water	341:11	0:0	2	short
water	341:16	0:0	2	)
call	341:18	341:41	2	TIFFGetTagListCount
arg	341:38	341:41	3	tif
water	341:38	0:0	4	tif
water	341:42	0:0	2	;
for	342:2	410:2	2	(i = 0 ;i < count;i ++)
forinit	342:6	342:11	3	i = 0 ;
water	342:6	0:0	4	i
op	342:8	0:0	4	=
water	342:10	0:0	4	0
water	342:11	0:0	4	;
cond	342:13	342:17	3	i < count
water	342:13	0:0	4	i
op	342:15	0:0	4	<
water	342:17	0:0	4	count
forexpr	342:24	342:25	3	i ++
water	342:24	0:0	4	i
op	342:25	0:0	4	++
stmts	342:29	410:2	3	
water	342:29	0:0	4	{
decl	343:3	343:43	4	uint32	tag
op	343:14	0:0	4	=
call	343:16	343:42	5	TIFFGetTagListEntry
arg	343:36	343:39	6	tif
water	343:36	0:0	7	tif
arg	343:41	343:42	6	i
water	343:41	0:0	7	i
decl	344:3	344:23	4	const TIFFField	*fip
decl	345:3	345:21	4	uint32	value_count
decl	346:3	346:20	4	int	mem_alloc
op	346:17	0:0	4	=
water	346:19	0:0	4	0
decl	347:3	347:17	4	void	*raw_data
water	348:3	0:0	4	fip
op	348:7	0:0	4	=
call	348:9	348:34	4	TIFFFieldWithTag
arg	348:26	348:29	5	tif
water	348:26	0:0	6	tif
arg	348:31	348:34	5	tag
water	348:31	0:0	6	tag
water	348:35	0:0	4	;
if	349:3	350:12	4	(fip == NULL)
cond	349:6	349:13	5	fip == NULL
water	349:6	0:0	6	fip
op	349:10	0:0	6	==
water	349:13	0:0	6	NULL
stmts	350:4	350:12	5	
continue	350:4	350:12	6	
if	351:3	365:3	4	(fip -> field_passcount)
cond	351:6	351:11	5	fip -> field_passcount
water	351:6	0:0	6	fip
op	351:9	0:0	6	->
water	351:11	0:0	6	field_passcount
stmts	351:28	365:3	5	
water	351:28	0:0	6	{
if	352:4	355:4	6	(fip -> field_readcount == TIFF_VARIABLE2)
cond	352:8	352:32	7	fip -> field_readcount == TIFF_VARIABLE2
water	352:8	0:0	8	fip
op	352:11	0:0	8	->
water	352:13	0:0	8	field_readcount
op	352:29	0:0	8	==
water	352:32	0:0	8	TIFF_VARIABLE2
stmts	352:49	355:4	7	
water	352:49	0:0	8	{
if	353:5	354:14	8	(TIFFGetField (tif ,tag ,& value_count ,& raw_data ) != 1)
cond	353:8	353:59	9	TIFFGetField (tif ,tag ,& value_count ,& raw_data ) != 1
call	353:8	353:54	10	TIFFGetField
arg	353:21	353:24	11	tif
water	353:21	0:0	12	tif
arg	353:26	353:29	11	tag
water	353:26	0:0	12	tag
arg	353:31	353:43	11	&value_count
op	353:31	0:0	12	&
water	353:32	0:0	12	value_count
arg	353:45	353:54	11	&raw_data
op	353:45	0:0	12	&
water	353:46	0:0	12	raw_data
op	353:56	0:0	10	!=
water	353:59	0:0	10	1
stmts	354:6	354:14	9	
continue	354:6	354:14	10	
water	355:4	0:0	8	}
else	355:6	360:4	6
stmts	355:11	360:4	7	
if	355:11	360:4	8	(fip -> field_readcount == TIFF_VARIABLE)
cond	355:15	355:39	9	fip -> field_readcount == TIFF_VARIABLE
water	355:15	0:0	10	fip
op	355:18	0:0	10	->
water	355:20	0:0	10	field_readcount
op	355:36	0:0	10	==
water	355:39	0:0	10	TIFF_VARIABLE
stmts	355:55	360:4	9	
water	355:55	0:0	10	{
decl	356:5	356:29	10	uint16	small_value_count
if	357:5	358:14	10	(TIFFGetField (tif ,tag ,& small_value_count ,& raw_data ) != 1)
cond	357:8	357:65	11	TIFFGetField (tif ,tag ,& small_value_count ,& raw_data ) != 1
call	357:8	357:60	12	TIFFGetField
arg	357:21	357:24	13	tif
water	357:21	0:0	14	tif
arg	357:26	357:29	13	tag
water	357:26	0:0	14	tag
arg	357:31	357:49	13	&small_value_count
op	357:31	0:0	14	&
water	357:32	0:0	14	small_value_count
arg	357:51	357:60	13	&raw_data
op	357:51	0:0	14	&
water	357:52	0:0	14	raw_data
op	357:62	0:0	12	!=
water	357:65	0:0	12	1
stmts	358:6	358:14	11	
continue	358:6	358:14	12	
water	359:5	0:0	10	value_count
op	359:17	0:0	10	=
water	359:19	0:0	10	small_value_count
water	359:36	0:0	10	;
water	360:4	0:0	10	}
else	360:6	364:4	6
stmts	360:11	364:4	7	
water	360:11	0:0	8	{
call	361:5	362:47	8	assert
arg	361:13	362:47	9	fip->field_readcount==TIFF_VARIABLE||fip->field_readcount==TIFF_VARIABLE2
water	361:13	0:0	10	fip
op	361:16	0:0	10	->
water	361:18	0:0	10	field_readcount
op	361:34	0:0	10	==
water	361:37	0:0	10	TIFF_VARIABLE
op	362:6	0:0	10	||
water	362:9	0:0	10	fip
op	362:12	0:0	10	->
water	362:14	0:0	10	field_readcount
op	362:30	0:0	10	==
water	362:33	0:0	10	TIFF_VARIABLE2
water	362:48	0:0	8	;
continue	363:5	363:13	8	
water	364:4	0:0	8	}
water	365:3	0:0	6	}
else	365:5	399:3	4
stmts	365:10	399:3	5	
water	365:10	0:0	6	{
if	366:4	368:20	6	(fip -> field_readcount == TIFF_VARIABLE || fip -> field_readcount == TIFF_VARIABLE2)
cond	366:8	367:35	7	fip -> field_readcount == TIFF_VARIABLE || fip -> field_readcount == TIFF_VARIABLE2
water	366:8	0:0	8	fip
op	366:11	0:0	8	->
water	366:13	0:0	8	field_readcount
op	366:29	0:0	8	==
water	366:32	0:0	8	TIFF_VARIABLE
op	367:8	0:0	8	||
water	367:11	0:0	8	fip
op	367:14	0:0	8	->
water	367:16	0:0	8	field_readcount
op	367:32	0:0	8	==
water	367:35	0:0	8	TIFF_VARIABLE2
stmts	368:5	368:20	7	
water	368:5	0:0	8	value_count
op	368:17	0:0	8	=
water	368:19	0:0	8	1
water	368:20	0:0	8	;
else	369:4	370:41	6
stmts	369:9	370:41	7	
if	369:9	370:41	8	(fip -> field_readcount == TIFF_SPP)
cond	369:13	369:37	9	fip -> field_readcount == TIFF_SPP
water	369:13	0:0	10	fip
op	369:16	0:0	10	->
water	369:18	0:0	10	field_readcount
op	369:34	0:0	10	==
water	369:37	0:0	10	TIFF_SPP
stmts	370:5	370:41	9	
water	370:5	0:0	10	value_count
op	370:17	0:0	10	=
water	370:19	0:0	10	td
op	370:21	0:0	10	->
water	370:23	0:0	10	td_samplesperpixel
water	370:41	0:0	10	;
else	371:4	372:39	6
stmts	372:5	372:39	7	
water	372:5	0:0	8	value_count
op	372:17	0:0	8	=
water	372:19	0:0	8	fip
op	372:22	0:0	8	->
water	372:24	0:0	8	field_readcount
water	372:39	0:0	8	;
if	373:4	382:4	6	(fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0)
cond	373:8	374:49	7	fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0
water	373:8	0:0	8	fip
op	373:11	0:0	8	->
water	373:13	0:0	8	field_tag
op	373:23	0:0	8	==
water	373:26	0:0	8	TIFFTAG_DOTRANGE
op	374:8	0:0	8	&&
call	374:11	374:44	8	strcmp
arg	374:18	374:33	9	fip->field_name
water	374:18	0:0	10	fip
op	374:21	0:0	10	->
water	374:23	0:0	10	field_name
arg	374:34	374:44	9	"DotRange"
water	374:34	0:0	10	"DotRange"
op	374:46	0:0	8	==
water	374:49	0:0	8	0
stmts	374:52	382:4	7	
water	374:52	0:0	8	{
water	379:5	0:0	8	static
water	379:12	0:0	8	uint16
water	379:19	0:0	8	dotrange
op	379:27	0:0	8	[
water	379:28	0:0	8	2
op	379:29	0:0	8	]
water	379:30	0:0	8	;
water	380:5	0:0	8	raw_data
op	380:14	0:0	8	=
water	380:16	0:0	8	dotrange
water	380:24	0:0	8	;
call	381:5	381:50	8	TIFFGetField
arg	381:18	381:21	9	tif
water	381:18	0:0	10	tif
arg	381:23	381:26	9	tag
water	381:23	0:0	10	tag
arg	381:28	381:38	9	dotrange+0
water	381:28	0:0	10	dotrange
op	381:36	0:0	10	+
water	381:37	0:0	10	0
arg	381:40	381:50	9	dotrange+1
water	381:40	0:0	10	dotrange
op	381:48	0:0	10	+
water	381:49	0:0	10	1
water	381:51	0:0	8	;
water	382:4	0:0	8	}
else	382:6	389:4	6
stmts	382:11	389:4	7	
if	382:11	389:4	8	(fip -> field_type == TIFF_ASCII || fip -> field_readcount == TIFF_VARIABLE || fip -> field_readcount == TIFF_VARIABLE2 || fip -> field_readcount == TIFF_SPP || value_count > 1)
cond	382:15	386:25	9	fip -> field_type == TIFF_ASCII || fip -> field_readcount == TIFF_VARIABLE || fip -> field_readcount == TIFF_VARIABLE2 || fip -> field_readcount == TIFF_SPP || value_count > 1
water	382:15	0:0	10	fip
op	382:18	0:0	10	->
water	382:20	0:0	10	field_type
op	382:31	0:0	10	==
water	382:34	0:0	10	TIFF_ASCII
op	383:8	0:0	10	||
water	383:11	0:0	10	fip
op	383:14	0:0	10	->
water	383:16	0:0	10	field_readcount
op	383:32	0:0	10	==
water	383:35	0:0	10	TIFF_VARIABLE
op	384:8	0:0	10	||
water	384:11	0:0	10	fip
op	384:14	0:0	10	->
water	384:16	0:0	10	field_readcount
op	384:32	0:0	10	==
water	384:35	0:0	10	TIFF_VARIABLE2
op	385:8	0:0	10	||
water	385:11	0:0	10	fip
op	385:14	0:0	10	->
water	385:16	0:0	10	field_readcount
op	385:32	0:0	10	==
water	385:35	0:0	10	TIFF_SPP
op	386:8	0:0	10	||
water	386:11	0:0	10	value_count
op	386:23	0:0	10	>
water	386:25	0:0	10	1
stmts	386:28	389:4	9	
water	386:28	0:0	10	{
if	387:5	388:14	10	(TIFFGetField (tif ,tag ,& raw_data ) != 1)
cond	387:8	387:45	11	TIFFGetField (tif ,tag ,& raw_data ) != 1
call	387:8	387:40	12	TIFFGetField
arg	387:21	387:24	13	tif
water	387:21	0:0	14	tif
arg	387:26	387:29	13	tag
water	387:26	0:0	14	tag
arg	387:31	387:40	13	&raw_data
op	387:31	0:0	14	&
water	387:32	0:0	14	raw_data
op	387:42	0:0	12	!=
water	387:45	0:0	12	1
stmts	388:6	388:14	11	
continue	388:6	388:14	12	
water	389:4	0:0	10	}
else	389:6	398:4	6
stmts	389:11	398:4	7	
water	389:11	0:0	8	{
water	390:5	0:0	8	raw_data
op	390:14	0:0	8	=
call	390:16	392:22	8	_TIFFmalloc
arg	391:9	392:22	9	_TIFFDataSize(fip->field_type)*value_count
call	391:9	391:38	10	_TIFFDataSize
arg	391:23	391:38	11	fip->field_type
water	391:23	0:0	12	fip
op	391:26	0:0	12	->
water	391:28	0:0	12	field_type
op	392:9	0:0	10	*
water	392:11	0:0	10	value_count
water	392:23	0:0	8	;
water	393:5	0:0	8	mem_alloc
op	393:15	0:0	8	=
water	393:17	0:0	8	1
water	393:18	0:0	8	;
if	394:5	397:5	8	(TIFFGetField (tif ,tag ,raw_data ) != 1)
cond	394:8	394:44	9	TIFFGetField (tif ,tag ,raw_data ) != 1
call	394:8	394:39	10	TIFFGetField
arg	394:21	394:24	11	tif
water	394:21	0:0	12	tif
arg	394:26	394:29	11	tag
water	394:26	0:0	12	tag
arg	394:31	394:39	11	raw_data
water	394:31	0:0	12	raw_data
op	394:41	0:0	10	!=
water	394:44	0:0	10	1
stmts	394:47	397:5	9	
water	394:47	0:0	10	{
call	395:6	395:24	10	_TIFFfree
arg	395:16	395:24	11	raw_data
water	395:16	0:0	12	raw_data
water	395:25	0:0	10	;
continue	396:6	396:14	10	
water	397:5	0:0	10	}
water	398:4	0:0	8	}
water	399:3	0:0	6	}
if	406:3	407:51	4	(!_TIFFPrettyPrintField (tif ,fip ,fd ,tag ,value_count ,raw_data ))
cond	406:7	406:70	5	!_TIFFPrettyPrintField (tif ,fip ,fd ,tag ,value_count ,raw_data )
op	406:7	0:0	6	!
call	406:8	406:70	6	_TIFFPrettyPrintField
arg	406:30	406:33	7	tif
water	406:30	0:0	8	tif
arg	406:35	406:38	7	fip
water	406:35	0:0	8	fip
arg	406:40	406:42	7	fd
water	406:40	0:0	8	fd
arg	406:44	406:47	7	tag
water	406:44	0:0	8	tag
arg	406:49	406:60	7	value_count
water	406:49	0:0	8	value_count
arg	406:62	406:70	7	raw_data
water	406:62	0:0	8	raw_data
stmts	407:4	407:51	5	
call	407:4	407:50	6	_TIFFPrintField
arg	407:20	407:22	7	fd
water	407:20	0:0	8	fd
arg	407:24	407:27	7	fip
water	407:24	0:0	8	fip
arg	407:29	407:40	7	value_count
water	407:29	0:0	8	value_count
arg	407:42	407:50	7	raw_data
water	407:42	0:0	8	raw_data
water	407:51	0:0	6	;
if	408:3	409:23	4	(mem_alloc)
cond	408:6	408:6	5	mem_alloc
water	408:6	0:0	6	mem_alloc
stmts	409:4	409:23	5	
call	409:4	409:22	6	_TIFFfree
arg	409:14	409:22	7	raw_data
water	409:14	0:0	8	raw_data
water	409:23	0:0	6	;
water	410:2	0:0	4	}
water	411:1	0:0	2	}
if	412:1	413:49	2	(tif -> tif_tagmethods . printdir)
cond	412:5	412:25	3	tif -> tif_tagmethods . printdir
water	412:5	0:0	4	tif
op	412:8	0:0	4	->
water	412:10	0:0	4	tif_tagmethods
op	412:24	0:0	4	.
water	412:25	0:0	4	printdir
stmts	413:2	413:49	3	
call	413:2	413:48	4	(*tif->tif_tagmethods.printdir)
arg	413:34	413:37	5	tif
water	413:34	0:0	6	tif
arg	413:39	413:41	5	fd
water	413:39	0:0	6	fd
arg	413:43	413:48	5	flags
water	413:43	0:0	6	flags
water	413:49	0:0	4	;
call	414:8	414:30	2	_TIFFFillStriles
arg	414:26	414:30	3	tif
water	414:26	0:0	4	tif
water	414:31	0:0	2	;
if	415:1	433:1	2	(( flags & TIFFPRINT_STRIPS ) &&TIFFFieldSet (tif ,FIELD_STRIPOFFSETS ))
cond	415:5	416:40	3	( flags & TIFFPRINT_STRIPS ) &&TIFFFieldSet (tif ,FIELD_STRIPOFFSETS )
water	415:5	0:0	4	(
water	415:6	0:0	4	flags
op	415:12	0:0	4	&
water	415:14	0:0	4	TIFFPRINT_STRIPS
water	415:30	0:0	4	)
op	415:32	0:0	4	&&
call	416:5	416:40	4	TIFFFieldSet
arg	416:18	416:21	5	tif
water	416:18	0:0	6	tif
arg	416:22	416:40	5	FIELD_STRIPOFFSETS
water	416:22	0:0	6	FIELD_STRIPOFFSETS
stmts	416:43	433:1	3	
water	416:43	0:0	4	{
decl	417:2	417:10	4	uint32	s
call	418:2	420:39	4	fprintf
arg	418:10	418:12	5	fd
water	418:10	0:0	6	fd
arg	418:14	418:27	5	"  %lu %s:\n"
water	418:14	0:0	6	"  %lu %s:\n"
arg	419:6	419:36	5	(unsignedlong)td->td_nstrips
water	419:6	0:0	6	(
water	419:7	0:0	6	unsigned
water	419:16	0:0	6	long
water	419:20	0:0	6	)
water	419:22	0:0	6	td
op	419:24	0:0	6	->
water	419:26	0:0	6	td_nstrips
arg	420:6	420:39	5	isTiled(tif)?"Tiles":"Strips"
call	420:6	420:17	6	isTiled
arg	420:14	420:17	7	tif
water	420:14	0:0	8	tif
water	420:19	0:0	6	?
water	420:21	0:0	6	"Tiles"
water	420:29	0:0	6	:
water	420:31	0:0	6	"Strips"
water	420:40	0:0	4	;
for	421:2	426:51	4	(s = 0 ;s < td -> td_nstrips;s ++)
forinit	421:7	421:12	5	s = 0 ;
water	421:7	0:0	6	s
op	421:9	0:0	6	=
water	421:11	0:0	6	0
water	421:12	0:0	6	;
cond	421:14	421:22	5	s < td -> td_nstrips
water	421:14	0:0	6	s
op	421:16	0:0	6	<
water	421:18	0:0	6	td
op	421:20	0:0	6	->
water	421:22	0:0	6	td_nstrips
forexpr	421:34	421:35	5	s ++
water	421:34	0:0	6	s
op	421:35	0:0	6	++
stmts	423:3	426:51	5	
call	423:3	426:50	6	fprintf
arg	423:11	423:13	7	fd
water	423:11	0:0	8	fd
arg	423:15	423:45	7	"    %3lu: [%8I64u, %8I64u]\n"
water	423:15	0:0	8	"    %3lu: [%8I64u, %8I64u]\n"
arg	424:7	424:24	7	(unsignedlong)s
water	424:7	0:0	8	(
water	424:8	0:0	8	unsigned
water	424:17	0:0	8	long
water	424:21	0:0	8	)
water	424:23	0:0	8	s
arg	425:7	425:47	7	(unsigned__int64)td->td_stripoffset[s]
water	425:7	0:0	8	(
water	425:8	0:0	8	unsigned
water	425:17	0:0	8	__int64
water	425:24	0:0	8	)
water	425:26	0:0	8	td
op	425:28	0:0	8	->
water	425:30	0:0	8	td_stripoffset
op	425:44	0:0	8	[
water	425:45	0:0	8	s
op	425:46	0:0	8	]
arg	426:7	426:50	7	(unsigned__int64)td->td_stripbytecount[s]
water	426:7	0:0	8	(
water	426:8	0:0	8	unsigned
water	426:17	0:0	8	__int64
water	426:24	0:0	8	)
water	426:26	0:0	8	td
op	426:28	0:0	8	->
water	426:30	0:0	8	td_stripbytecount
op	426:47	0:0	8	[
water	426:48	0:0	8	s
op	426:49	0:0	8	]
water	426:51	0:0	6	;
call	428:3	431:52	4	fprintf
arg	428:11	428:13	5	fd
water	428:11	0:0	6	fd
arg	428:15	428:43	5	"    %3lu: [%8llu, %8llu]\n"
water	428:15	0:0	6	"    %3lu: [%8llu, %8llu]\n"
arg	429:7	429:24	5	(unsignedlong)s
water	429:7	0:0	6	(
water	429:8	0:0	6	unsigned
water	429:17	0:0	6	long
water	429:21	0:0	6	)
water	429:23	0:0	6	s
arg	430:7	430:49	5	(unsignedlonglong)td->td_stripoffset[s]
water	430:7	0:0	6	(
water	430:8	0:0	6	unsigned
water	430:17	0:0	6	long
water	430:22	0:0	6	long
water	430:26	0:0	6	)
water	430:28	0:0	6	td
op	430:30	0:0	6	->
water	430:32	0:0	6	td_stripoffset
op	430:46	0:0	6	[
water	430:47	0:0	6	s
op	430:48	0:0	6	]
arg	431:7	431:52	5	(unsignedlonglong)td->td_stripbytecount[s]
water	431:7	0:0	6	(
water	431:8	0:0	6	unsigned
water	431:17	0:0	6	long
water	431:22	0:0	6	long
water	431:26	0:0	6	)
water	431:28	0:0	6	td
op	431:30	0:0	6	->
water	431:32	0:0	6	td_stripbytecount
op	431:49	0:0	6	[
water	431:50	0:0	6	s
op	431:51	0:0	6	]
water	431:53	0:0	4	;
water	433:1	0:0	4	}

func	1:0	36:0	0	static int	TIFFWriteRationalArray
params	2:22	0:0	1	
param	2:23	2:32	2	TIFF *	tif
param	3:4	3:21	2	TIFFDataType	type
param	3:23	3:33	2	ttag_t	tag
param	3:35	3:52	2	TIFFDirEntry *	dir
param	3:54	3:62	2	uint32	n
param	3:64	3:72	2	float *	v
stmnts	0:0	35:16	1	
decl	5:1	5:9	2	uint32	i
decl	6:1	6:10	2	uint32	*t
decl	7:1	7:11	2	int	status
water	8:1	0:0	2	dir
op	8:4	0:0	2	->
water	8:6	0:0	2	tdir_tag
op	8:15	0:0	2	=
water	8:17	0:0	2	tag
water	8:20	0:0	2	;
water	9:1	0:0	2	dir
op	9:4	0:0	2	->
water	9:6	0:0	2	tdir_type
op	9:16	0:0	2	=
water	9:18	0:0	2	(
water	9:19	0:0	2	short
water	9:24	0:0	2	)
water	9:26	0:0	2	type
water	9:30	0:0	2	;
water	10:1	0:0	2	dir
op	10:4	0:0	2	->
water	10:6	0:0	2	tdir_count
op	10:17	0:0	2	=
water	10:19	0:0	2	n
water	10:20	0:0	2	;
water	11:1	0:0	2	t
op	11:3	0:0	2	=
water	11:5	0:0	2	(
water	11:6	0:0	2	uint32
op	11:12	0:0	2	*
water	11:13	0:0	2	)
call	11:15	11:48	2	_TIFFmalloc
arg	11:27	11:48	3	2*n*sizeof(uint32)
water	11:27	0:0	4	2
op	11:28	0:0	4	*
water	11:29	0:0	4	n
op	11:31	0:0	4	*
op	11:33	0:0	4	sizeof
water	11:40	0:0	4	(
water	11:41	0:0	4	uint32
water	11:47	0:0	4	)
water	11:49	0:0	2	;
for	12:1	32:1	2	(i = 0 ;i < n;i ++)
forinit	12:6	12:11	3	i = 0 ;
water	12:6	0:0	4	i
op	12:8	0:0	4	=
water	12:10	0:0	4	0
water	12:11	0:0	4	;
cond	12:13	12:17	3	i < n
water	12:13	0:0	4	i
op	12:15	0:0	4	<
water	12:17	0:0	4	n
forexpr	12:20	12:21	3	i ++
water	12:20	0:0	4	i
op	12:21	0:0	4	++
stmts	12:25	32:1	3	
water	12:25	0:0	4	{
decl	13:2	13:17	4	float	fv
op	13:11	0:0	4	=
water	13:13	0:0	4	v
op	13:14	0:0	4	[
water	13:15	0:0	4	i
op	13:16	0:0	4	]
decl	14:2	14:14	4	int	sign
op	14:11	0:0	4	=
water	14:13	0:0	4	1
decl	15:2	15:12	4	uint32	den
if	16:2	24:2	4	(fv < 0)
cond	16:6	16:11	5	fv < 0
water	16:6	0:0	6	fv
op	16:9	0:0	6	<
water	16:11	0:0	6	0
stmts	16:14	24:2	5	
water	16:14	0:0	6	{
if	17:3	22:3	6	(type == TIFF_RATIONAL)
cond	17:7	17:15	7	type == TIFF_RATIONAL
water	17:7	0:0	8	type
op	17:12	0:0	8	==
water	17:15	0:0	8	TIFF_RATIONAL
stmts	17:30	22:3	7	
water	17:30	0:0	8	{
call	18:4	20:45	8	TIFFWarning
arg	18:16	18:29	9	tif->tif_name
water	18:16	0:0	10	tif
op	18:19	0:0	10	->
water	18:21	0:0	10	tif_name
arg	19:1	19:69	9	"\"%s\": Information lost writing value (%g) as (unsigned) RATIONAL"
water	19:1	0:0	10	"\"%s\": Information lost writing value (%g) as (unsigned) RATIONAL"
arg	20:4	20:42	9	_TIFFFieldWithTag(tif,tag)->field_name
call	20:4	20:29	10	_TIFFFieldWithTag
arg	20:22	20:25	11	tif
water	20:22	0:0	12	tif
arg	20:26	20:29	11	tag
water	20:26	0:0	12	tag
op	20:30	0:0	10	->
water	20:32	0:0	10	field_name
arg	20:44	20:45	9	v
water	20:44	0:0	10	v
water	20:46	0:0	8	;
water	21:4	0:0	8	fv
op	21:7	0:0	8	=
water	21:9	0:0	8	0
water	21:10	0:0	8	;
water	22:3	0:0	8	}
else	22:5	23:23	6
stmts	23:4	23:23	7	
water	23:4	0:0	8	fv
op	23:7	0:0	8	=
op	23:9	0:0	8	-
water	23:10	0:0	8	fv
water	23:12	0:0	8	,
water	23:14	0:0	8	sign
op	23:19	0:0	8	=
op	23:21	0:0	8	-
water	23:22	0:0	8	1
water	23:23	0:0	8	;
water	24:2	0:0	6	}
water	25:2	0:0	4	den
op	25:6	0:0	4	=
water	25:8	0:0	4	1
water	25:9	0:0	4	L
water	25:10	0:0	4	;
if	26:2	29:2	4	(fv > 0)
cond	26:6	26:11	5	fv > 0
water	26:6	0:0	6	fv
op	26:9	0:0	6	>
water	26:11	0:0	6	0
stmts	26:14	29:2	5	
water	26:14	0:0	6	{
while	27:3	28:28	6	(fv < 1 L << ( 31 - 3 ) && den < 1 L << ( 31 - 3 ))
cond	27:10	27:44	7	fv < 1 L << ( 31 - 3 ) && den < 1 L << ( 31 - 3 )
water	27:10	0:0	8	fv
op	27:13	0:0	8	<
water	27:15	0:0	8	1
water	27:16	0:0	8	L
op	27:17	0:0	8	<<
water	27:19	0:0	8	(
water	27:20	0:0	8	31
op	27:22	0:0	8	-
water	27:23	0:0	8	3
water	27:24	0:0	8	)
op	27:26	0:0	8	&&
water	27:29	0:0	8	den
op	27:33	0:0	8	<
water	27:35	0:0	8	1
water	27:36	0:0	8	L
op	27:37	0:0	8	<<
water	27:39	0:0	8	(
water	27:40	0:0	8	31
op	27:42	0:0	8	-
water	27:43	0:0	8	3
water	27:44	0:0	8	)
stmts	28:4	28:28	7	
water	28:4	0:0	8	fv
op	28:7	0:0	8	*=
water	28:10	0:0	8	1
op	28:11	0:0	8	<<
water	28:13	0:0	8	3
water	28:14	0:0	8	,
water	28:16	0:0	8	den
op	28:20	0:0	8	*=
water	28:23	0:0	8	1
water	28:24	0:0	8	L
op	28:25	0:0	8	<<
water	28:27	0:0	8	3
water	28:28	0:0	8	;
water	29:2	0:0	6	}
water	30:2	0:0	4	t
op	30:3	0:0	4	[
water	30:4	0:0	4	2
op	30:5	0:0	4	*
water	30:6	0:0	4	i
op	30:7	0:0	4	+
water	30:8	0:0	4	0
op	30:9	0:0	4	]
op	30:11	0:0	4	=
water	30:13	0:0	4	sign
op	30:18	0:0	4	*
water	30:20	0:0	4	(
water	30:21	0:0	4	fv
op	30:24	0:0	4	+
water	30:26	0:0	4	0
op	30:27	0:0	4	.
water	30:28	0:0	4	5
water	30:29	0:0	4	)
water	30:30	0:0	4	;
water	31:2	0:0	4	t
op	31:3	0:0	4	[
water	31:4	0:0	4	2
op	31:5	0:0	4	*
water	31:6	0:0	4	i
op	31:7	0:0	4	+
water	31:8	0:0	4	1
op	31:9	0:0	4	]
op	31:11	0:0	4	=
water	31:13	0:0	4	den
water	31:16	0:0	4	;
water	32:1	0:0	4	}
water	33:1	0:0	2	status
op	33:8	0:0	2	=
call	33:10	33:43	2	TIFFWriteData
arg	33:24	33:27	3	tif
water	33:24	0:0	4	tif
arg	33:29	33:32	3	dir
water	33:29	0:0	4	dir
arg	33:34	33:43	3	(char*)t
water	33:34	0:0	4	(
water	33:35	0:0	4	char
op	33:40	0:0	4	*
water	33:41	0:0	4	)
water	33:42	0:0	4	t
water	33:44	0:0	2	;
call	34:1	34:20	2	_TIFFfree
arg	34:11	34:20	3	(char*)t
water	34:11	0:0	4	(
water	34:12	0:0	4	char
op	34:16	0:0	4	*
water	34:17	0:0	4	)
water	34:19	0:0	4	t
water	34:21	0:0	2	;
return	35:1	35:16	2	(status)
water	35:8	0:0	3	(
water	35:9	0:0	3	status
water	35:15	0:0	3	)

func	1:0	56:2	0	static int	combineSeparateTileSamplesBytes
params	2:32	0:0	1	
param	2:33	2:58	2	unsigned char *	srcbuffs[]
param	2:60	2:78	2	unsigned char *	out
param	3:33	3:44	2	uint32	cols
param	3:46	3:57	2	uint32	rows
param	3:59	3:76	2	uint32	imagewidth
param	4:33	4:42	2	uint32	tw
param	4:44	4:54	2	uint16	spp
param	4:56	4:66	2	uint16	bps
param	5:33	5:47	2	FILE *	dumpfile
param	5:49	5:59	2	int	format
param	5:61	5:70	2	int	level
stmnts	0:0	55:12	1	
decl	7:2	7:25	2	int	i
water	7:7	0:0	2	,
decl	7:2	7:25	2	int	bytes_per_sample
decl	8:2	8:67	2	uint32	row
water	8:12	0:0	2	,
decl	8:2	8:67	2	uint32	col
water	8:17	0:0	2	,
decl	8:2	8:67	2	uint32	col_offset
water	8:29	0:0	2	,
decl	8:2	8:67	2	uint32	src_rowsize
water	8:42	0:0	2	,
decl	8:2	8:67	2	uint32	dst_rowsize
water	8:55	0:0	2	,
decl	8:2	8:67	2	uint32	src_offset
decl	9:2	9:20	2	unsigned char	*src
decl	10:2	10:20	2	unsigned char	*dst
decl	11:2	11:13	2	tsample_t	s
water	12:2	0:0	2	src
op	12:6	0:0	2	=
water	12:8	0:0	2	srcbuffs
op	12:16	0:0	2	[
water	12:17	0:0	2	0
op	12:18	0:0	2	]
water	12:19	0:0	2	;
water	13:2	0:0	2	dst
op	13:6	0:0	2	=
water	13:8	0:0	2	out
water	13:11	0:0	2	;
if	14:2	18:4	2	(( src == NULL ) || ( dst == NULL ))
cond	14:6	14:35	3	( src == NULL ) || ( dst == NULL )
water	14:6	0:0	4	(
water	14:7	0:0	4	src
op	14:11	0:0	4	==
water	14:14	0:0	4	NULL
water	14:18	0:0	4	)
op	14:20	0:0	4	||
water	14:23	0:0	4	(
water	14:24	0:0	4	dst
op	14:28	0:0	4	==
water	14:31	0:0	4	NULL
water	14:35	0:0	4	)
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:4	16:72	4	TIFFError
arg	16:14	16:47	5	"combineSeparateTileSamplesBytes"
water	16:14	0:0	6	"combineSeparateTileSamplesBytes"
arg	16:48	16:72	5	"Invalid buffer address"
water	16:48	0:0	6	"Invalid buffer address"
water	16:73	0:0	4	;
return	17:4	17:14	4	(1)
water	17:11	0:0	5	(
water	17:12	0:0	5	1
water	17:13	0:0	5	)
water	18:4	0:0	4	}
water	19:2	0:0	2	bytes_per_sample
op	19:19	0:0	2	=
water	19:21	0:0	2	(
water	19:22	0:0	2	bps
op	19:26	0:0	2	+
water	19:28	0:0	2	7
water	19:29	0:0	2	)
op	19:31	0:0	2	/
water	19:33	0:0	2	8
water	19:34	0:0	2	;
water	20:2	0:0	2	src_rowsize
op	20:14	0:0	2	=
water	20:16	0:0	2	(
water	20:17	0:0	2	(
water	20:18	0:0	2	bps
op	20:22	0:0	2	*
water	20:24	0:0	2	tw
water	20:26	0:0	2	)
op	20:28	0:0	2	+
water	20:30	0:0	2	7
water	20:31	0:0	2	)
op	20:33	0:0	2	/
water	20:35	0:0	2	8
water	20:36	0:0	2	;
water	21:2	0:0	2	dst_rowsize
op	21:14	0:0	2	=
water	21:16	0:0	2	imagewidth
op	21:27	0:0	2	*
water	21:29	0:0	2	bytes_per_sample
op	21:46	0:0	2	*
water	21:48	0:0	2	spp
water	21:51	0:0	2	;
for	22:2	54:4	2	(row = 0 ;row < rows;row ++)
forinit	22:7	22:14	3	row = 0 ;
water	22:7	0:0	4	row
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:22	3	row < rows
water	22:16	0:0	4	row
op	22:20	0:0	4	<
water	22:22	0:0	4	rows
forexpr	22:28	22:31	3	row ++
water	22:28	0:0	4	row
op	22:31	0:0	4	++
stmts	23:4	54:4	3	
water	23:4	0:0	4	{
if	24:4	31:6	4	(( dumpfile != NULL ) && ( level == 2 ))
cond	24:8	24:41	5	( dumpfile != NULL ) && ( level == 2 )
water	24:8	0:0	6	(
water	24:9	0:0	6	dumpfile
op	24:18	0:0	6	!=
water	24:21	0:0	6	NULL
water	24:25	0:0	6	)
op	24:27	0:0	6	&&
water	24:30	0:0	6	(
water	24:31	0:0	6	level
op	24:37	0:0	6	==
water	24:40	0:0	6	2
water	24:41	0:0	6	)
stmts	25:6	31:6	5	
water	25:6	0:0	6	{
for	26:6	30:8	6	(s = 0 ;s < spp;s ++)
forinit	26:11	26:16	7	s = 0 ;
water	26:11	0:0	8	s
op	26:13	0:0	8	=
water	26:15	0:0	8	0
water	26:16	0:0	8	;
cond	26:18	26:22	7	s < spp
water	26:18	0:0	8	s
op	26:20	0:0	8	<
water	26:22	0:0	8	spp
forexpr	26:27	26:28	7	s ++
water	26:27	0:0	8	s
op	26:28	0:0	8	++
stmts	27:8	30:8	7	
water	27:8	0:0	8	{
call	28:8	28:97	8	dump_info
arg	28:19	28:27	9	dumpfile
water	28:19	0:0	10	dumpfile
arg	28:29	28:35	9	format
water	28:29	0:0	10	format
arg	28:37	28:70	9	"combineSeparateTileSamplesBytes"
water	28:37	0:0	10	"combineSeparateTileSamplesBytes"
arg	28:71	28:94	9	"Input data, Sample %d"
water	28:71	0:0	10	"Input data, Sample %d"
arg	28:96	28:97	9	s
water	28:96	0:0	10	s
water	28:98	0:0	8	;
call	29:8	29:85	8	dump_buffer
arg	29:20	29:28	9	dumpfile
water	29:20	0:0	10	dumpfile
arg	29:30	29:36	9	format
water	29:30	0:0	10	format
arg	29:38	29:39	9	1
water	29:38	0:0	10	1
arg	29:41	29:45	9	cols
water	29:41	0:0	10	cols
arg	29:47	29:50	9	row
water	29:47	0:0	10	row
arg	29:52	29:85	9	srcbuffs[s]+(row*src_rowsize)
water	29:52	0:0	10	srcbuffs
op	29:60	0:0	10	[
water	29:61	0:0	10	s
op	29:62	0:0	10	]
op	29:64	0:0	10	+
water	29:66	0:0	10	(
water	29:67	0:0	10	row
op	29:71	0:0	10	*
water	29:73	0:0	10	src_rowsize
water	29:84	0:0	10	)
water	29:86	0:0	8	;
water	30:8	0:0	8	}
water	31:6	0:0	6	}
water	32:4	0:0	4	dst
op	32:8	0:0	4	=
water	32:10	0:0	4	out
op	32:14	0:0	4	+
water	32:16	0:0	4	(
water	32:17	0:0	4	row
op	32:21	0:0	4	*
water	32:23	0:0	4	dst_rowsize
water	32:34	0:0	4	)
water	32:35	0:0	4	;
water	33:4	0:0	4	src_offset
op	33:15	0:0	4	=
water	33:17	0:0	4	row
op	33:21	0:0	4	*
water	33:23	0:0	4	src_rowsize
water	33:34	0:0	4	;
call	35:4	36:40	4	TIFFError
arg	35:14	35:16	5	""
water	35:14	0:0	6	""
arg	35:17	35:64	5	"Tile row %4d, Src offset %6d   Dst offset %6d"
water	35:17	0:0	6	"Tile row %4d, Src offset %6d   Dst offset %6d"
arg	36:14	36:17	5	row
water	36:14	0:0	6	row
arg	36:19	36:29	5	src_offset
water	36:19	0:0	6	src_offset
arg	36:31	36:40	5	dst-out
water	36:31	0:0	6	dst
op	36:35	0:0	6	-
water	36:37	0:0	6	out
water	36:41	0:0	4	;
for	38:4	48:6	4	(col = 0 ;col < cols;col ++)
forinit	38:9	38:16	5	col = 0 ;
water	38:9	0:0	6	col
op	38:13	0:0	6	=
water	38:15	0:0	6	0
water	38:16	0:0	6	;
cond	38:18	38:24	5	col < cols
water	38:18	0:0	6	col
op	38:22	0:0	6	<
water	38:24	0:0	6	cols
forexpr	38:30	38:33	5	col ++
water	38:30	0:0	6	col
op	38:33	0:0	6	++
stmts	39:6	48:6	5	
water	39:6	0:0	6	{
water	40:6	0:0	6	col_offset
op	40:17	0:0	6	=
water	40:19	0:0	6	src_offset
op	40:30	0:0	6	+
water	40:32	0:0	6	(
water	40:33	0:0	6	col
op	40:37	0:0	6	*
water	40:39	0:0	6	(
water	40:40	0:0	6	bps
op	40:44	0:0	6	/
water	40:46	0:0	6	8
water	40:47	0:0	6	)
water	40:48	0:0	6	)
water	40:49	0:0	6	;
for	41:6	47:8	6	(s = 0 ;( s < spp ) && ( s < MAX_SAMPLES );s ++)
forinit	41:11	41:16	7	s = 0 ;
water	41:11	0:0	8	s
op	41:13	0:0	8	=
water	41:15	0:0	8	0
water	41:16	0:0	8	;
cond	41:18	41:47	7	( s < spp ) && ( s < MAX_SAMPLES )
water	41:18	0:0	8	(
water	41:19	0:0	8	s
op	41:21	0:0	8	<
water	41:23	0:0	8	spp
water	41:26	0:0	8	)
op	41:28	0:0	8	&&
water	41:31	0:0	8	(
water	41:32	0:0	8	s
op	41:34	0:0	8	<
water	41:36	0:0	8	MAX_SAMPLES
water	41:47	0:0	8	)
forexpr	41:50	41:51	7	s ++
water	41:50	0:0	8	s
op	41:51	0:0	8	++
stmts	42:8	47:8	7	
water	42:8	0:0	8	{
water	43:8	0:0	8	src
op	43:12	0:0	8	=
water	43:14	0:0	8	srcbuffs
op	43:22	0:0	8	[
water	43:23	0:0	8	s
op	43:24	0:0	8	]
op	43:26	0:0	8	+
water	43:28	0:0	8	col_offset
water	43:38	0:0	8	;
for	44:8	45:33	8	(i = 0 ;i < bytes_per_sample;i ++)
forinit	44:13	44:18	9	i = 0 ;
water	44:13	0:0	10	i
op	44:15	0:0	10	=
water	44:17	0:0	10	0
water	44:18	0:0	10	;
cond	44:20	44:24	9	i < bytes_per_sample
water	44:20	0:0	10	i
op	44:22	0:0	10	<
water	44:24	0:0	10	bytes_per_sample
forexpr	44:42	44:43	9	i ++
water	44:42	0:0	10	i
op	44:43	0:0	10	++
stmts	45:10	45:33	9	
op	45:10	0:0	10	*
water	45:11	0:0	10	(
water	45:12	0:0	10	dst
op	45:16	0:0	10	+
water	45:18	0:0	10	i
water	45:19	0:0	10	)
op	45:21	0:0	10	=
op	45:23	0:0	10	*
water	45:24	0:0	10	(
water	45:25	0:0	10	src
op	45:29	0:0	10	+
water	45:31	0:0	10	i
water	45:32	0:0	10	)
water	45:33	0:0	10	;
water	46:8	0:0	8	dst
op	46:12	0:0	8	+=
water	46:15	0:0	8	bytes_per_sample
water	46:31	0:0	8	;
water	47:8	0:0	8	}
water	48:6	0:0	6	}
if	49:4	53:6	4	(( dumpfile != NULL ) && ( level == 2 ))
cond	49:8	49:41	5	( dumpfile != NULL ) && ( level == 2 )
water	49:8	0:0	6	(
water	49:9	0:0	6	dumpfile
op	49:18	0:0	6	!=
water	49:21	0:0	6	NULL
water	49:25	0:0	6	)
op	49:27	0:0	6	&&
water	49:30	0:0	6	(
water	49:31	0:0	6	level
op	49:37	0:0	6	==
water	49:40	0:0	6	2
water	49:41	0:0	6	)
stmts	50:6	53:6	5	
water	50:6	0:0	6	{
call	51:6	51:100	6	dump_info
arg	51:17	51:25	7	dumpfile
water	51:17	0:0	8	dumpfile
arg	51:27	51:33	7	format
water	51:27	0:0	8	format
arg	51:35	51:68	7	"combineSeparateTileSamplesBytes"
water	51:35	0:0	8	"combineSeparateTileSamplesBytes"
arg	51:69	51:100	7	"Output data, combined samples"
water	51:69	0:0	8	"Output data, combined samples"
water	51:101	0:0	6	;
call	52:6	52:82	6	dump_buffer
arg	52:18	52:26	7	dumpfile
water	52:18	0:0	8	dumpfile
arg	52:28	52:34	7	format
water	52:28	0:0	8	format
arg	52:36	52:37	7	1
water	52:36	0:0	8	1
arg	52:39	52:50	7	dst_rowsize
water	52:39	0:0	8	dst_rowsize
arg	52:52	52:55	7	row
water	52:52	0:0	8	row
arg	52:57	52:82	7	out+(row*dst_rowsize)
water	52:57	0:0	8	out
op	52:61	0:0	8	+
water	52:63	0:0	8	(
water	52:64	0:0	8	row
op	52:68	0:0	8	*
water	52:70	0:0	8	dst_rowsize
water	52:81	0:0	8	)
water	52:83	0:0	6	;
water	53:6	0:0	6	}
water	54:4	0:0	4	}
return	55:2	55:12	2	(0)
water	55:9	0:0	3	(
water	55:10	0:0	3	0
water	55:11	0:0	3	)

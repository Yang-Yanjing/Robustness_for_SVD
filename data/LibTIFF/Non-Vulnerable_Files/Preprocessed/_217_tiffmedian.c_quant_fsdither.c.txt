func	1:0	95:0	0	static void	quant_fsdither
params	2:14	0:0	1	
param	2:15	2:23	2	TIFF *	in
param	2:25	2:34	2	TIFF *	out
stmnts	0:0	94:19	1	
decl	4:1	4:43	2	unsigned char	*outline
water	4:23	0:0	2	,
decl	4:1	4:43	2	unsigned char	*inputline
water	4:35	0:0	2	,
decl	4:1	4:43	2	unsigned char	*inptr
decl	5:1	5:27	2	short	*thisline
water	5:16	0:0	2	,
decl	5:1	5:27	2	short	*nextline
water	6:1	0:0	2	register
water	6:10	0:0	2	unsigned
water	6:19	0:0	2	char
op	6:24	0:0	2	*
water	6:25	0:0	2	outptr
water	6:31	0:0	2	;
water	7:1	0:0	2	register
water	7:10	0:0	2	short
op	7:16	0:0	2	*
water	7:17	0:0	2	thisptr
water	7:24	0:0	2	,
op	7:26	0:0	2	*
water	7:27	0:0	2	nextptr
water	7:34	0:0	2	;
water	8:1	0:0	2	register
water	8:10	0:0	2	uint32
water	8:17	0:0	2	i
water	8:18	0:0	2	,
water	8:20	0:0	2	j
water	8:21	0:0	2	;
decl	9:1	9:18	2	uint32	imax
water	9:12	0:0	2	,
decl	9:1	9:18	2	uint32	jmax
decl	10:1	10:24	2	int	lastline
water	10:13	0:0	2	,
decl	10:1	10:24	2	int	lastpixel
water	11:1	0:0	2	imax
op	11:6	0:0	2	=
water	11:8	0:0	2	imagelength
op	11:20	0:0	2	-
water	11:22	0:0	2	1
water	11:23	0:0	2	;
water	12:1	0:0	2	jmax
op	12:6	0:0	2	=
water	12:8	0:0	2	imagewidth
op	12:19	0:0	2	-
water	12:21	0:0	2	1
water	12:22	0:0	2	;
water	13:1	0:0	2	inputline
op	13:11	0:0	2	=
water	13:13	0:0	2	(
water	13:14	0:0	2	unsigned
water	13:23	0:0	2	char
op	13:28	0:0	2	*
water	13:29	0:0	2	)
call	13:30	13:62	2	_TIFFmalloc
arg	13:42	13:62	3	TIFFScanlineSize(in)
call	13:42	13:61	4	TIFFScanlineSize
arg	13:59	13:61	5	in
water	13:59	0:0	6	in
water	13:63	0:0	2	;
water	14:1	0:0	2	thisline
op	14:10	0:0	2	=
water	14:12	0:0	2	(
water	14:13	0:0	2	short
op	14:19	0:0	2	*
water	14:20	0:0	2	)
call	14:21	14:64	2	_TIFFmalloc
arg	14:33	14:64	3	imagewidth*3*sizeof(short)
water	14:33	0:0	4	imagewidth
op	14:44	0:0	4	*
water	14:46	0:0	4	3
op	14:48	0:0	4	*
op	14:50	0:0	4	sizeof
water	14:57	0:0	4	(
water	14:58	0:0	4	short
water	14:63	0:0	4	)
water	14:65	0:0	2	;
water	15:1	0:0	2	nextline
op	15:10	0:0	2	=
water	15:12	0:0	2	(
water	15:13	0:0	2	short
op	15:19	0:0	2	*
water	15:20	0:0	2	)
call	15:21	15:64	2	_TIFFmalloc
arg	15:33	15:64	3	imagewidth*3*sizeof(short)
water	15:33	0:0	4	imagewidth
op	15:44	0:0	4	*
water	15:46	0:0	4	3
op	15:48	0:0	4	*
op	15:50	0:0	4	sizeof
water	15:57	0:0	4	(
water	15:58	0:0	4	short
water	15:63	0:0	4	)
water	15:65	0:0	2	;
water	16:1	0:0	2	outline
op	16:9	0:0	2	=
water	16:11	0:0	2	(
water	16:12	0:0	2	unsigned
water	16:21	0:0	2	char
op	16:26	0:0	2	*
water	16:27	0:0	2	)
call	16:29	16:62	2	_TIFFmalloc
arg	16:41	16:62	3	TIFFScanlineSize(out)
call	16:41	16:61	4	TIFFScanlineSize
arg	16:58	16:61	5	out
water	16:58	0:0	6	out
water	16:63	0:0	2	;
call	17:1	17:29	2	GetInputLine
arg	17:14	17:16	3	in
water	17:14	0:0	4	in
arg	17:18	17:19	3	0
water	17:18	0:0	4	0
arg	17:21	17:29	3	gotobad
water	17:21	0:0	4	goto
water	17:26	0:0	4	bad
water	17:30	0:0	2	;
for	18:1	89:1	2	(i = 1 ;i <= imagelength;++ i)
forinit	18:6	18:11	3	i = 1 ;
water	18:6	0:0	4	i
op	18:8	0:0	4	=
water	18:10	0:0	4	1
water	18:11	0:0	4	;
cond	18:13	18:18	3	i <= imagelength
water	18:13	0:0	4	i
op	18:15	0:0	4	<=
water	18:18	0:0	4	imagelength
forexpr	18:31	18:33	3	++ i
op	18:31	0:0	4	++
water	18:33	0:0	4	i
stmts	18:36	89:1	3	
water	18:36	0:0	4	{
call	19:2	19:34	4	SWAP
arg	19:7	19:14	5	short*
water	19:7	0:0	6	short
op	19:13	0:0	6	*
arg	19:16	19:24	5	thisline
water	19:16	0:0	6	thisline
arg	19:26	19:34	5	nextline
water	19:26	0:0	6	nextline
water	19:35	0:0	4	;
water	20:2	0:0	4	lastline
op	20:11	0:0	4	=
water	20:13	0:0	4	(
water	20:14	0:0	4	i
op	20:16	0:0	4	>=
water	20:19	0:0	4	imax
water	20:23	0:0	4	)
water	20:24	0:0	4	;
if	21:2	22:29	4	(i <= imax)
cond	21:6	21:11	5	i <= imax
water	21:6	0:0	6	i
op	21:8	0:0	6	<=
water	21:11	0:0	6	imax
stmts	22:3	22:29	5	
call	22:3	22:28	6	GetInputLine
arg	22:16	22:18	7	in
water	22:16	0:0	8	in
arg	22:20	22:21	7	i
water	22:20	0:0	8	i
arg	22:23	22:28	7	break
water	22:23	0:0	8	break
water	22:29	0:0	6	;
water	23:2	0:0	4	thisptr
op	23:10	0:0	4	=
water	23:12	0:0	4	thisline
water	23:20	0:0	4	;
water	24:2	0:0	4	nextptr
op	24:10	0:0	4	=
water	24:12	0:0	4	nextline
water	24:20	0:0	4	;
water	25:2	0:0	4	outptr
op	25:9	0:0	4	=
water	25:11	0:0	4	outline
water	25:18	0:0	4	;
for	26:2	86:2	4	(j = 0 ;j < imagewidth;++ j)
forinit	26:7	26:12	5	j = 0 ;
water	26:7	0:0	6	j
op	26:9	0:0	6	=
water	26:11	0:0	6	0
water	26:12	0:0	6	;
cond	26:14	26:18	5	j < imagewidth
water	26:14	0:0	6	j
op	26:16	0:0	6	<
water	26:18	0:0	6	imagewidth
forexpr	26:30	26:32	5	++ j
op	26:30	0:0	6	++
water	26:32	0:0	6	j
stmts	26:35	86:2	5	
water	26:35	0:0	6	{
decl	27:3	27:23	6	int	red
water	27:10	0:0	6	,
decl	27:3	27:23	6	int	green
water	27:17	0:0	6	,
decl	27:3	27:23	6	int	blue
water	28:3	0:0	6	register
water	28:12	0:0	6	int
water	28:16	0:0	6	oval
water	28:20	0:0	6	,
water	28:22	0:0	6	r2
water	28:24	0:0	6	,
water	28:26	0:0	6	g2
water	28:28	0:0	6	,
water	28:30	0:0	6	b2
water	28:32	0:0	6	;
water	29:3	0:0	6	lastpixel
op	29:13	0:0	6	=
water	29:15	0:0	6	(
water	29:16	0:0	6	j
op	29:18	0:0	6	==
water	29:21	0:0	6	jmax
water	29:25	0:0	6	)
water	29:26	0:0	6	;
call	30:3	30:35	6	GetComponent
arg	30:16	30:26	7	*thisptr++
op	30:16	0:0	8	*
water	30:17	0:0	8	thisptr
op	30:24	0:0	8	++
arg	30:28	30:30	7	r2
water	30:28	0:0	8	r2
arg	30:32	30:35	7	red
water	30:32	0:0	8	red
water	30:36	0:0	6	;
call	31:3	31:37	6	GetComponent
arg	31:16	31:26	7	*thisptr++
op	31:16	0:0	8	*
water	31:17	0:0	8	thisptr
op	31:24	0:0	8	++
arg	31:28	31:30	7	g2
water	31:28	0:0	8	g2
arg	31:32	31:37	7	green
water	31:32	0:0	8	green
water	31:38	0:0	6	;
call	32:3	32:36	6	GetComponent
arg	32:16	32:26	7	*thisptr++
op	32:16	0:0	8	*
water	32:17	0:0	8	thisptr
op	32:24	0:0	8	++
arg	32:28	32:30	7	b2
water	32:28	0:0	8	b2
arg	32:32	32:36	7	blue
water	32:32	0:0	8	blue
water	32:37	0:0	6	;
water	33:3	0:0	6	oval
op	33:8	0:0	6	=
water	33:10	0:0	6	histogram
op	33:19	0:0	6	[
water	33:20	0:0	6	r2
op	33:22	0:0	6	]
op	33:23	0:0	6	[
water	33:24	0:0	6	g2
op	33:26	0:0	6	]
op	33:27	0:0	6	[
water	33:28	0:0	6	b2
op	33:30	0:0	6	]
water	33:31	0:0	6	;
if	34:3	60:3	6	(oval == - 1)
cond	34:7	34:16	7	oval == - 1
water	34:7	0:0	8	oval
op	34:12	0:0	8	==
op	34:15	0:0	8	-
water	34:16	0:0	8	1
stmts	34:19	60:3	7	
water	34:19	0:0	8	{
decl	35:4	35:10	8	int	ci
water	36:4	0:0	8	register
water	36:13	0:0	8	int
water	36:17	0:0	8	cj
water	36:19	0:0	8	,
water	36:21	0:0	8	tmp
water	36:24	0:0	8	,
water	36:26	0:0	8	d2
water	36:28	0:0	8	,
water	36:30	0:0	8	dist
water	36:34	0:0	8	;
water	37:4	0:0	8	register
water	37:13	0:0	8	C_cell
op	37:20	0:0	8	*
water	37:21	0:0	8	cell
water	37:25	0:0	8	;
water	38:4	0:0	8	cell
op	38:9	0:0	8	=
op	38:11	0:0	8	*
water	38:12	0:0	8	(
water	38:13	0:0	8	ColorCells
op	38:24	0:0	8	+
water	39:8	0:0	8	(
water	39:9	0:0	8	(
water	39:10	0:0	8	(
water	39:11	0:0	8	r2
op	39:13	0:0	8	>>
water	39:15	0:0	8	(
water	39:16	0:0	8	B_DEPTH
op	39:23	0:0	8	-
water	39:24	0:0	8	C_DEPTH
water	39:31	0:0	8	)
water	39:32	0:0	8	)
op	39:34	0:0	8	<<
water	39:37	0:0	8	C_DEPTH
op	39:44	0:0	8	*
water	39:45	0:0	8	2
water	39:46	0:0	8	)
op	39:48	0:0	8	+
water	40:8	0:0	8	(
water	40:9	0:0	8	(
water	40:10	0:0	8	g2
op	40:12	0:0	8	>>
water	40:14	0:0	8	(
water	40:15	0:0	8	B_DEPTH
op	40:22	0:0	8	-
water	40:23	0:0	8	C_DEPTH
water	40:30	0:0	8	)
water	40:31	0:0	8	)
op	40:33	0:0	8	<<
water	40:36	0:0	8	C_DEPTH
water	40:44	0:0	8	)
op	40:46	0:0	8	+
water	41:8	0:0	8	(
water	41:9	0:0	8	b2
op	41:11	0:0	8	>>
water	41:13	0:0	8	(
water	41:14	0:0	8	B_DEPTH
op	41:21	0:0	8	-
water	41:22	0:0	8	C_DEPTH
water	41:29	0:0	8	)
water	41:30	0:0	8	)
water	41:31	0:0	8	)
water	41:32	0:0	8	)
water	41:33	0:0	8	;
if	42:4	44:21	8	(cell == NULL)
cond	42:8	42:16	9	cell == NULL
water	42:8	0:0	10	cell
op	42:13	0:0	10	==
water	42:16	0:0	10	NULL
stmts	43:5	44:21	9	
water	43:5	0:0	10	cell
op	43:10	0:0	10	=
call	43:12	44:20	10	create_colorcell
arg	43:29	43:32	11	red
water	43:29	0:0	12	red
arg	44:9	44:14	11	green
water	44:9	0:0	12	green
arg	44:16	44:20	11	blue
water	44:16	0:0	12	blue
water	44:21	0:0	10	;
water	45:4	0:0	8	dist
op	45:9	0:0	8	=
water	45:11	0:0	8	9999999
water	45:18	0:0	8	;
for	46:4	58:4	8	(ci = 0 ;ci < cell -> num_ents && dist > cell -> entries [ ci ] [ 1 ];++ ci)
forinit	46:9	46:15	9	ci = 0 ;
water	46:9	0:0	10	ci
op	46:12	0:0	10	=
water	46:14	0:0	10	0
water	46:15	0:0	10	;
cond	46:17	46:66	9	ci < cell -> num_ents && dist > cell -> entries [ ci ] [ 1 ]
water	46:17	0:0	10	ci
op	46:20	0:0	10	<
water	46:22	0:0	10	cell
op	46:26	0:0	10	->
water	46:28	0:0	10	num_ents
op	46:37	0:0	10	&&
water	46:40	0:0	10	dist
op	46:45	0:0	10	>
water	46:47	0:0	10	cell
op	46:51	0:0	10	->
water	46:53	0:0	10	entries
op	46:60	0:0	10	[
water	46:61	0:0	10	ci
op	46:63	0:0	10	]
op	46:64	0:0	10	[
water	46:65	0:0	10	1
op	46:66	0:0	10	]
forexpr	46:69	46:71	9	++ ci
op	46:69	0:0	10	++
water	46:71	0:0	10	ci
stmts	46:75	58:4	9	
water	46:75	0:0	10	{
water	47:5	0:0	10	cj
op	47:8	0:0	10	=
water	47:10	0:0	10	cell
op	47:14	0:0	10	->
water	47:16	0:0	10	entries
op	47:23	0:0	10	[
water	47:24	0:0	10	ci
op	47:26	0:0	10	]
op	47:27	0:0	10	[
water	47:28	0:0	10	0
op	47:29	0:0	10	]
water	47:30	0:0	10	;
water	48:5	0:0	10	d2
op	48:8	0:0	10	=
water	48:10	0:0	10	(
water	48:11	0:0	10	rm
op	48:13	0:0	10	[
water	48:14	0:0	10	cj
op	48:16	0:0	10	]
op	48:18	0:0	10	>>
water	48:21	0:0	10	COLOR_SHIFT
water	48:32	0:0	10	)
op	48:34	0:0	10	-
water	48:36	0:0	10	r2
water	48:38	0:0	10	;
water	49:5	0:0	10	d2
op	49:8	0:0	10	*=
water	49:11	0:0	10	d2
water	49:13	0:0	10	;
water	50:5	0:0	10	tmp
op	50:9	0:0	10	=
water	50:11	0:0	10	(
water	50:12	0:0	10	gm
op	50:14	0:0	10	[
water	50:15	0:0	10	cj
op	50:17	0:0	10	]
op	50:19	0:0	10	>>
water	50:22	0:0	10	COLOR_SHIFT
water	50:33	0:0	10	)
op	50:35	0:0	10	-
water	50:37	0:0	10	g2
water	50:39	0:0	10	;
water	51:5	0:0	10	d2
op	51:8	0:0	10	+=
water	51:11	0:0	10	tmp
op	51:14	0:0	10	*
water	51:15	0:0	10	tmp
water	51:18	0:0	10	;
water	52:5	0:0	10	tmp
op	52:9	0:0	10	=
water	52:11	0:0	10	(
water	52:12	0:0	10	bm
op	52:14	0:0	10	[
water	52:15	0:0	10	cj
op	52:17	0:0	10	]
op	52:19	0:0	10	>>
water	52:22	0:0	10	COLOR_SHIFT
water	52:33	0:0	10	)
op	52:35	0:0	10	-
water	52:37	0:0	10	b2
water	52:39	0:0	10	;
water	53:5	0:0	10	d2
op	53:8	0:0	10	+=
water	53:11	0:0	10	tmp
op	53:14	0:0	10	*
water	53:15	0:0	10	tmp
water	53:18	0:0	10	;
if	54:5	57:5	10	(d2 < dist)
cond	54:9	54:14	11	d2 < dist
water	54:9	0:0	12	d2
op	54:12	0:0	12	<
water	54:14	0:0	12	dist
stmts	54:20	57:5	11	
water	54:20	0:0	12	{
water	55:6	0:0	12	dist
op	55:11	0:0	12	=
water	55:13	0:0	12	d2
water	55:15	0:0	12	;
water	56:6	0:0	12	oval
op	56:11	0:0	12	=
water	56:13	0:0	12	cj
water	56:15	0:0	12	;
water	57:5	0:0	12	}
water	58:4	0:0	10	}
water	59:4	0:0	8	histogram
op	59:13	0:0	8	[
water	59:14	0:0	8	r2
op	59:16	0:0	8	]
op	59:17	0:0	8	[
water	59:18	0:0	8	g2
op	59:20	0:0	8	]
op	59:21	0:0	8	[
water	59:22	0:0	8	b2
op	59:24	0:0	8	]
op	59:26	0:0	8	=
water	59:28	0:0	8	oval
water	59:32	0:0	8	;
water	60:3	0:0	8	}
op	61:3	0:0	6	*
water	61:4	0:0	6	outptr
op	61:10	0:0	6	++
op	61:13	0:0	6	=
water	61:15	0:0	6	oval
water	61:19	0:0	6	;
water	62:3	0:0	6	red
op	62:7	0:0	6	-=
water	62:10	0:0	6	rm
op	62:12	0:0	6	[
water	62:13	0:0	6	oval
op	62:17	0:0	6	]
water	62:18	0:0	6	;
water	63:3	0:0	6	green
op	63:9	0:0	6	-=
water	63:12	0:0	6	gm
op	63:14	0:0	6	[
water	63:15	0:0	6	oval
op	63:19	0:0	6	]
water	63:20	0:0	6	;
water	64:3	0:0	6	blue
op	64:8	0:0	6	-=
water	64:11	0:0	6	bm
op	64:13	0:0	6	[
water	64:14	0:0	6	oval
op	64:18	0:0	6	]
water	64:19	0:0	6	;
if	65:3	69:3	6	(! lastpixel)
cond	65:7	65:8	7	! lastpixel
op	65:7	0:0	8	!
water	65:8	0:0	8	lastpixel
stmts	65:19	69:3	7	
water	65:19	0:0	8	{
water	66:4	0:0	8	thisptr
op	66:11	0:0	8	[
water	66:12	0:0	8	0
op	66:13	0:0	8	]
op	66:15	0:0	8	+=
water	66:18	0:0	8	blue
op	66:23	0:0	8	*
water	66:25	0:0	8	7
op	66:27	0:0	8	/
water	66:29	0:0	8	16
water	66:31	0:0	8	;
water	67:4	0:0	8	thisptr
op	67:11	0:0	8	[
water	67:12	0:0	8	1
op	67:13	0:0	8	]
op	67:15	0:0	8	+=
water	67:18	0:0	8	green
op	67:24	0:0	8	*
water	67:26	0:0	8	7
op	67:28	0:0	8	/
water	67:30	0:0	8	16
water	67:32	0:0	8	;
water	68:4	0:0	8	thisptr
op	68:11	0:0	8	[
water	68:12	0:0	8	2
op	68:13	0:0	8	]
op	68:15	0:0	8	+=
water	68:18	0:0	8	red
op	68:22	0:0	8	*
water	68:24	0:0	8	7
op	68:26	0:0	8	/
water	68:28	0:0	8	16
water	68:30	0:0	8	;
water	69:3	0:0	8	}
if	70:3	85:3	6	(! lastline)
cond	70:7	70:8	7	! lastline
op	70:7	0:0	8	!
water	70:8	0:0	8	lastline
stmts	70:18	85:3	7	
water	70:18	0:0	8	{
if	71:4	75:4	8	(j != 0)
cond	71:8	71:13	9	j != 0
water	71:8	0:0	10	j
op	71:10	0:0	10	!=
water	71:13	0:0	10	0
stmts	71:16	75:4	9	
water	71:16	0:0	10	{
water	72:5	0:0	10	nextptr
op	72:12	0:0	10	[
op	72:13	0:0	10	-
water	72:14	0:0	10	3
op	72:15	0:0	10	]
op	72:17	0:0	10	+=
water	72:20	0:0	10	blue
op	72:25	0:0	10	*
water	72:27	0:0	10	3
op	72:29	0:0	10	/
water	72:31	0:0	10	16
water	72:33	0:0	10	;
water	73:5	0:0	10	nextptr
op	73:12	0:0	10	[
op	73:13	0:0	10	-
water	73:14	0:0	10	2
op	73:15	0:0	10	]
op	73:17	0:0	10	+=
water	73:20	0:0	10	green
op	73:26	0:0	10	*
water	73:28	0:0	10	3
op	73:30	0:0	10	/
water	73:32	0:0	10	16
water	73:34	0:0	10	;
water	74:5	0:0	10	nextptr
op	74:12	0:0	10	[
op	74:13	0:0	10	-
water	74:14	0:0	10	1
op	74:15	0:0	10	]
op	74:17	0:0	10	+=
water	74:20	0:0	10	red
op	74:24	0:0	10	*
water	74:26	0:0	10	3
op	74:28	0:0	10	/
water	74:30	0:0	10	16
water	74:32	0:0	10	;
water	75:4	0:0	10	}
water	76:4	0:0	8	nextptr
op	76:11	0:0	8	[
water	76:12	0:0	8	0
op	76:13	0:0	8	]
op	76:15	0:0	8	+=
water	76:18	0:0	8	blue
op	76:23	0:0	8	*
water	76:25	0:0	8	5
op	76:27	0:0	8	/
water	76:29	0:0	8	16
water	76:31	0:0	8	;
water	77:4	0:0	8	nextptr
op	77:11	0:0	8	[
water	77:12	0:0	8	1
op	77:13	0:0	8	]
op	77:15	0:0	8	+=
water	77:18	0:0	8	green
op	77:24	0:0	8	*
water	77:26	0:0	8	5
op	77:28	0:0	8	/
water	77:30	0:0	8	16
water	77:32	0:0	8	;
water	78:4	0:0	8	nextptr
op	78:11	0:0	8	[
water	78:12	0:0	8	2
op	78:13	0:0	8	]
op	78:15	0:0	8	+=
water	78:18	0:0	8	red
op	78:22	0:0	8	*
water	78:24	0:0	8	5
op	78:26	0:0	8	/
water	78:28	0:0	8	16
water	78:30	0:0	8	;
if	79:4	83:4	8	(! lastpixel)
cond	79:8	79:9	9	! lastpixel
op	79:8	0:0	10	!
water	79:9	0:0	10	lastpixel
stmts	79:20	83:4	9	
water	79:20	0:0	10	{
water	80:5	0:0	10	nextptr
op	80:12	0:0	10	[
water	80:13	0:0	10	3
op	80:14	0:0	10	]
op	80:16	0:0	10	+=
water	80:19	0:0	10	blue
op	80:24	0:0	10	/
water	80:26	0:0	10	16
water	80:28	0:0	10	;
water	81:12	0:0	10	nextptr
op	81:19	0:0	10	[
water	81:20	0:0	10	4
op	81:21	0:0	10	]
op	81:23	0:0	10	+=
water	81:26	0:0	10	green
op	81:32	0:0	10	/
water	81:34	0:0	10	16
water	81:36	0:0	10	;
water	82:12	0:0	10	nextptr
op	82:19	0:0	10	[
water	82:20	0:0	10	5
op	82:21	0:0	10	]
op	82:23	0:0	10	+=
water	82:26	0:0	10	red
op	82:30	0:0	10	/
water	82:32	0:0	10	16
water	82:34	0:0	10	;
water	83:4	0:0	10	}
water	84:4	0:0	8	nextptr
op	84:12	0:0	8	+=
water	84:15	0:0	8	3
water	84:16	0:0	8	;
water	85:3	0:0	8	}
water	86:2	0:0	6	}
if	87:2	88:8	4	(TIFFWriteScanline (out ,outline ,i - 1 ,0 ) < 0)
cond	87:6	87:48	5	TIFFWriteScanline (out ,outline ,i - 1 ,0 ) < 0
call	87:6	87:44	6	TIFFWriteScanline
arg	87:24	87:27	7	out
water	87:24	0:0	8	out
arg	87:29	87:36	7	outline
water	87:29	0:0	8	outline
arg	87:38	87:41	7	i-1
water	87:38	0:0	8	i
op	87:39	0:0	8	-
water	87:40	0:0	8	1
arg	87:43	87:44	7	0
water	87:43	0:0	8	0
op	87:46	0:0	6	<
water	87:48	0:0	6	0
stmts	88:3	88:8	5	
break	88:3	88:8	6	
water	89:1	0:0	4	}
label	90:0	90:3	2	bad :
call	91:1	91:20	2	_TIFFfree
arg	91:11	91:20	3	inputline
water	91:11	0:0	4	inputline
water	91:21	0:0	2	;
call	92:1	92:19	2	_TIFFfree
arg	92:11	92:19	3	thisline
water	92:11	0:0	4	thisline
water	92:20	0:0	2	;
call	93:1	93:19	2	_TIFFfree
arg	93:11	93:19	3	nextline
water	93:11	0:0	4	nextline
water	93:20	0:0	2	;
call	94:1	94:18	2	_TIFFfree
arg	94:11	94:18	3	outline
water	94:11	0:0	4	outline
water	94:19	0:0	2	;

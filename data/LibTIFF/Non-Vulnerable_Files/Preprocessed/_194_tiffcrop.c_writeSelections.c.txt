func	1:0	101:2	0	static int	writeSelections
params	2:15	0:0	1	
param	2:16	2:24	2	TIFF *	in
param	2:26	2:36	2	TIFF * *	out
param	2:38	2:60	2	struct crop_mask *	crop
param	3:16	3:40	2	struct image_data *	image
param	3:42	3:64	2	struct dump_opts *	dump
param	4:16	4:43	2	struct buffinfo	seg_buffs[]
param	4:45	4:53	2	char *	mp
param	4:55	4:69	2	char *	filename
param	5:16	5:34	2	unsigned int *	page
param	5:36	5:60	2	unsigned int	total_pages
stmnts	0:0	100:12	1	
decl	7:2	7:19	2	int	i
water	7:7	0:0	2	,
decl	7:2	7:19	2	int	page_count
decl	8:2	8:19	2	int	autoindex
op	8:16	0:0	2	=
water	8:18	0:0	2	0
decl	9:2	9:33	2	unsigned char	*crop_buff
op	9:27	0:0	2	=
water	9:29	0:0	2	NULL
switch	11:2	99:4	2	(crop -> exp_mode)
cond	11:10	11:16	3	crop -> exp_mode
water	11:10	0:0	4	crop
op	11:14	0:0	4	->
water	11:16	0:0	4	exp_mode
stmts	12:4	99:4	3	
water	12:4	0:0	4	{
label	13:4	13:27	4	case ONE_FILE_COMPOSITE :
water	14:9	0:0	4	autoindex
op	14:19	0:0	4	=
water	14:21	0:0	4	0
water	14:22	0:0	4	;
water	15:9	0:0	4	crop_buff
op	15:19	0:0	4	=
water	15:21	0:0	4	seg_buffs
op	15:30	0:0	4	[
water	15:31	0:0	4	0
op	15:32	0:0	4	]
op	15:33	0:0	4	.
water	15:34	0:0	4	buffer
water	15:40	0:0	4	;
if	16:9	17:21	4	(update_output_file (out ,mp ,autoindex ,filename ,page ))
cond	16:13	16:67	5	update_output_file (out ,mp ,autoindex ,filename ,page )
call	16:13	16:67	6	update_output_file
arg	16:33	16:36	7	out
water	16:33	0:0	8	out
arg	16:38	16:40	7	mp
water	16:38	0:0	8	mp
arg	16:42	16:51	7	autoindex
water	16:42	0:0	8	autoindex
arg	16:53	16:61	7	filename
water	16:53	0:0	8	filename
arg	16:63	16:67	7	page
water	16:63	0:0	8	page
stmts	17:11	17:21	5	
return	17:11	17:21	6	(1)
water	17:18	0:0	7	(
water	17:19	0:0	7	1
water	17:20	0:0	7	)
water	18:9	0:0	4	page_count
op	18:20	0:0	4	=
water	18:22	0:0	4	total_pages
water	18:33	0:0	4	;
if	19:9	26:13	4	(writeCroppedImage (in ,* out ,image ,dump ,crop -> combined_width ,crop -> combined_length ,crop_buff ,* page ,total_pages ))
cond	19:13	22:60	5	writeCroppedImage (in ,* out ,image ,dump ,crop -> combined_width ,crop -> combined_length ,crop_buff ,* page ,total_pages )
call	19:13	22:60	6	writeCroppedImage
arg	19:31	19:33	7	in
water	19:31	0:0	8	in
arg	19:35	19:39	7	*out
op	19:35	0:0	8	*
water	19:36	0:0	8	out
arg	19:41	19:46	7	image
water	19:41	0:0	8	image
arg	19:48	19:52	7	dump
water	19:48	0:0	8	dump
arg	20:31	20:51	7	crop->combined_width
water	20:31	0:0	8	crop
op	20:35	0:0	8	->
water	20:37	0:0	8	combined_width
arg	21:31	21:52	7	crop->combined_length
water	21:31	0:0	8	crop
op	21:35	0:0	8	->
water	21:37	0:0	8	combined_length
arg	22:31	22:40	7	crop_buff
water	22:31	0:0	8	crop_buff
arg	22:42	22:47	7	*page
op	22:42	0:0	8	*
water	22:43	0:0	8	page
arg	22:49	22:60	7	total_pages
water	22:49	0:0	8	total_pages
stmts	23:12	26:13	5	
water	23:12	0:0	6	{
call	24:13	24:66	6	TIFFError
arg	24:23	24:37	7	"writeRegions"
water	24:23	0:0	8	"writeRegions"
arg	24:39	24:66	7	"Unable to write new image"
water	24:39	0:0	8	"Unable to write new image"
water	24:67	0:0	6	;
return	25:13	25:24	6	(-1)
water	25:20	0:0	7	(
op	25:21	0:0	7	-
water	25:22	0:0	7	1
water	25:23	0:0	7	)
water	26:13	0:0	6	}
break	27:2	27:7	4	
label	28:4	28:27	4	case ONE_FILE_SEPARATED :
water	29:9	0:0	4	autoindex
op	29:19	0:0	4	=
water	29:21	0:0	4	0
water	29:22	0:0	4	;
if	30:9	31:21	4	(update_output_file (out ,mp ,autoindex ,filename ,page ))
cond	30:13	30:67	5	update_output_file (out ,mp ,autoindex ,filename ,page )
call	30:13	30:67	6	update_output_file
arg	30:33	30:36	7	out
water	30:33	0:0	8	out
arg	30:38	30:40	7	mp
water	30:38	0:0	8	mp
arg	30:42	30:51	7	autoindex
water	30:42	0:0	8	autoindex
arg	30:53	30:61	7	filename
water	30:53	0:0	8	filename
arg	30:63	30:67	7	page
water	30:63	0:0	8	page
stmts	31:11	31:21	5	
return	31:11	31:21	6	(1)
water	31:18	0:0	7	(
water	31:19	0:0	7	1
water	31:20	0:0	7	)
water	32:9	0:0	4	page_count
op	32:20	0:0	4	=
water	32:22	0:0	4	crop
op	32:26	0:0	4	->
water	32:28	0:0	4	selections
op	32:39	0:0	4	*
water	32:41	0:0	4	total_pages
water	32:52	0:0	4	;
for	33:9	44:4	4	(i = 0 ;i < crop -> selections;i ++)
forinit	33:14	33:19	5	i = 0 ;
water	33:14	0:0	6	i
op	33:16	0:0	6	=
water	33:18	0:0	6	0
water	33:19	0:0	6	;
cond	33:21	33:31	5	i < crop -> selections
water	33:21	0:0	6	i
op	33:23	0:0	6	<
water	33:25	0:0	6	crop
op	33:29	0:0	6	->
water	33:31	0:0	6	selections
forexpr	33:43	33:44	5	i ++
water	33:43	0:0	6	i
op	33:44	0:0	6	++
stmts	34:11	44:4	5	
water	34:11	0:0	6	{
water	35:11	0:0	6	crop_buff
op	35:21	0:0	6	=
water	35:23	0:0	6	seg_buffs
op	35:32	0:0	6	[
water	35:33	0:0	6	i
op	35:34	0:0	6	]
op	35:35	0:0	6	.
water	35:36	0:0	6	buffer
water	35:42	0:0	6	;
if	36:11	43:13	6	(writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count ))
cond	36:15	39:61	7	writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count )
call	36:15	39:61	8	writeCroppedImage
arg	36:33	36:35	9	in
water	36:33	0:0	10	in
arg	36:37	36:41	9	*out
op	36:37	0:0	10	*
water	36:38	0:0	10	out
arg	36:43	36:48	9	image
water	36:43	0:0	10	image
arg	36:50	36:54	9	dump
water	36:50	0:0	10	dump
arg	37:33	37:58	9	crop->regionlist[i].width
water	37:33	0:0	10	crop
op	37:37	0:0	10	->
water	37:39	0:0	10	regionlist
op	37:49	0:0	10	[
water	37:50	0:0	10	i
op	37:51	0:0	10	]
op	37:52	0:0	10	.
water	37:53	0:0	10	width
arg	38:33	38:59	9	crop->regionlist[i].length
water	38:33	0:0	10	crop
op	38:37	0:0	10	->
water	38:39	0:0	10	regionlist
op	38:49	0:0	10	[
water	38:50	0:0	10	i
op	38:51	0:0	10	]
op	38:52	0:0	10	.
water	38:53	0:0	10	length
arg	39:33	39:42	9	crop_buff
water	39:33	0:0	10	crop_buff
arg	39:44	39:49	9	*page
op	39:44	0:0	10	*
water	39:45	0:0	10	page
arg	39:51	39:61	9	page_count
water	39:51	0:0	10	page_count
stmts	40:13	43:13	7	
water	40:13	0:0	8	{
call	41:13	41:66	8	TIFFError
arg	41:23	41:37	9	"writeRegions"
water	41:23	0:0	10	"writeRegions"
arg	41:39	41:66	9	"Unable to write new image"
water	41:39	0:0	10	"Unable to write new image"
water	41:67	0:0	8	;
return	42:13	42:24	8	(-1)
water	42:20	0:0	9	(
op	42:21	0:0	9	-
water	42:22	0:0	9	1
water	42:23	0:0	9	)
water	43:13	0:0	8	}
water	44:4	0:0	6	}
break	45:9	45:14	4	
label	46:4	46:33	4	case FILE_PER_IMAGE_COMPOSITE :
water	47:9	0:0	4	autoindex
op	47:19	0:0	4	=
water	47:21	0:0	4	1
water	47:22	0:0	4	;
if	48:9	49:21	4	(update_output_file (out ,mp ,autoindex ,filename ,page ))
cond	48:13	48:67	5	update_output_file (out ,mp ,autoindex ,filename ,page )
call	48:13	48:67	6	update_output_file
arg	48:33	48:36	7	out
water	48:33	0:0	8	out
arg	48:38	48:40	7	mp
water	48:38	0:0	8	mp
arg	48:42	48:51	7	autoindex
water	48:42	0:0	8	autoindex
arg	48:53	48:61	7	filename
water	48:53	0:0	8	filename
arg	48:63	48:67	7	page
water	48:63	0:0	8	page
stmts	49:11	49:21	5	
return	49:11	49:21	6	(1)
water	49:18	0:0	7	(
water	49:19	0:0	7	1
water	49:20	0:0	7	)
water	50:9	0:0	4	crop_buff
op	50:19	0:0	4	=
water	50:21	0:0	4	seg_buffs
op	50:30	0:0	4	[
water	50:31	0:0	4	0
op	50:32	0:0	4	]
op	50:33	0:0	4	.
water	50:34	0:0	4	buffer
water	50:40	0:0	4	;
if	51:9	58:11	4	(writeCroppedImage (in ,* out ,image ,dump ,crop -> combined_width ,crop -> combined_length ,crop_buff ,* page ,total_pages ))
cond	51:13	54:60	5	writeCroppedImage (in ,* out ,image ,dump ,crop -> combined_width ,crop -> combined_length ,crop_buff ,* page ,total_pages )
call	51:13	54:60	6	writeCroppedImage
arg	51:31	51:33	7	in
water	51:31	0:0	8	in
arg	51:35	51:39	7	*out
op	51:35	0:0	8	*
water	51:36	0:0	8	out
arg	51:41	51:46	7	image
water	51:41	0:0	8	image
arg	51:48	51:52	7	dump
water	51:48	0:0	8	dump
arg	52:31	52:51	7	crop->combined_width
water	52:31	0:0	8	crop
op	52:35	0:0	8	->
water	52:37	0:0	8	combined_width
arg	53:31	53:52	7	crop->combined_length
water	53:31	0:0	8	crop
op	53:35	0:0	8	->
water	53:37	0:0	8	combined_length
arg	54:31	54:40	7	crop_buff
water	54:31	0:0	8	crop_buff
arg	54:42	54:47	7	*page
op	54:42	0:0	8	*
water	54:43	0:0	8	page
arg	54:49	54:60	7	total_pages
water	54:49	0:0	8	total_pages
stmts	55:11	58:11	5	
water	55:11	0:0	6	{
call	56:11	56:64	6	TIFFError
arg	56:21	56:35	7	"writeRegions"
water	56:21	0:0	8	"writeRegions"
arg	56:37	56:64	7	"Unable to write new image"
water	56:37	0:0	8	"Unable to write new image"
water	56:65	0:0	6	;
return	57:11	57:22	6	(-1)
water	57:18	0:0	7	(
op	57:19	0:0	7	-
water	57:20	0:0	7	1
water	57:21	0:0	7	)
water	58:11	0:0	6	}
break	59:9	59:14	4	
label	60:4	60:33	4	case FILE_PER_IMAGE_SEPARATED :
water	61:9	0:0	4	autoindex
op	61:19	0:0	4	=
water	61:21	0:0	4	1
water	61:22	0:0	4	;
water	62:9	0:0	4	page_count
op	62:20	0:0	4	=
water	62:22	0:0	4	crop
op	62:26	0:0	4	->
water	62:28	0:0	4	selections
water	62:38	0:0	4	;
if	63:9	64:21	4	(update_output_file (out ,mp ,autoindex ,filename ,page ))
cond	63:13	63:67	5	update_output_file (out ,mp ,autoindex ,filename ,page )
call	63:13	63:67	6	update_output_file
arg	63:33	63:36	7	out
water	63:33	0:0	8	out
arg	63:38	63:40	7	mp
water	63:38	0:0	8	mp
arg	63:42	63:51	7	autoindex
water	63:42	0:0	8	autoindex
arg	63:53	63:61	7	filename
water	63:53	0:0	8	filename
arg	63:63	63:67	7	page
water	63:63	0:0	8	page
stmts	64:11	64:21	5	
return	64:11	64:21	6	(1)
water	64:18	0:0	7	(
water	64:19	0:0	7	1
water	64:20	0:0	7	)
for	65:9	77:11	4	(i = 0 ;i < crop -> selections;i ++)
forinit	65:14	65:19	5	i = 0 ;
water	65:14	0:0	6	i
op	65:16	0:0	6	=
water	65:18	0:0	6	0
water	65:19	0:0	6	;
cond	65:21	65:31	5	i < crop -> selections
water	65:21	0:0	6	i
op	65:23	0:0	6	<
water	65:25	0:0	6	crop
op	65:29	0:0	6	->
water	65:31	0:0	6	selections
forexpr	65:43	65:44	5	i ++
water	65:43	0:0	6	i
op	65:44	0:0	6	++
stmts	66:11	77:11	5	
water	66:11	0:0	6	{
water	67:11	0:0	6	crop_buff
op	67:21	0:0	6	=
water	67:23	0:0	6	seg_buffs
op	67:32	0:0	6	[
water	67:33	0:0	6	i
op	67:34	0:0	6	]
op	67:35	0:0	6	.
water	67:36	0:0	6	buffer
water	67:42	0:0	6	;
if	69:11	76:13	6	(writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count ))
cond	69:15	72:61	7	writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count )
call	69:15	72:61	8	writeCroppedImage
arg	69:33	69:35	9	in
water	69:33	0:0	10	in
arg	69:37	69:41	9	*out
op	69:37	0:0	10	*
water	69:38	0:0	10	out
arg	69:43	69:48	9	image
water	69:43	0:0	10	image
arg	69:50	69:54	9	dump
water	69:50	0:0	10	dump
arg	70:33	70:58	9	crop->regionlist[i].width
water	70:33	0:0	10	crop
op	70:37	0:0	10	->
water	70:39	0:0	10	regionlist
op	70:49	0:0	10	[
water	70:50	0:0	10	i
op	70:51	0:0	10	]
op	70:52	0:0	10	.
water	70:53	0:0	10	width
arg	71:33	71:59	9	crop->regionlist[i].length
water	71:33	0:0	10	crop
op	71:37	0:0	10	->
water	71:39	0:0	10	regionlist
op	71:49	0:0	10	[
water	71:50	0:0	10	i
op	71:51	0:0	10	]
op	71:52	0:0	10	.
water	71:53	0:0	10	length
arg	72:33	72:42	9	crop_buff
water	72:33	0:0	10	crop_buff
arg	72:44	72:49	9	*page
op	72:44	0:0	10	*
water	72:45	0:0	10	page
arg	72:51	72:61	9	page_count
water	72:51	0:0	10	page_count
stmts	73:13	76:13	7	
water	73:13	0:0	8	{
call	74:13	74:66	8	TIFFError
arg	74:23	74:37	9	"writeRegions"
water	74:23	0:0	10	"writeRegions"
arg	74:39	74:66	9	"Unable to write new image"
water	74:39	0:0	10	"Unable to write new image"
water	74:67	0:0	8	;
return	75:13	75:24	8	(-1)
water	75:20	0:0	9	(
op	75:21	0:0	9	-
water	75:22	0:0	9	1
water	75:23	0:0	9	)
water	76:13	0:0	8	}
water	77:11	0:0	6	}
break	78:9	78:14	4	
label	79:4	79:27	4	case FILE_PER_SELECTION :
water	80:9	0:0	4	autoindex
op	80:19	0:0	4	=
water	80:21	0:0	4	1
water	80:22	0:0	4	;
water	81:2	0:0	4	page_count
op	81:13	0:0	4	=
water	81:15	0:0	4	1
water	81:16	0:0	4	;
for	82:9	96:11	4	(i = 0 ;i < crop -> selections;i ++)
forinit	82:14	82:19	5	i = 0 ;
water	82:14	0:0	6	i
op	82:16	0:0	6	=
water	82:18	0:0	6	0
water	82:19	0:0	6	;
cond	82:21	82:31	5	i < crop -> selections
water	82:21	0:0	6	i
op	82:23	0:0	6	<
water	82:25	0:0	6	crop
op	82:29	0:0	6	->
water	82:31	0:0	6	selections
forexpr	82:43	82:44	5	i ++
water	82:43	0:0	6	i
op	82:44	0:0	6	++
stmts	83:11	96:11	5	
water	83:11	0:0	6	{
if	84:11	85:23	6	(update_output_file (out ,mp ,autoindex ,filename ,page ))
cond	84:15	84:69	7	update_output_file (out ,mp ,autoindex ,filename ,page )
call	84:15	84:69	8	update_output_file
arg	84:35	84:38	9	out
water	84:35	0:0	10	out
arg	84:40	84:42	9	mp
water	84:40	0:0	10	mp
arg	84:44	84:53	9	autoindex
water	84:44	0:0	10	autoindex
arg	84:55	84:63	9	filename
water	84:55	0:0	10	filename
arg	84:65	84:69	9	page
water	84:65	0:0	10	page
stmts	85:13	85:23	7	
return	85:13	85:23	8	(1)
water	85:20	0:0	9	(
water	85:21	0:0	9	1
water	85:22	0:0	9	)
water	86:11	0:0	6	crop_buff
op	86:21	0:0	6	=
water	86:23	0:0	6	seg_buffs
op	86:32	0:0	6	[
water	86:33	0:0	6	i
op	86:34	0:0	6	]
op	86:35	0:0	6	.
water	86:36	0:0	6	buffer
water	86:42	0:0	6	;
if	88:11	95:13	6	(writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count ))
cond	88:15	91:61	7	writeCroppedImage (in ,* out ,image ,dump ,crop -> regionlist [ i ] . width ,crop -> regionlist [ i ] . length ,crop_buff ,* page ,page_count )
call	88:15	91:61	8	writeCroppedImage
arg	88:33	88:35	9	in
water	88:33	0:0	10	in
arg	88:37	88:41	9	*out
op	88:37	0:0	10	*
water	88:38	0:0	10	out
arg	88:43	88:48	9	image
water	88:43	0:0	10	image
arg	88:50	88:54	9	dump
water	88:50	0:0	10	dump
arg	89:33	89:58	9	crop->regionlist[i].width
water	89:33	0:0	10	crop
op	89:37	0:0	10	->
water	89:39	0:0	10	regionlist
op	89:49	0:0	10	[
water	89:50	0:0	10	i
op	89:51	0:0	10	]
op	89:52	0:0	10	.
water	89:53	0:0	10	width
arg	90:33	90:59	9	crop->regionlist[i].length
water	90:33	0:0	10	crop
op	90:37	0:0	10	->
water	90:39	0:0	10	regionlist
op	90:49	0:0	10	[
water	90:50	0:0	10	i
op	90:51	0:0	10	]
op	90:52	0:0	10	.
water	90:53	0:0	10	length
arg	91:33	91:42	9	crop_buff
water	91:33	0:0	10	crop_buff
arg	91:44	91:49	9	*page
op	91:44	0:0	10	*
water	91:45	0:0	10	page
arg	91:51	91:61	9	page_count
water	91:51	0:0	10	page_count
stmts	92:13	95:13	7	
water	92:13	0:0	8	{
call	93:13	93:66	8	TIFFError
arg	93:23	93:37	9	"writeRegions"
water	93:23	0:0	10	"writeRegions"
arg	93:39	93:66	9	"Unable to write new image"
water	93:39	0:0	10	"Unable to write new image"
water	93:67	0:0	8	;
return	94:13	94:24	8	(-1)
water	94:20	0:0	9	(
op	94:21	0:0	9	-
water	94:22	0:0	9	1
water	94:23	0:0	9	)
water	95:13	0:0	8	}
water	96:11	0:0	6	}
break	97:2	97:7	4	
label	98:4	98:11	4	default :
return	98:13	98:23	4	(1)
water	98:20	0:0	5	(
water	98:21	0:0	5	1
water	98:22	0:0	5	)
water	99:4	0:0	4	}
return	100:2	100:12	2	(0)
water	100:9	0:0	3	(
water	100:10	0:0	3	0
water	100:11	0:0	3	)

func	1:0	52:2	0	static int	combineSeparateSamplesBytes
params	2:28	0:0	1	
param	2:29	2:54	2	unsigned char *	srcbuffs[]
param	2:56	2:74	2	unsigned char *	out
param	3:29	3:40	2	uint32	cols
param	3:42	3:53	2	uint32	rows
param	3:55	3:65	2	uint16	spp
param	3:67	3:77	2	uint16	bps
param	4:29	4:43	2	FILE *	dumpfile
param	4:45	4:55	2	int	format
param	4:57	4:66	2	int	level
stmnts	0:0	51:12	1	
decl	6:2	6:25	2	int	i
water	6:7	0:0	2	,
decl	6:2	6:25	2	int	bytes_per_sample
decl	7:2	7:67	2	uint32	row
water	7:12	0:0	2	,
decl	7:2	7:67	2	uint32	col
water	7:17	0:0	2	,
decl	7:2	7:67	2	uint32	col_offset
water	7:29	0:0	2	,
decl	7:2	7:67	2	uint32	src_rowsize
water	7:42	0:0	2	,
decl	7:2	7:67	2	uint32	dst_rowsize
water	7:55	0:0	2	,
decl	7:2	7:67	2	uint32	row_offset
decl	8:2	8:20	2	unsigned char	*src
decl	9:2	9:20	2	unsigned char	*dst
decl	10:2	10:13	2	tsample_t	s
water	11:2	0:0	2	src
op	11:6	0:0	2	=
water	11:8	0:0	2	srcbuffs
op	11:16	0:0	2	[
water	11:17	0:0	2	0
op	11:18	0:0	2	]
water	11:19	0:0	2	;
water	12:2	0:0	2	dst
op	12:6	0:0	2	=
water	12:8	0:0	2	out
water	12:11	0:0	2	;
if	13:2	17:4	2	(( src == NULL ) || ( dst == NULL ))
cond	13:6	13:35	3	( src == NULL ) || ( dst == NULL )
water	13:6	0:0	4	(
water	13:7	0:0	4	src
op	13:11	0:0	4	==
water	13:14	0:0	4	NULL
water	13:18	0:0	4	)
op	13:20	0:0	4	||
water	13:23	0:0	4	(
water	13:24	0:0	4	dst
op	13:28	0:0	4	==
water	13:31	0:0	4	NULL
water	13:35	0:0	4	)
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:4	15:68	4	TIFFError
arg	15:14	15:43	5	"combineSeparateSamplesBytes"
water	15:14	0:0	6	"combineSeparateSamplesBytes"
arg	15:44	15:68	5	"Invalid buffer address"
water	15:44	0:0	6	"Invalid buffer address"
water	15:69	0:0	4	;
return	16:4	16:14	4	(1)
water	16:11	0:0	5	(
water	16:12	0:0	5	1
water	16:13	0:0	5	)
water	17:4	0:0	4	}
water	18:2	0:0	2	bytes_per_sample
op	18:19	0:0	2	=
water	18:21	0:0	2	(
water	18:22	0:0	2	bps
op	18:26	0:0	2	+
water	18:28	0:0	2	7
water	18:29	0:0	2	)
op	18:31	0:0	2	/
water	18:33	0:0	2	8
water	18:34	0:0	2	;
water	19:2	0:0	2	src_rowsize
op	19:14	0:0	2	=
water	19:16	0:0	2	(
water	19:17	0:0	2	(
water	19:18	0:0	2	bps
op	19:22	0:0	2	*
water	19:24	0:0	2	cols
water	19:28	0:0	2	)
op	19:30	0:0	2	+
water	19:32	0:0	2	7
water	19:33	0:0	2	)
op	19:35	0:0	2	/
water	19:37	0:0	2	8
water	19:38	0:0	2	;
water	20:2	0:0	2	dst_rowsize
op	20:14	0:0	2	=
water	20:16	0:0	2	(
water	20:17	0:0	2	(
water	20:18	0:0	2	bps
op	20:22	0:0	2	*
water	20:24	0:0	2	spp
op	20:28	0:0	2	*
water	20:30	0:0	2	cols
water	20:34	0:0	2	)
op	20:36	0:0	2	+
water	20:38	0:0	2	7
water	20:39	0:0	2	)
op	20:41	0:0	2	/
water	20:43	0:0	2	8
water	20:44	0:0	2	;
for	21:2	50:4	2	(row = 0 ;row < rows;row ++)
forinit	21:7	21:14	3	row = 0 ;
water	21:7	0:0	4	row
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:22	3	row < rows
water	21:16	0:0	4	row
op	21:20	0:0	4	<
water	21:22	0:0	4	rows
forexpr	21:28	21:31	3	row ++
water	21:28	0:0	4	row
op	21:31	0:0	4	++
stmts	22:4	50:4	3	
water	22:4	0:0	4	{
if	23:4	30:6	4	(( dumpfile != NULL ) && ( level == 2 ))
cond	23:8	23:41	5	( dumpfile != NULL ) && ( level == 2 )
water	23:8	0:0	6	(
water	23:9	0:0	6	dumpfile
op	23:18	0:0	6	!=
water	23:21	0:0	6	NULL
water	23:25	0:0	6	)
op	23:27	0:0	6	&&
water	23:30	0:0	6	(
water	23:31	0:0	6	level
op	23:37	0:0	6	==
water	23:40	0:0	6	2
water	23:41	0:0	6	)
stmts	24:6	30:6	5	
water	24:6	0:0	6	{
for	25:6	29:8	6	(s = 0 ;s < spp;s ++)
forinit	25:11	25:16	7	s = 0 ;
water	25:11	0:0	8	s
op	25:13	0:0	8	=
water	25:15	0:0	8	0
water	25:16	0:0	8	;
cond	25:18	25:22	7	s < spp
water	25:18	0:0	8	s
op	25:20	0:0	8	<
water	25:22	0:0	8	spp
forexpr	25:27	25:28	7	s ++
water	25:27	0:0	8	s
op	25:28	0:0	8	++
stmts	26:8	29:8	7	
water	26:8	0:0	8	{
call	27:8	27:93	8	dump_info
arg	27:19	27:27	9	dumpfile
water	27:19	0:0	10	dumpfile
arg	27:29	27:35	9	format
water	27:29	0:0	10	format
arg	27:37	27:66	9	"combineSeparateSamplesBytes"
water	27:37	0:0	10	"combineSeparateSamplesBytes"
arg	27:67	27:90	9	"Input data, Sample %d"
water	27:67	0:0	10	"Input data, Sample %d"
arg	27:92	27:93	9	s
water	27:92	0:0	10	s
water	27:94	0:0	8	;
call	28:8	28:85	8	dump_buffer
arg	28:20	28:28	9	dumpfile
water	28:20	0:0	10	dumpfile
arg	28:30	28:36	9	format
water	28:30	0:0	10	format
arg	28:38	28:39	9	1
water	28:38	0:0	10	1
arg	28:41	28:45	9	cols
water	28:41	0:0	10	cols
arg	28:47	28:50	9	row
water	28:47	0:0	10	row
arg	28:52	28:85	9	srcbuffs[s]+(row*src_rowsize)
water	28:52	0:0	10	srcbuffs
op	28:60	0:0	10	[
water	28:61	0:0	10	s
op	28:62	0:0	10	]
op	28:64	0:0	10	+
water	28:66	0:0	10	(
water	28:67	0:0	10	row
op	28:71	0:0	10	*
water	28:73	0:0	10	src_rowsize
water	28:84	0:0	10	)
water	28:86	0:0	8	;
water	29:8	0:0	8	}
water	30:6	0:0	6	}
water	31:4	0:0	4	dst
op	31:8	0:0	4	=
water	31:10	0:0	4	out
op	31:14	0:0	4	+
water	31:16	0:0	4	(
water	31:17	0:0	4	row
op	31:21	0:0	4	*
water	31:23	0:0	4	dst_rowsize
water	31:34	0:0	4	)
water	31:35	0:0	4	;
water	32:4	0:0	4	row_offset
op	32:15	0:0	4	=
water	32:17	0:0	4	row
op	32:21	0:0	4	*
water	32:23	0:0	4	src_rowsize
water	32:34	0:0	4	;
for	33:4	44:6	4	(col = 0 ;col < cols;col ++)
forinit	33:9	33:16	5	col = 0 ;
water	33:9	0:0	6	col
op	33:13	0:0	6	=
water	33:15	0:0	6	0
water	33:16	0:0	6	;
cond	33:18	33:24	5	col < cols
water	33:18	0:0	6	col
op	33:22	0:0	6	<
water	33:24	0:0	6	cols
forexpr	33:30	33:33	5	col ++
water	33:30	0:0	6	col
op	33:33	0:0	6	++
stmts	34:6	44:6	5	
water	34:6	0:0	6	{
water	35:6	0:0	6	col_offset
op	35:17	0:0	6	=
water	35:19	0:0	6	row_offset
op	35:30	0:0	6	+
water	35:32	0:0	6	(
water	35:33	0:0	6	col
op	35:37	0:0	6	*
water	35:39	0:0	6	(
water	35:40	0:0	6	bps
op	35:44	0:0	6	/
water	35:46	0:0	6	8
water	35:47	0:0	6	)
water	35:48	0:0	6	)
water	35:49	0:0	6	;
for	36:6	43:8	6	(s = 0 ;( s < spp ) && ( s < MAX_SAMPLES );s ++)
forinit	36:11	36:16	7	s = 0 ;
water	36:11	0:0	8	s
op	36:13	0:0	8	=
water	36:15	0:0	8	0
water	36:16	0:0	8	;
cond	36:18	36:47	7	( s < spp ) && ( s < MAX_SAMPLES )
water	36:18	0:0	8	(
water	36:19	0:0	8	s
op	36:21	0:0	8	<
water	36:23	0:0	8	spp
water	36:26	0:0	8	)
op	36:28	0:0	8	&&
water	36:31	0:0	8	(
water	36:32	0:0	8	s
op	36:34	0:0	8	<
water	36:36	0:0	8	MAX_SAMPLES
water	36:47	0:0	8	)
forexpr	36:50	36:51	7	s ++
water	36:50	0:0	8	s
op	36:51	0:0	8	++
stmts	37:8	43:8	7	
water	37:8	0:0	8	{
water	38:8	0:0	8	src
op	38:12	0:0	8	=
water	38:14	0:0	8	srcbuffs
op	38:22	0:0	8	[
water	38:23	0:0	8	s
op	38:24	0:0	8	]
op	38:26	0:0	8	+
water	38:28	0:0	8	col_offset
water	38:38	0:0	8	;
for	39:8	40:33	8	(i = 0 ;i < bytes_per_sample;i ++)
forinit	39:13	39:18	9	i = 0 ;
water	39:13	0:0	10	i
op	39:15	0:0	10	=
water	39:17	0:0	10	0
water	39:18	0:0	10	;
cond	39:20	39:24	9	i < bytes_per_sample
water	39:20	0:0	10	i
op	39:22	0:0	10	<
water	39:24	0:0	10	bytes_per_sample
forexpr	39:42	39:43	9	i ++
water	39:42	0:0	10	i
op	39:43	0:0	10	++
stmts	40:10	40:33	9	
op	40:10	0:0	10	*
water	40:11	0:0	10	(
water	40:12	0:0	10	dst
op	40:16	0:0	10	+
water	40:18	0:0	10	i
water	40:19	0:0	10	)
op	40:21	0:0	10	=
op	40:23	0:0	10	*
water	40:24	0:0	10	(
water	40:25	0:0	10	src
op	40:29	0:0	10	+
water	40:31	0:0	10	i
water	40:32	0:0	10	)
water	40:33	0:0	10	;
water	41:8	0:0	8	src
op	41:12	0:0	8	+=
water	41:15	0:0	8	bytes_per_sample
water	41:31	0:0	8	;
water	42:8	0:0	8	dst
op	42:12	0:0	8	+=
water	42:15	0:0	8	bytes_per_sample
water	42:31	0:0	8	;
water	43:8	0:0	8	}
water	44:6	0:0	6	}
if	45:4	49:6	4	(( dumpfile != NULL ) && ( level == 2 ))
cond	45:8	45:41	5	( dumpfile != NULL ) && ( level == 2 )
water	45:8	0:0	6	(
water	45:9	0:0	6	dumpfile
op	45:18	0:0	6	!=
water	45:21	0:0	6	NULL
water	45:25	0:0	6	)
op	45:27	0:0	6	&&
water	45:30	0:0	6	(
water	45:31	0:0	6	level
op	45:37	0:0	6	==
water	45:40	0:0	6	2
water	45:41	0:0	6	)
stmts	46:6	49:6	5	
water	46:6	0:0	6	{
call	47:6	47:96	6	dump_info
arg	47:17	47:25	7	dumpfile
water	47:17	0:0	8	dumpfile
arg	47:27	47:33	7	format
water	47:27	0:0	8	format
arg	47:35	47:64	7	"combineSeparateSamplesBytes"
water	47:35	0:0	8	"combineSeparateSamplesBytes"
arg	47:65	47:96	7	"Output data, combined samples"
water	47:65	0:0	8	"Output data, combined samples"
water	47:97	0:0	6	;
call	48:6	48:82	6	dump_buffer
arg	48:18	48:26	7	dumpfile
water	48:18	0:0	8	dumpfile
arg	48:28	48:34	7	format
water	48:28	0:0	8	format
arg	48:36	48:37	7	1
water	48:36	0:0	8	1
arg	48:39	48:50	7	dst_rowsize
water	48:39	0:0	8	dst_rowsize
arg	48:52	48:55	7	row
water	48:52	0:0	8	row
arg	48:57	48:82	7	out+(row*dst_rowsize)
water	48:57	0:0	8	out
op	48:61	0:0	8	+
water	48:63	0:0	8	(
water	48:64	0:0	8	row
op	48:68	0:0	8	*
water	48:70	0:0	8	dst_rowsize
water	48:81	0:0	8	)
water	48:83	0:0	6	;
water	49:6	0:0	6	}
water	50:4	0:0	4	}
return	51:2	51:12	2	(0)
water	51:9	0:0	3	(
water	51:10	0:0	3	0
water	51:11	0:0	3	)

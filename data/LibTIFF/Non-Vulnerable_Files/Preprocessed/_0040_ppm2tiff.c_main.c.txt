func	1:0	199:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	198:11	1	
decl	4:1	4:23	2	uint16	photometric
op	4:20	0:0	2	=
water	4:22	0:0	2	0
decl	5:1	5:34	2	uint32	rowsperstrip
op	5:21	0:0	2	=
water	5:23	0:0	2	(
water	5:24	0:0	2	uint32
water	5:30	0:0	2	)
op	5:32	0:0	2	-
water	5:33	0:0	2	1
decl	6:1	6:23	2	double	resolution
op	6:19	0:0	2	=
op	6:21	0:0	2	-
water	6:22	0:0	2	1
decl	7:1	7:26	2	unsigned char	*buf
op	7:20	0:0	2	=
water	7:22	0:0	2	NULL
decl	8:1	8:23	2	tmsize_t	linebytes
op	8:20	0:0	2	=
water	8:22	0:0	2	0
decl	9:1	9:15	2	uint16	spp
op	9:12	0:0	2	=
water	9:14	0:0	2	1
decl	10:1	10:15	2	uint16	bpp
op	10:12	0:0	2	=
water	10:14	0:0	2	8
decl	11:1	11:10	2	TIFF	*out
decl	12:1	12:9	2	FILE	*in
decl	13:1	13:29	2	unsigned int	w
water	13:15	0:0	2	,
decl	13:1	13:29	2	unsigned int	h
water	13:18	0:0	2	,
decl	13:1	13:29	2	unsigned int	prec
water	13:24	0:0	2	,
decl	13:1	13:29	2	unsigned int	row
decl	14:1	14:13	2	char	*infile
decl	15:1	15:6	2	int	c
water	17:1	0:0	2	extern
water	17:8	0:0	2	int
water	17:12	0:0	2	optind
water	17:18	0:0	2	;
water	18:1	0:0	2	extern
water	18:8	0:0	2	char
op	18:12	0:0	2	*
water	18:14	0:0	2	optarg
water	18:20	0:0	2	;
decl	20:1	20:23	2	tmsize_t	scanline_size
if	21:1	24:1	2	(argc < 2)
cond	21:5	21:12	3	argc < 2
water	21:5	0:0	4	argc
op	21:10	0:0	4	<
water	21:12	0:0	4	2
stmts	21:15	24:1	3	
water	21:15	0:0	4	{
call	22:5	22:55	4	fprintf
arg	22:13	22:19	5	stderr
water	22:13	0:0	6	stderr
arg	22:21	22:46	5	"%s: Too few arguments\n"
water	22:21	0:0	6	"%s: Too few arguments\n"
arg	22:48	22:55	5	argv[0]
water	22:48	0:0	6	argv
op	22:52	0:0	6	[
water	22:53	0:0	6	0
op	22:54	0:0	6	]
water	22:56	0:0	4	;
call	23:5	23:11	4	usage
water	23:12	0:0	4	;
water	24:1	0:0	4	}
while	25:1	40:2	2	(( c =getopt (argc ,argv ,"c:r:R:" ) ) != - 1)
cond	25:8	25:47	3	( c =getopt (argc ,argv ,"c:r:R:" ) ) != - 1
water	25:8	0:0	4	(
water	25:9	0:0	4	c
op	25:11	0:0	4	=
call	25:13	25:40	4	getopt
arg	25:20	25:24	5	argc
water	25:20	0:0	6	argc
arg	25:26	25:30	5	argv
water	25:26	0:0	6	argv
arg	25:32	25:40	5	"c:r:R:"
water	25:32	0:0	6	"c:r:R:"
water	25:41	0:0	4	)
op	25:43	0:0	4	!=
op	25:46	0:0	4	-
water	25:47	0:0	4	1
stmts	26:2	40:2	3	
switch	26:2	40:2	4	(c)
cond	26:10	26:10	5	c
water	26:10	0:0	6	c
stmts	26:13	40:2	5	
water	26:13	0:0	6	{
water	27:2	0:0	6	case
water	27:7	0:0	6	'c'
water	27:10	0:0	6	:
water	28:3	0:0	6	if
water	28:6	0:0	6	(
op	28:7	0:0	6	!
call	28:8	28:37	6	processCompressOptions
arg	28:31	28:37	7	optarg
water	28:31	0:0	8	optarg
water	28:38	0:0	6	)
call	29:4	29:10	6	usage
water	29:11	0:0	6	;
break	30:3	30:8	6	
water	31:2	0:0	6	case
water	31:7	0:0	6	'r'
water	31:10	0:0	6	:
water	32:3	0:0	6	rowsperstrip
op	32:16	0:0	6	=
call	32:18	32:29	6	atoi
arg	32:23	32:29	7	optarg
water	32:23	0:0	8	optarg
water	32:30	0:0	6	;
break	33:3	33:8	6	
water	34:2	0:0	6	case
water	34:7	0:0	6	'R'
water	34:10	0:0	6	:
water	35:3	0:0	6	resolution
op	35:14	0:0	6	=
call	35:16	35:27	6	atof
arg	35:21	35:27	7	optarg
water	35:21	0:0	8	optarg
water	35:28	0:0	6	;
break	36:3	36:8	6	
water	37:2	0:0	6	case
water	37:7	0:0	6	'?'
water	37:10	0:0	6	:
call	38:3	38:9	6	usage
water	38:10	0:0	6	;
water	40:2	0:0	6	}
if	41:1	44:1	2	(optind + 2 < argc)
cond	41:5	41:18	3	optind + 2 < argc
water	41:5	0:0	4	optind
op	41:12	0:0	4	+
water	41:14	0:0	4	2
op	41:16	0:0	4	<
water	41:18	0:0	4	argc
stmts	41:24	44:1	3	
water	41:24	0:0	4	{
call	42:5	42:56	4	fprintf
arg	42:13	42:19	5	stderr
water	42:13	0:0	6	stderr
arg	42:21	42:47	5	"%s: Too many arguments\n"
water	42:21	0:0	6	"%s: Too many arguments\n"
arg	42:49	42:56	5	argv[0]
water	42:49	0:0	6	argv
op	42:53	0:0	6	[
water	42:54	0:0	6	0
op	42:55	0:0	6	]
water	42:57	0:0	4	;
call	43:5	43:11	4	usage
water	43:12	0:0	4	;
water	44:1	0:0	4	}
if	49:1	56:1	2	(argc - optind > 1)
cond	49:5	49:21	3	argc - optind > 1
water	49:5	0:0	4	argc
op	49:10	0:0	4	-
water	49:12	0:0	4	optind
op	49:19	0:0	4	>
water	49:21	0:0	4	1
stmts	49:24	56:1	3	
water	49:24	0:0	4	{
water	50:2	0:0	4	infile
op	50:9	0:0	4	=
water	50:11	0:0	4	argv
op	50:15	0:0	4	[
water	50:16	0:0	4	optind
op	50:22	0:0	4	++
op	50:24	0:0	4	]
water	50:25	0:0	4	;
water	51:2	0:0	4	in
op	51:5	0:0	4	=
call	51:7	51:25	4	fopen
arg	51:13	51:19	5	infile
water	51:13	0:0	6	infile
arg	51:21	51:25	5	"rb"
water	51:21	0:0	6	"rb"
water	51:26	0:0	4	;
if	52:2	55:2	4	(in == NULL)
cond	52:6	52:12	5	in == NULL
water	52:6	0:0	6	in
op	52:9	0:0	6	==
water	52:12	0:0	6	NULL
stmts	52:18	55:2	5	
water	52:18	0:0	6	{
call	53:3	53:48	6	fprintf
arg	53:11	53:17	7	stderr
water	53:11	0:0	8	stderr
arg	53:19	53:40	7	"%s: Can not open.\n"
water	53:19	0:0	8	"%s: Can not open.\n"
arg	53:42	53:48	7	infile
water	53:42	0:0	8	infile
water	53:49	0:0	6	;
return	54:3	54:14	6	(-1)
water	54:10	0:0	7	(
op	54:11	0:0	7	-
water	54:12	0:0	7	1
water	54:13	0:0	7	)
water	55:2	0:0	6	}
water	56:1	0:0	4	}
else	56:3	62:1	2
stmts	56:8	62:1	3	
water	56:8	0:0	4	{
water	57:2	0:0	4	infile
op	57:9	0:0	4	=
water	57:11	0:0	4	"<stdin>"
water	57:20	0:0	4	;
water	58:2	0:0	4	in
op	58:5	0:0	4	=
water	58:7	0:0	4	stdin
water	58:12	0:0	4	;
call	60:2	60:33	4	setmode
arg	60:10	60:23	5	fileno(stdin)
call	60:10	60:22	6	fileno
arg	60:17	60:22	7	stdin
water	60:17	0:0	8	stdin
arg	60:25	60:33	5	O_BINARY
water	60:25	0:0	6	O_BINARY
water	60:34	0:0	4	;
water	62:1	0:0	4	}
if	63:1	64:16	2	(fgetc (in ) != 'P')
cond	63:5	63:18	3	fgetc (in ) != 'P'
call	63:5	63:13	4	fgetc
arg	63:11	63:13	5	in
water	63:11	0:0	6	in
op	63:15	0:0	4	!=
water	63:18	0:0	4	'P'
stmts	64:2	64:16	3	
call	64:2	64:15	4	BadPPM
arg	64:9	64:15	5	infile
water	64:9	0:0	6	infile
water	64:16	0:0	4	;
switch	65:1	86:1	2	(fgetc (in ))
cond	65:9	65:17	3	fgetc (in )
call	65:9	65:17	4	fgetc
arg	65:15	65:17	5	in
water	65:15	0:0	6	in
stmts	65:20	86:1	3	
water	65:20	0:0	4	{
water	66:2	0:0	4	case
water	66:7	0:0	4	'4'
water	66:10	0:0	4	:
water	67:3	0:0	4	bpp
op	67:7	0:0	4	=
water	67:9	0:0	4	1
water	67:10	0:0	4	;
water	68:3	0:0	4	spp
op	68:7	0:0	4	=
water	68:9	0:0	4	1
water	68:10	0:0	4	;
water	69:3	0:0	4	photometric
op	69:15	0:0	4	=
water	69:17	0:0	4	PHOTOMETRIC_MINISWHITE
water	69:39	0:0	4	;
break	70:3	70:8	4	
water	71:2	0:0	4	case
water	71:7	0:0	4	'5'
water	71:10	0:0	4	:
water	72:3	0:0	4	bpp
op	72:7	0:0	4	=
water	72:9	0:0	4	8
water	72:10	0:0	4	;
water	73:3	0:0	4	spp
op	73:7	0:0	4	=
water	73:9	0:0	4	1
water	73:10	0:0	4	;
water	74:3	0:0	4	photometric
op	74:15	0:0	4	=
water	74:17	0:0	4	PHOTOMETRIC_MINISBLACK
water	74:39	0:0	4	;
break	75:3	75:8	4	
water	76:2	0:0	4	case
water	76:7	0:0	4	'6'
water	76:10	0:0	4	:
water	77:3	0:0	4	bpp
op	77:7	0:0	4	=
water	77:9	0:0	4	8
water	77:10	0:0	4	;
water	78:3	0:0	4	spp
op	78:7	0:0	4	=
water	78:9	0:0	4	3
water	78:10	0:0	4	;
water	79:3	0:0	4	photometric
op	79:15	0:0	4	=
water	79:17	0:0	4	PHOTOMETRIC_RGB
water	79:32	0:0	4	;
if	80:3	82:35	4	(compression == COMPRESSION_JPEG && jpegcolormode == JPEGCOLORMODE_RGB)
cond	80:7	81:24	5	compression == COMPRESSION_JPEG && jpegcolormode == JPEGCOLORMODE_RGB
water	80:7	0:0	6	compression
op	80:19	0:0	6	==
water	80:22	0:0	6	COMPRESSION_JPEG
op	80:39	0:0	6	&&
water	81:7	0:0	6	jpegcolormode
op	81:21	0:0	6	==
water	81:24	0:0	6	JPEGCOLORMODE_RGB
stmts	82:4	82:35	5	
water	82:4	0:0	6	photometric
op	82:16	0:0	6	=
water	82:18	0:0	6	PHOTOMETRIC_YCBCR
water	82:35	0:0	6	;
break	83:3	83:8	4	
label	84:2	84:9	4	default :
call	85:3	85:16	4	BadPPM
arg	85:10	85:16	5	infile
water	85:10	0:0	6	infile
water	85:17	0:0	4	;
water	86:1	0:0	4	}
while	88:1	104:1	2	(1)
cond	88:7	88:7	3	1
water	88:7	0:0	4	1
stmts	88:10	104:1	3	
water	88:10	0:0	4	{
if	89:2	90:17	4	(feof (in ))
cond	89:6	89:13	5	feof (in )
call	89:6	89:13	6	feof
arg	89:11	89:13	7	in
water	89:11	0:0	8	in
stmts	90:3	90:17	5	
call	90:3	90:16	6	BadPPM
arg	90:10	90:16	7	infile
water	90:10	0:0	8	infile
water	90:17	0:0	6	;
water	91:2	0:0	4	c
op	91:4	0:0	4	=
call	91:6	91:14	4	fgetc
arg	91:12	91:14	5	in
water	91:12	0:0	6	in
water	91:15	0:0	4	;
if	93:2	94:11	4	(strchr (" \t\r\n" ,c ))
cond	93:6	93:25	5	strchr (" \t\r\n" ,c )
call	93:6	93:25	6	strchr
arg	93:13	93:22	7	" \t\r\n"
water	93:13	0:0	8	" \t\r\n"
arg	93:24	93:25	7	c
water	93:24	0:0	8	c
stmts	94:3	94:11	5	
continue	94:3	94:11	6	
if	96:2	101:2	4	(c == '#')
cond	96:6	96:11	5	c == '#'
water	96:6	0:0	6	c
op	96:8	0:0	6	==
water	96:11	0:0	6	'#'
stmts	96:16	101:2	5	
water	96:16	0:0	6	{
do	97:3	99:3	6	(! (strchr ("\r\n" ,c ) ||feof (in ) ))
cond	99:11	99:42	7	! (strchr ("\r\n" ,c ) ||feof (in ) )
op	99:11	0:0	8	!
water	99:12	0:0	8	(
call	99:13	99:29	8	strchr
arg	99:20	99:26	9	"\r\n"
water	99:20	0:0	10	"\r\n"
arg	99:28	99:29	9	c
water	99:28	0:0	10	c
op	99:31	0:0	8	||
call	99:34	99:41	8	feof
arg	99:39	99:41	9	in
water	99:39	0:0	10	in
water	99:42	0:0	8	)
stmts	97:6	99:3	7	
water	97:6	0:0	8	{
water	98:7	0:0	8	c
op	98:9	0:0	8	=
call	98:11	98:19	8	fgetc
arg	98:17	98:19	9	in
water	98:17	0:0	10	in
water	98:20	0:0	8	;
water	99:3	0:0	8	}
water	99:44	0:0	6	;
continue	100:3	100:11	6	
water	101:2	0:0	6	}
call	102:2	102:14	4	ungetc
arg	102:9	102:10	5	c
water	102:9	0:0	6	c
arg	102:12	102:14	5	in
water	102:12	0:0	6	in
water	102:15	0:0	4	;
break	103:2	103:7	4	
water	104:1	0:0	4	}
switch	105:1	118:1	2	(bpp)
cond	105:9	105:9	3	bpp
water	105:9	0:0	4	bpp
stmts	105:14	118:1	3	
water	105:14	0:0	4	{
label	106:1	106:7	4	case 1 :
if	107:2	108:17	4	(fscanf (in ," %u %u" ,& w ,& h ) != 2)
cond	107:6	107:38	5	fscanf (in ," %u %u" ,& w ,& h ) != 2
call	107:6	107:33	6	fscanf
arg	107:13	107:15	7	in
water	107:13	0:0	8	in
arg	107:17	107:25	7	" %u %u"
water	107:17	0:0	8	" %u %u"
arg	107:27	107:29	7	&w
op	107:27	0:0	8	&
water	107:28	0:0	8	w
arg	107:31	107:33	7	&h
op	107:31	0:0	8	&
water	107:32	0:0	8	h
op	107:35	0:0	6	!=
water	107:38	0:0	6	2
stmts	108:3	108:17	5	
call	108:3	108:16	6	BadPPM
arg	108:10	108:16	7	infile
water	108:10	0:0	8	infile
water	108:17	0:0	6	;
if	109:2	110:17	4	(fgetc (in ) != '\n')
cond	109:6	109:19	5	fgetc (in ) != '\n'
call	109:6	109:14	6	fgetc
arg	109:12	109:14	7	in
water	109:12	0:0	8	in
op	109:16	0:0	6	!=
water	109:19	0:0	6	'\n'
stmts	110:3	110:17	5	
call	110:3	110:16	6	BadPPM
arg	110:10	110:16	7	infile
water	110:10	0:0	8	infile
water	110:17	0:0	6	;
break	111:2	111:7	4	
label	112:1	112:7	4	case 8 :
if	113:2	114:17	4	(fscanf (in ," %u %u %u" ,& w ,& h ,& prec ) != 3)
cond	113:6	113:48	5	fscanf (in ," %u %u %u" ,& w ,& h ,& prec ) != 3
call	113:6	113:43	6	fscanf
arg	113:13	113:15	7	in
water	113:13	0:0	8	in
arg	113:17	113:28	7	" %u %u %u"
water	113:17	0:0	8	" %u %u %u"
arg	113:30	113:32	7	&w
op	113:30	0:0	8	&
water	113:31	0:0	8	w
arg	113:34	113:36	7	&h
op	113:34	0:0	8	&
water	113:35	0:0	8	h
arg	113:38	113:43	7	&prec
op	113:38	0:0	8	&
water	113:39	0:0	8	prec
op	113:45	0:0	6	!=
water	113:48	0:0	6	3
stmts	114:3	114:17	5	
call	114:3	114:16	6	BadPPM
arg	114:10	114:16	7	infile
water	114:10	0:0	8	infile
water	114:17	0:0	6	;
if	115:2	116:17	4	(fgetc (in ) != '\n' || prec != 255)
cond	115:6	115:35	5	fgetc (in ) != '\n' || prec != 255
call	115:6	115:14	6	fgetc
arg	115:12	115:14	7	in
water	115:12	0:0	8	in
op	115:16	0:0	6	!=
water	115:19	0:0	6	'\n'
op	115:24	0:0	6	||
water	115:27	0:0	6	prec
op	115:32	0:0	6	!=
water	115:35	0:0	6	255
stmts	116:3	116:17	5	
call	116:3	116:16	6	BadPPM
arg	116:10	116:16	7	infile
water	116:10	0:0	8	infile
water	116:17	0:0	6	;
break	117:2	117:7	4	
water	118:1	0:0	4	}
water	119:1	0:0	2	out
op	119:5	0:0	2	=
call	119:7	119:33	2	TIFFOpen
arg	119:16	119:28	3	argv[optind]
water	119:16	0:0	4	argv
op	119:20	0:0	4	[
water	119:21	0:0	4	optind
op	119:27	0:0	4	]
arg	119:30	119:33	3	"w"
water	119:30	0:0	4	"w"
water	119:34	0:0	2	;
if	120:1	121:13	2	(out == NULL)
cond	120:5	120:12	3	out == NULL
water	120:5	0:0	4	out
op	120:9	0:0	4	==
water	120:12	0:0	4	NULL
stmts	121:2	121:13	3	
return	121:2	121:13	4	(-4)
water	121:9	0:0	5	(
op	121:10	0:0	5	-
water	121:11	0:0	5	4
water	121:12	0:0	5	)
call	122:1	122:49	2	TIFFSetField
arg	122:14	122:17	3	out
water	122:14	0:0	4	out
arg	122:19	122:37	3	TIFFTAG_IMAGEWIDTH
water	122:19	0:0	4	TIFFTAG_IMAGEWIDTH
arg	122:39	122:49	3	(uint32)w
water	122:39	0:0	4	(
water	122:40	0:0	4	uint32
water	122:46	0:0	4	)
water	122:48	0:0	4	w
water	122:50	0:0	2	;
call	123:1	123:50	2	TIFFSetField
arg	123:14	123:17	3	out
water	123:14	0:0	4	out
arg	123:19	123:38	3	TIFFTAG_IMAGELENGTH
water	123:19	0:0	4	TIFFTAG_IMAGELENGTH
arg	123:40	123:50	3	(uint32)h
water	123:40	0:0	4	(
water	123:41	0:0	4	uint32
water	123:47	0:0	4	)
water	123:49	0:0	4	h
water	123:51	0:0	2	;
call	124:1	124:59	2	TIFFSetField
arg	124:14	124:17	3	out
water	124:14	0:0	4	out
arg	124:19	124:38	3	TIFFTAG_ORIENTATION
water	124:19	0:0	4	TIFFTAG_ORIENTATION
arg	124:40	124:59	3	ORIENTATION_TOPLEFT
water	124:40	0:0	4	ORIENTATION_TOPLEFT
water	124:60	0:0	2	;
call	125:1	125:47	2	TIFFSetField
arg	125:14	125:17	3	out
water	125:14	0:0	4	out
arg	125:19	125:42	3	TIFFTAG_SAMPLESPERPIXEL
water	125:19	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	125:44	125:47	3	spp
water	125:44	0:0	4	spp
water	125:48	0:0	2	;
call	126:1	126:45	2	TIFFSetField
arg	126:14	126:17	3	out
water	126:14	0:0	4	out
arg	126:19	126:40	3	TIFFTAG_BITSPERSAMPLE
water	126:19	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	126:42	126:45	3	bpp
water	126:42	0:0	4	bpp
water	126:46	0:0	2	;
call	127:1	127:60	2	TIFFSetField
arg	127:14	127:17	3	out
water	127:14	0:0	4	out
arg	127:19	127:39	3	TIFFTAG_PLANARCONFIG
water	127:19	0:0	4	TIFFTAG_PLANARCONFIG
arg	127:41	127:60	3	PLANARCONFIG_CONTIG
water	127:41	0:0	4	PLANARCONFIG_CONTIG
water	127:61	0:0	2	;
call	128:1	128:51	2	TIFFSetField
arg	128:14	128:17	3	out
water	128:14	0:0	4	out
arg	128:19	128:38	3	TIFFTAG_PHOTOMETRIC
water	128:19	0:0	4	TIFFTAG_PHOTOMETRIC
arg	128:40	128:51	3	photometric
water	128:40	0:0	4	photometric
water	128:52	0:0	2	;
call	129:1	129:51	2	TIFFSetField
arg	129:14	129:17	3	out
water	129:14	0:0	4	out
arg	129:19	129:38	3	TIFFTAG_COMPRESSION
water	129:19	0:0	4	TIFFTAG_COMPRESSION
arg	129:40	129:51	3	compression
water	129:40	0:0	4	compression
water	129:52	0:0	2	;
switch	130:1	143:1	2	(compression)
cond	130:9	130:9	3	compression
water	130:9	0:0	4	compression
stmts	130:22	143:1	3	
water	130:22	0:0	4	{
label	131:1	131:22	4	case COMPRESSION_JPEG :
call	132:2	132:48	4	TIFFSetField
arg	132:15	132:18	5	out
water	132:15	0:0	6	out
arg	132:20	132:39	5	TIFFTAG_JPEGQUALITY
water	132:20	0:0	6	TIFFTAG_JPEGQUALITY
arg	132:41	132:48	5	quality
water	132:41	0:0	6	quality
water	132:49	0:0	4	;
call	133:2	133:56	4	TIFFSetField
arg	133:15	133:18	5	out
water	133:15	0:0	6	out
arg	133:20	133:41	5	TIFFTAG_JPEGCOLORMODE
water	133:20	0:0	6	TIFFTAG_JPEGCOLORMODE
arg	133:43	133:56	5	jpegcolormode
water	133:43	0:0	6	jpegcolormode
water	133:57	0:0	4	;
break	134:2	134:7	4	
label	135:1	135:21	4	case COMPRESSION_LZW :
label	136:1	136:25	4	case COMPRESSION_DEFLATE :
if	137:2	138:50	4	(predictor != 0)
cond	137:6	137:19	5	predictor != 0
water	137:6	0:0	6	predictor
op	137:16	0:0	6	!=
water	137:19	0:0	6	0
stmts	138:3	138:50	5	
call	138:3	138:49	6	TIFFSetField
arg	138:16	138:19	7	out
water	138:16	0:0	8	out
arg	138:21	138:38	7	TIFFTAG_PREDICTOR
water	138:21	0:0	8	TIFFTAG_PREDICTOR
arg	138:40	138:49	7	predictor
water	138:40	0:0	8	predictor
water	138:50	0:0	6	;
break	139:2	139:7	4	
label	140:8	140:34	4	case COMPRESSION_CCITTFAX3 :
call	141:2	141:49	4	TIFFSetField
arg	141:15	141:18	5	out
water	141:15	0:0	6	out
arg	141:20	141:41	5	TIFFTAG_GROUP3OPTIONS
water	141:20	0:0	6	TIFFTAG_GROUP3OPTIONS
arg	141:43	141:49	5	g3opts
water	141:43	0:0	6	g3opts
water	141:50	0:0	4	;
break	142:2	142:7	4	
water	143:1	0:0	4	}
switch	144:1	160:1	2	(bpp)
cond	144:9	144:9	3	bpp
water	144:9	0:0	4	bpp
stmts	144:14	160:1	3	
water	144:14	0:0	4	{
label	145:2	145:8	4	case 1 :
water	147:3	0:0	4	linebytes
op	147:13	0:0	4	=
water	147:15	0:0	4	(
call	147:16	147:34	4	multiply_ms
arg	147:28	147:31	5	spp
water	147:28	0:0	6	spp
arg	147:33	147:34	5	w
water	147:33	0:0	6	w
op	147:36	0:0	4	+
water	147:38	0:0	4	(
water	147:39	0:0	4	8
op	147:41	0:0	4	-
water	147:43	0:0	4	1
water	147:44	0:0	4	)
water	147:45	0:0	4	)
op	147:47	0:0	4	/
water	147:49	0:0	4	8
water	147:50	0:0	4	;
if	148:3	150:3	4	(rowsperstrip == ( uint32 ) - 1)
cond	148:7	148:33	5	rowsperstrip == ( uint32 ) - 1
water	148:7	0:0	6	rowsperstrip
op	148:20	0:0	6	==
water	148:23	0:0	6	(
water	148:24	0:0	6	uint32
water	148:30	0:0	6	)
op	148:32	0:0	6	-
water	148:33	0:0	6	1
stmts	148:36	150:3	5	
water	148:36	0:0	6	{
call	149:4	149:45	6	TIFFSetField
arg	149:17	149:20	7	out
water	149:17	0:0	8	out
arg	149:22	149:42	7	TIFFTAG_ROWSPERSTRIP
water	149:22	0:0	8	TIFFTAG_ROWSPERSTRIP
arg	149:44	149:45	7	h
water	149:44	0:0	8	h
water	149:46	0:0	6	;
water	150:3	0:0	6	}
else	150:5	153:3	4
stmts	150:10	153:3	5	
water	150:10	0:0	6	{
call	151:4	152:47	6	TIFFSetField
arg	151:17	151:20	7	out
water	151:17	0:0	8	out
arg	151:22	151:42	7	TIFFTAG_ROWSPERSTRIP
water	151:22	0:0	8	TIFFTAG_ROWSPERSTRIP
arg	152:8	152:47	7	TIFFDefaultStripSize(out,rowsperstrip)
call	152:8	152:46	8	TIFFDefaultStripSize
arg	152:29	152:32	9	out
water	152:29	0:0	10	out
arg	152:34	152:46	9	rowsperstrip
water	152:34	0:0	10	rowsperstrip
water	152:48	0:0	6	;
water	153:3	0:0	6	}
break	154:3	154:8	4	
label	155:2	155:8	4	case 8 :
water	156:3	0:0	4	linebytes
op	156:13	0:0	4	=
call	156:15	156:33	4	multiply_ms
arg	156:27	156:30	5	spp
water	156:27	0:0	6	spp
arg	156:32	156:33	5	w
water	156:32	0:0	6	w
water	156:34	0:0	4	;
call	157:3	158:46	4	TIFFSetField
arg	157:16	157:19	5	out
water	157:16	0:0	6	out
arg	157:21	157:41	5	TIFFTAG_ROWSPERSTRIP
water	157:21	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	158:7	158:46	5	TIFFDefaultStripSize(out,rowsperstrip)
call	158:7	158:45	6	TIFFDefaultStripSize
arg	158:28	158:31	7	out
water	158:28	0:0	8	out
arg	158:33	158:45	7	rowsperstrip
water	158:33	0:0	8	rowsperstrip
water	158:47	0:0	4	;
break	159:3	159:8	4	
water	160:1	0:0	4	}
if	161:1	165:1	2	(linebytes == 0)
cond	161:5	161:18	3	linebytes == 0
water	161:5	0:0	4	linebytes
op	161:15	0:0	4	==
water	161:18	0:0	4	0
stmts	161:21	165:1	3	
water	161:21	0:0	4	{
call	162:2	162:56	4	fprintf
arg	162:10	162:16	5	stderr
water	162:10	0:0	6	stderr
arg	162:18	162:48	5	"%s: scanline size overflow\n"
water	162:18	0:0	6	"%s: scanline size overflow\n"
arg	162:50	162:56	5	infile
water	162:50	0:0	6	infile
water	162:57	0:0	4	;
water	163:2	0:0	4	(
water	163:3	0:0	4	void
water	163:7	0:0	4	)
call	163:9	163:22	4	TIFFClose
arg	163:19	163:22	5	out
water	163:19	0:0	6	out
water	163:23	0:0	4	;
call	164:2	164:9	4	exit
arg	164:7	164:9	5	-2
op	164:7	0:0	6	-
water	164:8	0:0	6	2
water	164:10	0:0	4	;
water	165:1	0:0	4	}
water	166:1	0:0	2	scanline_size
op	166:15	0:0	2	=
call	166:17	166:37	2	TIFFScanlineSize
arg	166:34	166:37	3	out
water	166:34	0:0	4	out
water	166:38	0:0	2	;
if	167:1	171:1	2	(scanline_size == 0)
cond	167:5	167:22	3	scanline_size == 0
water	167:5	0:0	4	scanline_size
op	167:19	0:0	4	==
water	167:22	0:0	4	0
stmts	167:25	171:1	3	
water	167:25	0:0	4	{
water	169:2	0:0	4	(
water	169:3	0:0	4	void
water	169:7	0:0	4	)
call	169:9	169:22	4	TIFFClose
arg	169:19	169:22	5	out
water	169:19	0:0	6	out
water	169:23	0:0	4	;
call	170:2	170:9	4	exit
arg	170:7	170:9	5	-2
op	170:7	0:0	6	-
water	170:8	0:0	6	2
water	170:10	0:0	4	;
water	171:1	0:0	4	}
if	172:1	173:47	2	(scanline_size < linebytes)
cond	172:5	172:21	3	scanline_size < linebytes
water	172:5	0:0	4	scanline_size
op	172:19	0:0	4	<
water	172:21	0:0	4	linebytes
stmts	173:2	173:47	3	
water	173:2	0:0	4	buf
op	173:6	0:0	4	=
water	173:8	0:0	4	(
water	173:9	0:0	4	unsigned
water	173:18	0:0	4	char
op	173:23	0:0	4	*
water	173:24	0:0	4	)
call	173:25	173:46	4	_TIFFmalloc
arg	173:37	173:46	5	linebytes
water	173:37	0:0	6	linebytes
water	173:47	0:0	4	;
else	174:1	175:51	2
stmts	175:2	175:51	3	
water	175:2	0:0	4	buf
op	175:6	0:0	4	=
water	175:8	0:0	4	(
water	175:9	0:0	4	unsigned
water	175:18	0:0	4	char
op	175:23	0:0	4	*
water	175:24	0:0	4	)
call	175:25	175:50	4	_TIFFmalloc
arg	175:37	175:50	5	scanline_size
water	175:37	0:0	6	scanline_size
water	175:51	0:0	4	;
if	176:1	180:1	2	(buf == NULL)
cond	176:5	176:12	3	buf == NULL
water	176:5	0:0	4	buf
op	176:9	0:0	4	==
water	176:12	0:0	4	NULL
stmts	176:18	180:1	3	
water	176:18	0:0	4	{
call	177:2	177:51	4	fprintf
arg	177:10	177:16	5	stderr
water	177:10	0:0	6	stderr
arg	177:18	177:43	5	"%s: Not enough memory\n"
water	177:18	0:0	6	"%s: Not enough memory\n"
arg	177:45	177:51	5	infile
water	177:45	0:0	6	infile
water	177:52	0:0	4	;
water	178:2	0:0	4	(
water	178:3	0:0	4	void
water	178:7	0:0	4	)
call	178:9	178:22	4	TIFFClose
arg	178:19	178:22	5	out
water	178:19	0:0	6	out
water	178:23	0:0	4	;
call	179:2	179:9	4	exit
arg	179:7	179:9	5	-2
op	179:7	0:0	6	-
water	179:8	0:0	6	2
water	179:10	0:0	4	;
water	180:1	0:0	4	}
if	181:1	185:1	2	(resolution > 0)
cond	181:5	181:18	3	resolution > 0
water	181:5	0:0	4	resolution
op	181:16	0:0	4	>
water	181:18	0:0	4	0
stmts	181:21	185:1	3	
water	181:21	0:0	4	{
call	182:2	182:51	4	TIFFSetField
arg	182:15	182:18	5	out
water	182:15	0:0	6	out
arg	182:20	182:39	5	TIFFTAG_XRESOLUTION
water	182:20	0:0	6	TIFFTAG_XRESOLUTION
arg	182:41	182:51	5	resolution
water	182:41	0:0	6	resolution
water	182:52	0:0	4	;
call	183:2	183:51	4	TIFFSetField
arg	183:15	183:18	5	out
water	183:15	0:0	6	out
arg	183:20	183:39	5	TIFFTAG_YRESOLUTION
water	183:20	0:0	6	TIFFTAG_YRESOLUTION
arg	183:41	183:51	5	resolution
water	183:41	0:0	6	resolution
water	183:52	0:0	4	;
call	184:2	184:56	4	TIFFSetField
arg	184:15	184:18	5	out
water	184:15	0:0	6	out
arg	184:20	184:42	5	TIFFTAG_RESOLUTIONUNIT
water	184:20	0:0	6	TIFFTAG_RESOLUTIONUNIT
arg	184:44	184:56	5	RESUNIT_INCH
water	184:44	0:0	6	RESUNIT_INCH
water	184:57	0:0	4	;
water	185:1	0:0	4	}
for	186:1	194:1	2	(row = 0 ;row < h;row ++)
forinit	186:6	186:13	3	row = 0 ;
water	186:6	0:0	4	row
op	186:10	0:0	4	=
water	186:12	0:0	4	0
water	186:13	0:0	4	;
cond	186:15	186:21	3	row < h
water	186:15	0:0	4	row
op	186:19	0:0	4	<
water	186:21	0:0	4	h
forexpr	186:24	186:27	3	row ++
water	186:24	0:0	4	row
op	186:27	0:0	4	++
stmts	186:31	194:1	3	
water	186:31	0:0	4	{
if	187:2	191:2	4	(fread (buf ,linebytes ,1 ,in ) != 1)
cond	187:6	187:38	5	fread (buf ,linebytes ,1 ,in ) != 1
call	187:6	187:33	6	fread
arg	187:12	187:15	7	buf
water	187:12	0:0	8	buf
arg	187:17	187:26	7	linebytes
water	187:17	0:0	8	linebytes
arg	187:28	187:29	7	1
water	187:28	0:0	8	1
arg	187:31	187:33	7	in
water	187:31	0:0	8	in
op	187:35	0:0	6	!=
water	187:38	0:0	6	1
stmts	187:41	191:2	5	
water	187:41	0:0	6	{
call	188:3	189:34	6	fprintf
arg	188:11	188:17	7	stderr
water	188:11	0:0	8	stderr
arg	188:19	188:52	7	"%s: scanline %lu: Read error.\n"
water	188:19	0:0	8	"%s: scanline %lu: Read error.\n"
arg	189:7	189:13	7	infile
water	189:7	0:0	8	infile
arg	189:15	189:34	7	(unsignedlong)row
water	189:15	0:0	8	(
water	189:16	0:0	8	unsigned
water	189:25	0:0	8	long
water	189:29	0:0	8	)
water	189:31	0:0	8	row
water	189:35	0:0	6	;
break	190:3	190:8	6	
water	191:2	0:0	6	}
if	192:2	193:8	4	(TIFFWriteScanline (out ,buf ,row ,0 ) < 0)
cond	192:6	192:44	5	TIFFWriteScanline (out ,buf ,row ,0 ) < 0
call	192:6	192:40	6	TIFFWriteScanline
arg	192:24	192:27	7	out
water	192:24	0:0	8	out
arg	192:29	192:32	7	buf
water	192:29	0:0	8	buf
arg	192:34	192:37	7	row
water	192:34	0:0	8	row
arg	192:39	192:40	7	0
water	192:39	0:0	8	0
op	192:42	0:0	6	<
water	192:44	0:0	6	0
stmts	193:3	193:8	5	
break	193:3	193:8	6	
water	194:1	0:0	4	}
water	195:1	0:0	2	(
water	195:2	0:0	2	void
water	195:6	0:0	2	)
call	195:8	195:21	2	TIFFClose
arg	195:18	195:21	3	out
water	195:18	0:0	4	out
water	195:22	0:0	2	;
if	196:1	197:16	2	(buf)
cond	196:5	196:5	3	buf
water	196:5	0:0	4	buf
stmts	197:2	197:16	3	
call	197:2	197:15	4	_TIFFfree
arg	197:12	197:15	5	buf
water	197:12	0:0	6	buf
water	197:16	0:0	4	;
return	198:1	198:11	2	(0)
water	198:8	0:0	3	(
water	198:9	0:0	3	0
water	198:10	0:0	3	)

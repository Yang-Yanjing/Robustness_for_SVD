func	1:0	31:0	0	static void	Fax3PutEOL
params	2:10	0:0	1	
param	2:11	2:20	2	TIFF *	tif
stmnts	0:0	30:14	1	
decl	4:1	4:39	2	Fax3CodecState	*sp
op	4:20	0:0	2	=
call	4:22	4:38	3	EncoderState
arg	4:35	4:38	4	tif
water	4:35	0:0	5	tif
decl	5:1	5:27	2	unsigned int	bit
op	5:18	0:0	2	=
water	5:20	0:0	2	sp
op	5:22	0:0	2	->
water	5:24	0:0	2	bit
decl	6:1	6:20	2	int	data
op	6:10	0:0	2	=
water	6:12	0:0	2	sp
op	6:14	0:0	2	->
water	6:16	0:0	2	data
decl	7:1	7:33	2	unsigned int	code
water	7:18	0:0	2	,
decl	7:1	7:33	2	unsigned int	length
water	7:26	0:0	2	,
decl	7:1	7:33	2	unsigned int	tparm
if	8:1	24:1	2	(sp -> b . groupoptions & GROUP3OPT_FILLBITS)
cond	8:5	8:26	3	sp -> b . groupoptions & GROUP3OPT_FILLBITS
water	8:5	0:0	4	sp
op	8:7	0:0	4	->
water	8:9	0:0	4	b
op	8:10	0:0	4	.
water	8:11	0:0	4	groupoptions
op	8:24	0:0	4	&
water	8:26	0:0	4	GROUP3OPT_FILLBITS
stmts	8:46	24:1	3	
water	8:46	0:0	4	{
decl	14:2	14:19	4	int	align
op	14:12	0:0	4	=
water	14:14	0:0	4	8
op	14:16	0:0	4	-
water	14:18	0:0	4	4
if	15:2	23:2	4	(align != sp -> bit)
cond	15:6	15:19	5	align != sp -> bit
water	15:6	0:0	6	align
op	15:12	0:0	6	!=
water	15:15	0:0	6	sp
op	15:17	0:0	6	->
water	15:19	0:0	6	bit
stmts	15:24	23:2	5	
water	15:24	0:0	6	{
if	16:3	17:33	6	(align > sp -> bit)
cond	16:7	16:19	7	align > sp -> bit
water	16:7	0:0	8	align
op	16:13	0:0	8	>
water	16:15	0:0	8	sp
op	16:17	0:0	8	->
water	16:19	0:0	8	bit
stmts	17:4	17:33	7	
water	17:4	0:0	8	align
op	17:10	0:0	8	=
water	17:12	0:0	8	sp
op	17:14	0:0	8	->
water	17:16	0:0	8	bit
op	17:20	0:0	8	+
water	17:22	0:0	8	(
water	17:23	0:0	8	8
op	17:25	0:0	8	-
water	17:27	0:0	8	align
water	17:32	0:0	8	)
water	17:33	0:0	8	;
else	18:3	19:27	6
stmts	19:4	19:27	7	
water	19:4	0:0	8	align
op	19:10	0:0	8	=
water	19:12	0:0	8	sp
op	19:14	0:0	8	->
water	19:16	0:0	8	bit
op	19:20	0:0	8	-
water	19:22	0:0	8	align
water	19:27	0:0	8	;
water	20:3	0:0	6	code
op	20:8	0:0	6	=
water	20:10	0:0	6	0
water	20:11	0:0	6	;
water	21:3	0:0	6	tparm
op	21:8	0:0	6	=
water	21:9	0:0	6	align
water	21:14	0:0	6	;
call	22:3	22:25	6	_PutBits
arg	22:12	22:15	7	tif
water	22:12	0:0	8	tif
arg	22:17	22:18	7	0
water	22:17	0:0	8	0
arg	22:20	22:25	7	tparm
water	22:20	0:0	8	tparm
water	22:26	0:0	6	;
water	23:2	0:0	6	}
water	24:1	0:0	4	}
water	25:1	0:0	2	code
op	25:6	0:0	2	=
water	25:8	0:0	2	EOL
water	25:11	0:0	2	,
water	25:13	0:0	2	length
op	25:20	0:0	2	=
water	25:22	0:0	2	12
water	25:24	0:0	2	;
if	26:1	27:49	2	(is2DEncoding (sp ))
cond	26:5	26:20	3	is2DEncoding (sp )
call	26:5	26:20	4	is2DEncoding
arg	26:18	26:20	5	sp
water	26:18	0:0	6	sp
stmts	27:2	27:49	3	
water	27:2	0:0	4	code
op	27:7	0:0	4	=
water	27:9	0:0	4	(
water	27:10	0:0	4	code
op	27:14	0:0	4	<<
water	27:16	0:0	4	1
water	27:17	0:0	4	)
op	27:19	0:0	4	|
water	27:21	0:0	4	(
water	27:22	0:0	4	sp
op	27:24	0:0	4	->
water	27:26	0:0	4	tag
op	27:30	0:0	4	==
water	27:33	0:0	4	G3_1D
water	27:38	0:0	4	)
water	27:39	0:0	4	,
water	27:41	0:0	4	length
op	27:47	0:0	4	++
water	27:49	0:0	4	;
call	28:1	28:27	2	_PutBits
arg	28:10	28:13	3	tif
water	28:10	0:0	4	tif
arg	28:15	28:19	3	code
water	28:15	0:0	4	code
arg	28:21	28:27	3	length
water	28:21	0:0	4	length
water	28:28	0:0	2	;
water	29:1	0:0	2	sp
op	29:3	0:0	2	->
water	29:5	0:0	2	data
op	29:10	0:0	2	=
water	29:12	0:0	2	data
water	29:16	0:0	2	;
water	30:1	0:0	2	sp
op	30:3	0:0	2	->
water	30:5	0:0	2	bit
op	30:9	0:0	2	=
water	30:11	0:0	2	bit
water	30:14	0:0	2	;

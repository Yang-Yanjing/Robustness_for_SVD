func	1:0	63:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	62:11	1	
decl	4:1	4:6	2	int	c
water	6:1	0:0	2	extern
water	6:8	0:0	2	int
water	6:12	0:0	2	optind
water	6:18	0:0	2	;
water	7:1	0:0	2	extern
water	7:8	0:0	2	char
op	7:12	0:0	2	*
water	7:14	0:0	2	optarg
water	7:20	0:0	2	;
while	9:1	48:2	2	(( c =getopt (argc ,argv ,"c:p:r:" ) ) != - 1)
cond	9:8	9:47	3	( c =getopt (argc ,argv ,"c:p:r:" ) ) != - 1
water	9:8	0:0	4	(
water	9:9	0:0	4	c
op	9:11	0:0	4	=
call	9:13	9:40	4	getopt
arg	9:20	9:24	5	argc
water	9:20	0:0	6	argc
arg	9:26	9:30	5	argv
water	9:26	0:0	6	argv
arg	9:32	9:40	5	"c:p:r:"
water	9:32	0:0	6	"c:p:r:"
water	9:41	0:0	4	)
op	9:43	0:0	4	!=
op	9:46	0:0	4	-
water	9:47	0:0	4	1
stmts	10:2	48:2	3	
switch	10:2	48:2	4	(c)
cond	10:10	10:10	5	c
water	10:10	0:0	6	c
stmts	10:13	48:2	5	
water	10:13	0:0	6	{
water	11:2	0:0	6	case
water	11:7	0:0	6	'b'
water	11:10	0:0	6	:
water	12:3	0:0	6	photometric
op	12:15	0:0	6	=
water	12:17	0:0	6	PHOTOMETRIC_MINISBLACK
water	12:39	0:0	6	;
break	13:3	13:8	6	
water	14:2	0:0	6	case
water	14:7	0:0	6	'c'
water	14:10	0:0	6	:
water	15:3	0:0	6	if
water	15:6	0:0	6	(
call	15:7	15:27	6	streq
arg	15:13	15:19	7	optarg
water	15:13	0:0	8	optarg
arg	15:21	15:27	7	"none"
water	15:21	0:0	8	"none"
water	15:28	0:0	6	)
water	16:4	0:0	6	compression
op	16:16	0:0	6	=
water	16:18	0:0	6	COMPRESSION_NONE
water	16:34	0:0	6	;
else	17:3	18:38	6
stmts	17:8	18:38	7	
if	17:8	18:38	8	(streq (optarg ,"packbits" ))
cond	17:12	17:36	9	streq (optarg ,"packbits" )
call	17:12	17:36	10	streq
arg	17:18	17:24	11	optarg
water	17:18	0:0	12	optarg
arg	17:26	17:36	11	"packbits"
water	17:26	0:0	12	"packbits"
stmts	18:4	18:38	9	
water	18:4	0:0	10	compression
op	18:16	0:0	10	=
water	18:18	0:0	10	COMPRESSION_PACKBITS
water	18:38	0:0	10	;
else	19:3	26:3	6
stmts	19:8	26:3	7	
if	19:8	26:3	8	(strneq (optarg ,"jpeg" ,4 ))
cond	19:12	19:36	9	strneq (optarg ,"jpeg" ,4 )
call	19:12	19:36	10	strneq
arg	19:19	19:25	11	optarg
water	19:19	0:0	12	optarg
arg	19:27	19:33	11	"jpeg"
water	19:27	0:0	12	"jpeg"
arg	19:35	19:36	11	4
water	19:35	0:0	12	4
stmts	19:39	26:3	9	
water	19:39	0:0	10	{
decl	20:4	20:34	10	char	*cp
op	20:13	0:0	10	=
call	20:15	20:33	11	strchr
arg	20:22	20:28	12	optarg
water	20:22	0:0	13	optarg
arg	20:30	20:33	12	':'
water	20:30	0:0	13	':'
if	21:4	22:25	10	(cp &&isdigit (cp [ 1 ] ))
cond	21:8	21:27	11	cp &&isdigit (cp [ 1 ] )
water	21:8	0:0	12	cp
op	21:11	0:0	12	&&
call	21:14	21:27	12	isdigit
arg	21:22	21:27	13	cp[1]
water	21:22	0:0	14	cp
op	21:24	0:0	14	[
water	21:25	0:0	14	1
op	21:26	0:0	14	]
stmts	22:5	22:25	11	
water	22:5	0:0	12	quality
op	22:13	0:0	12	=
call	22:15	22:24	12	atoi
arg	22:20	22:24	13	cp+1
water	22:20	0:0	14	cp
op	22:22	0:0	14	+
water	22:23	0:0	14	1
water	22:25	0:0	12	;
if	23:4	24:38	10	(cp &&strchr (cp ,'r' ))
cond	23:8	23:28	11	cp &&strchr (cp ,'r' )
water	23:8	0:0	12	cp
op	23:11	0:0	12	&&
call	23:14	23:28	12	strchr
arg	23:21	23:23	13	cp
water	23:21	0:0	14	cp
arg	23:25	23:28	13	'r'
water	23:25	0:0	14	'r'
stmts	24:5	24:38	11	
water	24:5	0:0	12	jpegcolormode
op	24:19	0:0	12	=
water	24:21	0:0	12	JPEGCOLORMODE_RAW
water	24:38	0:0	12	;
water	25:4	0:0	10	compression
op	25:16	0:0	10	=
water	25:18	0:0	10	COMPRESSION_JPEG
water	25:34	0:0	10	;
water	26:3	0:0	10	}
else	26:5	31:3	6
stmts	26:10	31:3	7	
if	26:10	31:3	8	(strneq (optarg ,"lzw" ,3 ))
cond	26:14	26:37	9	strneq (optarg ,"lzw" ,3 )
call	26:14	26:37	10	strneq
arg	26:21	26:27	11	optarg
water	26:21	0:0	12	optarg
arg	26:29	26:34	11	"lzw"
water	26:29	0:0	12	"lzw"
arg	26:36	26:37	11	3
water	26:36	0:0	12	3
stmts	26:40	31:3	9	
water	26:40	0:0	10	{
decl	27:4	27:34	10	char	*cp
op	27:13	0:0	10	=
call	27:15	27:33	11	strchr
arg	27:22	27:28	12	optarg
water	27:22	0:0	13	optarg
arg	27:30	27:33	12	':'
water	27:30	0:0	13	':'
if	28:4	29:27	10	(cp)
cond	28:8	28:8	11	cp
water	28:8	0:0	12	cp
stmts	29:5	29:27	11	
water	29:5	0:0	12	predictor
op	29:15	0:0	12	=
call	29:17	29:26	12	atoi
arg	29:22	29:26	13	cp+1
water	29:22	0:0	14	cp
op	29:24	0:0	14	+
water	29:25	0:0	14	1
water	29:27	0:0	12	;
water	30:4	0:0	10	compression
op	30:16	0:0	10	=
water	30:18	0:0	10	COMPRESSION_LZW
water	30:33	0:0	10	;
water	31:3	0:0	10	}
else	31:5	32:11	6
stmts	32:4	32:11	7	
call	32:4	32:10	8	usage
water	32:11	0:0	8	;
break	33:3	33:8	6	
water	34:2	0:0	6	case
water	34:7	0:0	6	'p'
water	34:10	0:0	6	:
water	35:3	0:0	6	if
water	35:6	0:0	6	(
call	35:7	35:31	6	streq
arg	35:13	35:19	7	optarg
water	35:13	0:0	8	optarg
arg	35:21	35:31	7	"separate"
water	35:21	0:0	8	"separate"
water	35:32	0:0	6	)
water	36:4	0:0	6	config
op	36:11	0:0	6	=
water	36:13	0:0	6	PLANARCONFIG_SEPARATE
water	36:34	0:0	6	;
else	37:3	38:32	6
stmts	37:8	38:32	7	
if	37:8	38:32	8	(streq (optarg ,"contig" ))
cond	37:12	37:34	9	streq (optarg ,"contig" )
call	37:12	37:34	10	streq
arg	37:18	37:24	11	optarg
water	37:18	0:0	12	optarg
arg	37:26	37:34	11	"contig"
water	37:26	0:0	12	"contig"
stmts	38:4	38:32	9	
water	38:4	0:0	10	config
op	38:11	0:0	10	=
water	38:13	0:0	10	PLANARCONFIG_CONTIG
water	38:32	0:0	10	;
else	39:3	40:11	6
stmts	40:4	40:11	7	
call	40:4	40:10	8	usage
water	40:11	0:0	8	;
break	41:3	41:8	6	
water	42:2	0:0	6	case
water	42:7	0:0	6	'r'
water	42:10	0:0	6	:
water	43:3	0:0	6	rowsperstrip
op	43:16	0:0	6	=
call	43:18	43:29	6	atoi
arg	43:23	43:29	7	optarg
water	43:23	0:0	8	optarg
water	43:30	0:0	6	;
break	44:3	44:8	6	
water	45:2	0:0	6	case
water	45:7	0:0	6	'?'
water	45:10	0:0	6	:
call	46:3	46:9	6	usage
water	46:10	0:0	6	;
water	48:2	0:0	6	}
if	49:1	50:9	2	(argc - optind != 1 && argc - optind != 5)
cond	49:5	49:44	3	argc - optind != 1 && argc - optind != 5
water	49:5	0:0	4	argc
op	49:10	0:0	4	-
water	49:12	0:0	4	optind
op	49:19	0:0	4	!=
water	49:22	0:0	4	1
op	49:24	0:0	4	&&
water	49:27	0:0	4	argc
op	49:32	0:0	4	-
water	49:34	0:0	4	optind
op	49:41	0:0	4	!=
water	49:44	0:0	4	5
stmts	50:2	50:9	3	
call	50:2	50:8	4	usage
water	50:9	0:0	4	;
water	51:1	0:0	2	xmaxscreen
op	51:12	0:0	2	=
call	51:14	51:31	2	getgdesc
arg	51:23	51:31	3	GD_XPMAX
water	51:23	0:0	4	GD_XPMAX
op	51:32	0:0	2	-
water	51:33	0:0	2	1
water	51:34	0:0	2	;
water	52:1	0:0	2	ymaxscreen
op	52:12	0:0	2	=
call	52:14	52:31	2	getgdesc
arg	52:23	52:31	3	GD_YPMAX
water	52:23	0:0	4	GD_YPMAX
op	52:32	0:0	2	-
water	52:33	0:0	2	1
water	52:34	0:0	2	;
call	53:1	53:12	2	foreground
water	53:13	0:0	2	;
call	54:1	54:8	2	noport
water	54:9	0:0	2	;
call	55:1	55:17	2	winopen
arg	55:9	55:17	3	"tiffsv"
water	55:9	0:0	4	"tiffsv"
water	55:18	0:0	2	;
if	56:1	59:49	2	(argc - optind == 5)
cond	56:5	56:22	3	argc - optind == 5
water	56:5	0:0	4	argc
op	56:10	0:0	4	-
water	56:12	0:0	4	optind
op	56:19	0:0	4	==
water	56:22	0:0	4	5
stmts	57:2	59:49	3	
call	57:2	59:48	4	tiffsv
arg	57:9	57:21	5	argv[optind]
water	57:9	0:0	6	argv
op	57:13	0:0	6	[
water	57:14	0:0	6	optind
op	57:20	0:0	6	]
arg	58:6	58:26	5	atoi(argv[optind+1])
call	58:6	58:25	6	atoi
arg	58:11	58:25	7	argv[optind+1]
water	58:11	0:0	8	argv
op	58:15	0:0	8	[
water	58:16	0:0	8	optind
op	58:22	0:0	8	+
water	58:23	0:0	8	1
op	58:24	0:0	8	]
arg	58:28	58:48	5	atoi(argv[optind+2])
call	58:28	58:47	6	atoi
arg	58:33	58:47	7	argv[optind+2]
water	58:33	0:0	8	argv
op	58:37	0:0	8	[
water	58:38	0:0	8	optind
op	58:44	0:0	8	+
water	58:45	0:0	8	2
op	58:46	0:0	8	]
arg	59:6	59:26	5	atoi(argv[optind+3])
call	59:6	59:25	6	atoi
arg	59:11	59:25	7	argv[optind+3]
water	59:11	0:0	8	argv
op	59:15	0:0	8	[
water	59:16	0:0	8	optind
op	59:22	0:0	8	+
water	59:23	0:0	8	3
op	59:24	0:0	8	]
arg	59:28	59:48	5	atoi(argv[optind+4])
call	59:28	59:47	6	atoi
arg	59:33	59:47	7	argv[optind+4]
water	59:33	0:0	8	argv
op	59:37	0:0	8	[
water	59:38	0:0	8	optind
op	59:44	0:0	8	+
water	59:45	0:0	8	4
op	59:46	0:0	8	]
water	59:49	0:0	4	;
else	60:1	61:52	2
stmts	61:2	61:52	3	
call	61:2	61:51	4	tiffsv
arg	61:9	61:21	5	argv[optind]
water	61:9	0:0	6	argv
op	61:13	0:0	6	[
water	61:14	0:0	6	optind
op	61:20	0:0	6	]
arg	61:23	61:24	5	0
water	61:23	0:0	6	0
arg	61:26	61:36	5	xmaxscreen
water	61:26	0:0	6	xmaxscreen
arg	61:38	61:39	5	0
water	61:38	0:0	6	0
arg	61:41	61:51	5	ymaxscreen
water	61:41	0:0	6	ymaxscreen
water	61:52	0:0	4	;
return	62:1	62:11	2	(0)
water	62:8	0:0	3	(
water	62:9	0:0	3	0
water	62:10	0:0	3	)

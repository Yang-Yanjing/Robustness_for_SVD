func	1:0	56:2	0	static int	processCompressOptions
params	2:22	0:0	1	
param	2:23	2:32	2	char *	opt
stmnts	0:0	55:12	1	
decl	4:2	4:17	2	char	*cp
op	4:11	0:0	2	=
water	4:13	0:0	2	NULL
if	5:2	8:4	2	(strneq (opt ,"none" ,4 ))
cond	5:6	5:26	3	strneq (opt ,"none" ,4 )
call	5:6	5:26	4	strneq
arg	5:13	5:16	5	opt
water	5:13	0:0	6	opt
arg	5:18	5:24	5	"none"
water	5:18	0:0	6	"none"
arg	5:25	5:26	5	4
water	5:25	0:0	6	4
stmts	6:4	8:4	3	
water	6:4	0:0	4	{
water	7:4	0:0	4	defcompression
op	7:19	0:0	4	=
water	7:21	0:0	4	COMPRESSION_NONE
water	7:37	0:0	4	;
water	8:4	0:0	4	}
else	9:2	12:4	2
stmts	9:7	12:4	3	
if	9:7	12:4	4	(streq (opt ,"packbits" ))
cond	9:11	9:32	5	streq (opt ,"packbits" )
call	9:11	9:32	6	streq
arg	9:17	9:20	7	opt
water	9:17	0:0	8	opt
arg	9:22	9:32	7	"packbits"
water	9:22	0:0	8	"packbits"
stmts	10:4	12:4	5	
water	10:4	0:0	6	{
water	11:4	0:0	6	defcompression
op	11:19	0:0	6	=
water	11:21	0:0	6	COMPRESSION_PACKBITS
water	11:41	0:0	6	;
water	12:4	0:0	6	}
else	13:2	29:4	2
stmts	13:7	29:4	3	
if	13:7	29:4	4	(strneq (opt ,"jpeg" ,4 ))
cond	13:11	13:32	5	strneq (opt ,"jpeg" ,4 )
call	13:11	13:32	6	strneq
arg	13:18	13:21	7	opt
water	13:18	0:0	8	opt
arg	13:23	13:29	7	"jpeg"
water	13:23	0:0	8	"jpeg"
arg	13:31	13:32	7	4
water	13:31	0:0	8	4
stmts	14:4	29:4	5	
water	14:4	0:0	6	{
water	15:4	0:0	6	cp
op	15:7	0:0	6	=
call	15:9	15:24	6	strchr
arg	15:16	15:19	7	opt
water	15:16	0:0	8	opt
arg	15:21	15:24	7	':'
water	15:21	0:0	8	':'
water	15:25	0:0	6	;
water	16:4	0:0	6	defcompression
op	16:19	0:0	6	=
water	16:21	0:0	6	COMPRESSION_JPEG
water	16:37	0:0	6	;
while	17:4	28:6	6	(cp)
cond	17:11	17:11	7	cp
water	17:11	0:0	8	cp
stmts	18:6	28:6	7	
water	18:6	0:0	8	{
if	19:6	20:23	8	(isdigit (( int ) cp [ 1 ] ))
cond	19:10	19:28	9	isdigit (( int ) cp [ 1 ] )
call	19:10	19:28	10	isdigit
arg	19:18	19:28	11	(int)cp[1]
water	19:18	0:0	12	(
water	19:19	0:0	12	int
water	19:22	0:0	12	)
water	19:23	0:0	12	cp
op	19:25	0:0	12	[
water	19:26	0:0	12	1
op	19:27	0:0	12	]
stmts	20:1	20:23	9	
water	20:1	0:0	10	quality
op	20:9	0:0	10	=
call	20:11	20:22	10	atoi
arg	20:16	20:22	11	cp+1
water	20:16	0:0	12	cp
op	20:19	0:0	12	+
water	20:21	0:0	12	1
water	20:23	0:0	10	;
else	21:6	22:34	8
stmts	21:11	22:34	9	
if	21:11	22:34	10	(strneq (cp + 1 ,"raw" ,3 ))
cond	21:15	21:39	11	strneq (cp + 1 ,"raw" ,3 )
call	21:15	21:39	12	strneq
arg	21:22	21:28	13	cp+1
water	21:22	0:0	14	cp
op	21:25	0:0	14	+
water	21:27	0:0	14	1
arg	21:30	21:35	13	"raw"
water	21:30	0:0	14	"raw"
arg	21:37	21:39	13	3
water	21:37	0:0	14	3
stmts	22:1	22:34	11	
water	22:1	0:0	12	jpegcolormode
op	22:15	0:0	12	=
water	22:17	0:0	12	JPEGCOLORMODE_RAW
water	22:34	0:0	12	;
else	23:6	24:34	8
stmts	23:11	24:34	9	
if	23:11	24:34	10	(strneq (cp + 1 ,"rgb" ,3 ))
cond	23:15	23:39	11	strneq (cp + 1 ,"rgb" ,3 )
call	23:15	23:39	12	strneq
arg	23:22	23:28	13	cp+1
water	23:22	0:0	14	cp
op	23:25	0:0	14	+
water	23:27	0:0	14	1
arg	23:30	23:35	13	"rgb"
water	23:30	0:0	14	"rgb"
arg	23:37	23:39	13	3
water	23:37	0:0	14	3
stmts	24:1	24:34	11	
water	24:1	0:0	12	jpegcolormode
op	24:15	0:0	12	=
water	24:17	0:0	12	JPEGCOLORMODE_RGB
water	24:34	0:0	12	;
else	25:6	26:8	8
stmts	26:1	26:8	9	
call	26:1	26:7	10	usage
water	26:8	0:0	10	;
water	27:6	0:0	8	cp
op	27:9	0:0	8	=
call	27:11	27:29	8	strchr
arg	27:18	27:24	9	cp+1
water	27:18	0:0	10	cp
op	27:21	0:0	10	+
water	27:23	0:0	10	1
arg	27:26	27:29	9	':'
water	27:26	0:0	10	':'
water	27:30	0:0	8	;
water	28:6	0:0	8	}
water	29:4	0:0	6	}
else	30:2	34:4	2
stmts	30:7	34:4	3	
if	30:7	34:4	4	(strneq (opt ,"g3" ,2 ))
cond	30:11	30:30	5	strneq (opt ,"g3" ,2 )
call	30:11	30:30	6	strneq
arg	30:18	30:21	7	opt
water	30:18	0:0	8	opt
arg	30:23	30:27	7	"g3"
water	30:23	0:0	8	"g3"
arg	30:29	30:30	7	2
water	30:29	0:0	8	2
stmts	31:4	34:4	5	
water	31:4	0:0	6	{
call	32:4	32:24	6	processG3Options
arg	32:21	32:24	7	opt
water	32:21	0:0	8	opt
water	32:25	0:0	6	;
water	33:4	0:0	6	defcompression
op	33:19	0:0	6	=
water	33:21	0:0	6	COMPRESSION_CCITTFAX3
water	33:42	0:0	6	;
water	34:4	0:0	6	}
else	35:2	38:4	2
stmts	35:7	38:4	3	
if	35:7	38:4	4	(streq (opt ,"g4" ))
cond	35:11	35:26	5	streq (opt ,"g4" )
call	35:11	35:26	6	streq
arg	35:17	35:20	7	opt
water	35:17	0:0	8	opt
arg	35:22	35:26	7	"g4"
water	35:22	0:0	8	"g4"
stmts	36:4	38:4	5	
water	36:4	0:0	6	{
water	37:4	0:0	6	defcompression
op	37:19	0:0	6	=
water	37:21	0:0	6	COMPRESSION_CCITTFAX4
water	37:42	0:0	6	;
water	38:4	0:0	6	}
else	39:2	45:4	2
stmts	39:7	45:4	3	
if	39:7	45:4	4	(strneq (opt ,"lzw" ,3 ))
cond	39:11	39:31	5	strneq (opt ,"lzw" ,3 )
call	39:11	39:31	6	strneq
arg	39:18	39:21	7	opt
water	39:18	0:0	8	opt
arg	39:23	39:28	7	"lzw"
water	39:23	0:0	8	"lzw"
arg	39:30	39:31	7	3
water	39:30	0:0	8	3
stmts	40:4	45:4	5	
water	40:4	0:0	6	{
water	41:4	0:0	6	cp
op	41:7	0:0	6	=
call	41:9	41:24	6	strchr
arg	41:16	41:19	7	opt
water	41:16	0:0	8	opt
arg	41:21	41:24	7	':'
water	41:21	0:0	8	':'
water	41:25	0:0	6	;
if	42:4	43:31	6	(cp)
cond	42:8	42:8	7	cp
water	42:8	0:0	8	cp
stmts	43:6	43:31	7	
water	43:6	0:0	8	defpredictor
op	43:19	0:0	8	=
call	43:21	43:30	8	atoi
arg	43:26	43:30	9	cp+1
water	43:26	0:0	10	cp
op	43:28	0:0	10	+
water	43:29	0:0	10	1
water	43:31	0:0	8	;
water	44:4	0:0	6	defcompression
op	44:19	0:0	6	=
water	44:21	0:0	6	COMPRESSION_LZW
water	44:36	0:0	6	;
water	45:4	0:0	6	}
else	46:2	52:3	2
stmts	46:7	52:3	3	
if	46:7	52:3	4	(strneq (opt ,"zip" ,3 ))
cond	46:11	46:31	5	strneq (opt ,"zip" ,3 )
call	46:11	46:31	6	strneq
arg	46:18	46:21	7	opt
water	46:18	0:0	8	opt
arg	46:23	46:28	7	"zip"
water	46:23	0:0	8	"zip"
arg	46:30	46:31	7	3
water	46:30	0:0	8	3
stmts	47:4	52:3	5	
water	47:4	0:0	6	{
water	48:4	0:0	6	cp
op	48:7	0:0	6	=
call	48:9	48:24	6	strchr
arg	48:16	48:19	7	opt
water	48:16	0:0	8	opt
arg	48:21	48:24	7	':'
water	48:21	0:0	8	':'
water	48:25	0:0	6	;
if	49:4	50:31	6	(cp)
cond	49:8	49:8	7	cp
water	49:8	0:0	8	cp
stmts	50:6	50:31	7	
water	50:6	0:0	8	defpredictor
op	50:19	0:0	8	=
call	50:21	50:30	8	atoi
arg	50:26	50:30	9	cp+1
water	50:26	0:0	10	cp
op	50:28	0:0	10	+
water	50:29	0:0	10	1
water	50:31	0:0	8	;
water	51:4	0:0	6	defcompression
op	51:19	0:0	6	=
water	51:21	0:0	6	COMPRESSION_ADOBE_DEFLATE
water	51:46	0:0	6	;
water	52:3	0:0	6	}
else	53:2	54:14	2
stmts	54:4	54:14	3	
return	54:4	54:14	4	(0)
water	54:11	0:0	5	(
water	54:12	0:0	5	0
water	54:13	0:0	5	)
return	55:2	55:12	2	(1)
water	55:9	0:0	3	(
water	55:10	0:0	3	1
water	55:11	0:0	3	)

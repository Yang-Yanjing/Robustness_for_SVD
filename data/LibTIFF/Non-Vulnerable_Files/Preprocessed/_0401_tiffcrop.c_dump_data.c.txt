func	2:0	37:2	0	static int	dump_data
params	2:21	0:0	1	
param	2:22	2:36	2	FILE *	dumpfile
param	2:38	2:48	2	int	format
param	2:50	2:64	2	char *	dump_tag
param	2:66	2:85	2	unsigned char *	data
param	2:87	2:99	2	uint32	count
stmnts	0:0	36:12	1	
decl	4:2	4:10	2	int	j
water	4:7	0:0	2	,
decl	4:2	4:10	2	int	k
decl	5:2	5:10	2	uint32	i
decl	6:2	6:22	2	char	dump_array[10]
decl	7:2	7:22	2	unsigned char	bitset
if	8:2	12:4	2	(dumpfile == NULL)
cond	8:6	8:18	3	dumpfile == NULL
water	8:6	0:0	4	dumpfile
op	8:15	0:0	4	==
water	8:18	0:0	4	NULL
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:4	10:55	4	TIFFError
arg	10:15	10:17	5	""
water	10:15	0:0	6	""
arg	10:19	10:55	5	"Invalid FILE pointer for dump file"
water	10:19	0:0	6	"Invalid FILE pointer for dump file"
water	10:56	0:0	4	;
return	11:4	11:14	4	(1)
water	11:11	0:0	5	(
water	11:12	0:0	5	1
water	11:13	0:0	5	)
water	12:4	0:0	4	}
if	13:2	27:4	2	(format == DUMP_TEXT)
cond	13:6	13:16	3	format == DUMP_TEXT
water	13:6	0:0	4	format
op	13:13	0:0	4	==
water	13:16	0:0	4	DUMP_TEXT
stmts	14:4	27:4	3	
water	14:4	0:0	4	{
call	15:4	15:39	4	fprintf
arg	15:13	15:21	5	dumpfile
water	15:13	0:0	6	dumpfile
arg	15:22	15:29	5	" %s  "
water	15:22	0:0	6	" %s  "
arg	15:31	15:39	5	dump_tag
water	15:31	0:0	6	dump_tag
water	15:40	0:0	4	;
for	16:4	25:6	4	(i = 0 ;i < count;i ++)
forinit	16:9	16:14	5	i = 0 ;
water	16:9	0:0	6	i
op	16:11	0:0	6	=
water	16:13	0:0	6	0
water	16:14	0:0	6	;
cond	16:16	16:20	5	i < count
water	16:16	0:0	6	i
op	16:18	0:0	6	<
water	16:20	0:0	6	count
forexpr	16:27	16:28	5	i ++
water	16:27	0:0	6	i
op	16:28	0:0	6	++
stmts	17:6	25:6	5	
water	17:6	0:0	6	{
for	18:6	22:8	6	(j = 0 , k = 7 ;j < 8;j ++ , k --)
forinit	18:11	18:23	7	j = 0 , k = 7 ;
water	18:11	0:0	8	j
op	18:13	0:0	8	=
water	18:15	0:0	8	0
water	18:16	0:0	8	,
water	18:18	0:0	8	k
op	18:20	0:0	8	=
water	18:22	0:0	8	7
water	18:23	0:0	8	;
cond	18:25	18:29	7	j < 8
water	18:25	0:0	8	j
op	18:27	0:0	8	<
water	18:29	0:0	8	8
forexpr	18:32	18:38	7	j ++ , k --
water	18:32	0:0	8	j
op	18:33	0:0	8	++
water	18:35	0:0	8	,
water	18:37	0:0	8	k
op	18:38	0:0	8	--
stmts	19:8	22:8	7	
water	19:8	0:0	8	{
water	20:1	0:0	8	bitset
op	20:8	0:0	8	=
water	20:10	0:0	8	(
op	20:11	0:0	8	*
water	20:12	0:0	8	(
water	20:13	0:0	8	data
op	20:18	0:0	8	+
water	20:20	0:0	8	i
water	20:21	0:0	8	)
water	20:22	0:0	8	)
op	20:24	0:0	8	&
water	20:26	0:0	8	(
water	20:27	0:0	8	(
water	20:28	0:0	8	(
water	20:29	0:0	8	unsigned
water	20:38	0:0	8	char
water	20:42	0:0	8	)
water	20:43	0:0	8	1
op	20:45	0:0	8	<<
water	20:48	0:0	8	k
water	20:49	0:0	8	)
water	20:50	0:0	8	)
water	20:52	0:0	8	?
water	20:54	0:0	8	1
water	20:56	0:0	8	:
water	20:58	0:0	8	0
water	20:59	0:0	8	;
call	21:8	21:52	8	sprintf
arg	21:16	21:30	9	&dump_array[j]
op	21:16	0:0	10	&
water	21:17	0:0	10	dump_array
op	21:27	0:0	10	[
water	21:28	0:0	10	j
op	21:29	0:0	10	]
arg	21:32	21:52	9	(bitset)?"1":"0"
water	21:32	0:0	10	(
water	21:33	0:0	10	bitset
water	21:39	0:0	10	)
water	21:41	0:0	10	?
water	21:43	0:0	10	"1"
water	21:47	0:0	10	:
water	21:49	0:0	10	"0"
water	21:53	0:0	8	;
water	22:8	0:0	8	}
water	23:6	0:0	6	dump_array
op	23:16	0:0	6	[
water	23:17	0:0	6	8
op	23:18	0:0	6	]
op	23:20	0:0	6	=
water	23:22	0:0	6	'\0'
water	23:26	0:0	6	;
call	24:6	24:41	6	fprintf
arg	24:15	24:23	7	dumpfile
water	24:15	0:0	8	dumpfile
arg	24:24	24:29	7	" %s"
water	24:24	0:0	8	" %s"
arg	24:31	24:41	7	dump_array
water	24:31	0:0	8	dump_array
water	24:42	0:0	6	;
water	25:6	0:0	6	}
call	26:4	26:26	4	fprintf
arg	26:13	26:21	5	dumpfile
water	26:13	0:0	6	dumpfile
arg	26:22	26:26	5	"\n"
water	26:22	0:0	6	"\n"
water	26:27	0:0	4	;
water	27:4	0:0	4	}
else	28:2	35:4	2
stmts	29:4	35:4	3	
water	29:4	0:0	4	{
if	30:4	34:6	4	((fwrite (data ,1 ,count ,dumpfile ) ) != count)
cond	30:8	30:47	5	(fwrite (data ,1 ,count ,dumpfile ) ) != count
water	30:8	0:0	6	(
call	30:9	30:41	6	fwrite
arg	30:17	30:21	7	data
water	30:17	0:0	8	data
arg	30:23	30:24	7	1
water	30:23	0:0	8	1
arg	30:26	30:31	7	count
water	30:26	0:0	8	count
arg	30:33	30:41	7	dumpfile
water	30:33	0:0	8	dumpfile
water	30:42	0:0	6	)
op	30:44	0:0	6	!=
water	30:47	0:0	6	count
stmts	31:6	34:6	5	
water	31:6	0:0	6	{
call	32:6	32:63	6	TIFFError
arg	32:17	32:19	7	""
water	32:17	0:0	8	""
arg	32:21	32:63	7	"Unable to write binary data to dump file"
water	32:21	0:0	8	"Unable to write binary data to dump file"
water	32:64	0:0	6	;
return	33:6	33:16	6	(1)
water	33:13	0:0	7	(
water	33:14	0:0	7	1
water	33:15	0:0	7	)
water	34:6	0:0	6	}
water	35:4	0:0	4	}
return	36:2	36:12	2	(0)
water	36:9	0:0	3	(
water	36:10	0:0	3	0
water	36:11	0:0	3	)

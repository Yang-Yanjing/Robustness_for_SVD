func	1:0	54:0	0	static int	horAcc8
params	2:7	0:0	1	
param	2:8	2:17	2	TIFF *	tif
param	2:19	2:29	2	uint8 *	cp0
param	2:31	2:42	2	tmsize_t	cc
stmnts	0:0	53:9	1	
decl	4:1	4:46	2	tmsize_t	stride
op	4:17	0:0	2	=
call	4:19	4:37	3	PredictorState
arg	4:34	4:37	4	tif
water	4:34	0:0	5	tif
op	4:38	0:0	2	->
water	4:40	0:0	2	stride
decl	5:1	5:41	2	unsigned char	*cp
op	5:19	0:0	2	=
water	5:21	0:0	2	(
water	5:22	0:0	2	unsigned
water	5:31	0:0	2	char
op	5:35	0:0	2	*
water	5:36	0:0	2	)
water	5:38	0:0	2	cp0
if	6:4	11:4	2	(( cc % stride ) != 0)
cond	6:7	6:20	3	( cc % stride ) != 0
water	6:7	0:0	4	(
water	6:8	0:0	4	cc
op	6:10	0:0	4	%
water	6:11	0:0	4	stride
water	6:17	0:0	4	)
op	6:18	0:0	4	!=
water	6:20	0:0	4	0
stmts	7:4	11:4	3	
water	7:4	0:0	4	{
call	8:8	9:43	4	TIFFErrorExt
arg	8:21	8:40	5	tif->tif_clientdata
water	8:21	0:0	6	tif
op	8:24	0:0	6	->
water	8:26	0:0	6	tif_clientdata
arg	8:42	8:51	5	"horAcc8"
water	8:42	0:0	6	"horAcc8"
arg	9:21	9:25	5	"%s"
water	9:21	0:0	6	"%s"
arg	9:27	9:43	5	"(cc%stride)!=0"
water	9:27	0:0	6	"(cc%stride)!=0"
water	9:44	0:0	4	;
return	10:8	10:16	4	0
water	10:15	0:0	5	0
water	11:4	0:0	4	}
if	12:1	52:1	2	(cc > stride)
cond	12:5	12:10	3	cc > stride
water	12:5	0:0	4	cc
op	12:8	0:0	4	>
water	12:10	0:0	4	stride
stmts	12:18	52:1	3	
water	12:18	0:0	4	{
if	16:2	29:2	4	(stride == 3)
cond	16:6	16:16	5	stride == 3
water	16:6	0:0	6	stride
op	16:13	0:0	6	==
water	16:16	0:0	6	3
stmts	16:20	29:2	5	
water	16:20	0:0	6	{
decl	17:3	17:26	6	unsigned int	cr
op	17:19	0:0	6	=
water	17:21	0:0	6	cp
op	17:23	0:0	6	[
water	17:24	0:0	6	0
op	17:25	0:0	6	]
decl	18:3	18:26	6	unsigned int	cg
op	18:19	0:0	6	=
water	18:21	0:0	6	cp
op	18:23	0:0	6	[
water	18:24	0:0	6	1
op	18:25	0:0	6	]
decl	19:3	19:26	6	unsigned int	cb
op	19:19	0:0	6	=
water	19:21	0:0	6	cp
op	19:23	0:0	6	[
water	19:24	0:0	6	2
op	19:25	0:0	6	]
water	20:3	0:0	6	cc
op	20:6	0:0	6	-=
water	20:9	0:0	6	3
water	20:10	0:0	6	;
water	21:3	0:0	6	cp
op	21:6	0:0	6	+=
water	21:9	0:0	6	3
water	21:10	0:0	6	;
while	22:3	28:3	6	(cc > 0)
cond	22:10	22:13	7	cc > 0
water	22:10	0:0	8	cc
op	22:12	0:0	8	>
water	22:13	0:0	8	0
stmts	22:16	28:3	7	
water	22:16	0:0	8	{
water	23:4	0:0	8	cp
op	23:6	0:0	8	[
water	23:7	0:0	8	0
op	23:8	0:0	8	]
op	23:10	0:0	8	=
call	23:12	23:49	8	(unsignedchar)
arg	23:29	23:49	9	(cr+=cp[0])&0xff
water	23:29	0:0	10	(
water	23:30	0:0	10	cr
op	23:33	0:0	10	+=
water	23:36	0:0	10	cp
op	23:38	0:0	10	[
water	23:39	0:0	10	0
op	23:40	0:0	10	]
water	23:41	0:0	10	)
op	23:43	0:0	10	&
water	23:45	0:0	10	0
water	23:46	0:0	10	xff
water	23:50	0:0	8	;
water	24:4	0:0	8	cp
op	24:6	0:0	8	[
water	24:7	0:0	8	1
op	24:8	0:0	8	]
op	24:10	0:0	8	=
call	24:12	24:49	8	(unsignedchar)
arg	24:29	24:49	9	(cg+=cp[1])&0xff
water	24:29	0:0	10	(
water	24:30	0:0	10	cg
op	24:33	0:0	10	+=
water	24:36	0:0	10	cp
op	24:38	0:0	10	[
water	24:39	0:0	10	1
op	24:40	0:0	10	]
water	24:41	0:0	10	)
op	24:43	0:0	10	&
water	24:45	0:0	10	0
water	24:46	0:0	10	xff
water	24:50	0:0	8	;
water	25:4	0:0	8	cp
op	25:6	0:0	8	[
water	25:7	0:0	8	2
op	25:8	0:0	8	]
op	25:10	0:0	8	=
call	25:12	25:49	8	(unsignedchar)
arg	25:29	25:49	9	(cb+=cp[2])&0xff
water	25:29	0:0	10	(
water	25:30	0:0	10	cb
op	25:33	0:0	10	+=
water	25:36	0:0	10	cp
op	25:38	0:0	10	[
water	25:39	0:0	10	2
op	25:40	0:0	10	]
water	25:41	0:0	10	)
op	25:43	0:0	10	&
water	25:45	0:0	10	0
water	25:46	0:0	10	xff
water	25:50	0:0	8	;
water	26:4	0:0	8	cc
op	26:7	0:0	8	-=
water	26:10	0:0	8	3
water	26:11	0:0	8	;
water	27:4	0:0	8	cp
op	27:7	0:0	8	+=
water	27:10	0:0	8	3
water	27:11	0:0	8	;
water	28:3	0:0	8	}
water	29:2	0:0	6	}
else	29:4	44:2	4
stmts	29:9	44:2	5	
if	29:9	44:2	6	(stride == 4)
cond	29:13	29:23	7	stride == 4
water	29:13	0:0	8	stride
op	29:20	0:0	8	==
water	29:23	0:0	8	4
stmts	29:27	44:2	7	
water	29:27	0:0	8	{
decl	30:3	30:26	8	unsigned int	cr
op	30:19	0:0	8	=
water	30:21	0:0	8	cp
op	30:23	0:0	8	[
water	30:24	0:0	8	0
op	30:25	0:0	8	]
decl	31:3	31:26	8	unsigned int	cg
op	31:19	0:0	8	=
water	31:21	0:0	8	cp
op	31:23	0:0	8	[
water	31:24	0:0	8	1
op	31:25	0:0	8	]
decl	32:3	32:26	8	unsigned int	cb
op	32:19	0:0	8	=
water	32:21	0:0	8	cp
op	32:23	0:0	8	[
water	32:24	0:0	8	2
op	32:25	0:0	8	]
decl	33:3	33:26	8	unsigned int	ca
op	33:19	0:0	8	=
water	33:21	0:0	8	cp
op	33:23	0:0	8	[
water	33:24	0:0	8	3
op	33:25	0:0	8	]
water	34:3	0:0	8	cc
op	34:6	0:0	8	-=
water	34:9	0:0	8	4
water	34:10	0:0	8	;
water	35:3	0:0	8	cp
op	35:6	0:0	8	+=
water	35:9	0:0	8	4
water	35:10	0:0	8	;
while	36:3	43:3	8	(cc > 0)
cond	36:10	36:13	9	cc > 0
water	36:10	0:0	10	cc
op	36:12	0:0	10	>
water	36:13	0:0	10	0
stmts	36:16	43:3	9	
water	36:16	0:0	10	{
water	37:4	0:0	10	cp
op	37:6	0:0	10	[
water	37:7	0:0	10	0
op	37:8	0:0	10	]
op	37:10	0:0	10	=
call	37:12	37:49	10	(unsignedchar)
arg	37:29	37:49	11	(cr+=cp[0])&0xff
water	37:29	0:0	12	(
water	37:30	0:0	12	cr
op	37:33	0:0	12	+=
water	37:36	0:0	12	cp
op	37:38	0:0	12	[
water	37:39	0:0	12	0
op	37:40	0:0	12	]
water	37:41	0:0	12	)
op	37:43	0:0	12	&
water	37:45	0:0	12	0
water	37:46	0:0	12	xff
water	37:50	0:0	10	;
water	38:4	0:0	10	cp
op	38:6	0:0	10	[
water	38:7	0:0	10	1
op	38:8	0:0	10	]
op	38:10	0:0	10	=
call	38:12	38:49	10	(unsignedchar)
arg	38:29	38:49	11	(cg+=cp[1])&0xff
water	38:29	0:0	12	(
water	38:30	0:0	12	cg
op	38:33	0:0	12	+=
water	38:36	0:0	12	cp
op	38:38	0:0	12	[
water	38:39	0:0	12	1
op	38:40	0:0	12	]
water	38:41	0:0	12	)
op	38:43	0:0	12	&
water	38:45	0:0	12	0
water	38:46	0:0	12	xff
water	38:50	0:0	10	;
water	39:4	0:0	10	cp
op	39:6	0:0	10	[
water	39:7	0:0	10	2
op	39:8	0:0	10	]
op	39:10	0:0	10	=
call	39:12	39:49	10	(unsignedchar)
arg	39:29	39:49	11	(cb+=cp[2])&0xff
water	39:29	0:0	12	(
water	39:30	0:0	12	cb
op	39:33	0:0	12	+=
water	39:36	0:0	12	cp
op	39:38	0:0	12	[
water	39:39	0:0	12	2
op	39:40	0:0	12	]
water	39:41	0:0	12	)
op	39:43	0:0	12	&
water	39:45	0:0	12	0
water	39:46	0:0	12	xff
water	39:50	0:0	10	;
water	40:4	0:0	10	cp
op	40:6	0:0	10	[
water	40:7	0:0	10	3
op	40:8	0:0	10	]
op	40:10	0:0	10	=
call	40:12	40:49	10	(unsignedchar)
arg	40:29	40:49	11	(ca+=cp[3])&0xff
water	40:29	0:0	12	(
water	40:30	0:0	12	ca
op	40:33	0:0	12	+=
water	40:36	0:0	12	cp
op	40:38	0:0	12	[
water	40:39	0:0	12	3
op	40:40	0:0	12	]
water	40:41	0:0	12	)
op	40:43	0:0	12	&
water	40:45	0:0	12	0
water	40:46	0:0	12	xff
water	40:50	0:0	10	;
water	41:4	0:0	10	cc
op	41:7	0:0	10	-=
water	41:10	0:0	10	4
water	41:11	0:0	10	;
water	42:4	0:0	10	cp
op	42:7	0:0	10	+=
water	42:10	0:0	10	4
water	42:11	0:0	10	;
water	43:3	0:0	10	}
water	44:2	0:0	8	}
else	44:4	51:2	4
stmts	44:10	51:2	5	
water	44:10	0:0	6	{
water	45:3	0:0	6	cc
op	45:6	0:0	6	-=
water	45:9	0:0	6	stride
water	45:15	0:0	6	;
do	46:3	50:3	6	(cc > 0)
cond	50:12	50:15	7	cc > 0
water	50:12	0:0	8	cc
op	50:14	0:0	8	>
water	50:15	0:0	8	0
stmts	46:6	50:3	7	
water	46:6	0:0	8	{
water	47:4	0:0	8	REPEAT4
water	47:11	0:0	8	(
water	47:12	0:0	8	stride
water	47:18	0:0	8	,
water	47:20	0:0	8	cp
op	47:22	0:0	8	[
water	47:23	0:0	8	stride
op	47:29	0:0	8	]
op	47:31	0:0	8	=
call	48:5	48:47	8	(unsignedchar)
arg	48:22	48:47	9	(cp[stride]+*cp)&0xff
water	48:22	0:0	10	(
water	48:23	0:0	10	cp
op	48:25	0:0	10	[
water	48:26	0:0	10	stride
op	48:32	0:0	10	]
op	48:34	0:0	10	+
op	48:36	0:0	10	*
water	48:37	0:0	10	cp
water	48:39	0:0	10	)
op	48:41	0:0	10	&
water	48:43	0:0	10	0
water	48:44	0:0	10	xff
water	48:48	0:0	8	;
water	48:50	0:0	8	cp
op	48:52	0:0	8	++
water	48:54	0:0	8	)
water	49:4	0:0	8	cc
op	49:7	0:0	8	-=
water	49:10	0:0	8	stride
water	49:16	0:0	8	;
water	50:3	0:0	8	}
water	50:17	0:0	6	;
water	51:2	0:0	6	}
water	52:1	0:0	4	}
return	53:1	53:9	2	1
water	53:8	0:0	3	1

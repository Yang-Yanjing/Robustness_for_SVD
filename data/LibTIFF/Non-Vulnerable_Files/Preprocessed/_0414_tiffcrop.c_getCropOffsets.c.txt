func	1:0	196:2	0	static int	getCropOffsets
params	2:14	0:0	1	
param	2:15	2:39	2	struct image_data *	image
param	2:41	2:63	2	struct crop_mask *	crop
param	2:65	2:87	2	struct dump_opts *	dump
stmnts	0:0	195:12	1	
decl	4:2	4:23	2	struct offset	offsets
decl	5:2	5:10	2	int	i
decl	6:2	6:13	2	int32	test
decl	7:2	7:34	2	uint32	seg
water	7:12	0:0	2	,
decl	7:2	7:34	2	uint32	total
water	7:19	0:0	2	,
decl	7:2	7:34	2	uint32	need_buff
op	7:31	0:0	2	=
water	7:33	0:0	2	0
decl	8:2	8:17	2	uint32	buffsize
decl	9:2	9:24	2	uint32	zwidth
water	9:15	0:0	2	,
decl	9:2	9:24	2	uint32	zlength
call	10:2	10:46	2	memset
arg	10:9	10:17	3	&offsets
op	10:9	0:0	4	&
water	10:10	0:0	4	offsets
arg	10:19	10:23	3	'\0'
water	10:19	0:0	4	'\0'
arg	10:25	10:46	3	sizeof(structoffset)
op	10:25	0:0	4	sizeof
water	10:31	0:0	4	(
water	10:32	0:0	4	struct
water	10:39	0:0	4	offset
water	10:45	0:0	4	)
water	10:47	0:0	2	;
water	11:2	0:0	2	crop
op	11:6	0:0	2	->
water	11:8	0:0	2	bufftotal
op	11:18	0:0	2	=
water	11:20	0:0	2	0
water	11:21	0:0	2	;
water	12:2	0:0	2	crop
op	12:6	0:0	2	->
water	12:8	0:0	2	combined_width
op	12:24	0:0	2	=
water	12:26	0:0	2	(
water	12:27	0:0	2	uint32
water	12:33	0:0	2	)
water	12:34	0:0	2	0
water	12:35	0:0	2	;
water	13:2	0:0	2	crop
op	13:6	0:0	2	->
water	13:8	0:0	2	combined_length
op	13:24	0:0	2	=
water	13:26	0:0	2	(
water	13:27	0:0	2	uint32
water	13:33	0:0	2	)
water	13:34	0:0	2	0
water	13:35	0:0	2	;
water	14:2	0:0	2	crop
op	14:6	0:0	2	->
water	14:8	0:0	2	selections
op	14:19	0:0	2	=
water	14:21	0:0	2	0
water	14:22	0:0	2	;
if	16:2	31:4	2	(( crop -> crop_mode & CROP_MARGINS ) || ( crop -> crop_mode & CROP_REGIONS ) || ( crop -> crop_mode & CROP_LENGTH ) || ( crop -> crop_mode & CROP_WIDTH ))
cond	16:6	19:35	3	( crop -> crop_mode & CROP_MARGINS ) || ( crop -> crop_mode & CROP_REGIONS ) || ( crop -> crop_mode & CROP_LENGTH ) || ( crop -> crop_mode & CROP_WIDTH )
water	16:6	0:0	4	(
water	16:7	0:0	4	crop
op	16:11	0:0	4	->
water	16:13	0:0	4	crop_mode
op	16:23	0:0	4	&
water	16:25	0:0	4	CROP_MARGINS
water	16:37	0:0	4	)
op	16:39	0:0	4	||
water	17:6	0:0	4	(
water	17:7	0:0	4	crop
op	17:11	0:0	4	->
water	17:13	0:0	4	crop_mode
op	17:23	0:0	4	&
water	17:25	0:0	4	CROP_REGIONS
water	17:37	0:0	4	)
op	17:39	0:0	4	||
water	18:6	0:0	4	(
water	18:7	0:0	4	crop
op	18:11	0:0	4	->
water	18:13	0:0	4	crop_mode
op	18:23	0:0	4	&
water	18:25	0:0	4	CROP_LENGTH
water	18:36	0:0	4	)
op	18:39	0:0	4	||
water	19:6	0:0	4	(
water	19:7	0:0	4	crop
op	19:11	0:0	4	->
water	19:13	0:0	4	crop_mode
op	19:23	0:0	4	&
water	19:25	0:0	4	CROP_WIDTH
water	19:35	0:0	4	)
stmts	20:4	31:4	3	
water	20:4	0:0	4	{
if	21:4	25:6	4	(computeInputPixelOffsets (crop ,image ,& offsets ))
cond	21:8	21:54	5	computeInputPixelOffsets (crop ,image ,& offsets )
call	21:8	21:54	6	computeInputPixelOffsets
arg	21:33	21:37	7	crop
water	21:33	0:0	8	crop
arg	21:39	21:44	7	image
water	21:39	0:0	8	image
arg	21:46	21:54	7	&offsets
op	21:46	0:0	8	&
water	21:47	0:0	8	offsets
stmts	22:6	25:6	5	
water	22:6	0:0	6	{
call	23:6	23:67	6	TIFFError
arg	23:17	23:33	7	"getCropOffsets"
water	23:17	0:0	8	"getCropOffsets"
arg	23:35	23:67	7	"Unable to compute crop margins"
water	23:35	0:0	8	"Unable to compute crop margins"
water	23:68	0:0	6	;
return	24:6	24:17	6	(-1)
water	24:13	0:0	7	(
op	24:14	0:0	7	-
water	24:15	0:0	7	1
water	24:16	0:0	7	)
water	25:6	0:0	6	}
water	26:4	0:0	4	need_buff
op	26:14	0:0	4	=
water	26:16	0:0	4	TRUE
water	26:20	0:0	4	;
water	27:4	0:0	4	crop
op	27:8	0:0	4	->
water	27:10	0:0	4	selections
op	27:21	0:0	4	=
water	27:23	0:0	4	crop
op	27:27	0:0	4	->
water	27:29	0:0	4	regions
water	27:36	0:0	4	;
if	29:4	30:16	4	(crop -> crop_mode & CROP_REGIONS)
cond	29:8	29:26	5	crop -> crop_mode & CROP_REGIONS
water	29:8	0:0	6	crop
op	29:12	0:0	6	->
water	29:14	0:0	6	crop_mode
op	29:24	0:0	6	&
water	29:26	0:0	6	CROP_REGIONS
stmts	30:6	30:16	5	
return	30:6	30:16	6	(0)
water	30:13	0:0	7	(
water	30:14	0:0	7	0
water	30:15	0:0	7	)
water	31:4	0:0	4	}
else	32:2	45:4	2
stmts	33:4	45:4	3	
water	33:4	0:0	4	{
water	34:4	0:0	4	offsets
op	34:11	0:0	4	.
water	34:12	0:0	4	tmargin
op	34:20	0:0	4	=
water	34:22	0:0	4	0
water	34:23	0:0	4	;
water	35:4	0:0	4	offsets
op	35:11	0:0	4	.
water	35:12	0:0	4	lmargin
op	35:20	0:0	4	=
water	35:22	0:0	4	0
water	35:23	0:0	4	;
water	36:4	0:0	4	offsets
op	36:11	0:0	4	.
water	36:12	0:0	4	bmargin
op	36:20	0:0	4	=
water	36:22	0:0	4	0
water	36:23	0:0	4	;
water	37:4	0:0	4	offsets
op	37:11	0:0	4	.
water	37:12	0:0	4	rmargin
op	37:20	0:0	4	=
water	37:22	0:0	4	0
water	37:23	0:0	4	;
water	38:4	0:0	4	offsets
op	38:11	0:0	4	.
water	38:12	0:0	4	crop_width
op	38:23	0:0	4	=
water	38:25	0:0	4	image
op	38:30	0:0	4	->
water	38:32	0:0	4	width
water	38:37	0:0	4	;
water	39:4	0:0	4	offsets
op	39:11	0:0	4	.
water	39:12	0:0	4	crop_length
op	39:24	0:0	4	=
water	39:26	0:0	4	image
op	39:31	0:0	4	->
water	39:33	0:0	4	length
water	39:39	0:0	4	;
water	40:4	0:0	4	offsets
op	40:11	0:0	4	.
water	40:12	0:0	4	startx
op	40:19	0:0	4	=
water	40:21	0:0	4	0
water	40:22	0:0	4	;
water	41:4	0:0	4	offsets
op	41:11	0:0	4	.
water	41:12	0:0	4	endx
op	41:17	0:0	4	=
water	41:19	0:0	4	image
op	41:24	0:0	4	->
water	41:26	0:0	4	width
op	41:32	0:0	4	-
water	41:34	0:0	4	1
water	41:35	0:0	4	;
water	42:4	0:0	4	offsets
op	42:11	0:0	4	.
water	42:12	0:0	4	starty
op	42:19	0:0	4	=
water	42:21	0:0	4	0
water	42:22	0:0	4	;
water	43:4	0:0	4	offsets
op	43:11	0:0	4	.
water	43:12	0:0	4	endy
op	43:17	0:0	4	=
water	43:19	0:0	4	image
op	43:24	0:0	4	->
water	43:26	0:0	4	length
op	43:33	0:0	4	-
water	43:35	0:0	4	1
water	43:36	0:0	4	;
water	44:4	0:0	4	need_buff
op	44:14	0:0	4	=
water	44:16	0:0	4	FALSE
water	44:21	0:0	4	;
water	45:4	0:0	4	}
if	46:2	52:4	2	(dump -> outfile != NULL)
cond	46:6	46:23	3	dump -> outfile != NULL
water	46:6	0:0	4	dump
op	46:10	0:0	4	->
water	46:12	0:0	4	outfile
op	46:20	0:0	4	!=
water	46:23	0:0	4	NULL
stmts	47:4	52:4	3	
water	47:4	0:0	4	{
call	48:4	49:77	4	dump_info
arg	48:15	48:28	5	dump->outfile
water	48:15	0:0	6	dump
op	48:19	0:0	6	->
water	48:21	0:0	6	outfile
arg	48:30	48:42	5	dump->format
water	48:30	0:0	6	dump
op	48:34	0:0	6	->
water	48:36	0:0	6	format
arg	48:44	48:46	5	""
water	48:44	0:0	6	""
arg	48:48	48:99	5	"Margins: Top: %d  Left: %d  Bottom: %d  Right: %d"
water	48:48	0:0	6	"Margins: Top: %d  Left: %d  Bottom: %d  Right: %d"
arg	49:11	49:26	5	offsets.tmargin
water	49:11	0:0	6	offsets
op	49:18	0:0	6	.
water	49:19	0:0	6	tmargin
arg	49:28	49:43	5	offsets.lmargin
water	49:28	0:0	6	offsets
op	49:35	0:0	6	.
water	49:36	0:0	6	lmargin
arg	49:45	49:60	5	offsets.bmargin
water	49:45	0:0	6	offsets
op	49:52	0:0	6	.
water	49:53	0:0	6	bmargin
arg	49:62	49:77	5	offsets.rmargin
water	49:62	0:0	6	offsets
op	49:69	0:0	6	.
water	49:70	0:0	6	rmargin
water	49:78	0:0	4	;
call	50:4	51:50	4	dump_info
arg	50:15	50:28	5	dump->outfile
water	50:15	0:0	6	dump
op	50:19	0:0	6	->
water	50:21	0:0	6	outfile
arg	50:30	50:42	5	dump->format
water	50:30	0:0	6	dump
op	50:34	0:0	6	->
water	50:36	0:0	6	format
arg	50:44	50:46	5	""
water	50:44	0:0	6	""
arg	50:48	50:111	5	"Crop region within margins: Adjusted Width:  %6d  Length: %6d"
water	50:48	0:0	6	"Crop region within margins: Adjusted Width:  %6d  Length: %6d"
arg	51:11	51:29	5	offsets.crop_width
water	51:11	0:0	6	offsets
op	51:18	0:0	6	.
water	51:19	0:0	6	crop_width
arg	51:31	51:50	5	offsets.crop_length
water	51:31	0:0	6	offsets
op	51:38	0:0	6	.
water	51:39	0:0	6	crop_length
water	51:51	0:0	4	;
water	52:4	0:0	4	}
if	53:2	72:4	2	(! ( crop -> crop_mode & CROP_ZONES ))
cond	53:6	53:36	3	! ( crop -> crop_mode & CROP_ZONES )
op	53:6	0:0	4	!
water	53:7	0:0	4	(
water	53:8	0:0	4	crop
op	53:12	0:0	4	->
water	53:14	0:0	4	crop_mode
op	53:24	0:0	4	&
water	53:26	0:0	4	CROP_ZONES
water	53:36	0:0	4	)
stmts	54:4	72:4	3	
water	54:4	0:0	4	{
if	55:4	61:6	4	(need_buff == FALSE)
cond	55:8	55:21	5	need_buff == FALSE
water	55:8	0:0	6	need_buff
op	55:18	0:0	6	==
water	55:21	0:0	6	FALSE
stmts	56:6	61:6	5	
water	56:6	0:0	6	{
water	57:6	0:0	6	crop
op	57:10	0:0	6	->
water	57:12	0:0	6	selections
op	57:23	0:0	6	=
water	57:25	0:0	6	0
water	57:26	0:0	6	;
water	58:6	0:0	6	crop
op	58:10	0:0	6	->
water	58:12	0:0	6	combined_width
op	58:28	0:0	6	=
water	58:30	0:0	6	image
op	58:35	0:0	6	->
water	58:37	0:0	6	width
water	58:42	0:0	6	;
water	59:6	0:0	6	crop
op	59:10	0:0	6	->
water	59:12	0:0	6	combined_length
op	59:28	0:0	6	=
water	59:30	0:0	6	image
op	59:35	0:0	6	->
water	59:37	0:0	6	length
water	59:43	0:0	6	;
return	60:6	60:16	6	(0)
water	60:13	0:0	7	(
water	60:14	0:0	7	0
water	60:15	0:0	7	)
water	61:6	0:0	6	}
else	62:4	71:6	4
stmts	63:6	71:6	5	
water	63:6	0:0	6	{
water	67:6	0:0	6	crop
op	67:10	0:0	6	->
water	67:12	0:0	6	selections
op	67:23	0:0	6	=
water	67:25	0:0	6	1
water	67:26	0:0	6	;
water	68:6	0:0	6	crop
op	68:10	0:0	6	->
water	68:12	0:0	6	zones
op	68:18	0:0	6	=
water	68:20	0:0	6	1
water	68:21	0:0	6	;
water	69:6	0:0	6	crop
op	69:10	0:0	6	->
water	69:12	0:0	6	zonelist
op	69:20	0:0	6	[
water	69:21	0:0	6	0
op	69:22	0:0	6	]
op	69:23	0:0	6	.
water	69:24	0:0	6	total
op	69:30	0:0	6	=
water	69:32	0:0	6	1
water	69:33	0:0	6	;
water	70:6	0:0	6	crop
op	70:10	0:0	6	->
water	70:12	0:0	6	zonelist
op	70:20	0:0	6	[
water	70:21	0:0	6	0
op	70:22	0:0	6	]
op	70:23	0:0	6	.
water	70:24	0:0	6	position
op	70:33	0:0	6	=
water	70:35	0:0	6	1
water	70:36	0:0	6	;
water	71:6	0:0	6	}
water	72:4	0:0	4	}
else	73:2	74:34	2
stmts	74:4	74:34	3	
water	74:4	0:0	4	crop
op	74:8	0:0	4	->
water	74:10	0:0	4	selections
op	74:21	0:0	4	=
water	74:23	0:0	4	crop
op	74:27	0:0	4	->
water	74:29	0:0	4	zones
water	74:34	0:0	4	;
for	75:2	194:4	2	(i = 0 ;i < crop -> zones;i ++)
forinit	75:7	75:12	3	i = 0 ;
water	75:7	0:0	4	i
op	75:9	0:0	4	=
water	75:11	0:0	4	0
water	75:12	0:0	4	;
cond	75:14	75:24	3	i < crop -> zones
water	75:14	0:0	4	i
op	75:16	0:0	4	<
water	75:18	0:0	4	crop
op	75:22	0:0	4	->
water	75:24	0:0	4	zones
forexpr	75:31	75:32	3	i ++
water	75:31	0:0	4	i
op	75:32	0:0	4	++
stmts	76:4	194:4	3	
water	76:4	0:0	4	{
water	77:4	0:0	4	seg
op	77:8	0:0	4	=
water	77:10	0:0	4	crop
op	77:14	0:0	4	->
water	77:16	0:0	4	zonelist
op	77:24	0:0	4	[
water	77:25	0:0	4	i
op	77:26	0:0	4	]
op	77:27	0:0	4	.
water	77:28	0:0	4	position
water	77:36	0:0	4	;
water	78:4	0:0	4	total
op	78:10	0:0	4	=
water	78:12	0:0	4	crop
op	78:16	0:0	4	->
water	78:18	0:0	4	zonelist
op	78:26	0:0	4	[
water	78:27	0:0	4	i
op	78:28	0:0	4	]
op	78:29	0:0	4	.
water	78:30	0:0	4	total
water	78:35	0:0	4	;
switch	79:4	182:6	4	(crop -> edge_ref)
cond	79:12	79:18	5	crop -> edge_ref
water	79:12	0:0	6	crop
op	79:16	0:0	6	->
water	79:18	0:0	6	edge_ref
stmts	80:6	182:6	5	
water	80:6	0:0	6	{
label	81:6	81:20	6	case EDGE_LEFT :
water	82:11	0:0	6	zlength
op	82:19	0:0	6	=
water	82:21	0:0	6	offsets
op	82:28	0:0	6	.
water	82:29	0:0	6	crop_length
water	82:40	0:0	6	;
water	83:4	0:0	6	crop
op	83:8	0:0	6	->
water	83:10	0:0	6	regionlist
op	83:20	0:0	6	[
water	83:21	0:0	6	i
op	83:22	0:0	6	]
op	83:23	0:0	6	.
water	83:24	0:0	6	y1
op	83:27	0:0	6	=
water	83:29	0:0	6	offsets
op	83:36	0:0	6	.
water	83:37	0:0	6	starty
water	83:43	0:0	6	;
water	84:11	0:0	6	crop
op	84:15	0:0	6	->
water	84:17	0:0	6	regionlist
op	84:27	0:0	6	[
water	84:28	0:0	6	i
op	84:29	0:0	6	]
op	84:30	0:0	6	.
water	84:31	0:0	6	y2
op	84:34	0:0	6	=
water	84:36	0:0	6	offsets
op	84:43	0:0	6	.
water	84:44	0:0	6	endy
water	84:48	0:0	6	;
water	85:11	0:0	6	crop
op	85:15	0:0	6	->
water	85:17	0:0	6	regionlist
op	85:27	0:0	6	[
water	85:28	0:0	6	i
op	85:29	0:0	6	]
op	85:30	0:0	6	.
water	85:31	0:0	6	x1
op	85:34	0:0	6	=
water	85:36	0:0	6	offsets
op	85:43	0:0	6	.
water	85:44	0:0	6	startx
op	85:51	0:0	6	+
call	86:34	86:87	6	(uint32)
arg	86:43	86:87	7	offsets.crop_width*1.0*(seg-1)/total
water	86:43	0:0	8	offsets
op	86:50	0:0	8	.
water	86:51	0:0	8	crop_width
op	86:62	0:0	8	*
water	86:64	0:0	8	1
op	86:65	0:0	8	.
water	86:66	0:0	8	0
op	86:68	0:0	8	*
water	86:70	0:0	8	(
water	86:71	0:0	8	seg
op	86:75	0:0	8	-
water	86:77	0:0	8	1
water	86:78	0:0	8	)
op	86:80	0:0	8	/
water	86:82	0:0	8	total
water	86:88	0:0	6	;
water	87:11	0:0	6	test
op	87:16	0:0	6	=
water	87:18	0:0	6	(
water	87:19	0:0	6	int32
water	87:24	0:0	6	)
water	87:25	0:0	6	offsets
op	87:32	0:0	6	.
water	87:33	0:0	6	startx
op	87:40	0:0	6	+
call	88:18	88:64	6	(int32)
arg	88:26	88:64	7	offsets.crop_width*1.0*seg/total
water	88:26	0:0	8	offsets
op	88:33	0:0	8	.
water	88:34	0:0	8	crop_width
op	88:45	0:0	8	*
water	88:47	0:0	8	1
op	88:48	0:0	8	.
water	88:49	0:0	8	0
op	88:51	0:0	8	*
water	88:53	0:0	8	seg
op	88:57	0:0	8	/
water	88:59	0:0	8	total
water	88:65	0:0	6	;
if	89:11	90:39	6	(test < 1)
cond	89:15	89:22	7	test < 1
water	89:15	0:0	8	test
op	89:20	0:0	8	<
water	89:22	0:0	8	1
stmts	90:13	90:39	7	
water	90:13	0:0	8	crop
op	90:17	0:0	8	->
water	90:19	0:0	8	regionlist
op	90:29	0:0	8	[
water	90:30	0:0	8	i
op	90:31	0:0	8	]
op	90:32	0:0	8	.
water	90:33	0:0	8	x2
op	90:36	0:0	8	=
water	90:38	0:0	8	0
water	90:39	0:0	8	;
else	91:11	97:13	6
stmts	92:6	97:13	7	
water	92:6	0:0	8	{
if	93:6	94:56	8	(test >( int32 ) (image -> width - 1 ))
cond	93:10	93:41	9	test >( int32 ) (image -> width - 1 )
water	93:10	0:0	10	test
op	93:15	0:0	10	>
call	93:17	93:41	10	(int32)
arg	93:25	93:41	11	image->width-1
water	93:25	0:0	12	image
op	93:30	0:0	12	->
water	93:32	0:0	12	width
op	93:38	0:0	12	-
water	93:40	0:0	12	1
stmts	94:15	94:56	9	
water	94:15	0:0	10	crop
op	94:19	0:0	10	->
water	94:21	0:0	10	regionlist
op	94:31	0:0	10	[
water	94:32	0:0	10	i
op	94:33	0:0	10	]
op	94:34	0:0	10	.
water	94:35	0:0	10	x2
op	94:38	0:0	10	=
water	94:40	0:0	10	image
op	94:45	0:0	10	->
water	94:47	0:0	10	width
op	94:53	0:0	10	-
water	94:55	0:0	10	1
water	94:56	0:0	10	;
else	95:13	96:41	8
stmts	96:8	96:41	9	
water	96:8	0:0	10	crop
op	96:12	0:0	10	->
water	96:14	0:0	10	regionlist
op	96:24	0:0	10	[
water	96:25	0:0	10	i
op	96:26	0:0	10	]
op	96:27	0:0	10	.
water	96:28	0:0	10	x2
op	96:31	0:0	10	=
water	96:33	0:0	10	test
op	96:38	0:0	10	-
water	96:40	0:0	10	1
water	96:41	0:0	10	;
water	97:13	0:0	8	}
water	98:11	0:0	6	zwidth
op	98:18	0:0	6	=
water	98:20	0:0	6	crop
op	98:24	0:0	6	->
water	98:26	0:0	6	regionlist
op	98:36	0:0	6	[
water	98:37	0:0	6	i
op	98:38	0:0	6	]
op	98:39	0:0	6	.
water	98:40	0:0	6	x2
op	98:43	0:0	6	-
water	98:45	0:0	6	crop
op	98:49	0:0	6	->
water	98:51	0:0	6	regionlist
op	98:61	0:0	6	[
water	98:62	0:0	6	i
op	98:63	0:0	6	]
op	98:64	0:0	6	.
water	98:65	0:0	6	x1
op	98:69	0:0	6	+
water	98:71	0:0	6	1
water	98:72	0:0	6	;
water	100:11	0:0	6	crop
op	100:15	0:0	6	->
water	100:17	0:0	6	combined_length
op	100:33	0:0	6	=
water	100:35	0:0	6	(
water	100:36	0:0	6	uint32
water	100:42	0:0	6	)
water	100:43	0:0	6	zlength
water	100:50	0:0	6	;
if	101:11	102:51	6	(crop -> exp_mode == COMPOSITE_IMAGES)
cond	101:15	101:33	7	crop -> exp_mode == COMPOSITE_IMAGES
water	101:15	0:0	8	crop
op	101:19	0:0	8	->
water	101:21	0:0	8	exp_mode
op	101:30	0:0	8	==
water	101:33	0:0	8	COMPOSITE_IMAGES
stmts	102:13	102:51	7	
water	102:13	0:0	8	crop
op	102:17	0:0	8	->
water	102:19	0:0	8	combined_width
op	102:34	0:0	8	+=
water	102:37	0:0	8	(
water	102:38	0:0	8	uint32
water	102:44	0:0	8	)
water	102:45	0:0	8	zwidth
water	102:51	0:0	8	;
else	103:11	104:50	6
stmts	104:13	104:50	7	
water	104:13	0:0	8	crop
op	104:17	0:0	8	->
water	104:19	0:0	8	combined_width
op	104:34	0:0	8	=
water	104:36	0:0	8	(
water	104:37	0:0	8	uint32
water	104:43	0:0	8	)
water	104:44	0:0	8	zwidth
water	104:50	0:0	8	;
break	105:11	105:16	6	
label	106:6	106:22	6	case EDGE_BOTTOM :
water	107:11	0:0	6	zwidth
op	107:18	0:0	6	=
water	107:20	0:0	6	offsets
op	107:27	0:0	6	.
water	107:28	0:0	6	crop_width
water	107:38	0:0	6	;
water	108:4	0:0	6	crop
op	108:8	0:0	6	->
water	108:10	0:0	6	regionlist
op	108:20	0:0	6	[
water	108:21	0:0	6	i
op	108:22	0:0	6	]
op	108:23	0:0	6	.
water	108:24	0:0	6	x1
op	108:27	0:0	6	=
water	108:29	0:0	6	offsets
op	108:36	0:0	6	.
water	108:37	0:0	6	startx
water	108:43	0:0	6	;
water	109:11	0:0	6	crop
op	109:15	0:0	6	->
water	109:17	0:0	6	regionlist
op	109:27	0:0	6	[
water	109:28	0:0	6	i
op	109:29	0:0	6	]
op	109:30	0:0	6	.
water	109:31	0:0	6	x2
op	109:34	0:0	6	=
water	109:36	0:0	6	offsets
op	109:43	0:0	6	.
water	109:44	0:0	6	endx
water	109:48	0:0	6	;
water	110:11	0:0	6	test
op	110:16	0:0	6	=
water	110:18	0:0	6	offsets
op	110:25	0:0	6	.
water	110:26	0:0	6	endy
op	110:31	0:0	6	-
call	110:33	110:81	6	(uint32)
arg	110:42	110:81	7	offsets.crop_length*1.0*seg/total
water	110:42	0:0	8	offsets
op	110:49	0:0	8	.
water	110:50	0:0	8	crop_length
op	110:62	0:0	8	*
water	110:64	0:0	8	1
op	110:65	0:0	8	.
water	110:66	0:0	8	0
op	110:68	0:0	8	*
water	110:70	0:0	8	seg
op	110:74	0:0	8	/
water	110:76	0:0	8	total
water	110:82	0:0	6	;
if	111:11	112:32	6	(test < 1)
cond	111:15	111:22	7	test < 1
water	111:15	0:0	8	test
op	111:20	0:0	8	<
water	111:22	0:0	8	1
stmts	112:6	112:32	7	
water	112:6	0:0	8	crop
op	112:10	0:0	8	->
water	112:12	0:0	8	regionlist
op	112:22	0:0	8	[
water	112:23	0:0	8	i
op	112:24	0:0	8	]
op	112:25	0:0	8	.
water	112:26	0:0	8	y1
op	112:29	0:0	8	=
water	112:31	0:0	8	0
water	112:32	0:0	8	;
else	113:11	114:39	6
stmts	114:6	114:39	7	
water	114:6	0:0	8	crop
op	114:10	0:0	8	->
water	114:12	0:0	8	regionlist
op	114:22	0:0	8	[
water	114:23	0:0	8	i
op	114:24	0:0	8	]
op	114:25	0:0	8	.
water	114:26	0:0	8	y1
op	114:29	0:0	8	=
water	114:31	0:0	8	test
op	114:36	0:0	8	+
water	114:38	0:0	8	1
water	114:39	0:0	8	;
water	115:11	0:0	6	test
op	115:16	0:0	6	=
water	115:18	0:0	6	offsets
op	115:25	0:0	6	.
water	115:26	0:0	6	endy
op	115:31	0:0	6	-
water	115:33	0:0	6	(
water	115:34	0:0	6	offsets
op	115:41	0:0	6	.
water	115:42	0:0	6	crop_length
op	115:54	0:0	6	*
water	115:56	0:0	6	1
op	115:57	0:0	6	.
water	115:58	0:0	6	0
op	115:60	0:0	6	*
water	115:62	0:0	6	(
water	115:63	0:0	6	seg
op	115:67	0:0	6	-
water	115:69	0:0	6	1
water	115:70	0:0	6	)
op	115:72	0:0	6	/
water	115:74	0:0	6	total
water	115:79	0:0	6	)
water	115:80	0:0	6	;
if	116:11	117:39	6	(test < 1)
cond	116:15	116:22	7	test < 1
water	116:15	0:0	8	test
op	116:20	0:0	8	<
water	116:22	0:0	8	1
stmts	117:13	117:39	7	
water	117:13	0:0	8	crop
op	117:17	0:0	8	->
water	117:19	0:0	8	regionlist
op	117:29	0:0	8	[
water	117:30	0:0	8	i
op	117:31	0:0	8	]
op	117:32	0:0	8	.
water	117:33	0:0	8	y2
op	117:36	0:0	8	=
water	117:38	0:0	8	0
water	117:39	0:0	8	;
else	118:11	124:6	6
stmts	119:6	124:6	7	
water	119:6	0:0	8	{
if	120:13	121:57	8	(test >( int32 ) (image -> length - 1 ))
cond	120:17	120:49	9	test >( int32 ) (image -> length - 1 )
water	120:17	0:0	10	test
op	120:22	0:0	10	>
call	120:24	120:49	10	(int32)
arg	120:32	120:49	11	image->length-1
water	120:32	0:0	12	image
op	120:37	0:0	12	->
water	120:39	0:0	12	length
op	120:46	0:0	12	-
water	120:48	0:0	12	1
stmts	121:15	121:57	9	
water	121:15	0:0	10	crop
op	121:19	0:0	10	->
water	121:21	0:0	10	regionlist
op	121:31	0:0	10	[
water	121:32	0:0	10	i
op	121:33	0:0	10	]
op	121:34	0:0	10	.
water	121:35	0:0	10	y2
op	121:38	0:0	10	=
water	121:40	0:0	10	image
op	121:45	0:0	10	->
water	121:47	0:0	10	length
op	121:54	0:0	10	-
water	121:56	0:0	10	1
water	121:57	0:0	10	;
else	122:13	123:44	8
stmts	123:15	123:44	9	
water	123:15	0:0	10	crop
op	123:19	0:0	10	->
water	123:21	0:0	10	regionlist
op	123:31	0:0	10	[
water	123:32	0:0	10	i
op	123:33	0:0	10	]
op	123:34	0:0	10	.
water	123:35	0:0	10	y2
op	123:38	0:0	10	=
water	123:40	0:0	10	test
water	123:44	0:0	10	;
water	124:6	0:0	8	}
water	125:11	0:0	6	zlength
op	125:19	0:0	6	=
water	125:21	0:0	6	crop
op	125:25	0:0	6	->
water	125:27	0:0	6	regionlist
op	125:37	0:0	6	[
water	125:38	0:0	6	i
op	125:39	0:0	6	]
op	125:40	0:0	6	.
water	125:41	0:0	6	y2
op	125:44	0:0	6	-
water	125:46	0:0	6	crop
op	125:50	0:0	6	->
water	125:52	0:0	6	regionlist
op	125:62	0:0	6	[
water	125:63	0:0	6	i
op	125:64	0:0	6	]
op	125:65	0:0	6	.
water	125:66	0:0	6	y1
op	125:69	0:0	6	+
water	125:71	0:0	6	1
water	125:72	0:0	6	;
if	127:11	128:53	6	(crop -> exp_mode == COMPOSITE_IMAGES)
cond	127:15	127:33	7	crop -> exp_mode == COMPOSITE_IMAGES
water	127:15	0:0	8	crop
op	127:19	0:0	8	->
water	127:21	0:0	8	exp_mode
op	127:30	0:0	8	==
water	127:33	0:0	8	COMPOSITE_IMAGES
stmts	128:13	128:53	7	
water	128:13	0:0	8	crop
op	128:17	0:0	8	->
water	128:19	0:0	8	combined_length
op	128:35	0:0	8	+=
water	128:38	0:0	8	(
water	128:39	0:0	8	uint32
water	128:45	0:0	8	)
water	128:46	0:0	8	zlength
water	128:53	0:0	8	;
else	129:11	130:52	6
stmts	130:13	130:52	7	
water	130:13	0:0	8	crop
op	130:17	0:0	8	->
water	130:19	0:0	8	combined_length
op	130:35	0:0	8	=
water	130:37	0:0	8	(
water	130:38	0:0	8	uint32
water	130:44	0:0	8	)
water	130:45	0:0	8	zlength
water	130:52	0:0	8	;
water	131:11	0:0	6	crop
op	131:15	0:0	6	->
water	131:17	0:0	6	combined_width
op	131:32	0:0	6	=
water	131:34	0:0	6	(
water	131:35	0:0	6	uint32
water	131:41	0:0	6	)
water	131:42	0:0	6	zwidth
water	131:48	0:0	6	;
break	132:11	132:16	6	
label	133:6	133:21	6	case EDGE_RIGHT :
water	134:11	0:0	6	zlength
op	134:19	0:0	6	=
water	134:21	0:0	6	offsets
op	134:28	0:0	6	.
water	134:29	0:0	6	crop_length
water	134:40	0:0	6	;
water	135:4	0:0	6	crop
op	135:8	0:0	6	->
water	135:10	0:0	6	regionlist
op	135:20	0:0	6	[
water	135:21	0:0	6	i
op	135:22	0:0	6	]
op	135:23	0:0	6	.
water	135:24	0:0	6	y1
op	135:27	0:0	6	=
water	135:29	0:0	6	offsets
op	135:36	0:0	6	.
water	135:37	0:0	6	starty
water	135:43	0:0	6	;
water	136:11	0:0	6	crop
op	136:15	0:0	6	->
water	136:17	0:0	6	regionlist
op	136:27	0:0	6	[
water	136:28	0:0	6	i
op	136:29	0:0	6	]
op	136:30	0:0	6	.
water	136:31	0:0	6	y2
op	136:34	0:0	6	=
water	136:36	0:0	6	offsets
op	136:43	0:0	6	.
water	136:44	0:0	6	endy
water	136:48	0:0	6	;
water	137:11	0:0	6	crop
op	137:15	0:0	6	->
water	137:17	0:0	6	regionlist
op	137:27	0:0	6	[
water	137:28	0:0	6	i
op	137:29	0:0	6	]
op	137:30	0:0	6	.
water	137:31	0:0	6	x1
op	137:34	0:0	6	=
water	137:36	0:0	6	offsets
op	137:43	0:0	6	.
water	137:44	0:0	6	startx
op	137:51	0:0	6	+
call	138:34	138:92	6	(uint32)
arg	138:43	138:92	7	offsets.crop_width*(total-seg)*1.0/total
water	138:43	0:0	8	offsets
op	138:50	0:0	8	.
water	138:51	0:0	8	crop_width
op	138:63	0:0	8	*
water	138:65	0:0	8	(
water	138:66	0:0	8	total
op	138:72	0:0	8	-
water	138:74	0:0	8	seg
water	138:77	0:0	8	)
op	138:79	0:0	8	*
water	138:81	0:0	8	1
op	138:82	0:0	8	.
water	138:83	0:0	8	0
op	138:85	0:0	8	/
water	138:87	0:0	8	total
water	138:93	0:0	6	;
water	139:11	0:0	6	test
op	139:16	0:0	6	=
water	139:18	0:0	6	offsets
op	139:25	0:0	6	.
water	139:26	0:0	6	startx
op	139:33	0:0	6	+
water	140:11	0:0	6	(
water	140:12	0:0	6	offsets
op	140:19	0:0	6	.
water	140:20	0:0	6	crop_width
op	140:31	0:0	6	*
water	140:33	0:0	6	(
water	140:34	0:0	6	total
op	140:40	0:0	6	-
water	140:42	0:0	6	seg
op	140:46	0:0	6	+
water	140:48	0:0	6	1
water	140:49	0:0	6	)
op	140:51	0:0	6	*
water	140:53	0:0	6	1
op	140:54	0:0	6	.
water	140:55	0:0	6	0
op	140:57	0:0	6	/
water	140:59	0:0	6	total
water	140:64	0:0	6	)
water	140:65	0:0	6	;
if	141:11	142:39	6	(test < 1)
cond	141:15	141:22	7	test < 1
water	141:15	0:0	8	test
op	141:20	0:0	8	<
water	141:22	0:0	8	1
stmts	142:13	142:39	7	
water	142:13	0:0	8	crop
op	142:17	0:0	8	->
water	142:19	0:0	8	regionlist
op	142:29	0:0	8	[
water	142:30	0:0	8	i
op	142:31	0:0	8	]
op	142:32	0:0	8	.
water	142:33	0:0	8	x2
op	142:36	0:0	8	=
water	142:38	0:0	8	0
water	142:39	0:0	8	;
else	143:11	149:13	6
stmts	144:6	149:13	7	
water	144:6	0:0	8	{
if	145:6	146:56	8	(test >( int32 ) (image -> width - 1 ))
cond	145:10	145:41	9	test >( int32 ) (image -> width - 1 )
water	145:10	0:0	10	test
op	145:15	0:0	10	>
call	145:17	145:41	10	(int32)
arg	145:25	145:41	11	image->width-1
water	145:25	0:0	12	image
op	145:30	0:0	12	->
water	145:32	0:0	12	width
op	145:38	0:0	12	-
water	145:40	0:0	12	1
stmts	146:15	146:56	9	
water	146:15	0:0	10	crop
op	146:19	0:0	10	->
water	146:21	0:0	10	regionlist
op	146:31	0:0	10	[
water	146:32	0:0	10	i
op	146:33	0:0	10	]
op	146:34	0:0	10	.
water	146:35	0:0	10	x2
op	146:38	0:0	10	=
water	146:40	0:0	10	image
op	146:45	0:0	10	->
water	146:47	0:0	10	width
op	146:53	0:0	10	-
water	146:55	0:0	10	1
water	146:56	0:0	10	;
else	147:13	148:48	8
stmts	148:15	148:48	9	
water	148:15	0:0	10	crop
op	148:19	0:0	10	->
water	148:21	0:0	10	regionlist
op	148:31	0:0	10	[
water	148:32	0:0	10	i
op	148:33	0:0	10	]
op	148:34	0:0	10	.
water	148:35	0:0	10	x2
op	148:38	0:0	10	=
water	148:40	0:0	10	test
op	148:45	0:0	10	-
water	148:47	0:0	10	1
water	148:48	0:0	10	;
water	149:13	0:0	8	}
water	150:11	0:0	6	zwidth
op	150:18	0:0	6	=
water	150:20	0:0	6	crop
op	150:24	0:0	6	->
water	150:26	0:0	6	regionlist
op	150:36	0:0	6	[
water	150:37	0:0	6	i
op	150:38	0:0	6	]
op	150:39	0:0	6	.
water	150:40	0:0	6	x2
op	150:43	0:0	6	-
water	150:45	0:0	6	crop
op	150:49	0:0	6	->
water	150:51	0:0	6	regionlist
op	150:61	0:0	6	[
water	150:62	0:0	6	i
op	150:63	0:0	6	]
op	150:64	0:0	6	.
water	150:65	0:0	6	x1
op	150:69	0:0	6	+
water	150:71	0:0	6	1
water	150:72	0:0	6	;
water	152:11	0:0	6	crop
op	152:15	0:0	6	->
water	152:17	0:0	6	combined_length
op	152:33	0:0	6	=
water	152:35	0:0	6	(
water	152:36	0:0	6	uint32
water	152:42	0:0	6	)
water	152:43	0:0	6	zlength
water	152:50	0:0	6	;
if	153:11	154:51	6	(crop -> exp_mode == COMPOSITE_IMAGES)
cond	153:15	153:33	7	crop -> exp_mode == COMPOSITE_IMAGES
water	153:15	0:0	8	crop
op	153:19	0:0	8	->
water	153:21	0:0	8	exp_mode
op	153:30	0:0	8	==
water	153:33	0:0	8	COMPOSITE_IMAGES
stmts	154:13	154:51	7	
water	154:13	0:0	8	crop
op	154:17	0:0	8	->
water	154:19	0:0	8	combined_width
op	154:34	0:0	8	+=
water	154:37	0:0	8	(
water	154:38	0:0	8	uint32
water	154:44	0:0	8	)
water	154:45	0:0	8	zwidth
water	154:51	0:0	8	;
else	155:11	156:50	6
stmts	156:13	156:50	7	
water	156:13	0:0	8	crop
op	156:17	0:0	8	->
water	156:19	0:0	8	combined_width
op	156:34	0:0	8	=
water	156:36	0:0	8	(
water	156:37	0:0	8	uint32
water	156:43	0:0	8	)
water	156:44	0:0	8	zwidth
water	156:50	0:0	8	;
break	157:11	157:16	6	
label	158:6	158:19	6	case EDGE_TOP :
label	159:6	159:13	6	default :
water	160:11	0:0	6	zwidth
op	160:18	0:0	6	=
water	160:20	0:0	6	offsets
op	160:27	0:0	6	.
water	160:28	0:0	6	crop_width
water	160:38	0:0	6	;
water	161:4	0:0	6	crop
op	161:8	0:0	6	->
water	161:10	0:0	6	regionlist
op	161:20	0:0	6	[
water	161:21	0:0	6	i
op	161:22	0:0	6	]
op	161:23	0:0	6	.
water	161:24	0:0	6	x1
op	161:27	0:0	6	=
water	161:29	0:0	6	offsets
op	161:36	0:0	6	.
water	161:37	0:0	6	startx
water	161:43	0:0	6	;
water	162:11	0:0	6	crop
op	162:15	0:0	6	->
water	162:17	0:0	6	regionlist
op	162:27	0:0	6	[
water	162:28	0:0	6	i
op	162:29	0:0	6	]
op	162:30	0:0	6	.
water	162:31	0:0	6	x2
op	162:34	0:0	6	=
water	162:36	0:0	6	offsets
op	162:43	0:0	6	.
water	162:44	0:0	6	endx
water	162:48	0:0	6	;
water	163:11	0:0	6	crop
op	163:15	0:0	6	->
water	163:17	0:0	6	regionlist
op	163:27	0:0	6	[
water	163:28	0:0	6	i
op	163:29	0:0	6	]
op	163:30	0:0	6	.
water	163:31	0:0	6	y1
op	163:34	0:0	6	=
water	163:36	0:0	6	offsets
op	163:43	0:0	6	.
water	163:44	0:0	6	starty
op	163:51	0:0	6	+
call	163:53	163:107	6	(uint32)
arg	163:62	163:107	7	offsets.crop_length*1.0*(seg-1)/total
water	163:62	0:0	8	offsets
op	163:69	0:0	8	.
water	163:70	0:0	8	crop_length
op	163:82	0:0	8	*
water	163:84	0:0	8	1
op	163:85	0:0	8	.
water	163:86	0:0	8	0
op	163:88	0:0	8	*
water	163:90	0:0	8	(
water	163:91	0:0	8	seg
op	163:95	0:0	8	-
water	163:97	0:0	8	1
water	163:98	0:0	8	)
op	163:100	0:0	8	/
water	163:102	0:0	8	total
water	163:108	0:0	6	;
water	164:11	0:0	6	test
op	164:16	0:0	6	=
water	164:18	0:0	6	offsets
op	164:25	0:0	6	.
water	164:26	0:0	6	starty
op	164:33	0:0	6	+
call	164:35	164:83	6	(uint32)
arg	164:44	164:83	7	offsets.crop_length*1.0*seg/total
water	164:44	0:0	8	offsets
op	164:51	0:0	8	.
water	164:52	0:0	8	crop_length
op	164:64	0:0	8	*
water	164:66	0:0	8	1
op	164:67	0:0	8	.
water	164:68	0:0	8	0
op	164:70	0:0	8	*
water	164:72	0:0	8	seg
op	164:76	0:0	8	/
water	164:78	0:0	8	total
water	164:84	0:0	6	;
if	165:11	166:39	6	(test < 1)
cond	165:15	165:22	7	test < 1
water	165:15	0:0	8	test
op	165:20	0:0	8	<
water	165:22	0:0	8	1
stmts	166:13	166:39	7	
water	166:13	0:0	8	crop
op	166:17	0:0	8	->
water	166:19	0:0	8	regionlist
op	166:29	0:0	8	[
water	166:30	0:0	8	i
op	166:31	0:0	8	]
op	166:32	0:0	8	.
water	166:33	0:0	8	y2
op	166:36	0:0	8	=
water	166:38	0:0	8	0
water	166:39	0:0	8	;
else	167:11	173:6	6
stmts	168:6	173:6	7	
water	168:6	0:0	8	{
if	169:6	170:50	8	(test >( int32 ) (image -> length - 1 ))
cond	169:10	169:42	9	test >( int32 ) (image -> length - 1 )
water	169:10	0:0	10	test
op	169:15	0:0	10	>
call	169:17	169:42	10	(int32)
arg	169:25	169:42	11	image->length-1
water	169:25	0:0	12	image
op	169:30	0:0	12	->
water	169:32	0:0	12	length
op	169:39	0:0	12	-
water	169:41	0:0	12	1
stmts	170:8	170:50	9	
water	170:8	0:0	10	crop
op	170:12	0:0	10	->
water	170:14	0:0	10	regionlist
op	170:24	0:0	10	[
water	170:25	0:0	10	i
op	170:26	0:0	10	]
op	170:27	0:0	10	.
water	170:28	0:0	10	y2
op	170:31	0:0	10	=
water	170:33	0:0	10	image
op	170:38	0:0	10	->
water	170:40	0:0	10	length
op	170:47	0:0	10	-
water	170:49	0:0	10	1
water	170:50	0:0	10	;
else	171:13	172:41	8
stmts	172:8	172:41	9	
water	172:8	0:0	10	crop
op	172:12	0:0	10	->
water	172:14	0:0	10	regionlist
op	172:24	0:0	10	[
water	172:25	0:0	10	i
op	172:26	0:0	10	]
op	172:27	0:0	10	.
water	172:28	0:0	10	y2
op	172:31	0:0	10	=
water	172:33	0:0	10	test
op	172:38	0:0	10	-
water	172:40	0:0	10	1
water	172:41	0:0	10	;
water	173:6	0:0	8	}
water	174:11	0:0	6	zlength
op	174:19	0:0	6	=
water	174:21	0:0	6	crop
op	174:25	0:0	6	->
water	174:27	0:0	6	regionlist
op	174:37	0:0	6	[
water	174:38	0:0	6	i
op	174:39	0:0	6	]
op	174:40	0:0	6	.
water	174:41	0:0	6	y2
op	174:44	0:0	6	-
water	174:46	0:0	6	crop
op	174:50	0:0	6	->
water	174:52	0:0	6	regionlist
op	174:62	0:0	6	[
water	174:63	0:0	6	i
op	174:64	0:0	6	]
op	174:65	0:0	6	.
water	174:66	0:0	6	y1
op	174:69	0:0	6	+
water	174:71	0:0	6	1
water	174:72	0:0	6	;
if	176:11	177:53	6	(crop -> exp_mode == COMPOSITE_IMAGES)
cond	176:15	176:33	7	crop -> exp_mode == COMPOSITE_IMAGES
water	176:15	0:0	8	crop
op	176:19	0:0	8	->
water	176:21	0:0	8	exp_mode
op	176:30	0:0	8	==
water	176:33	0:0	8	COMPOSITE_IMAGES
stmts	177:13	177:53	7	
water	177:13	0:0	8	crop
op	177:17	0:0	8	->
water	177:19	0:0	8	combined_length
op	177:35	0:0	8	+=
water	177:38	0:0	8	(
water	177:39	0:0	8	uint32
water	177:45	0:0	8	)
water	177:46	0:0	8	zlength
water	177:53	0:0	8	;
else	178:11	179:52	6
stmts	179:13	179:52	7	
water	179:13	0:0	8	crop
op	179:17	0:0	8	->
water	179:19	0:0	8	combined_length
op	179:35	0:0	8	=
water	179:37	0:0	8	(
water	179:38	0:0	8	uint32
water	179:44	0:0	8	)
water	179:45	0:0	8	zlength
water	179:52	0:0	8	;
water	180:11	0:0	6	crop
op	180:15	0:0	6	->
water	180:17	0:0	6	combined_width
op	180:32	0:0	6	=
water	180:34	0:0	6	(
water	180:35	0:0	6	uint32
water	180:41	0:0	6	)
water	180:42	0:0	6	zwidth
water	180:48	0:0	6	;
break	181:11	181:16	6	
water	182:6	0:0	6	}
water	183:4	0:0	4	buffsize
op	183:13	0:0	4	=
call	183:15	184:74	4	(uint32)
arg	184:11	184:74	5	(((zwidth*image->bps*image->spp)+7)/8)*(zlength+1)
water	184:11	0:0	6	(
water	184:12	0:0	6	(
water	184:13	0:0	6	(
water	184:14	0:0	6	zwidth
op	184:21	0:0	6	*
water	184:23	0:0	6	image
op	184:28	0:0	6	->
water	184:30	0:0	6	bps
op	184:34	0:0	6	*
water	184:36	0:0	6	image
op	184:41	0:0	6	->
water	184:43	0:0	6	spp
water	184:46	0:0	6	)
op	184:48	0:0	6	+
water	184:50	0:0	6	7
water	184:52	0:0	6	)
op	184:54	0:0	6	/
water	184:56	0:0	6	8
water	184:57	0:0	6	)
op	184:59	0:0	6	*
water	184:61	0:0	6	(
water	184:62	0:0	6	zlength
op	184:70	0:0	6	+
water	184:72	0:0	6	1
water	184:73	0:0	6	)
water	184:75	0:0	4	;
water	185:4	0:0	4	crop
op	185:8	0:0	4	->
water	185:10	0:0	4	regionlist
op	185:20	0:0	4	[
water	185:21	0:0	4	i
op	185:22	0:0	4	]
op	185:23	0:0	4	.
water	185:24	0:0	4	width
op	185:30	0:0	4	=
water	185:32	0:0	4	(
water	185:33	0:0	4	uint32
water	185:39	0:0	4	)
water	185:41	0:0	4	zwidth
water	185:47	0:0	4	;
water	186:4	0:0	4	crop
op	186:8	0:0	4	->
water	186:10	0:0	4	regionlist
op	186:20	0:0	4	[
water	186:21	0:0	4	i
op	186:22	0:0	4	]
op	186:23	0:0	4	.
water	186:24	0:0	4	length
op	186:31	0:0	4	=
water	186:33	0:0	4	(
water	186:34	0:0	4	uint32
water	186:40	0:0	4	)
water	186:42	0:0	4	zlength
water	186:49	0:0	4	;
water	187:4	0:0	4	crop
op	187:8	0:0	4	->
water	187:10	0:0	4	regionlist
op	187:20	0:0	4	[
water	187:21	0:0	4	i
op	187:22	0:0	4	]
op	187:23	0:0	4	.
water	187:24	0:0	4	buffsize
op	187:33	0:0	4	=
water	187:35	0:0	4	buffsize
water	187:43	0:0	4	;
water	188:4	0:0	4	crop
op	188:8	0:0	4	->
water	188:10	0:0	4	bufftotal
op	188:20	0:0	4	+=
water	188:23	0:0	4	buffsize
water	188:31	0:0	4	;
if	189:2	193:67	4	(dump -> outfile != NULL)
cond	189:6	189:23	5	dump -> outfile != NULL
water	189:6	0:0	6	dump
op	189:10	0:0	6	->
water	189:12	0:0	6	outfile
op	189:20	0:0	6	!=
water	189:23	0:0	6	NULL
stmts	190:4	193:67	5	
call	190:4	193:66	6	dump_info
arg	190:15	190:28	7	dump->outfile
water	190:15	0:0	8	dump
op	190:19	0:0	8	->
water	190:21	0:0	8	outfile
arg	190:30	190:42	7	dump->format
water	190:30	0:0	8	dump
op	190:34	0:0	8	->
water	190:36	0:0	8	format
arg	190:44	190:46	7	""
water	190:44	0:0	8	""
arg	190:49	190:119	7	"Zone %d, width: %4d, length: %4d, x1: %4d  x2: %4d  y1: %4d  y2: %4d"
water	190:49	0:0	8	"Zone %d, width: %4d, length: %4d, x1: %4d  x2: %4d  y1: %4d  y2: %4d"
arg	191:20	191:25	7	i+1
water	191:20	0:0	8	i
op	191:22	0:0	8	+
water	191:24	0:0	8	1
arg	191:27	191:41	7	(uint32)zwidth
water	191:27	0:0	8	(
water	191:28	0:0	8	uint32
water	191:34	0:0	8	)
water	191:35	0:0	8	zwidth
arg	191:43	191:58	7	(uint32)zlength
water	191:43	0:0	8	(
water	191:44	0:0	8	uint32
water	191:50	0:0	8	)
water	191:51	0:0	8	zlength
arg	192:6	192:28	7	crop->regionlist[i].x1
water	192:6	0:0	8	crop
op	192:10	0:0	8	->
water	192:12	0:0	8	regionlist
op	192:22	0:0	8	[
water	192:23	0:0	8	i
op	192:24	0:0	8	]
op	192:25	0:0	8	.
water	192:26	0:0	8	x1
arg	192:30	192:52	7	crop->regionlist[i].x2
water	192:30	0:0	8	crop
op	192:34	0:0	8	->
water	192:36	0:0	8	regionlist
op	192:46	0:0	8	[
water	192:47	0:0	8	i
op	192:48	0:0	8	]
op	192:49	0:0	8	.
water	192:50	0:0	8	x2
arg	193:20	193:42	7	crop->regionlist[i].y1
water	193:20	0:0	8	crop
op	193:24	0:0	8	->
water	193:26	0:0	8	regionlist
op	193:36	0:0	8	[
water	193:37	0:0	8	i
op	193:38	0:0	8	]
op	193:39	0:0	8	.
water	193:40	0:0	8	y1
arg	193:44	193:66	7	crop->regionlist[i].y2
water	193:44	0:0	8	crop
op	193:48	0:0	8	->
water	193:50	0:0	8	regionlist
op	193:60	0:0	8	[
water	193:61	0:0	8	i
op	193:62	0:0	8	]
op	193:63	0:0	8	.
water	193:64	0:0	8	y2
water	193:67	0:0	6	;
water	194:4	0:0	4	}
return	195:2	195:12	2	(0)
water	195:9	0:0	3	(
water	195:10	0:0	3	0
water	195:11	0:0	3	)

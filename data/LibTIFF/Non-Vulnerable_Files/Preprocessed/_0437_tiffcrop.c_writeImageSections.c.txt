func	1:0	45:2	0	static int	writeImageSections
params	2:18	0:0	1	
param	2:19	2:27	2	TIFF *	in
param	2:29	2:38	2	TIFF *	out
param	2:40	2:64	2	struct image_data *	image
param	3:5	3:25	2	struct pagedef *	page
param	3:27	3:51	2	struct pageseg *	sections
param	4:5	4:28	2	struct dump_opts *	dump
param	4:30	4:53	2	unsigned char *	src_buff
param	5:19	5:48	2	unsigned char * *	sect_buff_ptr
stmnts	0:0	44:12	1	
decl	7:2	7:20	2	double	hres
water	7:14	0:0	2	,
decl	7:2	7:20	2	double	vres
decl	8:2	8:39	2	uint32	i
water	8:11	0:0	2	,
decl	8:2	8:39	2	uint32	k
water	8:14	0:0	2	,
decl	8:2	8:39	2	uint32	width
water	8:21	0:0	2	,
decl	8:2	8:39	2	uint32	length
water	8:29	0:0	2	,
decl	8:2	8:39	2	uint32	sectsize
decl	9:2	9:43	2	unsigned char	*sect_buff
op	9:27	0:0	2	=
op	9:29	0:0	2	*
water	9:30	0:0	2	sect_buff_ptr
water	10:2	0:0	2	hres
op	10:7	0:0	2	=
water	10:9	0:0	2	page
op	10:13	0:0	2	->
water	10:15	0:0	2	hres
water	10:19	0:0	2	;
water	11:2	0:0	2	vres
op	11:7	0:0	2	=
water	11:9	0:0	2	page
op	11:13	0:0	2	->
water	11:15	0:0	2	vres
water	11:19	0:0	2	;
water	12:2	0:0	2	k
op	12:4	0:0	2	=
water	12:6	0:0	2	page
op	12:10	0:0	2	->
water	12:12	0:0	2	cols
op	12:17	0:0	2	*
water	12:19	0:0	2	page
op	12:23	0:0	2	->
water	12:25	0:0	2	rows
water	12:29	0:0	2	;
if	13:2	18:3	2	(( k < 1 ) || ( k > MAX_SECTIONS ))
cond	13:6	13:34	3	( k < 1 ) || ( k > MAX_SECTIONS )
water	13:6	0:0	4	(
water	13:7	0:0	4	k
op	13:9	0:0	4	<
water	13:11	0:0	4	1
water	13:12	0:0	4	)
op	13:14	0:0	4	||
water	13:17	0:0	4	(
water	13:18	0:0	4	k
op	13:20	0:0	4	>
water	13:22	0:0	4	MAX_SECTIONS
water	13:34	0:0	4	)
stmts	14:3	18:3	3	
water	14:3	0:0	4	{
call	15:3	16:94	4	TIFFError
arg	15:13	15:33	5	"writeImageSections"
water	15:13	0:0	6	"writeImageSections"
arg	16:6	16:91	5	"%d Rows and Columns exceed maximum sections\nIncrease resolution or reduce sections"
water	16:6	0:0	6	"%d Rows and Columns exceed maximum sections\nIncrease resolution or reduce sections"
arg	16:93	16:94	5	k
water	16:93	0:0	6	k
water	16:95	0:0	4	;
return	17:3	17:14	4	(-1)
water	17:10	0:0	5	(
op	17:11	0:0	5	-
water	17:12	0:0	5	1
water	17:13	0:0	5	)
water	18:3	0:0	4	}
for	19:2	43:4	2	(i = 0 ;i < k;i ++)
forinit	19:7	19:12	3	i = 0 ;
water	19:7	0:0	4	i
op	19:9	0:0	4	=
water	19:11	0:0	4	0
water	19:12	0:0	4	;
cond	19:14	19:18	3	i < k
water	19:14	0:0	4	i
op	19:16	0:0	4	<
water	19:18	0:0	4	k
forexpr	19:21	19:22	3	i ++
water	19:21	0:0	4	i
op	19:22	0:0	4	++
stmts	20:4	43:4	3	
water	20:4	0:0	4	{
water	21:4	0:0	4	width
op	21:11	0:0	4	=
water	21:13	0:0	4	sections
op	21:21	0:0	4	[
water	21:22	0:0	4	i
op	21:23	0:0	4	]
op	21:24	0:0	4	.
water	21:25	0:0	4	x2
op	21:28	0:0	4	-
water	21:30	0:0	4	sections
op	21:38	0:0	4	[
water	21:39	0:0	4	i
op	21:40	0:0	4	]
op	21:41	0:0	4	.
water	21:42	0:0	4	x1
op	21:45	0:0	4	+
water	21:47	0:0	4	1
water	21:48	0:0	4	;
water	22:4	0:0	4	length
op	22:11	0:0	4	=
water	22:13	0:0	4	sections
op	22:21	0:0	4	[
water	22:22	0:0	4	i
op	22:23	0:0	4	]
op	22:24	0:0	4	.
water	22:25	0:0	4	y2
op	22:28	0:0	4	-
water	22:30	0:0	4	sections
op	22:38	0:0	4	[
water	22:39	0:0	4	i
op	22:40	0:0	4	]
op	22:41	0:0	4	.
water	22:42	0:0	4	y1
op	22:45	0:0	4	+
water	22:47	0:0	4	1
water	22:48	0:0	4	;
water	23:4	0:0	4	sectsize
op	23:13	0:0	4	=
water	23:15	0:0	4	(
water	23:16	0:0	4	uint32
water	23:22	0:0	4	)
call	24:5	24:46	4	ceil
arg	24:10	24:46	5	(width*image->bps+7)/(double)8
water	24:10	0:0	6	(
water	24:11	0:0	6	width
op	24:17	0:0	6	*
water	24:19	0:0	6	image
op	24:24	0:0	6	->
water	24:26	0:0	6	bps
op	24:30	0:0	6	+
water	24:32	0:0	6	7
water	24:33	0:0	6	)
op	24:35	0:0	6	/
water	24:37	0:0	6	(
water	24:38	0:0	6	double
water	24:44	0:0	6	)
water	24:45	0:0	6	8
op	24:48	0:0	4	*
water	24:50	0:0	4	image
op	24:55	0:0	4	->
water	24:57	0:0	4	spp
op	24:61	0:0	4	*
water	24:63	0:0	4	length
water	24:69	0:0	4	;
if	26:4	30:6	4	(createImageSection (sectsize ,sect_buff_ptr ))
cond	26:8	26:50	5	createImageSection (sectsize ,sect_buff_ptr )
call	26:8	26:50	6	createImageSection
arg	26:27	26:35	7	sectsize
water	26:27	0:0	8	sectsize
arg	26:37	26:50	7	sect_buff_ptr
water	26:37	0:0	8	sect_buff_ptr
stmts	27:6	30:6	5	
water	27:6	0:0	6	{
call	28:6	28:73	6	TIFFError
arg	28:16	28:36	7	"writeImageSections"
water	28:16	0:0	8	"writeImageSections"
arg	28:38	28:73	7	"Unable to allocate section buffer"
water	28:38	0:0	8	"Unable to allocate section buffer"
water	28:74	0:0	6	;
call	29:6	29:14	6	exit
arg	29:12	29:14	7	-1
op	29:12	0:0	8	-
water	29:13	0:0	8	1
water	29:15	0:0	6	;
water	30:6	0:0	6	}
water	31:4	0:0	4	sect_buff
op	31:14	0:0	4	=
op	31:16	0:0	4	*
water	31:17	0:0	4	sect_buff_ptr
water	31:30	0:0	4	;
if	32:4	36:6	4	(extractImageSection (image ,& sections [ i ] ,src_buff ,sect_buff ))
cond	32:8	32:69	5	extractImageSection (image ,& sections [ i ] ,src_buff ,sect_buff )
call	32:8	32:69	6	extractImageSection
arg	32:29	32:34	7	image
water	32:29	0:0	8	image
arg	32:36	32:48	7	&sections[i]
op	32:36	0:0	8	&
water	32:37	0:0	8	sections
op	32:45	0:0	8	[
water	32:46	0:0	8	i
op	32:47	0:0	8	]
arg	32:50	32:58	7	src_buff
water	32:50	0:0	8	src_buff
arg	32:60	32:69	7	sect_buff
water	32:60	0:0	8	sect_buff
stmts	33:6	36:6	5	
water	33:6	0:0	6	{
call	34:6	34:72	6	TIFFError
arg	34:16	34:36	7	"writeImageSections"
water	34:16	0:0	8	"writeImageSections"
arg	34:38	34:72	7	"Unable to extract image sections"
water	34:38	0:0	8	"Unable to extract image sections"
water	34:73	0:0	6	;
call	35:6	35:14	6	exit
arg	35:12	35:14	7	-1
op	35:12	0:0	8	-
water	35:13	0:0	8	1
water	35:15	0:0	6	;
water	36:6	0:0	6	}
if	38:4	42:6	4	(writeSingleSection (in ,out ,image ,dump ,width ,length ,hres ,vres ,sect_buff ))
cond	38:8	38:85	5	writeSingleSection (in ,out ,image ,dump ,width ,length ,hres ,vres ,sect_buff )
call	38:8	38:85	6	writeSingleSection
arg	38:27	38:29	7	in
water	38:27	0:0	8	in
arg	38:31	38:34	7	out
water	38:31	0:0	8	out
arg	38:36	38:41	7	image
water	38:36	0:0	8	image
arg	38:43	38:47	7	dump
water	38:43	0:0	8	dump
arg	38:49	38:54	7	width
water	38:49	0:0	8	width
arg	38:56	38:62	7	length
water	38:56	0:0	8	length
arg	38:64	38:68	7	hres
water	38:64	0:0	8	hres
arg	38:70	38:74	7	vres
water	38:70	0:0	8	vres
arg	38:76	38:85	7	sect_buff
water	38:76	0:0	8	sect_buff
stmts	39:6	42:6	5	
water	39:6	0:0	6	{
call	40:6	40:69	6	TIFFError
arg	40:16	40:36	7	"writeImageSections"
water	40:16	0:0	8	"writeImageSections"
arg	40:38	40:69	7	"Unable to write image section"
water	40:38	0:0	8	"Unable to write image section"
water	40:70	0:0	6	;
call	41:6	41:14	6	exit
arg	41:12	41:14	7	-1
op	41:12	0:0	8	-
water	41:13	0:0	8	1
water	41:15	0:0	6	;
water	42:6	0:0	6	}
water	43:4	0:0	4	}
return	44:2	44:12	2	(0)
water	44:9	0:0	3	(
water	44:10	0:0	3	0
water	44:11	0:0	3	)

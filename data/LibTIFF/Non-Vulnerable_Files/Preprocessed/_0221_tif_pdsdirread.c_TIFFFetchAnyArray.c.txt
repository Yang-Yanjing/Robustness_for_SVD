func	1:0	77:0	0	static int	TIFFFetchAnyArray
params	2:17	0:0	1	
param	2:18	2:27	2	TIFF *	tif
param	2:29	2:46	2	TIFFDirEntry *	dir
param	2:48	2:57	2	double *	v
stmnts	0:0	76:11	1	
decl	4:1	4:6	2	int	i
switch	5:1	75:1	2	(dir -> tdir_type)
cond	5:9	5:14	3	dir -> tdir_type
water	5:9	0:0	4	dir
op	5:12	0:0	4	->
water	5:14	0:0	4	tdir_type
stmts	5:25	75:1	3	
water	5:25	0:0	4	{
label	6:1	6:15	4	case TIFF_BYTE :
label	7:1	7:16	4	case TIFF_SBYTE :
if	8:2	9:13	4	(!TIFFFetchByteArray (tif ,dir ,( uint16 * ) v ))
cond	8:6	8:47	5	!TIFFFetchByteArray (tif ,dir ,( uint16 * ) v )
op	8:6	0:0	6	!
call	8:7	8:47	6	TIFFFetchByteArray
arg	8:26	8:29	7	tif
water	8:26	0:0	8	tif
arg	8:31	8:34	7	dir
water	8:31	0:0	8	dir
arg	8:36	8:47	7	(uint16*)v
water	8:36	0:0	8	(
water	8:37	0:0	8	uint16
op	8:43	0:0	8	*
water	8:44	0:0	8	)
water	8:46	0:0	8	v
stmts	9:3	9:13	5	
return	9:3	9:13	6	(0)
water	9:10	0:0	7	(
water	9:11	0:0	7	0
water	9:12	0:0	7	)
if	10:2	14:2	4	(dir -> tdir_type == TIFF_BYTE)
cond	10:6	10:24	5	dir -> tdir_type == TIFF_BYTE
water	10:6	0:0	6	dir
op	10:9	0:0	6	->
water	10:11	0:0	6	tdir_type
op	10:21	0:0	6	==
water	10:24	0:0	6	TIFF_BYTE
stmts	10:35	14:2	5	
water	10:35	0:0	6	{
decl	11:3	11:27	6	uint16	*vp
op	11:14	0:0	6	=
water	11:16	0:0	6	(
water	11:17	0:0	6	uint16
op	11:23	0:0	6	*
water	11:24	0:0	6	)
water	11:26	0:0	6	v
for	12:3	13:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	12:8	12:29	7	i = dir -> tdir_count - 1 ;
water	12:8	0:0	8	i
op	12:10	0:0	8	=
water	12:12	0:0	8	dir
op	12:15	0:0	8	->
water	12:17	0:0	8	tdir_count
op	12:27	0:0	8	-
water	12:28	0:0	8	1
water	12:29	0:0	8	;
cond	12:31	12:36	7	i >= 0
water	12:31	0:0	8	i
op	12:33	0:0	8	>=
water	12:36	0:0	8	0
forexpr	12:39	12:40	7	i --
water	12:39	0:0	8	i
op	12:40	0:0	8	--
stmts	13:4	13:16	7	
water	13:4	0:0	8	v
op	13:5	0:0	8	[
water	13:6	0:0	8	i
op	13:7	0:0	8	]
op	13:9	0:0	8	=
water	13:11	0:0	8	vp
op	13:13	0:0	8	[
water	13:14	0:0	8	i
op	13:15	0:0	8	]
water	13:16	0:0	8	;
water	14:2	0:0	6	}
else	14:4	18:2	4
stmts	14:9	18:2	5	
water	14:9	0:0	6	{
decl	15:3	15:25	6	int16	*vp
op	15:13	0:0	6	=
water	15:15	0:0	6	(
water	15:16	0:0	6	int16
op	15:21	0:0	6	*
water	15:22	0:0	6	)
water	15:24	0:0	6	v
for	16:3	17:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	16:8	16:29	7	i = dir -> tdir_count - 1 ;
water	16:8	0:0	8	i
op	16:10	0:0	8	=
water	16:12	0:0	8	dir
op	16:15	0:0	8	->
water	16:17	0:0	8	tdir_count
op	16:27	0:0	8	-
water	16:28	0:0	8	1
water	16:29	0:0	8	;
cond	16:31	16:36	7	i >= 0
water	16:31	0:0	8	i
op	16:33	0:0	8	>=
water	16:36	0:0	8	0
forexpr	16:39	16:40	7	i --
water	16:39	0:0	8	i
op	16:40	0:0	8	--
stmts	17:4	17:16	7	
water	17:4	0:0	8	v
op	17:5	0:0	8	[
water	17:6	0:0	8	i
op	17:7	0:0	8	]
op	17:9	0:0	8	=
water	17:11	0:0	8	vp
op	17:13	0:0	8	[
water	17:14	0:0	8	i
op	17:15	0:0	8	]
water	17:16	0:0	8	;
water	18:2	0:0	6	}
break	19:2	19:7	4	
label	20:1	20:16	4	case TIFF_SHORT :
label	21:1	21:17	4	case TIFF_SSHORT :
if	22:2	23:13	4	(!TIFFFetchShortArray (tif ,dir ,( uint16 * ) v ))
cond	22:6	22:48	5	!TIFFFetchShortArray (tif ,dir ,( uint16 * ) v )
op	22:6	0:0	6	!
call	22:7	22:48	6	TIFFFetchShortArray
arg	22:27	22:30	7	tif
water	22:27	0:0	8	tif
arg	22:32	22:35	7	dir
water	22:32	0:0	8	dir
arg	22:37	22:48	7	(uint16*)v
water	22:37	0:0	8	(
water	22:38	0:0	8	uint16
op	22:44	0:0	8	*
water	22:45	0:0	8	)
water	22:47	0:0	8	v
stmts	23:3	23:13	5	
return	23:3	23:13	6	(0)
water	23:10	0:0	7	(
water	23:11	0:0	7	0
water	23:12	0:0	7	)
if	24:2	28:2	4	(dir -> tdir_type == TIFF_SHORT)
cond	24:6	24:24	5	dir -> tdir_type == TIFF_SHORT
water	24:6	0:0	6	dir
op	24:9	0:0	6	->
water	24:11	0:0	6	tdir_type
op	24:21	0:0	6	==
water	24:24	0:0	6	TIFF_SHORT
stmts	24:36	28:2	5	
water	24:36	0:0	6	{
decl	25:3	25:27	6	uint16	*vp
op	25:14	0:0	6	=
water	25:16	0:0	6	(
water	25:17	0:0	6	uint16
op	25:23	0:0	6	*
water	25:24	0:0	6	)
water	25:26	0:0	6	v
for	26:3	27:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	26:8	26:29	7	i = dir -> tdir_count - 1 ;
water	26:8	0:0	8	i
op	26:10	0:0	8	=
water	26:12	0:0	8	dir
op	26:15	0:0	8	->
water	26:17	0:0	8	tdir_count
op	26:27	0:0	8	-
water	26:28	0:0	8	1
water	26:29	0:0	8	;
cond	26:31	26:36	7	i >= 0
water	26:31	0:0	8	i
op	26:33	0:0	8	>=
water	26:36	0:0	8	0
forexpr	26:39	26:40	7	i --
water	26:39	0:0	8	i
op	26:40	0:0	8	--
stmts	27:4	27:16	7	
water	27:4	0:0	8	v
op	27:5	0:0	8	[
water	27:6	0:0	8	i
op	27:7	0:0	8	]
op	27:9	0:0	8	=
water	27:11	0:0	8	vp
op	27:13	0:0	8	[
water	27:14	0:0	8	i
op	27:15	0:0	8	]
water	27:16	0:0	8	;
water	28:2	0:0	6	}
else	28:4	32:2	4
stmts	28:9	32:2	5	
water	28:9	0:0	6	{
decl	29:3	29:25	6	int16	*vp
op	29:13	0:0	6	=
water	29:15	0:0	6	(
water	29:16	0:0	6	int16
op	29:21	0:0	6	*
water	29:22	0:0	6	)
water	29:24	0:0	6	v
for	30:3	31:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	30:8	30:29	7	i = dir -> tdir_count - 1 ;
water	30:8	0:0	8	i
op	30:10	0:0	8	=
water	30:12	0:0	8	dir
op	30:15	0:0	8	->
water	30:17	0:0	8	tdir_count
op	30:27	0:0	8	-
water	30:28	0:0	8	1
water	30:29	0:0	8	;
cond	30:31	30:36	7	i >= 0
water	30:31	0:0	8	i
op	30:33	0:0	8	>=
water	30:36	0:0	8	0
forexpr	30:39	30:40	7	i --
water	30:39	0:0	8	i
op	30:40	0:0	8	--
stmts	31:4	31:16	7	
water	31:4	0:0	8	v
op	31:5	0:0	8	[
water	31:6	0:0	8	i
op	31:7	0:0	8	]
op	31:9	0:0	8	=
water	31:11	0:0	8	vp
op	31:13	0:0	8	[
water	31:14	0:0	8	i
op	31:15	0:0	8	]
water	31:16	0:0	8	;
water	32:2	0:0	6	}
break	33:2	33:7	4	
label	34:1	34:15	4	case TIFF_LONG :
label	35:1	35:16	4	case TIFF_SLONG :
if	36:2	37:13	4	(!TIFFFetchLongArray (tif ,dir ,( uint32 * ) v ))
cond	36:6	36:47	5	!TIFFFetchLongArray (tif ,dir ,( uint32 * ) v )
op	36:6	0:0	6	!
call	36:7	36:47	6	TIFFFetchLongArray
arg	36:26	36:29	7	tif
water	36:26	0:0	8	tif
arg	36:31	36:34	7	dir
water	36:31	0:0	8	dir
arg	36:36	36:47	7	(uint32*)v
water	36:36	0:0	8	(
water	36:37	0:0	8	uint32
op	36:43	0:0	8	*
water	36:44	0:0	8	)
water	36:46	0:0	8	v
stmts	37:3	37:13	5	
return	37:3	37:13	6	(0)
water	37:10	0:0	7	(
water	37:11	0:0	7	0
water	37:12	0:0	7	)
if	38:2	42:2	4	(dir -> tdir_type == TIFF_LONG)
cond	38:6	38:24	5	dir -> tdir_type == TIFF_LONG
water	38:6	0:0	6	dir
op	38:9	0:0	6	->
water	38:11	0:0	6	tdir_type
op	38:21	0:0	6	==
water	38:24	0:0	6	TIFF_LONG
stmts	38:35	42:2	5	
water	38:35	0:0	6	{
decl	39:3	39:27	6	uint32	*vp
op	39:14	0:0	6	=
water	39:16	0:0	6	(
water	39:17	0:0	6	uint32
op	39:23	0:0	6	*
water	39:24	0:0	6	)
water	39:26	0:0	6	v
for	40:3	41:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	40:8	40:29	7	i = dir -> tdir_count - 1 ;
water	40:8	0:0	8	i
op	40:10	0:0	8	=
water	40:12	0:0	8	dir
op	40:15	0:0	8	->
water	40:17	0:0	8	tdir_count
op	40:27	0:0	8	-
water	40:28	0:0	8	1
water	40:29	0:0	8	;
cond	40:31	40:36	7	i >= 0
water	40:31	0:0	8	i
op	40:33	0:0	8	>=
water	40:36	0:0	8	0
forexpr	40:39	40:40	7	i --
water	40:39	0:0	8	i
op	40:40	0:0	8	--
stmts	41:4	41:16	7	
water	41:4	0:0	8	v
op	41:5	0:0	8	[
water	41:6	0:0	8	i
op	41:7	0:0	8	]
op	41:9	0:0	8	=
water	41:11	0:0	8	vp
op	41:13	0:0	8	[
water	41:14	0:0	8	i
op	41:15	0:0	8	]
water	41:16	0:0	8	;
water	42:2	0:0	6	}
else	42:4	46:2	4
stmts	42:9	46:2	5	
water	42:9	0:0	6	{
decl	43:3	43:25	6	int32	*vp
op	43:13	0:0	6	=
water	43:15	0:0	6	(
water	43:16	0:0	6	int32
op	43:21	0:0	6	*
water	43:22	0:0	6	)
water	43:24	0:0	6	v
for	44:3	45:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	44:8	44:29	7	i = dir -> tdir_count - 1 ;
water	44:8	0:0	8	i
op	44:10	0:0	8	=
water	44:12	0:0	8	dir
op	44:15	0:0	8	->
water	44:17	0:0	8	tdir_count
op	44:27	0:0	8	-
water	44:28	0:0	8	1
water	44:29	0:0	8	;
cond	44:31	44:36	7	i >= 0
water	44:31	0:0	8	i
op	44:33	0:0	8	>=
water	44:36	0:0	8	0
forexpr	44:39	44:40	7	i --
water	44:39	0:0	8	i
op	44:40	0:0	8	--
stmts	45:4	45:16	7	
water	45:4	0:0	8	v
op	45:5	0:0	8	[
water	45:6	0:0	8	i
op	45:7	0:0	8	]
op	45:9	0:0	8	=
water	45:11	0:0	8	vp
op	45:13	0:0	8	[
water	45:14	0:0	8	i
op	45:15	0:0	8	]
water	45:16	0:0	8	;
water	46:2	0:0	6	}
break	47:2	47:7	4	
label	48:1	48:19	4	case TIFF_RATIONAL :
label	49:1	49:20	4	case TIFF_SRATIONAL :
if	50:2	51:13	4	(!TIFFFetchRationalArray (tif ,dir ,( float * ) v ))
cond	50:6	50:50	5	!TIFFFetchRationalArray (tif ,dir ,( float * ) v )
op	50:6	0:0	6	!
call	50:7	50:50	6	TIFFFetchRationalArray
arg	50:30	50:33	7	tif
water	50:30	0:0	8	tif
arg	50:35	50:38	7	dir
water	50:35	0:0	8	dir
arg	50:40	50:50	7	(float*)v
water	50:40	0:0	8	(
water	50:41	0:0	8	float
op	50:46	0:0	8	*
water	50:47	0:0	8	)
water	50:49	0:0	8	v
stmts	51:3	51:13	5	
return	51:3	51:13	6	(0)
water	51:10	0:0	7	(
water	51:11	0:0	7	0
water	51:12	0:0	7	)
water	52:2	0:0	4	{
decl	52:4	52:26	4	float	*vp
op	52:14	0:0	4	=
water	52:16	0:0	4	(
water	52:17	0:0	4	float
op	52:22	0:0	4	*
water	52:23	0:0	4	)
water	52:25	0:0	4	v
for	53:4	54:15	4	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	53:9	53:30	5	i = dir -> tdir_count - 1 ;
water	53:9	0:0	6	i
op	53:11	0:0	6	=
water	53:13	0:0	6	dir
op	53:16	0:0	6	->
water	53:18	0:0	6	tdir_count
op	53:28	0:0	6	-
water	53:29	0:0	6	1
water	53:30	0:0	6	;
cond	53:32	53:37	5	i >= 0
water	53:32	0:0	6	i
op	53:34	0:0	6	>=
water	53:37	0:0	6	0
forexpr	53:40	53:41	5	i --
water	53:40	0:0	6	i
op	53:41	0:0	6	--
stmts	54:3	54:15	5	
water	54:3	0:0	6	v
op	54:4	0:0	6	[
water	54:5	0:0	6	i
op	54:6	0:0	6	]
op	54:8	0:0	6	=
water	54:10	0:0	6	vp
op	54:12	0:0	6	[
water	54:13	0:0	6	i
op	54:14	0:0	6	]
water	54:15	0:0	6	;
water	55:2	0:0	4	}
break	56:2	56:7	4	
label	57:1	57:16	4	case TIFF_FLOAT :
if	58:2	59:13	4	(!TIFFFetchFloatArray (tif ,dir ,( float * ) v ))
cond	58:6	58:47	5	!TIFFFetchFloatArray (tif ,dir ,( float * ) v )
op	58:6	0:0	6	!
call	58:7	58:47	6	TIFFFetchFloatArray
arg	58:27	58:30	7	tif
water	58:27	0:0	8	tif
arg	58:32	58:35	7	dir
water	58:32	0:0	8	dir
arg	58:37	58:47	7	(float*)v
water	58:37	0:0	8	(
water	58:38	0:0	8	float
op	58:43	0:0	8	*
water	58:44	0:0	8	)
water	58:46	0:0	8	v
stmts	59:3	59:13	5	
return	59:3	59:13	6	(0)
water	59:10	0:0	7	(
water	59:11	0:0	7	0
water	59:12	0:0	7	)
water	60:2	0:0	4	{
decl	60:4	60:26	4	float	*vp
op	60:14	0:0	4	=
water	60:16	0:0	4	(
water	60:17	0:0	4	float
op	60:22	0:0	4	*
water	60:23	0:0	4	)
water	60:25	0:0	4	v
for	61:4	62:15	4	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	61:9	61:30	5	i = dir -> tdir_count - 1 ;
water	61:9	0:0	6	i
op	61:11	0:0	6	=
water	61:13	0:0	6	dir
op	61:16	0:0	6	->
water	61:18	0:0	6	tdir_count
op	61:28	0:0	6	-
water	61:29	0:0	6	1
water	61:30	0:0	6	;
cond	61:32	61:37	5	i >= 0
water	61:32	0:0	6	i
op	61:34	0:0	6	>=
water	61:37	0:0	6	0
forexpr	61:40	61:41	5	i --
water	61:40	0:0	6	i
op	61:41	0:0	6	--
stmts	62:3	62:15	5	
water	62:3	0:0	6	v
op	62:4	0:0	6	[
water	62:5	0:0	6	i
op	62:6	0:0	6	]
op	62:8	0:0	6	=
water	62:10	0:0	6	vp
op	62:12	0:0	6	[
water	62:13	0:0	6	i
op	62:14	0:0	6	]
water	62:15	0:0	6	;
water	63:2	0:0	4	}
break	64:2	64:7	4	
label	65:1	65:17	4	case TIFF_DOUBLE :
return	66:2	66:54	4	(TIFFFetchDoubleArray(tif,dir,(double*)v))
water	66:9	0:0	5	(
call	66:10	66:52	5	TIFFFetchDoubleArray
arg	66:31	66:34	6	tif
water	66:31	0:0	7	tif
arg	66:36	66:39	6	dir
water	66:36	0:0	7	dir
arg	66:41	66:52	6	(double*)v
water	66:41	0:0	7	(
water	66:42	0:0	7	double
op	66:48	0:0	7	*
water	66:49	0:0	7	)
water	66:51	0:0	7	v
water	66:53	0:0	5	)
label	67:1	67:8	4	default :
call	71:2	73:55	4	TIFFErrorExt
arg	71:15	71:34	5	tif->tif_clientdata
water	71:15	0:0	6	tif
op	71:18	0:0	6	->
water	71:20	0:0	6	tif_clientdata
arg	71:36	71:49	5	tif->tif_name
water	71:36	0:0	6	tif
op	71:39	0:0	6	->
water	71:41	0:0	6	tif_name
arg	72:6	72:53	5	"Cannot read TIFF_ANY type %d for field \"%s\""
water	72:6	0:0	6	"Cannot read TIFF_ANY type %d for field \"%s\""
arg	73:6	73:55	5	_TIFFFieldWithTag(tif,dir->tdir_tag)->field_name
call	73:6	73:42	6	_TIFFFieldWithTag
arg	73:24	73:27	7	tif
water	73:24	0:0	8	tif
arg	73:29	73:42	7	dir->tdir_tag
water	73:29	0:0	8	dir
op	73:32	0:0	8	->
water	73:34	0:0	8	tdir_tag
op	73:43	0:0	6	->
water	73:45	0:0	6	field_name
water	73:56	0:0	4	;
return	74:2	74:12	4	(0)
water	74:9	0:0	5	(
water	74:10	0:0	5	0
water	74:11	0:0	5	)
water	75:1	0:0	4	}
return	76:1	76:11	2	(1)
water	76:8	0:0	3	(
water	76:9	0:0	3	1
water	76:10	0:0	3	)

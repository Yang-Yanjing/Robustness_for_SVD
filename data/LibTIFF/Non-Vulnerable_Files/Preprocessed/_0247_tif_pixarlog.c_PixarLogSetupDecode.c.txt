func	1:0	51:0	0	static int	PixarLogSetupDecode
params	2:19	0:0	1	
param	2:20	2:29	2	TIFF *	tif
stmnts	4:1	50:1	1	
water	4:1	0:0	2	static
water	4:8	0:0	2	const
water	4:14	0:0	2	char
water	4:19	0:0	2	module
op	4:25	0:0	2	[
op	4:26	0:0	2	]
op	4:28	0:0	2	=
water	4:30	0:0	2	"PixarLogSetupDecode"
water	4:51	0:0	2	;
decl	5:1	5:34	2	TIFFDirectory	*td
op	5:19	0:0	2	=
op	5:21	0:0	2	&
water	5:22	0:0	2	tif
op	5:25	0:0	2	->
water	5:27	0:0	2	tif_dir
decl	6:1	6:38	2	PixarLogState	*sp
op	6:19	0:0	2	=
call	6:21	6:37	3	DecoderState
arg	6:34	6:37	4	tif
water	6:34	0:0	5	tif
decl	7:1	7:19	2	tmsize_t	tbuf_size
call	8:1	8:18	2	assert
arg	8:8	8:18	3	sp!=NULL
water	8:8	0:0	4	sp
op	8:11	0:0	4	!=
water	8:14	0:0	4	NULL
water	8:19	0:0	2	;
if	12:1	13:10	2	(( sp -> state & PLSTATE_INIT ) != 0)
cond	12:5	12:35	3	( sp -> state & PLSTATE_INIT ) != 0
water	12:5	0:0	4	(
water	12:6	0:0	4	sp
op	12:8	0:0	4	->
water	12:10	0:0	4	state
op	12:16	0:0	4	&
water	12:18	0:0	4	PLSTATE_INIT
water	12:30	0:0	4	)
op	12:32	0:0	4	!=
water	12:35	0:0	4	0
stmts	13:2	13:10	3	
return	13:2	13:10	4	1
water	13:9	0:0	5	1
water	16:1	0:0	2	tif
op	16:4	0:0	2	->
water	16:6	0:0	2	tif_postdecode
op	16:21	0:0	2	=
water	16:23	0:0	2	_TIFFNoPostDecode
water	16:40	0:0	2	;
water	18:1	0:0	2	sp
op	18:3	0:0	2	->
water	18:5	0:0	2	stride
op	18:12	0:0	2	=
water	18:14	0:0	2	(
water	18:15	0:0	2	td
op	18:17	0:0	2	->
water	18:19	0:0	2	td_planarconfig
op	18:35	0:0	2	==
water	18:38	0:0	2	PLANARCONFIG_CONTIG
water	18:58	0:0	2	?
water	19:5	0:0	2	td
op	19:7	0:0	2	->
water	19:9	0:0	2	td_samplesperpixel
water	19:28	0:0	2	:
water	19:30	0:0	2	1
water	19:31	0:0	2	)
water	19:32	0:0	2	;
water	20:1	0:0	2	tbuf_size
op	20:11	0:0	2	=
call	20:13	21:46	2	multiply_ms
arg	20:25	21:30	3	multiply_ms(multiply_ms(sp->stride,td->td_imagewidth),td->td_rowsperstrip)
call	20:25	21:29	4	multiply_ms
arg	20:37	20:79	5	multiply_ms(sp->stride,td->td_imagewidth)
call	20:37	20:78	6	multiply_ms
arg	20:49	20:59	7	sp->stride
water	20:49	0:0	8	sp
op	20:51	0:0	8	->
water	20:53	0:0	8	stride
arg	20:61	20:78	7	td->td_imagewidth
water	20:61	0:0	8	td
op	20:63	0:0	8	->
water	20:65	0:0	8	td_imagewidth
arg	21:10	21:29	5	td->td_rowsperstrip
water	21:10	0:0	6	td
op	21:12	0:0	6	->
water	21:14	0:0	6	td_rowsperstrip
arg	21:32	21:46	3	sizeof(uint16)
op	21:32	0:0	4	sizeof
water	21:38	0:0	4	(
water	21:39	0:0	4	uint16
water	21:45	0:0	4	)
water	21:47	0:0	2	;
water	23:1	0:0	2	tbuf_size
op	23:11	0:0	2	=
call	23:13	23:58	2	add_ms
arg	23:20	23:29	3	tbuf_size
water	23:20	0:0	4	tbuf_size
arg	23:31	23:58	3	sizeof(uint16)*sp->stride
op	23:31	0:0	4	sizeof
water	23:37	0:0	4	(
water	23:38	0:0	4	uint16
water	23:44	0:0	4	)
op	23:46	0:0	4	*
water	23:48	0:0	4	sp
op	23:50	0:0	4	->
water	23:52	0:0	4	stride
water	23:59	0:0	2	;
if	24:1	25:12	2	(tbuf_size == 0)
cond	24:5	24:18	3	tbuf_size == 0
water	24:5	0:0	4	tbuf_size
op	24:15	0:0	4	==
water	24:18	0:0	4	0
stmts	25:2	25:12	3	
return	25:2	25:12	4	(0)
water	25:9	0:0	5	(
water	25:10	0:0	5	0
water	25:11	0:0	5	)
water	26:1	0:0	2	sp
op	26:3	0:0	2	->
water	26:5	0:0	2	tbuf
op	26:10	0:0	2	=
water	26:12	0:0	2	(
water	26:13	0:0	2	uint16
op	26:20	0:0	2	*
water	26:21	0:0	2	)
call	26:23	26:44	2	_TIFFmalloc
arg	26:35	26:44	3	tbuf_size
water	26:35	0:0	4	tbuf_size
water	26:45	0:0	2	;
if	27:1	28:12	2	(sp -> tbuf == NULL)
cond	27:5	27:17	3	sp -> tbuf == NULL
water	27:5	0:0	4	sp
op	27:7	0:0	4	->
water	27:9	0:0	4	tbuf
op	27:14	0:0	4	==
water	27:17	0:0	4	NULL
stmts	28:2	28:12	3	
return	28:2	28:12	4	(0)
water	28:9	0:0	5	(
water	28:10	0:0	5	0
water	28:11	0:0	5	)
water	29:1	0:0	2	sp
op	29:3	0:0	2	->
water	29:5	0:0	2	tbuf_size
op	29:15	0:0	2	=
water	29:17	0:0	2	tbuf_size
water	29:26	0:0	2	;
if	30:1	31:45	2	(sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN)
cond	30:5	30:25	3	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN
water	30:5	0:0	4	sp
op	30:7	0:0	4	->
water	30:9	0:0	4	user_datafmt
op	30:22	0:0	4	==
water	30:25	0:0	4	PIXARLOGDATAFMT_UNKNOWN
stmts	31:2	31:45	3	
water	31:2	0:0	4	sp
op	31:4	0:0	4	->
water	31:6	0:0	4	user_datafmt
op	31:19	0:0	4	=
call	31:21	31:44	4	PixarLogGuessDataFmt
arg	31:42	31:44	5	td
water	31:42	0:0	6	td
water	31:45	0:0	4	;
if	32:1	40:1	2	(sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN)
cond	32:5	32:25	3	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN
water	32:5	0:0	4	sp
op	32:7	0:0	4	->
water	32:9	0:0	4	user_datafmt
op	32:22	0:0	4	==
water	32:25	0:0	4	PIXARLOGDATAFMT_UNKNOWN
stmts	32:50	40:1	3	
water	32:50	0:0	4	{
call	33:16	33:34	4	_TIFFfree
arg	33:26	33:34	5	sp->tbuf
water	33:26	0:0	6	sp
op	33:28	0:0	6	->
water	33:30	0:0	6	tbuf
water	33:35	0:0	4	;
water	34:16	0:0	4	sp
op	34:18	0:0	4	->
water	34:20	0:0	4	tbuf
op	34:25	0:0	4	=
water	34:27	0:0	4	NULL
water	34:31	0:0	4	;
water	35:16	0:0	4	sp
op	35:18	0:0	4	->
water	35:20	0:0	4	tbuf_size
op	35:30	0:0	4	=
water	35:32	0:0	4	0
water	35:33	0:0	4	;
call	36:2	38:23	4	TIFFErrorExt
arg	36:15	36:34	5	tif->tif_clientdata
water	36:15	0:0	6	tif
op	36:18	0:0	6	->
water	36:20	0:0	6	tif_clientdata
arg	36:36	36:42	5	module
water	36:36	0:0	6	module
arg	37:3	37:85	5	"PixarLog compression can't handle bits depth/data format combination (depth: %d)"
water	37:3	0:0	6	"PixarLog compression can't handle bits depth/data format combination (depth: %d)"
arg	38:3	38:23	5	td->td_bitspersample
water	38:3	0:0	6	td
op	38:5	0:0	6	->
water	38:7	0:0	6	td_bitspersample
water	38:24	0:0	4	;
return	39:2	39:12	4	(0)
water	39:9	0:0	5	(
water	39:10	0:0	5	0
water	39:11	0:0	5	)
water	40:1	0:0	4	}
if	41:1	47:1	2	(inflateInit (& sp -> stream ) != Z_OK)
cond	41:5	41:33	3	inflateInit (& sp -> stream ) != Z_OK
call	41:5	41:28	4	inflateInit
arg	41:17	41:28	5	&sp->stream
op	41:17	0:0	6	&
water	41:18	0:0	6	sp
op	41:20	0:0	6	->
water	41:22	0:0	6	stream
op	41:30	0:0	4	!=
water	41:33	0:0	4	Z_OK
stmts	41:39	47:1	3	
water	41:39	0:0	4	{
call	42:16	42:34	4	_TIFFfree
arg	42:26	42:34	5	sp->tbuf
water	42:26	0:0	6	sp
op	42:28	0:0	6	->
water	42:30	0:0	6	tbuf
water	42:35	0:0	4	;
water	43:16	0:0	4	sp
op	43:18	0:0	4	->
water	43:20	0:0	4	tbuf
op	43:25	0:0	4	=
water	43:27	0:0	4	NULL
water	43:31	0:0	4	;
water	44:16	0:0	4	sp
op	44:18	0:0	4	->
water	44:20	0:0	4	tbuf_size
op	44:30	0:0	4	=
water	44:32	0:0	4	0
water	44:33	0:0	4	;
call	45:2	45:92	4	TIFFErrorExt
arg	45:15	45:34	5	tif->tif_clientdata
water	45:15	0:0	6	tif
op	45:18	0:0	6	->
water	45:20	0:0	6	tif_clientdata
arg	45:36	45:42	5	module
water	45:36	0:0	6	module
arg	45:44	45:48	5	"%s"
water	45:44	0:0	6	"%s"
arg	45:50	45:92	5	sp->stream.msg?sp->stream.msg:"(null)"
water	45:50	0:0	6	sp
op	45:52	0:0	6	->
water	45:54	0:0	6	stream
op	45:60	0:0	6	.
water	45:61	0:0	6	msg
water	45:65	0:0	6	?
water	45:67	0:0	6	sp
op	45:69	0:0	6	->
water	45:71	0:0	6	stream
op	45:77	0:0	6	.
water	45:78	0:0	6	msg
water	45:82	0:0	6	:
water	45:84	0:0	6	"(null)"
water	45:93	0:0	4	;
return	46:2	46:12	4	(0)
water	46:9	0:0	5	(
water	46:10	0:0	5	0
water	46:11	0:0	5	)
water	47:1	0:0	4	}
else	47:3	50:1	2
stmts	47:8	50:1	3	
water	47:8	0:0	4	{
water	48:2	0:0	4	sp
op	48:4	0:0	4	->
water	48:6	0:0	4	state
op	48:12	0:0	4	|=
water	48:15	0:0	4	PLSTATE_INIT
water	48:27	0:0	4	;
return	49:2	49:12	4	(1)
water	49:9	0:0	5	(
water	49:10	0:0	5	1
water	49:11	0:0	5	)
water	50:1	0:0	4	}

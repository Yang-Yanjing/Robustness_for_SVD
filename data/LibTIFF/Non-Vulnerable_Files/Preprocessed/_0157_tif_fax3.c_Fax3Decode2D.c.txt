func	1:0	48:0	0	static int	Fax3Decode2D
params	2:12	0:0	1	
param	2:13	2:22	2	TIFF *	tif
param	2:24	2:36	2	tidata_t	buf
param	2:38	2:49	2	tsize_t	occ
param	2:51	2:62	2	tsample_t	s
stmnts	4:1	47:11	1	
call	4:1	4:41	2	DECLARE_STATE_2D
arg	4:18	4:21	3	tif
water	4:18	0:0	4	tif
arg	4:23	4:25	3	sp
water	4:23	0:0	4	sp
arg	4:27	4:41	3	"Fax3Decode2D"
water	4:27	0:0	4	"Fax3Decode2D"
water	4:42	0:0	2	;
decl	5:8	5:20	2	int	line
op	5:17	0:0	2	=
water	5:19	0:0	2	0
decl	6:1	6:9	2	int	is1D
water	7:1	0:0	2	(
water	7:2	0:0	2	void
water	7:6	0:0	2	)
water	7:8	0:0	2	s
water	7:9	0:0	2	;
call	8:1	8:20	2	CACHE_STATE
arg	8:13	8:16	3	tif
water	8:13	0:0	4	tif
arg	8:18	8:20	3	sp
water	8:18	0:0	4	sp
water	8:21	0:0	2	;
while	9:1	45:1	2	(( long ) occ > 0)
cond	9:8	9:20	3	( long ) occ > 0
water	9:8	0:0	4	(
water	9:9	0:0	4	long
water	9:13	0:0	4	)
water	9:14	0:0	4	occ
op	9:18	0:0	4	>
water	9:20	0:0	4	0
stmts	9:23	45:1	3	
water	9:23	0:0	4	{
water	10:2	0:0	4	a0
op	10:5	0:0	4	=
water	10:7	0:0	4	0
water	10:8	0:0	4	;
water	11:2	0:0	4	RunLength
op	11:12	0:0	4	=
water	11:14	0:0	4	0
water	11:15	0:0	4	;
water	12:2	0:0	4	pa
op	12:5	0:0	4	=
water	12:7	0:0	4	thisrun
op	12:15	0:0	4	=
water	12:17	0:0	4	sp
op	12:19	0:0	4	->
water	12:21	0:0	4	curruns
water	12:28	0:0	4	;
call	14:2	15:31	4	printf
arg	14:9	14:52	5	"\nBitAcc=%08X, BitsAvail = %d EOLcnt = %d"
water	14:9	0:0	6	"\nBitAcc=%08X, BitsAvail = %d EOLcnt = %d"
arg	15:6	15:12	5	BitAcc
water	15:6	0:0	6	BitAcc
arg	15:14	15:23	5	BitsAvail
water	15:14	0:0	6	BitsAvail
arg	15:25	15:31	5	EOLcnt
water	15:25	0:0	6	EOLcnt
water	15:32	0:0	4	;
call	17:2	17:16	4	SYNC_EOL
arg	17:11	17:16	5	EOF2D
water	17:11	0:0	6	EOF2D
water	17:17	0:0	4	;
call	18:2	18:20	4	NeedBits8
arg	18:12	18:13	5	1
water	18:12	0:0	6	1
arg	18:15	18:20	5	EOF2D
water	18:15	0:0	6	EOF2D
water	18:21	0:0	4	;
water	19:2	0:0	4	is1D
op	19:7	0:0	4	=
call	19:9	19:18	4	GetBits
arg	19:17	19:18	5	1
water	19:17	0:0	6	1
water	19:19	0:0	4	;
call	20:2	20:11	4	ClrBits
arg	20:10	20:11	5	1
water	20:10	0:0	6	1
water	20:12	0:0	4	;
call	22:2	23:38	4	printf
arg	22:9	22:41	5	" %s\n-------------------- %d\n"
water	22:9	0:0	6	" %s\n-------------------- %d\n"
arg	23:6	23:24	5	is1D?"1D":"2D"
water	23:6	0:0	6	is1D
water	23:11	0:0	6	?
water	23:13	0:0	6	"1D"
water	23:18	0:0	6	:
water	23:20	0:0	6	"2D"
arg	23:26	23:38	5	tif->tif_row
water	23:26	0:0	6	tif
op	23:29	0:0	6	->
water	23:31	0:0	6	tif_row
water	23:39	0:0	4	;
call	24:2	24:15	4	fflush
arg	24:9	24:15	5	stdout
water	24:9	0:0	6	stdout
water	24:16	0:0	4	;
water	26:2	0:0	4	pb
op	26:5	0:0	4	=
water	26:7	0:0	4	sp
op	26:9	0:0	4	->
water	26:11	0:0	4	refruns
water	26:18	0:0	4	;
water	27:2	0:0	4	b1
op	27:5	0:0	4	=
op	27:7	0:0	4	*
water	27:8	0:0	4	pb
op	27:10	0:0	4	++
water	27:12	0:0	4	;
if	28:2	29:19	4	(is1D)
cond	28:6	28:6	5	is1D
water	28:6	0:0	6	is1D
stmts	29:3	29:19	5	
call	29:3	29:18	6	EXPAND1D
arg	29:12	29:18	7	EOF2Da
water	29:12	0:0	8	EOF2Da
water	29:19	0:0	6	;
else	30:2	31:19	4
stmts	31:3	31:19	5	
call	31:3	31:18	6	EXPAND2D
arg	31:12	31:18	7	EOF2Da
water	31:12	0:0	8	EOF2Da
water	31:19	0:0	6	;
call	32:2	32:37	4	(*sp->fill)
arg	32:14	32:17	5	buf
water	32:14	0:0	6	buf
arg	32:19	32:26	5	thisrun
water	32:19	0:0	6	thisrun
arg	32:28	32:30	5	pa
water	32:28	0:0	6	pa
arg	32:32	32:37	5	lastx
water	32:32	0:0	6	lastx
water	32:38	0:0	4	;
call	33:2	33:12	4	SETVALUE
arg	33:11	33:12	5	0
water	33:11	0:0	6	0
water	33:13	0:0	4	;
call	34:2	34:40	4	SWAP
arg	34:7	34:14	5	uint32*
water	34:7	0:0	6	uint32
op	34:13	0:0	6	*
arg	34:16	34:27	5	sp->curruns
water	34:16	0:0	6	sp
op	34:18	0:0	6	->
water	34:20	0:0	6	curruns
arg	34:29	34:40	5	sp->refruns
water	34:29	0:0	6	sp
op	34:31	0:0	6	->
water	34:33	0:0	6	refruns
water	34:41	0:0	4	;
water	35:2	0:0	4	buf
op	35:6	0:0	4	+=
water	35:9	0:0	4	sp
op	35:11	0:0	4	->
water	35:13	0:0	4	b
op	35:14	0:0	4	.
water	35:15	0:0	4	rowbytes
water	35:23	0:0	4	;
water	36:2	0:0	4	occ
op	36:6	0:0	4	-=
water	36:9	0:0	4	sp
op	36:11	0:0	4	->
water	36:13	0:0	4	b
op	36:14	0:0	4	.
water	36:15	0:0	4	rowbytes
water	36:23	0:0	4	;
water	37:16	0:0	4	line
op	37:20	0:0	4	++
water	37:22	0:0	4	;
continue	38:2	38:10	4	
label	39:1	39:6	4	EOF2D :
call	40:2	40:15	4	CLEANUP_RUNS
water	40:16	0:0	4	;
label	41:1	41:7	4	EOF2Da :
call	42:2	42:37	4	(*sp->fill)
arg	42:14	42:17	5	buf
water	42:14	0:0	6	buf
arg	42:19	42:26	5	thisrun
water	42:19	0:0	6	thisrun
arg	42:28	42:30	5	pa
water	42:28	0:0	6	pa
arg	42:32	42:37	5	lastx
water	42:32	0:0	6	lastx
water	42:38	0:0	4	;
call	43:2	43:23	4	UNCACHE_STATE
arg	43:16	43:19	5	tif
water	43:16	0:0	6	tif
arg	43:21	43:23	5	sp
water	43:21	0:0	6	sp
water	43:24	0:0	4	;
return	44:2	44:13	4	(-1)
water	44:9	0:0	5	(
op	44:10	0:0	5	-
water	44:11	0:0	5	1
water	44:12	0:0	5	)
water	45:1	0:0	4	}
call	46:1	46:22	2	UNCACHE_STATE
arg	46:15	46:18	3	tif
water	46:15	0:0	4	tif
arg	46:20	46:22	3	sp
water	46:20	0:0	4	sp
water	46:23	0:0	2	;
return	47:1	47:11	2	(1)
water	47:8	0:0	3	(
water	47:9	0:0	3	1
water	47:10	0:0	3	)

func	1:0	43:0	0	static int	Fax4Decode
params	2:10	0:0	1	
param	2:11	2:20	2	TIFF *	tif
param	2:22	2:34	2	tidata_t	buf
param	2:36	2:47	2	tsize_t	occ
param	2:49	2:60	2	tsample_t	s
stmnts	4:1	42:11	1	
call	4:1	4:39	2	DECLARE_STATE_2D
arg	4:18	4:21	3	tif
water	4:18	0:0	4	tif
arg	4:23	4:25	3	sp
water	4:23	0:0	4	sp
arg	4:27	4:39	3	"Fax4Decode"
water	4:27	0:0	4	"Fax4Decode"
water	4:40	0:0	2	;
decl	5:8	5:20	2	int	line
op	5:17	0:0	2	=
water	5:19	0:0	2	0
water	6:1	0:0	2	(
water	6:2	0:0	2	void
water	6:6	0:0	2	)
water	6:8	0:0	2	s
water	6:9	0:0	2	;
call	7:1	7:20	2	CACHE_STATE
arg	7:13	7:16	3	tif
water	7:13	0:0	4	tif
arg	7:18	7:20	3	sp
water	7:18	0:0	4	sp
water	7:21	0:0	2	;
while	8:1	40:1	2	(( long ) occ > 0)
cond	8:8	8:20	3	( long ) occ > 0
water	8:8	0:0	4	(
water	8:9	0:0	4	long
water	8:13	0:0	4	)
water	8:14	0:0	4	occ
op	8:18	0:0	4	>
water	8:20	0:0	4	0
stmts	8:23	40:1	3	
water	8:23	0:0	4	{
water	9:2	0:0	4	a0
op	9:5	0:0	4	=
water	9:7	0:0	4	0
water	9:8	0:0	4	;
water	10:2	0:0	4	RunLength
op	10:12	0:0	4	=
water	10:14	0:0	4	0
water	10:15	0:0	4	;
water	11:2	0:0	4	pa
op	11:5	0:0	4	=
water	11:7	0:0	4	thisrun
op	11:15	0:0	4	=
water	11:17	0:0	4	sp
op	11:19	0:0	4	->
water	11:21	0:0	4	curruns
water	11:28	0:0	4	;
water	12:2	0:0	4	pb
op	12:5	0:0	4	=
water	12:7	0:0	4	sp
op	12:9	0:0	4	->
water	12:11	0:0	4	refruns
water	12:18	0:0	4	;
water	13:2	0:0	4	b1
op	13:5	0:0	4	=
op	13:7	0:0	4	*
water	13:8	0:0	4	pb
op	13:10	0:0	4	++
water	13:12	0:0	4	;
call	15:2	15:61	4	printf
arg	15:9	15:42	5	"\nBitAcc=%08X, BitsAvail = %d\n"
water	15:9	0:0	6	"\nBitAcc=%08X, BitsAvail = %d\n"
arg	15:44	15:50	5	BitAcc
water	15:44	0:0	6	BitAcc
arg	15:52	15:61	5	BitsAvail
water	15:52	0:0	6	BitsAvail
water	15:62	0:0	4	;
call	16:2	16:50	4	printf
arg	16:9	16:36	5	"-------------------- %d\n"
water	16:9	0:0	6	"-------------------- %d\n"
arg	16:38	16:50	5	tif->tif_row
water	16:38	0:0	6	tif
op	16:41	0:0	6	->
water	16:43	0:0	6	tif_row
water	16:51	0:0	4	;
call	17:2	17:15	4	fflush
arg	17:9	17:15	5	stdout
water	17:9	0:0	6	stdout
water	17:16	0:0	4	;
call	19:2	19:16	4	EXPAND2D
arg	19:11	19:16	5	EOFG4
water	19:11	0:0	6	EOFG4
water	19:17	0:0	4	;
if	20:16	21:30	4	(EOLcnt)
cond	20:20	20:20	5	EOLcnt
water	20:20	0:0	6	EOLcnt
stmts	21:20	21:30	5	
goto	21:20	21:30	6	EOFG4
water	21:25	0:0	7	EOFG4
call	22:2	22:37	4	(*sp->fill)
arg	22:14	22:17	5	buf
water	22:14	0:0	6	buf
arg	22:19	22:26	5	thisrun
water	22:19	0:0	6	thisrun
arg	22:28	22:30	5	pa
water	22:28	0:0	6	pa
arg	22:32	22:37	5	lastx
water	22:32	0:0	6	lastx
water	22:38	0:0	4	;
call	23:2	23:12	4	SETVALUE
arg	23:11	23:12	5	0
water	23:11	0:0	6	0
water	23:13	0:0	4	;
call	24:2	24:40	4	SWAP
arg	24:7	24:14	5	uint32*
water	24:7	0:0	6	uint32
op	24:13	0:0	6	*
arg	24:16	24:27	5	sp->curruns
water	24:16	0:0	6	sp
op	24:18	0:0	6	->
water	24:20	0:0	6	curruns
arg	24:29	24:40	5	sp->refruns
water	24:29	0:0	6	sp
op	24:31	0:0	6	->
water	24:33	0:0	6	refruns
water	24:41	0:0	4	;
water	25:2	0:0	4	buf
op	25:6	0:0	4	+=
water	25:9	0:0	4	sp
op	25:11	0:0	4	->
water	25:13	0:0	4	b
op	25:14	0:0	4	.
water	25:15	0:0	4	rowbytes
water	25:23	0:0	4	;
water	26:2	0:0	4	occ
op	26:6	0:0	4	-=
water	26:9	0:0	4	sp
op	26:11	0:0	4	->
water	26:13	0:0	4	b
op	26:14	0:0	4	.
water	26:15	0:0	4	rowbytes
water	26:23	0:0	4	;
water	27:16	0:0	4	line
op	27:20	0:0	4	++
water	27:22	0:0	4	;
continue	28:2	28:10	4	
label	29:1	29:6	4	EOFG4 :
call	30:16	30:38	4	NeedBits16
arg	30:28	30:30	5	13
water	30:28	0:0	6	13
arg	30:32	30:38	5	BADG4
water	30:32	0:0	6	BADG4
water	30:39	0:0	4	;
label	31:8	31:13	4	BADG4 :
if	33:16	34:48	4	(GetBits (13 ) != 0 x1001)
cond	33:20	33:36	5	GetBits (13 ) != 0 x1001
call	33:20	33:30	6	GetBits
arg	33:28	33:30	7	13
water	33:28	0:0	8	13
op	33:32	0:0	6	!=
water	33:35	0:0	6	0
water	33:36	0:0	6	x1001
stmts	34:20	34:48	5	
call	34:20	34:47	6	fputs
arg	34:27	34:38	7	"Bad RTC\n"
water	34:27	0:0	8	"Bad RTC\n"
arg	34:40	34:47	7	stderr
water	34:40	0:0	8	stderr
water	34:48	0:0	6	;
call	36:16	36:28	4	ClrBits
arg	36:25	36:28	5	13
water	36:25	0:0	6	13
water	36:29	0:0	4	;
call	37:2	37:37	4	(*sp->fill)
arg	37:14	37:17	5	buf
water	37:14	0:0	6	buf
arg	37:19	37:26	5	thisrun
water	37:19	0:0	6	thisrun
arg	37:28	37:30	5	pa
water	37:28	0:0	6	pa
arg	37:32	37:37	5	lastx
water	37:32	0:0	6	lastx
water	37:38	0:0	4	;
call	38:2	38:23	4	UNCACHE_STATE
arg	38:16	38:19	5	tif
water	38:16	0:0	6	tif
arg	38:21	38:23	5	sp
water	38:21	0:0	6	sp
water	38:24	0:0	4	;
return	39:2	39:13	4	(-1)
water	39:9	0:0	5	(
op	39:10	0:0	5	-
water	39:11	0:0	5	1
water	39:12	0:0	5	)
water	40:1	0:0	4	}
call	41:1	41:22	2	UNCACHE_STATE
arg	41:15	41:18	3	tif
water	41:15	0:0	4	tif
arg	41:20	41:22	3	sp
water	41:20	0:0	4	sp
water	41:23	0:0	2	;
return	42:1	42:11	2	(1)
water	42:8	0:0	3	(
water	42:9	0:0	3	1
water	42:10	0:0	3	)

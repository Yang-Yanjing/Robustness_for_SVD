decl	1:0	1:27	0	void	Usage
water	1:25	0:0	0	(
water	1:26	0:0	0	)
func	2:0	207:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:30	2	char * *	argv
stmnts	0:0	206:12	1	
decl	4:4	5:61	2	int	bits_per_pixel
op	4:35	0:0	2	=
water	4:37	0:0	2	8
water	4:38	0:0	2	,
decl	4:4	5:61	2	int	cmsize
water	4:46	0:0	2	,
decl	4:4	5:61	2	int	i
water	4:49	0:0	2	,
decl	4:4	5:61	2	int	j
water	4:52	0:0	2	,
decl	4:4	5:61	2	int	k
water	4:55	0:0	2	,
decl	4:4	5:61	2	int	cmap_index
water	5:30	0:0	2	,
decl	4:4	5:61	2	int	chunk_size
op	5:43	0:0	2	=
water	5:45	0:0	2	32
water	5:47	0:0	2	,
decl	4:4	5:61	2	int	nchunks
op	5:57	0:0	2	=
water	5:59	0:0	2	16
decl	6:4	6:29	2	unsigned char	*scan_line
decl	7:4	7:39	2	uint16	*red
water	7:24	0:0	2	,
decl	7:4	7:39	2	uint16	*green
water	7:32	0:0	2	,
decl	7:4	7:39	2	uint16	*blue
decl	8:4	8:23	2	TIFF	*tif
water	9:4	0:0	2	programName
op	9:16	0:0	2	=
water	9:18	0:0	2	argv
op	9:22	0:0	2	[
water	9:23	0:0	2	0
op	9:24	0:0	2	]
water	9:25	0:0	2	;
if	10:4	11:15	2	(argc != 4)
cond	10:8	10:16	3	argc != 4
water	10:8	0:0	4	argc
op	10:13	0:0	4	!=
water	10:16	0:0	4	4
stmts	11:8	11:15	3	
call	11:8	11:14	4	Usage
water	11:15	0:0	4	;
if	12:4	13:39	2	(!strcmp (argv [ 1 ] ,"-depth" ))
cond	12:8	12:33	3	!strcmp (argv [ 1 ] ,"-depth" )
op	12:8	0:0	4	!
call	12:9	12:33	4	strcmp
arg	12:16	12:23	5	argv[1]
water	12:16	0:0	6	argv
op	12:20	0:0	6	[
water	12:21	0:0	6	1
op	12:22	0:0	6	]
arg	12:25	12:33	5	"-depth"
water	12:25	0:0	6	"-depth"
stmts	13:9	13:39	3	
water	13:9	0:0	4	bits_per_pixel
op	13:24	0:0	4	=
call	13:26	13:38	4	atoi
arg	13:31	13:38	5	argv[2]
water	13:31	0:0	6	argv
op	13:35	0:0	6	[
water	13:36	0:0	6	2
op	13:37	0:0	6	]
water	13:39	0:0	4	;
else	14:4	15:16	2
stmts	15:9	15:16	3	
call	15:9	15:15	4	Usage
water	15:16	0:0	4	;
switch	16:4	35:4	2	(bits_per_pixel)
cond	16:12	16:12	3	bits_per_pixel
water	16:12	0:0	4	bits_per_pixel
stmts	16:28	35:4	3	
water	16:28	0:0	4	{
label	17:8	17:14	4	case 8 :
water	18:12	0:0	4	nchunks
op	18:20	0:0	4	=
water	18:22	0:0	4	16
water	18:24	0:0	4	;
water	19:12	0:0	4	chunk_size
op	19:23	0:0	4	=
water	19:25	0:0	4	32
water	19:27	0:0	4	;
break	20:12	20:17	4	
label	21:8	21:14	4	case 4 :
water	22:12	0:0	4	nchunks
op	22:20	0:0	4	=
water	22:22	0:0	4	4
water	22:23	0:0	4	;
water	23:12	0:0	4	chunk_size
op	23:23	0:0	4	=
water	23:25	0:0	4	128
water	23:28	0:0	4	;
break	24:12	24:17	4	
label	25:8	25:14	4	case 2 :
water	26:12	0:0	4	nchunks
op	26:20	0:0	4	=
water	26:22	0:0	4	2
water	26:23	0:0	4	;
water	27:12	0:0	4	chunk_size
op	27:23	0:0	4	=
water	27:25	0:0	4	256
water	27:28	0:0	4	;
break	28:12	28:17	4	
label	29:1	29:7	4	case 1 :
water	30:5	0:0	4	nchunks
op	30:13	0:0	4	=
water	30:15	0:0	4	2
water	30:16	0:0	4	;
water	31:5	0:0	4	chunk_size
op	31:16	0:0	4	=
water	31:18	0:0	4	256
water	31:21	0:0	4	;
break	32:5	32:10	4	
label	33:8	33:15	4	default :
call	34:12	34:18	4	Usage
water	34:19	0:0	4	;
water	35:4	0:0	4	}
if	36:4	38:4	2	(bits_per_pixel != 1)
cond	36:8	36:26	3	bits_per_pixel != 1
water	36:8	0:0	4	bits_per_pixel
op	36:23	0:0	4	!=
water	36:26	0:0	4	1
stmts	36:29	38:4	3	
water	36:29	0:0	4	{
water	37:1	0:0	4	cmsize
op	37:8	0:0	4	=
water	37:10	0:0	4	nchunks
op	37:18	0:0	4	*
water	37:20	0:0	4	nchunks
water	37:27	0:0	4	;
water	38:4	0:0	4	}
else	38:6	40:4	2
stmts	38:11	40:4	3	
water	38:11	0:0	4	{
water	39:1	0:0	4	cmsize
op	39:8	0:0	4	=
water	39:10	0:0	4	2
water	39:11	0:0	4	;
water	40:4	0:0	4	}
water	41:4	0:0	2	red
op	41:8	0:0	2	=
water	41:10	0:0	2	(
water	41:11	0:0	2	uint16
op	41:18	0:0	2	*
water	41:19	0:0	2	)
call	41:21	41:51	2	malloc
arg	41:28	41:51	3	cmsize*sizeof(uint16)
water	41:28	0:0	4	cmsize
op	41:35	0:0	4	*
op	41:37	0:0	4	sizeof
water	41:43	0:0	4	(
water	41:44	0:0	4	uint16
water	41:50	0:0	4	)
water	41:52	0:0	2	;
water	42:4	0:0	2	green
op	42:10	0:0	2	=
water	42:12	0:0	2	(
water	42:13	0:0	2	uint16
op	42:20	0:0	2	*
water	42:21	0:0	2	)
call	42:23	42:53	2	malloc
arg	42:30	42:53	3	cmsize*sizeof(uint16)
water	42:30	0:0	4	cmsize
op	42:37	0:0	4	*
op	42:39	0:0	4	sizeof
water	42:45	0:0	4	(
water	42:46	0:0	4	uint16
water	42:52	0:0	4	)
water	42:54	0:0	2	;
water	43:4	0:0	2	blue
op	43:9	0:0	2	=
water	43:11	0:0	2	(
water	43:12	0:0	2	uint16
op	43:19	0:0	2	*
water	43:20	0:0	2	)
call	43:22	43:52	2	malloc
arg	43:29	43:52	3	cmsize*sizeof(uint16)
water	43:29	0:0	4	cmsize
op	43:36	0:0	4	*
op	43:38	0:0	4	sizeof
water	43:44	0:0	4	(
water	43:45	0:0	4	uint16
water	43:51	0:0	4	)
water	43:53	0:0	2	;
switch	44:4	161:4	2	(bits_per_pixel)
cond	44:12	44:12	3	bits_per_pixel
water	44:12	0:0	4	bits_per_pixel
stmts	44:28	161:4	3	
water	44:28	0:0	4	{
label	45:4	45:10	4	case 8 :
for	46:8	87:8	4	(i = 0 ;i < cmsize;i ++)
forinit	46:13	46:18	5	i = 0 ;
water	46:13	0:0	6	i
op	46:15	0:0	6	=
water	46:17	0:0	6	0
water	46:18	0:0	6	;
cond	46:20	46:24	5	i < cmsize
water	46:20	0:0	6	i
op	46:22	0:0	6	<
water	46:24	0:0	6	cmsize
forexpr	46:32	46:33	5	i ++
water	46:32	0:0	6	i
op	46:33	0:0	6	++
stmts	46:37	87:8	5	
water	46:37	0:0	6	{
if	47:12	48:26	6	(i < 32)
cond	47:16	47:20	7	i < 32
water	47:16	0:0	8	i
op	47:18	0:0	8	<
water	47:20	0:0	8	32
stmts	48:16	48:26	7	
water	48:16	0:0	8	red
op	48:19	0:0	8	[
water	48:20	0:0	8	i
op	48:21	0:0	8	]
op	48:23	0:0	8	=
water	48:25	0:0	8	0
water	48:26	0:0	8	;
else	49:12	50:34	6
stmts	49:17	50:34	7	
if	49:17	50:34	8	(i < 64)
cond	49:21	49:25	9	i < 64
water	49:21	0:0	10	i
op	49:23	0:0	10	<
water	49:25	0:0	10	64
stmts	50:16	50:34	9	
water	50:16	0:0	10	red
op	50:19	0:0	10	[
water	50:20	0:0	10	i
op	50:21	0:0	10	]
op	50:23	0:0	10	=
call	50:25	50:33	10	SCALE
arg	50:31	50:33	11	36
water	50:31	0:0	12	36
water	50:34	0:0	10	;
else	51:12	52:34	6
stmts	51:17	52:34	7	
if	51:17	52:34	8	(i < 96)
cond	51:21	51:25	9	i < 96
water	51:21	0:0	10	i
op	51:23	0:0	10	<
water	51:25	0:0	10	96
stmts	52:16	52:34	9	
water	52:16	0:0	10	red
op	52:19	0:0	10	[
water	52:20	0:0	10	i
op	52:21	0:0	10	]
op	52:23	0:0	10	=
call	52:25	52:33	10	SCALE
arg	52:31	52:33	11	73
water	52:31	0:0	12	73
water	52:34	0:0	10	;
else	53:12	54:35	6
stmts	53:17	54:35	7	
if	53:17	54:35	8	(i < 128)
cond	53:21	53:25	9	i < 128
water	53:21	0:0	10	i
op	53:23	0:0	10	<
water	53:25	0:0	10	128
stmts	54:16	54:35	9	
water	54:16	0:0	10	red
op	54:19	0:0	10	[
water	54:20	0:0	10	i
op	54:21	0:0	10	]
op	54:23	0:0	10	=
call	54:25	54:34	10	SCALE
arg	54:31	54:34	11	109
water	54:31	0:0	12	109
water	54:35	0:0	10	;
else	55:12	56:35	6
stmts	55:17	56:35	7	
if	55:17	56:35	8	(i < 160)
cond	55:21	55:25	9	i < 160
water	55:21	0:0	10	i
op	55:23	0:0	10	<
water	55:25	0:0	10	160
stmts	56:16	56:35	9	
water	56:16	0:0	10	red
op	56:19	0:0	10	[
water	56:20	0:0	10	i
op	56:21	0:0	10	]
op	56:23	0:0	10	=
call	56:25	56:34	10	SCALE
arg	56:31	56:34	11	146
water	56:31	0:0	12	146
water	56:35	0:0	10	;
else	57:12	58:35	6
stmts	57:17	58:35	7	
if	57:17	58:35	8	(i < 192)
cond	57:21	57:25	9	i < 192
water	57:21	0:0	10	i
op	57:23	0:0	10	<
water	57:25	0:0	10	192
stmts	58:16	58:35	9	
water	58:16	0:0	10	red
op	58:19	0:0	10	[
water	58:20	0:0	10	i
op	58:21	0:0	10	]
op	58:23	0:0	10	=
call	58:25	58:34	10	SCALE
arg	58:31	58:34	11	182
water	58:31	0:0	12	182
water	58:35	0:0	10	;
else	59:12	60:35	6
stmts	59:17	60:35	7	
if	59:17	60:35	8	(i < 224)
cond	59:21	59:25	9	i < 224
water	59:21	0:0	10	i
op	59:23	0:0	10	<
water	59:25	0:0	10	224
stmts	60:16	60:35	9	
water	60:16	0:0	10	red
op	60:19	0:0	10	[
water	60:20	0:0	10	i
op	60:21	0:0	10	]
op	60:23	0:0	10	=
call	60:25	60:34	10	SCALE
arg	60:31	60:34	11	219
water	60:31	0:0	12	219
water	60:35	0:0	10	;
else	61:12	62:35	6
stmts	61:17	62:35	7	
if	61:17	62:35	8	(i < 256)
cond	61:21	61:25	9	i < 256
water	61:21	0:0	10	i
op	61:23	0:0	10	<
water	61:25	0:0	10	256
stmts	62:16	62:35	9	
water	62:16	0:0	10	red
op	62:19	0:0	10	[
water	62:20	0:0	10	i
op	62:21	0:0	10	]
op	62:23	0:0	10	=
call	62:25	62:34	10	SCALE
arg	62:31	62:34	11	255
water	62:31	0:0	12	255
water	62:35	0:0	10	;
if	63:12	64:28	6	(( i % 32 ) < 4)
cond	63:16	63:27	7	( i % 32 ) < 4
water	63:16	0:0	8	(
water	63:17	0:0	8	i
op	63:19	0:0	8	%
water	63:21	0:0	8	32
water	63:23	0:0	8	)
op	63:25	0:0	8	<
water	63:27	0:0	8	4
stmts	64:16	64:28	7	
water	64:16	0:0	8	green
op	64:21	0:0	8	[
water	64:22	0:0	8	i
op	64:23	0:0	8	]
op	64:25	0:0	8	=
water	64:27	0:0	8	0
water	64:28	0:0	8	;
else	65:12	66:36	6
stmts	65:17	66:36	7	
if	65:17	66:36	8	(i < 8)
cond	65:21	65:25	9	i < 8
water	65:21	0:0	10	i
op	65:23	0:0	10	<
water	65:25	0:0	10	8
stmts	66:16	66:36	9	
water	66:16	0:0	10	green
op	66:21	0:0	10	[
water	66:22	0:0	10	i
op	66:23	0:0	10	]
op	66:25	0:0	10	=
call	66:27	66:35	10	SCALE
arg	66:33	66:35	11	36
water	66:33	0:0	12	36
water	66:36	0:0	10	;
else	67:12	68:36	6
stmts	67:17	68:36	7	
if	67:17	68:36	8	(( i % 32 ) < 12)
cond	67:21	67:32	9	( i % 32 ) < 12
water	67:21	0:0	10	(
water	67:22	0:0	10	i
op	67:24	0:0	10	%
water	67:26	0:0	10	32
water	67:28	0:0	10	)
op	67:30	0:0	10	<
water	67:32	0:0	10	12
stmts	68:16	68:36	9	
water	68:16	0:0	10	green
op	68:21	0:0	10	[
water	68:22	0:0	10	i
op	68:23	0:0	10	]
op	68:25	0:0	10	=
call	68:27	68:35	10	SCALE
arg	68:33	68:35	11	73
water	68:33	0:0	12	73
water	68:36	0:0	10	;
else	69:12	70:37	6
stmts	69:17	70:37	7	
if	69:17	70:37	8	(( i % 32 ) < 16)
cond	69:21	69:32	9	( i % 32 ) < 16
water	69:21	0:0	10	(
water	69:22	0:0	10	i
op	69:24	0:0	10	%
water	69:26	0:0	10	32
water	69:28	0:0	10	)
op	69:30	0:0	10	<
water	69:32	0:0	10	16
stmts	70:16	70:37	9	
water	70:16	0:0	10	green
op	70:21	0:0	10	[
water	70:22	0:0	10	i
op	70:23	0:0	10	]
op	70:25	0:0	10	=
call	70:27	70:36	10	SCALE
arg	70:33	70:36	11	109
water	70:33	0:0	12	109
water	70:37	0:0	10	;
else	71:12	72:37	6
stmts	71:17	72:37	7	
if	71:17	72:37	8	(( i % 32 ) < 20)
cond	71:21	71:32	9	( i % 32 ) < 20
water	71:21	0:0	10	(
water	71:22	0:0	10	i
op	71:24	0:0	10	%
water	71:26	0:0	10	32
water	71:28	0:0	10	)
op	71:30	0:0	10	<
water	71:32	0:0	10	20
stmts	72:16	72:37	9	
water	72:16	0:0	10	green
op	72:21	0:0	10	[
water	72:22	0:0	10	i
op	72:23	0:0	10	]
op	72:25	0:0	10	=
call	72:27	72:36	10	SCALE
arg	72:33	72:36	11	146
water	72:33	0:0	12	146
water	72:37	0:0	10	;
else	73:12	74:37	6
stmts	73:17	74:37	7	
if	73:17	74:37	8	(( i % 32 ) < 24)
cond	73:21	73:32	9	( i % 32 ) < 24
water	73:21	0:0	10	(
water	73:22	0:0	10	i
op	73:24	0:0	10	%
water	73:26	0:0	10	32
water	73:28	0:0	10	)
op	73:30	0:0	10	<
water	73:32	0:0	10	24
stmts	74:16	74:37	9	
water	74:16	0:0	10	green
op	74:21	0:0	10	[
water	74:22	0:0	10	i
op	74:23	0:0	10	]
op	74:25	0:0	10	=
call	74:27	74:36	10	SCALE
arg	74:33	74:36	11	182
water	74:33	0:0	12	182
water	74:37	0:0	10	;
else	75:12	76:37	6
stmts	75:17	76:37	7	
if	75:17	76:37	8	(( i % 32 ) < 28)
cond	75:21	75:32	9	( i % 32 ) < 28
water	75:21	0:0	10	(
water	75:22	0:0	10	i
op	75:24	0:0	10	%
water	75:26	0:0	10	32
water	75:28	0:0	10	)
op	75:30	0:0	10	<
water	75:32	0:0	10	28
stmts	76:16	76:37	9	
water	76:16	0:0	10	green
op	76:21	0:0	10	[
water	76:22	0:0	10	i
op	76:23	0:0	10	]
op	76:25	0:0	10	=
call	76:27	76:36	10	SCALE
arg	76:33	76:36	11	219
water	76:33	0:0	12	219
water	76:37	0:0	10	;
else	77:12	78:37	6
stmts	77:17	78:37	7	
if	77:17	78:37	8	(( i % 32 ) < 32)
cond	77:21	77:32	9	( i % 32 ) < 32
water	77:21	0:0	10	(
water	77:22	0:0	10	i
op	77:24	0:0	10	%
water	77:26	0:0	10	32
water	77:28	0:0	10	)
op	77:30	0:0	10	<
water	77:32	0:0	10	32
stmts	78:16	78:37	9	
water	78:16	0:0	10	green
op	78:21	0:0	10	[
water	78:22	0:0	10	i
op	78:23	0:0	10	]
op	78:25	0:0	10	=
call	78:27	78:36	10	SCALE
arg	78:33	78:36	11	255
water	78:33	0:0	12	255
water	78:37	0:0	10	;
if	79:12	80:34	6	(( i % 4 ) == 0)
cond	79:16	79:27	7	( i % 4 ) == 0
water	79:16	0:0	8	(
water	79:17	0:0	8	i
op	79:19	0:0	8	%
water	79:21	0:0	8	4
water	79:22	0:0	8	)
op	79:24	0:0	8	==
water	79:27	0:0	8	0
stmts	80:16	80:34	7	
water	80:16	0:0	8	blue
op	80:20	0:0	8	[
water	80:21	0:0	8	i
op	80:22	0:0	8	]
op	80:24	0:0	8	=
call	80:26	80:33	8	SCALE
arg	80:32	80:33	9	0
water	80:32	0:0	10	0
water	80:34	0:0	8	;
else	81:12	82:35	6
stmts	81:17	82:35	7	
if	81:17	82:35	8	(( i % 4 ) == 1)
cond	81:21	81:32	9	( i % 4 ) == 1
water	81:21	0:0	10	(
water	81:22	0:0	10	i
op	81:24	0:0	10	%
water	81:26	0:0	10	4
water	81:27	0:0	10	)
op	81:29	0:0	10	==
water	81:32	0:0	10	1
stmts	82:16	82:35	9	
water	82:16	0:0	10	blue
op	82:20	0:0	10	[
water	82:21	0:0	10	i
op	82:22	0:0	10	]
op	82:24	0:0	10	=
call	82:26	82:34	10	SCALE
arg	82:32	82:34	11	85
water	82:32	0:0	12	85
water	82:35	0:0	10	;
else	83:12	84:36	6
stmts	83:17	84:36	7	
if	83:17	84:36	8	(( i % 4 ) == 2)
cond	83:21	83:32	9	( i % 4 ) == 2
water	83:21	0:0	10	(
water	83:22	0:0	10	i
op	83:24	0:0	10	%
water	83:26	0:0	10	4
water	83:27	0:0	10	)
op	83:29	0:0	10	==
water	83:32	0:0	10	2
stmts	84:16	84:36	9	
water	84:16	0:0	10	blue
op	84:20	0:0	10	[
water	84:21	0:0	10	i
op	84:22	0:0	10	]
op	84:24	0:0	10	=
call	84:26	84:35	10	SCALE
arg	84:32	84:35	11	170
water	84:32	0:0	12	170
water	84:36	0:0	10	;
else	85:12	86:36	6
stmts	85:17	86:36	7	
if	85:17	86:36	8	(( i % 4 ) == 3)
cond	85:21	85:32	9	( i % 4 ) == 3
water	85:21	0:0	10	(
water	85:22	0:0	10	i
op	85:24	0:0	10	%
water	85:26	0:0	10	4
water	85:27	0:0	10	)
op	85:29	0:0	10	==
water	85:32	0:0	10	3
stmts	86:16	86:36	9	
water	86:16	0:0	10	blue
op	86:20	0:0	10	[
water	86:21	0:0	10	i
op	86:22	0:0	10	]
op	86:24	0:0	10	=
call	86:26	86:35	10	SCALE
arg	86:32	86:35	11	255
water	86:32	0:0	12	255
water	86:36	0:0	10	;
water	87:8	0:0	6	}
break	88:8	88:13	4	
label	89:4	89:10	4	case 4 :
water	90:8	0:0	4	red
op	90:11	0:0	4	[
water	90:12	0:0	4	0
op	90:13	0:0	4	]
op	90:15	0:0	4	=
call	90:17	90:26	4	SCALE
arg	90:23	90:26	5	255
water	90:23	0:0	6	255
water	90:27	0:0	4	;
water	91:8	0:0	4	green
op	91:13	0:0	4	[
water	91:14	0:0	4	0
op	91:15	0:0	4	]
op	91:17	0:0	4	=
water	91:19	0:0	4	0
water	91:20	0:0	4	;
water	92:8	0:0	4	blue
op	92:12	0:0	4	[
water	92:13	0:0	4	0
op	92:14	0:0	4	]
op	92:16	0:0	4	=
water	92:18	0:0	4	0
water	92:19	0:0	4	;
water	93:8	0:0	4	red
op	93:11	0:0	4	[
water	93:12	0:0	4	1
op	93:13	0:0	4	]
op	93:15	0:0	4	=
water	93:17	0:0	4	0
water	93:18	0:0	4	;
water	94:8	0:0	4	green
op	94:13	0:0	4	[
water	94:14	0:0	4	1
op	94:15	0:0	4	]
op	94:17	0:0	4	=
call	94:19	94:28	4	SCALE
arg	94:25	94:28	5	255
water	94:25	0:0	6	255
water	94:29	0:0	4	;
water	95:8	0:0	4	blue
op	95:12	0:0	4	[
water	95:13	0:0	4	1
op	95:14	0:0	4	]
op	95:16	0:0	4	=
water	95:18	0:0	4	0
water	95:19	0:0	4	;
water	96:8	0:0	4	red
op	96:11	0:0	4	[
water	96:12	0:0	4	2
op	96:13	0:0	4	]
op	96:15	0:0	4	=
water	96:17	0:0	4	0
water	96:18	0:0	4	;
water	97:8	0:0	4	green
op	97:13	0:0	4	[
water	97:14	0:0	4	2
op	97:15	0:0	4	]
op	97:17	0:0	4	=
water	97:19	0:0	4	0
water	97:20	0:0	4	;
water	98:8	0:0	4	blue
op	98:12	0:0	4	[
water	98:13	0:0	4	2
op	98:14	0:0	4	]
op	98:16	0:0	4	=
call	98:18	98:27	4	SCALE
arg	98:24	98:27	5	255
water	98:24	0:0	6	255
water	98:28	0:0	4	;
water	99:8	0:0	4	red
op	99:11	0:0	4	[
water	99:12	0:0	4	3
op	99:13	0:0	4	]
op	99:15	0:0	4	=
call	99:17	99:26	4	SCALE
arg	99:23	99:26	5	255
water	99:23	0:0	6	255
water	99:27	0:0	4	;
water	100:8	0:0	4	green
op	100:13	0:0	4	[
water	100:14	0:0	4	3
op	100:15	0:0	4	]
op	100:17	0:0	4	=
call	100:19	100:28	4	SCALE
arg	100:25	100:28	5	255
water	100:25	0:0	6	255
water	100:29	0:0	4	;
water	101:8	0:0	4	blue
op	101:12	0:0	4	[
water	101:13	0:0	4	3
op	101:14	0:0	4	]
op	101:16	0:0	4	=
call	101:18	101:27	4	SCALE
arg	101:24	101:27	5	255
water	101:24	0:0	6	255
water	101:28	0:0	4	;
water	102:8	0:0	4	red
op	102:11	0:0	4	[
water	102:12	0:0	4	4
op	102:13	0:0	4	]
op	102:15	0:0	4	=
water	102:17	0:0	4	0
water	102:18	0:0	4	;
water	103:8	0:0	4	green
op	103:13	0:0	4	[
water	103:14	0:0	4	4
op	103:15	0:0	4	]
op	103:17	0:0	4	=
call	103:19	103:28	4	SCALE
arg	103:25	103:28	5	255
water	103:25	0:0	6	255
water	103:29	0:0	4	;
water	104:8	0:0	4	blue
op	104:12	0:0	4	[
water	104:13	0:0	4	4
op	104:14	0:0	4	]
op	104:16	0:0	4	=
call	104:18	104:27	4	SCALE
arg	104:24	104:27	5	255
water	104:24	0:0	6	255
water	104:28	0:0	4	;
water	105:8	0:0	4	red
op	105:11	0:0	4	[
water	105:12	0:0	4	5
op	105:13	0:0	4	]
op	105:15	0:0	4	=
call	105:17	105:26	4	SCALE
arg	105:23	105:26	5	255
water	105:23	0:0	6	255
water	105:27	0:0	4	;
water	106:8	0:0	4	green
op	106:13	0:0	4	[
water	106:14	0:0	4	5
op	106:15	0:0	4	]
op	106:17	0:0	4	=
water	106:19	0:0	4	0
water	106:20	0:0	4	;
water	107:8	0:0	4	blue
op	107:12	0:0	4	[
water	107:13	0:0	4	5
op	107:14	0:0	4	]
op	107:16	0:0	4	=
call	107:18	107:27	4	SCALE
arg	107:24	107:27	5	255
water	107:24	0:0	6	255
water	107:28	0:0	4	;
water	108:8	0:0	4	red
op	108:11	0:0	4	[
water	108:12	0:0	4	6
op	108:13	0:0	4	]
op	108:15	0:0	4	=
call	108:17	108:26	4	SCALE
arg	108:23	108:26	5	255
water	108:23	0:0	6	255
water	108:27	0:0	4	;
water	109:8	0:0	4	green
op	109:13	0:0	4	[
water	109:14	0:0	4	6
op	109:15	0:0	4	]
op	109:17	0:0	4	=
call	109:19	109:28	4	SCALE
arg	109:25	109:28	5	255
water	109:25	0:0	6	255
water	109:29	0:0	4	;
water	110:8	0:0	4	blue
op	110:12	0:0	4	[
water	110:13	0:0	4	6
op	110:14	0:0	4	]
op	110:16	0:0	4	=
water	110:18	0:0	4	0
water	110:19	0:0	4	;
water	111:8	0:0	4	red
op	111:11	0:0	4	[
water	111:12	0:0	4	7
op	111:13	0:0	4	]
op	111:15	0:0	4	=
water	111:17	0:0	4	0
water	111:18	0:0	4	;
water	112:8	0:0	4	green
op	112:13	0:0	4	[
water	112:14	0:0	4	7
op	112:15	0:0	4	]
op	112:17	0:0	4	=
water	112:19	0:0	4	0
water	112:20	0:0	4	;
water	113:8	0:0	4	blue
op	113:12	0:0	4	[
water	113:13	0:0	4	7
op	113:14	0:0	4	]
op	113:16	0:0	4	=
water	113:18	0:0	4	0
water	113:19	0:0	4	;
water	114:8	0:0	4	red
op	114:11	0:0	4	[
water	114:12	0:0	4	8
op	114:13	0:0	4	]
op	114:15	0:0	4	=
call	114:17	114:26	4	SCALE
arg	114:23	114:26	5	176
water	114:23	0:0	6	176
water	114:27	0:0	4	;
water	115:8	0:0	4	green
op	115:13	0:0	4	[
water	115:14	0:0	4	8
op	115:15	0:0	4	]
op	115:17	0:0	4	=
call	115:19	115:28	4	SCALE
arg	115:25	115:28	5	224
water	115:25	0:0	6	224
water	115:29	0:0	4	;
water	116:8	0:0	4	blue
op	116:12	0:0	4	[
water	116:13	0:0	4	8
op	116:14	0:0	4	]
op	116:16	0:0	4	=
call	116:18	116:27	4	SCALE
arg	116:24	116:27	5	230
water	116:24	0:0	6	230
water	116:28	0:0	4	;
water	117:8	0:0	4	red
op	117:11	0:0	4	[
water	117:12	0:0	4	9
op	117:13	0:0	4	]
op	117:15	0:0	4	=
call	117:17	117:26	4	SCALE
arg	117:23	117:26	5	100
water	117:23	0:0	6	100
water	117:27	0:0	4	;
water	118:8	0:0	4	green
op	118:13	0:0	4	[
water	118:14	0:0	4	9
op	118:15	0:0	4	]
op	118:17	0:0	4	=
call	118:19	118:28	4	SCALE
arg	118:25	118:28	5	149
water	118:25	0:0	6	149
water	118:29	0:0	4	;
water	119:8	0:0	4	blue
op	119:12	0:0	4	[
water	119:13	0:0	4	9
op	119:14	0:0	4	]
op	119:16	0:0	4	=
call	119:18	119:27	4	SCALE
arg	119:24	119:27	5	237
water	119:24	0:0	6	237
water	119:28	0:0	4	;
water	120:8	0:0	4	red
op	120:11	0:0	4	[
water	120:12	0:0	4	10
op	120:14	0:0	4	]
op	120:16	0:0	4	=
call	120:18	120:26	4	SCALE
arg	120:24	120:26	5	46
water	120:24	0:0	6	46
water	120:27	0:0	4	;
water	121:8	0:0	4	green
op	121:13	0:0	4	[
water	121:14	0:0	4	10
op	121:16	0:0	4	]
op	121:18	0:0	4	=
call	121:20	121:29	4	SCALE
arg	121:26	121:29	5	139
water	121:26	0:0	6	139
water	121:30	0:0	4	;
water	122:8	0:0	4	blue
op	122:12	0:0	4	[
water	122:13	0:0	4	10
op	122:15	0:0	4	]
op	122:17	0:0	4	=
call	122:19	122:27	4	SCALE
arg	122:25	122:27	5	87
water	122:25	0:0	6	87
water	122:28	0:0	4	;
water	123:8	0:0	4	red
op	123:11	0:0	4	[
water	123:12	0:0	4	11
op	123:14	0:0	4	]
op	123:16	0:0	4	=
call	123:18	123:27	4	SCALE
arg	123:24	123:27	5	160
water	123:24	0:0	6	160
water	123:28	0:0	4	;
water	124:8	0:0	4	green
op	124:13	0:0	4	[
water	124:14	0:0	4	11
op	124:16	0:0	4	]
op	124:18	0:0	4	=
call	124:20	124:28	4	SCALE
arg	124:26	124:28	5	82
water	124:26	0:0	6	82
water	124:29	0:0	4	;
water	125:8	0:0	4	blue
op	125:12	0:0	4	[
water	125:13	0:0	4	11
op	125:15	0:0	4	]
op	125:17	0:0	4	=
call	125:19	125:27	4	SCALE
arg	125:25	125:27	5	45
water	125:25	0:0	6	45
water	125:28	0:0	4	;
water	126:8	0:0	4	red
op	126:11	0:0	4	[
water	126:12	0:0	4	12
op	126:14	0:0	4	]
op	126:16	0:0	4	=
call	126:18	126:27	4	SCALE
arg	126:24	126:27	5	238
water	126:24	0:0	6	238
water	126:28	0:0	4	;
water	127:8	0:0	4	green
op	127:13	0:0	4	[
water	127:14	0:0	4	12
op	127:16	0:0	4	]
op	127:18	0:0	4	=
call	127:20	127:29	4	SCALE
arg	127:26	127:29	5	130
water	127:26	0:0	6	130
water	127:30	0:0	4	;
water	128:8	0:0	4	blue
op	128:12	0:0	4	[
water	128:13	0:0	4	12
op	128:15	0:0	4	]
op	128:17	0:0	4	=
call	128:19	128:28	4	SCALE
arg	128:25	128:28	5	238
water	128:25	0:0	6	238
water	128:29	0:0	4	;
water	129:8	0:0	4	red
op	129:11	0:0	4	[
water	129:12	0:0	4	13
op	129:14	0:0	4	]
op	129:16	0:0	4	=
call	129:18	129:27	4	SCALE
arg	129:24	129:27	5	176
water	129:24	0:0	6	176
water	129:28	0:0	4	;
water	130:8	0:0	4	green
op	130:13	0:0	4	[
water	130:14	0:0	4	13
op	130:16	0:0	4	]
op	130:18	0:0	4	=
call	130:20	130:28	4	SCALE
arg	130:26	130:28	5	48
water	130:26	0:0	6	48
water	130:29	0:0	4	;
water	131:8	0:0	4	blue
op	131:12	0:0	4	[
water	131:13	0:0	4	13
op	131:15	0:0	4	]
op	131:17	0:0	4	=
call	131:19	131:27	4	SCALE
arg	131:25	131:27	5	96
water	131:25	0:0	6	96
water	131:28	0:0	4	;
water	132:8	0:0	4	red
op	132:11	0:0	4	[
water	132:12	0:0	4	14
op	132:14	0:0	4	]
op	132:16	0:0	4	=
call	132:18	132:26	4	SCALE
arg	132:24	132:26	5	50
water	132:24	0:0	6	50
water	132:27	0:0	4	;
water	133:8	0:0	4	green
op	133:13	0:0	4	[
water	133:14	0:0	4	14
op	133:16	0:0	4	]
op	133:18	0:0	4	=
call	133:20	133:29	4	SCALE
arg	133:26	133:29	5	205
water	133:26	0:0	6	205
water	133:30	0:0	4	;
water	134:8	0:0	4	blue
op	134:12	0:0	4	[
water	134:13	0:0	4	14
op	134:15	0:0	4	]
op	134:17	0:0	4	=
call	134:19	134:27	4	SCALE
arg	134:25	134:27	5	50
water	134:25	0:0	6	50
water	134:28	0:0	4	;
water	135:8	0:0	4	red
op	135:11	0:0	4	[
water	135:12	0:0	4	15
op	135:14	0:0	4	]
op	135:16	0:0	4	=
call	135:18	135:27	4	SCALE
arg	135:24	135:27	5	240
water	135:24	0:0	6	240
water	135:28	0:0	4	;
water	136:8	0:0	4	green
op	136:13	0:0	4	[
water	136:14	0:0	4	15
op	136:16	0:0	4	]
op	136:18	0:0	4	=
call	136:20	136:29	4	SCALE
arg	136:26	136:29	5	152
water	136:26	0:0	6	152
water	136:30	0:0	4	;
water	137:8	0:0	4	blue
op	137:12	0:0	4	[
water	137:13	0:0	4	15
op	137:15	0:0	4	]
op	137:17	0:0	4	=
call	137:19	137:27	4	SCALE
arg	137:25	137:27	5	35
water	137:25	0:0	6	35
water	137:28	0:0	4	;
break	138:8	138:13	4	
label	139:4	139:10	4	case 2 :
water	140:8	0:0	4	red
op	140:11	0:0	4	[
water	140:12	0:0	4	0
op	140:13	0:0	4	]
op	140:15	0:0	4	=
call	140:17	140:26	4	SCALE
arg	140:23	140:26	5	255
water	140:23	0:0	6	255
water	140:27	0:0	4	;
water	141:8	0:0	4	green
op	141:13	0:0	4	[
water	141:14	0:0	4	0
op	141:15	0:0	4	]
op	141:17	0:0	4	=
water	141:19	0:0	4	0
water	141:20	0:0	4	;
water	142:8	0:0	4	blue
op	142:12	0:0	4	[
water	142:13	0:0	4	0
op	142:14	0:0	4	]
op	142:16	0:0	4	=
water	142:18	0:0	4	0
water	142:19	0:0	4	;
water	143:8	0:0	4	red
op	143:11	0:0	4	[
water	143:12	0:0	4	1
op	143:13	0:0	4	]
op	143:15	0:0	4	=
water	143:17	0:0	4	0
water	143:18	0:0	4	;
water	144:8	0:0	4	green
op	144:13	0:0	4	[
water	144:14	0:0	4	1
op	144:15	0:0	4	]
op	144:17	0:0	4	=
call	144:19	144:28	4	SCALE
arg	144:25	144:28	5	255
water	144:25	0:0	6	255
water	144:29	0:0	4	;
water	145:8	0:0	4	blue
op	145:12	0:0	4	[
water	145:13	0:0	4	1
op	145:14	0:0	4	]
op	145:16	0:0	4	=
water	145:18	0:0	4	0
water	145:19	0:0	4	;
water	146:8	0:0	4	red
op	146:11	0:0	4	[
water	146:12	0:0	4	2
op	146:13	0:0	4	]
op	146:15	0:0	4	=
water	146:17	0:0	4	0
water	146:18	0:0	4	;
water	147:8	0:0	4	green
op	147:13	0:0	4	[
water	147:14	0:0	4	2
op	147:15	0:0	4	]
op	147:17	0:0	4	=
water	147:19	0:0	4	0
water	147:20	0:0	4	;
water	148:8	0:0	4	blue
op	148:12	0:0	4	[
water	148:13	0:0	4	2
op	148:14	0:0	4	]
op	148:16	0:0	4	=
call	148:18	148:27	4	SCALE
arg	148:24	148:27	5	255
water	148:24	0:0	6	255
water	148:28	0:0	4	;
water	149:8	0:0	4	red
op	149:11	0:0	4	[
water	149:12	0:0	4	3
op	149:13	0:0	4	]
op	149:15	0:0	4	=
call	149:17	149:26	4	SCALE
arg	149:23	149:26	5	255
water	149:23	0:0	6	255
water	149:27	0:0	4	;
water	150:8	0:0	4	green
op	150:13	0:0	4	[
water	150:14	0:0	4	3
op	150:15	0:0	4	]
op	150:17	0:0	4	=
call	150:19	150:28	4	SCALE
arg	150:25	150:28	5	255
water	150:25	0:0	6	255
water	150:29	0:0	4	;
water	151:8	0:0	4	blue
op	151:12	0:0	4	[
water	151:13	0:0	4	3
op	151:14	0:0	4	]
op	151:16	0:0	4	=
call	151:18	151:27	4	SCALE
arg	151:24	151:27	5	255
water	151:24	0:0	6	255
water	151:28	0:0	4	;
break	152:8	152:13	4	
label	153:4	153:10	4	case 1 :
water	154:8	0:0	4	red
op	154:11	0:0	4	[
water	154:12	0:0	4	0
op	154:13	0:0	4	]
op	154:15	0:0	4	=
water	154:17	0:0	4	0
water	154:18	0:0	4	;
water	155:8	0:0	4	green
op	155:13	0:0	4	[
water	155:14	0:0	4	0
op	155:15	0:0	4	]
op	155:17	0:0	4	=
water	155:19	0:0	4	0
water	155:20	0:0	4	;
water	156:8	0:0	4	blue
op	156:12	0:0	4	[
water	156:13	0:0	4	0
op	156:14	0:0	4	]
op	156:16	0:0	4	=
water	156:18	0:0	4	0
water	156:19	0:0	4	;
water	157:8	0:0	4	red
op	157:11	0:0	4	[
water	157:12	0:0	4	1
op	157:13	0:0	4	]
op	157:15	0:0	4	=
call	157:17	157:26	4	SCALE
arg	157:23	157:26	5	255
water	157:23	0:0	6	255
water	157:27	0:0	4	;
water	158:8	0:0	4	green
op	158:13	0:0	4	[
water	158:14	0:0	4	1
op	158:15	0:0	4	]
op	158:17	0:0	4	=
call	158:19	158:28	4	SCALE
arg	158:25	158:28	5	255
water	158:25	0:0	6	255
water	158:29	0:0	4	;
water	159:8	0:0	4	blue
op	159:12	0:0	4	[
water	159:13	0:0	4	1
op	159:14	0:0	4	]
op	159:16	0:0	4	=
call	159:18	159:27	4	SCALE
arg	159:24	159:27	5	255
water	159:24	0:0	6	255
water	159:28	0:0	4	;
break	160:8	160:13	4	
water	161:4	0:0	4	}
if	162:4	166:4	2	(( tif =TIFFOpen (argv [ 3 ] ,"w" ) ) == NULL)
cond	162:8	162:42	3	( tif =TIFFOpen (argv [ 3 ] ,"w" ) ) == NULL
water	162:8	0:0	4	(
water	162:9	0:0	4	tif
op	162:13	0:0	4	=
call	162:15	162:36	4	TIFFOpen
arg	162:24	162:31	5	argv[3]
water	162:24	0:0	6	argv
op	162:28	0:0	6	[
water	162:29	0:0	6	3
op	162:30	0:0	6	]
arg	162:33	162:36	5	"w"
water	162:33	0:0	6	"w"
water	162:37	0:0	4	)
op	162:39	0:0	4	==
water	162:42	0:0	4	NULL
stmts	162:48	166:4	3	
water	162:48	0:0	4	{
call	163:8	163:65	4	fprintf
arg	163:16	163:22	5	stderr
water	163:16	0:0	6	stderr
arg	163:24	163:56	5	"can't open %s as a TIFF file\n"
water	163:24	0:0	6	"can't open %s as a TIFF file\n"
arg	163:58	163:65	5	argv[3]
water	163:58	0:0	6	argv
op	163:62	0:0	6	[
water	163:63	0:0	6	3
op	163:64	0:0	6	]
water	163:66	0:0	4	;
call	164:2	164:10	4	free
arg	164:7	164:10	5	red
water	164:7	0:0	6	red
water	164:11	0:0	4	;
call	164:12	164:22	4	free
arg	164:17	164:22	5	green
water	164:17	0:0	6	green
water	164:23	0:0	4	;
call	164:24	164:33	4	free
arg	164:29	164:33	5	blue
water	164:29	0:0	6	blue
water	164:34	0:0	4	;
return	165:8	165:16	4	0
water	165:15	0:0	5	0
water	166:4	0:0	4	}
call	167:4	167:47	2	TIFFSetField
arg	167:17	167:20	3	tif
water	167:17	0:0	4	tif
arg	167:22	167:40	3	TIFFTAG_IMAGEWIDTH
water	167:22	0:0	4	TIFFTAG_IMAGEWIDTH
arg	167:42	167:47	3	WIDTH
water	167:42	0:0	4	WIDTH
water	167:48	0:0	2	;
call	168:4	168:49	2	TIFFSetField
arg	168:17	168:20	3	tif
water	168:17	0:0	4	tif
arg	168:22	168:41	3	TIFFTAG_IMAGELENGTH
water	168:22	0:0	4	TIFFTAG_IMAGELENGTH
arg	168:43	168:49	3	HEIGHT
water	168:43	0:0	4	HEIGHT
water	168:50	0:0	2	;
call	169:4	169:59	2	TIFFSetField
arg	169:17	169:20	3	tif
water	169:17	0:0	4	tif
arg	169:22	169:43	3	TIFFTAG_BITSPERSAMPLE
water	169:22	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	169:45	169:59	3	bits_per_pixel
water	169:45	0:0	4	bits_per_pixel
water	169:60	0:0	2	;
call	170:4	170:59	2	TIFFSetField
arg	170:17	170:20	3	tif
water	170:17	0:0	4	tif
arg	170:22	170:41	3	TIFFTAG_COMPRESSION
water	170:22	0:0	4	TIFFTAG_COMPRESSION
arg	170:43	170:59	3	COMPRESSION_NONE
water	170:43	0:0	4	COMPRESSION_NONE
water	170:60	0:0	2	;
call	171:4	171:62	2	TIFFSetField
arg	171:17	171:20	3	tif
water	171:17	0:0	4	tif
arg	171:22	171:41	3	TIFFTAG_PHOTOMETRIC
water	171:22	0:0	4	TIFFTAG_PHOTOMETRIC
arg	171:43	171:62	3	PHOTOMETRIC_PALETTE
water	171:43	0:0	4	PHOTOMETRIC_PALETTE
water	171:63	0:0	2	;
call	172:4	172:48	2	TIFFSetField
arg	172:17	172:20	3	tif
water	172:17	0:0	4	tif
arg	172:22	172:45	3	TIFFTAG_SAMPLESPERPIXEL
water	172:22	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	172:47	172:48	3	1
water	172:47	0:0	4	1
water	172:49	0:0	2	;
call	173:4	173:45	2	TIFFSetField
arg	173:17	173:20	3	tif
water	173:17	0:0	4	tif
arg	173:22	173:42	3	TIFFTAG_ROWSPERSTRIP
water	173:22	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	173:44	173:45	3	1
water	173:44	0:0	4	1
water	173:46	0:0	2	;
call	174:4	174:63	2	TIFFSetField
arg	174:17	174:20	3	tif
water	174:17	0:0	4	tif
arg	174:22	174:42	3	TIFFTAG_PLANARCONFIG
water	174:22	0:0	4	TIFFTAG_PLANARCONFIG
arg	174:44	174:63	3	PLANARCONFIG_CONTIG
water	174:44	0:0	4	PLANARCONFIG_CONTIG
water	174:64	0:0	2	;
call	175:4	175:58	2	TIFFSetField
arg	175:17	175:20	3	tif
water	175:17	0:0	4	tif
arg	175:22	175:44	3	TIFFTAG_RESOLUTIONUNIT
water	175:22	0:0	4	TIFFTAG_RESOLUTIONUNIT
arg	175:46	175:58	3	RESUNIT_NONE
water	175:46	0:0	4	RESUNIT_NONE
water	175:59	0:0	2	;
call	176:4	176:56	2	TIFFSetField
arg	176:17	176:20	3	tif
water	176:17	0:0	4	tif
arg	176:22	176:38	3	TIFFTAG_COLORMAP
water	176:22	0:0	4	TIFFTAG_COLORMAP
arg	176:40	176:43	3	red
water	176:40	0:0	4	red
arg	176:45	176:50	3	green
water	176:45	0:0	4	green
arg	176:52	176:56	3	blue
water	176:52	0:0	4	blue
water	176:57	0:0	2	;
water	177:4	0:0	2	scan_line
op	177:14	0:0	2	=
water	177:16	0:0	2	(
water	177:17	0:0	2	unsigned
water	177:26	0:0	2	char
op	177:31	0:0	2	*
water	177:32	0:0	2	)
call	177:34	177:69	2	malloc
arg	177:41	177:69	3	WIDTH/(8/bits_per_pixel)
water	177:41	0:0	4	WIDTH
op	177:47	0:0	4	/
water	177:49	0:0	4	(
water	177:50	0:0	4	8
op	177:52	0:0	4	/
water	177:54	0:0	4	bits_per_pixel
water	177:68	0:0	4	)
water	177:70	0:0	2	;
for	178:4	203:4	2	(i = 0 ;i < HEIGHT;i ++)
forinit	178:9	178:14	3	i = 0 ;
water	178:9	0:0	4	i
op	178:11	0:0	4	=
water	178:13	0:0	4	0
water	178:14	0:0	4	;
cond	178:16	178:20	3	i < HEIGHT
water	178:16	0:0	4	i
op	178:18	0:0	4	<
water	178:20	0:0	4	HEIGHT
forexpr	178:28	178:29	3	i ++
water	178:28	0:0	4	i
op	178:29	0:0	4	++
stmts	178:33	203:4	3	
water	178:33	0:0	4	{
for	179:8	201:8	4	(j = 0 , k = 0 ;j < WIDTH;)
forinit	179:13	179:25	5	j = 0 , k = 0 ;
water	179:13	0:0	6	j
op	179:15	0:0	6	=
water	179:17	0:0	6	0
water	179:18	0:0	6	,
water	179:20	0:0	6	k
op	179:22	0:0	6	=
water	179:24	0:0	6	0
water	179:25	0:0	6	;
cond	179:27	179:31	5	j < WIDTH
water	179:27	0:0	6	j
op	179:29	0:0	6	<
water	179:31	0:0	6	WIDTH
forexpr	0:0	0:0	5	
stmts	179:39	201:8	5	
water	179:39	0:0	6	{
water	180:12	0:0	6	cmap_index
op	180:23	0:0	6	=
water	180:25	0:0	6	(
water	180:26	0:0	6	j
op	180:28	0:0	6	/
water	180:30	0:0	6	chunk_size
water	180:40	0:0	6	)
op	180:42	0:0	6	+
water	180:44	0:0	6	(
water	180:45	0:0	6	(
water	180:46	0:0	6	i
op	180:48	0:0	6	/
water	180:50	0:0	6	chunk_size
water	180:60	0:0	6	)
op	180:62	0:0	6	*
water	180:64	0:0	6	nchunks
water	180:71	0:0	6	)
water	180:72	0:0	6	;
switch	181:12	200:12	6	(bits_per_pixel)
cond	181:20	181:20	7	bits_per_pixel
water	181:20	0:0	8	bits_per_pixel
stmts	181:36	200:12	7	
water	181:36	0:0	8	{
label	182:12	182:18	8	case 8 :
water	183:16	0:0	8	scan_line
op	183:25	0:0	8	[
water	183:26	0:0	8	k
op	183:27	0:0	8	++
op	183:29	0:0	8	]
op	183:31	0:0	8	=
water	183:33	0:0	8	cmap_index
water	183:43	0:0	8	;
water	184:16	0:0	8	j
op	184:17	0:0	8	++
water	184:19	0:0	8	;
break	185:16	185:21	8	
label	186:12	186:18	8	case 4 :
water	187:16	0:0	8	scan_line
op	187:25	0:0	8	[
water	187:26	0:0	8	k
op	187:27	0:0	8	++
op	187:29	0:0	8	]
op	187:31	0:0	8	=
water	187:33	0:0	8	(
water	187:34	0:0	8	cmap_index
op	187:45	0:0	8	<<
water	187:48	0:0	8	4
water	187:49	0:0	8	)
op	187:51	0:0	8	+
water	187:53	0:0	8	cmap_index
water	187:63	0:0	8	;
water	188:16	0:0	8	j
op	188:18	0:0	8	+=
water	188:21	0:0	8	2
water	188:22	0:0	8	;
break	189:16	189:21	8	
label	190:12	190:18	8	case 2 :
water	191:16	0:0	8	scan_line
op	191:25	0:0	8	[
water	191:26	0:0	8	k
op	191:27	0:0	8	++
op	191:29	0:0	8	]
op	191:31	0:0	8	=
water	191:33	0:0	8	(
water	191:34	0:0	8	cmap_index
op	191:45	0:0	8	<<
water	191:48	0:0	8	6
water	191:49	0:0	8	)
op	191:51	0:0	8	+
water	191:53	0:0	8	(
water	191:54	0:0	8	cmap_index
op	191:65	0:0	8	<<
water	191:68	0:0	8	4
water	191:69	0:0	8	)
op	192:20	0:0	8	+
water	192:22	0:0	8	(
water	192:23	0:0	8	cmap_index
op	192:34	0:0	8	<<
water	192:37	0:0	8	2
water	192:38	0:0	8	)
op	192:40	0:0	8	+
water	192:42	0:0	8	cmap_index
water	192:52	0:0	8	;
water	193:16	0:0	8	j
op	193:18	0:0	8	+=
water	193:21	0:0	8	4
water	193:22	0:0	8	;
break	194:16	194:21	8	
label	195:5	195:11	8	case 1 :
water	196:2	0:0	8	scan_line
op	196:11	0:0	8	[
water	196:12	0:0	8	k
op	196:13	0:0	8	++
op	196:15	0:0	8	]
op	196:17	0:0	8	=
water	197:3	0:0	8	(
water	197:4	0:0	8	(
water	197:5	0:0	8	j
op	197:7	0:0	8	/
water	197:9	0:0	8	chunk_size
water	197:19	0:0	8	)
op	197:21	0:0	8	==
water	197:24	0:0	8	(
water	197:25	0:0	8	i
op	197:27	0:0	8	/
water	197:29	0:0	8	chunk_size
water	197:39	0:0	8	)
water	197:40	0:0	8	)
water	197:42	0:0	8	?
water	197:44	0:0	8	0
water	197:45	0:0	8	x00
water	197:49	0:0	8	:
water	197:51	0:0	8	0
water	197:52	0:0	8	xff
water	197:55	0:0	8	;
water	198:2	0:0	8	j
op	198:4	0:0	8	+=
water	198:7	0:0	8	8
water	198:8	0:0	8	;
break	199:2	199:7	8	
water	200:12	0:0	8	}
water	201:8	0:0	6	}
call	202:8	202:46	4	TIFFWriteScanline
arg	202:26	202:29	5	tif
water	202:26	0:0	6	tif
arg	202:31	202:40	5	scan_line
water	202:31	0:0	6	scan_line
arg	202:42	202:43	5	i
water	202:42	0:0	6	i
arg	202:45	202:46	5	0
water	202:45	0:0	6	0
water	202:47	0:0	4	;
water	203:4	0:0	4	}
call	204:4	204:18	2	free
arg	204:9	204:18	3	scan_line
water	204:9	0:0	4	scan_line
water	204:19	0:0	2	;
call	205:4	205:17	2	TIFFClose
arg	205:14	205:17	3	tif
water	205:14	0:0	4	tif
water	205:18	0:0	2	;
return	206:4	206:12	2	0
water	206:11	0:0	3	0

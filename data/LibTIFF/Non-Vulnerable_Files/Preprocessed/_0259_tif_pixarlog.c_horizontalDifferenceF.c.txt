func	1:0	51:0	0	static void	horizontalDifferenceF
params	2:21	0:0	1	
param	2:22	2:31	2	float *	ip
param	2:33	2:38	2	int	n
param	2:40	2:50	2	int	stride
param	2:52	2:62	2	uint16 *	wp
param	2:64	2:79	2	uint16 *	FromLT2
stmnts	0:0	50:4	1	
decl	4:4	4:46	2	int32	r1
water	4:12	0:0	2	,
decl	4:4	4:46	2	int32	g1
water	4:16	0:0	2	,
decl	4:4	4:46	2	int32	b1
water	4:20	0:0	2	,
decl	4:4	4:46	2	int32	a1
water	4:24	0:0	2	,
decl	4:4	4:46	2	int32	r2
water	4:28	0:0	2	,
decl	4:4	4:46	2	int32	g2
water	4:32	0:0	2	,
decl	4:4	4:46	2	int32	b2
water	4:36	0:0	2	,
decl	4:4	4:46	2	int32	a2
water	4:40	0:0	2	,
decl	4:4	4:46	2	int32	mask
decl	5:4	5:27	2	float	fltsize
op	5:18	0:0	2	=
water	5:20	0:0	2	Fltsize
water	7:4	0:0	2	:
water	7:6	0:0	2	(
water	7:7	0:0	2	v
op	7:8	0:0	2	<
water	7:9	0:0	2	(
water	7:10	0:0	2	float
water	7:15	0:0	2	)
water	7:16	0:0	2	2
op	7:17	0:0	2	.
water	7:18	0:0	2	)
water	7:22	0:0	2	?
water	7:24	0:0	2	FromLT2
op	7:31	0:0	2	[
call	7:32	7:47	2	(int)
arg	7:38	7:47	3	v*fltsize
water	7:38	0:0	4	v
op	7:39	0:0	4	*
water	7:40	0:0	4	fltsize
op	7:48	0:0	2	]
water	8:4	0:0	2	:
water	8:6	0:0	2	(
water	8:7	0:0	2	v
op	8:8	0:0	2	>
water	8:9	0:0	2	(
water	8:10	0:0	2	float
water	8:15	0:0	2	)
water	8:16	0:0	2	24
op	8:18	0:0	2	.
water	8:19	0:0	2	2
water	8:20	0:0	2	)
water	8:22	0:0	2	?
water	8:24	0:0	2	2047
water	9:4	0:0	2	:
water	9:6	0:0	2	LogK1
call	9:11	9:23	2	*log
arg	9:16	9:23	3	v*LogK2
water	9:16	0:0	4	v
op	9:17	0:0	4	*
water	9:18	0:0	4	LogK2
op	9:25	0:0	2	+
water	9:27	0:0	2	0
op	9:28	0:0	2	.
water	9:29	0:0	2	5
water	9:31	0:0	2	)
water	10:4	0:0	2	mask
op	10:9	0:0	2	=
water	10:11	0:0	2	CODE_MASK
water	10:20	0:0	2	;
if	11:4	50:4	2	(n >= stride)
cond	11:8	11:13	3	n >= stride
water	11:8	0:0	4	n
op	11:10	0:0	4	>=
water	11:13	0:0	4	stride
stmts	11:21	50:4	3	
water	11:21	0:0	4	{
if	12:1	25:1	4	(stride == 3)
cond	12:5	12:15	5	stride == 3
water	12:5	0:0	6	stride
op	12:12	0:0	6	==
water	12:15	0:0	6	3
stmts	12:18	25:1	5	
water	12:18	0:0	6	{
water	13:5	0:0	6	r2
op	13:8	0:0	6	=
water	13:10	0:0	6	wp
op	13:12	0:0	6	[
water	13:13	0:0	6	0
op	13:14	0:0	6	]
op	13:16	0:0	6	=
water	13:18	0:0	6	(
water	13:19	0:0	6	uint16
water	13:25	0:0	6	)
call	13:27	13:38	6	CLAMP
arg	13:33	13:38	7	ip[0]
water	13:33	0:0	8	ip
op	13:35	0:0	8	[
water	13:36	0:0	8	0
op	13:37	0:0	8	]
water	13:39	0:0	6	;
water	14:5	0:0	6	g2
op	14:8	0:0	6	=
water	14:10	0:0	6	wp
op	14:12	0:0	6	[
water	14:13	0:0	6	1
op	14:14	0:0	6	]
op	14:16	0:0	6	=
water	14:18	0:0	6	(
water	14:19	0:0	6	uint16
water	14:25	0:0	6	)
call	14:27	14:38	6	CLAMP
arg	14:33	14:38	7	ip[1]
water	14:33	0:0	8	ip
op	14:35	0:0	8	[
water	14:36	0:0	8	1
op	14:37	0:0	8	]
water	14:39	0:0	6	;
water	15:5	0:0	6	b2
op	15:8	0:0	6	=
water	15:10	0:0	6	wp
op	15:12	0:0	6	[
water	15:13	0:0	6	2
op	15:14	0:0	6	]
op	15:16	0:0	6	=
water	15:18	0:0	6	(
water	15:19	0:0	6	uint16
water	15:25	0:0	6	)
call	15:27	15:38	6	CLAMP
arg	15:33	15:38	7	ip[2]
water	15:33	0:0	8	ip
op	15:35	0:0	8	[
water	15:36	0:0	8	2
op	15:37	0:0	8	]
water	15:39	0:0	6	;
water	16:5	0:0	6	n
op	16:7	0:0	6	-=
water	16:10	0:0	6	3
water	16:11	0:0	6	;
while	17:5	24:5	6	(n > 0)
cond	17:12	17:16	7	n > 0
water	17:12	0:0	8	n
op	17:14	0:0	8	>
water	17:16	0:0	8	0
stmts	17:19	24:5	7	
water	17:19	0:0	8	{
water	18:2	0:0	8	n
op	18:4	0:0	8	-=
water	18:7	0:0	8	3
water	18:8	0:0	8	;
water	19:2	0:0	8	wp
op	19:5	0:0	8	+=
water	19:8	0:0	8	3
water	19:9	0:0	8	;
water	20:2	0:0	8	ip
op	20:5	0:0	8	+=
water	20:8	0:0	8	3
water	20:9	0:0	8	;
water	21:2	0:0	8	r1
op	21:5	0:0	8	=
water	21:7	0:0	8	(
water	21:8	0:0	8	int32
water	21:13	0:0	8	)
call	21:15	21:26	8	CLAMP
arg	21:21	21:26	9	ip[0]
water	21:21	0:0	10	ip
op	21:23	0:0	10	[
water	21:24	0:0	10	0
op	21:25	0:0	10	]
water	21:27	0:0	8	;
water	21:29	0:0	8	wp
op	21:31	0:0	8	[
water	21:32	0:0	8	0
op	21:33	0:0	8	]
op	21:35	0:0	8	=
call	21:37	21:60	8	(uint16)
arg	21:46	21:60	9	(r1-r2)&mask
water	21:46	0:0	10	(
water	21:47	0:0	10	r1
op	21:49	0:0	10	-
water	21:50	0:0	10	r2
water	21:52	0:0	10	)
op	21:54	0:0	10	&
water	21:56	0:0	10	mask
water	21:61	0:0	8	;
water	21:63	0:0	8	r2
op	21:66	0:0	8	=
water	21:68	0:0	8	r1
water	21:70	0:0	8	;
water	22:2	0:0	8	g1
op	22:5	0:0	8	=
water	22:7	0:0	8	(
water	22:8	0:0	8	int32
water	22:13	0:0	8	)
call	22:15	22:26	8	CLAMP
arg	22:21	22:26	9	ip[1]
water	22:21	0:0	10	ip
op	22:23	0:0	10	[
water	22:24	0:0	10	1
op	22:25	0:0	10	]
water	22:27	0:0	8	;
water	22:29	0:0	8	wp
op	22:31	0:0	8	[
water	22:32	0:0	8	1
op	22:33	0:0	8	]
op	22:35	0:0	8	=
call	22:37	22:60	8	(uint16)
arg	22:46	22:60	9	(g1-g2)&mask
water	22:46	0:0	10	(
water	22:47	0:0	10	g1
op	22:49	0:0	10	-
water	22:50	0:0	10	g2
water	22:52	0:0	10	)
op	22:54	0:0	10	&
water	22:56	0:0	10	mask
water	22:61	0:0	8	;
water	22:63	0:0	8	g2
op	22:66	0:0	8	=
water	22:68	0:0	8	g1
water	22:70	0:0	8	;
water	23:2	0:0	8	b1
op	23:5	0:0	8	=
water	23:7	0:0	8	(
water	23:8	0:0	8	int32
water	23:13	0:0	8	)
call	23:15	23:26	8	CLAMP
arg	23:21	23:26	9	ip[2]
water	23:21	0:0	10	ip
op	23:23	0:0	10	[
water	23:24	0:0	10	2
op	23:25	0:0	10	]
water	23:27	0:0	8	;
water	23:29	0:0	8	wp
op	23:31	0:0	8	[
water	23:32	0:0	8	2
op	23:33	0:0	8	]
op	23:35	0:0	8	=
call	23:37	23:60	8	(uint16)
arg	23:46	23:60	9	(b1-b2)&mask
water	23:46	0:0	10	(
water	23:47	0:0	10	b1
op	23:49	0:0	10	-
water	23:50	0:0	10	b2
water	23:52	0:0	10	)
op	23:54	0:0	10	&
water	23:56	0:0	10	mask
water	23:61	0:0	8	;
water	23:63	0:0	8	b2
op	23:66	0:0	8	=
water	23:68	0:0	8	b1
water	23:70	0:0	8	;
water	24:5	0:0	8	}
water	25:1	0:0	6	}
else	25:3	40:1	4
stmts	25:8	40:1	5	
if	25:8	40:1	6	(stride == 4)
cond	25:12	25:22	7	stride == 4
water	25:12	0:0	8	stride
op	25:19	0:0	8	==
water	25:22	0:0	8	4
stmts	25:25	40:1	7	
water	25:25	0:0	8	{
water	26:5	0:0	8	r2
op	26:8	0:0	8	=
water	26:10	0:0	8	wp
op	26:12	0:0	8	[
water	26:13	0:0	8	0
op	26:14	0:0	8	]
op	26:16	0:0	8	=
water	26:18	0:0	8	(
water	26:19	0:0	8	uint16
water	26:25	0:0	8	)
call	26:27	26:38	8	CLAMP
arg	26:33	26:38	9	ip[0]
water	26:33	0:0	10	ip
op	26:35	0:0	10	[
water	26:36	0:0	10	0
op	26:37	0:0	10	]
water	26:39	0:0	8	;
water	27:5	0:0	8	g2
op	27:8	0:0	8	=
water	27:10	0:0	8	wp
op	27:12	0:0	8	[
water	27:13	0:0	8	1
op	27:14	0:0	8	]
op	27:16	0:0	8	=
water	27:18	0:0	8	(
water	27:19	0:0	8	uint16
water	27:25	0:0	8	)
call	27:27	27:38	8	CLAMP
arg	27:33	27:38	9	ip[1]
water	27:33	0:0	10	ip
op	27:35	0:0	10	[
water	27:36	0:0	10	1
op	27:37	0:0	10	]
water	27:39	0:0	8	;
water	28:5	0:0	8	b2
op	28:8	0:0	8	=
water	28:10	0:0	8	wp
op	28:12	0:0	8	[
water	28:13	0:0	8	2
op	28:14	0:0	8	]
op	28:16	0:0	8	=
water	28:18	0:0	8	(
water	28:19	0:0	8	uint16
water	28:25	0:0	8	)
call	28:27	28:38	8	CLAMP
arg	28:33	28:38	9	ip[2]
water	28:33	0:0	10	ip
op	28:35	0:0	10	[
water	28:36	0:0	10	2
op	28:37	0:0	10	]
water	28:39	0:0	8	;
water	29:5	0:0	8	a2
op	29:8	0:0	8	=
water	29:10	0:0	8	wp
op	29:12	0:0	8	[
water	29:13	0:0	8	3
op	29:14	0:0	8	]
op	29:16	0:0	8	=
water	29:18	0:0	8	(
water	29:19	0:0	8	uint16
water	29:25	0:0	8	)
call	29:27	29:38	8	CLAMP
arg	29:33	29:38	9	ip[3]
water	29:33	0:0	10	ip
op	29:35	0:0	10	[
water	29:36	0:0	10	3
op	29:37	0:0	10	]
water	29:39	0:0	8	;
water	30:5	0:0	8	n
op	30:7	0:0	8	-=
water	30:10	0:0	8	4
water	30:11	0:0	8	;
while	31:5	39:5	8	(n > 0)
cond	31:12	31:16	9	n > 0
water	31:12	0:0	10	n
op	31:14	0:0	10	>
water	31:16	0:0	10	0
stmts	31:19	39:5	9	
water	31:19	0:0	10	{
water	32:2	0:0	10	n
op	32:4	0:0	10	-=
water	32:7	0:0	10	4
water	32:8	0:0	10	;
water	33:2	0:0	10	wp
op	33:5	0:0	10	+=
water	33:8	0:0	10	4
water	33:9	0:0	10	;
water	34:2	0:0	10	ip
op	34:5	0:0	10	+=
water	34:8	0:0	10	4
water	34:9	0:0	10	;
water	35:2	0:0	10	r1
op	35:5	0:0	10	=
water	35:7	0:0	10	(
water	35:8	0:0	10	int32
water	35:13	0:0	10	)
call	35:15	35:26	10	CLAMP
arg	35:21	35:26	11	ip[0]
water	35:21	0:0	12	ip
op	35:23	0:0	12	[
water	35:24	0:0	12	0
op	35:25	0:0	12	]
water	35:27	0:0	10	;
water	35:29	0:0	10	wp
op	35:31	0:0	10	[
water	35:32	0:0	10	0
op	35:33	0:0	10	]
op	35:35	0:0	10	=
call	35:37	35:60	10	(uint16)
arg	35:46	35:60	11	(r1-r2)&mask
water	35:46	0:0	12	(
water	35:47	0:0	12	r1
op	35:49	0:0	12	-
water	35:50	0:0	12	r2
water	35:52	0:0	12	)
op	35:54	0:0	12	&
water	35:56	0:0	12	mask
water	35:61	0:0	10	;
water	35:63	0:0	10	r2
op	35:66	0:0	10	=
water	35:68	0:0	10	r1
water	35:70	0:0	10	;
water	36:2	0:0	10	g1
op	36:5	0:0	10	=
water	36:7	0:0	10	(
water	36:8	0:0	10	int32
water	36:13	0:0	10	)
call	36:15	36:26	10	CLAMP
arg	36:21	36:26	11	ip[1]
water	36:21	0:0	12	ip
op	36:23	0:0	12	[
water	36:24	0:0	12	1
op	36:25	0:0	12	]
water	36:27	0:0	10	;
water	36:29	0:0	10	wp
op	36:31	0:0	10	[
water	36:32	0:0	10	1
op	36:33	0:0	10	]
op	36:35	0:0	10	=
call	36:37	36:60	10	(uint16)
arg	36:46	36:60	11	(g1-g2)&mask
water	36:46	0:0	12	(
water	36:47	0:0	12	g1
op	36:49	0:0	12	-
water	36:50	0:0	12	g2
water	36:52	0:0	12	)
op	36:54	0:0	12	&
water	36:56	0:0	12	mask
water	36:61	0:0	10	;
water	36:63	0:0	10	g2
op	36:66	0:0	10	=
water	36:68	0:0	10	g1
water	36:70	0:0	10	;
water	37:2	0:0	10	b1
op	37:5	0:0	10	=
water	37:7	0:0	10	(
water	37:8	0:0	10	int32
water	37:13	0:0	10	)
call	37:15	37:26	10	CLAMP
arg	37:21	37:26	11	ip[2]
water	37:21	0:0	12	ip
op	37:23	0:0	12	[
water	37:24	0:0	12	2
op	37:25	0:0	12	]
water	37:27	0:0	10	;
water	37:29	0:0	10	wp
op	37:31	0:0	10	[
water	37:32	0:0	10	2
op	37:33	0:0	10	]
op	37:35	0:0	10	=
call	37:37	37:60	10	(uint16)
arg	37:46	37:60	11	(b1-b2)&mask
water	37:46	0:0	12	(
water	37:47	0:0	12	b1
op	37:49	0:0	12	-
water	37:50	0:0	12	b2
water	37:52	0:0	12	)
op	37:54	0:0	12	&
water	37:56	0:0	12	mask
water	37:61	0:0	10	;
water	37:63	0:0	10	b2
op	37:66	0:0	10	=
water	37:68	0:0	10	b1
water	37:70	0:0	10	;
water	38:2	0:0	10	a1
op	38:5	0:0	10	=
water	38:7	0:0	10	(
water	38:8	0:0	10	int32
water	38:13	0:0	10	)
call	38:15	38:26	10	CLAMP
arg	38:21	38:26	11	ip[3]
water	38:21	0:0	12	ip
op	38:23	0:0	12	[
water	38:24	0:0	12	3
op	38:25	0:0	12	]
water	38:27	0:0	10	;
water	38:29	0:0	10	wp
op	38:31	0:0	10	[
water	38:32	0:0	10	3
op	38:33	0:0	10	]
op	38:35	0:0	10	=
call	38:37	38:60	10	(uint16)
arg	38:46	38:60	11	(a1-a2)&mask
water	38:46	0:0	12	(
water	38:47	0:0	12	a1
op	38:49	0:0	12	-
water	38:50	0:0	12	a2
water	38:52	0:0	12	)
op	38:54	0:0	12	&
water	38:56	0:0	12	mask
water	38:61	0:0	10	;
water	38:63	0:0	10	a2
op	38:66	0:0	10	=
water	38:68	0:0	10	a1
water	38:70	0:0	10	;
water	39:5	0:0	10	}
water	40:1	0:0	8	}
else	40:3	49:1	4
stmts	40:8	49:1	5	
water	40:8	0:0	6	{
water	41:8	0:0	6	REPEAT
water	41:14	0:0	6	(
water	41:15	0:0	6	stride
water	41:21	0:0	6	,
water	41:23	0:0	6	wp
op	41:25	0:0	6	[
water	41:26	0:0	6	0
op	41:27	0:0	6	]
op	41:29	0:0	6	=
water	41:31	0:0	6	(
water	41:32	0:0	6	uint16
water	41:38	0:0	6	)
call	41:40	41:51	6	CLAMP
arg	41:46	41:51	7	ip[0]
water	41:46	0:0	8	ip
op	41:48	0:0	8	[
water	41:49	0:0	8	0
op	41:50	0:0	8	]
water	41:52	0:0	6	;
water	41:54	0:0	6	wp
op	41:56	0:0	6	++
water	41:58	0:0	6	;
water	41:60	0:0	6	ip
op	41:62	0:0	6	++
water	41:64	0:0	6	)
water	42:8	0:0	6	n
op	42:10	0:0	6	-=
water	42:13	0:0	6	stride
water	42:19	0:0	6	;
while	43:8	48:8	6	(n > 0)
cond	43:15	43:19	7	n > 0
water	43:15	0:0	8	n
op	43:17	0:0	8	>
water	43:19	0:0	8	0
stmts	43:22	48:8	7	
water	43:22	0:0	8	{
water	44:12	0:0	8	REPEAT
water	44:18	0:0	8	(
water	44:19	0:0	8	stride
water	44:25	0:0	8	,
water	45:16	0:0	8	wp
op	45:18	0:0	8	[
water	45:19	0:0	8	0
op	45:20	0:0	8	]
op	45:22	0:0	8	=
call	45:24	45:87	8	(uint16)
arg	45:33	45:87	9	((int32)CLAMP(ip[0])-(int32)CLAMP(ip[-stride]))&mask
water	45:33	0:0	10	(
water	45:34	0:0	10	(
water	45:35	0:0	10	int32
water	45:40	0:0	10	)
call	45:41	45:52	10	CLAMP
arg	45:47	45:52	11	ip[0]
water	45:47	0:0	12	ip
op	45:49	0:0	12	[
water	45:50	0:0	12	0
op	45:51	0:0	12	]
op	45:53	0:0	10	-
water	45:54	0:0	10	(
water	45:55	0:0	10	int32
water	45:60	0:0	10	)
call	45:61	45:78	10	CLAMP
arg	45:67	45:78	11	ip[-stride]
water	45:67	0:0	12	ip
op	45:69	0:0	12	[
op	45:70	0:0	12	-
water	45:71	0:0	12	stride
op	45:77	0:0	12	]
water	45:79	0:0	10	)
op	45:81	0:0	10	&
water	45:83	0:0	10	mask
water	45:88	0:0	8	;
water	46:16	0:0	8	wp
op	46:18	0:0	8	++
water	46:20	0:0	8	;
water	46:22	0:0	8	ip
op	46:24	0:0	8	++
water	46:26	0:0	8	)
water	47:12	0:0	8	n
op	47:14	0:0	8	-=
water	47:17	0:0	8	stride
water	47:23	0:0	8	;
water	48:8	0:0	8	}
water	49:1	0:0	6	}
water	50:4	0:0	4	}

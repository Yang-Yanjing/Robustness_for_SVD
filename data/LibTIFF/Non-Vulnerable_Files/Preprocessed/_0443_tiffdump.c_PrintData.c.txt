func	1:0	131:0	0	static void	PrintData
params	2:9	0:0	1	
param	2:10	2:18	2	FILE *	fd
param	2:20	2:31	2	uint16	type
param	2:33	2:45	2	uint32	count
param	2:47	2:66	2	unsigned char *	data
stmnts	0:0	130:1	1	
decl	4:1	4:15	2	char	*sep
op	4:11	0:0	2	=
water	4:13	0:0	2	""
switch	5:1	130:1	2	(type)
cond	5:9	5:9	3	type
water	5:9	0:0	4	type
stmts	5:15	130:1	3	
water	5:15	0:0	4	{
label	6:1	6:15	4	case TIFF_BYTE :
while	7:2	8:48	4	(count -- > 0)
cond	7:9	7:19	5	count -- > 0
water	7:9	0:0	6	count
op	7:14	0:0	6	--
op	7:17	0:0	6	>
water	7:19	0:0	6	0
stmts	8:3	8:48	5	
call	8:3	8:36	6	fprintf
arg	8:11	8:13	7	fd
water	8:11	0:0	8	fd
arg	8:15	8:22	7	bytefmt
water	8:15	0:0	8	bytefmt
arg	8:24	8:27	7	sep
water	8:24	0:0	8	sep
arg	8:29	8:36	7	*data++
op	8:29	0:0	8	*
water	8:30	0:0	8	data
op	8:34	0:0	8	++
water	8:37	0:0	6	,
water	8:39	0:0	6	sep
op	8:43	0:0	6	=
water	8:45	0:0	6	" "
water	8:48	0:0	6	;
break	9:2	9:7	4	
label	10:1	10:16	4	case TIFF_SBYTE :
while	11:2	12:57	4	(count -- > 0)
cond	11:9	11:19	5	count -- > 0
water	11:9	0:0	6	count
op	11:14	0:0	6	--
op	11:17	0:0	6	>
water	11:19	0:0	6	0
stmts	12:3	12:57	5	
call	12:3	12:45	6	fprintf
arg	12:11	12:13	7	fd
water	12:11	0:0	8	fd
arg	12:15	12:23	7	sbytefmt
water	12:15	0:0	8	sbytefmt
arg	12:25	12:28	7	sep
water	12:25	0:0	8	sep
arg	12:30	12:45	7	*(char*)data++
op	12:30	0:0	8	*
water	12:31	0:0	8	(
water	12:32	0:0	8	char
op	12:37	0:0	8	*
water	12:38	0:0	8	)
water	12:39	0:0	8	data
op	12:43	0:0	8	++
water	12:46	0:0	6	,
water	12:48	0:0	6	sep
op	12:52	0:0	6	=
water	12:54	0:0	6	" "
water	12:57	0:0	6	;
break	13:2	13:7	4	
label	14:1	14:20	4	case TIFF_UNDEFINED :
while	15:2	16:48	4	(count -- > 0)
cond	15:9	15:19	5	count -- > 0
water	15:9	0:0	6	count
op	15:14	0:0	6	--
op	15:17	0:0	6	>
water	15:19	0:0	6	0
stmts	16:3	16:48	5	
call	16:3	16:36	6	fprintf
arg	16:11	16:13	7	fd
water	16:11	0:0	8	fd
arg	16:15	16:22	7	bytefmt
water	16:15	0:0	8	bytefmt
arg	16:24	16:27	7	sep
water	16:24	0:0	8	sep
arg	16:29	16:36	7	*data++
op	16:29	0:0	8	*
water	16:30	0:0	8	data
op	16:34	0:0	8	++
water	16:37	0:0	6	,
water	16:39	0:0	6	sep
op	16:43	0:0	6	=
water	16:45	0:0	6	" "
water	16:48	0:0	6	;
break	17:2	17:7	4	
label	18:1	18:16	4	case TIFF_ASCII :
call	19:2	19:28	4	PrintASCII
arg	19:13	19:15	5	fd
water	19:13	0:0	6	fd
arg	19:17	19:22	5	count
water	19:17	0:0	6	count
arg	19:24	19:28	5	data
water	19:24	0:0	6	data
water	19:29	0:0	4	;
break	20:2	20:7	4	
label	21:1	21:16	4	case TIFF_SHORT :
water	21:18	0:0	4	{
decl	22:2	22:28	4	uint16	*wp
op	22:13	0:0	4	=
water	22:15	0:0	4	(
water	22:16	0:0	4	uint16
op	22:22	0:0	4	*
water	22:23	0:0	4	)
water	22:24	0:0	4	data
while	23:2	24:47	4	(count -- > 0)
cond	23:9	23:19	5	count -- > 0
water	23:9	0:0	6	count
op	23:14	0:0	6	--
op	23:17	0:0	6	>
water	23:19	0:0	6	0
stmts	24:3	24:47	5	
call	24:3	24:35	6	fprintf
arg	24:11	24:13	7	fd
water	24:11	0:0	8	fd
arg	24:15	24:23	7	shortfmt
water	24:15	0:0	8	shortfmt
arg	24:25	24:28	7	sep
water	24:25	0:0	8	sep
arg	24:30	24:35	7	*wp++
op	24:30	0:0	8	*
water	24:31	0:0	8	wp
op	24:33	0:0	8	++
water	24:36	0:0	6	,
water	24:38	0:0	6	sep
op	24:42	0:0	6	=
water	24:44	0:0	6	" "
water	24:47	0:0	6	;
break	25:2	25:7	4	
water	26:1	0:0	4	}
label	27:1	27:17	4	case TIFF_SSHORT :
water	27:19	0:0	4	{
decl	28:2	28:26	4	int16	*wp
op	28:12	0:0	4	=
water	28:14	0:0	4	(
water	28:15	0:0	4	int16
op	28:20	0:0	4	*
water	28:21	0:0	4	)
water	28:22	0:0	4	data
while	29:2	30:48	4	(count -- > 0)
cond	29:9	29:19	5	count -- > 0
water	29:9	0:0	6	count
op	29:14	0:0	6	--
op	29:17	0:0	6	>
water	29:19	0:0	6	0
stmts	30:3	30:48	5	
call	30:3	30:36	6	fprintf
arg	30:11	30:13	7	fd
water	30:11	0:0	8	fd
arg	30:15	30:24	7	sshortfmt
water	30:15	0:0	8	sshortfmt
arg	30:26	30:29	7	sep
water	30:26	0:0	8	sep
arg	30:31	30:36	7	*wp++
op	30:31	0:0	8	*
water	30:32	0:0	8	wp
op	30:34	0:0	8	++
water	30:37	0:0	6	,
water	30:39	0:0	6	sep
op	30:43	0:0	6	=
water	30:45	0:0	6	" "
water	30:48	0:0	6	;
break	31:2	31:7	4	
water	32:1	0:0	4	}
label	33:1	33:15	4	case TIFF_LONG :
water	33:17	0:0	4	{
decl	34:2	34:28	4	uint32	*lp
op	34:13	0:0	4	=
water	34:15	0:0	4	(
water	34:16	0:0	4	uint32
op	34:22	0:0	4	*
water	34:23	0:0	4	)
water	34:24	0:0	4	data
while	35:2	38:2	4	(count -- > 0)
cond	35:9	35:19	5	count -- > 0
water	35:9	0:0	6	count
op	35:14	0:0	6	--
op	35:17	0:0	6	>
water	35:19	0:0	6	0
stmts	35:22	38:2	5	
water	35:22	0:0	6	{
call	36:3	36:50	6	fprintf
arg	36:11	36:13	7	fd
water	36:11	0:0	8	fd
arg	36:15	36:22	7	longfmt
water	36:15	0:0	8	longfmt
arg	36:24	36:27	7	sep
water	36:24	0:0	8	sep
arg	36:29	36:50	7	(unsignedlong)*lp++
water	36:29	0:0	8	(
water	36:30	0:0	8	unsigned
water	36:39	0:0	8	long
water	36:43	0:0	8	)
op	36:45	0:0	8	*
water	36:46	0:0	8	lp
op	36:48	0:0	8	++
water	36:51	0:0	6	;
water	37:3	0:0	6	sep
op	37:7	0:0	6	=
water	37:9	0:0	6	" "
water	37:12	0:0	6	;
water	38:2	0:0	6	}
break	39:2	39:7	4	
water	40:1	0:0	4	}
label	41:1	41:16	4	case TIFF_SLONG :
water	41:18	0:0	4	{
decl	42:2	42:26	4	int32	*lp
op	42:12	0:0	4	=
water	42:14	0:0	4	(
water	42:15	0:0	4	int32
op	42:20	0:0	4	*
water	42:21	0:0	4	)
water	42:22	0:0	4	data
while	43:2	44:54	4	(count -- > 0)
cond	43:9	43:19	5	count -- > 0
water	43:9	0:0	6	count
op	43:14	0:0	6	--
op	43:17	0:0	6	>
water	43:19	0:0	6	0
stmts	44:3	44:54	5	
call	44:3	44:42	6	fprintf
arg	44:11	44:13	7	fd
water	44:11	0:0	8	fd
arg	44:15	44:23	7	slongfmt
water	44:15	0:0	8	slongfmt
arg	44:25	44:28	7	sep
water	44:25	0:0	8	sep
arg	44:30	44:42	7	(long)*lp++
water	44:30	0:0	8	(
water	44:31	0:0	8	long
water	44:35	0:0	8	)
op	44:37	0:0	8	*
water	44:38	0:0	8	lp
op	44:40	0:0	8	++
water	44:43	0:0	6	,
water	44:45	0:0	6	sep
op	44:49	0:0	6	=
water	44:51	0:0	6	" "
water	44:54	0:0	6	;
break	45:2	45:7	4	
water	46:1	0:0	4	}
label	47:1	47:16	4	case TIFF_LONG8 :
water	47:18	0:0	4	{
decl	48:2	48:29	4	uint64	*llp
op	48:14	0:0	4	=
water	48:16	0:0	4	(
water	48:17	0:0	4	uint64
op	48:23	0:0	4	*
water	48:24	0:0	4	)
water	48:25	0:0	4	data
while	49:2	55:2	4	(count -- > 0)
cond	49:9	49:19	5	count -- > 0
water	49:9	0:0	6	count
op	49:14	0:0	6	--
op	49:17	0:0	6	>
water	49:19	0:0	6	0
stmts	49:22	55:2	5	
water	49:22	0:0	6	{
decl	50:24	50:34	6	uint64	val
call	51:24	51:56	6	memcpy
arg	51:31	51:35	7	&val
op	51:31	0:0	8	&
water	51:32	0:0	8	val
arg	51:37	51:40	7	llp
water	51:37	0:0	8	llp
arg	51:42	51:56	7	sizeof(uint64)
op	51:42	0:0	8	sizeof
water	51:48	0:0	8	(
water	51:49	0:0	8	uint64
water	51:55	0:0	8	)
water	51:57	0:0	6	;
water	52:24	0:0	6	llp
op	52:28	0:0	6	++
water	52:30	0:0	6	;
call	53:3	53:33	6	fprintf
arg	53:11	53:13	7	fd
water	53:11	0:0	8	fd
arg	53:15	53:23	7	long8fmt
water	53:15	0:0	8	long8fmt
arg	53:25	53:28	7	sep
water	53:25	0:0	8	sep
arg	53:30	53:33	7	val
water	53:30	0:0	8	val
water	53:34	0:0	6	;
water	54:3	0:0	6	sep
op	54:7	0:0	6	=
water	54:9	0:0	6	" "
water	54:12	0:0	6	;
water	55:2	0:0	6	}
break	56:2	56:7	4	
water	57:1	0:0	4	}
label	58:1	58:17	4	case TIFF_SLONG8 :
water	58:19	0:0	4	{
decl	59:2	59:27	4	int64	*llp
op	59:13	0:0	4	=
water	59:15	0:0	4	(
water	59:16	0:0	4	int64
op	59:21	0:0	4	*
water	59:22	0:0	4	)
water	59:23	0:0	4	data
while	60:2	66:16	4	(count -- > 0)
cond	60:9	60:19	5	count -- > 0
water	60:9	0:0	6	count
op	60:14	0:0	6	--
op	60:17	0:0	6	>
water	60:19	0:0	6	0
stmts	60:22	66:16	5	
water	60:22	0:0	6	{
decl	61:24	61:33	6	int64	val
call	62:24	62:55	6	memcpy
arg	62:31	62:35	7	&val
op	62:31	0:0	8	&
water	62:32	0:0	8	val
arg	62:37	62:40	7	llp
water	62:37	0:0	8	llp
arg	62:42	62:55	7	sizeof(int64)
op	62:42	0:0	8	sizeof
water	62:48	0:0	8	(
water	62:49	0:0	8	int64
water	62:54	0:0	8	)
water	62:56	0:0	6	;
water	63:24	0:0	6	llp
op	63:28	0:0	6	++
water	63:30	0:0	6	;
call	64:24	64:55	6	fprintf
arg	64:32	64:34	7	fd
water	64:32	0:0	8	fd
arg	64:36	64:45	7	slong8fmt
water	64:36	0:0	8	slong8fmt
arg	64:47	64:50	7	sep
water	64:47	0:0	8	sep
arg	64:52	64:55	7	val
water	64:52	0:0	8	val
water	64:56	0:0	6	;
water	65:24	0:0	6	sep
op	65:28	0:0	6	=
water	65:30	0:0	6	" "
water	65:33	0:0	6	;
water	66:16	0:0	6	}
break	67:2	67:7	4	
water	68:1	0:0	4	}
label	69:1	69:19	4	case TIFF_RATIONAL :
water	69:21	0:0	4	{
decl	70:2	70:28	4	uint32	*lp
op	70:13	0:0	4	=
water	70:15	0:0	4	(
water	70:16	0:0	4	uint32
op	70:22	0:0	4	*
water	70:23	0:0	4	)
water	70:24	0:0	4	data
while	71:2	81:2	4	(count -- > 0)
cond	71:9	71:19	5	count -- > 0
water	71:9	0:0	6	count
op	71:14	0:0	6	--
op	71:17	0:0	6	>
water	71:19	0:0	6	0
stmts	71:22	81:2	5	
water	71:22	0:0	6	{
if	72:3	75:30	6	(lp [ 1 ] == 0)
cond	72:7	72:16	7	lp [ 1 ] == 0
water	72:7	0:0	8	lp
op	72:9	0:0	8	[
water	72:10	0:0	8	1
op	72:11	0:0	8	]
op	72:13	0:0	8	==
water	72:16	0:0	8	0
stmts	73:4	75:30	7	
call	73:4	75:29	8	fprintf
arg	73:12	73:14	9	fd
water	73:12	0:0	10	fd
arg	73:16	73:33	9	"%sNan (%lu/%lu)"
water	73:16	0:0	10	"%sNan (%lu/%lu)"
arg	73:35	73:38	9	sep
water	73:35	0:0	10	sep
arg	74:8	74:29	9	(unsignedlong)lp[0]
water	74:8	0:0	10	(
water	74:9	0:0	10	unsigned
water	74:18	0:0	10	long
water	74:22	0:0	10	)
water	74:24	0:0	10	lp
op	74:26	0:0	10	[
water	74:27	0:0	10	0
op	74:28	0:0	10	]
arg	75:8	75:29	9	(unsignedlong)lp[1]
water	75:8	0:0	10	(
water	75:9	0:0	10	unsigned
water	75:18	0:0	10	long
water	75:22	0:0	10	)
water	75:24	0:0	10	lp
op	75:26	0:0	10	[
water	75:27	0:0	10	1
op	75:28	0:0	10	]
water	75:30	0:0	8	;
else	76:3	78:38	6
stmts	77:4	78:38	7	
call	77:4	78:37	8	fprintf
arg	77:12	77:14	9	fd
water	77:12	0:0	10	fd
arg	77:16	77:27	9	rationalfmt
water	77:16	0:0	10	rationalfmt
arg	77:29	77:32	9	sep
water	77:29	0:0	10	sep
arg	78:8	78:37	9	(double)lp[0]/(double)lp[1]
water	78:8	0:0	10	(
water	78:9	0:0	10	double
water	78:15	0:0	10	)
water	78:16	0:0	10	lp
op	78:18	0:0	10	[
water	78:19	0:0	10	0
op	78:20	0:0	10	]
op	78:22	0:0	10	/
water	78:24	0:0	10	(
water	78:25	0:0	10	double
water	78:31	0:0	10	)
water	78:32	0:0	10	lp
op	78:34	0:0	10	[
water	78:35	0:0	10	1
op	78:36	0:0	10	]
water	78:38	0:0	8	;
water	79:3	0:0	6	sep
op	79:7	0:0	6	=
water	79:9	0:0	6	" "
water	79:12	0:0	6	;
water	80:3	0:0	6	lp
op	80:6	0:0	6	+=
water	80:9	0:0	6	2
water	80:10	0:0	6	;
water	81:2	0:0	6	}
break	82:2	82:7	4	
water	83:1	0:0	4	}
label	84:1	84:20	4	case TIFF_SRATIONAL :
water	84:22	0:0	4	{
decl	85:2	85:26	4	int32	*lp
op	85:12	0:0	4	=
water	85:14	0:0	4	(
water	85:15	0:0	4	int32
op	85:20	0:0	4	*
water	85:21	0:0	4	)
water	85:22	0:0	4	data
while	86:2	95:2	4	(count -- > 0)
cond	86:9	86:19	5	count -- > 0
water	86:9	0:0	6	count
op	86:14	0:0	6	--
op	86:17	0:0	6	>
water	86:19	0:0	6	0
stmts	86:22	95:2	5	
water	86:22	0:0	6	{
if	87:3	89:35	6	(lp [ 1 ] == 0)
cond	87:7	87:16	7	lp [ 1 ] == 0
water	87:7	0:0	8	lp
op	87:9	0:0	8	[
water	87:10	0:0	8	1
op	87:11	0:0	8	]
op	87:13	0:0	8	==
water	87:16	0:0	8	0
stmts	88:4	89:35	7	
call	88:4	89:34	8	fprintf
arg	88:12	88:14	9	fd
water	88:12	0:0	10	fd
arg	88:16	88:33	9	"%sNan (%ld/%ld)"
water	88:16	0:0	10	"%sNan (%ld/%ld)"
arg	88:35	88:38	9	sep
water	88:35	0:0	10	sep
arg	89:8	89:20	9	(long)lp[0]
water	89:8	0:0	10	(
water	89:9	0:0	10	long
water	89:13	0:0	10	)
water	89:15	0:0	10	lp
op	89:17	0:0	10	[
water	89:18	0:0	10	0
op	89:19	0:0	10	]
arg	89:22	89:34	9	(long)lp[1]
water	89:22	0:0	10	(
water	89:23	0:0	10	long
water	89:27	0:0	10	)
water	89:29	0:0	10	lp
op	89:31	0:0	10	[
water	89:32	0:0	10	1
op	89:33	0:0	10	]
water	89:35	0:0	8	;
else	90:3	92:38	6
stmts	91:4	92:38	7	
call	91:4	92:37	8	fprintf
arg	91:12	91:14	9	fd
water	91:12	0:0	10	fd
arg	91:16	91:28	9	srationalfmt
water	91:16	0:0	10	srationalfmt
arg	91:30	91:33	9	sep
water	91:30	0:0	10	sep
arg	92:8	92:37	9	(double)lp[0]/(double)lp[1]
water	92:8	0:0	10	(
water	92:9	0:0	10	double
water	92:15	0:0	10	)
water	92:16	0:0	10	lp
op	92:18	0:0	10	[
water	92:19	0:0	10	0
op	92:20	0:0	10	]
op	92:22	0:0	10	/
water	92:24	0:0	10	(
water	92:25	0:0	10	double
water	92:31	0:0	10	)
water	92:32	0:0	10	lp
op	92:34	0:0	10	[
water	92:35	0:0	10	1
op	92:36	0:0	10	]
water	92:38	0:0	8	;
water	93:3	0:0	6	sep
op	93:7	0:0	6	=
water	93:9	0:0	6	" "
water	93:12	0:0	6	;
water	94:3	0:0	6	lp
op	94:6	0:0	6	+=
water	94:9	0:0	6	2
water	94:10	0:0	6	;
water	95:2	0:0	6	}
break	96:2	96:7	4	
water	97:1	0:0	4	}
label	98:1	98:16	4	case TIFF_FLOAT :
water	98:18	0:0	4	{
decl	99:2	99:27	4	float	*fp
op	99:12	0:0	4	=
water	99:14	0:0	4	(
water	99:15	0:0	4	float
op	99:21	0:0	4	*
water	99:22	0:0	4	)
water	99:23	0:0	4	data
while	100:2	101:47	4	(count -- > 0)
cond	100:9	100:19	5	count -- > 0
water	100:9	0:0	6	count
op	100:14	0:0	6	--
op	100:17	0:0	6	>
water	100:19	0:0	6	0
stmts	101:3	101:47	5	
call	101:3	101:35	6	fprintf
arg	101:11	101:13	7	fd
water	101:11	0:0	8	fd
arg	101:15	101:23	7	floatfmt
water	101:15	0:0	8	floatfmt
arg	101:25	101:28	7	sep
water	101:25	0:0	8	sep
arg	101:30	101:35	7	*fp++
op	101:30	0:0	8	*
water	101:31	0:0	8	fp
op	101:33	0:0	8	++
water	101:36	0:0	6	,
water	101:38	0:0	6	sep
op	101:42	0:0	6	=
water	101:44	0:0	6	" "
water	101:47	0:0	6	;
break	102:2	102:7	4	
water	103:1	0:0	4	}
label	104:1	104:17	4	case TIFF_DOUBLE :
water	104:19	0:0	4	{
decl	105:2	105:29	4	double	*dp
op	105:13	0:0	4	=
water	105:15	0:0	4	(
water	105:16	0:0	4	double
op	105:23	0:0	4	*
water	105:24	0:0	4	)
water	105:25	0:0	4	data
while	106:2	107:48	4	(count -- > 0)
cond	106:9	106:19	5	count -- > 0
water	106:9	0:0	6	count
op	106:14	0:0	6	--
op	106:17	0:0	6	>
water	106:19	0:0	6	0
stmts	107:3	107:48	5	
call	107:3	107:36	6	fprintf
arg	107:11	107:13	7	fd
water	107:11	0:0	8	fd
arg	107:15	107:24	7	doublefmt
water	107:15	0:0	8	doublefmt
arg	107:26	107:29	7	sep
water	107:26	0:0	8	sep
arg	107:31	107:36	7	*dp++
op	107:31	0:0	8	*
water	107:32	0:0	8	dp
op	107:34	0:0	8	++
water	107:37	0:0	6	,
water	107:39	0:0	6	sep
op	107:43	0:0	6	=
water	107:45	0:0	6	" "
water	107:48	0:0	6	;
break	108:2	108:7	4	
water	109:1	0:0	4	}
label	110:1	110:14	4	case TIFF_IFD :
water	110:16	0:0	4	{
decl	111:2	111:28	4	uint32	*lp
op	111:13	0:0	4	=
water	111:15	0:0	4	(
water	111:16	0:0	4	uint32
op	111:22	0:0	4	*
water	111:23	0:0	4	)
water	111:24	0:0	4	data
while	112:2	115:2	4	(count -- > 0)
cond	112:9	112:19	5	count -- > 0
water	112:9	0:0	6	count
op	112:14	0:0	6	--
op	112:17	0:0	6	>
water	112:19	0:0	6	0
stmts	112:22	115:2	5	
water	112:22	0:0	6	{
call	113:3	113:49	6	fprintf
arg	113:11	113:13	7	fd
water	113:11	0:0	8	fd
arg	113:15	113:21	7	ifdfmt
water	113:15	0:0	8	ifdfmt
arg	113:23	113:26	7	sep
water	113:23	0:0	8	sep
arg	113:28	113:49	7	(unsignedlong)*lp++
water	113:28	0:0	8	(
water	113:29	0:0	8	unsigned
water	113:38	0:0	8	long
water	113:42	0:0	8	)
op	113:44	0:0	8	*
water	113:45	0:0	8	lp
op	113:47	0:0	8	++
water	113:50	0:0	6	;
water	114:3	0:0	6	sep
op	114:7	0:0	6	=
water	114:9	0:0	6	" "
water	114:12	0:0	6	;
water	115:2	0:0	6	}
break	116:2	116:7	4	
water	117:1	0:0	4	}
label	118:1	118:15	4	case TIFF_IFD8 :
water	118:17	0:0	4	{
decl	119:2	119:29	4	uint64	*llp
op	119:14	0:0	4	=
water	119:16	0:0	4	(
water	119:17	0:0	4	uint64
op	119:23	0:0	4	*
water	119:24	0:0	4	)
water	119:25	0:0	4	data
while	120:2	127:2	4	(count -- > 0)
cond	120:9	120:19	5	count -- > 0
water	120:9	0:0	6	count
op	120:14	0:0	6	--
op	120:17	0:0	6	>
water	120:19	0:0	6	0
stmts	120:22	127:2	5	
water	120:22	0:0	6	{
call	122:3	122:54	6	fprintf
arg	122:11	122:13	7	fd
water	122:11	0:0	8	fd
arg	122:15	122:22	7	ifd8fmt
water	122:15	0:0	8	ifd8fmt
arg	122:24	122:27	7	sep
water	122:24	0:0	8	sep
arg	122:29	122:54	7	(unsigned__int64)*llp++
water	122:29	0:0	8	(
water	122:30	0:0	8	unsigned
water	122:39	0:0	8	__int64
water	122:46	0:0	8	)
op	122:48	0:0	8	*
water	122:49	0:0	8	llp
op	122:52	0:0	8	++
water	122:55	0:0	6	;
call	124:3	124:56	6	fprintf
arg	124:11	124:13	7	fd
water	124:11	0:0	8	fd
arg	124:15	124:22	7	ifd8fmt
water	124:15	0:0	8	ifd8fmt
arg	124:24	124:27	7	sep
water	124:24	0:0	8	sep
arg	124:29	124:56	7	(unsignedlonglong)*llp++
water	124:29	0:0	8	(
water	124:30	0:0	8	unsigned
water	124:39	0:0	8	long
water	124:44	0:0	8	long
water	124:48	0:0	8	)
op	124:50	0:0	8	*
water	124:51	0:0	8	llp
op	124:54	0:0	8	++
water	124:57	0:0	6	;
water	126:3	0:0	6	sep
op	126:7	0:0	6	=
water	126:9	0:0	6	" "
water	126:12	0:0	6	;
water	127:2	0:0	6	}
break	128:2	128:7	4	
water	129:1	0:0	4	}
water	130:1	0:0	4	}

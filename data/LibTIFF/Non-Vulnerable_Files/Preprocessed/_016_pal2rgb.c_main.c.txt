func	1:0	155:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	154:11	1	
decl	4:1	4:29	2	uint16	bitspersample
water	4:21	0:0	2	,
decl	4:1	4:29	2	uint16	shortv
decl	5:1	5:31	2	uint32	imagewidth
water	5:18	0:0	2	,
decl	5:1	5:31	2	uint32	imagelength
decl	6:1	6:36	2	uint16	config
op	6:15	0:0	2	=
water	6:17	0:0	2	PLANARCONFIG_CONTIG
decl	7:1	7:34	2	uint32	rowsperstrip
op	7:21	0:0	2	=
water	7:23	0:0	2	(
water	7:24	0:0	2	uint32
water	7:30	0:0	2	)
op	7:32	0:0	2	-
water	7:33	0:0	2	1
decl	8:1	8:37	2	uint16	photometric
op	8:20	0:0	2	=
water	8:22	0:0	2	PHOTOMETRIC_RGB
decl	9:1	9:27	2	uint16	*rmap
water	9:13	0:0	2	,
decl	9:1	9:27	2	uint16	*gmap
water	9:20	0:0	2	,
decl	9:1	9:27	2	uint16	*bmap
decl	10:1	10:11	2	uint32	row
decl	11:1	11:14	2	int	cmap
op	11:10	0:0	2	=
op	11:12	0:0	2	-
water	11:13	0:0	2	1
decl	12:1	12:15	2	TIFF	*in
water	12:9	0:0	2	,
decl	12:1	12:15	2	TIFF	*out
decl	13:1	13:6	2	int	c
water	14:1	0:0	2	extern
water	14:8	0:0	2	int
water	14:12	0:0	2	optind
water	14:18	0:0	2	;
water	15:1	0:0	2	extern
water	15:8	0:0	2	char
op	15:12	0:0	2	*
water	15:14	0:0	2	optarg
water	15:20	0:0	2	;
while	16:1	39:2	2	(( c =getopt (argc ,argv ,"C:c:p:r:" ) ) != - 1)
cond	16:8	16:49	3	( c =getopt (argc ,argv ,"C:c:p:r:" ) ) != - 1
water	16:8	0:0	4	(
water	16:9	0:0	4	c
op	16:11	0:0	4	=
call	16:13	16:42	4	getopt
arg	16:20	16:24	5	argc
water	16:20	0:0	6	argc
arg	16:26	16:30	5	argv
water	16:26	0:0	6	argv
arg	16:32	16:42	5	"C:c:p:r:"
water	16:32	0:0	6	"C:c:p:r:"
water	16:43	0:0	4	)
op	16:45	0:0	4	!=
op	16:48	0:0	4	-
water	16:49	0:0	4	1
stmts	17:2	39:2	3	
switch	17:2	39:2	4	(c)
cond	17:10	17:10	5	c
water	17:10	0:0	6	c
stmts	17:13	39:2	5	
water	17:13	0:0	6	{
water	18:2	0:0	6	case
water	18:7	0:0	6	'C'
water	18:10	0:0	6	:
water	19:3	0:0	6	cmap
op	19:8	0:0	6	=
call	19:10	19:21	6	atoi
arg	19:15	19:21	7	optarg
water	19:15	0:0	8	optarg
water	19:22	0:0	6	;
break	20:3	20:8	6	
water	21:2	0:0	6	case
water	21:7	0:0	6	'c'
water	21:10	0:0	6	:
water	22:3	0:0	6	if
water	22:6	0:0	6	(
op	22:7	0:0	6	!
call	22:8	22:37	6	processCompressOptions
arg	22:31	22:37	7	optarg
water	22:31	0:0	8	optarg
water	22:38	0:0	6	)
call	23:4	23:10	6	usage
water	23:11	0:0	6	;
break	24:3	24:8	6	
water	25:2	0:0	6	case
water	25:7	0:0	6	'p'
water	25:10	0:0	6	:
water	26:3	0:0	6	if
water	26:6	0:0	6	(
call	26:7	26:31	6	streq
arg	26:13	26:19	7	optarg
water	26:13	0:0	8	optarg
arg	26:21	26:31	7	"separate"
water	26:21	0:0	8	"separate"
water	26:32	0:0	6	)
water	27:4	0:0	6	config
op	27:11	0:0	6	=
water	27:13	0:0	6	PLANARCONFIG_SEPARATE
water	27:34	0:0	6	;
else	28:3	29:32	6
stmts	28:8	29:32	7	
if	28:8	29:32	8	(streq (optarg ,"contig" ))
cond	28:12	28:34	9	streq (optarg ,"contig" )
call	28:12	28:34	10	streq
arg	28:18	28:24	11	optarg
water	28:18	0:0	12	optarg
arg	28:26	28:34	11	"contig"
water	28:26	0:0	12	"contig"
stmts	29:4	29:32	9	
water	29:4	0:0	10	config
op	29:11	0:0	10	=
water	29:13	0:0	10	PLANARCONFIG_CONTIG
water	29:32	0:0	10	;
else	30:3	31:11	6
stmts	31:4	31:11	7	
call	31:4	31:10	8	usage
water	31:11	0:0	8	;
break	32:3	32:8	6	
water	33:2	0:0	6	case
water	33:7	0:0	6	'r'
water	33:10	0:0	6	:
water	34:3	0:0	6	rowsperstrip
op	34:16	0:0	6	=
call	34:18	34:29	6	atoi
arg	34:23	34:29	7	optarg
water	34:23	0:0	8	optarg
water	34:30	0:0	6	;
break	35:3	35:8	6	
water	36:2	0:0	6	case
water	36:7	0:0	6	'?'
water	36:10	0:0	6	:
call	37:3	37:9	6	usage
water	37:10	0:0	6	;
water	39:2	0:0	6	}
if	40:1	41:9	2	(argc - optind != 2)
cond	40:5	40:22	3	argc - optind != 2
water	40:5	0:0	4	argc
op	40:10	0:0	4	-
water	40:12	0:0	4	optind
op	40:19	0:0	4	!=
water	40:22	0:0	4	2
stmts	41:2	41:9	3	
call	41:2	41:8	4	usage
water	41:9	0:0	4	;
water	42:1	0:0	2	in
op	42:4	0:0	2	=
call	42:6	42:32	2	TIFFOpen
arg	42:15	42:27	3	argv[optind]
water	42:15	0:0	4	argv
op	42:19	0:0	4	[
water	42:20	0:0	4	optind
op	42:26	0:0	4	]
arg	42:29	42:32	3	"r"
water	42:29	0:0	4	"r"
water	42:33	0:0	2	;
if	43:1	44:13	2	(in == NULL)
cond	43:5	43:11	3	in == NULL
water	43:5	0:0	4	in
op	43:8	0:0	4	==
water	43:11	0:0	4	NULL
stmts	44:2	44:13	3	
return	44:2	44:13	4	(-1)
water	44:9	0:0	5	(
op	44:10	0:0	5	-
water	44:11	0:0	5	1
water	44:12	0:0	5	)
if	45:1	50:1	2	(!TIFFGetField (in ,TIFFTAG_PHOTOMETRIC ,& shortv ) || shortv != PHOTOMETRIC_PALETTE)
cond	45:5	46:15	3	!TIFFGetField (in ,TIFFTAG_PHOTOMETRIC ,& shortv ) || shortv != PHOTOMETRIC_PALETTE
op	45:5	0:0	4	!
call	45:6	45:51	4	TIFFGetField
arg	45:19	45:21	5	in
water	45:19	0:0	6	in
arg	45:23	45:42	5	TIFFTAG_PHOTOMETRIC
water	45:23	0:0	6	TIFFTAG_PHOTOMETRIC
arg	45:44	45:51	5	&shortv
op	45:44	0:0	6	&
water	45:45	0:0	6	shortv
op	45:53	0:0	4	||
water	46:5	0:0	4	shortv
op	46:12	0:0	4	!=
water	46:15	0:0	4	PHOTOMETRIC_PALETTE
stmts	46:36	50:1	3	
water	46:36	0:0	4	{
call	47:2	48:18	4	fprintf
arg	47:10	47:16	5	stderr
water	47:10	0:0	6	stderr
arg	47:18	47:52	5	"%s: Expecting a palette image.\n"
water	47:18	0:0	6	"%s: Expecting a palette image.\n"
arg	48:6	48:18	5	argv[optind]
water	48:6	0:0	6	argv
op	48:10	0:0	6	[
water	48:11	0:0	6	optind
op	48:17	0:0	6	]
water	48:19	0:0	4	;
return	49:2	49:13	4	(-1)
water	49:9	0:0	5	(
op	49:10	0:0	5	-
water	49:11	0:0	5	1
water	49:12	0:0	5	)
water	50:1	0:0	4	}
if	51:1	56:1	2	(!TIFFGetField (in ,TIFFTAG_COLORMAP ,& rmap ,& gmap ,& bmap ))
cond	51:5	51:60	3	!TIFFGetField (in ,TIFFTAG_COLORMAP ,& rmap ,& gmap ,& bmap )
op	51:5	0:0	4	!
call	51:6	51:60	4	TIFFGetField
arg	51:19	51:21	5	in
water	51:19	0:0	6	in
arg	51:23	51:39	5	TIFFTAG_COLORMAP
water	51:23	0:0	6	TIFFTAG_COLORMAP
arg	51:41	51:46	5	&rmap
op	51:41	0:0	6	&
water	51:42	0:0	6	rmap
arg	51:48	51:53	5	&gmap
op	51:48	0:0	6	&
water	51:49	0:0	6	gmap
arg	51:55	51:60	5	&bmap
op	51:55	0:0	6	&
water	51:56	0:0	6	bmap
stmts	51:63	56:1	3	
water	51:63	0:0	4	{
call	52:2	54:18	4	fprintf
arg	52:10	52:16	5	stderr
water	52:10	0:0	6	stderr
arg	53:6	53:54	5	"%s: No colormap (not a valid palette image).\n"
water	53:6	0:0	6	"%s: No colormap (not a valid palette image).\n"
arg	54:6	54:18	5	argv[optind]
water	54:6	0:0	6	argv
op	54:10	0:0	6	[
water	54:11	0:0	6	optind
op	54:17	0:0	6	]
water	54:19	0:0	4	;
return	55:2	55:13	4	(-1)
water	55:9	0:0	5	(
op	55:10	0:0	5	-
water	55:11	0:0	5	1
water	55:12	0:0	5	)
water	56:1	0:0	4	}
water	57:1	0:0	2	bitspersample
op	57:15	0:0	2	=
water	57:17	0:0	2	0
water	57:18	0:0	2	;
call	58:1	58:55	2	TIFFGetField
arg	58:14	58:16	3	in
water	58:14	0:0	4	in
arg	58:18	58:39	3	TIFFTAG_BITSPERSAMPLE
water	58:18	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	58:41	58:55	3	&bitspersample
op	58:41	0:0	4	&
water	58:42	0:0	4	bitspersample
water	58:56	0:0	2	;
if	59:1	63:1	2	(bitspersample != 8)
cond	59:5	59:22	3	bitspersample != 8
water	59:5	0:0	4	bitspersample
op	59:19	0:0	4	!=
water	59:22	0:0	4	8
stmts	59:25	63:1	3	
water	59:25	0:0	4	{
call	60:2	61:18	4	fprintf
arg	60:10	60:16	5	stderr
water	60:10	0:0	6	stderr
arg	60:18	60:62	5	"%s: Sorry, can only handle 8-bit images.\n"
water	60:18	0:0	6	"%s: Sorry, can only handle 8-bit images.\n"
arg	61:6	61:18	5	argv[optind]
water	61:6	0:0	6	argv
op	61:10	0:0	6	[
water	61:11	0:0	6	optind
op	61:17	0:0	6	]
water	61:19	0:0	4	;
return	62:2	62:13	4	(-1)
water	62:9	0:0	5	(
op	62:10	0:0	5	-
water	62:11	0:0	5	1
water	62:12	0:0	5	)
water	63:1	0:0	4	}
water	64:1	0:0	2	out
op	64:5	0:0	2	=
call	64:7	64:35	2	TIFFOpen
arg	64:16	64:30	3	argv[optind+1]
water	64:16	0:0	4	argv
op	64:20	0:0	4	[
water	64:21	0:0	4	optind
op	64:27	0:0	4	+
water	64:28	0:0	4	1
op	64:29	0:0	4	]
arg	64:32	64:35	3	"w"
water	64:32	0:0	4	"w"
water	64:36	0:0	2	;
if	65:1	66:13	2	(out == NULL)
cond	65:5	65:12	3	out == NULL
water	65:5	0:0	4	out
op	65:9	0:0	4	==
water	65:12	0:0	4	NULL
stmts	66:2	66:13	3	
return	66:2	66:13	4	(-2)
water	66:9	0:0	5	(
op	66:10	0:0	5	-
water	66:11	0:0	5	2
water	66:12	0:0	5	)
call	67:1	67:15	2	cpTags
arg	67:8	67:10	3	in
water	67:8	0:0	4	in
arg	67:12	67:15	3	out
water	67:12	0:0	4	out
water	67:16	0:0	2	;
call	68:1	68:49	2	TIFFGetField
arg	68:14	68:16	3	in
water	68:14	0:0	4	in
arg	68:18	68:36	3	TIFFTAG_IMAGEWIDTH
water	68:18	0:0	4	TIFFTAG_IMAGEWIDTH
arg	68:38	68:49	3	&imagewidth
op	68:38	0:0	4	&
water	68:39	0:0	4	imagewidth
water	68:50	0:0	2	;
call	69:1	69:51	2	TIFFGetField
arg	69:14	69:16	3	in
water	69:14	0:0	4	in
arg	69:18	69:37	3	TIFFTAG_IMAGELENGTH
water	69:18	0:0	4	TIFFTAG_IMAGELENGTH
arg	69:39	69:51	3	&imagelength
op	69:39	0:0	4	&
water	69:40	0:0	4	imagelength
water	69:52	0:0	2	;
if	70:1	71:53	2	(compression != ( uint16 ) - 1)
cond	70:5	70:29	3	compression != ( uint16 ) - 1
water	70:5	0:0	4	compression
op	70:17	0:0	4	!=
water	70:20	0:0	4	(
water	70:21	0:0	4	uint16
water	70:27	0:0	4	)
op	70:28	0:0	4	-
water	70:29	0:0	4	1
stmts	71:2	71:53	3	
call	71:2	71:52	4	TIFFSetField
arg	71:15	71:18	5	out
water	71:15	0:0	6	out
arg	71:20	71:39	5	TIFFTAG_COMPRESSION
water	71:20	0:0	6	TIFFTAG_COMPRESSION
arg	71:41	71:52	5	compression
water	71:41	0:0	6	compression
water	71:53	0:0	4	;
else	72:1	73:53	2
stmts	73:2	73:53	3	
call	73:2	73:52	4	TIFFGetField
arg	73:15	73:17	5	in
water	73:15	0:0	6	in
arg	73:19	73:38	5	TIFFTAG_COMPRESSION
water	73:19	0:0	6	TIFFTAG_COMPRESSION
arg	73:40	73:52	5	&compression
op	73:40	0:0	6	&
water	73:41	0:0	6	compression
water	73:53	0:0	4	;
switch	74:1	88:1	2	(compression)
cond	74:9	74:9	3	compression
water	74:9	0:0	4	compression
stmts	74:22	88:1	3	
water	74:22	0:0	4	{
label	75:1	75:22	4	case COMPRESSION_JPEG :
if	76:2	77:34	4	(jpegcolormode == JPEGCOLORMODE_RGB)
cond	76:6	76:23	5	jpegcolormode == JPEGCOLORMODE_RGB
water	76:6	0:0	6	jpegcolormode
op	76:20	0:0	6	==
water	76:23	0:0	6	JPEGCOLORMODE_RGB
stmts	77:3	77:34	5	
water	77:3	0:0	6	photometric
op	77:15	0:0	6	=
water	77:17	0:0	6	PHOTOMETRIC_YCBCR
water	77:34	0:0	6	;
else	78:2	79:32	4
stmts	79:3	79:32	5	
water	79:3	0:0	6	photometric
op	79:15	0:0	6	=
water	79:17	0:0	6	PHOTOMETRIC_RGB
water	79:32	0:0	6	;
call	80:2	80:48	4	TIFFSetField
arg	80:15	80:18	5	out
water	80:15	0:0	6	out
arg	80:20	80:39	5	TIFFTAG_JPEGQUALITY
water	80:20	0:0	6	TIFFTAG_JPEGQUALITY
arg	80:41	80:48	5	quality
water	80:41	0:0	6	quality
water	80:49	0:0	4	;
call	81:2	81:56	4	TIFFSetField
arg	81:15	81:18	5	out
water	81:15	0:0	6	out
arg	81:20	81:41	5	TIFFTAG_JPEGCOLORMODE
water	81:20	0:0	6	TIFFTAG_JPEGCOLORMODE
arg	81:43	81:56	5	jpegcolormode
water	81:43	0:0	6	jpegcolormode
water	81:57	0:0	4	;
break	82:2	82:7	4	
label	83:1	83:21	4	case COMPRESSION_LZW :
label	84:1	84:25	4	case COMPRESSION_DEFLATE :
if	85:2	86:50	4	(predictor != 0)
cond	85:6	85:19	5	predictor != 0
water	85:6	0:0	6	predictor
op	85:16	0:0	6	!=
water	85:19	0:0	6	0
stmts	86:3	86:50	5	
call	86:3	86:49	6	TIFFSetField
arg	86:16	86:19	7	out
water	86:16	0:0	8	out
arg	86:21	86:38	7	TIFFTAG_PREDICTOR
water	86:21	0:0	8	TIFFTAG_PREDICTOR
arg	86:40	86:49	7	predictor
water	86:40	0:0	8	predictor
water	86:50	0:0	6	;
break	87:2	87:7	4	
water	88:1	0:0	4	}
call	89:1	89:51	2	TIFFSetField
arg	89:14	89:17	3	out
water	89:14	0:0	4	out
arg	89:19	89:38	3	TIFFTAG_PHOTOMETRIC
water	89:19	0:0	4	TIFFTAG_PHOTOMETRIC
arg	89:40	89:51	3	photometric
water	89:40	0:0	4	photometric
water	89:52	0:0	2	;
call	90:1	90:45	2	TIFFSetField
arg	90:14	90:17	3	out
water	90:14	0:0	4	out
arg	90:19	90:42	3	TIFFTAG_SAMPLESPERPIXEL
water	90:19	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	90:44	90:45	3	3
water	90:44	0:0	4	3
water	90:46	0:0	2	;
call	91:1	91:47	2	TIFFSetField
arg	91:14	91:17	3	out
water	91:14	0:0	4	out
arg	91:19	91:39	3	TIFFTAG_PLANARCONFIG
water	91:19	0:0	4	TIFFTAG_PLANARCONFIG
arg	91:41	91:47	3	config
water	91:41	0:0	4	config
water	91:48	0:0	2	;
call	92:1	93:59	2	TIFFSetField
arg	92:14	92:17	3	out
water	92:14	0:0	4	out
arg	92:19	92:39	3	TIFFTAG_ROWSPERSTRIP
water	92:19	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	93:5	93:59	3	rowsperstrip=TIFFDefaultStripSize(out,rowsperstrip)
water	93:5	0:0	4	rowsperstrip
op	93:18	0:0	4	=
call	93:20	93:58	4	TIFFDefaultStripSize
arg	93:41	93:44	5	out
water	93:41	0:0	6	out
arg	93:46	93:58	5	rowsperstrip
water	93:46	0:0	6	rowsperstrip
water	93:60	0:0	2	;
water	94:1	0:0	2	(
water	94:2	0:0	2	void
water	94:6	0:0	2	)
call	94:8	94:54	2	TIFFGetField
arg	94:21	94:23	3	in
water	94:21	0:0	4	in
arg	94:25	94:45	3	TIFFTAG_PLANARCONFIG
water	94:25	0:0	4	TIFFTAG_PLANARCONFIG
arg	94:47	94:54	3	&shortv
op	94:47	0:0	4	&
water	94:48	0:0	4	shortv
water	94:55	0:0	2	;
if	95:1	96:54	2	(cmap == - 1)
cond	95:5	95:14	3	cmap == - 1
water	95:5	0:0	4	cmap
op	95:10	0:0	4	==
op	95:13	0:0	4	-
water	95:14	0:0	4	1
stmts	96:2	96:54	3	
water	96:2	0:0	4	cmap
op	96:7	0:0	4	=
call	96:9	96:53	4	checkcmap
arg	96:19	96:35	5	1<<bitspersample
water	96:19	0:0	6	1
op	96:20	0:0	6	<<
water	96:22	0:0	6	bitspersample
arg	96:37	96:41	5	rmap
water	96:37	0:0	6	rmap
arg	96:43	96:47	5	gmap
water	96:43	0:0	6	gmap
arg	96:49	96:53	5	bmap
water	96:49	0:0	6	bmap
water	96:54	0:0	4	;
if	97:1	108:1	2	(cmap == 16)
cond	97:5	97:13	3	cmap == 16
water	97:5	0:0	4	cmap
op	97:10	0:0	4	==
water	97:13	0:0	4	16
stmts	97:17	108:1	3	
water	97:17	0:0	4	{
decl	101:2	101:7	4	int	i
for	102:2	107:2	4	(i = ( 1 << bitspersample ) - 1 ;i >= 0;i --)
forinit	102:7	102:31	5	i = ( 1 << bitspersample ) - 1 ;
water	102:7	0:0	6	i
op	102:9	0:0	6	=
water	102:11	0:0	6	(
water	102:12	0:0	6	1
op	102:13	0:0	6	<<
water	102:15	0:0	6	bitspersample
water	102:28	0:0	6	)
op	102:29	0:0	6	-
water	102:30	0:0	6	1
water	102:31	0:0	6	;
cond	102:33	102:38	5	i >= 0
water	102:33	0:0	6	i
op	102:35	0:0	6	>=
water	102:38	0:0	6	0
forexpr	102:41	102:42	5	i --
water	102:41	0:0	6	i
op	102:42	0:0	6	--
stmts	102:46	107:2	5	
water	102:46	0:0	6	{
water	104:3	0:0	6	rmap
op	104:7	0:0	6	[
water	104:8	0:0	6	i
op	104:9	0:0	6	]
op	104:11	0:0	6	=
call	104:13	104:24	6	CVT
arg	104:17	104:24	7	rmap[i]
water	104:17	0:0	8	rmap
op	104:21	0:0	8	[
water	104:22	0:0	8	i
op	104:23	0:0	8	]
water	104:25	0:0	6	;
water	105:3	0:0	6	gmap
op	105:7	0:0	6	[
water	105:8	0:0	6	i
op	105:9	0:0	6	]
op	105:11	0:0	6	=
call	105:13	105:24	6	CVT
arg	105:17	105:24	7	gmap[i]
water	105:17	0:0	8	gmap
op	105:21	0:0	8	[
water	105:22	0:0	8	i
op	105:23	0:0	8	]
water	105:25	0:0	6	;
water	106:3	0:0	6	bmap
op	106:7	0:0	6	[
water	106:8	0:0	6	i
op	106:9	0:0	6	]
op	106:11	0:0	6	=
call	106:13	106:24	6	CVT
arg	106:17	106:24	7	bmap[i]
water	106:17	0:0	8	bmap
op	106:21	0:0	8	[
water	106:22	0:0	8	i
op	106:23	0:0	8	]
water	106:25	0:0	6	;
water	107:2	0:0	6	}
water	108:1	0:0	4	}
water	109:1	0:0	2	{
decl	109:3	109:29	2	unsigned char	*ibuf
water	109:22	0:0	2	,
decl	109:3	109:29	2	unsigned char	*obuf
water	110:3	0:0	2	register
water	110:12	0:0	2	unsigned
water	110:21	0:0	2	char
op	110:25	0:0	2	*
water	110:27	0:0	2	pp
water	110:29	0:0	2	;
water	111:3	0:0	2	register
water	111:12	0:0	2	uint32
water	111:19	0:0	2	x
water	111:20	0:0	2	;
water	112:3	0:0	2	ibuf
op	112:8	0:0	2	=
water	112:10	0:0	2	(
water	112:11	0:0	2	unsigned
water	112:20	0:0	2	char
op	112:24	0:0	2	*
water	112:25	0:0	2	)
call	112:26	112:58	2	_TIFFmalloc
arg	112:38	112:58	3	TIFFScanlineSize(in)
call	112:38	112:57	4	TIFFScanlineSize
arg	112:55	112:57	5	in
water	112:55	0:0	6	in
water	112:59	0:0	2	;
water	113:3	0:0	2	obuf
op	113:8	0:0	2	=
water	113:10	0:0	2	(
water	113:11	0:0	2	unsigned
water	113:20	0:0	2	char
op	113:24	0:0	2	*
water	113:25	0:0	2	)
call	113:26	113:59	2	_TIFFmalloc
arg	113:38	113:59	3	TIFFScanlineSize(out)
call	113:38	113:58	4	TIFFScanlineSize
arg	113:55	113:58	5	out
water	113:55	0:0	6	out
water	113:60	0:0	2	;
switch	114:3	147:3	2	(config)
cond	114:11	114:11	3	config
water	114:11	0:0	4	config
stmts	114:19	147:3	3	
water	114:19	0:0	4	{
label	115:3	115:27	4	case PLANARCONFIG_CONTIG :
for	116:2	127:2	4	(row = 0 ;row < imagelength;row ++)
forinit	116:7	116:14	5	row = 0 ;
water	116:7	0:0	6	row
op	116:11	0:0	6	=
water	116:13	0:0	6	0
water	116:14	0:0	6	;
cond	116:16	116:22	5	row < imagelength
water	116:16	0:0	6	row
op	116:20	0:0	6	<
water	116:22	0:0	6	imagelength
forexpr	116:35	116:38	5	row ++
water	116:35	0:0	6	row
op	116:38	0:0	6	++
stmts	116:42	127:2	5	
water	116:42	0:0	6	{
if	117:3	118:13	6	(!TIFFReadScanline (in ,ibuf ,row ,0 ))
cond	117:7	117:41	7	!TIFFReadScanline (in ,ibuf ,row ,0 )
op	117:7	0:0	8	!
call	117:8	117:41	8	TIFFReadScanline
arg	117:25	117:27	9	in
water	117:25	0:0	10	in
arg	117:29	117:33	9	ibuf
water	117:29	0:0	10	ibuf
arg	117:35	117:38	9	row
water	117:35	0:0	10	row
arg	117:40	117:41	9	0
water	117:40	0:0	10	0
stmts	118:4	118:13	7	
goto	118:4	118:13	8	done
water	118:9	0:0	9	done
water	119:3	0:0	6	pp
op	119:6	0:0	6	=
water	119:8	0:0	6	obuf
water	119:12	0:0	6	;
for	120:3	124:3	6	(x = 0 ;x < imagewidth;x ++)
forinit	120:8	120:13	7	x = 0 ;
water	120:8	0:0	8	x
op	120:10	0:0	8	=
water	120:12	0:0	8	0
water	120:13	0:0	8	;
cond	120:15	120:19	7	x < imagewidth
water	120:15	0:0	8	x
op	120:17	0:0	8	<
water	120:19	0:0	8	imagewidth
forexpr	120:31	120:32	7	x ++
water	120:31	0:0	8	x
op	120:32	0:0	8	++
stmts	120:36	124:3	7	
water	120:36	0:0	8	{
op	121:4	0:0	8	*
water	121:5	0:0	8	pp
op	121:7	0:0	8	++
op	121:10	0:0	8	=
water	121:12	0:0	8	(
water	121:13	0:0	8	unsigned
water	121:22	0:0	8	char
water	121:26	0:0	8	)
water	121:28	0:0	8	rmap
op	121:32	0:0	8	[
water	121:33	0:0	8	ibuf
op	121:37	0:0	8	[
water	121:38	0:0	8	x
op	121:39	0:0	8	]
op	121:40	0:0	8	]
water	121:41	0:0	8	;
op	122:4	0:0	8	*
water	122:5	0:0	8	pp
op	122:7	0:0	8	++
op	122:10	0:0	8	=
water	122:12	0:0	8	(
water	122:13	0:0	8	unsigned
water	122:22	0:0	8	char
water	122:26	0:0	8	)
water	122:28	0:0	8	gmap
op	122:32	0:0	8	[
water	122:33	0:0	8	ibuf
op	122:37	0:0	8	[
water	122:38	0:0	8	x
op	122:39	0:0	8	]
op	122:40	0:0	8	]
water	122:41	0:0	8	;
op	123:4	0:0	8	*
water	123:5	0:0	8	pp
op	123:7	0:0	8	++
op	123:10	0:0	8	=
water	123:12	0:0	8	(
water	123:13	0:0	8	unsigned
water	123:22	0:0	8	char
water	123:26	0:0	8	)
water	123:28	0:0	8	bmap
op	123:32	0:0	8	[
water	123:33	0:0	8	ibuf
op	123:37	0:0	8	[
water	123:38	0:0	8	x
op	123:39	0:0	8	]
op	123:40	0:0	8	]
water	123:41	0:0	8	;
water	124:3	0:0	8	}
if	125:3	126:13	6	(!TIFFWriteScanline (out ,obuf ,row ,0 ))
cond	125:7	125:43	7	!TIFFWriteScanline (out ,obuf ,row ,0 )
op	125:7	0:0	8	!
call	125:8	125:43	8	TIFFWriteScanline
arg	125:26	125:29	9	out
water	125:26	0:0	10	out
arg	125:31	125:35	9	obuf
water	125:31	0:0	10	obuf
arg	125:37	125:40	9	row
water	125:37	0:0	10	row
arg	125:42	125:43	9	0
water	125:42	0:0	10	0
stmts	126:4	126:13	7	
goto	126:4	126:13	8	done
water	126:9	0:0	9	done
water	127:2	0:0	6	}
break	128:2	128:7	4	
label	129:3	129:29	4	case PLANARCONFIG_SEPARATE :
for	130:2	145:2	4	(row = 0 ;row < imagelength;row ++)
forinit	130:7	130:14	5	row = 0 ;
water	130:7	0:0	6	row
op	130:11	0:0	6	=
water	130:13	0:0	6	0
water	130:14	0:0	6	;
cond	130:16	130:22	5	row < imagelength
water	130:16	0:0	6	row
op	130:20	0:0	6	<
water	130:22	0:0	6	imagelength
forexpr	130:35	130:38	5	row ++
water	130:35	0:0	6	row
op	130:38	0:0	6	++
stmts	130:42	145:2	5	
water	130:42	0:0	6	{
if	131:3	132:13	6	(!TIFFReadScanline (in ,ibuf ,row ,0 ))
cond	131:7	131:41	7	!TIFFReadScanline (in ,ibuf ,row ,0 )
op	131:7	0:0	8	!
call	131:8	131:41	8	TIFFReadScanline
arg	131:25	131:27	9	in
water	131:25	0:0	10	in
arg	131:29	131:33	9	ibuf
water	131:29	0:0	10	ibuf
arg	131:35	131:38	9	row
water	131:35	0:0	10	row
arg	131:40	131:41	9	0
water	131:40	0:0	10	0
stmts	132:4	132:13	7	
goto	132:4	132:13	8	done
water	132:9	0:0	9	done
for	133:3	134:41	6	(pp = obuf , x = 0 ;x < imagewidth;x ++)
forinit	133:8	133:24	7	pp = obuf , x = 0 ;
water	133:8	0:0	8	pp
op	133:11	0:0	8	=
water	133:13	0:0	8	obuf
water	133:17	0:0	8	,
water	133:19	0:0	8	x
op	133:21	0:0	8	=
water	133:23	0:0	8	0
water	133:24	0:0	8	;
cond	133:26	133:30	7	x < imagewidth
water	133:26	0:0	8	x
op	133:28	0:0	8	<
water	133:30	0:0	8	imagewidth
forexpr	133:42	133:43	7	x ++
water	133:42	0:0	8	x
op	133:43	0:0	8	++
stmts	134:4	134:41	7	
op	134:4	0:0	8	*
water	134:5	0:0	8	pp
op	134:7	0:0	8	++
op	134:10	0:0	8	=
water	134:12	0:0	8	(
water	134:13	0:0	8	unsigned
water	134:22	0:0	8	char
water	134:26	0:0	8	)
water	134:28	0:0	8	rmap
op	134:32	0:0	8	[
water	134:33	0:0	8	ibuf
op	134:37	0:0	8	[
water	134:38	0:0	8	x
op	134:39	0:0	8	]
op	134:40	0:0	8	]
water	134:41	0:0	8	;
if	135:3	136:13	6	(!TIFFWriteScanline (out ,obuf ,row ,0 ))
cond	135:7	135:43	7	!TIFFWriteScanline (out ,obuf ,row ,0 )
op	135:7	0:0	8	!
call	135:8	135:43	8	TIFFWriteScanline
arg	135:26	135:29	9	out
water	135:26	0:0	10	out
arg	135:31	135:35	9	obuf
water	135:31	0:0	10	obuf
arg	135:37	135:40	9	row
water	135:37	0:0	10	row
arg	135:42	135:43	9	0
water	135:42	0:0	10	0
stmts	136:4	136:13	7	
goto	136:4	136:13	8	done
water	136:9	0:0	9	done
for	137:3	138:41	6	(pp = obuf , x = 0 ;x < imagewidth;x ++)
forinit	137:8	137:24	7	pp = obuf , x = 0 ;
water	137:8	0:0	8	pp
op	137:11	0:0	8	=
water	137:13	0:0	8	obuf
water	137:17	0:0	8	,
water	137:19	0:0	8	x
op	137:21	0:0	8	=
water	137:23	0:0	8	0
water	137:24	0:0	8	;
cond	137:26	137:30	7	x < imagewidth
water	137:26	0:0	8	x
op	137:28	0:0	8	<
water	137:30	0:0	8	imagewidth
forexpr	137:42	137:43	7	x ++
water	137:42	0:0	8	x
op	137:43	0:0	8	++
stmts	138:4	138:41	7	
op	138:4	0:0	8	*
water	138:5	0:0	8	pp
op	138:7	0:0	8	++
op	138:10	0:0	8	=
water	138:12	0:0	8	(
water	138:13	0:0	8	unsigned
water	138:22	0:0	8	char
water	138:26	0:0	8	)
water	138:28	0:0	8	gmap
op	138:32	0:0	8	[
water	138:33	0:0	8	ibuf
op	138:37	0:0	8	[
water	138:38	0:0	8	x
op	138:39	0:0	8	]
op	138:40	0:0	8	]
water	138:41	0:0	8	;
if	139:3	140:13	6	(!TIFFWriteScanline (out ,obuf ,row ,0 ))
cond	139:7	139:43	7	!TIFFWriteScanline (out ,obuf ,row ,0 )
op	139:7	0:0	8	!
call	139:8	139:43	8	TIFFWriteScanline
arg	139:26	139:29	9	out
water	139:26	0:0	10	out
arg	139:31	139:35	9	obuf
water	139:31	0:0	10	obuf
arg	139:37	139:40	9	row
water	139:37	0:0	10	row
arg	139:42	139:43	9	0
water	139:42	0:0	10	0
stmts	140:4	140:13	7	
goto	140:4	140:13	8	done
water	140:9	0:0	9	done
for	141:3	142:41	6	(pp = obuf , x = 0 ;x < imagewidth;x ++)
forinit	141:8	141:24	7	pp = obuf , x = 0 ;
water	141:8	0:0	8	pp
op	141:11	0:0	8	=
water	141:13	0:0	8	obuf
water	141:17	0:0	8	,
water	141:19	0:0	8	x
op	141:21	0:0	8	=
water	141:23	0:0	8	0
water	141:24	0:0	8	;
cond	141:26	141:30	7	x < imagewidth
water	141:26	0:0	8	x
op	141:28	0:0	8	<
water	141:30	0:0	8	imagewidth
forexpr	141:42	141:43	7	x ++
water	141:42	0:0	8	x
op	141:43	0:0	8	++
stmts	142:4	142:41	7	
op	142:4	0:0	8	*
water	142:5	0:0	8	pp
op	142:7	0:0	8	++
op	142:10	0:0	8	=
water	142:12	0:0	8	(
water	142:13	0:0	8	unsigned
water	142:22	0:0	8	char
water	142:26	0:0	8	)
water	142:28	0:0	8	bmap
op	142:32	0:0	8	[
water	142:33	0:0	8	ibuf
op	142:37	0:0	8	[
water	142:38	0:0	8	x
op	142:39	0:0	8	]
op	142:40	0:0	8	]
water	142:41	0:0	8	;
if	143:3	144:13	6	(!TIFFWriteScanline (out ,obuf ,row ,0 ))
cond	143:7	143:43	7	!TIFFWriteScanline (out ,obuf ,row ,0 )
op	143:7	0:0	8	!
call	143:8	143:43	8	TIFFWriteScanline
arg	143:26	143:29	9	out
water	143:26	0:0	10	out
arg	143:31	143:35	9	obuf
water	143:31	0:0	10	obuf
arg	143:37	143:40	9	row
water	143:37	0:0	10	row
arg	143:42	143:43	9	0
water	143:42	0:0	10	0
stmts	144:4	144:13	7	
goto	144:4	144:13	8	done
water	144:9	0:0	9	done
water	145:2	0:0	6	}
break	146:2	146:7	4	
water	147:3	0:0	4	}
call	148:3	148:17	2	_TIFFfree
arg	148:13	148:17	3	ibuf
water	148:13	0:0	4	ibuf
water	148:18	0:0	2	;
call	149:3	149:17	2	_TIFFfree
arg	149:13	149:17	3	obuf
water	149:13	0:0	4	obuf
water	149:18	0:0	2	;
water	150:1	0:0	2	}
label	151:0	151:4	2	done :
water	152:1	0:0	2	(
water	152:2	0:0	2	void
water	152:6	0:0	2	)
call	152:8	152:20	2	TIFFClose
arg	152:18	152:20	3	in
water	152:18	0:0	4	in
water	152:21	0:0	2	;
water	153:1	0:0	2	(
water	153:2	0:0	2	void
water	153:6	0:0	2	)
call	153:8	153:21	2	TIFFClose
arg	153:18	153:21	3	out
water	153:18	0:0	4	out
water	153:22	0:0	2	;
return	154:1	154:11	2	(0)
water	154:8	0:0	3	(
water	154:9	0:0	3	0
water	154:10	0:0	3	)

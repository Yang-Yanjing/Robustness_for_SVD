decl	1:0	1:27	0	void	Usage
water	1:25	0:0	0	(
water	1:26	0:0	0	)
func	2:0	81:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:30	2	char * *	argv
stmnts	0:0	80:12	1	
decl	4:4	5:61	2	int	bits_per_pixel
op	4:35	0:0	2	=
water	4:37	0:0	2	8
water	4:38	0:0	2	,
decl	4:4	5:61	2	int	cmsize
water	4:46	0:0	2	,
decl	4:4	5:61	2	int	i
water	4:49	0:0	2	,
decl	4:4	5:61	2	int	j
water	4:52	0:0	2	,
decl	4:4	5:61	2	int	k
water	4:55	0:0	2	,
decl	4:4	5:61	2	int	gray_index
water	5:30	0:0	2	,
decl	4:4	5:61	2	int	chunk_size
op	5:43	0:0	2	=
water	5:45	0:0	2	32
water	5:47	0:0	2	,
decl	4:4	5:61	2	int	nchunks
op	5:57	0:0	2	=
water	5:59	0:0	2	16
decl	6:4	6:29	2	unsigned char	*scan_line
decl	7:4	7:24	2	uint16	*gray
decl	8:4	8:38	2	float	refblackwhite[2*1]
decl	9:4	9:23	2	TIFF	*tif
water	10:4	0:0	2	programName
op	10:16	0:0	2	=
water	10:18	0:0	2	argv
op	10:22	0:0	2	[
water	10:23	0:0	2	0
op	10:24	0:0	2	]
water	10:25	0:0	2	;
if	11:4	12:15	2	(argc != 4)
cond	11:8	11:16	3	argc != 4
water	11:8	0:0	4	argc
op	11:13	0:0	4	!=
water	11:16	0:0	4	4
stmts	12:8	12:15	3	
call	12:8	12:14	4	Usage
water	12:15	0:0	4	;
if	13:4	14:39	2	(!strcmp (argv [ 1 ] ,"-depth" ))
cond	13:8	13:33	3	!strcmp (argv [ 1 ] ,"-depth" )
op	13:8	0:0	4	!
call	13:9	13:33	4	strcmp
arg	13:16	13:23	5	argv[1]
water	13:16	0:0	6	argv
op	13:20	0:0	6	[
water	13:21	0:0	6	1
op	13:22	0:0	6	]
arg	13:25	13:33	5	"-depth"
water	13:25	0:0	6	"-depth"
stmts	14:9	14:39	3	
water	14:9	0:0	4	bits_per_pixel
op	14:24	0:0	4	=
call	14:26	14:38	4	atoi
arg	14:31	14:38	5	argv[2]
water	14:31	0:0	6	argv
op	14:35	0:0	6	[
water	14:36	0:0	6	2
op	14:37	0:0	6	]
water	14:39	0:0	4	;
else	15:4	16:16	2
stmts	16:9	16:16	3	
call	16:9	16:15	4	Usage
water	16:16	0:0	4	;
switch	17:4	32:4	2	(bits_per_pixel)
cond	17:12	17:12	3	bits_per_pixel
water	17:12	0:0	4	bits_per_pixel
stmts	17:28	32:4	3	
water	17:28	0:0	4	{
label	18:8	18:14	4	case 8 :
water	19:12	0:0	4	nchunks
op	19:20	0:0	4	=
water	19:22	0:0	4	16
water	19:24	0:0	4	;
water	20:12	0:0	4	chunk_size
op	20:23	0:0	4	=
water	20:25	0:0	4	32
water	20:27	0:0	4	;
break	21:12	21:17	4	
label	22:8	22:14	4	case 4 :
water	23:12	0:0	4	nchunks
op	23:20	0:0	4	=
water	23:22	0:0	4	4
water	23:23	0:0	4	;
water	24:12	0:0	4	chunk_size
op	24:23	0:0	4	=
water	24:25	0:0	4	128
water	24:28	0:0	4	;
break	25:12	25:17	4	
label	26:8	26:14	4	case 2 :
water	27:12	0:0	4	nchunks
op	27:20	0:0	4	=
water	27:22	0:0	4	2
water	27:23	0:0	4	;
water	28:12	0:0	4	chunk_size
op	28:23	0:0	4	=
water	28:25	0:0	4	256
water	28:28	0:0	4	;
break	29:12	29:17	4	
label	30:8	30:15	4	default :
call	31:12	31:18	4	Usage
water	31:19	0:0	4	;
water	32:4	0:0	4	}
water	33:4	0:0	2	cmsize
op	33:11	0:0	2	=
water	33:13	0:0	2	nchunks
op	33:21	0:0	2	*
water	33:23	0:0	2	nchunks
water	33:30	0:0	2	;
water	34:4	0:0	2	gray
op	34:9	0:0	2	=
water	34:11	0:0	2	(
water	34:12	0:0	2	uint16
op	34:19	0:0	2	*
water	34:20	0:0	2	)
call	34:22	34:52	2	malloc
arg	34:29	34:52	3	cmsize*sizeof(uint16)
water	34:29	0:0	4	cmsize
op	34:36	0:0	4	*
op	34:38	0:0	4	sizeof
water	34:44	0:0	4	(
water	34:45	0:0	4	uint16
water	34:51	0:0	4	)
water	34:53	0:0	2	;
water	35:4	0:0	2	gray
op	35:8	0:0	2	[
water	35:9	0:0	2	0
op	35:10	0:0	2	]
op	35:12	0:0	2	=
water	35:14	0:0	2	3000
water	35:18	0:0	2	;
for	36:4	37:69	2	(i = 1 ;i < cmsize;i ++)
forinit	36:9	36:14	3	i = 1 ;
water	36:9	0:0	4	i
op	36:11	0:0	4	=
water	36:13	0:0	4	1
water	36:14	0:0	4	;
cond	36:16	36:20	3	i < cmsize
water	36:16	0:0	4	i
op	36:18	0:0	4	<
water	36:20	0:0	4	cmsize
forexpr	36:28	36:29	3	i ++
water	36:28	0:0	4	i
op	36:29	0:0	4	++
stmts	37:8	37:69	3	
water	37:8	0:0	4	gray
op	37:12	0:0	4	[
water	37:13	0:0	4	i
op	37:14	0:0	4	]
op	37:16	0:0	4	=
call	37:18	37:68	4	(uint16)
arg	37:28	37:68	5	-log10((double)i/(cmsize-1))*1000
op	37:28	0:0	6	-
call	37:29	37:60	6	log10
arg	37:35	37:60	7	(double)i/(cmsize-1)
water	37:35	0:0	8	(
water	37:36	0:0	8	double
water	37:42	0:0	8	)
water	37:44	0:0	8	i
op	37:46	0:0	8	/
water	37:48	0:0	8	(
water	37:49	0:0	8	cmsize
op	37:56	0:0	8	-
water	37:58	0:0	8	1
water	37:59	0:0	8	)
op	37:62	0:0	6	*
water	37:64	0:0	6	1000
water	37:69	0:0	4	;
water	38:4	0:0	2	refblackwhite
op	38:17	0:0	2	[
water	38:18	0:0	2	0
op	38:19	0:0	2	]
op	38:21	0:0	2	=
water	38:23	0:0	2	0
op	38:24	0:0	2	.
water	38:25	0:0	2	0
water	38:26	0:0	2	;
water	39:4	0:0	2	refblackwhite
op	39:17	0:0	2	[
water	39:18	0:0	2	1
op	39:19	0:0	2	]
op	39:21	0:0	2	=
call	39:23	39:55	2	(float)
arg	39:31	39:55	3	(1L<<bits_per_pixel)-1
water	39:31	0:0	4	(
water	39:32	0:0	4	1
water	39:33	0:0	4	L
op	39:34	0:0	4	<<
water	39:36	0:0	4	bits_per_pixel
water	39:50	0:0	4	)
op	39:52	0:0	4	-
water	39:54	0:0	4	1
water	39:56	0:0	2	;
if	40:4	44:4	2	(( tif =TIFFOpen (argv [ 3 ] ,"w" ) ) == NULL)
cond	40:8	40:42	3	( tif =TIFFOpen (argv [ 3 ] ,"w" ) ) == NULL
water	40:8	0:0	4	(
water	40:9	0:0	4	tif
op	40:13	0:0	4	=
call	40:15	40:36	4	TIFFOpen
arg	40:24	40:31	5	argv[3]
water	40:24	0:0	6	argv
op	40:28	0:0	6	[
water	40:29	0:0	6	3
op	40:30	0:0	6	]
arg	40:33	40:36	5	"w"
water	40:33	0:0	6	"w"
water	40:37	0:0	4	)
op	40:39	0:0	4	==
water	40:42	0:0	4	NULL
stmts	40:48	44:4	3	
water	40:48	0:0	4	{
call	41:8	41:65	4	fprintf
arg	41:16	41:22	5	stderr
water	41:16	0:0	6	stderr
arg	41:24	41:56	5	"can't open %s as a TIFF file\n"
water	41:24	0:0	6	"can't open %s as a TIFF file\n"
arg	41:58	41:65	5	argv[3]
water	41:58	0:0	6	argv
op	41:62	0:0	6	[
water	41:63	0:0	6	3
op	41:64	0:0	6	]
water	41:66	0:0	4	;
call	42:2	42:11	4	free
arg	42:7	42:11	5	gray
water	42:7	0:0	6	gray
water	42:12	0:0	4	;
return	43:8	43:16	4	0
water	43:15	0:0	5	0
water	44:4	0:0	4	}
call	45:4	45:47	2	TIFFSetField
arg	45:17	45:20	3	tif
water	45:17	0:0	4	tif
arg	45:22	45:40	3	TIFFTAG_IMAGEWIDTH
water	45:22	0:0	4	TIFFTAG_IMAGEWIDTH
arg	45:42	45:47	3	WIDTH
water	45:42	0:0	4	WIDTH
water	45:48	0:0	2	;
call	46:4	46:49	2	TIFFSetField
arg	46:17	46:20	3	tif
water	46:17	0:0	4	tif
arg	46:22	46:41	3	TIFFTAG_IMAGELENGTH
water	46:22	0:0	4	TIFFTAG_IMAGELENGTH
arg	46:43	46:49	3	HEIGHT
water	46:43	0:0	4	HEIGHT
water	46:50	0:0	2	;
call	47:4	47:59	2	TIFFSetField
arg	47:17	47:20	3	tif
water	47:17	0:0	4	tif
arg	47:22	47:43	3	TIFFTAG_BITSPERSAMPLE
water	47:22	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	47:45	47:59	3	bits_per_pixel
water	47:45	0:0	4	bits_per_pixel
water	47:60	0:0	2	;
call	48:4	48:59	2	TIFFSetField
arg	48:17	48:20	3	tif
water	48:17	0:0	4	tif
arg	48:22	48:41	3	TIFFTAG_COMPRESSION
water	48:22	0:0	4	TIFFTAG_COMPRESSION
arg	48:43	48:59	3	COMPRESSION_NONE
water	48:43	0:0	4	COMPRESSION_NONE
water	48:60	0:0	2	;
call	49:4	49:65	2	TIFFSetField
arg	49:17	49:20	3	tif
water	49:17	0:0	4	tif
arg	49:22	49:41	3	TIFFTAG_PHOTOMETRIC
water	49:22	0:0	4	TIFFTAG_PHOTOMETRIC
arg	49:43	49:65	3	PHOTOMETRIC_MINISBLACK
water	49:43	0:0	4	PHOTOMETRIC_MINISBLACK
water	49:66	0:0	2	;
call	50:4	50:48	2	TIFFSetField
arg	50:17	50:20	3	tif
water	50:17	0:0	4	tif
arg	50:22	50:45	3	TIFFTAG_SAMPLESPERPIXEL
water	50:22	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	50:47	50:48	3	1
water	50:47	0:0	4	1
water	50:49	0:0	2	;
call	51:4	51:45	2	TIFFSetField
arg	51:17	51:20	3	tif
water	51:17	0:0	4	tif
arg	51:22	51:42	3	TIFFTAG_ROWSPERSTRIP
water	51:22	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	51:44	51:45	3	1
water	51:44	0:0	4	1
water	51:46	0:0	2	;
call	52:4	52:63	2	TIFFSetField
arg	52:17	52:20	3	tif
water	52:17	0:0	4	tif
arg	52:22	52:42	3	TIFFTAG_PLANARCONFIG
water	52:22	0:0	4	TIFFTAG_PLANARCONFIG
arg	52:44	52:63	3	PLANARCONFIG_CONTIG
water	52:44	0:0	4	PLANARCONFIG_CONTIG
water	52:64	0:0	2	;
call	53:4	53:64	2	TIFFSetField
arg	53:17	53:20	3	tif
water	53:17	0:0	4	tif
arg	53:22	53:49	3	TIFFTAG_REFERENCEBLACKWHITE
water	53:22	0:0	4	TIFFTAG_REFERENCEBLACKWHITE
arg	53:51	53:64	3	refblackwhite
water	53:51	0:0	4	refblackwhite
water	53:65	0:0	2	;
call	54:4	54:52	2	TIFFSetField
arg	54:17	54:20	3	tif
water	54:17	0:0	4	tif
arg	54:22	54:46	3	TIFFTAG_TRANSFERFUNCTION
water	54:22	0:0	4	TIFFTAG_TRANSFERFUNCTION
arg	54:48	54:52	3	gray
water	54:48	0:0	4	gray
water	54:53	0:0	2	;
call	55:4	55:58	2	TIFFSetField
arg	55:17	55:20	3	tif
water	55:17	0:0	4	tif
arg	55:22	55:44	3	TIFFTAG_RESOLUTIONUNIT
water	55:22	0:0	4	TIFFTAG_RESOLUTIONUNIT
arg	55:46	55:58	3	RESUNIT_NONE
water	55:46	0:0	4	RESUNIT_NONE
water	55:59	0:0	2	;
water	56:4	0:0	2	scan_line
op	56:14	0:0	2	=
water	56:16	0:0	2	(
water	56:17	0:0	2	unsigned
water	56:26	0:0	2	char
op	56:31	0:0	2	*
water	56:32	0:0	2	)
call	56:34	56:69	2	malloc
arg	56:41	56:69	3	WIDTH/(8/bits_per_pixel)
water	56:41	0:0	4	WIDTH
op	56:47	0:0	4	/
water	56:49	0:0	4	(
water	56:50	0:0	4	8
op	56:52	0:0	4	/
water	56:54	0:0	4	bits_per_pixel
water	56:68	0:0	4	)
water	56:70	0:0	2	;
for	57:4	77:4	2	(i = 0 ;i < HEIGHT;i ++)
forinit	57:9	57:14	3	i = 0 ;
water	57:9	0:0	4	i
op	57:11	0:0	4	=
water	57:13	0:0	4	0
water	57:14	0:0	4	;
cond	57:16	57:20	3	i < HEIGHT
water	57:16	0:0	4	i
op	57:18	0:0	4	<
water	57:20	0:0	4	HEIGHT
forexpr	57:28	57:29	3	i ++
water	57:28	0:0	4	i
op	57:29	0:0	4	++
stmts	57:33	77:4	3	
water	57:33	0:0	4	{
for	58:8	75:8	4	(j = 0 , k = 0 ;j < WIDTH;)
forinit	58:13	58:25	5	j = 0 , k = 0 ;
water	58:13	0:0	6	j
op	58:15	0:0	6	=
water	58:17	0:0	6	0
water	58:18	0:0	6	,
water	58:20	0:0	6	k
op	58:22	0:0	6	=
water	58:24	0:0	6	0
water	58:25	0:0	6	;
cond	58:27	58:31	5	j < WIDTH
water	58:27	0:0	6	j
op	58:29	0:0	6	<
water	58:31	0:0	6	WIDTH
forexpr	0:0	0:0	5	
stmts	58:39	75:8	5	
water	58:39	0:0	6	{
water	59:12	0:0	6	gray_index
op	59:23	0:0	6	=
water	59:25	0:0	6	(
water	59:26	0:0	6	j
op	59:28	0:0	6	/
water	59:30	0:0	6	chunk_size
water	59:40	0:0	6	)
op	59:42	0:0	6	+
water	59:44	0:0	6	(
water	59:45	0:0	6	(
water	59:46	0:0	6	i
op	59:48	0:0	6	/
water	59:50	0:0	6	chunk_size
water	59:60	0:0	6	)
op	59:62	0:0	6	*
water	59:64	0:0	6	nchunks
water	59:71	0:0	6	)
water	59:72	0:0	6	;
switch	60:12	74:12	6	(bits_per_pixel)
cond	60:20	60:20	7	bits_per_pixel
water	60:20	0:0	8	bits_per_pixel
stmts	60:36	74:12	7	
water	60:36	0:0	8	{
label	61:12	61:18	8	case 8 :
water	62:16	0:0	8	scan_line
op	62:25	0:0	8	[
water	62:26	0:0	8	k
op	62:27	0:0	8	++
op	62:29	0:0	8	]
op	62:31	0:0	8	=
water	62:33	0:0	8	gray_index
water	62:43	0:0	8	;
water	63:16	0:0	8	j
op	63:17	0:0	8	++
water	63:19	0:0	8	;
break	64:16	64:21	8	
label	65:12	65:18	8	case 4 :
water	66:16	0:0	8	scan_line
op	66:25	0:0	8	[
water	66:26	0:0	8	k
op	66:27	0:0	8	++
op	66:29	0:0	8	]
op	66:31	0:0	8	=
water	66:33	0:0	8	(
water	66:34	0:0	8	gray_index
op	66:45	0:0	8	<<
water	66:48	0:0	8	4
water	66:49	0:0	8	)
op	66:51	0:0	8	+
water	66:53	0:0	8	gray_index
water	66:63	0:0	8	;
water	67:16	0:0	8	j
op	67:18	0:0	8	+=
water	67:21	0:0	8	2
water	67:22	0:0	8	;
break	68:16	68:21	8	
label	69:12	69:18	8	case 2 :
water	70:16	0:0	8	scan_line
op	70:25	0:0	8	[
water	70:26	0:0	8	k
op	70:27	0:0	8	++
op	70:29	0:0	8	]
op	70:31	0:0	8	=
water	70:33	0:0	8	(
water	70:34	0:0	8	gray_index
op	70:45	0:0	8	<<
water	70:48	0:0	8	6
water	70:49	0:0	8	)
op	70:51	0:0	8	+
water	70:53	0:0	8	(
water	70:54	0:0	8	gray_index
op	70:65	0:0	8	<<
water	70:68	0:0	8	4
water	70:69	0:0	8	)
op	71:20	0:0	8	+
water	71:22	0:0	8	(
water	71:23	0:0	8	gray_index
op	71:34	0:0	8	<<
water	71:37	0:0	8	2
water	71:38	0:0	8	)
op	71:40	0:0	8	+
water	71:42	0:0	8	gray_index
water	71:52	0:0	8	;
water	72:16	0:0	8	j
op	72:18	0:0	8	+=
water	72:21	0:0	8	4
water	72:22	0:0	8	;
break	73:16	73:21	8	
water	74:12	0:0	8	}
water	75:8	0:0	6	}
call	76:8	76:46	4	TIFFWriteScanline
arg	76:26	76:29	5	tif
water	76:26	0:0	6	tif
arg	76:31	76:40	5	scan_line
water	76:31	0:0	6	scan_line
arg	76:42	76:43	5	i
water	76:42	0:0	6	i
arg	76:45	76:46	5	0
water	76:45	0:0	6	0
water	76:47	0:0	4	;
water	77:4	0:0	4	}
call	78:4	78:18	2	free
arg	78:9	78:18	3	scan_line
water	78:9	0:0	4	scan_line
water	78:19	0:0	2	;
call	79:4	79:17	2	TIFFClose
arg	79:14	79:17	3	tif
water	79:14	0:0	4	tif
water	79:18	0:0	2	;
return	80:4	80:12	2	0
water	80:11	0:0	3	0

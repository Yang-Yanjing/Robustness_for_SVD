func	1:0	126:0	0	void	GetTIFFImage
stmnts	0:0	125:19	1	
decl	4:4	4:56	2	int	pixel_map[3]
water	4:20	0:0	2	,
decl	4:4	4:56	2	int	red_shift
water	4:31	0:0	2	,
decl	4:4	4:56	2	int	green_shift
water	4:44	0:0	2	,
decl	4:4	4:56	2	int	blue_shift
decl	5:4	5:40	2	char	*scan_line
water	5:19	0:0	2	,
decl	5:4	5:40	2	char	*output_p
water	5:30	0:0	2	,
decl	5:4	5:40	2	char	*input_p
decl	6:4	6:15	2	uint32	i
water	6:12	0:0	2	,
decl	6:4	6:15	2	uint32	j
decl	7:4	7:12	2	uint16	s
water	8:4	0:0	2	scan_line
op	8:14	0:0	2	=
water	8:16	0:0	2	(
water	8:17	0:0	2	char
op	8:22	0:0	2	*
water	8:23	0:0	2	)
call	8:25	8:72	2	malloc
arg	8:32	8:72	3	tfBytesPerRow=TIFFScanlineSize(tfFile)
water	8:32	0:0	4	tfBytesPerRow
op	8:46	0:0	4	=
call	8:48	8:71	4	TIFFScanlineSize
arg	8:65	8:71	5	tfFile
water	8:65	0:0	6	tfFile
water	8:73	0:0	2	;
call	9:4	9:20	2	MCHECK
arg	9:11	9:20	3	scan_line
water	9:11	0:0	4	scan_line
water	9:21	0:0	2	;
if	10:4	59:4	2	(( tfImageDepth == 32 ) || ( tfImageDepth == 24 ))
cond	10:8	10:51	3	( tfImageDepth == 32 ) || ( tfImageDepth == 24 )
water	10:8	0:0	4	(
water	10:9	0:0	4	tfImageDepth
op	10:22	0:0	4	==
water	10:25	0:0	4	32
water	10:27	0:0	4	)
op	10:29	0:0	4	||
water	10:32	0:0	4	(
water	10:33	0:0	4	tfImageDepth
op	10:46	0:0	4	==
water	10:49	0:0	4	24
water	10:51	0:0	4	)
stmts	10:54	59:4	3	
water	10:54	0:0	4	{
water	11:8	0:0	4	output_p
op	11:17	0:0	4	=
water	11:19	0:0	4	imageMemory
op	11:31	0:0	4	=
water	11:33	0:0	4	(
water	11:34	0:0	4	char
op	11:39	0:0	4	*
water	11:40	0:0	4	)
call	12:12	12:51	4	malloc
arg	12:19	12:51	5	tfImageWidth*tfImageHeight*4
water	12:19	0:0	6	tfImageWidth
op	12:32	0:0	6	*
water	12:34	0:0	6	tfImageHeight
op	12:48	0:0	6	*
water	12:50	0:0	6	4
water	12:52	0:0	4	;
call	13:8	13:26	4	MCHECK
arg	13:15	13:26	5	imageMemory
water	13:15	0:0	6	imageMemory
water	13:27	0:0	4	;
if	17:8	24:8	4	(ImageByteOrder (xDisplay ) == LSBFirst)
cond	17:12	17:40	5	ImageByteOrder (xDisplay ) == LSBFirst
call	17:12	17:35	6	ImageByteOrder
arg	17:27	17:35	7	xDisplay
water	17:27	0:0	8	xDisplay
op	17:37	0:0	6	==
water	17:40	0:0	6	LSBFirst
stmts	17:50	24:8	5	
water	17:50	0:0	6	{
water	18:12	0:0	6	red_shift
op	18:22	0:0	6	=
water	18:24	0:0	6	pixel_map
op	18:33	0:0	6	[
water	18:34	0:0	6	0
op	18:35	0:0	6	]
op	18:37	0:0	6	=
water	18:39	0:0	6	xRedMask
op	18:48	0:0	6	==
water	18:51	0:0	6	0
water	18:52	0:0	6	xFF000000
water	18:62	0:0	6	?
water	18:64	0:0	6	3
water	19:16	0:0	6	:
water	19:18	0:0	6	(
water	19:19	0:0	6	xRedMask
op	19:28	0:0	6	==
water	19:31	0:0	6	0
water	19:32	0:0	6	xFF0000
water	19:40	0:0	6	?
water	19:42	0:0	6	2
water	19:44	0:0	6	:
water	19:46	0:0	6	(
water	19:47	0:0	6	xRedMask
op	19:56	0:0	6	==
water	19:59	0:0	6	0
water	19:60	0:0	6	xFF00
water	19:66	0:0	6	?
water	19:68	0:0	6	1
water	19:70	0:0	6	:
water	19:72	0:0	6	0
water	19:73	0:0	6	)
water	19:74	0:0	6	)
water	19:75	0:0	6	;
water	20:12	0:0	6	green_shift
op	20:24	0:0	6	=
water	20:26	0:0	6	pixel_map
op	20:35	0:0	6	[
water	20:36	0:0	6	1
op	20:37	0:0	6	]
op	20:39	0:0	6	=
water	20:41	0:0	6	xGreenMask
op	20:52	0:0	6	==
water	20:55	0:0	6	0
water	20:56	0:0	6	xFF000000
water	20:66	0:0	6	?
water	20:68	0:0	6	3
water	21:16	0:0	6	:
water	21:18	0:0	6	(
water	21:19	0:0	6	xGreenMask
op	21:30	0:0	6	==
water	21:33	0:0	6	0
water	21:34	0:0	6	xFF0000
water	21:42	0:0	6	?
water	21:44	0:0	6	2
water	21:46	0:0	6	:
water	21:48	0:0	6	(
water	21:49	0:0	6	xGreenMask
op	21:60	0:0	6	==
water	21:63	0:0	6	0
water	21:64	0:0	6	xFF00
water	21:70	0:0	6	?
water	21:72	0:0	6	1
water	21:74	0:0	6	:
water	21:76	0:0	6	0
water	21:77	0:0	6	)
water	21:78	0:0	6	)
water	21:79	0:0	6	;
water	22:12	0:0	6	blue_shift
op	22:23	0:0	6	=
water	22:25	0:0	6	pixel_map
op	22:34	0:0	6	[
water	22:35	0:0	6	2
op	22:36	0:0	6	]
op	22:38	0:0	6	=
water	22:40	0:0	6	xBlueMask
op	22:50	0:0	6	==
water	22:53	0:0	6	0
water	22:54	0:0	6	xFF000000
water	22:64	0:0	6	?
water	22:66	0:0	6	3
water	23:16	0:0	6	:
water	23:18	0:0	6	(
water	23:19	0:0	6	xBlueMask
op	23:29	0:0	6	==
water	23:32	0:0	6	0
water	23:33	0:0	6	xFF0000
water	23:41	0:0	6	?
water	23:43	0:0	6	2
water	23:45	0:0	6	:
water	23:47	0:0	6	(
water	23:48	0:0	6	xBlueMask
op	23:58	0:0	6	==
water	23:61	0:0	6	0
water	23:62	0:0	6	xFF00
water	23:68	0:0	6	?
water	23:70	0:0	6	1
water	23:72	0:0	6	:
water	23:74	0:0	6	0
water	23:75	0:0	6	)
water	23:76	0:0	6	)
water	23:77	0:0	6	;
water	24:8	0:0	6	}
else	24:10	31:8	4
stmts	24:15	31:8	5	
water	24:15	0:0	6	{
water	25:12	0:0	6	red_shift
op	25:22	0:0	6	=
water	25:24	0:0	6	pixel_map
op	25:33	0:0	6	[
water	25:34	0:0	6	0
op	25:35	0:0	6	]
op	25:37	0:0	6	=
water	25:39	0:0	6	xRedMask
op	25:48	0:0	6	==
water	25:51	0:0	6	0
water	25:52	0:0	6	xFF000000
water	25:62	0:0	6	?
water	25:64	0:0	6	0
water	26:16	0:0	6	:
water	26:18	0:0	6	(
water	26:19	0:0	6	xRedMask
op	26:28	0:0	6	==
water	26:31	0:0	6	0
water	26:32	0:0	6	xFF0000
water	26:40	0:0	6	?
water	26:42	0:0	6	1
water	26:44	0:0	6	:
water	26:46	0:0	6	(
water	26:47	0:0	6	xRedMask
op	26:56	0:0	6	==
water	26:59	0:0	6	0
water	26:60	0:0	6	xFF00
water	26:66	0:0	6	?
water	26:68	0:0	6	2
water	26:70	0:0	6	:
water	26:72	0:0	6	3
water	26:73	0:0	6	)
water	26:74	0:0	6	)
water	26:75	0:0	6	;
water	27:12	0:0	6	green_shift
op	27:24	0:0	6	=
water	27:26	0:0	6	pixel_map
op	27:35	0:0	6	[
water	27:36	0:0	6	0
op	27:37	0:0	6	]
op	27:39	0:0	6	=
water	27:41	0:0	6	xGreenMask
op	27:52	0:0	6	==
water	27:55	0:0	6	0
water	27:56	0:0	6	xFF000000
water	27:66	0:0	6	?
water	27:68	0:0	6	0
water	28:16	0:0	6	:
water	28:18	0:0	6	(
water	28:19	0:0	6	xGreenMask
op	28:30	0:0	6	==
water	28:33	0:0	6	0
water	28:34	0:0	6	xFF0000
water	28:42	0:0	6	?
water	28:44	0:0	6	1
water	28:46	0:0	6	:
water	28:48	0:0	6	(
water	28:49	0:0	6	xGreenMask
op	28:60	0:0	6	==
water	28:63	0:0	6	0
water	28:64	0:0	6	xFF00
water	28:70	0:0	6	?
water	28:72	0:0	6	2
water	28:74	0:0	6	:
water	28:76	0:0	6	3
water	28:77	0:0	6	)
water	28:78	0:0	6	)
water	28:79	0:0	6	;
water	29:12	0:0	6	blue_shift
op	29:23	0:0	6	=
water	29:25	0:0	6	pixel_map
op	29:34	0:0	6	[
water	29:35	0:0	6	0
op	29:36	0:0	6	]
op	29:38	0:0	6	=
water	29:40	0:0	6	xBlueMask
op	29:50	0:0	6	==
water	29:53	0:0	6	0
water	29:54	0:0	6	xFF000000
water	29:64	0:0	6	?
water	29:66	0:0	6	0
water	30:16	0:0	6	:
water	30:18	0:0	6	(
water	30:19	0:0	6	xBlueMask
op	30:29	0:0	6	==
water	30:32	0:0	6	0
water	30:33	0:0	6	xFF0000
water	30:41	0:0	6	?
water	30:43	0:0	6	1
water	30:45	0:0	6	:
water	30:47	0:0	6	(
water	30:48	0:0	6	xBlueMask
op	30:58	0:0	6	==
water	30:61	0:0	6	0
water	30:62	0:0	6	xFF00
water	30:68	0:0	6	?
water	30:70	0:0	6	2
water	30:72	0:0	6	:
water	30:74	0:0	6	3
water	30:75	0:0	6	)
water	30:76	0:0	6	)
water	30:77	0:0	6	;
water	31:8	0:0	6	}
if	32:8	45:8	4	(tfPlanarConfiguration == PLANARCONFIG_CONTIG)
cond	32:12	32:37	5	tfPlanarConfiguration == PLANARCONFIG_CONTIG
water	32:12	0:0	6	tfPlanarConfiguration
op	32:34	0:0	6	==
water	32:37	0:0	6	PLANARCONFIG_CONTIG
stmts	32:58	45:8	5	
water	32:58	0:0	6	{
for	33:12	44:12	6	(i = 0 ;i < tfImageHeight;i ++)
forinit	33:17	33:22	7	i = 0 ;
water	33:17	0:0	8	i
op	33:19	0:0	8	=
water	33:21	0:0	8	0
water	33:22	0:0	8	;
cond	33:24	33:28	7	i < tfImageHeight
water	33:24	0:0	8	i
op	33:26	0:0	8	<
water	33:28	0:0	8	tfImageHeight
forexpr	33:43	33:44	7	i ++
water	33:43	0:0	8	i
op	33:44	0:0	8	++
stmts	33:48	44:12	7	
water	33:48	0:0	8	{
if	34:16	35:25	8	(TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0)
cond	34:20	34:64	9	TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0
call	34:20	34:60	10	TIFFReadScanline
arg	34:37	34:43	11	tfFile
water	34:37	0:0	12	tfFile
arg	34:45	34:54	11	scan_line
water	34:45	0:0	12	scan_line
arg	34:56	34:57	11	i
water	34:56	0:0	12	i
arg	34:59	34:60	11	0
water	34:59	0:0	12	0
op	34:62	0:0	10	<
water	34:64	0:0	10	0
stmts	35:20	35:25	9	
break	35:20	35:25	10	
for	36:16	43:16	8	(input_p = scan_line , j = 0 ;j < tfImageWidth;j ++)
forinit	36:21	36:47	9	input_p = scan_line , j = 0 ;
water	36:21	0:0	10	input_p
op	36:29	0:0	10	=
water	36:31	0:0	10	scan_line
water	36:40	0:0	10	,
water	36:42	0:0	10	j
op	36:44	0:0	10	=
water	36:46	0:0	10	0
water	36:47	0:0	10	;
cond	36:49	36:53	9	j < tfImageWidth
water	36:49	0:0	10	j
op	36:51	0:0	10	<
water	36:53	0:0	10	tfImageWidth
forexpr	36:67	36:68	9	j ++
water	36:67	0:0	10	j
op	36:68	0:0	10	++
stmts	36:72	43:16	9	
water	36:72	0:0	10	{
op	37:20	0:0	10	*
water	37:21	0:0	10	(
water	37:22	0:0	10	output_p
op	37:31	0:0	10	+
water	37:33	0:0	10	red_shift
water	37:42	0:0	10	)
op	37:44	0:0	10	=
op	37:46	0:0	10	*
water	37:47	0:0	10	input_p
op	37:54	0:0	10	++
water	37:56	0:0	10	;
op	38:20	0:0	10	*
water	38:21	0:0	10	(
water	38:22	0:0	10	output_p
op	38:31	0:0	10	+
water	38:33	0:0	10	green_shift
water	38:44	0:0	10	)
op	38:46	0:0	10	=
op	38:48	0:0	10	*
water	38:49	0:0	10	input_p
op	38:56	0:0	10	++
water	38:58	0:0	10	;
op	39:20	0:0	10	*
water	39:21	0:0	10	(
water	39:22	0:0	10	output_p
op	39:31	0:0	10	+
water	39:33	0:0	10	blue_shift
water	39:43	0:0	10	)
op	39:45	0:0	10	=
op	39:47	0:0	10	*
water	39:48	0:0	10	input_p
op	39:55	0:0	10	++
water	39:57	0:0	10	;
water	40:20	0:0	10	output_p
op	40:29	0:0	10	+=
water	40:32	0:0	10	4
water	40:33	0:0	10	;
if	41:20	42:33	10	(tfSamplesPerPixel == 4)
cond	41:24	41:45	11	tfSamplesPerPixel == 4
water	41:24	0:0	12	tfSamplesPerPixel
op	41:42	0:0	12	==
water	41:45	0:0	12	4
stmts	42:24	42:33	11	
water	42:24	0:0	12	input_p
op	42:31	0:0	12	++
water	42:33	0:0	12	;
water	43:16	0:0	10	}
water	44:12	0:0	8	}
water	45:8	0:0	6	}
else	45:10	58:8	4
stmts	45:15	58:8	5	
water	45:15	0:0	6	{
for	46:12	57:12	6	(s = 0 ;s < tfSamplesPerPixel;s ++)
forinit	46:17	46:22	7	s = 0 ;
water	46:17	0:0	8	s
op	46:19	0:0	8	=
water	46:21	0:0	8	0
water	46:22	0:0	8	;
cond	46:24	46:28	7	s < tfSamplesPerPixel
water	46:24	0:0	8	s
op	46:26	0:0	8	<
water	46:28	0:0	8	tfSamplesPerPixel
forexpr	46:47	46:48	7	s ++
water	46:47	0:0	8	s
op	46:48	0:0	8	++
stmts	46:52	57:12	7	
water	46:52	0:0	8	{
if	47:16	48:28	8	(s == 3)
cond	47:20	47:25	9	s == 3
water	47:20	0:0	10	s
op	47:22	0:0	10	==
water	47:25	0:0	10	3
stmts	48:20	48:28	9	
continue	48:20	48:28	10	
for	49:16	56:16	8	(i = 0 ;i < tfImageHeight;i ++)
forinit	49:21	49:26	9	i = 0 ;
water	49:21	0:0	10	i
op	49:23	0:0	10	=
water	49:25	0:0	10	0
water	49:26	0:0	10	;
cond	49:28	49:32	9	i < tfImageHeight
water	49:28	0:0	10	i
op	49:30	0:0	10	<
water	49:32	0:0	10	tfImageHeight
forexpr	49:47	49:48	9	i ++
water	49:47	0:0	10	i
op	49:48	0:0	10	++
stmts	49:52	56:16	9	
water	49:52	0:0	10	{
if	50:20	51:29	10	(TIFFReadScanline (tfFile ,scan_line ,i ,s ) < 0)
cond	50:24	50:68	11	TIFFReadScanline (tfFile ,scan_line ,i ,s ) < 0
call	50:24	50:64	12	TIFFReadScanline
arg	50:41	50:47	13	tfFile
water	50:41	0:0	14	tfFile
arg	50:49	50:58	13	scan_line
water	50:49	0:0	14	scan_line
arg	50:60	50:61	13	i
water	50:60	0:0	14	i
arg	50:63	50:64	13	s
water	50:63	0:0	14	s
op	50:66	0:0	12	<
water	50:68	0:0	12	0
stmts	51:24	51:29	11	
break	51:24	51:29	12	
water	52:20	0:0	10	input_p
op	52:28	0:0	10	=
water	52:30	0:0	10	scan_line
water	52:39	0:0	10	;
water	53:20	0:0	10	output_p
op	53:29	0:0	10	=
water	53:31	0:0	10	imageMemory
op	53:43	0:0	10	+
water	53:45	0:0	10	(
water	53:46	0:0	10	i
op	53:47	0:0	10	*
water	53:48	0:0	10	tfImageWidth
op	53:60	0:0	10	*
water	53:61	0:0	10	4
water	53:62	0:0	10	)
op	53:64	0:0	10	+
water	53:66	0:0	10	pixel_map
op	53:75	0:0	10	[
water	53:76	0:0	10	s
op	53:77	0:0	10	]
water	53:78	0:0	10	;
for	54:20	55:46	10	(j = 0 ;j < tfImageWidth;j ++ , output_p += 4)
forinit	54:25	54:30	11	j = 0 ;
water	54:25	0:0	12	j
op	54:27	0:0	12	=
water	54:29	0:0	12	0
water	54:30	0:0	12	;
cond	54:32	54:36	11	j < tfImageWidth
water	54:32	0:0	12	j
op	54:34	0:0	12	<
water	54:36	0:0	12	tfImageWidth
forexpr	54:50	54:67	11	j ++ , output_p += 4
water	54:50	0:0	12	j
op	54:51	0:0	12	++
water	54:53	0:0	12	,
water	54:55	0:0	12	output_p
op	54:64	0:0	12	+=
water	54:67	0:0	12	4
stmts	55:24	55:46	11	
op	55:24	0:0	12	*
water	55:25	0:0	12	output_p
op	55:34	0:0	12	=
op	55:36	0:0	12	*
water	55:37	0:0	12	input_p
op	55:44	0:0	12	++
water	55:46	0:0	12	;
water	56:16	0:0	10	}
water	57:12	0:0	8	}
water	58:8	0:0	6	}
water	59:4	0:0	4	}
else	59:6	124:4	2
stmts	59:11	124:4	3	
water	59:11	0:0	4	{
if	60:8	67:8	4	(xImageDepth == tfImageDepth)
cond	60:12	60:27	5	xImageDepth == tfImageDepth
water	60:12	0:0	6	xImageDepth
op	60:24	0:0	6	==
water	60:27	0:0	6	tfImageDepth
stmts	60:41	67:8	5	
water	60:41	0:0	6	{
water	61:12	0:0	6	output_p
op	61:21	0:0	6	=
water	61:23	0:0	6	imageMemory
op	61:35	0:0	6	=
water	61:37	0:0	6	(
water	61:38	0:0	6	char
op	61:43	0:0	6	*
water	61:44	0:0	6	)
call	62:16	62:52	6	malloc
arg	62:23	62:52	7	tfBytesPerRow*tfImageHeight
water	62:23	0:0	8	tfBytesPerRow
op	62:37	0:0	8	*
water	62:39	0:0	8	tfImageHeight
water	62:53	0:0	6	;
call	63:12	63:30	6	MCHECK
arg	63:19	63:30	7	imageMemory
water	63:19	0:0	8	imageMemory
water	63:31	0:0	6	;
for	64:12	66:25	6	(i = 0 ;i < tfImageHeight;i ++ , output_p += tfBytesPerRow)
forinit	64:17	64:22	7	i = 0 ;
water	64:17	0:0	8	i
op	64:19	0:0	8	=
water	64:21	0:0	8	0
water	64:22	0:0	8	;
cond	64:24	64:28	7	i < tfImageHeight
water	64:24	0:0	8	i
op	64:26	0:0	8	<
water	64:28	0:0	8	tfImageHeight
forexpr	64:43	64:60	7	i ++ , output_p += tfBytesPerRow
water	64:43	0:0	8	i
op	64:44	0:0	8	++
water	64:46	0:0	8	,
water	64:48	0:0	8	output_p
op	64:57	0:0	8	+=
water	64:60	0:0	8	tfBytesPerRow
stmts	65:16	66:25	7	
if	65:16	66:25	8	(TIFFReadScanline (tfFile ,output_p ,i ,0 ) < 0)
cond	65:20	65:63	9	TIFFReadScanline (tfFile ,output_p ,i ,0 ) < 0
call	65:20	65:59	10	TIFFReadScanline
arg	65:37	65:43	11	tfFile
water	65:37	0:0	12	tfFile
arg	65:45	65:53	11	output_p
water	65:45	0:0	12	output_p
arg	65:55	65:56	11	i
water	65:55	0:0	12	i
arg	65:58	65:59	11	0
water	65:58	0:0	12	0
op	65:61	0:0	10	<
water	65:63	0:0	10	0
stmts	66:20	66:25	9	
break	66:20	66:25	10	
water	67:8	0:0	6	}
else	67:10	86:8	4
stmts	67:15	86:8	5	
if	67:15	86:8	6	(( xImageDepth == 8 ) && ( tfImageDepth == 4 ))
cond	67:19	67:59	7	( xImageDepth == 8 ) && ( tfImageDepth == 4 )
water	67:19	0:0	8	(
water	67:20	0:0	8	xImageDepth
op	67:32	0:0	8	==
water	67:35	0:0	8	8
water	67:36	0:0	8	)
op	67:38	0:0	8	&&
water	67:41	0:0	8	(
water	67:42	0:0	8	tfImageDepth
op	67:55	0:0	8	==
water	67:58	0:0	8	4
water	67:59	0:0	8	)
stmts	67:62	86:8	7	
water	67:62	0:0	8	{
water	68:12	0:0	8	output_p
op	68:21	0:0	8	=
water	68:23	0:0	8	imageMemory
op	68:35	0:0	8	=
water	68:37	0:0	8	(
water	68:38	0:0	8	char
op	68:43	0:0	8	*
water	68:44	0:0	8	)
call	69:16	69:60	8	malloc
arg	69:23	69:60	9	tfBytesPerRow*2*tfImageHeight+2
water	69:23	0:0	10	tfBytesPerRow
op	69:37	0:0	10	*
water	69:39	0:0	10	2
op	69:41	0:0	10	*
water	69:43	0:0	10	tfImageHeight
op	69:57	0:0	10	+
water	69:59	0:0	10	2
water	69:61	0:0	8	;
call	70:12	70:30	8	MCHECK
arg	70:19	70:30	9	imageMemory
water	70:19	0:0	10	imageMemory
water	70:31	0:0	8	;
for	76:12	85:12	8	(i = 0 ;i < tfImageHeight;i ++)
forinit	76:17	76:22	9	i = 0 ;
water	76:17	0:0	10	i
op	76:19	0:0	10	=
water	76:21	0:0	10	0
water	76:22	0:0	10	;
cond	76:24	76:28	9	i < tfImageHeight
water	76:24	0:0	10	i
op	76:26	0:0	10	<
water	76:28	0:0	10	tfImageHeight
forexpr	76:43	76:44	9	i ++
water	76:43	0:0	10	i
op	76:44	0:0	10	++
stmts	76:48	85:12	9	
water	76:48	0:0	10	{
if	77:16	78:25	10	(TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0)
cond	77:20	77:64	11	TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0
call	77:20	77:60	12	TIFFReadScanline
arg	77:37	77:43	13	tfFile
water	77:37	0:0	14	tfFile
arg	77:45	77:54	13	scan_line
water	77:45	0:0	14	scan_line
arg	77:56	77:57	13	i
water	77:56	0:0	14	i
arg	77:59	77:60	13	0
water	77:59	0:0	14	0
op	77:62	0:0	12	<
water	77:64	0:0	12	0
stmts	78:20	78:25	11	
break	78:20	78:25	12	
water	79:16	0:0	10	output_p
op	79:25	0:0	10	=
op	79:27	0:0	10	&
water	79:28	0:0	10	imageMemory
op	79:39	0:0	10	[
water	79:40	0:0	10	i
op	79:42	0:0	10	*
water	79:44	0:0	10	tfImageWidth
op	79:56	0:0	10	]
water	79:57	0:0	10	;
water	80:16	0:0	10	input_p
op	80:24	0:0	10	=
water	80:26	0:0	10	scan_line
water	80:35	0:0	10	;
for	81:16	84:16	10	(j = 0 ;j < tfImageWidth;j += 2 , input_p ++)
forinit	81:21	81:26	11	j = 0 ;
water	81:21	0:0	12	j
op	81:23	0:0	12	=
water	81:25	0:0	12	0
water	81:26	0:0	12	;
cond	81:28	81:32	11	j < tfImageWidth
water	81:28	0:0	12	j
op	81:30	0:0	12	<
water	81:32	0:0	12	tfImageWidth
forexpr	81:46	81:61	11	j += 2 , input_p ++
water	81:46	0:0	12	j
op	81:48	0:0	12	+=
water	81:51	0:0	12	2
water	81:52	0:0	12	,
water	81:54	0:0	12	input_p
op	81:61	0:0	12	++
stmts	81:65	84:16	11	
water	81:65	0:0	12	{
op	82:20	0:0	12	*
water	82:21	0:0	12	output_p
op	82:29	0:0	12	++
op	82:32	0:0	12	=
water	82:34	0:0	12	(
op	82:35	0:0	12	*
water	82:36	0:0	12	input_p
op	82:44	0:0	12	>>
water	82:47	0:0	12	4
water	82:48	0:0	12	)
op	82:50	0:0	12	+
water	82:52	0:0	12	basePixel
water	82:61	0:0	12	;
op	83:20	0:0	12	*
water	83:21	0:0	12	output_p
op	83:29	0:0	12	++
op	83:32	0:0	12	=
water	83:34	0:0	12	(
op	83:35	0:0	12	*
water	83:36	0:0	12	input_p
op	83:44	0:0	12	&
water	83:46	0:0	12	0
water	83:47	0:0	12	xf
water	83:49	0:0	12	)
op	83:51	0:0	12	+
water	83:53	0:0	12	basePixel
water	83:62	0:0	12	;
water	84:16	0:0	12	}
water	85:12	0:0	10	}
water	86:8	0:0	8	}
else	86:10	102:8	4
stmts	86:15	102:8	5	
if	86:15	102:8	6	(( xImageDepth == 8 ) && ( tfImageDepth == 2 ))
cond	86:19	86:59	7	( xImageDepth == 8 ) && ( tfImageDepth == 2 )
water	86:19	0:0	8	(
water	86:20	0:0	8	xImageDepth
op	86:32	0:0	8	==
water	86:35	0:0	8	8
water	86:36	0:0	8	)
op	86:38	0:0	8	&&
water	86:41	0:0	8	(
water	86:42	0:0	8	tfImageDepth
op	86:55	0:0	8	==
water	86:58	0:0	8	2
water	86:59	0:0	8	)
stmts	86:62	102:8	7	
water	86:62	0:0	8	{
water	87:12	0:0	8	output_p
op	87:21	0:0	8	=
water	87:23	0:0	8	imageMemory
op	87:35	0:0	8	=
water	87:37	0:0	8	(
water	87:38	0:0	8	char
op	87:43	0:0	8	*
water	87:44	0:0	8	)
call	88:16	88:60	8	malloc
arg	88:23	88:60	9	tfBytesPerRow*4*tfImageHeight+4
water	88:23	0:0	10	tfBytesPerRow
op	88:37	0:0	10	*
water	88:39	0:0	10	4
op	88:41	0:0	10	*
water	88:43	0:0	10	tfImageHeight
op	88:57	0:0	10	+
water	88:59	0:0	10	4
water	88:61	0:0	8	;
call	89:12	89:30	8	MCHECK
arg	89:19	89:30	9	imageMemory
water	89:19	0:0	10	imageMemory
water	89:31	0:0	8	;
for	90:12	101:12	8	(i = 0 ;i < tfImageHeight;i ++)
forinit	90:17	90:22	9	i = 0 ;
water	90:17	0:0	10	i
op	90:19	0:0	10	=
water	90:21	0:0	10	0
water	90:22	0:0	10	;
cond	90:24	90:28	9	i < tfImageHeight
water	90:24	0:0	10	i
op	90:26	0:0	10	<
water	90:28	0:0	10	tfImageHeight
forexpr	90:43	90:44	9	i ++
water	90:43	0:0	10	i
op	90:44	0:0	10	++
stmts	90:48	101:12	9	
water	90:48	0:0	10	{
if	91:16	92:25	10	(TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0)
cond	91:20	91:64	11	TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0
call	91:20	91:60	12	TIFFReadScanline
arg	91:37	91:43	13	tfFile
water	91:37	0:0	14	tfFile
arg	91:45	91:54	13	scan_line
water	91:45	0:0	14	scan_line
arg	91:56	91:57	13	i
water	91:56	0:0	14	i
arg	91:59	91:60	13	0
water	91:59	0:0	14	0
op	91:62	0:0	12	<
water	91:64	0:0	12	0
stmts	92:20	92:25	11	
break	92:20	92:25	12	
water	93:16	0:0	10	output_p
op	93:25	0:0	10	=
op	93:27	0:0	10	&
water	93:28	0:0	10	imageMemory
op	93:39	0:0	10	[
water	93:40	0:0	10	i
op	93:42	0:0	10	*
water	93:44	0:0	10	tfImageWidth
op	93:56	0:0	10	]
water	93:57	0:0	10	;
water	94:16	0:0	10	input_p
op	94:24	0:0	10	=
water	94:26	0:0	10	scan_line
water	94:35	0:0	10	;
for	95:16	100:16	10	(j = 0 ;j < tfImageWidth;j += 4 , input_p ++)
forinit	95:21	95:26	11	j = 0 ;
water	95:21	0:0	12	j
op	95:23	0:0	12	=
water	95:25	0:0	12	0
water	95:26	0:0	12	;
cond	95:28	95:32	11	j < tfImageWidth
water	95:28	0:0	12	j
op	95:30	0:0	12	<
water	95:32	0:0	12	tfImageWidth
forexpr	95:46	95:61	11	j += 4 , input_p ++
water	95:46	0:0	12	j
op	95:48	0:0	12	+=
water	95:51	0:0	12	4
water	95:52	0:0	12	,
water	95:54	0:0	12	input_p
op	95:61	0:0	12	++
stmts	95:65	100:16	11	
water	95:65	0:0	12	{
op	96:20	0:0	12	*
water	96:21	0:0	12	output_p
op	96:29	0:0	12	++
op	96:32	0:0	12	=
water	96:34	0:0	12	(
op	96:35	0:0	12	*
water	96:36	0:0	12	input_p
op	96:44	0:0	12	>>
water	96:47	0:0	12	6
water	96:48	0:0	12	)
op	96:50	0:0	12	+
water	96:52	0:0	12	basePixel
water	96:61	0:0	12	;
op	97:20	0:0	12	*
water	97:21	0:0	12	output_p
op	97:29	0:0	12	++
op	97:32	0:0	12	=
water	97:34	0:0	12	(
water	97:35	0:0	12	(
op	97:36	0:0	12	*
water	97:37	0:0	12	input_p
op	97:45	0:0	12	>>
water	97:48	0:0	12	4
water	97:49	0:0	12	)
op	97:51	0:0	12	&
water	97:53	0:0	12	3
water	97:54	0:0	12	)
op	97:56	0:0	12	+
water	97:58	0:0	12	basePixel
water	97:67	0:0	12	;
op	98:20	0:0	12	*
water	98:21	0:0	12	output_p
op	98:29	0:0	12	++
op	98:32	0:0	12	=
water	98:34	0:0	12	(
water	98:35	0:0	12	(
op	98:36	0:0	12	*
water	98:37	0:0	12	input_p
op	98:45	0:0	12	>>
water	98:48	0:0	12	2
water	98:49	0:0	12	)
op	98:51	0:0	12	&
water	98:53	0:0	12	3
water	98:54	0:0	12	)
op	98:56	0:0	12	+
water	98:58	0:0	12	basePixel
water	98:67	0:0	12	;
op	99:20	0:0	12	*
water	99:21	0:0	12	output_p
op	99:29	0:0	12	++
op	99:32	0:0	12	=
water	99:34	0:0	12	(
op	99:35	0:0	12	*
water	99:36	0:0	12	input_p
op	99:44	0:0	12	&
water	99:46	0:0	12	3
water	99:47	0:0	12	)
op	99:49	0:0	12	+
water	99:51	0:0	12	basePixel
water	99:60	0:0	12	;
water	100:16	0:0	12	}
water	101:12	0:0	10	}
water	102:8	0:0	8	}
else	102:10	118:8	4
stmts	102:15	118:8	5	
if	102:15	118:8	6	(( xImageDepth == 4 ) && ( tfImageDepth == 2 ))
cond	102:19	102:59	7	( xImageDepth == 4 ) && ( tfImageDepth == 2 )
water	102:19	0:0	8	(
water	102:20	0:0	8	xImageDepth
op	102:32	0:0	8	==
water	102:35	0:0	8	4
water	102:36	0:0	8	)
op	102:38	0:0	8	&&
water	102:41	0:0	8	(
water	102:42	0:0	8	tfImageDepth
op	102:55	0:0	8	==
water	102:58	0:0	8	2
water	102:59	0:0	8	)
stmts	102:62	118:8	7	
water	102:62	0:0	8	{
water	103:12	0:0	8	output_p
op	103:21	0:0	8	=
water	103:23	0:0	8	imageMemory
op	103:35	0:0	8	=
water	103:37	0:0	8	(
water	103:38	0:0	8	char
op	103:43	0:0	8	*
water	103:44	0:0	8	)
call	104:16	104:60	8	malloc
arg	104:23	104:60	9	tfBytesPerRow*2*tfImageHeight+2
water	104:23	0:0	10	tfBytesPerRow
op	104:37	0:0	10	*
water	104:39	0:0	10	2
op	104:41	0:0	10	*
water	104:43	0:0	10	tfImageHeight
op	104:57	0:0	10	+
water	104:59	0:0	10	2
water	104:61	0:0	8	;
call	105:12	105:30	8	MCHECK
arg	105:19	105:30	9	imageMemory
water	105:19	0:0	10	imageMemory
water	105:31	0:0	8	;
for	106:12	117:12	8	(i = 0 ;i < tfImageHeight;i ++)
forinit	106:17	106:22	9	i = 0 ;
water	106:17	0:0	10	i
op	106:19	0:0	10	=
water	106:21	0:0	10	0
water	106:22	0:0	10	;
cond	106:24	106:28	9	i < tfImageHeight
water	106:24	0:0	10	i
op	106:26	0:0	10	<
water	106:28	0:0	10	tfImageHeight
forexpr	106:43	106:44	9	i ++
water	106:43	0:0	10	i
op	106:44	0:0	10	++
stmts	106:48	117:12	9	
water	106:48	0:0	10	{
if	107:16	108:25	10	(TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0)
cond	107:20	107:64	11	TIFFReadScanline (tfFile ,scan_line ,i ,0 ) < 0
call	107:20	107:60	12	TIFFReadScanline
arg	107:37	107:43	13	tfFile
water	107:37	0:0	14	tfFile
arg	107:45	107:54	13	scan_line
water	107:45	0:0	14	scan_line
arg	107:56	107:57	13	i
water	107:56	0:0	14	i
arg	107:59	107:60	13	0
water	107:59	0:0	14	0
op	107:62	0:0	12	<
water	107:64	0:0	12	0
stmts	108:20	108:25	11	
break	108:20	108:25	12	
water	109:16	0:0	10	output_p
op	109:25	0:0	10	=
op	109:27	0:0	10	&
water	109:28	0:0	10	imageMemory
op	109:39	0:0	10	[
water	109:40	0:0	10	i
op	109:42	0:0	10	*
water	109:44	0:0	10	tfBytesPerRow
op	109:58	0:0	10	*
water	109:60	0:0	10	2
op	109:61	0:0	10	]
water	109:62	0:0	10	;
water	110:16	0:0	10	input_p
op	110:24	0:0	10	=
water	110:26	0:0	10	scan_line
water	110:35	0:0	10	;
for	111:16	116:16	10	(j = 0 ;j < tfImageWidth;j += 4 , input_p ++)
forinit	111:21	111:26	11	j = 0 ;
water	111:21	0:0	12	j
op	111:23	0:0	12	=
water	111:25	0:0	12	0
water	111:26	0:0	12	;
cond	111:28	111:32	11	j < tfImageWidth
water	111:28	0:0	12	j
op	111:30	0:0	12	<
water	111:32	0:0	12	tfImageWidth
forexpr	111:46	111:61	11	j += 4 , input_p ++
water	111:46	0:0	12	j
op	111:48	0:0	12	+=
water	111:51	0:0	12	4
water	111:52	0:0	12	,
water	111:54	0:0	12	input_p
op	111:61	0:0	12	++
stmts	111:65	116:16	11	
water	111:65	0:0	12	{
op	112:20	0:0	12	*
water	112:21	0:0	12	output_p
op	112:29	0:0	12	++
op	112:32	0:0	12	=
water	112:34	0:0	12	(
water	112:35	0:0	12	(
water	112:36	0:0	12	(
op	112:37	0:0	12	*
water	112:38	0:0	12	input_p
op	112:45	0:0	12	>>
water	112:47	0:0	12	6
water	112:48	0:0	12	)
op	112:50	0:0	12	<<
water	112:53	0:0	12	4
water	112:54	0:0	12	)
op	113:24	0:0	12	|
water	113:26	0:0	12	(
water	113:27	0:0	12	(
op	113:28	0:0	12	*
water	113:29	0:0	12	input_p
op	113:37	0:0	12	>>
water	113:40	0:0	12	4
water	113:41	0:0	12	)
op	113:43	0:0	12	&
water	113:45	0:0	12	3
water	113:46	0:0	12	)
water	113:47	0:0	12	)
op	113:49	0:0	12	+
water	113:51	0:0	12	basePixel
water	113:60	0:0	12	;
op	114:20	0:0	12	*
water	114:21	0:0	12	output_p
op	114:29	0:0	12	++
op	114:32	0:0	12	=
water	114:34	0:0	12	(
water	114:35	0:0	12	(
water	114:36	0:0	12	(
water	114:37	0:0	12	(
op	114:38	0:0	12	*
water	114:39	0:0	12	input_p
op	114:46	0:0	12	>>
water	114:48	0:0	12	2
water	114:49	0:0	12	)
op	114:51	0:0	12	&
water	114:53	0:0	12	3
water	114:54	0:0	12	)
op	114:56	0:0	12	<<
water	114:59	0:0	12	4
water	114:60	0:0	12	)
op	115:24	0:0	12	|
water	115:26	0:0	12	(
op	115:27	0:0	12	*
water	115:28	0:0	12	input_p
op	115:36	0:0	12	&
water	115:38	0:0	12	3
water	115:39	0:0	12	)
water	115:40	0:0	12	)
op	115:42	0:0	12	+
water	115:44	0:0	12	basePixel
water	115:53	0:0	12	;
water	116:16	0:0	12	}
water	117:12	0:0	10	}
water	118:8	0:0	8	}
else	118:10	123:8	4
stmts	118:15	123:8	5	
water	118:15	0:0	6	{
call	119:12	121:41	6	fprintf
arg	119:20	119:26	7	stderr
water	119:20	0:0	8	stderr
arg	120:16	120:77	7	"xtiff: can't handle %d-bit TIFF file on an %d-bit display\n"
water	120:16	0:0	8	"xtiff: can't handle %d-bit TIFF file on an %d-bit display\n"
arg	121:16	121:28	7	tfImageDepth
water	121:16	0:0	8	tfImageDepth
arg	121:30	121:41	7	xImageDepth
water	121:30	0:0	8	xImageDepth
water	121:42	0:0	6	;
call	122:12	122:18	6	exit
arg	122:17	122:18	7	0
water	122:17	0:0	8	0
water	122:19	0:0	6	;
water	123:8	0:0	6	}
water	124:4	0:0	4	}
call	125:4	125:18	2	free
arg	125:9	125:18	3	scan_line
water	125:9	0:0	4	scan_line
water	125:19	0:0	2	;

func	1:0	207:2	0	static int	computeOutputPixelOffsets
params	2:26	0:0	1	
param	2:27	2:49	2	struct crop_mask *	crop
param	2:51	2:75	2	struct image_data *	image
param	3:27	3:47	2	struct pagedef *	page
param	3:49	3:73	2	struct pageseg *	sections
param	4:27	4:49	2	struct dump_opts *	dump
stmnts	0:0	206:12	1	
decl	6:2	6:14	2	double	scale
decl	7:2	7:24	2	double	pwidth
water	7:15	0:0	2	,
decl	7:2	7:24	2	double	plength
decl	8:2	8:24	2	uint32	iwidth
water	8:15	0:0	2	,
decl	8:2	8:24	2	uint32	ilength
decl	9:2	9:24	2	uint32	owidth
water	9:15	0:0	2	,
decl	9:2	9:24	2	uint32	olength
decl	10:2	10:21	2	uint32	orows
water	10:14	0:0	2	,
decl	10:2	10:21	2	uint32	ocols
decl	11:2	11:25	2	uint32	hmargin
water	11:16	0:0	2	,
decl	11:2	11:25	2	uint32	vmargin
decl	12:2	12:35	2	uint32	x1
water	12:11	0:0	2	,
decl	12:2	12:35	2	uint32	x2
water	12:15	0:0	2	,
decl	12:2	12:35	2	uint32	y1
water	12:19	0:0	2	,
decl	12:2	12:35	2	uint32	y2
water	12:23	0:0	2	,
decl	12:2	12:35	2	uint32	line_bytes
decl	14:2	14:16	2	uint32	i
water	14:10	0:0	2	,
decl	14:2	14:16	2	uint32	j
water	14:13	0:0	2	,
decl	14:2	14:16	2	uint32	k
water	15:2	0:0	2	scale
op	15:8	0:0	2	=
water	15:10	0:0	2	1
op	15:11	0:0	2	.
water	15:12	0:0	2	0
water	15:13	0:0	2	;
if	16:2	17:36	2	(page -> res_unit == RESUNIT_NONE)
cond	16:6	16:24	3	page -> res_unit == RESUNIT_NONE
water	16:6	0:0	4	page
op	16:10	0:0	4	->
water	16:12	0:0	4	res_unit
op	16:21	0:0	4	==
water	16:24	0:0	4	RESUNIT_NONE
stmts	17:4	17:36	3	
water	17:4	0:0	4	page
op	17:8	0:0	4	->
water	17:10	0:0	4	res_unit
op	17:19	0:0	4	=
water	17:21	0:0	4	image
op	17:26	0:0	4	->
water	17:28	0:0	4	res_unit
water	17:36	0:0	4	;
switch	18:2	30:4	2	(image -> res_unit)
cond	18:10	18:17	3	image -> res_unit
water	18:10	0:0	4	image
op	18:15	0:0	4	->
water	18:17	0:0	4	res_unit
stmts	18:27	30:4	3	
water	18:27	0:0	4	{
label	19:4	19:27	4	case RESUNIT_CENTIMETER :
if	20:9	21:20	4	(page -> res_unit == RESUNIT_INCH)
cond	20:13	20:31	5	page -> res_unit == RESUNIT_INCH
water	20:13	0:0	6	page
op	20:17	0:0	6	->
water	20:19	0:0	6	res_unit
op	20:28	0:0	6	==
water	20:31	0:0	6	RESUNIT_INCH
stmts	21:4	21:20	5	
water	21:4	0:0	6	scale
op	21:10	0:0	6	=
water	21:12	0:0	6	1
op	21:13	0:0	6	.
water	21:14	0:0	6	0
op	21:15	0:0	6	/
water	21:16	0:0	6	2
op	21:17	0:0	6	.
water	21:18	0:0	6	54
water	21:20	0:0	6	;
break	22:2	22:7	4	
label	23:4	23:21	4	case RESUNIT_INCH :
if	24:2	25:18	4	(page -> res_unit == RESUNIT_CENTIMETER)
cond	24:6	24:24	5	page -> res_unit == RESUNIT_CENTIMETER
water	24:6	0:0	6	page
op	24:10	0:0	6	->
water	24:12	0:0	6	res_unit
op	24:21	0:0	6	==
water	24:24	0:0	6	RESUNIT_CENTIMETER
stmts	25:6	25:18	5	
water	25:6	0:0	6	scale
op	25:12	0:0	6	=
water	25:14	0:0	6	2
op	25:15	0:0	6	.
water	25:16	0:0	6	54
water	25:18	0:0	6	;
break	26:2	26:7	4	
label	27:4	27:21	4	case RESUNIT_NONE :
label	28:4	28:11	4	default :
break	29:4	29:9	4	
water	30:4	0:0	4	}
if	32:2	33:33	2	(crop -> combined_width > 0)
cond	32:6	32:29	3	crop -> combined_width > 0
water	32:6	0:0	4	crop
op	32:10	0:0	4	->
water	32:12	0:0	4	combined_width
op	32:27	0:0	4	>
water	32:29	0:0	4	0
stmts	33:4	33:33	3	
water	33:4	0:0	4	iwidth
op	33:11	0:0	4	=
water	33:13	0:0	4	crop
op	33:17	0:0	4	->
water	33:19	0:0	4	combined_width
water	33:33	0:0	4	;
else	34:2	35:25	2
stmts	35:4	35:25	3	
water	35:4	0:0	4	iwidth
op	35:11	0:0	4	=
water	35:13	0:0	4	image
op	35:18	0:0	4	->
water	35:20	0:0	4	width
water	35:25	0:0	4	;
if	36:2	37:35	2	(crop -> combined_length > 0)
cond	36:6	36:30	3	crop -> combined_length > 0
water	36:6	0:0	4	crop
op	36:10	0:0	4	->
water	36:12	0:0	4	combined_length
op	36:28	0:0	4	>
water	36:30	0:0	4	0
stmts	37:4	37:35	3	
water	37:4	0:0	4	ilength
op	37:12	0:0	4	=
water	37:14	0:0	4	crop
op	37:18	0:0	4	->
water	37:20	0:0	4	combined_length
water	37:35	0:0	4	;
else	38:2	39:27	2
stmts	39:4	39:27	3	
water	39:4	0:0	4	ilength
op	39:12	0:0	4	=
water	39:14	0:0	4	image
op	39:19	0:0	4	->
water	39:21	0:0	4	length
water	39:27	0:0	4	;
if	40:2	41:28	2	(page -> hres <= 1 . 0)
cond	40:6	40:22	3	page -> hres <= 1 . 0
water	40:6	0:0	4	page
op	40:10	0:0	4	->
water	40:12	0:0	4	hres
op	40:17	0:0	4	<=
water	40:20	0:0	4	1
op	40:21	0:0	4	.
water	40:22	0:0	4	0
stmts	41:4	41:28	3	
water	41:4	0:0	4	page
op	41:8	0:0	4	->
water	41:10	0:0	4	hres
op	41:15	0:0	4	=
water	41:17	0:0	4	image
op	41:22	0:0	4	->
water	41:24	0:0	4	xres
water	41:28	0:0	4	;
if	42:2	43:28	2	(page -> vres <= 1 . 0)
cond	42:6	42:22	3	page -> vres <= 1 . 0
water	42:6	0:0	4	page
op	42:10	0:0	4	->
water	42:12	0:0	4	vres
op	42:17	0:0	4	<=
water	42:20	0:0	4	1
op	42:21	0:0	4	.
water	42:22	0:0	4	0
stmts	43:4	43:28	3	
water	43:4	0:0	4	page
op	43:8	0:0	4	->
water	43:10	0:0	4	vres
op	43:15	0:0	4	=
water	43:17	0:0	4	image
op	43:22	0:0	4	->
water	43:24	0:0	4	yres
water	43:28	0:0	4	;
if	44:2	49:4	2	(( page -> hres < 1 . 0 ) || ( page -> vres < 1 . 0 ))
cond	44:6	44:45	3	( page -> hres < 1 . 0 ) || ( page -> vres < 1 . 0 )
water	44:6	0:0	4	(
water	44:7	0:0	4	page
op	44:11	0:0	4	->
water	44:13	0:0	4	hres
op	44:18	0:0	4	<
water	44:20	0:0	4	1
op	44:21	0:0	4	.
water	44:22	0:0	4	0
water	44:23	0:0	4	)
op	44:25	0:0	4	||
water	44:28	0:0	4	(
water	44:29	0:0	4	page
op	44:33	0:0	4	->
water	44:35	0:0	4	vres
op	44:40	0:0	4	<
water	44:42	0:0	4	1
op	44:43	0:0	4	.
water	44:44	0:0	4	0
water	44:45	0:0	4	)
stmts	45:4	49:4	3	
water	45:4	0:0	4	{
call	46:4	47:82	4	TIFFError
arg	46:14	46:41	5	"computeOutputPixelOffsets"
water	46:14	0:0	6	"computeOutputPixelOffsets"
arg	47:4	47:82	5	"Invalid horizontal or vertical resolution specified or read from input image"
water	47:4	0:0	6	"Invalid horizontal or vertical resolution specified or read from input image"
water	47:83	0:0	4	;
return	48:4	48:14	4	(1)
water	48:11	0:0	5	(
water	48:12	0:0	5	1
water	48:13	0:0	5	)
water	49:4	0:0	4	}
if	53:2	54:19	2	(page -> width <= 0)
cond	53:6	53:21	3	page -> width <= 0
water	53:6	0:0	4	page
op	53:10	0:0	4	->
water	53:12	0:0	4	width
op	53:18	0:0	4	<=
water	53:21	0:0	4	0
stmts	54:4	54:19	3	
water	54:4	0:0	4	pwidth
op	54:11	0:0	4	=
water	54:13	0:0	4	iwidth
water	54:19	0:0	4	;
else	55:2	56:24	2
stmts	56:4	56:24	3	
water	56:4	0:0	4	pwidth
op	56:11	0:0	4	=
water	56:13	0:0	4	page
op	56:17	0:0	4	->
water	56:19	0:0	4	width
water	56:24	0:0	4	;
if	57:2	58:21	2	(page -> length <= 0)
cond	57:6	57:22	3	page -> length <= 0
water	57:6	0:0	4	page
op	57:10	0:0	4	->
water	57:12	0:0	4	length
op	57:19	0:0	4	<=
water	57:22	0:0	4	0
stmts	58:4	58:21	3	
water	58:4	0:0	4	plength
op	58:12	0:0	4	=
water	58:14	0:0	4	ilength
water	58:21	0:0	4	;
else	59:2	60:26	2
stmts	60:4	60:26	3	
water	60:4	0:0	4	plength
op	60:12	0:0	4	=
water	60:14	0:0	4	page
op	60:18	0:0	4	->
water	60:20	0:0	4	length
water	60:26	0:0	4	;
if	61:2	69:4	2	(dump -> debug)
cond	61:6	61:12	3	dump -> debug
water	61:6	0:0	4	dump
op	61:10	0:0	4	->
water	61:12	0:0	4	debug
stmts	62:4	69:4	3	
water	62:4	0:0	4	{
call	63:4	66:41	4	TIFFError
arg	63:14	63:16	5	""
water	63:14	0:0	6	""
arg	63:18	64:51	5	"Page size: %s, Vres: %3.2f, Hres: %3.2f, ""Hmargin: %3.2f, Vmargin: %3.2f"
water	63:18	0:0	6	"Page size: %s, Vres: %3.2f, Hres: %3.2f, "
water	64:19	0:0	6	"Hmargin: %3.2f, Vmargin: %3.2f"
arg	65:6	65:16	5	page->name
water	65:6	0:0	6	page
op	65:10	0:0	6	->
water	65:12	0:0	6	name
arg	65:18	65:28	5	page->vres
water	65:18	0:0	6	page
op	65:22	0:0	6	->
water	65:24	0:0	6	vres
arg	65:30	65:40	5	page->hres
water	65:30	0:0	6	page
op	65:34	0:0	6	->
water	65:36	0:0	6	hres
arg	66:13	66:26	5	page->hmargin
water	66:13	0:0	6	page
op	66:17	0:0	6	->
water	66:19	0:0	6	hmargin
arg	66:28	66:41	5	page->vmargin
water	66:28	0:0	6	page
op	66:32	0:0	6	->
water	66:34	0:0	6	vmargin
water	66:42	0:0	4	;
call	67:4	68:49	4	TIFFError
arg	67:14	67:16	5	""
water	67:14	0:0	6	""
arg	67:18	67:80	5	"Res_unit: %d, Scale: %3.2f, Page width: %3.2f, length: %3.2f"
water	67:18	0:0	6	"Res_unit: %d, Scale: %3.2f, Page width: %3.2f, length: %3.2f"
arg	68:11	68:25	5	page->res_unit
water	68:11	0:0	6	page
op	68:15	0:0	6	->
water	68:17	0:0	6	res_unit
arg	68:27	68:32	5	scale
water	68:27	0:0	6	scale
arg	68:34	68:40	5	pwidth
water	68:34	0:0	6	pwidth
arg	68:42	68:49	5	plength
water	68:42	0:0	6	plength
water	68:50	0:0	4	;
water	69:4	0:0	4	}
if	71:2	97:4	2	(page -> mode & PAGE_MODE_MARGINS)
cond	71:6	71:19	3	page -> mode & PAGE_MODE_MARGINS
water	71:6	0:0	4	page
op	71:10	0:0	4	->
water	71:12	0:0	4	mode
op	71:17	0:0	4	&
water	71:19	0:0	4	PAGE_MODE_MARGINS
stmts	72:4	97:4	3	
water	72:4	0:0	4	{
if	73:4	77:6	4	(page -> res_unit == RESUNIT_INCH || page -> res_unit == RESUNIT_CENTIMETER)
cond	73:8	73:60	5	page -> res_unit == RESUNIT_INCH || page -> res_unit == RESUNIT_CENTIMETER
water	73:8	0:0	6	page
op	73:12	0:0	6	->
water	73:14	0:0	6	res_unit
op	73:23	0:0	6	==
water	73:26	0:0	6	RESUNIT_INCH
op	73:39	0:0	6	||
water	73:42	0:0	6	page
op	73:46	0:0	6	->
water	73:48	0:0	6	res_unit
op	73:57	0:0	6	==
water	73:60	0:0	6	RESUNIT_CENTIMETER
stmts	74:6	77:6	5	
water	74:6	0:0	6	{
water	75:6	0:0	6	hmargin
op	75:14	0:0	6	=
call	75:16	75:83	6	(uint32)
arg	75:25	75:83	7	page->hmargin*scale*page->hres*((image->bps+7)/8)
water	75:25	0:0	8	page
op	75:29	0:0	8	->
water	75:31	0:0	8	hmargin
op	75:39	0:0	8	*
water	75:41	0:0	8	scale
op	75:47	0:0	8	*
water	75:49	0:0	8	page
op	75:53	0:0	8	->
water	75:55	0:0	8	hres
op	75:60	0:0	8	*
water	75:62	0:0	8	(
water	75:63	0:0	8	(
water	75:64	0:0	8	image
op	75:69	0:0	8	->
water	75:71	0:0	8	bps
op	75:75	0:0	8	+
water	75:77	0:0	8	7
water	75:78	0:0	8	)
op	75:79	0:0	8	/
water	75:81	0:0	8	8
water	75:82	0:0	8	)
water	75:84	0:0	6	;
water	76:6	0:0	6	vmargin
op	76:14	0:0	6	=
call	76:16	76:83	6	(uint32)
arg	76:25	76:83	7	page->vmargin*scale*page->vres*((image->bps+7)/8)
water	76:25	0:0	8	page
op	76:29	0:0	8	->
water	76:31	0:0	8	vmargin
op	76:39	0:0	8	*
water	76:41	0:0	8	scale
op	76:47	0:0	8	*
water	76:49	0:0	8	page
op	76:53	0:0	8	->
water	76:55	0:0	8	vres
op	76:60	0:0	8	*
water	76:62	0:0	8	(
water	76:63	0:0	8	(
water	76:64	0:0	8	image
op	76:69	0:0	8	->
water	76:71	0:0	8	bps
op	76:75	0:0	8	+
water	76:77	0:0	8	7
water	76:78	0:0	8	)
op	76:79	0:0	8	/
water	76:81	0:0	8	8
water	76:82	0:0	8	)
water	76:84	0:0	6	;
water	77:6	0:0	6	}
else	78:4	82:6	4
stmts	79:6	82:6	5	
water	79:6	0:0	6	{
water	80:6	0:0	6	hmargin
op	80:14	0:0	6	=
call	80:16	80:70	6	(uint32)
arg	80:25	80:70	7	page->hmargin*scale*((image->bps+7)/8)
water	80:25	0:0	8	page
op	80:29	0:0	8	->
water	80:31	0:0	8	hmargin
op	80:39	0:0	8	*
water	80:41	0:0	8	scale
op	80:47	0:0	8	*
water	80:49	0:0	8	(
water	80:50	0:0	8	(
water	80:51	0:0	8	image
op	80:56	0:0	8	->
water	80:58	0:0	8	bps
op	80:62	0:0	8	+
water	80:64	0:0	8	7
water	80:65	0:0	8	)
op	80:66	0:0	8	/
water	80:68	0:0	8	8
water	80:69	0:0	8	)
water	80:71	0:0	6	;
water	81:6	0:0	6	vmargin
op	81:14	0:0	6	=
call	81:16	81:70	6	(uint32)
arg	81:25	81:70	7	page->vmargin*scale*((image->bps+7)/8)
water	81:25	0:0	8	page
op	81:29	0:0	8	->
water	81:31	0:0	8	vmargin
op	81:39	0:0	8	*
water	81:41	0:0	8	scale
op	81:47	0:0	8	*
water	81:49	0:0	8	(
water	81:50	0:0	8	(
water	81:51	0:0	8	image
op	81:56	0:0	8	->
water	81:58	0:0	8	bps
op	81:62	0:0	8	+
water	81:64	0:0	8	7
water	81:65	0:0	8	)
op	81:66	0:0	8	/
water	81:68	0:0	8	8
water	81:69	0:0	8	)
water	81:71	0:0	6	;
water	82:6	0:0	6	}
if	83:4	89:6	4	(( hmargin * 2 . 0 ) > ( pwidth * page -> hres ))
cond	83:8	83:46	5	( hmargin * 2 . 0 ) > ( pwidth * page -> hres )
water	83:8	0:0	6	(
water	83:9	0:0	6	hmargin
op	83:17	0:0	6	*
water	83:19	0:0	6	2
op	83:20	0:0	6	.
water	83:21	0:0	6	0
water	83:22	0:0	6	)
op	83:24	0:0	6	>
water	83:26	0:0	6	(
water	83:27	0:0	6	pwidth
op	83:34	0:0	6	*
water	83:36	0:0	6	page
op	83:40	0:0	6	->
water	83:42	0:0	6	hres
water	83:46	0:0	6	)
stmts	84:6	89:6	5	
water	84:6	0:0	6	{
call	85:6	86:67	6	TIFFError
arg	85:16	85:43	7	"computeOutputPixelOffsets"
water	85:16	0:0	8	"computeOutputPixelOffsets"
arg	86:16	86:67	7	"Combined left and right margins exceed page width"
water	86:16	0:0	8	"Combined left and right margins exceed page width"
water	86:68	0:0	6	;
water	87:6	0:0	6	hmargin
op	87:14	0:0	6	=
water	87:16	0:0	6	(
water	87:17	0:0	6	uint32
water	87:23	0:0	6	)
water	87:25	0:0	6	0
water	87:26	0:0	6	;
return	88:6	88:17	6	(-1)
water	88:13	0:0	7	(
op	88:14	0:0	7	-
water	88:15	0:0	7	1
water	88:16	0:0	7	)
water	89:6	0:0	6	}
if	90:4	96:6	4	(( vmargin * 2 . 0 ) > ( plength * page -> vres ))
cond	90:8	90:47	5	( vmargin * 2 . 0 ) > ( plength * page -> vres )
water	90:8	0:0	6	(
water	90:9	0:0	6	vmargin
op	90:17	0:0	6	*
water	90:19	0:0	6	2
op	90:20	0:0	6	.
water	90:21	0:0	6	0
water	90:22	0:0	6	)
op	90:24	0:0	6	>
water	90:26	0:0	6	(
water	90:27	0:0	6	plength
op	90:35	0:0	6	*
water	90:37	0:0	6	page
op	90:41	0:0	6	->
water	90:43	0:0	6	vres
water	90:47	0:0	6	)
stmts	91:6	96:6	5	
water	91:6	0:0	6	{
call	92:6	93:68	6	TIFFError
arg	92:16	92:43	7	"computeOutputPixelOffsets"
water	92:16	0:0	8	"computeOutputPixelOffsets"
arg	93:16	93:68	7	"Combined top and bottom margins exceed page length"
water	93:16	0:0	8	"Combined top and bottom margins exceed page length"
water	93:69	0:0	6	;
water	94:6	0:0	6	vmargin
op	94:14	0:0	6	=
water	94:16	0:0	6	(
water	94:17	0:0	6	uint32
water	94:23	0:0	6	)
water	94:25	0:0	6	0
water	94:26	0:0	6	;
return	95:6	95:17	6	(-1)
water	95:13	0:0	7	(
op	95:14	0:0	7	-
water	95:15	0:0	7	1
water	95:16	0:0	7	)
water	96:6	0:0	6	}
water	97:4	0:0	4	}
else	98:2	102:4	2
stmts	99:4	102:4	3	
water	99:4	0:0	4	{
water	100:4	0:0	4	hmargin
op	100:12	0:0	4	=
water	100:14	0:0	4	0
water	100:15	0:0	4	;
water	101:4	0:0	4	vmargin
op	101:12	0:0	4	=
water	101:14	0:0	4	0
water	101:15	0:0	4	;
water	102:4	0:0	4	}
if	103:2	111:4	2	(page -> mode & PAGE_MODE_ROWSCOLS)
cond	103:6	103:19	3	page -> mode & PAGE_MODE_ROWSCOLS
water	103:6	0:0	4	page
op	103:10	0:0	4	->
water	103:12	0:0	4	mode
op	103:17	0:0	4	&
water	103:19	0:0	4	PAGE_MODE_ROWSCOLS
stmts	104:4	111:4	3	
water	104:4	0:0	4	{
if	106:4	108:65	4	(page -> mode & PAGE_MODE_MARGINS)
cond	106:8	106:21	5	page -> mode & PAGE_MODE_MARGINS
water	106:8	0:0	6	page
op	106:12	0:0	6	->
water	106:14	0:0	6	mode
op	106:19	0:0	6	&
water	106:21	0:0	6	PAGE_MODE_MARGINS
stmts	107:6	108:65	5	
call	107:6	108:64	6	TIFFError
arg	107:16	107:43	7	"computeOutputPixelOffsets"
water	107:16	0:0	8	"computeOutputPixelOffsets"
arg	108:6	108:64	7	"Output margins cannot be specified with rows and columns"
water	108:6	0:0	8	"Output margins cannot be specified with rows and columns"
water	108:65	0:0	6	;
water	109:4	0:0	4	owidth
op	109:12	0:0	4	=
call	109:14	109:44	4	TIFFhowmany
arg	109:26	109:32	5	iwidth
water	109:26	0:0	6	iwidth
arg	109:34	109:44	5	page->cols
water	109:34	0:0	6	page
op	109:38	0:0	6	->
water	109:40	0:0	6	cols
water	109:45	0:0	4	;
water	110:4	0:0	4	olength
op	110:12	0:0	4	=
call	110:14	110:45	4	TIFFhowmany
arg	110:26	110:33	5	ilength
water	110:26	0:0	6	ilength
arg	110:35	110:45	5	page->rows
water	110:35	0:0	6	page
op	110:39	0:0	6	->
water	110:41	0:0	6	rows
water	110:46	0:0	4	;
water	111:4	0:0	4	}
else	112:2	124:4	2
stmts	113:4	124:4	3	
water	113:4	0:0	4	{
if	114:4	118:6	4	(page -> mode & PAGE_MODE_PAPERSIZE)
cond	114:8	114:21	5	page -> mode & PAGE_MODE_PAPERSIZE
water	114:8	0:0	6	page
op	114:12	0:0	6	->
water	114:14	0:0	6	mode
op	114:19	0:0	6	&
water	114:21	0:0	6	PAGE_MODE_PAPERSIZE
stmts	115:6	118:6	5	
water	115:6	0:0	6	{
water	116:6	0:0	6	owidth
op	116:14	0:0	6	=
call	116:16	116:62	6	(uint32)
arg	116:25	116:62	7	(pwidth*page->hres)-(hmargin*2)
water	116:25	0:0	8	(
water	116:26	0:0	8	pwidth
op	116:33	0:0	8	*
water	116:35	0:0	8	page
op	116:39	0:0	8	->
water	116:41	0:0	8	hres
water	116:45	0:0	8	)
op	116:47	0:0	8	-
water	116:49	0:0	8	(
water	116:50	0:0	8	hmargin
op	116:58	0:0	8	*
water	116:60	0:0	8	2
water	116:61	0:0	8	)
water	116:63	0:0	6	;
water	117:6	0:0	6	olength
op	117:14	0:0	6	=
call	117:16	117:63	6	(uint32)
arg	117:25	117:63	7	(plength*page->vres)-(vmargin*2)
water	117:25	0:0	8	(
water	117:26	0:0	8	plength
op	117:34	0:0	8	*
water	117:36	0:0	8	page
op	117:40	0:0	8	->
water	117:42	0:0	8	vres
water	117:46	0:0	8	)
op	117:48	0:0	8	-
water	117:50	0:0	8	(
water	117:51	0:0	8	vmargin
op	117:59	0:0	8	*
water	117:61	0:0	8	2
water	117:62	0:0	8	)
water	117:64	0:0	6	;
water	118:6	0:0	6	}
else	119:4	123:6	4
stmts	120:6	123:6	5	
water	120:6	0:0	6	{
water	121:6	0:0	6	owidth
op	121:13	0:0	6	=
call	121:15	121:59	6	(uint32)
arg	121:24	121:59	7	iwidth-(hmargin*2*page->hres)
water	121:24	0:0	8	iwidth
op	121:31	0:0	8	-
water	121:33	0:0	8	(
water	121:34	0:0	8	hmargin
op	121:42	0:0	8	*
water	121:44	0:0	8	2
op	121:46	0:0	8	*
water	121:48	0:0	8	page
op	121:52	0:0	8	->
water	121:54	0:0	8	hres
water	121:58	0:0	8	)
water	121:60	0:0	6	;
water	122:6	0:0	6	olength
op	122:14	0:0	6	=
call	122:16	122:61	6	(uint32)
arg	122:25	122:61	7	ilength-(vmargin*2*page->vres)
water	122:25	0:0	8	ilength
op	122:33	0:0	8	-
water	122:35	0:0	8	(
water	122:36	0:0	8	vmargin
op	122:44	0:0	8	*
water	122:46	0:0	8	2
op	122:48	0:0	8	*
water	122:50	0:0	8	page
op	122:54	0:0	8	->
water	122:56	0:0	8	vres
water	122:60	0:0	8	)
water	122:62	0:0	6	;
water	123:6	0:0	6	}
water	124:4	0:0	4	}
if	125:2	126:19	2	(owidth > iwidth)
cond	125:6	125:15	3	owidth > iwidth
water	125:6	0:0	4	owidth
op	125:13	0:0	4	>
water	125:15	0:0	4	iwidth
stmts	126:4	126:19	3	
water	126:4	0:0	4	owidth
op	126:11	0:0	4	=
water	126:13	0:0	4	iwidth
water	126:19	0:0	4	;
if	127:2	128:21	2	(olength > ilength)
cond	127:6	127:16	3	olength > ilength
water	127:6	0:0	4	olength
op	127:14	0:0	4	>
water	127:16	0:0	4	ilength
stmts	128:4	128:21	3	
water	128:4	0:0	4	olength
op	128:12	0:0	4	=
water	128:14	0:0	4	ilength
water	128:21	0:0	4	;
switch	130:2	167:4	2	(page -> orient)
cond	130:10	130:16	3	page -> orient
water	130:10	0:0	4	page
op	130:14	0:0	4	->
water	130:16	0:0	4	orient
stmts	131:4	167:4	3	
water	131:4	0:0	4	{
label	132:4	132:25	4	case ORIENTATION_NONE :
label	133:4	133:29	4	case ORIENTATION_PORTRAIT :
water	134:9	0:0	4	ocols
op	134:15	0:0	4	=
call	134:17	134:43	4	TIFFhowmany
arg	134:29	134:35	5	iwidth
water	134:29	0:0	6	iwidth
arg	134:37	134:43	5	owidth
water	134:37	0:0	6	owidth
water	134:44	0:0	4	;
water	135:9	0:0	4	orows
op	135:15	0:0	4	=
call	135:17	135:45	4	TIFFhowmany
arg	135:29	135:36	5	ilength
water	135:29	0:0	6	ilength
arg	135:38	135:45	5	olength
water	135:38	0:0	6	olength
water	135:46	0:0	4	;
break	137:9	137:14	4	
label	138:4	138:30	4	case ORIENTATION_LANDSCAPE :
water	139:9	0:0	4	ocols
op	139:15	0:0	4	=
call	139:17	139:44	4	TIFFhowmany
arg	139:29	139:35	5	iwidth
water	139:29	0:0	6	iwidth
arg	139:37	139:44	5	olength
water	139:37	0:0	6	olength
water	139:45	0:0	4	;
water	140:9	0:0	4	orows
op	140:15	0:0	4	=
call	140:17	140:44	4	TIFFhowmany
arg	140:29	140:36	5	ilength
water	140:29	0:0	6	ilength
arg	140:38	140:44	5	owidth
water	140:38	0:0	6	owidth
water	140:45	0:0	4	;
water	141:9	0:0	4	x1
op	141:12	0:0	4	=
water	141:14	0:0	4	olength
water	141:21	0:0	4	;
water	142:9	0:0	4	olength
op	142:17	0:0	4	=
water	142:19	0:0	4	owidth
water	142:25	0:0	4	;
water	143:9	0:0	4	owidth
op	143:16	0:0	4	=
water	143:18	0:0	4	x1
water	143:20	0:0	4	;
break	145:9	145:14	4	
label	146:4	146:25	4	case ORIENTATION_AUTO :
label	147:4	147:11	4	default :
water	148:9	0:0	4	x1
op	148:12	0:0	4	=
call	148:14	148:40	4	TIFFhowmany
arg	148:26	148:32	5	iwidth
water	148:26	0:0	6	iwidth
arg	148:34	148:40	5	owidth
water	148:34	0:0	6	owidth
water	148:41	0:0	4	;
water	149:9	0:0	4	x2
op	149:12	0:0	4	=
call	149:14	149:42	4	TIFFhowmany
arg	149:26	149:33	5	ilength
water	149:26	0:0	6	ilength
arg	149:35	149:42	5	olength
water	149:35	0:0	6	olength
water	149:43	0:0	4	;
water	150:9	0:0	4	y1
op	150:12	0:0	4	=
call	150:14	150:41	4	TIFFhowmany
arg	150:26	150:32	5	iwidth
water	150:26	0:0	6	iwidth
arg	150:34	150:41	5	olength
water	150:34	0:0	6	olength
water	150:42	0:0	4	;
water	151:9	0:0	4	y2
op	151:12	0:0	4	=
call	151:14	151:41	4	TIFFhowmany
arg	151:26	151:33	5	ilength
water	151:26	0:0	6	ilength
arg	151:35	151:41	5	owidth
water	151:35	0:0	6	owidth
water	151:42	0:0	4	;
if	152:9	157:4	4	(( x1 * x2 ) < ( y1 * y2 ))
cond	152:14	152:34	5	( x1 * x2 ) < ( y1 * y2 )
water	152:14	0:0	6	(
water	152:15	0:0	6	x1
op	152:18	0:0	6	*
water	152:20	0:0	6	x2
water	152:22	0:0	6	)
op	152:24	0:0	6	<
water	152:26	0:0	6	(
water	152:27	0:0	6	y1
op	152:30	0:0	6	*
water	152:32	0:0	6	y2
water	152:34	0:0	6	)
stmts	153:11	157:4	5	
water	153:11	0:0	6	{
water	154:11	0:0	6	ocols
op	154:17	0:0	6	=
water	154:19	0:0	6	x1
water	154:21	0:0	6	;
water	155:11	0:0	6	orows
op	155:17	0:0	6	=
water	155:19	0:0	6	x2
water	155:21	0:0	6	;
water	157:4	0:0	6	}
else	158:9	166:11	4
stmts	159:11	166:11	5	
water	159:11	0:0	6	{
water	160:11	0:0	6	ocols
op	160:17	0:0	6	=
water	160:19	0:0	6	y1
water	160:21	0:0	6	;
water	161:11	0:0	6	orows
op	161:17	0:0	6	=
water	161:19	0:0	6	y2
water	161:21	0:0	6	;
water	162:11	0:0	6	x1
op	162:14	0:0	6	=
water	162:16	0:0	6	olength
water	162:23	0:0	6	;
water	163:11	0:0	6	olength
op	163:19	0:0	6	=
water	163:21	0:0	6	owidth
water	163:27	0:0	6	;
water	164:11	0:0	6	owidth
op	164:18	0:0	6	=
water	164:20	0:0	6	x1
water	164:22	0:0	6	;
water	166:11	0:0	6	}
water	167:4	0:0	4	}
if	168:2	169:13	2	(ocols < 1)
cond	168:6	168:14	3	ocols < 1
water	168:6	0:0	4	ocols
op	168:12	0:0	4	<
water	168:14	0:0	4	1
stmts	169:4	169:13	3	
water	169:4	0:0	4	ocols
op	169:10	0:0	4	=
water	169:12	0:0	4	1
water	169:13	0:0	4	;
if	170:2	171:13	2	(orows < 1)
cond	170:6	170:14	3	orows < 1
water	170:6	0:0	4	orows
op	170:12	0:0	4	<
water	170:14	0:0	4	1
stmts	171:4	171:13	3	
water	171:4	0:0	4	orows
op	171:10	0:0	4	=
water	171:12	0:0	4	1
water	171:13	0:0	4	;
if	173:2	174:22	2	(page -> rows < 1)
cond	173:6	173:19	3	page -> rows < 1
water	173:6	0:0	4	page
op	173:10	0:0	4	->
water	173:12	0:0	4	rows
op	173:17	0:0	4	<
water	173:19	0:0	4	1
stmts	174:4	174:22	3	
water	174:4	0:0	4	page
op	174:8	0:0	4	->
water	174:10	0:0	4	rows
op	174:15	0:0	4	=
water	174:17	0:0	4	orows
water	174:22	0:0	4	;
if	175:2	176:22	2	(page -> cols < 1)
cond	175:6	175:19	3	page -> cols < 1
water	175:6	0:0	4	page
op	175:10	0:0	4	->
water	175:12	0:0	4	cols
op	175:17	0:0	4	<
water	175:19	0:0	4	1
stmts	176:4	176:22	3	
water	176:4	0:0	4	page
op	176:8	0:0	4	->
water	176:10	0:0	4	cols
op	176:15	0:0	4	=
water	176:17	0:0	4	ocols
water	176:22	0:0	4	;
water	177:2	0:0	2	line_bytes
op	177:13	0:0	2	=
call	177:15	177:47	2	TIFFhowmany8
arg	177:28	177:47	3	owidth*image->bps
water	177:28	0:0	4	owidth
op	177:35	0:0	4	*
water	177:37	0:0	4	image
op	177:42	0:0	4	->
water	177:44	0:0	4	bps
op	177:49	0:0	2	*
water	177:51	0:0	2	image
op	177:56	0:0	2	->
water	177:58	0:0	2	spp
water	177:61	0:0	2	;
if	178:2	183:3	2	(( page -> rows * page -> cols ) > MAX_SECTIONS)
cond	178:6	178:34	3	( page -> rows * page -> cols ) > MAX_SECTIONS
water	178:6	0:0	4	(
water	178:7	0:0	4	page
op	178:11	0:0	4	->
water	178:13	0:0	4	rows
op	178:18	0:0	4	*
water	178:20	0:0	4	page
op	178:24	0:0	4	->
water	178:26	0:0	4	cols
water	178:30	0:0	4	)
op	178:32	0:0	4	>
water	178:34	0:0	4	MAX_SECTIONS
stmts	179:3	183:3	3	
water	179:3	0:0	4	{
call	180:3	181:88	4	TIFFError
arg	180:13	180:40	5	"computeOutputPixelOffsets"
water	180:13	0:0	6	"computeOutputPixelOffsets"
arg	181:6	181:88	5	"Rows and Columns exceed maximum sections\nIncrease resolution or reduce sections"
water	181:6	0:0	6	"Rows and Columns exceed maximum sections\nIncrease resolution or reduce sections"
water	181:89	0:0	4	;
return	182:3	182:14	4	(-1)
water	182:10	0:0	5	(
op	182:11	0:0	5	-
water	182:12	0:0	5	1
water	182:13	0:0	5	)
water	183:3	0:0	4	}
for	185:2	205:4	2	(k = 0 , i = 0 && k <= MAX_SECTIONS ;i < orows;i ++)
forinit	185:7	185:40	3	k = 0 , i = 0 && k <= MAX_SECTIONS ;
water	185:7	0:0	4	k
op	185:9	0:0	4	=
water	185:11	0:0	4	0
water	185:12	0:0	4	,
water	185:14	0:0	4	i
op	185:16	0:0	4	=
water	185:18	0:0	4	0
op	185:20	0:0	4	&&
water	185:23	0:0	4	k
op	185:25	0:0	4	<=
water	185:28	0:0	4	MAX_SECTIONS
water	185:40	0:0	4	;
cond	185:42	185:46	3	i < orows
water	185:42	0:0	4	i
op	185:44	0:0	4	<
water	185:46	0:0	4	orows
forexpr	185:53	185:54	3	i ++
water	185:53	0:0	4	i
op	185:54	0:0	4	++
stmts	186:4	205:4	3	
water	186:4	0:0	4	{
water	187:4	0:0	4	y1
op	187:7	0:0	4	=
call	187:9	187:29	4	(uint32)
arg	187:18	187:29	5	olength*i
water	187:18	0:0	6	olength
op	187:26	0:0	6	*
water	187:28	0:0	6	i
water	187:30	0:0	4	;
water	188:4	0:0	4	y2
op	188:7	0:0	4	=
call	188:9	188:40	4	(uint32)
arg	188:18	188:40	5	olength*(i+1)-1
water	188:18	0:0	6	olength
op	188:26	0:0	6	*
water	188:28	0:0	6	(
water	188:29	0:0	6	i
op	188:31	0:0	6	+
water	188:34	0:0	6	1
water	188:35	0:0	6	)
op	188:37	0:0	6	-
water	188:39	0:0	6	1
water	188:41	0:0	4	;
if	189:4	190:22	4	(y2 >= ilength)
cond	189:8	189:14	5	y2 >= ilength
water	189:8	0:0	6	y2
op	189:11	0:0	6	>=
water	189:14	0:0	6	ilength
stmts	190:6	190:22	5	
water	190:6	0:0	6	y2
op	190:9	0:0	6	=
water	190:11	0:0	6	ilength
op	190:19	0:0	6	-
water	190:21	0:0	6	1
water	190:22	0:0	6	;
for	191:4	204:6	4	(j = 0 ;j < ocols;j ++ , k ++)
forinit	191:9	191:14	5	j = 0 ;
water	191:9	0:0	6	j
op	191:11	0:0	6	=
water	191:13	0:0	6	0
water	191:14	0:0	6	;
cond	191:16	191:20	5	j < ocols
water	191:16	0:0	6	j
op	191:18	0:0	6	<
water	191:20	0:0	6	ocols
forexpr	191:27	191:33	5	j ++ , k ++
water	191:27	0:0	6	j
op	191:28	0:0	6	++
water	191:30	0:0	6	,
water	191:32	0:0	6	k
op	191:33	0:0	6	++
stmts	192:6	204:6	5	
water	192:6	0:0	6	{
water	193:6	0:0	6	x1
op	193:9	0:0	6	=
call	193:11	193:30	6	(uint32)
arg	193:20	193:30	7	owidth*j
water	193:20	0:0	8	owidth
op	193:27	0:0	8	*
water	193:29	0:0	8	j
water	193:31	0:0	6	;
water	194:6	0:0	6	x2
op	194:9	0:0	6	=
call	194:11	194:40	6	(uint32)
arg	194:20	194:40	7	owidth*(j+1)-1
water	194:20	0:0	8	owidth
op	194:27	0:0	8	*
water	194:29	0:0	8	(
water	194:30	0:0	8	j
op	194:32	0:0	8	+
water	194:34	0:0	8	1
water	194:35	0:0	8	)
op	194:37	0:0	8	-
water	194:39	0:0	8	1
water	194:41	0:0	6	;
if	195:6	196:23	6	(x2 >= iwidth)
cond	195:10	195:16	7	x2 >= iwidth
water	195:10	0:0	8	x2
op	195:13	0:0	8	>=
water	195:16	0:0	8	iwidth
stmts	196:8	196:23	7	
water	196:8	0:0	8	x2
op	196:11	0:0	8	=
water	196:13	0:0	8	iwidth
op	196:20	0:0	8	-
water	196:22	0:0	8	1
water	196:23	0:0	8	;
water	197:6	0:0	6	sections
op	197:14	0:0	6	[
water	197:15	0:0	6	k
op	197:16	0:0	6	]
op	197:17	0:0	6	.
water	197:18	0:0	6	x1
op	197:21	0:0	6	=
water	197:23	0:0	6	x1
water	197:25	0:0	6	;
water	198:6	0:0	6	sections
op	198:14	0:0	6	[
water	198:15	0:0	6	k
op	198:16	0:0	6	]
op	198:17	0:0	6	.
water	198:18	0:0	6	x2
op	198:21	0:0	6	=
water	198:23	0:0	6	x2
water	198:25	0:0	6	;
water	199:6	0:0	6	sections
op	199:14	0:0	6	[
water	199:15	0:0	6	k
op	199:16	0:0	6	]
op	199:17	0:0	6	.
water	199:18	0:0	6	y1
op	199:21	0:0	6	=
water	199:23	0:0	6	y1
water	199:25	0:0	6	;
water	200:6	0:0	6	sections
op	200:14	0:0	6	[
water	200:15	0:0	6	k
op	200:16	0:0	6	]
op	200:17	0:0	6	.
water	200:18	0:0	6	y2
op	200:21	0:0	6	=
water	200:23	0:0	6	y2
water	200:25	0:0	6	;
water	201:6	0:0	6	sections
op	201:14	0:0	6	[
water	201:15	0:0	6	k
op	201:16	0:0	6	]
op	201:17	0:0	6	.
water	201:18	0:0	6	buffsize
op	201:27	0:0	6	=
water	201:29	0:0	6	line_bytes
op	201:40	0:0	6	*
water	201:42	0:0	6	olength
water	201:49	0:0	6	;
water	202:6	0:0	6	sections
op	202:14	0:0	6	[
water	202:15	0:0	6	k
op	202:16	0:0	6	]
op	202:17	0:0	6	.
water	202:18	0:0	6	position
op	202:27	0:0	6	=
water	202:29	0:0	6	k
op	202:31	0:0	6	+
water	202:33	0:0	6	1
water	202:34	0:0	6	;
water	203:6	0:0	6	sections
op	203:14	0:0	6	[
water	203:15	0:0	6	k
op	203:16	0:0	6	]
op	203:17	0:0	6	.
water	203:18	0:0	6	total
op	203:24	0:0	6	=
water	203:26	0:0	6	orows
op	203:32	0:0	6	*
water	203:34	0:0	6	ocols
water	203:39	0:0	6	;
water	204:6	0:0	6	}
water	205:4	0:0	4	}
return	206:2	206:12	2	(0)
water	206:9	0:0	3	(
water	206:10	0:0	3	0
water	206:11	0:0	3	)

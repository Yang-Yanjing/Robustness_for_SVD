func	1:0	97:0	0	int	mfs_open
params	1:13	0:0	1	
param	1:14	1:26	2	void *	buffer
param	1:28	1:36	2	int	size
param	1:38	1:48	2	char *	mode
stmnts	0:0	96:16	1	
decl	3:4	3:14	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:14	2	int	i
decl	4:4	4:13	2	void	*tmp
if	5:4	9:4	2	(library_init_done == FALSE)
cond	5:8	5:29	3	library_init_done == FALSE
water	5:8	0:0	4	library_init_done
op	5:26	0:0	4	==
water	5:29	0:0	4	FALSE
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:18	4	mem_init
water	7:19	0:0	4	;
water	8:8	0:0	4	library_init_done
op	8:26	0:0	4	=
water	8:28	0:0	4	TRUE
water	8:32	0:0	4	;
water	9:4	0:0	4	}
water	10:4	0:0	2	ret
op	10:8	0:0	2	=
op	10:10	0:0	2	-
water	10:11	0:0	2	1
water	10:12	0:0	2	;
for	12:4	19:4	2	(i = 0 ;i < MAX_BUFFS;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:20	3	i < MAX_BUFFS
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	MAX_BUFFS
forexpr	12:31	12:32	3	i ++
water	12:31	0:0	4	i
op	12:32	0:0	4	++
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
if	14:8	18:8	4	(fds [ i ] == - 1)
cond	14:12	14:23	5	fds [ i ] == - 1
water	14:12	0:0	6	fds
op	14:15	0:0	6	[
water	14:16	0:0	6	i
op	14:17	0:0	6	]
op	14:19	0:0	6	==
op	14:22	0:0	6	-
water	14:23	0:0	6	1
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
water	16:12	0:0	6	ret
op	16:16	0:0	6	=
water	16:18	0:0	6	i
water	16:19	0:0	6	;
break	17:12	17:17	6	
water	18:8	0:0	6	}
water	19:4	0:0	4	}
if	20:4	24:4	2	(i == MAX_BUFFS)
cond	20:8	20:13	3	i == MAX_BUFFS
water	20:8	0:0	4	i
op	20:10	0:0	4	==
water	20:13	0:0	4	MAX_BUFFS
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
water	22:8	0:0	4	ret
op	22:12	0:0	4	=
op	22:14	0:0	4	-
water	22:15	0:0	4	1
water	22:16	0:0	4	;
water	23:8	0:0	4	errno
op	23:14	0:0	4	=
water	23:16	0:0	4	EMFILE
water	23:22	0:0	4	;
water	24:4	0:0	4	}
if	25:4	38:4	2	(ret >= 0 && * mode == 'r')
cond	25:8	25:29	3	ret >= 0 && * mode == 'r'
water	25:8	0:0	4	ret
op	25:12	0:0	4	>=
water	25:15	0:0	4	0
op	25:17	0:0	4	&&
op	25:20	0:0	4	*
water	25:21	0:0	4	mode
op	25:26	0:0	4	==
water	25:29	0:0	4	'r'
stmts	26:4	38:4	3	
water	26:4	0:0	4	{
if	27:8	31:8	4	(buffer == ( void * ) NULL)
cond	27:12	27:30	5	buffer == ( void * ) NULL
water	27:12	0:0	6	buffer
op	27:19	0:0	6	==
water	27:22	0:0	6	(
water	27:23	0:0	6	void
op	27:28	0:0	6	*
water	27:29	0:0	6	)
water	27:30	0:0	6	NULL
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
water	29:12	0:0	6	ret
op	29:16	0:0	6	=
op	29:18	0:0	6	-
water	29:19	0:0	6	1
water	29:20	0:0	6	;
water	30:12	0:0	6	errno
op	30:18	0:0	6	=
water	30:20	0:0	6	EINVAL
water	30:26	0:0	6	;
water	31:8	0:0	6	}
else	32:8	37:8	4
stmts	33:8	37:8	5	
water	33:8	0:0	6	{
water	34:12	0:0	6	buf
op	34:15	0:0	6	[
water	34:16	0:0	6	ret
op	34:19	0:0	6	]
op	34:21	0:0	6	=
water	34:23	0:0	6	(
water	34:24	0:0	6	char
op	34:29	0:0	6	*
water	34:30	0:0	6	)
water	34:31	0:0	6	buffer
water	34:37	0:0	6	;
water	35:12	0:0	6	buf_size
op	35:20	0:0	6	[
water	35:21	0:0	6	ret
op	35:24	0:0	6	]
op	35:26	0:0	6	=
water	35:28	0:0	6	size
water	35:32	0:0	6	;
water	36:12	0:0	6	buf_off
op	36:19	0:0	6	[
water	36:20	0:0	6	ret
op	36:23	0:0	6	]
op	36:25	0:0	6	=
water	36:27	0:0	6	0
water	36:28	0:0	6	;
water	37:8	0:0	6	}
water	38:4	0:0	4	}
else	39:4	61:4	2
stmts	39:9	61:4	3	
if	39:9	61:4	4	(ret >= 0 && * mode == 'w')
cond	39:13	39:34	5	ret >= 0 && * mode == 'w'
water	39:13	0:0	6	ret
op	39:17	0:0	6	>=
water	39:20	0:0	6	0
op	39:22	0:0	6	&&
op	39:25	0:0	6	*
water	39:26	0:0	6	mode
op	39:31	0:0	6	==
water	39:34	0:0	6	'w'
stmts	40:4	61:4	5	
water	40:4	0:0	6	{
if	41:8	45:8	6	(buffer != ( void * ) NULL)
cond	41:12	41:30	7	buffer != ( void * ) NULL
water	41:12	0:0	8	buffer
op	41:19	0:0	8	!=
water	41:22	0:0	8	(
water	41:23	0:0	8	void
op	41:28	0:0	8	*
water	41:29	0:0	8	)
water	41:30	0:0	8	NULL
stmts	42:8	45:8	7	
water	42:8	0:0	8	{
water	43:12	0:0	8	ret
op	43:16	0:0	8	=
op	43:18	0:0	8	-
water	43:19	0:0	8	1
water	43:20	0:0	8	;
water	44:12	0:0	8	errno
op	44:18	0:0	8	=
water	44:20	0:0	8	EINVAL
water	44:26	0:0	8	;
water	45:8	0:0	8	}
else	46:8	60:8	6
stmts	47:8	60:8	7	
water	47:8	0:0	8	{
water	48:12	0:0	8	tmp
op	48:16	0:0	8	=
call	48:18	48:27	8	malloc
arg	48:26	48:27	9	0
water	48:26	0:0	10	0
water	48:28	0:0	8	;
if	49:12	53:12	8	(tmp == ( void * ) NULL)
cond	49:16	49:31	9	tmp == ( void * ) NULL
water	49:16	0:0	10	tmp
op	49:20	0:0	10	==
water	49:23	0:0	10	(
water	49:24	0:0	10	void
op	49:29	0:0	10	*
water	49:30	0:0	10	)
water	49:31	0:0	10	NULL
stmts	50:12	53:12	9	
water	50:12	0:0	10	{
water	51:16	0:0	10	ret
op	51:20	0:0	10	=
op	51:22	0:0	10	-
water	51:23	0:0	10	1
water	51:24	0:0	10	;
water	52:16	0:0	10	errno
op	52:22	0:0	10	=
water	52:24	0:0	10	EDQUOT
water	52:30	0:0	10	;
water	53:12	0:0	10	}
else	54:12	59:12	8
stmts	55:12	59:12	9	
water	55:12	0:0	10	{
water	56:16	0:0	10	buf
op	56:19	0:0	10	[
water	56:20	0:0	10	ret
op	56:23	0:0	10	]
op	56:25	0:0	10	=
water	56:27	0:0	10	(
water	56:28	0:0	10	char
op	56:33	0:0	10	*
water	56:34	0:0	10	)
water	56:35	0:0	10	tmp
water	56:38	0:0	10	;
water	57:16	0:0	10	buf_size
op	57:24	0:0	10	[
water	57:25	0:0	10	ret
op	57:28	0:0	10	]
op	57:30	0:0	10	=
water	57:32	0:0	10	0
water	57:33	0:0	10	;
water	58:16	0:0	10	buf_off
op	58:23	0:0	10	[
water	58:24	0:0	10	ret
op	58:27	0:0	10	]
op	58:29	0:0	10	=
water	58:31	0:0	10	0
water	58:32	0:0	10	;
water	59:12	0:0	10	}
water	60:8	0:0	8	}
water	61:4	0:0	6	}
else	62:4	85:4	2
stmts	62:9	85:4	3	
if	62:9	85:4	4	(ret >= 0 && * mode == 'a')
cond	62:13	62:34	5	ret >= 0 && * mode == 'a'
water	62:13	0:0	6	ret
op	62:17	0:0	6	>=
water	62:20	0:0	6	0
op	62:22	0:0	6	&&
op	62:25	0:0	6	*
water	62:26	0:0	6	mode
op	62:31	0:0	6	==
water	62:34	0:0	6	'a'
stmts	63:4	85:4	5	
water	63:4	0:0	6	{
if	64:8	78:8	6	(buffer == ( void * ) NULL)
cond	64:12	64:31	7	buffer == ( void * ) NULL
water	64:12	0:0	8	buffer
op	64:19	0:0	8	==
water	64:22	0:0	8	(
water	64:23	0:0	8	void
op	64:28	0:0	8	*
water	64:29	0:0	8	)
water	64:31	0:0	8	NULL
stmts	65:8	78:8	7	
water	65:8	0:0	8	{
water	66:12	0:0	8	tmp
op	66:16	0:0	8	=
call	66:18	66:27	8	malloc
arg	66:26	66:27	9	0
water	66:26	0:0	10	0
water	66:28	0:0	8	;
if	67:12	71:12	8	(tmp == ( void * ) NULL)
cond	67:16	67:31	9	tmp == ( void * ) NULL
water	67:16	0:0	10	tmp
op	67:20	0:0	10	==
water	67:23	0:0	10	(
water	67:24	0:0	10	void
op	67:29	0:0	10	*
water	67:30	0:0	10	)
water	67:31	0:0	10	NULL
stmts	68:12	71:12	9	
water	68:12	0:0	10	{
water	69:16	0:0	10	ret
op	69:20	0:0	10	=
op	69:22	0:0	10	-
water	69:23	0:0	10	1
water	69:24	0:0	10	;
water	70:16	0:0	10	errno
op	70:22	0:0	10	=
water	70:24	0:0	10	EDQUOT
water	70:30	0:0	10	;
water	71:12	0:0	10	}
else	72:12	77:12	8
stmts	73:12	77:12	9	
water	73:12	0:0	10	{
water	74:16	0:0	10	buf
op	74:19	0:0	10	[
water	74:20	0:0	10	ret
op	74:23	0:0	10	]
op	74:25	0:0	10	=
water	74:27	0:0	10	(
water	74:28	0:0	10	char
op	74:33	0:0	10	*
water	74:34	0:0	10	)
water	74:35	0:0	10	tmp
water	74:38	0:0	10	;
water	75:16	0:0	10	buf_size
op	75:24	0:0	10	[
water	75:25	0:0	10	ret
op	75:28	0:0	10	]
op	75:30	0:0	10	=
water	75:32	0:0	10	0
water	75:33	0:0	10	;
water	76:16	0:0	10	buf_off
op	76:23	0:0	10	[
water	76:24	0:0	10	ret
op	76:27	0:0	10	]
op	76:29	0:0	10	=
water	76:31	0:0	10	0
water	76:32	0:0	10	;
water	77:12	0:0	10	}
water	78:8	0:0	8	}
else	79:8	84:8	6
stmts	80:8	84:8	7	
water	80:8	0:0	8	{
water	81:12	0:0	8	buf
op	81:15	0:0	8	[
water	81:16	0:0	8	ret
op	81:19	0:0	8	]
op	81:21	0:0	8	=
water	81:23	0:0	8	(
water	81:24	0:0	8	char
op	81:29	0:0	8	*
water	81:30	0:0	8	)
water	81:31	0:0	8	buffer
water	81:37	0:0	8	;
water	82:12	0:0	8	buf_size
op	82:20	0:0	8	[
water	82:21	0:0	8	ret
op	82:24	0:0	8	]
op	82:26	0:0	8	=
water	82:28	0:0	8	size
water	82:32	0:0	8	;
water	83:12	0:0	8	buf_off
op	83:19	0:0	8	[
water	83:20	0:0	8	ret
op	83:23	0:0	8	]
op	83:25	0:0	8	=
water	83:27	0:0	8	0
water	83:28	0:0	8	;
water	84:8	0:0	8	}
water	85:4	0:0	6	}
else	86:4	90:4	2
stmts	87:4	90:4	3	
water	87:4	0:0	4	{
water	88:8	0:0	4	ret
op	88:12	0:0	4	=
op	88:14	0:0	4	-
water	88:15	0:0	4	1
water	88:16	0:0	4	;
water	89:8	0:0	4	errno
op	89:14	0:0	4	=
water	89:16	0:0	4	EINVAL
water	89:22	0:0	4	;
water	90:4	0:0	4	}
if	91:4	95:4	2	(ret != - 1)
cond	91:8	91:16	3	ret != - 1
water	91:8	0:0	4	ret
op	91:12	0:0	4	!=
op	91:15	0:0	4	-
water	91:16	0:0	4	1
stmts	92:4	95:4	3	
water	92:4	0:0	4	{
water	93:8	0:0	4	fds
op	93:11	0:0	4	[
water	93:12	0:0	4	ret
op	93:15	0:0	4	]
op	93:17	0:0	4	=
water	93:19	0:0	4	0
water	93:20	0:0	4	;
water	94:8	0:0	4	buf_mode
op	94:16	0:0	4	[
water	94:17	0:0	4	ret
op	94:20	0:0	4	]
op	94:22	0:0	4	=
op	94:24	0:0	4	*
water	94:25	0:0	4	mode
water	94:29	0:0	4	;
water	95:4	0:0	4	}
return	96:4	96:16	2	(ret)
water	96:11	0:0	3	(
water	96:12	0:0	3	ret
water	96:15	0:0	3	)

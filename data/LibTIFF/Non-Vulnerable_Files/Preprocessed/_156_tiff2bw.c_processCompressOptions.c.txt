func	1:0	34:0	0	static int	processCompressOptions
params	2:22	0:0	1	
param	2:23	2:32	2	char *	opt
stmnts	4:1	33:11	1	
if	4:1	5:32	2	(streq (opt ,"none" ))
cond	4:5	4:22	3	streq (opt ,"none" )
call	4:5	4:22	4	streq
arg	4:11	4:14	5	opt
water	4:11	0:0	6	opt
arg	4:16	4:22	5	"none"
water	4:16	0:0	6	"none"
stmts	5:2	5:32	3	
water	5:2	0:0	4	compression
op	5:14	0:0	4	=
water	5:16	0:0	4	COMPRESSION_NONE
water	5:32	0:0	4	;
else	6:1	7:36	2
stmts	6:6	7:36	3	
if	6:6	7:36	4	(streq (opt ,"packbits" ))
cond	6:10	6:31	5	streq (opt ,"packbits" )
call	6:10	6:31	6	streq
arg	6:16	6:19	7	opt
water	6:16	0:0	8	opt
arg	6:21	6:31	7	"packbits"
water	6:21	0:0	8	"packbits"
stmts	7:2	7:36	5	
water	7:2	0:0	6	compression
op	7:14	0:0	6	=
water	7:16	0:0	6	COMPRESSION_PACKBITS
water	7:36	0:0	6	;
else	8:1	21:1	2
stmts	8:6	21:1	3	
if	8:6	21:1	4	(strneq (opt ,"jpeg" ,4 ))
cond	8:10	8:31	5	strneq (opt ,"jpeg" ,4 )
call	8:10	8:31	6	strneq
arg	8:17	8:20	7	opt
water	8:17	0:0	8	opt
arg	8:22	8:28	7	"jpeg"
water	8:22	0:0	8	"jpeg"
arg	8:30	8:31	7	4
water	8:30	0:0	8	4
stmts	8:34	21:1	5	
water	8:34	0:0	6	{
decl	9:2	9:29	6	char	*cp
op	9:11	0:0	6	=
call	9:13	9:28	7	strchr
arg	9:20	9:23	8	opt
water	9:20	0:0	9	opt
arg	9:25	9:28	8	':'
water	9:25	0:0	9	':'
water	10:16	0:0	6	compression
op	10:28	0:0	6	=
water	10:30	0:0	6	COMPRESSION_JPEG
water	10:46	0:0	6	;
while	11:16	20:16	6	(cp)
cond	11:23	11:23	7	cp
water	11:23	0:0	8	cp
stmts	12:16	20:16	7	
water	12:16	0:0	8	{
if	13:20	14:23	8	(isdigit (( int ) cp [ 1 ] ))
cond	13:24	13:42	9	isdigit (( int ) cp [ 1 ] )
call	13:24	13:42	10	isdigit
arg	13:32	13:42	11	(int)cp[1]
water	13:32	0:0	12	(
water	13:33	0:0	12	int
water	13:36	0:0	12	)
water	13:37	0:0	12	cp
op	13:39	0:0	12	[
water	13:40	0:0	12	1
op	13:41	0:0	12	]
stmts	14:3	14:23	9	
water	14:3	0:0	10	quality
op	14:11	0:0	10	=
call	14:13	14:22	10	atoi
arg	14:18	14:22	11	cp+1
water	14:18	0:0	12	cp
op	14:20	0:0	12	+
water	14:21	0:0	12	1
water	14:23	0:0	10	;
else	15:20	16:36	8
stmts	15:25	16:36	9	
if	15:25	16:36	10	(cp [ 1 ] == 'r')
cond	15:29	15:38	11	cp [ 1 ] == 'r'
water	15:29	0:0	12	cp
op	15:31	0:0	12	[
water	15:32	0:0	12	1
op	15:33	0:0	12	]
op	15:35	0:0	12	==
water	15:38	0:0	12	'r'
stmts	16:3	16:36	11	
water	16:3	0:0	12	jpegcolormode
op	16:17	0:0	12	=
water	16:19	0:0	12	JPEGCOLORMODE_RAW
water	16:36	0:0	12	;
else	17:20	18:31	8
stmts	18:24	18:31	9	
call	18:24	18:30	10	usage
water	18:31	0:0	10	;
water	19:20	0:0	8	cp
op	19:23	0:0	8	=
call	19:25	19:40	8	strchr
arg	19:32	19:36	9	cp+1
water	19:32	0:0	10	cp
op	19:34	0:0	10	+
water	19:35	0:0	10	1
arg	19:37	19:40	9	':'
water	19:37	0:0	10	':'
water	19:41	0:0	8	;
water	20:16	0:0	8	}
water	21:1	0:0	6	}
else	21:3	26:1	2
stmts	21:8	26:1	3	
if	21:8	26:1	4	(strneq (opt ,"lzw" ,3 ))
cond	21:12	21:32	5	strneq (opt ,"lzw" ,3 )
call	21:12	21:32	6	strneq
arg	21:19	21:22	7	opt
water	21:19	0:0	8	opt
arg	21:24	21:29	7	"lzw"
water	21:24	0:0	8	"lzw"
arg	21:31	21:32	7	3
water	21:31	0:0	8	3
stmts	21:35	26:1	5	
water	21:35	0:0	6	{
decl	22:2	22:29	6	char	*cp
op	22:11	0:0	6	=
call	22:13	22:28	7	strchr
arg	22:20	22:23	8	opt
water	22:20	0:0	9	opt
arg	22:25	22:28	8	':'
water	22:25	0:0	9	':'
if	23:2	24:25	6	(cp)
cond	23:6	23:6	7	cp
water	23:6	0:0	8	cp
stmts	24:3	24:25	7	
water	24:3	0:0	8	predictor
op	24:13	0:0	8	=
call	24:15	24:24	8	atoi
arg	24:20	24:24	9	cp+1
water	24:20	0:0	10	cp
op	24:22	0:0	10	+
water	24:23	0:0	10	1
water	24:25	0:0	8	;
water	25:2	0:0	6	compression
op	25:14	0:0	6	=
water	25:16	0:0	6	COMPRESSION_LZW
water	25:31	0:0	6	;
water	26:1	0:0	6	}
else	26:3	31:1	2
stmts	26:8	31:1	3	
if	26:8	31:1	4	(strneq (opt ,"zip" ,3 ))
cond	26:12	26:32	5	strneq (opt ,"zip" ,3 )
call	26:12	26:32	6	strneq
arg	26:19	26:22	7	opt
water	26:19	0:0	8	opt
arg	26:24	26:29	7	"zip"
water	26:24	0:0	8	"zip"
arg	26:31	26:32	7	3
water	26:31	0:0	8	3
stmts	26:35	31:1	5	
water	26:35	0:0	6	{
decl	27:2	27:29	6	char	*cp
op	27:11	0:0	6	=
call	27:13	27:28	7	strchr
arg	27:20	27:23	8	opt
water	27:20	0:0	9	opt
arg	27:25	27:28	8	':'
water	27:25	0:0	9	':'
if	28:2	29:25	6	(cp)
cond	28:6	28:6	7	cp
water	28:6	0:0	8	cp
stmts	29:3	29:25	7	
water	29:3	0:0	8	predictor
op	29:13	0:0	8	=
call	29:15	29:24	8	atoi
arg	29:20	29:24	9	cp+1
water	29:20	0:0	10	cp
op	29:22	0:0	10	+
water	29:23	0:0	10	1
water	29:25	0:0	8	;
water	30:2	0:0	6	compression
op	30:14	0:0	6	=
water	30:16	0:0	6	COMPRESSION_DEFLATE
water	30:35	0:0	6	;
water	31:1	0:0	6	}
else	31:3	32:12	2
stmts	32:2	32:12	3	
return	32:2	32:12	4	(0)
water	32:9	0:0	5	(
water	32:10	0:0	5	0
water	32:11	0:0	5	)
return	33:1	33:11	2	(1)
water	33:8	0:0	3	(
water	33:9	0:0	3	1
water	33:10	0:0	3	)

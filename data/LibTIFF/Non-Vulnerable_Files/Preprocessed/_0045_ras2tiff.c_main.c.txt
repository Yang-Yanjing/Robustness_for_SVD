func	1:0	195:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	194:11	1	
decl	4:1	4:19	2	unsigned char	*buf
decl	5:1	5:9	2	long	row
decl	6:1	6:28	2	tsize_t	linebytes
water	6:18	0:0	2	,
decl	6:1	6:28	2	tsize_t	scanline
decl	7:1	7:10	2	TIFF	*out
decl	8:1	8:9	2	FILE	*in
decl	9:1	9:20	2	struct rasterfile	h
decl	10:1	10:19	2	uint16	photometric
decl	11:1	11:36	2	uint16	config
op	11:15	0:0	2	=
water	11:17	0:0	2	PLANARCONFIG_CONTIG
decl	12:1	12:34	2	uint32	rowsperstrip
op	12:21	0:0	2	=
water	12:23	0:0	2	(
water	12:24	0:0	2	uint32
water	12:30	0:0	2	)
op	12:32	0:0	2	-
water	12:33	0:0	2	1
decl	13:1	13:6	2	int	c
water	15:1	0:0	2	extern
water	15:8	0:0	2	int
water	15:12	0:0	2	optind
water	15:18	0:0	2	;
water	16:1	0:0	2	extern
water	16:8	0:0	2	char
op	16:12	0:0	2	*
water	16:14	0:0	2	optarg
water	16:20	0:0	2	;
while	18:1	30:2	2	(( c =getopt (argc ,argv ,"c:r:h" ) ) != - 1)
cond	18:8	18:46	3	( c =getopt (argc ,argv ,"c:r:h" ) ) != - 1
water	18:8	0:0	4	(
water	18:9	0:0	4	c
op	18:11	0:0	4	=
call	18:13	18:39	4	getopt
arg	18:20	18:24	5	argc
water	18:20	0:0	6	argc
arg	18:26	18:30	5	argv
water	18:26	0:0	6	argv
arg	18:32	18:39	5	"c:r:h"
water	18:32	0:0	6	"c:r:h"
water	18:40	0:0	4	)
op	18:42	0:0	4	!=
op	18:45	0:0	4	-
water	18:46	0:0	4	1
stmts	19:2	30:2	3	
switch	19:2	30:2	4	(c)
cond	19:10	19:10	5	c
water	19:10	0:0	6	c
stmts	19:13	30:2	5	
water	19:13	0:0	6	{
water	20:2	0:0	6	case
water	20:7	0:0	6	'c'
water	20:10	0:0	6	:
water	21:3	0:0	6	if
water	21:6	0:0	6	(
op	21:7	0:0	6	!
call	21:8	21:37	6	processCompressOptions
arg	21:31	21:37	7	optarg
water	21:31	0:0	8	optarg
water	21:38	0:0	6	)
call	22:4	22:10	6	usage
water	22:11	0:0	6	;
break	23:3	23:8	6	
water	24:2	0:0	6	case
water	24:7	0:0	6	'r'
water	24:10	0:0	6	:
water	25:3	0:0	6	rowsperstrip
op	25:16	0:0	6	=
call	25:18	25:29	6	atoi
arg	25:23	25:29	7	optarg
water	25:23	0:0	8	optarg
water	25:30	0:0	6	;
break	26:3	26:8	6	
water	27:2	0:0	6	case
water	27:7	0:0	6	'h'
water	27:10	0:0	6	:
call	28:3	28:9	6	usage
water	28:10	0:0	6	;
water	30:2	0:0	6	}
if	31:1	32:9	2	(argc - optind != 2)
cond	31:5	31:22	3	argc - optind != 2
water	31:5	0:0	4	argc
op	31:10	0:0	4	-
water	31:12	0:0	4	optind
op	31:19	0:0	4	!=
water	31:22	0:0	4	2
stmts	32:2	32:9	3	
call	32:2	32:8	4	usage
water	32:9	0:0	4	;
water	33:1	0:0	2	in
op	33:4	0:0	2	=
call	33:6	33:30	2	fopen
arg	33:12	33:24	3	argv[optind]
water	33:12	0:0	4	argv
op	33:16	0:0	4	[
water	33:17	0:0	4	optind
op	33:23	0:0	4	]
arg	33:26	33:30	3	"rb"
water	33:26	0:0	4	"rb"
water	33:31	0:0	2	;
if	34:1	37:1	2	(in == NULL)
cond	34:5	34:11	3	in == NULL
water	34:5	0:0	4	in
op	34:8	0:0	4	==
water	34:11	0:0	4	NULL
stmts	34:17	37:1	3	
water	34:17	0:0	4	{
call	35:2	35:53	4	fprintf
arg	35:10	35:16	5	stderr
water	35:10	0:0	6	stderr
arg	35:18	35:39	5	"%s: Can not open.\n"
water	35:18	0:0	6	"%s: Can not open.\n"
arg	35:41	35:53	5	argv[optind]
water	35:41	0:0	6	argv
op	35:45	0:0	6	[
water	35:46	0:0	6	optind
op	35:52	0:0	6	]
water	35:54	0:0	4	;
return	36:2	36:13	4	(-1)
water	36:9	0:0	5	(
op	36:10	0:0	5	-
water	36:11	0:0	5	1
water	36:12	0:0	5	)
water	37:1	0:0	4	}
if	38:1	42:1	2	(fread (& h ,sizeof ( h ) ,1 ,in ) != 1)
cond	38:5	38:37	3	fread (& h ,sizeof ( h ) ,1 ,in ) != 1
call	38:5	38:32	4	fread
arg	38:11	38:13	5	&h
op	38:11	0:0	6	&
water	38:12	0:0	6	h
arg	38:15	38:25	5	sizeof(h)
op	38:15	0:0	6	sizeof
water	38:22	0:0	6	(
water	38:23	0:0	6	h
water	38:24	0:0	6	)
arg	38:27	38:28	5	1
water	38:27	0:0	6	1
arg	38:30	38:32	5	in
water	38:30	0:0	6	in
op	38:34	0:0	4	!=
water	38:37	0:0	4	1
stmts	38:40	42:1	3	
water	38:40	0:0	4	{
call	39:2	39:60	4	fprintf
arg	39:10	39:16	5	stderr
water	39:10	0:0	6	stderr
arg	39:18	39:46	5	"%s: Can not read header.\n"
water	39:18	0:0	6	"%s: Can not read header.\n"
arg	39:48	39:60	5	argv[optind]
water	39:48	0:0	6	argv
op	39:52	0:0	6	[
water	39:53	0:0	6	optind
op	39:59	0:0	6	]
water	39:61	0:0	4	;
call	40:2	40:11	4	fclose
arg	40:9	40:11	5	in
water	40:9	0:0	6	in
water	40:12	0:0	4	;
return	41:2	41:13	4	(-2)
water	41:9	0:0	5	(
op	41:10	0:0	5	-
water	41:11	0:0	5	2
water	41:12	0:0	5	)
water	42:1	0:0	4	}
if	43:1	53:1	2	(strcmp (h . ras_magic ,RAS_MAGIC ) == 0)
cond	43:5	43:39	3	strcmp (h . ras_magic ,RAS_MAGIC ) == 0
call	43:5	43:34	4	strcmp
arg	43:12	43:23	5	h.ras_magic
water	43:12	0:0	6	h
op	43:13	0:0	6	.
water	43:14	0:0	6	ras_magic
arg	43:25	43:34	5	RAS_MAGIC
water	43:25	0:0	6	RAS_MAGIC
op	43:36	0:0	4	==
water	43:39	0:0	4	0
stmts	43:42	53:1	3	
water	43:42	0:0	4	{
call	45:3	45:38	4	TIFFSwabLong
arg	45:16	45:38	5	(uint32*)&h.ras_width
water	45:16	0:0	6	(
water	45:17	0:0	6	uint32
op	45:24	0:0	6	*
water	45:25	0:0	6	)
op	45:26	0:0	6	&
water	45:27	0:0	6	h
op	45:28	0:0	6	.
water	45:29	0:0	6	ras_width
water	45:39	0:0	4	;
call	46:3	46:39	4	TIFFSwabLong
arg	46:16	46:39	5	(uint32*)&h.ras_height
water	46:16	0:0	6	(
water	46:17	0:0	6	uint32
op	46:24	0:0	6	*
water	46:25	0:0	6	)
op	46:26	0:0	6	&
water	46:27	0:0	6	h
op	46:28	0:0	6	.
water	46:29	0:0	6	ras_height
water	46:40	0:0	4	;
call	47:3	47:38	4	TIFFSwabLong
arg	47:16	47:38	5	(uint32*)&h.ras_depth
water	47:16	0:0	6	(
water	47:17	0:0	6	uint32
op	47:24	0:0	6	*
water	47:25	0:0	6	)
op	47:26	0:0	6	&
water	47:27	0:0	6	h
op	47:28	0:0	6	.
water	47:29	0:0	6	ras_depth
water	47:39	0:0	4	;
call	48:3	48:39	4	TIFFSwabLong
arg	48:16	48:39	5	(uint32*)&h.ras_length
water	48:16	0:0	6	(
water	48:17	0:0	6	uint32
op	48:24	0:0	6	*
water	48:25	0:0	6	)
op	48:26	0:0	6	&
water	48:27	0:0	6	h
op	48:28	0:0	6	.
water	48:29	0:0	6	ras_length
water	48:40	0:0	4	;
call	49:3	49:37	4	TIFFSwabLong
arg	49:16	49:37	5	(uint32*)&h.ras_type
water	49:16	0:0	6	(
water	49:17	0:0	6	uint32
op	49:24	0:0	6	*
water	49:25	0:0	6	)
op	49:26	0:0	6	&
water	49:27	0:0	6	h
op	49:28	0:0	6	.
water	49:29	0:0	6	ras_type
water	49:38	0:0	4	;
call	50:3	50:40	4	TIFFSwabLong
arg	50:16	50:40	5	(uint32*)&h.ras_maptype
water	50:16	0:0	6	(
water	50:17	0:0	6	uint32
op	50:24	0:0	6	*
water	50:25	0:0	6	)
op	50:26	0:0	6	&
water	50:27	0:0	6	h
op	50:28	0:0	6	.
water	50:29	0:0	6	ras_maptype
water	50:41	0:0	4	;
call	51:3	51:42	4	TIFFSwabLong
arg	51:16	51:42	5	(uint32*)&h.ras_maplength
water	51:16	0:0	6	(
water	51:17	0:0	6	uint32
op	51:24	0:0	6	*
water	51:25	0:0	6	)
op	51:26	0:0	6	&
water	51:27	0:0	6	h
op	51:28	0:0	6	.
water	51:29	0:0	6	ras_maplength
water	51:43	0:0	4	;
water	53:1	0:0	4	}
else	53:3	63:1	2
stmts	53:8	63:1	3	
if	53:8	63:1	4	(strcmp (h . ras_magic ,RAS_MAGIC_INV ) == 0)
cond	53:12	53:50	5	strcmp (h . ras_magic ,RAS_MAGIC_INV ) == 0
call	53:12	53:45	6	strcmp
arg	53:19	53:30	7	h.ras_magic
water	53:19	0:0	8	h
op	53:20	0:0	8	.
water	53:21	0:0	8	ras_magic
arg	53:32	53:45	7	RAS_MAGIC_INV
water	53:32	0:0	8	RAS_MAGIC_INV
op	53:47	0:0	6	==
water	53:50	0:0	6	0
stmts	53:53	63:1	5	
water	53:53	0:0	6	{
call	55:3	55:38	6	TIFFSwabLong
arg	55:16	55:38	7	(uint32*)&h.ras_width
water	55:16	0:0	8	(
water	55:17	0:0	8	uint32
op	55:24	0:0	8	*
water	55:25	0:0	8	)
op	55:26	0:0	8	&
water	55:27	0:0	8	h
op	55:28	0:0	8	.
water	55:29	0:0	8	ras_width
water	55:39	0:0	6	;
call	56:3	56:39	6	TIFFSwabLong
arg	56:16	56:39	7	(uint32*)&h.ras_height
water	56:16	0:0	8	(
water	56:17	0:0	8	uint32
op	56:24	0:0	8	*
water	56:25	0:0	8	)
op	56:26	0:0	8	&
water	56:27	0:0	8	h
op	56:28	0:0	8	.
water	56:29	0:0	8	ras_height
water	56:40	0:0	6	;
call	57:3	57:38	6	TIFFSwabLong
arg	57:16	57:38	7	(uint32*)&h.ras_depth
water	57:16	0:0	8	(
water	57:17	0:0	8	uint32
op	57:24	0:0	8	*
water	57:25	0:0	8	)
op	57:26	0:0	8	&
water	57:27	0:0	8	h
op	57:28	0:0	8	.
water	57:29	0:0	8	ras_depth
water	57:39	0:0	6	;
call	58:3	58:39	6	TIFFSwabLong
arg	58:16	58:39	7	(uint32*)&h.ras_length
water	58:16	0:0	8	(
water	58:17	0:0	8	uint32
op	58:24	0:0	8	*
water	58:25	0:0	8	)
op	58:26	0:0	8	&
water	58:27	0:0	8	h
op	58:28	0:0	8	.
water	58:29	0:0	8	ras_length
water	58:40	0:0	6	;
call	59:3	59:37	6	TIFFSwabLong
arg	59:16	59:37	7	(uint32*)&h.ras_type
water	59:16	0:0	8	(
water	59:17	0:0	8	uint32
op	59:24	0:0	8	*
water	59:25	0:0	8	)
op	59:26	0:0	8	&
water	59:27	0:0	8	h
op	59:28	0:0	8	.
water	59:29	0:0	8	ras_type
water	59:38	0:0	6	;
call	60:3	60:40	6	TIFFSwabLong
arg	60:16	60:40	7	(uint32*)&h.ras_maptype
water	60:16	0:0	8	(
water	60:17	0:0	8	uint32
op	60:24	0:0	8	*
water	60:25	0:0	8	)
op	60:26	0:0	8	&
water	60:27	0:0	8	h
op	60:28	0:0	8	.
water	60:29	0:0	8	ras_maptype
water	60:41	0:0	6	;
call	61:3	61:42	6	TIFFSwabLong
arg	61:16	61:42	7	(uint32*)&h.ras_maplength
water	61:16	0:0	8	(
water	61:17	0:0	8	uint32
op	61:24	0:0	8	*
water	61:25	0:0	8	)
op	61:26	0:0	8	&
water	61:27	0:0	8	h
op	61:28	0:0	8	.
water	61:29	0:0	8	ras_maplength
water	61:43	0:0	6	;
water	63:1	0:0	6	}
else	63:3	67:1	2
stmts	63:8	67:1	3	
water	63:8	0:0	4	{
call	64:2	64:57	4	fprintf
arg	64:10	64:16	5	stderr
water	64:10	0:0	6	stderr
arg	64:18	64:43	5	"%s: Not a rasterfile.\n"
water	64:18	0:0	6	"%s: Not a rasterfile.\n"
arg	64:45	64:57	5	argv[optind]
water	64:45	0:0	6	argv
op	64:49	0:0	6	[
water	64:50	0:0	6	optind
op	64:56	0:0	6	]
water	64:58	0:0	4	;
call	65:2	65:11	4	fclose
arg	65:9	65:11	5	in
water	65:9	0:0	6	in
water	65:12	0:0	4	;
return	66:2	66:13	4	(-3)
water	66:9	0:0	5	(
op	66:10	0:0	5	-
water	66:11	0:0	5	3
water	66:12	0:0	5	)
water	67:1	0:0	4	}
if	68:8	78:8	2	(( h . ras_width <= 0 ) || ( h . ras_width >= INT_MAX ) || ( h . ras_height <= 0 ) || ( h . ras_height >= INT_MAX ) || ( h . ras_depth <= 0 ) || ( h . ras_depth >= INT_MAX ) || ( h . ras_length <= 0 ) || ( h . ras_length >= INT_MAX ) || ( h . ras_type <= 0 ) || ( h . ras_maptype <= 0 ) || ( h . ras_maplength <= 0 ) || ( h . ras_maplength >= INT_MAX ))
cond	68:12	74:65	3	( h . ras_width <= 0 ) || ( h . ras_width >= INT_MAX ) || ( h . ras_height <= 0 ) || ( h . ras_height >= INT_MAX ) || ( h . ras_depth <= 0 ) || ( h . ras_depth >= INT_MAX ) || ( h . ras_length <= 0 ) || ( h . ras_length >= INT_MAX ) || ( h . ras_type <= 0 ) || ( h . ras_maptype <= 0 ) || ( h . ras_maplength <= 0 ) || ( h . ras_maplength >= INT_MAX )
water	68:12	0:0	4	(
water	68:13	0:0	4	h
op	68:14	0:0	4	.
water	68:15	0:0	4	ras_width
op	68:25	0:0	4	<=
water	68:28	0:0	4	0
water	68:29	0:0	4	)
op	68:31	0:0	4	||
water	68:34	0:0	4	(
water	68:35	0:0	4	h
op	68:36	0:0	4	.
water	68:37	0:0	4	ras_width
op	68:47	0:0	4	>=
water	68:50	0:0	4	INT_MAX
water	68:57	0:0	4	)
op	68:59	0:0	4	||
water	69:12	0:0	4	(
water	69:13	0:0	4	h
op	69:14	0:0	4	.
water	69:15	0:0	4	ras_height
op	69:26	0:0	4	<=
water	69:29	0:0	4	0
water	69:30	0:0	4	)
op	69:32	0:0	4	||
water	69:35	0:0	4	(
water	69:36	0:0	4	h
op	69:37	0:0	4	.
water	69:38	0:0	4	ras_height
op	69:49	0:0	4	>=
water	69:52	0:0	4	INT_MAX
water	69:59	0:0	4	)
op	69:61	0:0	4	||
water	70:12	0:0	4	(
water	70:13	0:0	4	h
op	70:14	0:0	4	.
water	70:15	0:0	4	ras_depth
op	70:25	0:0	4	<=
water	70:28	0:0	4	0
water	70:29	0:0	4	)
op	70:31	0:0	4	||
water	70:34	0:0	4	(
water	70:35	0:0	4	h
op	70:36	0:0	4	.
water	70:37	0:0	4	ras_depth
op	70:47	0:0	4	>=
water	70:50	0:0	4	INT_MAX
water	70:57	0:0	4	)
op	70:59	0:0	4	||
water	71:12	0:0	4	(
water	71:13	0:0	4	h
op	71:14	0:0	4	.
water	71:15	0:0	4	ras_length
op	71:26	0:0	4	<=
water	71:29	0:0	4	0
water	71:30	0:0	4	)
op	71:32	0:0	4	||
water	71:35	0:0	4	(
water	71:36	0:0	4	h
op	71:37	0:0	4	.
water	71:38	0:0	4	ras_length
op	71:49	0:0	4	>=
water	71:52	0:0	4	INT_MAX
water	71:59	0:0	4	)
op	71:61	0:0	4	||
water	72:12	0:0	4	(
water	72:13	0:0	4	h
op	72:14	0:0	4	.
water	72:15	0:0	4	ras_type
op	72:24	0:0	4	<=
water	72:27	0:0	4	0
water	72:28	0:0	4	)
op	72:30	0:0	4	||
water	73:12	0:0	4	(
water	73:13	0:0	4	h
op	73:14	0:0	4	.
water	73:15	0:0	4	ras_maptype
op	73:27	0:0	4	<=
water	73:30	0:0	4	0
water	73:31	0:0	4	)
op	73:33	0:0	4	||
water	74:12	0:0	4	(
water	74:13	0:0	4	h
op	74:14	0:0	4	.
water	74:15	0:0	4	ras_maplength
op	74:29	0:0	4	<=
water	74:32	0:0	4	0
water	74:33	0:0	4	)
op	74:35	0:0	4	||
water	74:38	0:0	4	(
water	74:39	0:0	4	h
op	74:40	0:0	4	.
water	74:41	0:0	4	ras_maplength
op	74:55	0:0	4	>=
water	74:58	0:0	4	INT_MAX
water	74:65	0:0	4	)
stmts	74:68	78:8	3	
water	74:68	0:0	4	{
call	75:16	75:76	4	fprintf
arg	75:24	75:30	5	stderr
water	75:24	0:0	6	stderr
arg	75:32	75:62	5	"%s: Improper image header.\n"
water	75:32	0:0	6	"%s: Improper image header.\n"
arg	75:64	75:76	5	argv[optind]
water	75:64	0:0	6	argv
op	75:68	0:0	6	[
water	75:69	0:0	6	optind
op	75:75	0:0	6	]
water	75:77	0:0	4	;
call	76:16	76:25	4	fclose
arg	76:23	76:25	5	in
water	76:23	0:0	6	in
water	76:26	0:0	4	;
return	77:2	77:13	4	(-2)
water	77:9	0:0	5	(
op	77:10	0:0	5	-
water	77:11	0:0	5	2
water	77:12	0:0	5	)
water	78:8	0:0	4	}
if	79:8	86:8	2	(( h . ras_depth != 1 ) && ( h . ras_depth != 8 ) && ( h . ras_depth != 24 ))
cond	79:12	81:30	3	( h . ras_depth != 1 ) && ( h . ras_depth != 8 ) && ( h . ras_depth != 24 )
water	79:12	0:0	4	(
water	79:13	0:0	4	h
op	79:14	0:0	4	.
water	79:15	0:0	4	ras_depth
op	79:25	0:0	4	!=
water	79:28	0:0	4	1
water	79:29	0:0	4	)
op	79:31	0:0	4	&&
water	80:12	0:0	4	(
water	80:13	0:0	4	h
op	80:14	0:0	4	.
water	80:15	0:0	4	ras_depth
op	80:25	0:0	4	!=
water	80:28	0:0	4	8
water	80:29	0:0	4	)
op	80:31	0:0	4	&&
water	81:12	0:0	4	(
water	81:13	0:0	4	h
op	81:14	0:0	4	.
water	81:15	0:0	4	ras_depth
op	81:25	0:0	4	!=
water	81:28	0:0	4	24
water	81:30	0:0	4	)
stmts	81:33	86:8	3	
water	81:33	0:0	4	{
call	82:16	83:49	4	fprintf
arg	82:24	82:30	5	stderr
water	82:24	0:0	6	stderr
arg	82:32	82:66	5	"%s: Improper image depth (%d).\n"
water	82:32	0:0	6	"%s: Improper image depth (%d).\n"
arg	83:24	83:36	5	argv[optind]
water	83:24	0:0	6	argv
op	83:28	0:0	6	[
water	83:29	0:0	6	optind
op	83:35	0:0	6	]
arg	83:38	83:49	5	h.ras_depth
water	83:38	0:0	6	h
op	83:39	0:0	6	.
water	83:40	0:0	6	ras_depth
water	83:50	0:0	4	;
call	84:16	84:25	4	fclose
arg	84:23	84:25	5	in
water	84:23	0:0	6	in
water	84:26	0:0	4	;
return	85:2	85:13	4	(-2)
water	85:9	0:0	5	(
op	85:10	0:0	5	-
water	85:11	0:0	5	2
water	85:12	0:0	5	)
water	86:8	0:0	4	}
water	87:1	0:0	2	out
op	87:5	0:0	2	=
call	87:7	87:35	2	TIFFOpen
arg	87:16	87:30	3	argv[optind+1]
water	87:16	0:0	4	argv
op	87:20	0:0	4	[
water	87:21	0:0	4	optind
op	87:27	0:0	4	+
water	87:28	0:0	4	1
op	87:29	0:0	4	]
arg	87:32	87:35	3	"w"
water	87:32	0:0	4	"w"
water	87:36	0:0	2	;
if	88:1	92:1	2	(out == NULL)
cond	88:5	88:12	3	out == NULL
water	88:5	0:0	4	out
op	88:9	0:0	4	==
water	88:12	0:0	4	NULL
stmts	89:1	92:1	3	
water	89:1	0:0	4	{
call	90:2	90:11	4	fclose
arg	90:9	90:11	5	in
water	90:9	0:0	6	in
water	90:12	0:0	4	;
return	91:2	91:13	4	(-4)
water	91:9	0:0	5	(
op	91:10	0:0	5	-
water	91:11	0:0	5	4
water	91:12	0:0	5	)
water	92:1	0:0	4	}
call	93:1	93:59	2	TIFFSetField
arg	93:14	93:17	3	out
water	93:14	0:0	4	out
arg	93:19	93:37	3	TIFFTAG_IMAGEWIDTH
water	93:19	0:0	4	TIFFTAG_IMAGEWIDTH
arg	93:39	93:59	3	(uint32)h.ras_width
water	93:39	0:0	4	(
water	93:40	0:0	4	uint32
water	93:46	0:0	4	)
water	93:48	0:0	4	h
op	93:49	0:0	4	.
water	93:50	0:0	4	ras_width
water	93:60	0:0	2	;
call	94:1	94:61	2	TIFFSetField
arg	94:14	94:17	3	out
water	94:14	0:0	4	out
arg	94:19	94:38	3	TIFFTAG_IMAGELENGTH
water	94:19	0:0	4	TIFFTAG_IMAGELENGTH
arg	94:40	94:61	3	(uint32)h.ras_height
water	94:40	0:0	4	(
water	94:41	0:0	4	uint32
water	94:47	0:0	4	)
water	94:49	0:0	4	h
op	94:50	0:0	4	.
water	94:51	0:0	4	ras_height
water	94:62	0:0	2	;
call	95:1	95:59	2	TIFFSetField
arg	95:14	95:17	3	out
water	95:14	0:0	4	out
arg	95:19	95:38	3	TIFFTAG_ORIENTATION
water	95:19	0:0	4	TIFFTAG_ORIENTATION
arg	95:40	95:59	3	ORIENTATION_TOPLEFT
water	95:40	0:0	4	ORIENTATION_TOPLEFT
water	95:60	0:0	2	;
call	96:1	96:67	2	TIFFSetField
arg	96:14	96:17	3	out
water	96:14	0:0	4	out
arg	96:19	96:42	3	TIFFTAG_SAMPLESPERPIXEL
water	96:19	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	96:44	96:67	3	h.ras_depth>8?3:1
water	96:44	0:0	4	h
op	96:45	0:0	4	.
water	96:46	0:0	4	ras_depth
op	96:56	0:0	4	>
water	96:58	0:0	4	8
water	96:60	0:0	4	?
water	96:62	0:0	4	3
water	96:64	0:0	4	:
water	96:66	0:0	4	1
water	96:68	0:0	2	;
call	97:1	97:65	2	TIFFSetField
arg	97:14	97:17	3	out
water	97:14	0:0	4	out
arg	97:19	97:40	3	TIFFTAG_BITSPERSAMPLE
water	97:19	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	97:42	97:65	3	h.ras_depth>1?8:1
water	97:42	0:0	4	h
op	97:43	0:0	4	.
water	97:44	0:0	4	ras_depth
op	97:54	0:0	4	>
water	97:56	0:0	4	1
water	97:58	0:0	4	?
water	97:60	0:0	4	8
water	97:62	0:0	4	:
water	97:64	0:0	4	1
water	97:66	0:0	2	;
call	98:1	98:47	2	TIFFSetField
arg	98:14	98:17	3	out
water	98:14	0:0	4	out
arg	98:19	98:39	3	TIFFTAG_PLANARCONFIG
water	98:19	0:0	4	TIFFTAG_PLANARCONFIG
arg	98:41	98:47	3	config
water	98:41	0:0	4	config
water	98:48	0:0	2	;
if	99:1	143:1	2	(h . ras_maptype != RMT_NONE)
cond	99:5	99:22	3	h . ras_maptype != RMT_NONE
water	99:5	0:0	4	h
op	99:6	0:0	4	.
water	99:7	0:0	4	ras_maptype
op	99:19	0:0	4	!=
water	99:22	0:0	4	RMT_NONE
stmts	99:32	143:1	3	
water	99:32	0:0	4	{
decl	100:2	100:13	4	uint16	*red
water	101:2	0:0	4	register
water	101:11	0:0	4	uint16
op	101:17	0:0	4	*
water	101:19	0:0	4	map
water	101:22	0:0	4	;
water	102:2	0:0	4	register
water	102:11	0:0	4	int
water	102:15	0:0	4	i
water	102:16	0:0	4	,
water	102:18	0:0	4	j
water	102:19	0:0	4	;
decl	103:2	103:13	4	int	mapsize
water	104:2	0:0	4	buf
op	104:6	0:0	4	=
water	104:8	0:0	4	(
water	104:9	0:0	4	unsigned
water	104:18	0:0	4	char
op	104:23	0:0	4	*
water	104:24	0:0	4	)
call	104:25	104:52	4	_TIFFmalloc
arg	104:37	104:52	5	h.ras_maplength
water	104:37	0:0	6	h
op	104:38	0:0	6	.
water	104:39	0:0	6	ras_maplength
water	104:53	0:0	4	;
if	105:2	108:2	4	(buf == NULL)
cond	105:6	105:13	5	buf == NULL
water	105:6	0:0	6	buf
op	105:10	0:0	6	==
water	105:13	0:0	6	NULL
stmts	105:19	108:2	5	
water	105:19	0:0	6	{
call	106:3	106:52	6	fprintf
arg	106:11	106:17	7	stderr
water	106:11	0:0	8	stderr
arg	106:19	106:52	7	"No space to read in colormap.\n"
water	106:19	0:0	8	"No space to read in colormap.\n"
water	106:53	0:0	6	;
return	107:3	107:14	6	(-5)
water	107:10	0:0	7	(
op	107:11	0:0	7	-
water	107:12	0:0	7	5
water	107:13	0:0	7	)
water	108:2	0:0	6	}
if	109:2	113:2	4	(fread (buf ,h . ras_maplength ,1 ,in ) != 1)
cond	109:6	109:44	5	fread (buf ,h . ras_maplength ,1 ,in ) != 1
call	109:6	109:39	6	fread
arg	109:12	109:15	7	buf
water	109:12	0:0	8	buf
arg	109:17	109:32	7	h.ras_maplength
water	109:17	0:0	8	h
op	109:18	0:0	8	.
water	109:19	0:0	8	ras_maplength
arg	109:34	109:35	7	1
water	109:34	0:0	8	1
arg	109:37	109:39	7	in
water	109:37	0:0	8	in
op	109:41	0:0	6	!=
water	109:44	0:0	6	1
stmts	109:47	113:2	5	
water	109:47	0:0	6	{
call	110:3	111:19	6	fprintf
arg	110:11	110:17	7	stderr
water	110:11	0:0	8	stderr
arg	110:19	110:50	7	"%s: Read error on colormap.\n"
water	110:19	0:0	8	"%s: Read error on colormap.\n"
arg	111:7	111:19	7	argv[optind]
water	111:7	0:0	8	argv
op	111:11	0:0	8	[
water	111:12	0:0	8	optind
op	111:18	0:0	8	]
water	111:20	0:0	6	;
return	112:3	112:14	6	(-6)
water	112:10	0:0	7	(
op	112:11	0:0	7	-
water	112:12	0:0	7	6
water	112:13	0:0	7	)
water	113:2	0:0	6	}
water	114:2	0:0	4	mapsize
op	114:10	0:0	4	=
water	114:12	0:0	4	1
op	114:13	0:0	4	<<
water	114:15	0:0	4	h
op	114:16	0:0	4	.
water	114:17	0:0	4	ras_depth
water	114:26	0:0	4	;
if	115:2	120:2	4	(h . ras_maplength > mapsize * 3)
cond	115:6	115:32	5	h . ras_maplength > mapsize * 3
water	115:6	0:0	6	h
op	115:7	0:0	6	.
water	115:8	0:0	6	ras_maplength
op	115:22	0:0	6	>
water	115:24	0:0	6	mapsize
op	115:31	0:0	6	*
water	115:32	0:0	6	3
stmts	115:35	120:2	5	
water	115:35	0:0	6	{
call	116:3	118:47	6	fprintf
arg	116:11	116:17	7	stderr
water	116:11	0:0	8	stderr
arg	117:7	117:54	7	"%s: Huh, %d colormap entries, should be %d?\n"
water	117:7	0:0	8	"%s: Huh, %d colormap entries, should be %d?\n"
arg	118:7	118:19	7	argv[optind]
water	118:7	0:0	8	argv
op	118:11	0:0	8	[
water	118:12	0:0	8	optind
op	118:18	0:0	8	]
arg	118:21	118:36	7	h.ras_maplength
water	118:21	0:0	8	h
op	118:22	0:0	8	.
water	118:23	0:0	8	ras_maplength
arg	118:38	118:47	7	mapsize*3
water	118:38	0:0	8	mapsize
op	118:45	0:0	8	*
water	118:46	0:0	8	3
water	118:48	0:0	6	;
return	119:3	119:14	6	(-7)
water	119:10	0:0	7	(
op	119:11	0:0	7	-
water	119:12	0:0	7	7
water	119:13	0:0	7	)
water	120:2	0:0	6	}
water	121:2	0:0	4	red
op	121:6	0:0	4	=
water	121:8	0:0	4	(
water	121:9	0:0	4	uint16
op	121:15	0:0	4	*
water	121:16	0:0	4	)
call	121:17	121:58	4	_TIFFmalloc
arg	121:29	121:58	5	mapsize*3*sizeof(uint16)
water	121:29	0:0	6	mapsize
op	121:37	0:0	6	*
water	121:39	0:0	6	3
op	121:41	0:0	6	*
op	121:43	0:0	6	sizeof
water	121:50	0:0	6	(
water	121:51	0:0	6	uint16
water	121:57	0:0	6	)
water	121:59	0:0	4	;
if	122:2	125:2	4	(red == NULL)
cond	122:6	122:13	5	red == NULL
water	122:6	0:0	6	red
op	122:10	0:0	6	==
water	122:13	0:0	6	NULL
stmts	122:19	125:2	5	
water	122:19	0:0	6	{
call	123:3	123:45	6	fprintf
arg	123:11	123:17	7	stderr
water	123:11	0:0	8	stderr
arg	123:19	123:45	7	"No space for colormap.\n"
water	123:19	0:0	8	"No space for colormap.\n"
water	123:46	0:0	6	;
return	124:3	124:14	6	(-8)
water	124:10	0:0	7	(
op	124:11	0:0	7	-
water	124:12	0:0	7	8
water	124:13	0:0	7	)
water	125:2	0:0	6	}
water	126:2	0:0	4	map
op	126:6	0:0	4	=
water	126:8	0:0	4	red
water	126:11	0:0	4	;
for	127:2	136:2	4	(j = 0 ;j < 3;j ++)
forinit	127:7	127:12	5	j = 0 ;
water	127:7	0:0	6	j
op	127:9	0:0	6	=
water	127:11	0:0	6	0
water	127:12	0:0	6	;
cond	127:14	127:18	5	j < 3
water	127:14	0:0	6	j
op	127:16	0:0	6	<
water	127:18	0:0	6	3
forexpr	127:21	127:22	5	j ++
water	127:21	0:0	6	j
op	127:22	0:0	6	++
stmts	127:26	136:2	5	
water	127:26	0:0	6	{
for	129:3	130:26	6	(i = h . ras_maplength / 3 ;i -- > 0;)
forinit	129:8	129:29	7	i = h . ras_maplength / 3 ;
water	129:8	0:0	8	i
op	129:10	0:0	8	=
water	129:12	0:0	8	h
op	129:13	0:0	8	.
water	129:14	0:0	8	ras_maplength
op	129:27	0:0	8	/
water	129:28	0:0	8	3
water	129:29	0:0	8	;
cond	129:31	129:37	7	i -- > 0
water	129:31	0:0	8	i
op	129:32	0:0	8	--
op	129:35	0:0	8	>
water	129:37	0:0	8	0
forexpr	0:0	0:0	7	
stmts	130:4	130:26	7	
op	130:4	0:0	8	*
water	130:5	0:0	8	map
op	130:8	0:0	8	++
op	130:11	0:0	8	=
call	130:13	130:25	8	SCALE
arg	130:19	130:25	9	*buf++
op	130:19	0:0	10	*
water	130:20	0:0	10	buf
op	130:23	0:0	10	++
water	130:26	0:0	8	;
if	131:3	135:3	6	(( i = h . ras_maplength / 3 ) < mapsize)
cond	131:7	131:33	7	( i = h . ras_maplength / 3 ) < mapsize
water	131:7	0:0	8	(
water	131:8	0:0	8	i
op	131:10	0:0	8	=
water	131:12	0:0	8	h
op	131:13	0:0	8	.
water	131:14	0:0	8	ras_maplength
op	131:27	0:0	8	/
water	131:28	0:0	8	3
water	131:29	0:0	8	)
op	131:31	0:0	8	<
water	131:33	0:0	8	mapsize
stmts	131:42	135:3	7	
water	131:42	0:0	8	{
water	132:4	0:0	8	i
op	132:6	0:0	8	=
water	132:8	0:0	8	mapsize
op	132:16	0:0	8	-
water	132:18	0:0	8	i
water	132:19	0:0	8	;
call	133:4	133:41	8	_TIFFmemset
arg	133:16	133:19	9	map
water	133:16	0:0	10	map
arg	133:21	133:22	9	0
water	133:21	0:0	10	0
arg	133:24	133:41	9	i*sizeof(uint16)
water	133:24	0:0	10	i
op	133:25	0:0	10	*
op	133:26	0:0	10	sizeof
water	133:33	0:0	10	(
water	133:34	0:0	10	uint16
water	133:40	0:0	10	)
water	133:42	0:0	8	;
water	134:4	0:0	8	map
op	134:8	0:0	8	+=
water	134:11	0:0	8	i
water	134:12	0:0	8	;
water	135:3	0:0	8	}
water	136:2	0:0	6	}
call	137:2	138:42	4	TIFFSetField
arg	137:15	137:18	5	out
water	137:15	0:0	6	out
arg	137:20	137:36	5	TIFFTAG_COLORMAP
water	137:20	0:0	6	TIFFTAG_COLORMAP
arg	138:7	138:10	5	red
water	138:7	0:0	6	red
arg	138:12	138:25	5	red+mapsize
water	138:12	0:0	6	red
op	138:16	0:0	6	+
water	138:18	0:0	6	mapsize
arg	138:27	138:42	5	red+2*mapsize
water	138:27	0:0	6	red
op	138:31	0:0	6	+
water	138:33	0:0	6	2
op	138:34	0:0	6	*
water	138:35	0:0	6	mapsize
water	138:43	0:0	4	;
water	139:2	0:0	4	photometric
op	139:14	0:0	4	=
water	139:16	0:0	4	PHOTOMETRIC_PALETTE
water	139:35	0:0	4	;
if	140:2	141:37	4	(compression == ( uint16 ) - 1)
cond	140:6	140:31	5	compression == ( uint16 ) - 1
water	140:6	0:0	6	compression
op	140:18	0:0	6	==
water	140:21	0:0	6	(
water	140:22	0:0	6	uint16
water	140:28	0:0	6	)
op	140:30	0:0	6	-
water	140:31	0:0	6	1
stmts	141:3	141:37	5	
water	141:3	0:0	6	compression
op	141:15	0:0	6	=
water	141:17	0:0	6	COMPRESSION_PACKBITS
water	141:37	0:0	6	;
call	142:2	142:52	4	TIFFSetField
arg	142:15	142:18	5	out
water	142:15	0:0	6	out
arg	142:20	142:39	5	TIFFTAG_COMPRESSION
water	142:20	0:0	6	TIFFTAG_COMPRESSION
arg	142:41	142:52	5	compression
water	142:41	0:0	6	compression
water	142:53	0:0	4	;
water	143:1	0:0	4	}
else	143:3	150:1	2
stmts	143:8	150:1	3	
water	143:8	0:0	4	{
water	145:2	0:0	4	photometric
op	145:14	0:0	4	=
water	145:16	0:0	4	h
op	145:17	0:0	4	.
water	145:18	0:0	4	ras_depth
op	145:28	0:0	4	==
water	145:31	0:0	4	24
water	145:34	0:0	4	?
water	146:6	0:0	4	PHOTOMETRIC_RGB
water	146:22	0:0	4	:
water	146:24	0:0	4	PHOTOMETRIC_MINISBLACK
water	146:46	0:0	4	;
if	147:2	148:32	4	(compression == ( uint16 ) - 1)
cond	147:6	147:31	5	compression == ( uint16 ) - 1
water	147:6	0:0	6	compression
op	147:18	0:0	6	==
water	147:21	0:0	6	(
water	147:22	0:0	6	uint16
water	147:28	0:0	6	)
op	147:30	0:0	6	-
water	147:31	0:0	6	1
stmts	148:3	148:32	5	
water	148:3	0:0	6	compression
op	148:15	0:0	6	=
water	148:17	0:0	6	COMPRESSION_LZW
water	148:32	0:0	6	;
call	149:2	149:52	4	TIFFSetField
arg	149:15	149:18	5	out
water	149:15	0:0	6	out
arg	149:20	149:39	5	TIFFTAG_COMPRESSION
water	149:20	0:0	6	TIFFTAG_COMPRESSION
arg	149:41	149:52	5	compression
water	149:41	0:0	6	compression
water	149:53	0:0	4	;
water	150:1	0:0	4	}
switch	151:1	163:1	2	(compression)
cond	151:9	151:9	3	compression
water	151:9	0:0	4	compression
stmts	151:22	163:1	3	
water	151:22	0:0	4	{
label	152:1	152:22	4	case COMPRESSION_JPEG :
if	153:2	154:34	4	(photometric == PHOTOMETRIC_RGB && jpegcolormode == JPEGCOLORMODE_RGB)
cond	153:6	153:57	5	photometric == PHOTOMETRIC_RGB && jpegcolormode == JPEGCOLORMODE_RGB
water	153:6	0:0	6	photometric
op	153:18	0:0	6	==
water	153:21	0:0	6	PHOTOMETRIC_RGB
op	153:37	0:0	6	&&
water	153:40	0:0	6	jpegcolormode
op	153:54	0:0	6	==
water	153:57	0:0	6	JPEGCOLORMODE_RGB
stmts	154:3	154:34	5	
water	154:3	0:0	6	photometric
op	154:15	0:0	6	=
water	154:17	0:0	6	PHOTOMETRIC_YCBCR
water	154:34	0:0	6	;
call	155:2	155:48	4	TIFFSetField
arg	155:15	155:18	5	out
water	155:15	0:0	6	out
arg	155:20	155:39	5	TIFFTAG_JPEGQUALITY
water	155:20	0:0	6	TIFFTAG_JPEGQUALITY
arg	155:41	155:48	5	quality
water	155:41	0:0	6	quality
water	155:49	0:0	4	;
call	156:2	156:56	4	TIFFSetField
arg	156:15	156:18	5	out
water	156:15	0:0	6	out
arg	156:20	156:41	5	TIFFTAG_JPEGCOLORMODE
water	156:20	0:0	6	TIFFTAG_JPEGCOLORMODE
arg	156:43	156:56	5	jpegcolormode
water	156:43	0:0	6	jpegcolormode
water	156:57	0:0	4	;
break	157:2	157:7	4	
label	158:1	158:21	4	case COMPRESSION_LZW :
label	159:1	159:25	4	case COMPRESSION_DEFLATE :
if	160:2	161:50	4	(predictor != 0)
cond	160:6	160:19	5	predictor != 0
water	160:6	0:0	6	predictor
op	160:16	0:0	6	!=
water	160:19	0:0	6	0
stmts	161:3	161:50	5	
call	161:3	161:49	6	TIFFSetField
arg	161:16	161:19	7	out
water	161:16	0:0	8	out
arg	161:21	161:38	7	TIFFTAG_PREDICTOR
water	161:21	0:0	8	TIFFTAG_PREDICTOR
arg	161:40	161:49	7	predictor
water	161:40	0:0	8	predictor
water	161:50	0:0	6	;
break	162:2	162:7	4	
water	163:1	0:0	4	}
call	164:1	164:51	2	TIFFSetField
arg	164:14	164:17	3	out
water	164:14	0:0	4	out
arg	164:19	164:38	3	TIFFTAG_PHOTOMETRIC
water	164:19	0:0	4	TIFFTAG_PHOTOMETRIC
arg	164:40	164:51	3	photometric
water	164:40	0:0	4	photometric
water	164:52	0:0	2	;
water	165:1	0:0	2	linebytes
op	165:11	0:0	2	=
water	165:13	0:0	2	(
water	165:14	0:0	2	(
water	165:15	0:0	2	h
op	165:16	0:0	2	.
water	165:17	0:0	2	ras_depth
op	165:26	0:0	2	*
water	165:27	0:0	2	h
op	165:28	0:0	2	.
water	165:29	0:0	2	ras_width
op	165:38	0:0	2	+
water	165:39	0:0	2	15
water	165:41	0:0	2	)
op	165:43	0:0	2	>>
water	165:46	0:0	2	3
water	165:47	0:0	2	)
op	165:49	0:0	2	&
op	165:50	0:0	2	~
water	165:52	0:0	2	1
water	165:53	0:0	2	;
water	166:1	0:0	2	scanline
op	166:10	0:0	2	=
call	166:12	166:32	2	TIFFScanlineSize
arg	166:29	166:32	3	out
water	166:29	0:0	4	out
water	166:33	0:0	2	;
if	167:1	170:1	2	(scanline > linebytes)
cond	167:5	167:16	3	scanline > linebytes
water	167:5	0:0	4	scanline
op	167:14	0:0	4	>
water	167:16	0:0	4	linebytes
stmts	167:27	170:1	3	
water	167:27	0:0	4	{
water	168:2	0:0	4	buf
op	168:6	0:0	4	=
water	168:8	0:0	4	(
water	168:9	0:0	4	unsigned
water	168:18	0:0	4	char
op	168:23	0:0	4	*
water	168:24	0:0	4	)
call	168:25	168:45	4	_TIFFmalloc
arg	168:37	168:45	5	scanline
water	168:37	0:0	6	scanline
water	168:46	0:0	4	;
call	169:2	169:50	4	_TIFFmemset
arg	169:14	169:27	5	buf+linebytes
water	169:14	0:0	6	buf
op	169:17	0:0	6	+
water	169:18	0:0	6	linebytes
arg	169:29	169:30	5	0
water	169:29	0:0	6	0
arg	169:32	169:50	5	scanline-linebytes
water	169:32	0:0	6	scanline
op	169:40	0:0	6	-
water	169:41	0:0	6	linebytes
water	169:51	0:0	4	;
water	170:1	0:0	4	}
else	170:3	171:47	2
stmts	171:2	171:47	3	
water	171:2	0:0	4	buf
op	171:6	0:0	4	=
water	171:8	0:0	4	(
water	171:9	0:0	4	unsigned
water	171:18	0:0	4	char
op	171:23	0:0	4	*
water	171:24	0:0	4	)
call	171:25	171:46	4	_TIFFmalloc
arg	171:37	171:46	5	linebytes
water	171:37	0:0	6	linebytes
water	171:47	0:0	4	;
call	172:1	173:44	2	TIFFSetField
arg	172:14	172:17	3	out
water	172:14	0:0	4	out
arg	172:19	172:39	3	TIFFTAG_ROWSPERSTRIP
water	172:19	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	173:5	173:44	3	TIFFDefaultStripSize(out,rowsperstrip)
call	173:5	173:43	4	TIFFDefaultStripSize
arg	173:26	173:29	5	out
water	173:26	0:0	6	out
arg	173:31	173:43	5	rowsperstrip
water	173:31	0:0	6	rowsperstrip
water	173:45	0:0	2	;
for	174:1	191:1	2	(row = 0 ;row < h . ras_height;row ++)
forinit	174:6	174:13	3	row = 0 ;
water	174:6	0:0	4	row
op	174:10	0:0	4	=
water	174:12	0:0	4	0
water	174:13	0:0	4	;
cond	174:15	174:23	3	row < h . ras_height
water	174:15	0:0	4	row
op	174:19	0:0	4	<
water	174:21	0:0	4	h
op	174:22	0:0	4	.
water	174:23	0:0	4	ras_height
forexpr	174:35	174:38	3	row ++
water	174:35	0:0	4	row
op	174:38	0:0	4	++
stmts	174:42	191:1	3	
water	174:42	0:0	4	{
if	175:2	179:2	4	(fread (buf ,linebytes ,1 ,in ) != 1)
cond	175:6	175:38	5	fread (buf ,linebytes ,1 ,in ) != 1
call	175:6	175:33	6	fread
arg	175:12	175:15	7	buf
water	175:12	0:0	8	buf
arg	175:17	175:26	7	linebytes
water	175:17	0:0	8	linebytes
arg	175:28	175:29	7	1
water	175:28	0:0	8	1
arg	175:31	175:33	7	in
water	175:31	0:0	8	in
op	175:35	0:0	6	!=
water	175:38	0:0	6	1
stmts	175:41	179:2	5	
water	175:41	0:0	6	{
call	176:3	177:24	6	fprintf
arg	176:11	176:17	7	stderr
water	176:11	0:0	8	stderr
arg	176:19	176:52	7	"%s: scanline %ld: Read error.\n"
water	176:19	0:0	8	"%s: scanline %ld: Read error.\n"
arg	177:7	177:19	7	argv[optind]
water	177:7	0:0	8	argv
op	177:11	0:0	8	[
water	177:12	0:0	8	optind
op	177:18	0:0	8	]
arg	177:21	177:24	7	row
water	177:21	0:0	8	row
water	177:25	0:0	6	;
break	178:3	178:8	6	
water	179:2	0:0	6	}
if	180:2	188:2	4	(h . ras_type == RT_STANDARD && h . ras_depth == 24)
cond	180:6	180:50	5	h . ras_type == RT_STANDARD && h . ras_depth == 24
water	180:6	0:0	6	h
op	180:7	0:0	6	.
water	180:8	0:0	6	ras_type
op	180:17	0:0	6	==
water	180:20	0:0	6	RT_STANDARD
op	180:32	0:0	6	&&
water	180:35	0:0	6	h
op	180:36	0:0	6	.
water	180:37	0:0	6	ras_depth
op	180:47	0:0	6	==
water	180:50	0:0	6	24
stmts	180:54	188:2	5	
water	180:54	0:0	6	{
decl	181:3	181:27	6	tsize_t	cc
op	181:14	0:0	6	=
water	181:16	0:0	6	h
op	181:17	0:0	6	.
water	181:18	0:0	6	ras_width
decl	182:3	182:26	6	unsigned char	*cp
op	182:21	0:0	6	=
water	182:23	0:0	6	buf
do	184:3	187:3	6	(-- cc)
cond	187:12	187:14	7	-- cc
op	187:12	0:0	8	--
water	187:14	0:0	8	cc
stmts	184:6	187:3	7	
water	184:6	0:0	8	{
call	185:4	185:21	8	SWAP
arg	185:9	185:14	9	cp[0]
water	185:9	0:0	10	cp
op	185:11	0:0	10	[
water	185:12	0:0	10	0
op	185:13	0:0	10	]
arg	185:16	185:21	9	cp[2]
water	185:16	0:0	10	cp
op	185:18	0:0	10	[
water	185:19	0:0	10	2
op	185:20	0:0	10	]
water	185:22	0:0	8	;
water	186:4	0:0	8	cp
op	186:7	0:0	8	+=
water	186:10	0:0	8	3
water	186:11	0:0	8	;
water	187:3	0:0	8	}
water	187:17	0:0	6	;
water	188:2	0:0	6	}
if	189:2	190:8	4	(TIFFWriteScanline (out ,buf ,row ,0 ) < 0)
cond	189:6	189:44	5	TIFFWriteScanline (out ,buf ,row ,0 ) < 0
call	189:6	189:40	6	TIFFWriteScanline
arg	189:24	189:27	7	out
water	189:24	0:0	8	out
arg	189:29	189:32	7	buf
water	189:29	0:0	8	buf
arg	189:34	189:37	7	row
water	189:34	0:0	8	row
arg	189:39	189:40	7	0
water	189:39	0:0	8	0
op	189:42	0:0	6	<
water	189:44	0:0	6	0
stmts	190:3	190:8	5	
break	190:3	190:8	6	
water	191:1	0:0	4	}
water	192:1	0:0	2	(
water	192:2	0:0	2	void
water	192:6	0:0	2	)
call	192:8	192:21	2	TIFFClose
arg	192:18	192:21	3	out
water	192:18	0:0	4	out
water	192:22	0:0	2	;
call	193:1	193:10	2	fclose
arg	193:8	193:10	3	in
water	193:8	0:0	4	in
water	193:11	0:0	2	;
return	194:1	194:11	2	(0)
water	194:8	0:0	3	(
water	194:9	0:0	3	0
water	194:10	0:0	3	)

func	1:0	52:0	0	static int	LZWSetupDecode
params	2:14	0:0	1	
param	2:15	2:24	2	TIFF *	tif
stmnts	4:1	51:11	1	
water	4:1	0:0	2	static
water	4:8	0:0	2	const
water	4:14	0:0	2	char
water	4:19	0:0	2	module
op	4:25	0:0	2	[
op	4:26	0:0	2	]
op	4:28	0:0	2	=
water	4:30	0:0	2	"LZWSetupDecode"
water	4:46	0:0	2	;
decl	5:1	5:38	2	LZWCodecState	*sp
op	5:19	0:0	2	=
call	5:21	5:37	3	DecoderState
arg	5:34	5:37	4	tif
water	5:34	0:0	5	tif
decl	6:1	6:9	2	int	code
if	7:1	26:1	2	(sp == NULL)
cond	7:5	7:11	3	sp == NULL
water	7:5	0:0	4	sp
op	7:8	0:0	4	==
water	7:11	0:0	4	NULL
stmts	8:1	26:1	3	
water	8:1	0:0	4	{
water	13:2	0:0	4	tif
op	13:5	0:0	4	->
water	13:7	0:0	4	tif_data
op	13:16	0:0	4	=
water	13:18	0:0	4	(
water	13:19	0:0	4	uint8
op	13:24	0:0	4	*
water	13:25	0:0	4	)
call	13:27	13:60	4	_TIFFmalloc
arg	13:39	13:60	5	sizeof(LZWCodecState)
op	13:39	0:0	6	sizeof
water	13:45	0:0	6	(
water	13:46	0:0	6	LZWCodecState
water	13:59	0:0	6	)
water	13:61	0:0	4	;
if	14:2	18:2	4	(tif -> tif_data == NULL)
cond	14:6	14:23	5	tif -> tif_data == NULL
water	14:6	0:0	6	tif
op	14:9	0:0	6	->
water	14:11	0:0	6	tif_data
op	14:20	0:0	6	==
water	14:23	0:0	6	NULL
stmts	15:2	18:2	5	
water	15:2	0:0	6	{
call	16:3	16:75	6	TIFFErrorExt
arg	16:16	16:35	7	tif->tif_clientdata
water	16:16	0:0	8	tif
op	16:19	0:0	8	->
water	16:21	0:0	8	tif_clientdata
arg	16:37	16:43	7	module
water	16:37	0:0	8	module
arg	16:45	16:75	7	"No space for LZW state block"
water	16:45	0:0	8	"No space for LZW state block"
water	16:76	0:0	6	;
return	17:3	17:13	6	(0)
water	17:10	0:0	7	(
water	17:11	0:0	7	0
water	17:12	0:0	7	)
water	18:2	0:0	6	}
call	19:2	19:18	4	DecoderState
arg	19:15	19:18	5	tif
water	19:15	0:0	6	tif
op	19:19	0:0	4	->
water	19:21	0:0	4	dec_codetab
op	19:33	0:0	4	=
water	19:35	0:0	4	NULL
water	19:39	0:0	4	;
call	20:2	20:18	4	DecoderState
arg	20:15	20:18	5	tif
water	20:15	0:0	6	tif
op	20:19	0:0	4	->
water	20:21	0:0	4	dec_decode
op	20:32	0:0	4	=
water	20:34	0:0	4	NULL
water	20:38	0:0	4	;
water	24:2	0:0	4	(
water	24:3	0:0	4	void
water	24:7	0:0	4	)
call	24:9	24:30	4	TIFFPredictorInit
arg	24:27	24:30	5	tif
water	24:27	0:0	6	tif
water	24:31	0:0	4	;
water	25:2	0:0	4	sp
op	25:5	0:0	4	=
call	25:7	25:23	4	DecoderState
arg	25:20	25:23	5	tif
water	25:20	0:0	6	tif
water	25:24	0:0	4	;
water	26:1	0:0	4	}
call	27:1	27:18	2	assert
arg	27:8	27:18	3	sp!=NULL
water	27:8	0:0	4	sp
op	27:11	0:0	4	!=
water	27:14	0:0	4	NULL
water	27:19	0:0	2	;
if	28:1	50:1	2	(sp -> dec_codetab == NULL)
cond	28:5	28:24	3	sp -> dec_codetab == NULL
water	28:5	0:0	4	sp
op	28:7	0:0	4	->
water	28:9	0:0	4	dec_codetab
op	28:21	0:0	4	==
water	28:24	0:0	4	NULL
stmts	28:30	50:1	3	
water	28:30	0:0	4	{
water	29:2	0:0	4	sp
op	29:4	0:0	4	->
water	29:6	0:0	4	dec_codetab
op	29:18	0:0	4	=
water	29:20	0:0	4	(
water	29:21	0:0	4	code_t
op	29:27	0:0	4	*
water	29:28	0:0	4	)
call	29:29	29:62	4	_TIFFmalloc
arg	29:41	29:62	5	CSIZE*sizeof(code_t)
water	29:41	0:0	6	CSIZE
op	29:46	0:0	6	*
op	29:47	0:0	6	sizeof
water	29:54	0:0	6	(
water	29:55	0:0	6	code_t
water	29:61	0:0	6	)
water	29:63	0:0	4	;
if	30:2	34:2	4	(sp -> dec_codetab == NULL)
cond	30:6	30:25	5	sp -> dec_codetab == NULL
water	30:6	0:0	6	sp
op	30:8	0:0	6	->
water	30:10	0:0	6	dec_codetab
op	30:22	0:0	6	==
water	30:25	0:0	6	NULL
stmts	30:31	34:2	5	
water	30:31	0:0	6	{
call	31:3	32:38	6	TIFFErrorExt
arg	31:16	31:35	7	tif->tif_clientdata
water	31:16	0:0	8	tif
op	31:19	0:0	8	->
water	31:21	0:0	8	tif_clientdata
arg	31:37	31:43	7	module
water	31:37	0:0	8	module
arg	32:9	32:38	7	"No space for LZW code table"
water	32:9	0:0	8	"No space for LZW code table"
water	32:39	0:0	6	;
return	33:3	33:13	6	(0)
water	33:10	0:0	7	(
water	33:11	0:0	7	0
water	33:12	0:0	7	)
water	34:2	0:0	6	}
water	38:2	0:0	4	code
op	38:7	0:0	4	=
water	38:9	0:0	4	255
water	38:12	0:0	4	;
do	39:2	44:2	4	(code --)
cond	44:11	44:15	5	code --
water	44:11	0:0	6	code
op	44:15	0:0	6	--
stmts	39:5	44:2	5	
water	39:5	0:0	6	{
water	40:3	0:0	6	sp
op	40:5	0:0	6	->
water	40:7	0:0	6	dec_codetab
op	40:18	0:0	6	[
water	40:19	0:0	6	code
op	40:23	0:0	6	]
op	40:24	0:0	6	.
water	40:25	0:0	6	value
op	40:31	0:0	6	=
water	40:33	0:0	6	(
water	40:34	0:0	6	unsigned
water	40:43	0:0	6	char
water	40:47	0:0	6	)
water	40:48	0:0	6	code
water	40:52	0:0	6	;
water	41:3	0:0	6	sp
op	41:5	0:0	6	->
water	41:7	0:0	6	dec_codetab
op	41:18	0:0	6	[
water	41:19	0:0	6	code
op	41:23	0:0	6	]
op	41:24	0:0	6	.
water	41:25	0:0	6	firstchar
op	41:35	0:0	6	=
water	41:37	0:0	6	(
water	41:38	0:0	6	unsigned
water	41:47	0:0	6	char
water	41:51	0:0	6	)
water	41:52	0:0	6	code
water	41:56	0:0	6	;
water	42:3	0:0	6	sp
op	42:5	0:0	6	->
water	42:7	0:0	6	dec_codetab
op	42:18	0:0	6	[
water	42:19	0:0	6	code
op	42:23	0:0	6	]
op	42:24	0:0	6	.
water	42:25	0:0	6	length
op	42:32	0:0	6	=
water	42:34	0:0	6	1
water	42:35	0:0	6	;
water	43:3	0:0	6	sp
op	43:5	0:0	6	->
water	43:7	0:0	6	dec_codetab
op	43:18	0:0	6	[
water	43:19	0:0	6	code
op	43:23	0:0	6	]
op	43:24	0:0	6	.
water	43:25	0:0	6	next
op	43:30	0:0	6	=
water	43:32	0:0	6	NULL
water	43:36	0:0	6	;
water	44:2	0:0	6	}
water	44:18	0:0	4	;
call	48:17	49:51	4	_TIFFmemset
arg	48:29	48:57	5	&sp->dec_codetab[CODE_CLEAR]
op	48:29	0:0	6	&
water	48:30	0:0	6	sp
op	48:32	0:0	6	->
water	48:34	0:0	6	dec_codetab
op	48:45	0:0	6	[
water	48:46	0:0	6	CODE_CLEAR
op	48:56	0:0	6	]
arg	48:59	48:60	5	0
water	48:59	0:0	6	0
arg	49:8	49:51	5	(CODE_FIRST-CODE_CLEAR)*sizeof(code_t)
water	49:8	0:0	6	(
water	49:9	0:0	6	CODE_FIRST
op	49:20	0:0	6	-
water	49:22	0:0	6	CODE_CLEAR
water	49:32	0:0	6	)
op	49:34	0:0	6	*
op	49:36	0:0	6	sizeof
water	49:43	0:0	6	(
water	49:44	0:0	6	code_t
water	49:50	0:0	6	)
water	49:52	0:0	4	;
water	50:1	0:0	4	}
return	51:1	51:11	2	(1)
water	51:8	0:0	3	(
water	51:9	0:0	3	1
water	51:10	0:0	3	)

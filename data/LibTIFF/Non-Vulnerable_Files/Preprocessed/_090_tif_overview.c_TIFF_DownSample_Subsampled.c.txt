func	1:0	156:0	0	static void	TIFF_DownSample_Subsampled
params	2:31	0:0	1	
param	2:33	2:59	2	unsigned char *	pabySrcTile
param	2:61	2:72	2	int	nSample
param	3:33	3:51	2	uint32	nBlockXSize
param	3:53	3:71	2	uint32	nBlockYSize
param	4:33	4:58	2	unsigned char *	pabyOTile
param	5:33	5:52	2	uint32	nOBlockXSize
param	5:54	5:73	2	uint32	nOBlockYSize
param	6:33	6:46	2	uint32	nTXOff
param	6:48	6:61	2	uint32	nTYOff
param	6:63	6:73	2	int	nOMult
param	7:33	7:58	2	const char *	pszResampling
param	8:33	8:52	2	int	nHorSubsampling
param	8:54	8:74	2	int	nVerSubsampling
stmnts	0:0	155:4	1	
decl	11:4	11:24	2	int	nSampleBlockSize
decl	12:4	12:28	2	int	nSourceSampleRowSize
decl	13:4	13:26	2	int	nDestSampleRowSize
decl	14:4	14:30	2	uint32	nSourceX
water	14:20	0:0	2	,
decl	14:4	14:30	2	uint32	nSourceY
decl	15:4	15:36	2	uint32	nSourceXSec
water	15:23	0:0	2	,
decl	15:4	15:36	2	uint32	nSourceYSec
decl	16:4	16:42	2	uint32	nSourceXSecEnd
water	16:26	0:0	2	,
decl	16:4	16:42	2	uint32	nSourceYSecEnd
decl	17:4	17:26	2	uint32	nDestX
water	17:18	0:0	2	,
decl	17:4	17:26	2	uint32	nDestY
decl	18:4	18:34	2	int	nSampleOffsetInSampleBlock
decl	19:4	19:28	2	unsigned int	nCummulator
decl	20:4	20:33	2	unsigned int	nCummulatorCount
water	21:4	0:0	2	nSampleBlockSize
op	21:21	0:0	2	=
water	21:23	0:0	2	nHorSubsampling
op	21:39	0:0	2	*
water	21:41	0:0	2	nVerSubsampling
op	21:57	0:0	2	+
water	21:59	0:0	2	2
water	21:60	0:0	2	;
water	22:4	0:0	2	nSourceSampleRowSize
op	22:25	0:0	2	=
water	23:8	0:0	2	(
water	23:10	0:0	2	(
water	23:12	0:0	2	nBlockXSize
op	23:24	0:0	2	+
water	23:26	0:0	2	nHorSubsampling
op	23:42	0:0	2	-
water	23:44	0:0	2	1
water	23:46	0:0	2	)
op	23:48	0:0	2	/
water	23:50	0:0	2	nHorSubsampling
water	23:66	0:0	2	)
op	23:68	0:0	2	*
water	23:70	0:0	2	nSampleBlockSize
water	23:86	0:0	2	;
water	24:4	0:0	2	nDestSampleRowSize
op	24:23	0:0	2	=
water	25:8	0:0	2	(
water	25:10	0:0	2	(
water	25:12	0:0	2	nOBlockXSize
op	25:25	0:0	2	+
water	25:27	0:0	2	nHorSubsampling
op	25:43	0:0	2	-
water	25:45	0:0	2	1
water	25:47	0:0	2	)
op	25:49	0:0	2	/
water	25:51	0:0	2	nHorSubsampling
water	25:67	0:0	2	)
op	25:69	0:0	2	*
water	25:71	0:0	2	nSampleBlockSize
water	25:87	0:0	2	;
if	26:4	78:4	2	(strncmp (pszResampling ,"nearest" ,4 ) == 0 ||strncmp (pszResampling ,"NEAR" ,4 ) == 0)
cond	26:8	27:46	3	strncmp (pszResampling ,"nearest" ,4 ) == 0 ||strncmp (pszResampling ,"NEAR" ,4 ) == 0
call	26:8	26:41	4	strncmp
arg	26:16	26:29	5	pszResampling
water	26:16	0:0	6	pszResampling
arg	26:30	26:39	5	"nearest"
water	26:30	0:0	6	"nearest"
arg	26:40	26:41	5	4
water	26:40	0:0	6	4
op	26:43	0:0	4	==
water	26:46	0:0	4	0
op	27:8	0:0	4	||
call	27:11	27:41	4	strncmp
arg	27:19	27:32	5	pszResampling
water	27:19	0:0	6	pszResampling
arg	27:33	27:39	5	"NEAR"
water	27:33	0:0	6	"NEAR"
arg	27:40	27:41	5	4
water	27:40	0:0	6	4
op	27:43	0:0	4	==
water	27:46	0:0	4	0
stmts	28:4	78:4	3	
water	28:4	0:0	4	{
if	29:5	53:8	4	(nSample == 0)
cond	29:9	29:20	5	nSample == 0
water	29:9	0:0	6	nSample
op	29:17	0:0	6	==
water	29:20	0:0	6	0
stmts	30:8	53:8	5	
water	30:8	0:0	6	{
for	31:12	52:12	6	(nSourceY = 0 , nDestY = nTYOff ;nSourceY < nBlockYSize;nSourceY += nOMult , nDestY ++)
forinit	31:17	31:46	7	nSourceY = 0 , nDestY = nTYOff ;
water	31:17	0:0	8	nSourceY
op	31:26	0:0	8	=
water	31:28	0:0	8	0
water	31:29	0:0	8	,
water	31:31	0:0	8	nDestY
op	31:38	0:0	8	=
water	31:40	0:0	8	nTYOff
water	31:46	0:0	8	;
cond	32:17	32:28	7	nSourceY < nBlockYSize
water	32:17	0:0	8	nSourceY
op	32:26	0:0	8	<
water	32:28	0:0	8	nBlockYSize
forexpr	33:17	33:44	7	nSourceY += nOMult , nDestY ++
water	33:17	0:0	8	nSourceY
op	33:26	0:0	8	+=
water	33:29	0:0	8	nOMult
water	33:35	0:0	8	,
water	33:37	0:0	8	nDestY
op	33:44	0:0	8	++
stmts	34:12	52:12	7	
water	34:12	0:0	8	{
if	35:16	36:25	8	(nDestY >= nOBlockYSize)
cond	35:20	35:30	9	nDestY >= nOBlockYSize
water	35:20	0:0	10	nDestY
op	35:27	0:0	10	>=
water	35:30	0:0	10	nOBlockYSize
stmts	36:20	36:25	9	
break	36:20	36:25	10	
for	37:16	51:16	8	(nSourceX = 0 , nDestX = nTXOff ;nSourceX < nBlockXSize;nSourceX += nOMult , nDestX ++)
forinit	37:21	37:50	9	nSourceX = 0 , nDestX = nTXOff ;
water	37:21	0:0	10	nSourceX
op	37:30	0:0	10	=
water	37:32	0:0	10	0
water	37:33	0:0	10	,
water	37:35	0:0	10	nDestX
op	37:42	0:0	10	=
water	37:44	0:0	10	nTXOff
water	37:50	0:0	10	;
cond	38:21	38:32	9	nSourceX < nBlockXSize
water	38:21	0:0	10	nSourceX
op	38:30	0:0	10	<
water	38:32	0:0	10	nBlockXSize
forexpr	39:21	39:48	9	nSourceX += nOMult , nDestX ++
water	39:21	0:0	10	nSourceX
op	39:30	0:0	10	+=
water	39:33	0:0	10	nOMult
water	39:39	0:0	10	,
water	39:41	0:0	10	nDestX
op	39:48	0:0	10	++
stmts	40:16	51:16	9	
water	40:16	0:0	10	{
if	41:20	42:29	10	(nDestX >= nOBlockXSize)
cond	41:24	41:34	11	nDestX >= nOBlockXSize
water	41:24	0:0	12	nDestX
op	41:31	0:0	12	>=
water	41:34	0:0	12	nOBlockXSize
stmts	42:24	42:29	11	
break	42:24	42:29	12	
op	43:20	0:0	10	*
water	43:22	0:0	10	(
water	43:24	0:0	10	pabyOTile
op	43:34	0:0	10	+
water	43:36	0:0	10	(
water	43:38	0:0	10	nDestY
op	43:45	0:0	10	/
water	43:47	0:0	10	nVerSubsampling
water	43:63	0:0	10	)
op	43:65	0:0	10	*
water	43:67	0:0	10	nDestSampleRowSize
op	44:24	0:0	10	+
water	44:26	0:0	10	(
water	44:28	0:0	10	nDestY
op	44:35	0:0	10	%
water	44:37	0:0	10	nVerSubsampling
water	44:53	0:0	10	)
op	44:55	0:0	10	*
water	44:57	0:0	10	nHorSubsampling
op	45:24	0:0	10	+
water	45:26	0:0	10	(
water	45:28	0:0	10	nDestX
op	45:35	0:0	10	/
water	45:37	0:0	10	nHorSubsampling
water	45:53	0:0	10	)
op	45:55	0:0	10	*
water	45:57	0:0	10	nSampleBlockSize
op	46:24	0:0	10	+
water	46:26	0:0	10	(
water	46:28	0:0	10	nDestX
op	46:35	0:0	10	%
water	46:37	0:0	10	nHorSubsampling
water	46:53	0:0	10	)
water	46:55	0:0	10	)
op	46:57	0:0	10	=
op	47:24	0:0	10	*
water	47:26	0:0	10	(
water	47:28	0:0	10	pabySrcTile
op	47:40	0:0	10	+
water	47:42	0:0	10	(
water	47:44	0:0	10	nSourceY
op	47:53	0:0	10	/
water	47:55	0:0	10	nVerSubsampling
water	47:71	0:0	10	)
op	47:73	0:0	10	*
water	47:75	0:0	10	nSourceSampleRowSize
op	48:28	0:0	10	+
water	48:30	0:0	10	(
water	48:32	0:0	10	nSourceY
op	48:41	0:0	10	%
water	48:43	0:0	10	nVerSubsampling
water	48:59	0:0	10	)
op	48:61	0:0	10	*
water	48:63	0:0	10	nHorSubsampling
op	49:28	0:0	10	+
water	49:30	0:0	10	(
water	49:32	0:0	10	nSourceX
op	49:41	0:0	10	/
water	49:43	0:0	10	nHorSubsampling
water	49:59	0:0	10	)
op	49:61	0:0	10	*
water	49:63	0:0	10	nSampleBlockSize
op	50:28	0:0	10	+
water	50:30	0:0	10	(
water	50:32	0:0	10	nSourceX
op	50:41	0:0	10	%
water	50:43	0:0	10	nHorSubsampling
water	50:59	0:0	10	)
water	50:61	0:0	10	)
water	50:62	0:0	10	;
water	51:16	0:0	10	}
water	52:12	0:0	8	}
water	53:8	0:0	6	}
else	54:8	77:8	4
stmts	55:8	77:8	5	
water	55:8	0:0	6	{
water	56:12	0:0	6	nSampleOffsetInSampleBlock
op	56:39	0:0	6	=
water	56:41	0:0	6	nHorSubsampling
op	56:57	0:0	6	*
water	56:59	0:0	6	nVerSubsampling
op	56:75	0:0	6	+
water	56:77	0:0	6	nSample
op	56:85	0:0	6	-
water	56:87	0:0	6	1
water	56:88	0:0	6	;
for	57:12	76:12	6	(nSourceY = 0 , nDestY = ( nTYOff / nVerSubsampling ) ;nSourceY < ( nBlockYSize / nVerSubsampling );nSourceY += nOMult , nDestY ++)
forinit	57:17	57:68	7	nSourceY = 0 , nDestY = ( nTYOff / nVerSubsampling ) ;
water	57:17	0:0	8	nSourceY
op	57:26	0:0	8	=
water	57:28	0:0	8	0
water	57:29	0:0	8	,
water	57:31	0:0	8	nDestY
op	57:38	0:0	8	=
water	57:40	0:0	8	(
water	57:42	0:0	8	nTYOff
op	57:49	0:0	8	/
water	57:51	0:0	8	nVerSubsampling
water	57:67	0:0	8	)
water	57:68	0:0	8	;
cond	58:17	58:60	7	nSourceY < ( nBlockYSize / nVerSubsampling )
water	58:17	0:0	8	nSourceY
op	58:26	0:0	8	<
water	58:28	0:0	8	(
water	58:30	0:0	8	nBlockYSize
op	58:42	0:0	8	/
water	58:44	0:0	8	nVerSubsampling
water	58:60	0:0	8	)
forexpr	59:17	59:44	7	nSourceY += nOMult , nDestY ++
water	59:17	0:0	8	nSourceY
op	59:26	0:0	8	+=
water	59:29	0:0	8	nOMult
water	59:35	0:0	8	,
water	59:37	0:0	8	nDestY
op	59:44	0:0	8	++
stmts	60:12	76:12	7	
water	60:12	0:0	8	{
if	61:16	62:25	8	(nDestY * nVerSubsampling >= nOBlockYSize)
cond	61:20	61:46	9	nDestY * nVerSubsampling >= nOBlockYSize
water	61:20	0:0	10	nDestY
op	61:26	0:0	10	*
water	61:27	0:0	10	nVerSubsampling
op	61:43	0:0	10	>=
water	61:46	0:0	10	nOBlockYSize
stmts	62:20	62:25	9	
break	62:20	62:25	10	
for	63:13	75:16	8	(nSourceX = 0 , nDestX = ( nTXOff / nHorSubsampling ) ;nSourceX < ( nBlockXSize / nHorSubsampling );nSourceX += nOMult , nDestX ++)
forinit	63:18	63:69	9	nSourceX = 0 , nDestX = ( nTXOff / nHorSubsampling ) ;
water	63:18	0:0	10	nSourceX
op	63:27	0:0	10	=
water	63:29	0:0	10	0
water	63:30	0:0	10	,
water	63:32	0:0	10	nDestX
op	63:39	0:0	10	=
water	63:41	0:0	10	(
water	63:43	0:0	10	nTXOff
op	63:50	0:0	10	/
water	63:52	0:0	10	nHorSubsampling
water	63:68	0:0	10	)
water	63:69	0:0	10	;
cond	64:21	64:64	9	nSourceX < ( nBlockXSize / nHorSubsampling )
water	64:21	0:0	10	nSourceX
op	64:30	0:0	10	<
water	64:32	0:0	10	(
water	64:34	0:0	10	nBlockXSize
op	64:46	0:0	10	/
water	64:48	0:0	10	nHorSubsampling
water	64:64	0:0	10	)
forexpr	65:21	65:48	9	nSourceX += nOMult , nDestX ++
water	65:21	0:0	10	nSourceX
op	65:30	0:0	10	+=
water	65:33	0:0	10	nOMult
water	65:39	0:0	10	,
water	65:41	0:0	10	nDestX
op	65:48	0:0	10	++
stmts	66:16	75:16	9	
water	66:16	0:0	10	{
if	67:20	68:29	10	(nDestX * nHorSubsampling >= nOBlockXSize)
cond	67:24	67:50	11	nDestX * nHorSubsampling >= nOBlockXSize
water	67:24	0:0	12	nDestX
op	67:30	0:0	12	*
water	67:31	0:0	12	nHorSubsampling
op	67:47	0:0	12	>=
water	67:50	0:0	12	nOBlockXSize
stmts	68:24	68:29	11	
break	68:24	68:29	12	
op	69:20	0:0	10	*
water	69:22	0:0	10	(
water	69:24	0:0	10	pabyOTile
op	69:34	0:0	10	+
water	69:36	0:0	10	nDestY
op	69:43	0:0	10	*
water	69:45	0:0	10	nDestSampleRowSize
op	70:24	0:0	10	+
water	70:26	0:0	10	nDestX
op	70:33	0:0	10	*
water	70:35	0:0	10	nSampleBlockSize
op	71:24	0:0	10	+
water	71:26	0:0	10	nSampleOffsetInSampleBlock
water	71:53	0:0	10	)
op	71:55	0:0	10	=
op	72:21	0:0	10	*
water	72:23	0:0	10	(
water	72:25	0:0	10	pabySrcTile
op	72:37	0:0	10	+
water	72:39	0:0	10	nSourceY
op	72:48	0:0	10	*
water	72:50	0:0	10	nSourceSampleRowSize
op	73:28	0:0	10	+
water	73:30	0:0	10	nSourceX
op	73:39	0:0	10	*
water	73:41	0:0	10	nSampleBlockSize
op	74:28	0:0	10	+
water	74:30	0:0	10	nSampleOffsetInSampleBlock
water	74:57	0:0	10	)
water	74:58	0:0	10	;
water	75:16	0:0	10	}
water	76:12	0:0	8	}
water	77:8	0:0	6	}
water	78:4	0:0	4	}
else	79:4	155:4	2
stmts	79:9	155:4	3	
if	79:9	155:4	4	(strncmp (pszResampling ,"averag" ,6 ) == 0 ||strncmp (pszResampling ,"AVERAG" ,6 ) == 0)
cond	79:13	80:53	5	strncmp (pszResampling ,"averag" ,6 ) == 0 ||strncmp (pszResampling ,"AVERAG" ,6 ) == 0
call	79:13	79:45	6	strncmp
arg	79:21	79:34	7	pszResampling
water	79:21	0:0	8	pszResampling
arg	79:35	79:43	7	"averag"
water	79:35	0:0	8	"averag"
arg	79:44	79:45	7	6
water	79:44	0:0	8	6
op	79:47	0:0	6	==
water	79:50	0:0	6	0
op	80:13	0:0	6	||
call	80:16	80:48	6	strncmp
arg	80:24	80:37	7	pszResampling
water	80:24	0:0	8	pszResampling
arg	80:38	80:46	7	"AVERAG"
water	80:38	0:0	8	"AVERAG"
arg	80:47	80:48	7	6
water	80:47	0:0	8	6
op	80:50	0:0	6	==
water	80:53	0:0	6	0
stmts	81:4	155:4	5	
water	81:4	0:0	6	{
if	82:5	117:8	6	(nSample == 0)
cond	82:9	82:20	7	nSample == 0
water	82:9	0:0	8	nSample
op	82:17	0:0	8	==
water	82:20	0:0	8	0
stmts	83:8	117:8	7	
water	83:8	0:0	8	{
for	84:12	116:12	8	(nSourceY = 0 , nDestY = nTYOff ;nSourceY < nBlockYSize;nSourceY += nOMult , nDestY ++)
forinit	84:17	84:46	9	nSourceY = 0 , nDestY = nTYOff ;
water	84:17	0:0	10	nSourceY
op	84:26	0:0	10	=
water	84:28	0:0	10	0
water	84:29	0:0	10	,
water	84:31	0:0	10	nDestY
op	84:38	0:0	10	=
water	84:40	0:0	10	nTYOff
water	84:46	0:0	10	;
cond	84:48	84:59	9	nSourceY < nBlockYSize
water	84:48	0:0	10	nSourceY
op	84:57	0:0	10	<
water	84:59	0:0	10	nBlockYSize
forexpr	84:72	84:99	9	nSourceY += nOMult , nDestY ++
water	84:72	0:0	10	nSourceY
op	84:81	0:0	10	+=
water	84:84	0:0	10	nOMult
water	84:90	0:0	10	,
water	84:92	0:0	10	nDestY
op	84:99	0:0	10	++
stmts	85:12	116:12	9	
water	85:12	0:0	10	{
if	86:16	87:25	10	(nDestY >= nOBlockYSize)
cond	86:20	86:30	11	nDestY >= nOBlockYSize
water	86:20	0:0	12	nDestY
op	86:27	0:0	12	>=
water	86:30	0:0	12	nOBlockYSize
stmts	87:20	87:25	11	
break	87:20	87:25	12	
for	88:16	115:16	10	(nSourceX = 0 , nDestX = nTXOff ;nSourceX < nBlockXSize;nSourceX += nOMult , nDestX ++)
forinit	88:21	88:50	11	nSourceX = 0 , nDestX = nTXOff ;
water	88:21	0:0	12	nSourceX
op	88:30	0:0	12	=
water	88:32	0:0	12	0
water	88:33	0:0	12	,
water	88:35	0:0	12	nDestX
op	88:42	0:0	12	=
water	88:44	0:0	12	nTXOff
water	88:50	0:0	12	;
cond	88:52	88:63	11	nSourceX < nBlockXSize
water	88:52	0:0	12	nSourceX
op	88:61	0:0	12	<
water	88:63	0:0	12	nBlockXSize
forexpr	88:76	88:103	11	nSourceX += nOMult , nDestX ++
water	88:76	0:0	12	nSourceX
op	88:85	0:0	12	+=
water	88:88	0:0	12	nOMult
water	88:94	0:0	12	,
water	88:96	0:0	12	nDestX
op	88:103	0:0	12	++
stmts	89:16	115:16	11	
water	89:16	0:0	12	{
if	90:20	91:29	12	(nDestX >= nOBlockXSize)
cond	90:24	90:34	13	nDestX >= nOBlockXSize
water	90:24	0:0	14	nDestX
op	90:31	0:0	14	>=
water	90:34	0:0	14	nOBlockXSize
stmts	91:24	91:29	13	
break	91:24	91:29	14	
water	92:20	0:0	12	nSourceXSecEnd
op	92:35	0:0	12	=
water	92:37	0:0	12	nSourceX
op	92:46	0:0	12	+
water	92:48	0:0	12	nOMult
water	92:54	0:0	12	;
if	93:20	94:52	12	(nSourceXSecEnd > nBlockXSize)
cond	93:24	93:41	13	nSourceXSecEnd > nBlockXSize
water	93:24	0:0	14	nSourceXSecEnd
op	93:39	0:0	14	>
water	93:41	0:0	14	nBlockXSize
stmts	94:24	94:52	13	
water	94:24	0:0	14	nSourceXSecEnd
op	94:39	0:0	14	=
water	94:41	0:0	14	nBlockXSize
water	94:52	0:0	14	;
water	95:20	0:0	12	nSourceYSecEnd
op	95:35	0:0	12	=
water	95:37	0:0	12	nSourceY
op	95:46	0:0	12	+
water	95:48	0:0	12	nOMult
water	95:54	0:0	12	;
if	96:20	97:52	12	(nSourceYSecEnd > nBlockYSize)
cond	96:24	96:41	13	nSourceYSecEnd > nBlockYSize
water	96:24	0:0	14	nSourceYSecEnd
op	96:39	0:0	14	>
water	96:41	0:0	14	nBlockYSize
stmts	97:24	97:52	13	
water	97:24	0:0	14	nSourceYSecEnd
op	97:39	0:0	14	=
water	97:41	0:0	14	nBlockYSize
water	97:52	0:0	14	;
water	98:20	0:0	12	nCummulator
op	98:32	0:0	12	=
water	98:34	0:0	12	0
water	98:35	0:0	12	;
for	99:20	108:20	12	(nSourceYSec = nSourceY ;nSourceYSec < nSourceYSecEnd;nSourceYSec ++)
forinit	99:25	99:47	13	nSourceYSec = nSourceY ;
water	99:25	0:0	14	nSourceYSec
op	99:37	0:0	14	=
water	99:39	0:0	14	nSourceY
water	99:47	0:0	14	;
cond	99:49	99:63	13	nSourceYSec < nSourceYSecEnd
water	99:49	0:0	14	nSourceYSec
op	99:61	0:0	14	<
water	99:63	0:0	14	nSourceYSecEnd
forexpr	99:79	99:91	13	nSourceYSec ++
water	99:79	0:0	14	nSourceYSec
op	99:91	0:0	14	++
stmts	100:20	108:20	13	
water	100:20	0:0	14	{
for	101:24	107:24	14	(nSourceXSec = nSourceX ;nSourceXSec < nSourceXSecEnd;nSourceXSec ++)
forinit	101:29	101:51	15	nSourceXSec = nSourceX ;
water	101:29	0:0	16	nSourceXSec
op	101:41	0:0	16	=
water	101:43	0:0	16	nSourceX
water	101:51	0:0	16	;
cond	101:53	101:67	15	nSourceXSec < nSourceXSecEnd
water	101:53	0:0	16	nSourceXSec
op	101:65	0:0	16	<
water	101:67	0:0	16	nSourceXSecEnd
forexpr	101:83	101:95	15	nSourceXSec ++
water	101:83	0:0	16	nSourceXSec
op	101:95	0:0	16	++
stmts	102:24	107:24	15	
water	102:24	0:0	16	{
water	103:28	0:0	16	nCummulator
op	103:40	0:0	16	+=
op	103:43	0:0	16	*
water	103:45	0:0	16	(
water	103:47	0:0	16	pabySrcTile
op	103:59	0:0	16	+
water	103:61	0:0	16	(
water	103:63	0:0	16	nSourceYSec
op	103:75	0:0	16	/
water	103:77	0:0	16	nVerSubsampling
water	103:93	0:0	16	)
op	103:95	0:0	16	*
water	103:97	0:0	16	nSourceSampleRowSize
op	104:47	0:0	16	+
water	104:49	0:0	16	(
water	104:51	0:0	16	nSourceYSec
op	104:63	0:0	16	%
water	104:65	0:0	16	nVerSubsampling
water	104:81	0:0	16	)
op	104:83	0:0	16	*
water	104:85	0:0	16	nHorSubsampling
op	105:47	0:0	16	+
water	105:49	0:0	16	(
water	105:51	0:0	16	nSourceXSec
op	105:63	0:0	16	/
water	105:65	0:0	16	nHorSubsampling
water	105:81	0:0	16	)
op	105:83	0:0	16	*
water	105:85	0:0	16	nSampleBlockSize
op	106:47	0:0	16	+
water	106:49	0:0	16	(
water	106:51	0:0	16	nSourceXSec
op	106:63	0:0	16	%
water	106:65	0:0	16	nHorSubsampling
water	106:81	0:0	16	)
water	106:83	0:0	16	)
water	106:84	0:0	16	;
water	107:24	0:0	16	}
water	108:20	0:0	14	}
water	109:20	0:0	12	nCummulatorCount
op	109:37	0:0	12	=
water	109:39	0:0	12	(
water	109:41	0:0	12	nSourceXSecEnd
op	109:56	0:0	12	-
water	109:58	0:0	12	nSourceX
water	109:67	0:0	12	)
op	109:69	0:0	12	*
water	109:71	0:0	12	(
water	109:73	0:0	12	nSourceYSecEnd
op	109:88	0:0	12	-
water	109:90	0:0	12	nSourceY
water	109:99	0:0	12	)
water	109:100	0:0	12	;
op	110:20	0:0	12	*
water	110:22	0:0	12	(
water	110:24	0:0	12	pabyOTile
op	110:34	0:0	12	+
water	110:36	0:0	12	(
water	110:38	0:0	12	nDestY
op	110:45	0:0	12	/
water	110:47	0:0	12	nVerSubsampling
water	110:63	0:0	12	)
op	110:65	0:0	12	*
water	110:67	0:0	12	nDestSampleRowSize
op	111:24	0:0	12	+
water	111:26	0:0	12	(
water	111:28	0:0	12	nDestY
op	111:35	0:0	12	%
water	111:37	0:0	12	nVerSubsampling
water	111:53	0:0	12	)
op	111:55	0:0	12	*
water	111:57	0:0	12	nHorSubsampling
op	112:24	0:0	12	+
water	112:26	0:0	12	(
water	112:28	0:0	12	nDestX
op	112:35	0:0	12	/
water	112:37	0:0	12	nHorSubsampling
water	112:53	0:0	12	)
op	112:55	0:0	12	*
water	112:57	0:0	12	nSampleBlockSize
op	113:24	0:0	12	+
water	113:26	0:0	12	(
water	113:28	0:0	12	nDestX
op	113:35	0:0	12	%
water	113:37	0:0	12	nHorSubsampling
water	113:53	0:0	12	)
water	113:55	0:0	12	)
op	113:57	0:0	12	=
water	114:24	0:0	12	(
water	114:26	0:0	12	(
water	114:28	0:0	12	nCummulator
op	114:40	0:0	12	+
water	114:42	0:0	12	(
water	114:44	0:0	12	nCummulatorCount
op	114:61	0:0	12	>>
water	114:64	0:0	12	1
water	114:66	0:0	12	)
water	114:68	0:0	12	)
op	114:70	0:0	12	/
water	114:72	0:0	12	nCummulatorCount
water	114:89	0:0	12	)
water	114:90	0:0	12	;
water	115:16	0:0	12	}
water	116:12	0:0	10	}
water	117:8	0:0	8	}
else	118:8	154:8	6
stmts	119:8	154:8	7	
water	119:8	0:0	8	{
water	120:12	0:0	8	nSampleOffsetInSampleBlock
op	120:39	0:0	8	=
water	120:41	0:0	8	nHorSubsampling
op	120:57	0:0	8	*
water	120:59	0:0	8	nVerSubsampling
op	120:75	0:0	8	+
water	120:77	0:0	8	nSample
op	120:85	0:0	8	-
water	120:87	0:0	8	1
water	120:88	0:0	8	;
for	121:12	153:12	8	(nSourceY = 0 , nDestY = ( nTYOff / nVerSubsampling ) ;nSourceY < ( nBlockYSize / nVerSubsampling );nSourceY += nOMult , nDestY ++)
forinit	121:17	121:68	9	nSourceY = 0 , nDestY = ( nTYOff / nVerSubsampling ) ;
water	121:17	0:0	10	nSourceY
op	121:26	0:0	10	=
water	121:28	0:0	10	0
water	121:29	0:0	10	,
water	121:31	0:0	10	nDestY
op	121:38	0:0	10	=
water	121:40	0:0	10	(
water	121:42	0:0	10	nTYOff
op	121:49	0:0	10	/
water	121:51	0:0	10	nVerSubsampling
water	121:67	0:0	10	)
water	121:68	0:0	10	;
cond	121:70	121:113	9	nSourceY < ( nBlockYSize / nVerSubsampling )
water	121:70	0:0	10	nSourceY
op	121:79	0:0	10	<
water	121:81	0:0	10	(
water	121:83	0:0	10	nBlockYSize
op	121:95	0:0	10	/
water	121:97	0:0	10	nVerSubsampling
water	121:113	0:0	10	)
forexpr	122:17	122:44	9	nSourceY += nOMult , nDestY ++
water	122:17	0:0	10	nSourceY
op	122:26	0:0	10	+=
water	122:29	0:0	10	nOMult
water	122:35	0:0	10	,
water	122:37	0:0	10	nDestY
op	122:44	0:0	10	++
stmts	123:12	153:12	9	
water	123:12	0:0	10	{
if	124:16	125:25	10	(nDestY * nVerSubsampling >= nOBlockYSize)
cond	124:20	124:46	11	nDestY * nVerSubsampling >= nOBlockYSize
water	124:20	0:0	12	nDestY
op	124:26	0:0	12	*
water	124:27	0:0	12	nVerSubsampling
op	124:43	0:0	12	>=
water	124:46	0:0	12	nOBlockYSize
stmts	125:20	125:25	11	
break	125:20	125:25	12	
for	126:16	152:16	10	(nSourceX = 0 , nDestX = ( nTXOff / nHorSubsampling ) ;nSourceX < ( nBlockXSize / nHorSubsampling );nSourceX += nOMult , nDestX ++)
forinit	126:21	126:72	11	nSourceX = 0 , nDestX = ( nTXOff / nHorSubsampling ) ;
water	126:21	0:0	12	nSourceX
op	126:30	0:0	12	=
water	126:32	0:0	12	0
water	126:33	0:0	12	,
water	126:35	0:0	12	nDestX
op	126:42	0:0	12	=
water	126:44	0:0	12	(
water	126:46	0:0	12	nTXOff
op	126:53	0:0	12	/
water	126:55	0:0	12	nHorSubsampling
water	126:71	0:0	12	)
water	126:72	0:0	12	;
cond	126:74	126:117	11	nSourceX < ( nBlockXSize / nHorSubsampling )
water	126:74	0:0	12	nSourceX
op	126:83	0:0	12	<
water	126:85	0:0	12	(
water	126:87	0:0	12	nBlockXSize
op	126:99	0:0	12	/
water	126:101	0:0	12	nHorSubsampling
water	126:117	0:0	12	)
forexpr	127:21	127:48	11	nSourceX += nOMult , nDestX ++
water	127:21	0:0	12	nSourceX
op	127:30	0:0	12	+=
water	127:33	0:0	12	nOMult
water	127:39	0:0	12	,
water	127:41	0:0	12	nDestX
op	127:48	0:0	12	++
stmts	128:16	152:16	11	
water	128:16	0:0	12	{
if	129:20	130:29	12	(nDestX * nHorSubsampling >= nOBlockXSize)
cond	129:24	129:50	13	nDestX * nHorSubsampling >= nOBlockXSize
water	129:24	0:0	14	nDestX
op	129:30	0:0	14	*
water	129:31	0:0	14	nHorSubsampling
op	129:47	0:0	14	>=
water	129:50	0:0	14	nOBlockXSize
stmts	130:24	130:29	13	
break	130:24	130:29	14	
water	131:20	0:0	12	nSourceXSecEnd
op	131:35	0:0	12	=
water	131:37	0:0	12	nSourceX
op	131:46	0:0	12	+
water	131:48	0:0	12	nOMult
water	131:54	0:0	12	;
if	132:20	133:74	12	(nSourceXSecEnd > ( nBlockXSize / nHorSubsampling ))
cond	132:24	132:73	13	nSourceXSecEnd > ( nBlockXSize / nHorSubsampling )
water	132:24	0:0	14	nSourceXSecEnd
op	132:39	0:0	14	>
water	132:41	0:0	14	(
water	132:43	0:0	14	nBlockXSize
op	132:55	0:0	14	/
water	132:57	0:0	14	nHorSubsampling
water	132:73	0:0	14	)
stmts	133:24	133:74	13	
water	133:24	0:0	14	nSourceXSecEnd
op	133:39	0:0	14	=
water	133:41	0:0	14	(
water	133:43	0:0	14	nBlockXSize
op	133:55	0:0	14	/
water	133:57	0:0	14	nHorSubsampling
water	133:73	0:0	14	)
water	133:74	0:0	14	;
water	134:20	0:0	12	nSourceYSecEnd
op	134:35	0:0	12	=
water	134:37	0:0	12	nSourceY
op	134:46	0:0	12	+
water	134:48	0:0	12	nOMult
water	134:54	0:0	12	;
if	135:20	136:74	12	(nSourceYSecEnd > ( nBlockYSize / nVerSubsampling ))
cond	135:24	135:73	13	nSourceYSecEnd > ( nBlockYSize / nVerSubsampling )
water	135:24	0:0	14	nSourceYSecEnd
op	135:39	0:0	14	>
water	135:41	0:0	14	(
water	135:43	0:0	14	nBlockYSize
op	135:55	0:0	14	/
water	135:57	0:0	14	nVerSubsampling
water	135:73	0:0	14	)
stmts	136:24	136:74	13	
water	136:24	0:0	14	nSourceYSecEnd
op	136:39	0:0	14	=
water	136:41	0:0	14	(
water	136:43	0:0	14	nBlockYSize
op	136:55	0:0	14	/
water	136:57	0:0	14	nVerSubsampling
water	136:73	0:0	14	)
water	136:74	0:0	14	;
water	137:20	0:0	12	nCummulator
op	137:32	0:0	12	=
water	137:34	0:0	12	0
water	137:35	0:0	12	;
for	138:20	146:20	12	(nSourceYSec = nSourceY ;nSourceYSec < nSourceYSecEnd;nSourceYSec ++)
forinit	138:25	138:47	13	nSourceYSec = nSourceY ;
water	138:25	0:0	14	nSourceYSec
op	138:37	0:0	14	=
water	138:39	0:0	14	nSourceY
water	138:47	0:0	14	;
cond	138:49	138:63	13	nSourceYSec < nSourceYSecEnd
water	138:49	0:0	14	nSourceYSec
op	138:61	0:0	14	<
water	138:63	0:0	14	nSourceYSecEnd
forexpr	138:79	138:91	13	nSourceYSec ++
water	138:79	0:0	14	nSourceYSec
op	138:91	0:0	14	++
stmts	139:20	146:20	13	
water	139:20	0:0	14	{
for	140:24	145:24	14	(nSourceXSec = nSourceX ;nSourceXSec < nSourceXSecEnd;nSourceXSec ++)
forinit	140:29	140:51	15	nSourceXSec = nSourceX ;
water	140:29	0:0	16	nSourceXSec
op	140:41	0:0	16	=
water	140:43	0:0	16	nSourceX
water	140:51	0:0	16	;
cond	140:53	140:67	15	nSourceXSec < nSourceXSecEnd
water	140:53	0:0	16	nSourceXSec
op	140:65	0:0	16	<
water	140:67	0:0	16	nSourceXSecEnd
forexpr	140:83	140:95	15	nSourceXSec ++
water	140:83	0:0	16	nSourceXSec
op	140:95	0:0	16	++
stmts	141:24	145:24	15	
water	141:24	0:0	16	{
water	142:28	0:0	16	nCummulator
op	142:40	0:0	16	+=
op	142:43	0:0	16	*
water	142:45	0:0	16	(
water	142:47	0:0	16	pabySrcTile
op	142:59	0:0	16	+
water	142:61	0:0	16	nSourceYSec
op	142:73	0:0	16	*
water	142:75	0:0	16	nSourceSampleRowSize
op	143:47	0:0	16	+
water	143:49	0:0	16	nSourceXSec
op	143:61	0:0	16	*
water	143:63	0:0	16	nSampleBlockSize
op	144:47	0:0	16	+
water	144:49	0:0	16	nSampleOffsetInSampleBlock
water	144:76	0:0	16	)
water	144:77	0:0	16	;
water	145:24	0:0	16	}
water	146:20	0:0	14	}
water	147:20	0:0	12	nCummulatorCount
op	147:37	0:0	12	=
water	147:39	0:0	12	(
water	147:41	0:0	12	nSourceXSecEnd
op	147:56	0:0	12	-
water	147:58	0:0	12	nSourceX
water	147:67	0:0	12	)
op	147:69	0:0	12	*
water	147:71	0:0	12	(
water	147:73	0:0	12	nSourceYSecEnd
op	147:88	0:0	12	-
water	147:90	0:0	12	nSourceY
water	147:99	0:0	12	)
water	147:100	0:0	12	;
op	148:20	0:0	12	*
water	148:22	0:0	12	(
water	148:24	0:0	12	pabyOTile
op	148:34	0:0	12	+
water	148:36	0:0	12	nDestY
op	148:43	0:0	12	*
water	148:45	0:0	12	nDestSampleRowSize
op	149:24	0:0	12	+
water	149:26	0:0	12	nDestX
op	149:33	0:0	12	*
water	149:35	0:0	12	nSampleBlockSize
op	150:24	0:0	12	+
water	150:26	0:0	12	nSampleOffsetInSampleBlock
water	150:53	0:0	12	)
op	150:55	0:0	12	=
water	151:24	0:0	12	(
water	151:26	0:0	12	(
water	151:28	0:0	12	nCummulator
op	151:40	0:0	12	+
water	151:42	0:0	12	(
water	151:44	0:0	12	nCummulatorCount
op	151:61	0:0	12	>>
water	151:64	0:0	12	1
water	151:66	0:0	12	)
water	151:68	0:0	12	)
op	151:70	0:0	12	/
water	151:72	0:0	12	nCummulatorCount
water	151:89	0:0	12	)
water	151:90	0:0	12	;
water	152:16	0:0	12	}
water	153:12	0:0	10	}
water	154:8	0:0	8	}
water	155:4	0:0	6	}

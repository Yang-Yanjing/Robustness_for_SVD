func	1:0	237:0	0	int	main
params	2:4	0:0	1	
param	2:5	2:13	2	int	argc
param	2:15	2:27	2	char *	argv[]
stmnts	0:0	236:11	1	
decl	4:1	4:49	2	uint32	width
op	4:14	0:0	2	=
water	4:16	0:0	2	0
water	4:17	0:0	2	,
decl	4:1	4:49	2	uint32	length
op	4:26	0:0	2	=
water	4:28	0:0	2	0
water	4:29	0:0	2	,
decl	4:1	4:49	2	uint32	linebytes
water	4:40	0:0	2	,
decl	4:1	4:49	2	uint32	bufsize
decl	5:1	5:18	2	uint32	nbands
op	5:15	0:0	2	=
water	5:17	0:0	2	1
decl	6:1	6:19	2	off_t	hdr_size
op	6:16	0:0	2	=
water	6:18	0:0	2	0
decl	7:1	7:31	2	TIFFDataType	dtype
op	7:20	0:0	2	=
water	7:22	0:0	2	TIFF_BYTE
decl	8:1	8:16	2	int16	depth
op	8:13	0:0	2	=
water	8:15	0:0	2	1
decl	9:1	9:13	2	int	swab
op	9:10	0:0	2	=
water	9:12	0:0	2	0
decl	10:1	10:34	2	InterleavingType	interleaving
op	10:31	0:0	2	=
water	10:33	0:0	2	0
decl	11:1	11:35	2	uint32	rowsperstrip
op	11:22	0:0	2	=
water	11:24	0:0	2	(
water	11:25	0:0	2	uint32
water	11:31	0:0	2	)
op	11:33	0:0	2	-
water	11:34	0:0	2	1
decl	12:1	12:44	2	uint16	photometric
op	12:20	0:0	2	=
water	12:22	0:0	2	PHOTOMETRIC_MINISBLACK
decl	13:1	13:36	2	uint16	config
op	13:15	0:0	2	=
water	13:17	0:0	2	PLANARCONFIG_CONTIG
decl	14:1	14:37	2	uint16	fillorder
op	14:18	0:0	2	=
water	14:20	0:0	2	FILLORDER_LSB2MSB
decl	15:1	15:7	2	int	fd
decl	16:1	16:25	2	char	*outfilename
op	16:19	0:0	2	=
water	16:21	0:0	2	NULL
decl	17:1	17:10	2	TIFF	*out
decl	18:1	18:22	2	uint32	row
water	18:11	0:0	2	,
decl	18:1	18:22	2	uint32	col
water	18:16	0:0	2	,
decl	18:1	18:22	2	uint32	band
decl	19:1	19:6	2	int	c
decl	20:1	20:40	2	unsigned char	*buf
op	20:20	0:0	2	=
water	20:22	0:0	2	NULL
water	20:26	0:0	2	,
decl	20:1	20:40	2	unsigned char	*buf1
op	20:34	0:0	2	=
water	20:36	0:0	2	NULL
water	21:1	0:0	2	extern
water	21:8	0:0	2	int
water	21:12	0:0	2	optind
water	21:18	0:0	2	;
water	22:1	0:0	2	extern
water	22:8	0:0	2	char
op	22:12	0:0	2	*
water	22:14	0:0	2	optarg
water	22:20	0:0	2	;
while	23:1	110:8	2	(( c =getopt (argc ,argv ,"c:r:H:w:l:b:d:LMp:si:o:h" ) ) != - 1)
cond	23:8	23:65	3	( c =getopt (argc ,argv ,"c:r:H:w:l:b:d:LMp:si:o:h" ) ) != - 1
water	23:8	0:0	4	(
water	23:9	0:0	4	c
op	23:11	0:0	4	=
call	23:13	23:58	4	getopt
arg	23:20	23:24	5	argc
water	23:20	0:0	6	argc
arg	23:26	23:30	5	argv
water	23:26	0:0	6	argv
arg	23:32	23:58	5	"c:r:H:w:l:b:d:LMp:si:o:h"
water	23:32	0:0	6	"c:r:H:w:l:b:d:LMp:si:o:h"
water	23:59	0:0	4	)
op	23:61	0:0	4	!=
op	23:64	0:0	4	-
water	23:65	0:0	4	1
stmts	23:68	110:8	3	
water	23:68	0:0	4	{
switch	24:2	109:2	4	(c)
cond	24:10	24:10	5	c
water	24:10	0:0	6	c
stmts	24:13	109:2	5	
water	24:13	0:0	6	{
water	25:2	0:0	6	case
water	25:7	0:0	6	'c'
water	25:10	0:0	6	:
water	26:3	0:0	6	if
water	26:6	0:0	6	(
op	26:7	0:0	6	!
call	26:8	26:37	6	processCompressOptions
arg	26:31	26:37	7	optarg
water	26:31	0:0	8	optarg
water	26:38	0:0	6	)
call	27:4	27:10	6	usage
water	27:11	0:0	6	;
break	28:3	28:8	6	
water	29:2	0:0	6	case
water	29:7	0:0	6	'r'
water	29:10	0:0	6	:
water	30:3	0:0	6	rowsperstrip
op	30:16	0:0	6	=
call	30:18	30:29	6	atoi
arg	30:23	30:29	7	optarg
water	30:23	0:0	8	optarg
water	30:30	0:0	6	;
break	31:3	31:8	6	
water	32:2	0:0	6	case
water	32:7	0:0	6	'H'
water	32:10	0:0	6	:
water	33:3	0:0	6	hdr_size
op	33:12	0:0	6	=
call	33:14	33:25	6	atoi
arg	33:19	33:25	7	optarg
water	33:19	0:0	8	optarg
water	33:26	0:0	6	;
break	34:3	34:8	6	
water	35:2	0:0	6	case
water	35:7	0:0	6	'w'
water	35:10	0:0	6	:
water	36:3	0:0	6	width
op	36:9	0:0	6	=
call	36:11	36:22	6	atoi
arg	36:16	36:22	7	optarg
water	36:16	0:0	8	optarg
water	36:23	0:0	6	;
break	37:3	37:8	6	
water	38:2	0:0	6	case
water	38:7	0:0	6	'l'
water	38:10	0:0	6	:
water	39:3	0:0	6	length
op	39:10	0:0	6	=
call	39:12	39:23	6	atoi
arg	39:17	39:23	7	optarg
water	39:17	0:0	8	optarg
water	39:24	0:0	6	;
break	40:3	40:8	6	
water	41:2	0:0	6	case
water	41:7	0:0	6	'b'
water	41:10	0:0	6	:
water	42:3	0:0	6	nbands
op	42:10	0:0	6	=
call	42:12	42:23	6	atoi
arg	42:17	42:23	7	optarg
water	42:17	0:0	8	optarg
water	42:24	0:0	6	;
break	43:3	43:8	6	
water	44:2	0:0	6	case
water	44:7	0:0	6	'd'
water	44:10	0:0	6	:
water	45:3	0:0	6	if
water	45:6	0:0	6	(
call	45:7	45:32	6	strncmp
arg	45:15	45:21	7	optarg
water	45:15	0:0	8	optarg
arg	45:23	45:29	7	"byte"
water	45:23	0:0	8	"byte"
arg	45:31	45:32	7	4
water	45:31	0:0	8	4
op	45:34	0:0	6	==
water	45:37	0:0	6	0
water	45:38	0:0	6	)
water	46:4	0:0	6	dtype
op	46:10	0:0	6	=
water	46:12	0:0	6	TIFF_BYTE
water	46:21	0:0	6	;
else	47:3	48:22	6
stmts	47:8	48:22	7	
if	47:8	48:22	8	(strncmp (optarg ,"short" ,5 ) == 0)
cond	47:12	47:43	9	strncmp (optarg ,"short" ,5 ) == 0
call	47:12	47:38	10	strncmp
arg	47:20	47:26	11	optarg
water	47:20	0:0	12	optarg
arg	47:28	47:35	11	"short"
water	47:28	0:0	12	"short"
arg	47:37	47:38	11	5
water	47:37	0:0	12	5
op	47:40	0:0	10	==
water	47:43	0:0	10	0
stmts	48:4	48:22	9	
water	48:4	0:0	10	dtype
op	48:10	0:0	10	=
water	48:12	0:0	10	TIFF_SHORT
water	48:22	0:0	10	;
else	49:3	50:21	6
stmts	49:8	50:21	7	
if	49:8	50:21	8	(strncmp (optarg ,"long" ,4 ) == 0)
cond	49:13	49:43	9	strncmp (optarg ,"long" ,4 ) == 0
call	49:13	49:38	10	strncmp
arg	49:21	49:27	11	optarg
water	49:21	0:0	12	optarg
arg	49:29	49:35	11	"long"
water	49:29	0:0	12	"long"
arg	49:37	49:38	11	4
water	49:37	0:0	12	4
op	49:40	0:0	10	==
water	49:43	0:0	10	0
stmts	50:4	50:21	9	
water	50:4	0:0	10	dtype
op	50:10	0:0	10	=
water	50:12	0:0	10	TIFF_LONG
water	50:21	0:0	10	;
else	51:3	52:22	6
stmts	51:8	52:22	7	
if	51:8	52:22	8	(strncmp (optarg ,"sbyte" ,5 ) == 0)
cond	51:13	51:44	9	strncmp (optarg ,"sbyte" ,5 ) == 0
call	51:13	51:39	10	strncmp
arg	51:21	51:27	11	optarg
water	51:21	0:0	12	optarg
arg	51:29	51:36	11	"sbyte"
water	51:29	0:0	12	"sbyte"
arg	51:38	51:39	11	5
water	51:38	0:0	12	5
op	51:41	0:0	10	==
water	51:44	0:0	10	0
stmts	52:4	52:22	9	
water	52:4	0:0	10	dtype
op	52:10	0:0	10	=
water	52:12	0:0	10	TIFF_SBYTE
water	52:22	0:0	10	;
else	53:3	54:23	6
stmts	53:8	54:23	7	
if	53:8	54:23	8	(strncmp (optarg ,"sshort" ,6 ) == 0)
cond	53:13	53:45	9	strncmp (optarg ,"sshort" ,6 ) == 0
call	53:13	53:40	10	strncmp
arg	53:21	53:27	11	optarg
water	53:21	0:0	12	optarg
arg	53:29	53:37	11	"sshort"
water	53:29	0:0	12	"sshort"
arg	53:39	53:40	11	6
water	53:39	0:0	12	6
op	53:42	0:0	10	==
water	53:45	0:0	10	0
stmts	54:4	54:23	9	
water	54:4	0:0	10	dtype
op	54:10	0:0	10	=
water	54:12	0:0	10	TIFF_SSHORT
water	54:23	0:0	10	;
else	55:3	56:22	6
stmts	55:8	56:22	7	
if	55:8	56:22	8	(strncmp (optarg ,"slong" ,5 ) == 0)
cond	55:13	55:44	9	strncmp (optarg ,"slong" ,5 ) == 0
call	55:13	55:39	10	strncmp
arg	55:21	55:27	11	optarg
water	55:21	0:0	12	optarg
arg	55:29	55:36	11	"slong"
water	55:29	0:0	12	"slong"
arg	55:38	55:39	11	5
water	55:38	0:0	12	5
op	55:41	0:0	10	==
water	55:44	0:0	10	0
stmts	56:4	56:22	9	
water	56:4	0:0	10	dtype
op	56:10	0:0	10	=
water	56:12	0:0	10	TIFF_SLONG
water	56:22	0:0	10	;
else	57:3	58:22	6
stmts	57:8	58:22	7	
if	57:8	58:22	8	(strncmp (optarg ,"float" ,5 ) == 0)
cond	57:13	57:44	9	strncmp (optarg ,"float" ,5 ) == 0
call	57:13	57:39	10	strncmp
arg	57:21	57:27	11	optarg
water	57:21	0:0	12	optarg
arg	57:29	57:36	11	"float"
water	57:29	0:0	12	"float"
arg	57:38	57:39	11	5
water	57:38	0:0	12	5
op	57:41	0:0	10	==
water	57:44	0:0	10	0
stmts	58:4	58:22	9	
water	58:4	0:0	10	dtype
op	58:10	0:0	10	=
water	58:12	0:0	10	TIFF_FLOAT
water	58:22	0:0	10	;
else	59:3	60:23	6
stmts	59:8	60:23	7	
if	59:8	60:23	8	(strncmp (optarg ,"double" ,6 ) == 0)
cond	59:13	59:45	9	strncmp (optarg ,"double" ,6 ) == 0
call	59:13	59:40	10	strncmp
arg	59:21	59:27	11	optarg
water	59:21	0:0	12	optarg
arg	59:29	59:37	11	"double"
water	59:29	0:0	12	"double"
arg	59:39	59:40	11	6
water	59:39	0:0	12	6
op	59:42	0:0	10	==
water	59:45	0:0	10	0
stmts	60:4	60:23	9	
water	60:4	0:0	10	dtype
op	60:10	0:0	10	=
water	60:12	0:0	10	TIFF_DOUBLE
water	60:23	0:0	10	;
else	61:3	62:21	6
stmts	62:4	62:21	7	
water	62:4	0:0	8	dtype
op	62:10	0:0	8	=
water	62:12	0:0	8	TIFF_BYTE
water	62:21	0:0	8	;
water	63:3	0:0	6	depth
op	63:9	0:0	6	=
call	63:11	63:30	6	TIFFDataWidth
arg	63:25	63:30	7	dtype
water	63:25	0:0	8	dtype
water	63:31	0:0	6	;
break	64:3	64:8	6	
water	65:2	0:0	6	case
water	65:7	0:0	6	'L'
water	65:10	0:0	6	:
water	66:3	0:0	6	fillorder
op	66:13	0:0	6	=
water	66:15	0:0	6	FILLORDER_LSB2MSB
water	66:32	0:0	6	;
break	67:3	67:8	6	
water	68:2	0:0	6	case
water	68:7	0:0	6	'M'
water	68:10	0:0	6	:
water	69:3	0:0	6	fillorder
op	69:13	0:0	6	=
water	69:15	0:0	6	FILLORDER_MSB2LSB
water	69:32	0:0	6	;
break	70:3	70:8	6	
water	71:2	0:0	6	case
water	71:7	0:0	6	'p'
water	71:10	0:0	6	:
water	72:3	0:0	6	if
water	72:6	0:0	6	(
call	72:7	72:39	6	strncmp
arg	72:15	72:21	7	optarg
water	72:15	0:0	8	optarg
arg	72:23	72:35	7	"miniswhite"
water	72:23	0:0	8	"miniswhite"
arg	72:37	72:39	7	10
water	72:37	0:0	8	10
op	72:41	0:0	6	==
water	72:44	0:0	6	0
water	72:45	0:0	6	)
water	73:4	0:0	6	photometric
op	73:16	0:0	6	=
water	73:18	0:0	6	PHOTOMETRIC_MINISWHITE
water	73:40	0:0	6	;
else	74:3	75:40	6
stmts	74:8	75:40	7	
if	74:8	75:40	8	(strncmp (optarg ,"minisblack" ,10 ) == 0)
cond	74:12	74:49	9	strncmp (optarg ,"minisblack" ,10 ) == 0
call	74:12	74:44	10	strncmp
arg	74:20	74:26	11	optarg
water	74:20	0:0	12	optarg
arg	74:28	74:40	11	"minisblack"
water	74:28	0:0	12	"minisblack"
arg	74:42	74:44	11	10
water	74:42	0:0	12	10
op	74:46	0:0	10	==
water	74:49	0:0	10	0
stmts	75:4	75:40	9	
water	75:4	0:0	10	photometric
op	75:16	0:0	10	=
water	75:18	0:0	10	PHOTOMETRIC_MINISBLACK
water	75:40	0:0	10	;
else	76:3	77:33	6
stmts	76:8	77:33	7	
if	76:8	77:33	8	(strncmp (optarg ,"rgb" ,3 ) == 0)
cond	76:12	76:41	9	strncmp (optarg ,"rgb" ,3 ) == 0
call	76:12	76:36	10	strncmp
arg	76:20	76:26	11	optarg
water	76:20	0:0	12	optarg
arg	76:28	76:33	11	"rgb"
water	76:28	0:0	12	"rgb"
arg	76:35	76:36	11	3
water	76:35	0:0	12	3
op	76:38	0:0	10	==
water	76:41	0:0	10	0
stmts	77:4	77:33	9	
water	77:4	0:0	10	photometric
op	77:16	0:0	10	=
water	77:18	0:0	10	PHOTOMETRIC_RGB
water	77:33	0:0	10	;
else	78:3	79:39	6
stmts	78:8	79:39	7	
if	78:8	79:39	8	(strncmp (optarg ,"cmyk" ,4 ) == 0)
cond	78:12	78:42	9	strncmp (optarg ,"cmyk" ,4 ) == 0
call	78:12	78:37	10	strncmp
arg	78:20	78:26	11	optarg
water	78:20	0:0	12	optarg
arg	78:28	78:34	11	"cmyk"
water	78:28	0:0	12	"cmyk"
arg	78:36	78:37	11	4
water	78:36	0:0	12	4
op	78:39	0:0	10	==
water	78:42	0:0	10	0
stmts	79:4	79:39	9	
water	79:4	0:0	10	photometric
op	79:16	0:0	10	=
water	79:18	0:0	10	PHOTOMETRIC_SEPARATED
water	79:39	0:0	10	;
else	80:3	81:35	6
stmts	80:8	81:35	7	
if	80:8	81:35	8	(strncmp (optarg ,"ycbcr" ,5 ) == 0)
cond	80:12	80:43	9	strncmp (optarg ,"ycbcr" ,5 ) == 0
call	80:12	80:38	10	strncmp
arg	80:20	80:26	11	optarg
water	80:20	0:0	12	optarg
arg	80:28	80:35	11	"ycbcr"
water	80:28	0:0	12	"ycbcr"
arg	80:37	80:38	11	5
water	80:37	0:0	12	5
op	80:40	0:0	10	==
water	80:43	0:0	10	0
stmts	81:4	81:35	9	
water	81:4	0:0	10	photometric
op	81:16	0:0	10	=
water	81:18	0:0	10	PHOTOMETRIC_YCBCR
water	81:35	0:0	10	;
else	82:3	83:36	6
stmts	82:8	83:36	7	
if	82:8	83:36	8	(strncmp (optarg ,"cielab" ,6 ) == 0)
cond	82:12	82:44	9	strncmp (optarg ,"cielab" ,6 ) == 0
call	82:12	82:39	10	strncmp
arg	82:20	82:26	11	optarg
water	82:20	0:0	12	optarg
arg	82:28	82:36	11	"cielab"
water	82:28	0:0	12	"cielab"
arg	82:38	82:39	11	6
water	82:38	0:0	12	6
op	82:41	0:0	10	==
water	82:44	0:0	10	0
stmts	83:4	83:36	9	
water	83:4	0:0	10	photometric
op	83:16	0:0	10	=
water	83:18	0:0	10	PHOTOMETRIC_CIELAB
water	83:36	0:0	10	;
else	84:3	85:36	6
stmts	84:8	85:36	7	
if	84:8	85:36	8	(strncmp (optarg ,"icclab" ,6 ) == 0)
cond	84:12	84:44	9	strncmp (optarg ,"icclab" ,6 ) == 0
call	84:12	84:39	10	strncmp
arg	84:20	84:26	11	optarg
water	84:20	0:0	12	optarg
arg	84:28	84:36	11	"icclab"
water	84:28	0:0	12	"icclab"
arg	84:38	84:39	11	6
water	84:38	0:0	12	6
op	84:41	0:0	10	==
water	84:44	0:0	10	0
stmts	85:4	85:36	9	
water	85:4	0:0	10	photometric
op	85:16	0:0	10	=
water	85:18	0:0	10	PHOTOMETRIC_ICCLAB
water	85:36	0:0	10	;
else	86:3	87:36	6
stmts	86:8	87:36	7	
if	86:8	87:36	8	(strncmp (optarg ,"itulab" ,6 ) == 0)
cond	86:12	86:44	9	strncmp (optarg ,"itulab" ,6 ) == 0
call	86:12	86:39	10	strncmp
arg	86:20	86:26	11	optarg
water	86:20	0:0	12	optarg
arg	86:28	86:36	11	"itulab"
water	86:28	0:0	12	"itulab"
arg	86:38	86:39	11	6
water	86:38	0:0	12	6
op	86:41	0:0	10	==
water	86:44	0:0	10	0
stmts	87:4	87:36	9	
water	87:4	0:0	10	photometric
op	87:16	0:0	10	=
water	87:18	0:0	10	PHOTOMETRIC_ITULAB
water	87:36	0:0	10	;
else	88:3	89:40	6
stmts	89:4	89:40	7	
water	89:4	0:0	8	photometric
op	89:16	0:0	8	=
water	89:18	0:0	8	PHOTOMETRIC_MINISBLACK
water	89:40	0:0	8	;
break	90:3	90:8	6	
water	91:2	0:0	6	case
water	91:7	0:0	6	's'
water	91:10	0:0	6	:
water	92:3	0:0	6	swab
op	92:8	0:0	6	=
water	92:10	0:0	6	1
water	92:11	0:0	6	;
break	93:3	93:8	6	
water	94:2	0:0	6	case
water	94:7	0:0	6	'i'
water	94:10	0:0	6	:
water	95:3	0:0	6	if
water	95:6	0:0	6	(
call	95:7	95:33	6	strncmp
arg	95:15	95:21	7	optarg
water	95:15	0:0	8	optarg
arg	95:23	95:30	7	"pixel"
water	95:23	0:0	8	"pixel"
arg	95:32	95:33	7	4
water	95:32	0:0	8	4
op	95:35	0:0	6	==
water	95:38	0:0	6	0
water	95:39	0:0	6	)
water	96:4	0:0	6	interleaving
op	96:17	0:0	6	=
water	96:19	0:0	6	PIXEL
water	96:24	0:0	6	;
else	97:3	98:23	6
stmts	97:8	98:23	7	
if	97:8	98:23	8	(strncmp (optarg ,"band" ,6 ) == 0)
cond	97:13	97:43	9	strncmp (optarg ,"band" ,6 ) == 0
call	97:13	97:38	10	strncmp
arg	97:21	97:27	11	optarg
water	97:21	0:0	12	optarg
arg	97:29	97:35	11	"band"
water	97:29	0:0	12	"band"
arg	97:37	97:38	11	6
water	97:37	0:0	12	6
op	97:40	0:0	10	==
water	97:43	0:0	10	0
stmts	98:4	98:23	9	
water	98:4	0:0	10	interleaving
op	98:17	0:0	10	=
water	98:19	0:0	10	BAND
water	98:23	0:0	10	;
else	99:3	100:20	6
stmts	100:4	100:20	7	
water	100:4	0:0	8	interleaving
op	100:17	0:0	8	=
water	100:19	0:0	8	0
water	100:20	0:0	8	;
break	101:3	101:8	6	
water	102:2	0:0	6	case
water	102:7	0:0	6	'o'
water	102:10	0:0	6	:
water	103:3	0:0	6	outfilename
op	103:15	0:0	6	=
water	103:17	0:0	6	optarg
water	103:23	0:0	6	;
break	104:3	104:8	6	
water	105:2	0:0	6	case
water	105:7	0:0	6	'h'
water	105:10	0:0	6	:
call	106:3	106:9	6	usage
water	106:10	0:0	6	;
label	107:2	107:9	6	default :
break	108:3	108:8	6	
water	109:2	0:0	6	}
water	110:8	0:0	4	}
if	111:8	112:9	2	(argc - optind < 2)
cond	111:12	111:28	3	argc - optind < 2
water	111:12	0:0	4	argc
op	111:17	0:0	4	-
water	111:19	0:0	4	optind
op	111:26	0:0	4	<
water	111:28	0:0	4	2
stmts	112:2	112:9	3	
call	112:2	112:8	4	usage
water	112:9	0:0	4	;
water	113:8	0:0	2	fd
op	113:11	0:0	2	=
call	113:13	113:52	2	open
arg	113:18	113:30	3	argv[optind]
water	113:18	0:0	4	argv
op	113:22	0:0	4	[
water	113:23	0:0	4	optind
op	113:29	0:0	4	]
arg	113:32	113:49	3	O_RDONLY|O_BINARY
water	113:32	0:0	4	O_RDONLY
op	113:40	0:0	4	|
water	113:41	0:0	4	O_BINARY
arg	113:51	113:52	3	0
water	113:51	0:0	4	0
water	113:53	0:0	2	;
if	114:1	118:1	2	(fd < 0)
cond	114:5	114:10	3	fd < 0
water	114:5	0:0	4	fd
op	114:8	0:0	4	<
water	114:10	0:0	4	0
stmts	114:13	118:1	3	
water	114:13	0:0	4	{
call	115:2	116:24	4	fprintf
arg	115:10	115:16	5	stderr
water	115:10	0:0	6	stderr
arg	115:18	115:53	5	"%s: %s: Cannot open input file.\n"
water	115:18	0:0	6	"%s: %s: Cannot open input file.\n"
arg	116:3	116:10	5	argv[0]
water	116:3	0:0	6	argv
op	116:7	0:0	6	[
water	116:8	0:0	6	0
op	116:9	0:0	6	]
arg	116:12	116:24	5	argv[optind]
water	116:12	0:0	6	argv
op	116:16	0:0	6	[
water	116:17	0:0	6	optind
op	116:23	0:0	6	]
water	116:25	0:0	4	;
return	117:2	117:13	4	(-1)
water	117:9	0:0	5	(
op	117:10	0:0	5	-
water	117:11	0:0	5	1
water	117:12	0:0	5	)
water	118:1	0:0	4	}
if	119:1	120:10	2	(guessSize (fd ,dtype ,hdr_size ,nbands ,swab ,& width ,& length ) < 0)
cond	119:5	119:69	3	guessSize (fd ,dtype ,hdr_size ,nbands ,swab ,& width ,& length ) < 0
call	119:5	119:65	4	guessSize
arg	119:15	119:17	5	fd
water	119:15	0:0	6	fd
arg	119:19	119:24	5	dtype
water	119:19	0:0	6	dtype
arg	119:26	119:34	5	hdr_size
water	119:26	0:0	6	hdr_size
arg	119:36	119:42	5	nbands
water	119:36	0:0	6	nbands
arg	119:44	119:48	5	swab
water	119:44	0:0	6	swab
arg	119:50	119:56	5	&width
op	119:50	0:0	6	&
water	119:51	0:0	6	width
arg	119:58	119:65	5	&length
op	119:58	0:0	6	&
water	119:59	0:0	6	length
op	119:67	0:0	4	<
water	119:69	0:0	4	0
stmts	120:2	120:10	3	
return	120:2	120:10	4	1
water	120:9	0:0	5	1
if	121:1	122:30	2	(outfilename == NULL)
cond	121:5	121:20	3	outfilename == NULL
water	121:5	0:0	4	outfilename
op	121:17	0:0	4	==
water	121:20	0:0	4	NULL
stmts	122:2	122:30	3	
water	122:2	0:0	4	outfilename
op	122:14	0:0	4	=
water	122:16	0:0	4	argv
op	122:20	0:0	4	[
water	122:21	0:0	4	optind
op	122:27	0:0	4	+
water	122:28	0:0	4	1
op	122:29	0:0	4	]
water	122:30	0:0	4	;
water	123:1	0:0	2	out
op	123:5	0:0	2	=
call	123:7	123:32	2	TIFFOpen
arg	123:16	123:27	3	outfilename
water	123:16	0:0	4	outfilename
arg	123:29	123:32	3	"w"
water	123:29	0:0	4	"w"
water	123:33	0:0	2	;
if	124:1	128:1	2	(out == NULL)
cond	124:5	124:12	3	out == NULL
water	124:5	0:0	4	out
op	124:9	0:0	4	==
water	124:12	0:0	4	NULL
stmts	124:18	128:1	3	
water	124:18	0:0	4	{
call	125:2	126:23	4	fprintf
arg	125:10	125:16	5	stderr
water	125:10	0:0	6	stderr
arg	125:18	125:58	5	"%s: %s: Cannot open file for output.\n"
water	125:18	0:0	6	"%s: %s: Cannot open file for output.\n"
arg	126:3	126:10	5	argv[0]
water	126:3	0:0	6	argv
op	126:7	0:0	6	[
water	126:8	0:0	6	0
op	126:9	0:0	6	]
arg	126:12	126:23	5	outfilename
water	126:12	0:0	6	outfilename
water	126:24	0:0	4	;
return	127:2	127:13	4	(-1)
water	127:9	0:0	5	(
op	127:10	0:0	5	-
water	127:11	0:0	5	1
water	127:12	0:0	5	)
water	128:1	0:0	4	}
call	129:1	129:44	2	TIFFSetField
arg	129:14	129:17	3	out
water	129:14	0:0	4	out
arg	129:19	129:37	3	TIFFTAG_IMAGEWIDTH
water	129:19	0:0	4	TIFFTAG_IMAGEWIDTH
arg	129:39	129:44	3	width
water	129:39	0:0	4	width
water	129:45	0:0	2	;
call	130:1	130:46	2	TIFFSetField
arg	130:14	130:17	3	out
water	130:14	0:0	4	out
arg	130:19	130:38	3	TIFFTAG_IMAGELENGTH
water	130:19	0:0	4	TIFFTAG_IMAGELENGTH
arg	130:40	130:46	3	length
water	130:40	0:0	4	length
water	130:47	0:0	2	;
call	131:1	131:59	2	TIFFSetField
arg	131:14	131:17	3	out
water	131:14	0:0	4	out
arg	131:19	131:38	3	TIFFTAG_ORIENTATION
water	131:19	0:0	4	TIFFTAG_ORIENTATION
arg	131:40	131:59	3	ORIENTATION_TOPLEFT
water	131:40	0:0	4	ORIENTATION_TOPLEFT
water	131:60	0:0	2	;
call	132:1	132:50	2	TIFFSetField
arg	132:14	132:17	3	out
water	132:14	0:0	4	out
arg	132:19	132:42	3	TIFFTAG_SAMPLESPERPIXEL
water	132:19	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	132:44	132:50	3	nbands
water	132:44	0:0	4	nbands
water	132:51	0:0	2	;
call	133:1	133:51	2	TIFFSetField
arg	133:14	133:17	3	out
water	133:14	0:0	4	out
arg	133:19	133:40	3	TIFFTAG_BITSPERSAMPLE
water	133:19	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	133:42	133:51	3	depth*8
water	133:42	0:0	4	depth
op	133:48	0:0	4	*
water	133:50	0:0	4	8
water	133:52	0:0	2	;
call	134:1	134:47	2	TIFFSetField
arg	134:14	134:17	3	out
water	134:14	0:0	4	out
arg	134:19	134:36	3	TIFFTAG_FILLORDER
water	134:19	0:0	4	TIFFTAG_FILLORDER
arg	134:38	134:47	3	fillorder
water	134:38	0:0	4	fillorder
water	134:48	0:0	2	;
call	135:1	135:47	2	TIFFSetField
arg	135:14	135:17	3	out
water	135:14	0:0	4	out
arg	135:19	135:39	3	TIFFTAG_PLANARCONFIG
water	135:19	0:0	4	TIFFTAG_PLANARCONFIG
arg	135:41	135:47	3	config
water	135:41	0:0	4	config
water	135:48	0:0	2	;
call	136:1	136:51	2	TIFFSetField
arg	136:14	136:17	3	out
water	136:14	0:0	4	out
arg	136:19	136:38	3	TIFFTAG_PHOTOMETRIC
water	136:19	0:0	4	TIFFTAG_PHOTOMETRIC
arg	136:40	136:51	3	photometric
water	136:40	0:0	4	photometric
water	136:52	0:0	2	;
switch	137:1	155:1	2	(dtype)
cond	137:9	137:9	3	dtype
water	137:9	0:0	4	dtype
stmts	137:16	155:1	3	
water	137:16	0:0	4	{
label	138:1	138:15	4	case TIFF_BYTE :
label	139:1	139:16	4	case TIFF_SHORT :
label	140:1	140:15	4	case TIFF_LONG :
call	141:2	141:59	4	TIFFSetField
arg	141:15	141:18	5	out
water	141:15	0:0	6	out
arg	141:20	141:40	5	TIFFTAG_SAMPLEFORMAT
water	141:20	0:0	6	TIFFTAG_SAMPLEFORMAT
arg	141:42	141:59	5	SAMPLEFORMAT_UINT
water	141:42	0:0	6	SAMPLEFORMAT_UINT
water	141:60	0:0	4	;
break	142:2	142:7	4	
label	143:1	143:16	4	case TIFF_SBYTE :
label	144:1	144:17	4	case TIFF_SSHORT :
label	145:1	145:16	4	case TIFF_SLONG :
call	146:2	146:58	4	TIFFSetField
arg	146:15	146:18	5	out
water	146:15	0:0	6	out
arg	146:20	146:40	5	TIFFTAG_SAMPLEFORMAT
water	146:20	0:0	6	TIFFTAG_SAMPLEFORMAT
arg	146:42	146:58	5	SAMPLEFORMAT_INT
water	146:42	0:0	6	SAMPLEFORMAT_INT
water	146:59	0:0	4	;
break	147:2	147:7	4	
label	148:1	148:16	4	case TIFF_FLOAT :
label	149:1	149:17	4	case TIFF_DOUBLE :
call	150:2	150:61	4	TIFFSetField
arg	150:15	150:18	5	out
water	150:15	0:0	6	out
arg	150:20	150:40	5	TIFFTAG_SAMPLEFORMAT
water	150:20	0:0	6	TIFFTAG_SAMPLEFORMAT
arg	150:42	150:61	5	SAMPLEFORMAT_IEEEFP
water	150:42	0:0	6	SAMPLEFORMAT_IEEEFP
water	150:62	0:0	4	;
break	151:2	151:7	4	
label	152:1	152:8	4	default :
call	153:2	153:59	4	TIFFSetField
arg	153:15	153:18	5	out
water	153:15	0:0	6	out
arg	153:20	153:40	5	TIFFTAG_SAMPLEFORMAT
water	153:20	0:0	6	TIFFTAG_SAMPLEFORMAT
arg	153:42	153:59	5	SAMPLEFORMAT_VOID
water	153:42	0:0	6	SAMPLEFORMAT_VOID
water	153:60	0:0	4	;
break	154:2	154:7	4	
water	155:1	0:0	4	}
if	156:1	157:36	2	(compression == ( uint16 ) - 1)
cond	156:5	156:30	3	compression == ( uint16 ) - 1
water	156:5	0:0	4	compression
op	156:17	0:0	4	==
water	156:20	0:0	4	(
water	156:21	0:0	4	uint16
water	156:27	0:0	4	)
op	156:29	0:0	4	-
water	156:30	0:0	4	1
stmts	157:2	157:36	3	
water	157:2	0:0	4	compression
op	157:14	0:0	4	=
water	157:16	0:0	4	COMPRESSION_PACKBITS
water	157:36	0:0	4	;
call	158:1	158:51	2	TIFFSetField
arg	158:14	158:17	3	out
water	158:14	0:0	4	out
arg	158:19	158:38	3	TIFFTAG_COMPRESSION
water	158:19	0:0	4	TIFFTAG_COMPRESSION
arg	158:40	158:51	3	compression
water	158:40	0:0	4	compression
water	158:52	0:0	2	;
switch	159:1	172:1	2	(compression)
cond	159:9	159:9	3	compression
water	159:9	0:0	4	compression
stmts	159:22	172:1	3	
water	159:22	0:0	4	{
label	160:1	160:22	4	case COMPRESSION_JPEG :
if	161:2	163:34	4	(photometric == PHOTOMETRIC_RGB && jpegcolormode == JPEGCOLORMODE_RGB)
cond	161:6	162:26	5	photometric == PHOTOMETRIC_RGB && jpegcolormode == JPEGCOLORMODE_RGB
water	161:6	0:0	6	photometric
op	161:18	0:0	6	==
water	161:21	0:0	6	PHOTOMETRIC_RGB
op	162:6	0:0	6	&&
water	162:9	0:0	6	jpegcolormode
op	162:23	0:0	6	==
water	162:26	0:0	6	JPEGCOLORMODE_RGB
stmts	163:3	163:34	5	
water	163:3	0:0	6	photometric
op	163:15	0:0	6	=
water	163:17	0:0	6	PHOTOMETRIC_YCBCR
water	163:34	0:0	6	;
call	164:2	164:48	4	TIFFSetField
arg	164:15	164:18	5	out
water	164:15	0:0	6	out
arg	164:20	164:39	5	TIFFTAG_JPEGQUALITY
water	164:20	0:0	6	TIFFTAG_JPEGQUALITY
arg	164:41	164:48	5	quality
water	164:41	0:0	6	quality
water	164:49	0:0	4	;
call	165:2	165:56	4	TIFFSetField
arg	165:15	165:18	5	out
water	165:15	0:0	6	out
arg	165:20	165:41	5	TIFFTAG_JPEGCOLORMODE
water	165:20	0:0	6	TIFFTAG_JPEGCOLORMODE
arg	165:43	165:56	5	jpegcolormode
water	165:43	0:0	6	jpegcolormode
water	165:57	0:0	4	;
break	166:2	166:7	4	
label	167:1	167:21	4	case COMPRESSION_LZW :
label	168:1	168:25	4	case COMPRESSION_DEFLATE :
if	169:2	170:50	4	(predictor != 0)
cond	169:6	169:19	5	predictor != 0
water	169:6	0:0	6	predictor
op	169:16	0:0	6	!=
water	169:19	0:0	6	0
stmts	170:3	170:50	5	
call	170:3	170:49	6	TIFFSetField
arg	170:16	170:19	7	out
water	170:16	0:0	8	out
arg	170:21	170:38	7	TIFFTAG_PREDICTOR
water	170:21	0:0	8	TIFFTAG_PREDICTOR
arg	170:40	170:49	7	predictor
water	170:40	0:0	8	predictor
water	170:50	0:0	6	;
break	171:2	171:7	4	
water	172:1	0:0	4	}
switch	173:1	182:1	2	(interleaving)
cond	173:8	173:8	3	interleaving
water	173:8	0:0	4	interleaving
stmts	173:22	182:1	3	
water	173:22	0:0	4	{
label	174:1	174:10	4	case BAND :
water	175:2	0:0	4	linebytes
op	175:12	0:0	4	=
water	175:14	0:0	4	width
op	175:20	0:0	4	*
water	175:22	0:0	4	depth
water	175:27	0:0	4	;
water	176:2	0:0	4	buf
op	176:6	0:0	4	=
water	176:8	0:0	4	(
water	176:9	0:0	4	unsigned
water	176:18	0:0	4	char
op	176:23	0:0	4	*
water	176:24	0:0	4	)
call	176:25	176:46	4	_TIFFmalloc
arg	176:37	176:46	5	linebytes
water	176:37	0:0	6	linebytes
water	176:47	0:0	4	;
break	177:2	177:7	4	
label	178:1	178:11	4	case PIXEL :
label	179:1	179:8	4	default :
water	180:2	0:0	4	linebytes
op	180:12	0:0	4	=
water	180:14	0:0	4	width
op	180:20	0:0	4	*
water	180:22	0:0	4	nbands
op	180:29	0:0	4	*
water	180:31	0:0	4	depth
water	180:36	0:0	4	;
break	181:2	181:7	4	
water	182:1	0:0	4	}
water	183:1	0:0	2	bufsize
op	183:9	0:0	2	=
water	183:11	0:0	2	width
op	183:17	0:0	2	*
water	183:19	0:0	2	nbands
op	183:26	0:0	2	*
water	183:28	0:0	2	depth
water	183:33	0:0	2	;
water	184:1	0:0	2	buf1
op	184:6	0:0	2	=
water	184:8	0:0	2	(
water	184:9	0:0	2	unsigned
water	184:18	0:0	2	char
op	184:23	0:0	2	*
water	184:24	0:0	2	)
call	184:25	184:44	2	_TIFFmalloc
arg	184:37	184:44	3	bufsize
water	184:37	0:0	4	bufsize
water	184:45	0:0	2	;
water	185:1	0:0	2	rowsperstrip
op	185:14	0:0	2	=
call	185:16	185:54	2	TIFFDefaultStripSize
arg	185:37	185:40	3	out
water	185:37	0:0	4	out
arg	185:42	185:54	3	rowsperstrip
water	185:42	0:0	4	rowsperstrip
water	185:55	0:0	2	;
if	186:1	188:1	2	(rowsperstrip > length)
cond	186:5	186:20	3	rowsperstrip > length
water	186:5	0:0	4	rowsperstrip
op	186:18	0:0	4	>
water	186:20	0:0	4	length
stmts	186:28	188:1	3	
water	186:28	0:0	4	{
water	187:2	0:0	4	rowsperstrip
op	187:15	0:0	4	=
water	187:17	0:0	4	length
water	187:23	0:0	4	;
water	188:1	0:0	4	}
call	189:1	189:54	2	TIFFSetField
arg	189:14	189:17	3	out
water	189:14	0:0	4	out
arg	189:19	189:39	3	TIFFTAG_ROWSPERSTRIP
water	189:19	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	189:41	189:54	3	rowsperstrip
water	189:41	0:0	4	rowsperstrip
water	189:55	0:0	2	;
call	190:1	190:29	2	lseek
arg	190:7	190:9	3	fd
water	190:7	0:0	4	fd
arg	190:11	190:19	3	hdr_size
water	190:11	0:0	4	hdr_size
arg	190:21	190:29	3	SEEK_SET
water	190:21	0:0	4	SEEK_SET
water	190:30	0:0	2	;
for	191:1	230:1	2	(row = 0 ;row < length;row ++)
forinit	191:6	191:13	3	row = 0 ;
water	191:6	0:0	4	row
op	191:10	0:0	4	=
water	191:12	0:0	4	0
water	191:13	0:0	4	;
cond	191:15	191:21	3	row < length
water	191:15	0:0	4	row
op	191:19	0:0	4	<
water	191:21	0:0	4	length
forexpr	191:29	191:32	3	row ++
water	191:29	0:0	4	row
op	191:32	0:0	4	++
stmts	191:36	230:1	3	
water	191:36	0:0	4	{
switch	192:2	224:2	4	(interleaving)
cond	192:9	192:9	5	interleaving
water	192:9	0:0	6	interleaving
stmts	192:23	224:2	5	
water	192:23	0:0	6	{
label	193:2	193:11	6	case BAND :
for	194:3	210:3	6	(band = 0 ;band < nbands;band ++)
forinit	194:8	194:16	7	band = 0 ;
water	194:8	0:0	8	band
op	194:13	0:0	8	=
water	194:15	0:0	8	0
water	194:16	0:0	8	;
cond	194:18	194:25	7	band < nbands
water	194:18	0:0	8	band
op	194:23	0:0	8	<
water	194:25	0:0	8	nbands
forexpr	194:33	194:37	7	band ++
water	194:33	0:0	8	band
op	194:37	0:0	8	++
stmts	194:41	210:3	7	
water	194:41	0:0	8	{
call	195:4	197:18	8	lseek
arg	195:10	195:12	9	fd
water	195:10	0:0	10	fd
arg	196:10	196:48	9	hdr_size+(length*band+row)*linebytes
water	196:10	0:0	10	hdr_size
op	196:19	0:0	10	+
water	196:21	0:0	10	(
water	196:22	0:0	10	length
op	196:28	0:0	10	*
water	196:29	0:0	10	band
op	196:33	0:0	10	+
water	196:34	0:0	10	row
water	196:37	0:0	10	)
op	196:38	0:0	10	*
water	196:39	0:0	10	linebytes
arg	197:10	197:18	9	SEEK_SET
water	197:10	0:0	10	SEEK_SET
water	197:19	0:0	8	;
if	198:4	204:4	8	(read (fd ,buf ,linebytes ) < 0)
cond	198:8	198:35	9	read (fd ,buf ,linebytes ) < 0
call	198:8	198:31	10	read
arg	198:13	198:15	11	fd
water	198:13	0:0	12	fd
arg	198:17	198:20	11	buf
water	198:17	0:0	12	buf
arg	198:22	198:31	11	linebytes
water	198:22	0:0	12	linebytes
op	198:33	0:0	10	<
water	198:35	0:0	10	0
stmts	198:38	204:4	9	
water	198:38	0:0	10	{
call	199:5	202:24	10	fprintf
arg	199:13	199:19	11	stderr
water	199:13	0:0	12	stderr
arg	200:5	200:42	11	"%s: %s: scanline %lu: Read error.\n"
water	200:5	0:0	12	"%s: %s: scanline %lu: Read error.\n"
arg	201:5	201:12	11	argv[0]
water	201:5	0:0	12	argv
op	201:9	0:0	12	[
water	201:10	0:0	12	0
op	201:11	0:0	12	]
arg	201:14	201:26	11	argv[optind]
water	201:14	0:0	12	argv
op	201:18	0:0	12	[
water	201:19	0:0	12	optind
op	201:25	0:0	12	]
arg	202:5	202:24	11	(unsignedlong)row
water	202:5	0:0	12	(
water	202:6	0:0	12	unsigned
water	202:15	0:0	12	long
water	202:19	0:0	12	)
water	202:21	0:0	12	row
water	202:25	0:0	10	;
break	203:4	203:9	10	
water	204:4	0:0	10	}
if	205:4	206:43	8	(swab)
cond	205:8	205:8	9	swab
water	205:8	0:0	10	swab
stmts	206:5	206:43	9	
call	206:5	206:42	10	swapBytesInScanline
arg	206:25	206:28	11	buf
water	206:25	0:0	12	buf
arg	206:30	206:35	11	width
water	206:30	0:0	12	width
arg	206:37	206:42	11	dtype
water	206:37	0:0	12	dtype
water	206:43	0:0	10	;
for	207:4	209:37	8	(col = 0 ;col < width;col ++)
forinit	207:9	207:16	9	col = 0 ;
water	207:9	0:0	10	col
op	207:13	0:0	10	=
water	207:15	0:0	10	0
water	207:16	0:0	10	;
cond	207:18	207:24	9	col < width
water	207:18	0:0	10	col
op	207:22	0:0	10	<
water	207:24	0:0	10	width
forexpr	207:31	207:34	9	col ++
water	207:31	0:0	10	col
op	207:34	0:0	10	++
stmts	208:5	209:37	9	
call	208:5	209:36	10	memcpy
arg	208:12	208:42	11	buf1+(col*nbands+band)*depth
water	208:12	0:0	12	buf1
op	208:17	0:0	12	+
water	208:19	0:0	12	(
water	208:20	0:0	12	col
op	208:23	0:0	12	*
water	208:24	0:0	12	nbands
op	208:30	0:0	12	+
water	208:31	0:0	12	band
water	208:35	0:0	12	)
op	208:36	0:0	12	*
water	208:37	0:0	12	depth
arg	209:12	209:29	11	buf+col*depth
water	209:12	0:0	12	buf
op	209:16	0:0	12	+
water	209:18	0:0	12	col
op	209:22	0:0	12	*
water	209:24	0:0	12	depth
arg	209:31	209:36	11	depth
water	209:31	0:0	12	depth
water	209:37	0:0	10	;
water	210:3	0:0	8	}
break	211:3	211:8	6	
label	212:2	212:12	6	case PIXEL :
label	213:2	213:9	6	default :
if	214:3	220:3	6	(read (fd ,buf1 ,bufsize ) < 0)
cond	214:7	214:33	7	read (fd ,buf1 ,bufsize ) < 0
call	214:7	214:29	8	read
arg	214:12	214:14	9	fd
water	214:12	0:0	10	fd
arg	214:16	214:20	9	buf1
water	214:16	0:0	10	buf1
arg	214:22	214:29	9	bufsize
water	214:22	0:0	10	bufsize
op	214:31	0:0	8	<
water	214:33	0:0	8	0
stmts	214:36	220:3	7	
water	214:36	0:0	8	{
call	215:4	218:24	8	fprintf
arg	215:12	215:18	9	stderr
water	215:12	0:0	10	stderr
arg	216:5	216:42	9	"%s: %s: scanline %lu: Read error.\n"
water	216:5	0:0	10	"%s: %s: scanline %lu: Read error.\n"
arg	217:5	217:12	9	argv[0]
water	217:5	0:0	10	argv
op	217:9	0:0	10	[
water	217:10	0:0	10	0
op	217:11	0:0	10	]
arg	217:14	217:26	9	argv[optind]
water	217:14	0:0	10	argv
op	217:18	0:0	10	[
water	217:19	0:0	10	optind
op	217:25	0:0	10	]
arg	218:5	218:24	9	(unsignedlong)row
water	218:5	0:0	10	(
water	218:6	0:0	10	unsigned
water	218:15	0:0	10	long
water	218:19	0:0	10	)
water	218:21	0:0	10	row
water	218:25	0:0	8	;
break	219:4	219:9	8	
water	220:3	0:0	8	}
if	221:3	222:43	6	(swab)
cond	221:7	221:7	7	swab
water	221:7	0:0	8	swab
stmts	222:4	222:43	7	
call	222:4	222:42	8	swapBytesInScanline
arg	222:24	222:28	9	buf1
water	222:24	0:0	10	buf1
arg	222:30	222:35	9	width
water	222:30	0:0	10	width
arg	222:37	222:42	9	dtype
water	222:37	0:0	10	dtype
water	222:43	0:0	8	;
break	223:3	223:8	6	
water	224:2	0:0	6	}
if	225:2	229:2	4	(TIFFWriteScanline (out ,buf1 ,row ,0 ) < 0)
cond	225:6	225:45	5	TIFFWriteScanline (out ,buf1 ,row ,0 ) < 0
call	225:6	225:41	6	TIFFWriteScanline
arg	225:24	225:27	7	out
water	225:24	0:0	8	out
arg	225:29	225:33	7	buf1
water	225:29	0:0	8	buf1
arg	225:35	225:38	7	row
water	225:35	0:0	8	row
arg	225:40	225:41	7	0
water	225:40	0:0	8	0
op	225:43	0:0	6	<
water	225:45	0:0	6	0
stmts	225:48	229:2	5	
water	225:48	0:0	6	{
call	226:3	227:45	6	fprintf
arg	226:11	226:17	7	stderr
water	226:11	0:0	8	stderr
arg	226:19	226:57	7	"%s: %s: scanline %lu: Write error.\n"
water	226:19	0:0	8	"%s: %s: scanline %lu: Write error.\n"
arg	227:4	227:11	7	argv[0]
water	227:4	0:0	8	argv
op	227:8	0:0	8	[
water	227:9	0:0	8	0
op	227:10	0:0	8	]
arg	227:13	227:24	7	outfilename
water	227:13	0:0	8	outfilename
arg	227:26	227:45	7	(unsignedlong)row
water	227:26	0:0	8	(
water	227:27	0:0	8	unsigned
water	227:36	0:0	8	long
water	227:40	0:0	8	)
water	227:42	0:0	8	row
water	227:46	0:0	6	;
break	228:3	228:8	6	
water	229:2	0:0	6	}
water	230:1	0:0	4	}
if	231:1	232:16	2	(buf)
cond	231:5	231:5	3	buf
water	231:5	0:0	4	buf
stmts	232:2	232:16	3	
call	232:2	232:15	4	_TIFFfree
arg	232:12	232:15	5	buf
water	232:12	0:0	6	buf
water	232:16	0:0	4	;
if	233:1	234:17	2	(buf1)
cond	233:5	233:5	3	buf1
water	233:5	0:0	4	buf1
stmts	234:2	234:17	3	
call	234:2	234:16	4	_TIFFfree
arg	234:12	234:16	5	buf1
water	234:12	0:0	6	buf1
water	234:17	0:0	4	;
call	235:1	235:14	2	TIFFClose
arg	235:11	235:14	3	out
water	235:11	0:0	4	out
water	235:15	0:0	2	;
return	236:1	236:11	2	(0)
water	236:8	0:0	3	(
water	236:9	0:0	3	0
water	236:10	0:0	3	)

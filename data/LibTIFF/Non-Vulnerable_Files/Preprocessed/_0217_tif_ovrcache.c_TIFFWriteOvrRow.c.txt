func	2:0	111:0	0	static void	TIFFWriteOvrRow
params	2:27	0:0	1	
param	2:29	2:52	2	TIFFOvrCache *	psCache
stmnts	0:0	109:57	1	
decl	4:4	4:53	2	int	nRet
water	4:13	0:0	2	,
decl	4:4	4:53	2	int	iTileX
water	4:21	0:0	2	,
decl	4:4	4:53	2	int	iTileY
op	4:30	0:0	2	=
water	4:32	0:0	2	psCache
op	4:39	0:0	2	->
water	4:41	0:0	2	nBlockOffset
decl	5:4	5:27	2	unsigned char	*pabyData
decl	6:4	6:25	2	toff_t	nBaseDirOffset
decl	7:4	7:27	2	uint32	RowsInStrip
if	13:4	24:4	2	(TIFFIsByteSwapped (psCache -> hTIFF ))
cond	13:8	13:40	3	TIFFIsByteSwapped (psCache -> hTIFF )
call	13:8	13:40	4	TIFFIsByteSwapped
arg	13:26	13:40	5	psCache->hTIFF
water	13:26	0:0	6	psCache
op	13:33	0:0	6	->
water	13:35	0:0	6	hTIFF
stmts	14:4	24:4	3	
water	14:4	0:0	4	{
if	15:8	17:73	4	(psCache -> nBitsPerPixel == 16)
cond	15:12	15:38	5	psCache -> nBitsPerPixel == 16
water	15:12	0:0	6	psCache
op	15:19	0:0	6	->
water	15:21	0:0	6	nBitsPerPixel
op	15:35	0:0	6	==
water	15:38	0:0	6	16
stmts	16:12	17:73	5	
call	16:12	17:72	6	TIFFSwabArrayOfShort
arg	16:34	16:68	7	(uint16*)psCache->pabyRow1Blocks
water	16:34	0:0	8	(
water	16:35	0:0	8	uint16
op	16:42	0:0	8	*
water	16:43	0:0	8	)
water	16:45	0:0	8	psCache
op	16:52	0:0	8	->
water	16:54	0:0	8	pabyRow1Blocks
arg	17:22	17:72	7	(psCache->nBytesPerBlock*psCache->nSamples)/2
water	17:22	0:0	8	(
water	17:23	0:0	8	psCache
op	17:30	0:0	8	->
water	17:32	0:0	8	nBytesPerBlock
op	17:47	0:0	8	*
water	17:49	0:0	8	psCache
op	17:56	0:0	8	->
water	17:58	0:0	8	nSamples
water	17:66	0:0	8	)
op	17:68	0:0	8	/
water	17:70	0:0	8	2
water	17:73	0:0	6	;
else	18:8	20:76	4
stmts	18:13	20:76	5	
if	18:13	20:76	6	(psCache -> nBitsPerPixel == 32)
cond	18:17	18:43	7	psCache -> nBitsPerPixel == 32
water	18:17	0:0	8	psCache
op	18:24	0:0	8	->
water	18:26	0:0	8	nBitsPerPixel
op	18:40	0:0	8	==
water	18:43	0:0	8	32
stmts	19:12	20:76	7	
call	19:12	20:75	8	TIFFSwabArrayOfLong
arg	19:33	19:67	9	(uint32*)psCache->pabyRow1Blocks
water	19:33	0:0	10	(
water	19:34	0:0	10	uint32
op	19:41	0:0	10	*
water	19:42	0:0	10	)
water	19:44	0:0	10	psCache
op	19:51	0:0	10	->
water	19:53	0:0	10	pabyRow1Blocks
arg	20:25	20:75	9	(psCache->nBytesPerBlock*psCache->nSamples)/4
water	20:25	0:0	10	(
water	20:26	0:0	10	psCache
op	20:33	0:0	10	->
water	20:35	0:0	10	nBytesPerBlock
op	20:50	0:0	10	*
water	20:52	0:0	10	psCache
op	20:59	0:0	10	->
water	20:61	0:0	10	nSamples
water	20:69	0:0	10	)
op	20:71	0:0	10	/
water	20:73	0:0	10	4
water	20:76	0:0	8	;
else	21:8	23:76	4
stmts	21:13	23:76	5	
if	21:13	23:76	6	(psCache -> nBitsPerPixel == 64)
cond	21:17	21:43	7	psCache -> nBitsPerPixel == 64
water	21:17	0:0	8	psCache
op	21:24	0:0	8	->
water	21:26	0:0	8	nBitsPerPixel
op	21:40	0:0	8	==
water	21:43	0:0	8	64
stmts	22:12	23:76	7	
call	22:12	23:75	8	TIFFSwabArrayOfDouble
arg	22:35	22:69	9	(double*)psCache->pabyRow1Blocks
water	22:35	0:0	10	(
water	22:36	0:0	10	double
op	22:43	0:0	10	*
water	22:44	0:0	10	)
water	22:46	0:0	10	psCache
op	22:53	0:0	10	->
water	22:55	0:0	10	pabyRow1Blocks
arg	23:25	23:75	9	(psCache->nBytesPerBlock*psCache->nSamples)/8
water	23:25	0:0	10	(
water	23:26	0:0	10	psCache
op	23:33	0:0	10	->
water	23:35	0:0	10	nBytesPerBlock
op	23:50	0:0	10	*
water	23:52	0:0	10	psCache
op	23:59	0:0	10	->
water	23:61	0:0	10	nSamples
water	23:69	0:0	10	)
op	23:71	0:0	10	/
water	23:73	0:0	10	8
water	23:76	0:0	8	;
water	24:4	0:0	4	}
water	29:4	0:0	2	nBaseDirOffset
op	29:19	0:0	2	=
call	29:21	29:58	2	TIFFCurrentDirOffset
arg	29:43	29:58	3	psCache->hTIFF
water	29:43	0:0	4	psCache
op	29:50	0:0	4	->
water	29:52	0:0	4	hTIFF
water	29:59	0:0	2	;
water	30:4	0:0	2	nRet
op	30:9	0:0	2	=
call	30:11	30:68	2	TIFFSetSubDirectory
arg	30:32	30:46	3	psCache->hTIFF
water	30:32	0:0	4	psCache
op	30:39	0:0	4	->
water	30:41	0:0	4	hTIFF
arg	30:48	30:68	3	psCache->nDirOffset
water	30:48	0:0	4	psCache
op	30:55	0:0	4	->
water	30:57	0:0	4	nDirOffset
water	30:69	0:0	2	;
call	31:4	31:22	2	assert
arg	31:12	31:22	3	nRet==1
water	31:12	0:0	4	nRet
op	31:17	0:0	4	==
water	31:20	0:0	4	1
water	31:23	0:0	2	;
for	35:1	94:1	2	(iTileX = 0 ;iTileX < psCache -> nBlocksPerRow;iTileX ++)
forinit	35:6	35:16	3	iTileX = 0 ;
water	35:6	0:0	4	iTileX
op	35:13	0:0	4	=
water	35:15	0:0	4	0
water	35:16	0:0	4	;
cond	35:18	35:36	3	iTileX < psCache -> nBlocksPerRow
water	35:18	0:0	4	iTileX
op	35:25	0:0	4	<
water	35:27	0:0	4	psCache
op	35:34	0:0	4	->
water	35:36	0:0	4	nBlocksPerRow
forexpr	35:51	35:57	3	iTileX ++
water	35:51	0:0	4	iTileX
op	35:57	0:0	4	++
stmts	36:1	94:1	3	
water	36:1	0:0	4	{
decl	37:2	37:13	4	int	nTileID
if	38:2	67:2	4	(psCache -> nPlanarConfig == PLANARCONFIG_SEPARATE)
cond	38:6	38:32	5	psCache -> nPlanarConfig == PLANARCONFIG_SEPARATE
water	38:6	0:0	6	psCache
op	38:13	0:0	6	->
water	38:15	0:0	6	nPlanarConfig
op	38:29	0:0	6	==
water	38:32	0:0	6	PLANARCONFIG_SEPARATE
stmts	39:2	67:2	5	
water	39:2	0:0	6	{
decl	40:3	40:14	6	int	iSample
for	41:3	66:3	6	(iSample = 0 ;iSample < psCache -> nSamples;iSample ++)
forinit	41:8	41:19	7	iSample = 0 ;
water	41:8	0:0	8	iSample
op	41:16	0:0	8	=
water	41:18	0:0	8	0
water	41:19	0:0	8	;
cond	41:21	41:40	7	iSample < psCache -> nSamples
water	41:21	0:0	8	iSample
op	41:29	0:0	8	<
water	41:31	0:0	8	psCache
op	41:38	0:0	8	->
water	41:40	0:0	8	nSamples
forexpr	41:50	41:57	7	iSample ++
water	41:50	0:0	8	iSample
op	41:57	0:0	8	++
stmts	42:3	66:3	7	
water	42:3	0:0	8	{
water	43:4	0:0	8	pabyData
op	43:13	0:0	8	=
call	43:15	43:65	8	TIFFGetOvrBlock
arg	43:32	43:39	9	psCache
water	43:32	0:0	10	psCache
arg	43:41	43:47	9	iTileX
water	43:41	0:0	10	iTileX
arg	43:49	43:55	9	iTileY
water	43:49	0:0	10	iTileY
arg	43:57	43:65	9	iSample
water	43:57	0:0	10	iSample
water	43:66	0:0	8	;
if	44:4	53:4	8	(psCache -> bTiled)
cond	44:8	44:17	9	psCache -> bTiled
water	44:8	0:0	10	psCache
op	44:15	0:0	10	->
water	44:17	0:0	10	bTiled
stmts	45:4	53:4	9	
water	45:4	0:0	10	{
water	46:5	0:0	10	nTileID
op	46:13	0:0	10	=
call	46:15	49:32	10	TIFFComputeTile
arg	46:32	46:46	11	psCache->hTIFF
water	46:32	0:0	12	psCache
op	46:39	0:0	12	->
water	46:41	0:0	12	hTIFF
arg	47:9	47:38	11	iTileX*psCache->nBlockXSize
water	47:9	0:0	12	iTileX
op	47:16	0:0	12	*
water	47:18	0:0	12	psCache
op	47:25	0:0	12	->
water	47:27	0:0	12	nBlockXSize
arg	48:9	48:38	11	iTileY*psCache->nBlockYSize
water	48:9	0:0	12	iTileY
op	48:16	0:0	12	*
water	48:18	0:0	12	psCache
op	48:25	0:0	12	->
water	48:27	0:0	12	nBlockYSize
arg	49:9	49:10	11	0
water	49:9	0:0	12	0
arg	49:12	49:32	11	(tsample_t)iSample
water	49:12	0:0	12	(
water	49:13	0:0	12	tsample_t
water	49:22	0:0	12	)
water	49:24	0:0	12	iSample
water	49:33	0:0	10	;
call	50:5	52:38	10	TIFFWriteEncodedTile
arg	50:27	50:41	11	psCache->hTIFF
water	50:27	0:0	12	psCache
op	50:34	0:0	12	->
water	50:36	0:0	12	hTIFF
arg	50:43	50:50	11	nTileID
water	50:43	0:0	12	nTileID
arg	51:9	51:17	11	pabyData
water	51:9	0:0	12	pabyData
arg	52:9	52:38	11	TIFFTileSize(psCache->hTIFF)
call	52:9	52:36	12	TIFFTileSize
arg	52:22	52:36	13	psCache->hTIFF
water	52:22	0:0	14	psCache
op	52:29	0:0	14	->
water	52:31	0:0	14	hTIFF
water	52:39	0:0	10	;
water	53:4	0:0	10	}
else	54:4	65:4	8
stmts	55:4	65:4	9	
water	55:4	0:0	10	{
water	56:5	0:0	10	nTileID
op	56:13	0:0	10	=
call	56:15	58:29	10	TIFFComputeStrip
arg	56:33	56:47	11	psCache->hTIFF
water	56:33	0:0	12	psCache
op	56:40	0:0	12	->
water	56:42	0:0	12	hTIFF
arg	57:9	57:38	11	iTileY*psCache->nBlockYSize
water	57:9	0:0	12	iTileY
op	57:16	0:0	12	*
water	57:18	0:0	12	psCache
op	57:25	0:0	12	->
water	57:27	0:0	12	nBlockYSize
arg	58:9	58:29	11	(tsample_t)iSample
water	58:9	0:0	12	(
water	58:10	0:0	12	tsample_t
water	58:19	0:0	12	)
water	58:21	0:0	12	iSample
water	58:30	0:0	10	;
water	59:5	0:0	10	RowsInStrip
op	59:16	0:0	10	=
water	59:17	0:0	10	psCache
op	59:24	0:0	10	->
water	59:26	0:0	10	nBlockYSize
water	59:37	0:0	10	;
if	60:5	61:61	10	(( iTileY + 1 ) * psCache -> nBlockYSize > psCache -> nYSize)
cond	60:9	60:50	11	( iTileY + 1 ) * psCache -> nBlockYSize > psCache -> nYSize
water	60:9	0:0	12	(
water	60:10	0:0	12	iTileY
op	60:16	0:0	12	+
water	60:17	0:0	12	1
water	60:18	0:0	12	)
op	60:19	0:0	12	*
water	60:20	0:0	12	psCache
op	60:27	0:0	12	->
water	60:29	0:0	12	nBlockYSize
op	60:40	0:0	12	>
water	60:41	0:0	12	psCache
op	60:48	0:0	12	->
water	60:50	0:0	12	nYSize
stmts	61:6	61:61	11	
water	61:6	0:0	12	RowsInStrip
op	61:17	0:0	12	=
water	61:18	0:0	12	psCache
op	61:25	0:0	12	->
water	61:27	0:0	12	nYSize
op	61:33	0:0	12	-
water	61:34	0:0	12	iTileY
op	61:40	0:0	12	*
water	61:41	0:0	12	psCache
op	61:48	0:0	12	->
water	61:50	0:0	12	nBlockYSize
water	61:61	0:0	12	;
call	62:5	64:52	10	TIFFWriteEncodedStrip
arg	62:28	62:42	11	psCache->hTIFF
water	62:28	0:0	12	psCache
op	62:35	0:0	12	->
water	62:37	0:0	12	hTIFF
arg	62:44	62:51	11	nTileID
water	62:44	0:0	12	nTileID
arg	63:9	63:17	11	pabyData
water	63:9	0:0	12	pabyData
arg	64:9	64:52	11	TIFFVStripSize(psCache->hTIFF,RowsInStrip)
call	64:9	64:50	12	TIFFVStripSize
arg	64:24	64:38	13	psCache->hTIFF
water	64:24	0:0	14	psCache
op	64:31	0:0	14	->
water	64:33	0:0	14	hTIFF
arg	64:39	64:50	13	RowsInStrip
water	64:39	0:0	14	RowsInStrip
water	64:53	0:0	10	;
water	65:4	0:0	10	}
water	66:3	0:0	8	}
water	67:2	0:0	6	}
else	68:2	93:2	4
stmts	69:2	93:2	5	
water	69:2	0:0	6	{
water	70:3	0:0	6	pabyData
op	70:12	0:0	6	=
call	70:14	70:58	6	TIFFGetOvrBlock
arg	70:31	70:38	7	psCache
water	70:31	0:0	8	psCache
arg	70:40	70:46	7	iTileX
water	70:40	0:0	8	iTileX
arg	70:48	70:54	7	iTileY
water	70:48	0:0	8	iTileY
arg	70:56	70:58	7	0
water	70:56	0:0	8	0
water	70:59	0:0	6	;
if	71:3	80:3	6	(psCache -> bTiled)
cond	71:7	71:16	7	psCache -> bTiled
water	71:7	0:0	8	psCache
op	71:14	0:0	8	->
water	71:16	0:0	8	bTiled
stmts	72:3	80:3	7	
water	72:3	0:0	8	{
water	73:4	0:0	8	nTileID
op	73:12	0:0	8	=
call	73:14	76:13	8	TIFFComputeTile
arg	73:31	73:45	9	psCache->hTIFF
water	73:31	0:0	10	psCache
op	73:38	0:0	10	->
water	73:40	0:0	10	hTIFF
arg	74:8	74:37	9	iTileX*psCache->nBlockXSize
water	74:8	0:0	10	iTileX
op	74:15	0:0	10	*
water	74:17	0:0	10	psCache
op	74:24	0:0	10	->
water	74:26	0:0	10	nBlockXSize
arg	75:8	75:37	9	iTileY*psCache->nBlockYSize
water	75:8	0:0	10	iTileY
op	75:15	0:0	10	*
water	75:17	0:0	10	psCache
op	75:24	0:0	10	->
water	75:26	0:0	10	nBlockYSize
arg	76:8	76:9	9	0
water	76:8	0:0	10	0
arg	76:11	76:13	9	0
water	76:11	0:0	10	0
water	76:14	0:0	8	;
call	77:4	79:37	8	TIFFWriteEncodedTile
arg	77:26	77:40	9	psCache->hTIFF
water	77:26	0:0	10	psCache
op	77:33	0:0	10	->
water	77:35	0:0	10	hTIFF
arg	77:42	77:49	9	nTileID
water	77:42	0:0	10	nTileID
arg	78:8	78:16	9	pabyData
water	78:8	0:0	10	pabyData
arg	79:8	79:37	9	TIFFTileSize(psCache->hTIFF)
call	79:8	79:35	10	TIFFTileSize
arg	79:21	79:35	11	psCache->hTIFF
water	79:21	0:0	12	psCache
op	79:28	0:0	12	->
water	79:30	0:0	12	hTIFF
water	79:38	0:0	8	;
water	80:3	0:0	8	}
else	81:3	92:3	6
stmts	82:3	92:3	7	
water	82:3	0:0	8	{
water	83:4	0:0	8	nTileID
op	83:12	0:0	8	=
call	83:14	85:10	8	TIFFComputeStrip
arg	83:32	83:46	9	psCache->hTIFF
water	83:32	0:0	10	psCache
op	83:39	0:0	10	->
water	83:41	0:0	10	hTIFF
arg	84:8	84:37	9	iTileY*psCache->nBlockYSize
water	84:8	0:0	10	iTileY
op	84:15	0:0	10	*
water	84:17	0:0	10	psCache
op	84:24	0:0	10	->
water	84:26	0:0	10	nBlockYSize
arg	85:8	85:10	9	0
water	85:8	0:0	10	0
water	85:11	0:0	8	;
water	86:4	0:0	8	RowsInStrip
op	86:15	0:0	8	=
water	86:16	0:0	8	psCache
op	86:23	0:0	8	->
water	86:25	0:0	8	nBlockYSize
water	86:36	0:0	8	;
if	87:4	88:60	8	(( iTileY + 1 ) * psCache -> nBlockYSize > psCache -> nYSize)
cond	87:8	87:49	9	( iTileY + 1 ) * psCache -> nBlockYSize > psCache -> nYSize
water	87:8	0:0	10	(
water	87:9	0:0	10	iTileY
op	87:15	0:0	10	+
water	87:16	0:0	10	1
water	87:17	0:0	10	)
op	87:18	0:0	10	*
water	87:19	0:0	10	psCache
op	87:26	0:0	10	->
water	87:28	0:0	10	nBlockYSize
op	87:39	0:0	10	>
water	87:40	0:0	10	psCache
op	87:47	0:0	10	->
water	87:49	0:0	10	nYSize
stmts	88:5	88:60	9	
water	88:5	0:0	10	RowsInStrip
op	88:16	0:0	10	=
water	88:17	0:0	10	psCache
op	88:24	0:0	10	->
water	88:26	0:0	10	nYSize
op	88:32	0:0	10	-
water	88:33	0:0	10	iTileY
op	88:39	0:0	10	*
water	88:40	0:0	10	psCache
op	88:47	0:0	10	->
water	88:49	0:0	10	nBlockYSize
water	88:60	0:0	10	;
call	89:4	91:51	8	TIFFWriteEncodedStrip
arg	89:27	89:41	9	psCache->hTIFF
water	89:27	0:0	10	psCache
op	89:34	0:0	10	->
water	89:36	0:0	10	hTIFF
arg	89:43	89:50	9	nTileID
water	89:43	0:0	10	nTileID
arg	90:8	90:16	9	pabyData
water	90:8	0:0	10	pabyData
arg	91:8	91:51	9	TIFFVStripSize(psCache->hTIFF,RowsInStrip)
call	91:8	91:49	10	TIFFVStripSize
arg	91:23	91:37	11	psCache->hTIFF
water	91:23	0:0	12	psCache
op	91:30	0:0	12	->
water	91:32	0:0	12	hTIFF
arg	91:38	91:49	11	RowsInStrip
water	91:38	0:0	12	RowsInStrip
water	91:52	0:0	8	;
water	92:3	0:0	8	}
water	93:2	0:0	6	}
water	94:1	0:0	4	}
water	99:4	0:0	2	pabyData
op	99:13	0:0	2	=
water	99:15	0:0	2	psCache
op	99:22	0:0	2	->
water	99:24	0:0	2	pabyRow1Blocks
water	99:38	0:0	2	;
water	100:4	0:0	2	psCache
op	100:11	0:0	2	->
water	100:13	0:0	2	pabyRow1Blocks
op	100:28	0:0	2	=
water	100:30	0:0	2	psCache
op	100:37	0:0	2	->
water	100:39	0:0	2	pabyRow2Blocks
water	100:53	0:0	2	;
water	101:4	0:0	2	psCache
op	101:11	0:0	2	->
water	101:13	0:0	2	pabyRow2Blocks
op	101:28	0:0	2	=
water	101:30	0:0	2	pabyData
water	101:38	0:0	2	;
call	102:4	102:52	2	_TIFFmemset
arg	102:17	102:25	3	pabyData
water	102:17	0:0	4	pabyData
arg	102:27	102:28	3	0
water	102:27	0:0	4	0
arg	102:30	102:52	3	psCache->nBytesPerRow
water	102:30	0:0	4	psCache
op	102:37	0:0	4	->
water	102:39	0:0	4	nBytesPerRow
water	102:53	0:0	2	;
water	103:4	0:0	2	psCache
op	103:11	0:0	2	->
water	103:13	0:0	2	nBlockOffset
op	103:25	0:0	2	++
water	103:27	0:0	2	;
call	107:4	107:30	2	TIFFFlush
arg	107:15	107:30	3	psCache->hTIFF
water	107:15	0:0	4	psCache
op	107:22	0:0	4	->
water	107:24	0:0	4	hTIFF
water	107:31	0:0	2	;
call	109:4	109:56	2	TIFFSetSubDirectory
arg	109:25	109:39	3	psCache->hTIFF
water	109:25	0:0	4	psCache
op	109:32	0:0	4	->
water	109:34	0:0	4	hTIFF
arg	109:41	109:56	3	nBaseDirOffset
water	109:41	0:0	4	nBaseDirOffset
water	109:57	0:0	2	;

func	1:0	26:0	0	static int	processCompressOptions
params	2:22	0:0	1	
param	2:23	2:32	2	char *	opt
stmnts	4:1	25:11	1	
if	4:1	5:32	2	(streq (opt ,"none" ))
cond	4:5	4:22	3	streq (opt ,"none" )
call	4:5	4:22	4	streq
arg	4:11	4:14	5	opt
water	4:11	0:0	6	opt
arg	4:16	4:22	5	"none"
water	4:16	0:0	6	"none"
stmts	5:2	5:32	3	
water	5:2	0:0	4	compression
op	5:14	0:0	4	=
water	5:16	0:0	4	COMPRESSION_NONE
water	5:32	0:0	4	;
else	6:1	7:36	2
stmts	6:6	7:36	3	
if	6:6	7:36	4	(streq (opt ,"packbits" ))
cond	6:10	6:31	5	streq (opt ,"packbits" )
call	6:10	6:31	6	streq
arg	6:16	6:19	7	opt
water	6:16	0:0	8	opt
arg	6:21	6:31	7	"packbits"
water	6:21	0:0	8	"packbits"
stmts	7:2	7:36	5	
water	7:2	0:0	6	compression
op	7:14	0:0	6	=
water	7:16	0:0	6	COMPRESSION_PACKBITS
water	7:36	0:0	6	;
else	8:1	11:1	2
stmts	8:6	11:1	3	
if	8:6	11:1	4	(strneq (opt ,"g3" ,2 ))
cond	8:10	8:29	5	strneq (opt ,"g3" ,2 )
call	8:10	8:29	6	strneq
arg	8:17	8:20	7	opt
water	8:17	0:0	8	opt
arg	8:22	8:26	7	"g3"
water	8:22	0:0	8	"g3"
arg	8:28	8:29	7	2
water	8:28	0:0	8	2
stmts	8:32	11:1	5	
water	8:32	0:0	6	{
call	9:2	9:22	6	processG3Options
arg	9:19	9:22	7	opt
water	9:19	0:0	8	opt
water	9:23	0:0	6	;
water	10:2	0:0	6	compression
op	10:14	0:0	6	=
water	10:16	0:0	6	COMPRESSION_CCITTFAX3
water	10:37	0:0	6	;
water	11:1	0:0	6	}
else	11:3	12:37	2
stmts	11:8	12:37	3	
if	11:8	12:37	4	(streq (opt ,"g4" ))
cond	11:12	11:27	5	streq (opt ,"g4" )
call	11:12	11:27	6	streq
arg	11:18	11:21	7	opt
water	11:18	0:0	8	opt
arg	11:23	11:27	7	"g4"
water	11:23	0:0	8	"g4"
stmts	12:2	12:37	5	
water	12:2	0:0	6	compression
op	12:14	0:0	6	=
water	12:16	0:0	6	COMPRESSION_CCITTFAX4
water	12:37	0:0	6	;
else	13:1	18:1	2
stmts	13:6	18:1	3	
if	13:6	18:1	4	(strneq (opt ,"lzw" ,3 ))
cond	13:10	13:30	5	strneq (opt ,"lzw" ,3 )
call	13:10	13:30	6	strneq
arg	13:17	13:20	7	opt
water	13:17	0:0	8	opt
arg	13:22	13:27	7	"lzw"
water	13:22	0:0	8	"lzw"
arg	13:29	13:30	7	3
water	13:29	0:0	8	3
stmts	13:33	18:1	5	
water	13:33	0:0	6	{
decl	14:2	14:29	6	char	*cp
op	14:11	0:0	6	=
call	14:13	14:28	7	strchr
arg	14:20	14:23	8	opt
water	14:20	0:0	9	opt
arg	14:25	14:28	8	':'
water	14:25	0:0	9	':'
if	15:2	16:25	6	(cp)
cond	15:6	15:6	7	cp
water	15:6	0:0	8	cp
stmts	16:3	16:25	7	
water	16:3	0:0	8	predictor
op	16:13	0:0	8	=
call	16:15	16:24	8	atoi
arg	16:20	16:24	9	cp+1
water	16:20	0:0	10	cp
op	16:22	0:0	10	+
water	16:23	0:0	10	1
water	16:25	0:0	8	;
water	17:2	0:0	6	compression
op	17:14	0:0	6	=
water	17:16	0:0	6	COMPRESSION_LZW
water	17:31	0:0	6	;
water	18:1	0:0	6	}
else	18:3	23:1	2
stmts	18:8	23:1	3	
if	18:8	23:1	4	(strneq (opt ,"zip" ,3 ))
cond	18:12	18:32	5	strneq (opt ,"zip" ,3 )
call	18:12	18:32	6	strneq
arg	18:19	18:22	7	opt
water	18:19	0:0	8	opt
arg	18:24	18:29	7	"zip"
water	18:24	0:0	8	"zip"
arg	18:31	18:32	7	3
water	18:31	0:0	8	3
stmts	18:35	23:1	5	
water	18:35	0:0	6	{
decl	19:2	19:29	6	char	*cp
op	19:11	0:0	6	=
call	19:13	19:28	7	strchr
arg	19:20	19:23	8	opt
water	19:20	0:0	9	opt
arg	19:25	19:28	8	':'
water	19:25	0:0	9	':'
if	20:2	21:25	6	(cp)
cond	20:6	20:6	7	cp
water	20:6	0:0	8	cp
stmts	21:3	21:25	7	
water	21:3	0:0	8	predictor
op	21:13	0:0	8	=
call	21:15	21:24	8	atoi
arg	21:20	21:24	9	cp+1
water	21:20	0:0	10	cp
op	21:22	0:0	10	+
water	21:23	0:0	10	1
water	21:25	0:0	8	;
water	22:2	0:0	6	compression
op	22:14	0:0	6	=
water	22:16	0:0	6	COMPRESSION_DEFLATE
water	22:35	0:0	6	;
water	23:1	0:0	6	}
else	23:3	24:12	2
stmts	24:2	24:12	3	
return	24:2	24:12	4	(0)
water	24:9	0:0	5	(
water	24:10	0:0	5	0
water	24:11	0:0	5	)
return	25:1	25:11	2	(1)
water	25:8	0:0	3	(
water	25:9	0:0	3	1
water	25:10	0:0	3	)

func	1:0	44:0	0	static int	Fax3DecodeRLE
params	2:13	0:0	1	
param	2:14	2:23	2	TIFF *	tif
param	2:25	2:37	2	tidata_t	buf
param	2:39	2:50	2	tsize_t	occ
param	2:52	2:63	2	tsample_t	s
stmnts	4:1	43:11	1	
call	4:1	4:39	2	DECLARE_STATE
arg	4:15	4:18	3	tif
water	4:15	0:0	4	tif
arg	4:20	4:22	3	sp
water	4:20	0:0	4	sp
arg	4:24	4:39	3	"Fax3DecodeRLE"
water	4:24	0:0	4	"Fax3DecodeRLE"
water	4:40	0:0	2	;
decl	5:1	5:22	2	int	mode
op	5:10	0:0	2	=
water	5:12	0:0	2	sp
op	5:14	0:0	2	->
water	5:16	0:0	2	b
op	5:17	0:0	2	.
water	5:18	0:0	2	mode
decl	6:8	6:20	2	int	line
op	6:17	0:0	2	=
water	6:19	0:0	2	0
water	7:1	0:0	2	(
water	7:2	0:0	2	void
water	7:6	0:0	2	)
water	7:8	0:0	2	s
water	7:9	0:0	2	;
call	8:1	8:20	2	CACHE_STATE
arg	8:13	8:16	3	tif
water	8:13	0:0	4	tif
arg	8:18	8:20	3	sp
water	8:18	0:0	4	sp
water	8:21	0:0	2	;
water	9:1	0:0	2	thisrun
op	9:9	0:0	2	=
water	9:11	0:0	2	sp
op	9:13	0:0	2	->
water	9:15	0:0	2	curruns
water	9:22	0:0	2	;
while	10:1	41:1	2	(( long ) occ > 0)
cond	10:8	10:20	3	( long ) occ > 0
water	10:8	0:0	4	(
water	10:9	0:0	4	long
water	10:13	0:0	4	)
water	10:14	0:0	4	occ
op	10:18	0:0	4	>
water	10:20	0:0	4	0
stmts	10:23	41:1	3	
water	10:23	0:0	4	{
water	11:2	0:0	4	a0
op	11:5	0:0	4	=
water	11:7	0:0	4	0
water	11:8	0:0	4	;
water	12:2	0:0	4	RunLength
op	12:12	0:0	4	=
water	12:14	0:0	4	0
water	12:15	0:0	4	;
water	13:2	0:0	4	pa
op	13:5	0:0	4	=
water	13:7	0:0	4	thisrun
water	13:14	0:0	4	;
call	15:2	15:61	4	printf
arg	15:9	15:42	5	"\nBitAcc=%08X, BitsAvail = %d\n"
water	15:9	0:0	6	"\nBitAcc=%08X, BitsAvail = %d\n"
arg	15:44	15:50	5	BitAcc
water	15:44	0:0	6	BitAcc
arg	15:52	15:61	5	BitsAvail
water	15:52	0:0	6	BitsAvail
water	15:62	0:0	4	;
call	16:2	16:50	4	printf
arg	16:9	16:36	5	"-------------------- %d\n"
water	16:9	0:0	6	"-------------------- %d\n"
arg	16:38	16:50	5	tif->tif_row
water	16:38	0:0	6	tif
op	16:41	0:0	6	->
water	16:43	0:0	6	tif_row
water	16:51	0:0	4	;
call	17:2	17:15	4	fflush
arg	17:9	17:15	5	stdout
water	17:9	0:0	6	stdout
water	17:16	0:0	4	;
call	19:2	19:17	4	EXPAND1D
arg	19:11	19:17	5	EOFRLE
water	19:11	0:0	6	EOFRLE
water	19:18	0:0	4	;
call	20:2	20:37	4	(*sp->fill)
arg	20:14	20:17	5	buf
water	20:14	0:0	6	buf
arg	20:19	20:26	5	thisrun
water	20:19	0:0	6	thisrun
arg	20:28	20:30	5	pa
water	20:28	0:0	6	pa
arg	20:32	20:37	5	lastx
water	20:32	0:0	6	lastx
water	20:38	0:0	4	;
if	24:2	27:2	4	(mode & FAXMODE_BYTEALIGN)
cond	24:6	24:13	5	mode & FAXMODE_BYTEALIGN
water	24:6	0:0	6	mode
op	24:11	0:0	6	&
water	24:13	0:0	6	FAXMODE_BYTEALIGN
stmts	24:32	27:2	5	
water	24:32	0:0	6	{
decl	25:3	25:39	6	int	n
op	25:9	0:0	6	=
water	25:11	0:0	6	BitsAvail
op	25:21	0:0	6	-
water	25:23	0:0	6	(
water	25:24	0:0	6	BitsAvail
op	25:34	0:0	6	&
op	25:35	0:0	6	~
water	25:37	0:0	6	7
water	25:38	0:0	6	)
call	26:3	26:12	6	ClrBits
arg	26:11	26:12	7	n
water	26:11	0:0	8	n
water	26:13	0:0	6	;
water	27:2	0:0	6	}
else	27:4	32:2	4
stmts	27:9	32:2	5	
if	27:9	32:2	6	(mode & FAXMODE_WORDALIGN)
cond	27:13	27:20	7	mode & FAXMODE_WORDALIGN
water	27:13	0:0	8	mode
op	27:18	0:0	8	&
water	27:20	0:0	8	FAXMODE_WORDALIGN
stmts	27:39	32:2	7	
water	27:39	0:0	8	{
decl	28:3	28:40	8	int	n
op	28:9	0:0	8	=
water	28:11	0:0	8	BitsAvail
op	28:21	0:0	8	-
water	28:23	0:0	8	(
water	28:24	0:0	8	BitsAvail
op	28:34	0:0	8	&
op	28:35	0:0	8	~
water	28:37	0:0	8	15
water	28:39	0:0	8	)
call	29:3	29:12	8	ClrBits
arg	29:11	29:12	9	n
water	29:11	0:0	10	n
water	29:13	0:0	8	;
if	30:3	31:11	8	(BitsAvail == 0 && !isAligned (cp ,uint16 ))
cond	30:7	30:46	9	BitsAvail == 0 && !isAligned (cp ,uint16 )
water	30:7	0:0	10	BitsAvail
op	30:17	0:0	10	==
water	30:20	0:0	10	0
op	30:22	0:0	10	&&
op	30:25	0:0	10	!
call	30:26	30:46	10	isAligned
arg	30:36	30:38	11	cp
water	30:36	0:0	12	cp
arg	30:40	30:46	11	uint16
water	30:40	0:0	12	uint16
stmts	31:7	31:11	9	
water	31:7	0:0	10	cp
op	31:9	0:0	10	++
water	31:11	0:0	10	;
water	32:2	0:0	8	}
water	33:2	0:0	4	buf
op	33:6	0:0	4	+=
water	33:9	0:0	4	sp
op	33:11	0:0	4	->
water	33:13	0:0	4	b
op	33:14	0:0	4	.
water	33:15	0:0	4	rowbytes
water	33:23	0:0	4	;
water	34:2	0:0	4	occ
op	34:6	0:0	4	-=
water	34:9	0:0	4	sp
op	34:11	0:0	4	->
water	34:13	0:0	4	b
op	34:14	0:0	4	.
water	34:15	0:0	4	rowbytes
water	34:23	0:0	4	;
water	35:16	0:0	4	line
op	35:20	0:0	4	++
water	35:22	0:0	4	;
continue	36:2	36:10	4	
label	37:1	37:7	4	EOFRLE :
call	38:2	38:37	4	(*sp->fill)
arg	38:14	38:17	5	buf
water	38:14	0:0	6	buf
arg	38:19	38:26	5	thisrun
water	38:19	0:0	6	thisrun
arg	38:28	38:30	5	pa
water	38:28	0:0	6	pa
arg	38:32	38:37	5	lastx
water	38:32	0:0	6	lastx
water	38:38	0:0	4	;
call	39:2	39:23	4	UNCACHE_STATE
arg	39:16	39:19	5	tif
water	39:16	0:0	6	tif
arg	39:21	39:23	5	sp
water	39:21	0:0	6	sp
water	39:24	0:0	4	;
return	40:2	40:13	4	(-1)
water	40:9	0:0	5	(
op	40:10	0:0	5	-
water	40:11	0:0	5	1
water	40:12	0:0	5	)
water	41:1	0:0	4	}
call	42:1	42:22	2	UNCACHE_STATE
arg	42:15	42:18	3	tif
water	42:15	0:0	4	tif
arg	42:20	42:22	3	sp
water	42:20	0:0	4	sp
water	42:23	0:0	2	;
return	43:1	43:11	2	(1)
water	43:8	0:0	3	(
water	43:9	0:0	3	1
water	43:10	0:0	3	)

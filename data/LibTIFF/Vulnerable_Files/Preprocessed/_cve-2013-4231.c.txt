func	2:0	56:0	0	int	readraster
params	3:10	0:0	1	
param	3:11	3:15	2	void
stmnts	0:0	55:17	1	
decl	5:4	5:32	2	unsigned char	*fill
op	5:24	0:0	2	=
water	5:26	0:0	2	raster
decl	6:4	6:26	2	unsigned char	buf[255]
water	7:4	0:0	2	register
water	7:13	0:0	2	int
water	7:17	0:0	2	bits
op	7:21	0:0	2	=
water	7:22	0:0	2	0
water	7:23	0:0	2	;
water	8:4	0:0	2	register
water	8:13	0:0	2	unsigned
water	8:22	0:0	2	long
water	8:27	0:0	2	datum
op	8:32	0:0	2	=
water	8:33	0:0	2	0
water	8:34	0:0	2	;
water	9:4	0:0	2	register
water	9:13	0:0	2	unsigned
water	9:22	0:0	2	char
op	9:27	0:0	2	*
water	9:28	0:0	2	ch
water	9:30	0:0	2	;
water	10:4	0:0	2	register
water	10:13	0:0	2	int
water	10:17	0:0	2	count
water	10:22	0:0	2	,
water	10:24	0:0	2	code
water	10:28	0:0	2	;
decl	11:4	11:18	2	int	status
op	11:15	0:0	2	=
water	11:17	0:0	2	1
water	13:4	0:0	2	datasize
op	13:13	0:0	2	=
call	13:15	13:26	2	getc
arg	13:20	13:26	3	infile
water	13:20	0:0	4	infile
water	13:27	0:0	2	;
water	14:4	0:0	2	clear
op	14:10	0:0	2	=
water	14:12	0:0	2	1
op	14:14	0:0	2	<<
water	14:17	0:0	2	datasize
water	14:25	0:0	2	;
water	15:4	0:0	2	eoi
op	15:8	0:0	2	=
water	15:10	0:0	2	clear
op	15:16	0:0	2	+
water	15:18	0:0	2	1
water	15:19	0:0	2	;
water	16:4	0:0	2	avail
op	16:10	0:0	2	=
water	16:12	0:0	2	clear
op	16:18	0:0	2	+
water	16:20	0:0	2	2
water	16:21	0:0	2	;
water	17:4	0:0	2	oldcode
op	17:12	0:0	2	=
op	17:14	0:0	2	-
water	17:15	0:0	2	1
water	17:16	0:0	2	;
water	18:4	0:0	2	codesize
op	18:13	0:0	2	=
water	18:15	0:0	2	datasize
op	18:24	0:0	2	+
water	18:26	0:0	2	1
water	18:27	0:0	2	;
water	19:4	0:0	2	codemask
op	19:13	0:0	2	=
water	19:15	0:0	2	(
water	19:16	0:0	2	1
op	19:18	0:0	2	<<
water	19:21	0:0	2	codesize
water	19:29	0:0	2	)
op	19:31	0:0	2	-
water	19:33	0:0	2	1
water	19:34	0:0	2	;
for	20:4	23:4	2	(code = 0 ;code < clear;code ++)
forinit	20:9	20:17	3	code = 0 ;
water	20:9	0:0	4	code
op	20:14	0:0	4	=
water	20:16	0:0	4	0
water	20:17	0:0	4	;
cond	20:19	20:26	3	code < clear
water	20:19	0:0	4	code
op	20:24	0:0	4	<
water	20:26	0:0	4	clear
forexpr	20:33	20:37	3	code ++
water	20:33	0:0	4	code
op	20:37	0:0	4	++
stmts	20:41	23:4	3	
water	20:41	0:0	4	{
water	21:1	0:0	4	prefix
op	21:7	0:0	4	[
water	21:8	0:0	4	code
op	21:12	0:0	4	]
op	21:14	0:0	4	=
water	21:16	0:0	4	0
water	21:17	0:0	4	;
water	22:1	0:0	4	suffix
op	22:7	0:0	4	[
water	22:8	0:0	4	code
op	22:12	0:0	4	]
op	22:14	0:0	4	=
water	22:16	0:0	4	code
water	22:20	0:0	4	;
water	23:4	0:0	4	}
water	24:4	0:0	2	stackp
op	24:11	0:0	2	=
water	24:13	0:0	2	stack
water	24:18	0:0	2	;
for	25:4	47:4	2	(count =getc (infile ) ;count > 0;count =getc (infile ))
forinit	25:9	25:29	3	count =getc (infile ) ;
water	25:9	0:0	4	count
op	25:15	0:0	4	=
call	25:17	25:28	4	getc
arg	25:22	25:28	5	infile
water	25:22	0:0	6	infile
water	25:29	0:0	4	;
cond	25:31	25:39	3	count > 0
water	25:31	0:0	4	count
op	25:37	0:0	4	>
water	25:39	0:0	4	0
forexpr	25:42	25:61	3	count =getc (infile )
water	25:42	0:0	4	count
op	25:48	0:0	4	=
call	25:50	25:61	4	getc
arg	25:55	25:61	5	infile
water	25:55	0:0	6	infile
stmts	25:64	47:4	3	
water	25:64	0:0	4	{
call	26:1	26:25	4	fread
arg	26:7	26:10	5	buf
water	26:7	0:0	6	buf
arg	26:11	26:12	5	1
water	26:11	0:0	6	1
arg	26:13	26:18	5	count
water	26:13	0:0	6	count
arg	26:19	26:25	5	infile
water	26:19	0:0	6	infile
water	26:26	0:0	4	;
for	27:1	42:1	4	(ch = buf ;count -- > 0;ch ++)
forinit	27:6	27:12	5	ch = buf ;
water	27:6	0:0	6	ch
op	27:8	0:0	6	=
water	27:9	0:0	6	buf
water	27:12	0:0	6	;
cond	27:14	27:24	5	count -- > 0
water	27:14	0:0	6	count
op	27:19	0:0	6	--
op	27:22	0:0	6	>
water	27:24	0:0	6	0
forexpr	27:27	27:29	5	ch ++
water	27:27	0:0	6	ch
op	27:29	0:0	6	++
stmts	27:33	42:1	5	
water	27:33	0:0	6	{
water	28:5	0:0	6	datum
op	28:11	0:0	6	+=
water	28:14	0:0	6	(
water	28:15	0:0	6	unsigned
water	28:24	0:0	6	long
water	28:28	0:0	6	)
op	28:30	0:0	6	*
water	28:31	0:0	6	ch
op	28:34	0:0	6	<<
water	28:37	0:0	6	bits
water	28:41	0:0	6	;
water	29:5	0:0	6	bits
op	29:10	0:0	6	+=
water	29:13	0:0	6	8
water	29:14	0:0	6	;
while	30:5	41:5	6	(bits >= codesize)
cond	30:12	30:20	7	bits >= codesize
water	30:12	0:0	8	bits
op	30:17	0:0	8	>=
water	30:20	0:0	8	codesize
stmts	30:30	41:5	7	
water	30:30	0:0	8	{
water	31:2	0:0	8	code
op	31:7	0:0	8	=
water	31:9	0:0	8	datum
op	31:15	0:0	8	&
water	31:17	0:0	8	codemask
water	31:25	0:0	8	;
water	32:2	0:0	8	datum
op	32:8	0:0	8	>>=
water	32:12	0:0	8	codesize
water	32:20	0:0	8	;
water	33:2	0:0	8	bits
op	33:7	0:0	8	-=
water	33:10	0:0	8	codesize
water	33:18	0:0	8	;
if	34:2	36:2	8	(code == eoi)
cond	34:6	34:14	9	code == eoi
water	34:6	0:0	10	code
op	34:11	0:0	10	==
water	34:14	0:0	10	eoi
stmts	34:19	36:2	9	
water	34:19	0:0	10	{
goto	35:6	35:19	10	exitloop
water	35:11	0:0	11	exitloop
water	36:2	0:0	10	}
if	37:2	40:2	8	(!process (code ,& fill ))
cond	37:6	37:26	9	!process (code ,& fill )
op	37:6	0:0	10	!
call	37:7	37:26	10	process
arg	37:15	37:19	11	code
water	37:15	0:0	12	code
arg	37:21	37:26	11	&fill
op	37:21	0:0	12	&
water	37:22	0:0	12	fill
stmts	37:29	40:2	9	
water	37:29	0:0	10	{
water	38:6	0:0	10	status
op	38:13	0:0	10	=
water	38:15	0:0	10	0
water	38:16	0:0	10	;
goto	39:6	39:19	10	exitloop
water	39:11	0:0	11	exitloop
water	40:2	0:0	10	}
water	41:5	0:0	8	}
water	42:1	0:0	6	}
if	43:1	46:1	4	(fill >= raster + width * height)
cond	43:5	43:28	5	fill >= raster + width * height
water	43:5	0:0	6	fill
op	43:10	0:0	6	>=
water	43:13	0:0	6	raster
op	43:20	0:0	6	+
water	43:22	0:0	6	width
op	43:27	0:0	6	*
water	43:28	0:0	6	height
stmts	43:36	46:1	5	
water	43:36	0:0	6	{
call	44:5	44:52	6	fprintf
arg	44:13	44:19	7	stderr
water	44:13	0:0	8	stderr
arg	44:21	44:52	7	"raster full before eoi code\n"
water	44:21	0:0	8	"raster full before eoi code\n"
water	44:53	0:0	6	;
break	45:5	45:10	6	
water	46:1	0:0	6	}
water	47:4	0:0	4	}
label	48:0	48:8	2	exitloop :
if	49:4	54:4	2	(fill != raster + width * height)
cond	49:8	49:31	3	fill != raster + width * height
water	49:8	0:0	4	fill
op	49:13	0:0	4	!=
water	49:16	0:0	4	raster
op	49:23	0:0	4	+
water	49:25	0:0	4	width
op	49:30	0:0	4	*
water	49:31	0:0	4	height
stmts	49:40	54:4	3	
water	49:40	0:0	4	{
call	50:1	51:32	4	fprintf
arg	50:9	50:15	5	stderr
water	50:9	0:0	6	stderr
arg	50:17	50:57	5	"warning: wrong rastersize: %ld bytes\n"
water	50:17	0:0	6	"warning: wrong rastersize: %ld bytes\n"
arg	51:12	51:32	5	(long)(fill-raster)
call	51:12	51:31	6	(long)
arg	51:20	51:31	7	fill-raster
water	51:20	0:0	8	fill
op	51:24	0:0	8	-
water	51:25	0:0	8	raster
water	51:33	0:0	4	;
call	52:1	53:31	4	fprintf
arg	52:9	52:15	5	stderr
water	52:9	0:0	6	stderr
arg	52:17	52:50	5	"         instead of %ld bytes\n"
water	52:17	0:0	6	"         instead of %ld bytes\n"
arg	53:12	53:31	5	(long)width*height
water	53:12	0:0	6	(
water	53:13	0:0	6	long
water	53:17	0:0	6	)
water	53:19	0:0	6	width
op	53:24	0:0	6	*
water	53:25	0:0	6	height
water	53:32	0:0	4	;
water	54:4	0:0	4	}
return	55:4	55:17	2	status
water	55:11	0:0	3	status

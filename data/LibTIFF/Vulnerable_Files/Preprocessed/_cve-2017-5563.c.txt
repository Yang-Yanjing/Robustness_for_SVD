func	2:0	163:0	0	static int	LZWEncode
params	3:9	0:0	1	
param	3:10	3:19	2	TIFF *	tif
param	3:21	3:30	2	uint8 *	bp
param	3:32	3:43	2	tmsize_t	cc
param	3:45	3:53	2	uint16	s
stmnts	5:1	162:11	1	
water	5:1	0:0	2	register
water	5:10	0:0	2	LZWCodecState
op	5:24	0:0	2	*
water	5:25	0:0	2	sp
op	5:28	0:0	2	=
call	5:30	5:46	2	EncoderState
arg	5:43	5:46	3	tif
water	5:43	0:0	4	tif
water	5:47	0:0	2	;
water	6:1	0:0	2	register
water	6:10	0:0	2	long
water	6:15	0:0	2	fcode
water	6:20	0:0	2	;
water	7:1	0:0	2	register
water	7:10	0:0	2	hash_t
op	7:17	0:0	2	*
water	7:18	0:0	2	hp
water	7:20	0:0	2	;
water	8:1	0:0	2	register
water	8:10	0:0	2	int
water	8:14	0:0	2	h
water	8:15	0:0	2	,
water	8:17	0:0	2	c
water	8:18	0:0	2	;
decl	9:1	9:12	2	hcode_t	ent
decl	10:1	10:10	2	long	disp
decl	11:1	11:35	2	long	incount
water	11:13	0:0	2	,
decl	11:1	11:35	2	long	outcount
water	11:23	0:0	2	,
decl	11:1	11:35	2	long	checkpoint
decl	12:1	12:23	2	unsigned long	nextdata
decl	13:8	13:21	2	long	nextbits
decl	14:1	14:29	2	int	free_ent
water	14:13	0:0	2	,
decl	14:1	14:29	2	int	maxcode
water	14:22	0:0	2	,
decl	14:1	14:29	2	int	nbits
decl	15:1	15:10	2	uint8	*op
decl	16:1	16:13	2	uint8	*limit
water	18:1	0:0	2	(
water	18:2	0:0	2	void
water	18:6	0:0	2	)
water	18:8	0:0	2	s
water	18:9	0:0	2	;
if	19:1	20:12	2	(sp == NULL)
cond	19:5	19:11	3	sp == NULL
water	19:5	0:0	4	sp
op	19:8	0:0	4	==
water	19:11	0:0	4	NULL
stmts	20:2	20:12	3	
return	20:2	20:12	4	(0)
water	20:9	0:0	5	(
water	20:10	0:0	5	0
water	20:11	0:0	5	)
call	22:8	22:38	2	assert
arg	22:15	22:38	3	sp->enc_hashtab!=NULL
water	22:15	0:0	4	sp
op	22:17	0:0	4	->
water	22:19	0:0	4	enc_hashtab
op	22:31	0:0	4	!=
water	22:34	0:0	4	NULL
water	22:39	0:0	2	;
water	27:1	0:0	2	incount
op	27:9	0:0	2	=
water	27:11	0:0	2	sp
op	27:13	0:0	2	->
water	27:15	0:0	2	enc_incount
water	27:26	0:0	2	;
water	28:1	0:0	2	outcount
op	28:10	0:0	2	=
water	28:12	0:0	2	sp
op	28:14	0:0	2	->
water	28:16	0:0	2	enc_outcount
water	28:28	0:0	2	;
water	29:1	0:0	2	checkpoint
op	29:12	0:0	2	=
water	29:14	0:0	2	sp
op	29:16	0:0	2	->
water	29:18	0:0	2	enc_checkpoint
water	29:32	0:0	2	;
water	30:1	0:0	2	nextdata
op	30:10	0:0	2	=
water	30:12	0:0	2	sp
op	30:14	0:0	2	->
water	30:16	0:0	2	lzw_nextdata
water	30:28	0:0	2	;
water	31:1	0:0	2	nextbits
op	31:10	0:0	2	=
water	31:12	0:0	2	sp
op	31:14	0:0	2	->
water	31:16	0:0	2	lzw_nextbits
water	31:28	0:0	2	;
water	32:1	0:0	2	free_ent
op	32:10	0:0	2	=
water	32:12	0:0	2	sp
op	32:14	0:0	2	->
water	32:16	0:0	2	lzw_free_ent
water	32:28	0:0	2	;
water	33:1	0:0	2	maxcode
op	33:9	0:0	2	=
water	33:11	0:0	2	sp
op	33:13	0:0	2	->
water	33:15	0:0	2	lzw_maxcode
water	33:26	0:0	2	;
water	34:1	0:0	2	nbits
op	34:7	0:0	2	=
water	34:9	0:0	2	sp
op	34:11	0:0	2	->
water	34:13	0:0	2	lzw_nbits
water	34:22	0:0	2	;
water	35:1	0:0	2	op
op	35:4	0:0	2	=
water	35:6	0:0	2	tif
op	35:9	0:0	2	->
water	35:11	0:0	2	tif_rawcp
water	35:20	0:0	2	;
water	36:1	0:0	2	limit
op	36:7	0:0	2	=
water	36:9	0:0	2	sp
op	36:11	0:0	2	->
water	36:13	0:0	2	enc_rawlimit
water	36:25	0:0	2	;
water	37:1	0:0	2	ent
op	37:5	0:0	2	=
water	37:7	0:0	2	(
water	37:8	0:0	2	hcode_t
water	37:15	0:0	2	)
water	37:16	0:0	2	sp
op	37:18	0:0	2	->
water	37:20	0:0	2	enc_oldcode
water	37:31	0:0	2	;
if	39:1	47:1	2	(ent == ( hcode_t ) - 1 && cc > 0)
cond	39:5	39:33	3	ent == ( hcode_t ) - 1 && cc > 0
water	39:5	0:0	4	ent
op	39:9	0:0	4	==
water	39:12	0:0	4	(
water	39:13	0:0	4	hcode_t
water	39:20	0:0	4	)
op	39:22	0:0	4	-
water	39:23	0:0	4	1
op	39:25	0:0	4	&&
water	39:28	0:0	4	cc
op	39:31	0:0	4	>
water	39:33	0:0	4	0
stmts	39:36	47:1	3	
water	39:36	0:0	4	{
call	45:2	45:28	4	PutNextCode
arg	45:14	45:16	5	op
water	45:14	0:0	6	op
arg	45:18	45:28	5	CODE_CLEAR
water	45:18	0:0	6	CODE_CLEAR
water	45:29	0:0	4	;
water	46:2	0:0	4	ent
op	46:6	0:0	4	=
op	46:8	0:0	4	*
water	46:9	0:0	4	bp
op	46:11	0:0	4	++
water	46:13	0:0	4	;
water	46:15	0:0	4	cc
op	46:17	0:0	4	--
water	46:19	0:0	4	;
water	46:21	0:0	4	incount
op	46:28	0:0	4	++
water	46:30	0:0	4	;
water	47:1	0:0	4	}
while	48:1	147:1	2	(cc > 0)
cond	48:8	48:13	3	cc > 0
water	48:8	0:0	4	cc
op	48:11	0:0	4	>
water	48:13	0:0	4	0
stmts	48:16	147:1	3	
water	48:16	0:0	4	{
water	49:2	0:0	4	c
op	49:4	0:0	4	=
op	49:6	0:0	4	*
water	49:7	0:0	4	bp
op	49:9	0:0	4	++
water	49:11	0:0	4	;
water	49:13	0:0	4	cc
op	49:15	0:0	4	--
water	49:17	0:0	4	;
water	49:19	0:0	4	incount
op	49:26	0:0	4	++
water	49:28	0:0	4	;
water	50:2	0:0	4	fcode
op	50:8	0:0	4	=
water	50:10	0:0	4	(
water	50:11	0:0	4	(
water	50:12	0:0	4	long
water	50:16	0:0	4	)
water	50:17	0:0	4	c
op	50:19	0:0	4	<<
water	50:22	0:0	4	BITS_MAX
water	50:30	0:0	4	)
op	50:32	0:0	4	+
water	50:34	0:0	4	ent
water	50:37	0:0	4	;
water	51:2	0:0	4	h
op	51:4	0:0	4	=
water	51:6	0:0	4	(
water	51:7	0:0	4	c
op	51:9	0:0	4	<<
water	51:12	0:0	4	HSHIFT
water	51:18	0:0	4	)
op	51:20	0:0	4	^
water	51:22	0:0	4	ent
water	51:25	0:0	4	;
if	56:2	57:13	4	(h >= HSIZE)
cond	56:6	56:11	5	h >= HSIZE
water	56:6	0:0	6	h
op	56:8	0:0	6	>=
water	56:11	0:0	6	HSIZE
stmts	57:3	57:13	5	
water	57:3	0:0	6	h
op	57:5	0:0	6	-=
water	57:8	0:0	6	HSIZE
water	57:13	0:0	6	;
water	59:2	0:0	4	hp
op	59:5	0:0	4	=
op	59:7	0:0	4	&
water	59:8	0:0	4	sp
op	59:10	0:0	4	->
water	59:12	0:0	4	enc_hashtab
op	59:23	0:0	4	[
water	59:24	0:0	4	h
op	59:25	0:0	4	]
water	59:26	0:0	4	;
if	60:2	63:2	4	(hp -> hash == fcode)
cond	60:6	60:18	5	hp -> hash == fcode
water	60:6	0:0	6	hp
op	60:8	0:0	6	->
water	60:10	0:0	6	hash
op	60:15	0:0	6	==
water	60:18	0:0	6	fcode
stmts	60:25	63:2	5	
water	60:25	0:0	6	{
water	61:3	0:0	6	ent
op	61:7	0:0	6	=
water	61:9	0:0	6	hp
op	61:11	0:0	6	->
water	61:13	0:0	6	code
water	61:17	0:0	6	;
continue	62:3	62:11	6	
water	63:2	0:0	6	}
if	64:2	84:2	4	(hp -> hash >= 0)
cond	64:6	64:18	5	hp -> hash >= 0
water	64:6	0:0	6	hp
op	64:8	0:0	6	->
water	64:10	0:0	6	hash
op	64:15	0:0	6	>=
water	64:18	0:0	6	0
stmts	64:21	84:2	5	
water	64:21	0:0	6	{
water	68:3	0:0	6	disp
op	68:8	0:0	6	=
water	68:10	0:0	6	HSIZE
op	68:16	0:0	6	-
water	68:18	0:0	6	h
water	68:19	0:0	6	;
if	69:3	70:12	6	(h == 0)
cond	69:7	69:12	7	h == 0
water	69:7	0:0	8	h
op	69:9	0:0	8	==
water	69:12	0:0	8	0
stmts	70:4	70:12	7	
water	70:4	0:0	8	disp
op	70:9	0:0	8	=
water	70:11	0:0	8	1
water	70:12	0:0	8	;
do	71:3	83:3	6	(hp -> hash >= 0)
cond	83:12	83:24	7	hp -> hash >= 0
water	83:12	0:0	8	hp
op	83:14	0:0	8	->
water	83:16	0:0	8	hash
op	83:21	0:0	8	>=
water	83:24	0:0	8	0
stmts	71:6	83:3	7	
water	71:6	0:0	8	{
if	76:4	77:15	8	(( h -= disp ) < 0)
cond	76:8	76:22	9	( h -= disp ) < 0
water	76:8	0:0	10	(
water	76:9	0:0	10	h
op	76:11	0:0	10	-=
water	76:14	0:0	10	disp
water	76:18	0:0	10	)
op	76:20	0:0	10	<
water	76:22	0:0	10	0
stmts	77:5	77:15	9	
water	77:5	0:0	10	h
op	77:7	0:0	10	+=
water	77:10	0:0	10	HSIZE
water	77:15	0:0	10	;
water	78:4	0:0	8	hp
op	78:7	0:0	8	=
op	78:9	0:0	8	&
water	78:10	0:0	8	sp
op	78:12	0:0	8	->
water	78:14	0:0	8	enc_hashtab
op	78:25	0:0	8	[
water	78:26	0:0	8	h
op	78:27	0:0	8	]
water	78:28	0:0	8	;
if	79:4	82:4	8	(hp -> hash == fcode)
cond	79:8	79:20	9	hp -> hash == fcode
water	79:8	0:0	10	hp
op	79:10	0:0	10	->
water	79:12	0:0	10	hash
op	79:17	0:0	10	==
water	79:20	0:0	10	fcode
stmts	79:27	82:4	9	
water	79:27	0:0	10	{
water	80:5	0:0	10	ent
op	80:9	0:0	10	=
water	80:11	0:0	10	hp
op	80:13	0:0	10	->
water	80:15	0:0	10	code
water	80:19	0:0	10	;
goto	81:5	81:13	10	hit
water	81:10	0:0	11	hit
water	82:4	0:0	10	}
water	83:3	0:0	8	}
water	83:26	0:0	6	;
water	84:2	0:0	6	}
if	94:2	98:2	4	(op > limit)
cond	94:6	94:11	5	op > limit
water	94:6	0:0	6	op
op	94:9	0:0	6	>
water	94:11	0:0	6	limit
stmts	94:18	98:2	5	
water	94:18	0:0	6	{
water	95:3	0:0	6	tif
op	95:6	0:0	6	->
water	95:8	0:0	6	tif_rawcc
op	95:18	0:0	6	=
call	95:20	95:52	6	(tmsize_t)
arg	95:31	95:52	7	op-tif->tif_rawdata
water	95:31	0:0	8	op
op	95:34	0:0	8	-
water	95:36	0:0	8	tif
op	95:39	0:0	8	->
water	95:41	0:0	8	tif_rawdata
water	95:53	0:0	6	;
call	96:3	96:21	6	TIFFFlushData1
arg	96:18	96:21	7	tif
water	96:18	0:0	8	tif
water	96:22	0:0	6	;
water	97:3	0:0	6	op
op	97:6	0:0	6	=
water	97:8	0:0	6	tif
op	97:11	0:0	6	->
water	97:13	0:0	6	tif_rawdata
water	97:24	0:0	6	;
water	98:2	0:0	6	}
call	99:2	99:21	4	PutNextCode
arg	99:14	99:16	5	op
water	99:14	0:0	6	op
arg	99:18	99:21	5	ent
water	99:18	0:0	6	ent
water	99:22	0:0	4	;
water	100:2	0:0	4	ent
op	100:6	0:0	4	=
water	100:8	0:0	4	(
water	100:9	0:0	4	hcode_t
water	100:16	0:0	4	)
water	100:17	0:0	4	c
water	100:18	0:0	4	;
water	101:2	0:0	4	hp
op	101:4	0:0	4	->
water	101:6	0:0	4	code
op	101:11	0:0	4	=
call	101:13	101:33	4	(hcode_t)
arg	101:23	101:33	5	free_ent++
water	101:23	0:0	6	free_ent
op	101:31	0:0	6	++
water	101:34	0:0	4	;
water	102:2	0:0	4	hp
op	102:4	0:0	4	->
water	102:6	0:0	4	hash
op	102:11	0:0	4	=
water	102:13	0:0	4	fcode
water	102:18	0:0	4	;
if	103:2	113:2	4	(free_ent == CODE_MAX - 1)
cond	103:6	103:27	5	free_ent == CODE_MAX - 1
water	103:6	0:0	6	free_ent
op	103:15	0:0	6	==
water	103:18	0:0	6	CODE_MAX
op	103:26	0:0	6	-
water	103:27	0:0	6	1
stmts	103:30	113:2	5	
water	103:30	0:0	6	{
call	105:3	105:13	6	cl_hash
arg	105:11	105:13	7	sp
water	105:11	0:0	8	sp
water	105:14	0:0	6	;
water	106:3	0:0	6	sp
op	106:5	0:0	6	->
water	106:7	0:0	6	enc_ratio
op	106:17	0:0	6	=
water	106:19	0:0	6	0
water	106:20	0:0	6	;
water	107:3	0:0	6	incount
op	107:11	0:0	6	=
water	107:13	0:0	6	0
water	107:14	0:0	6	;
water	108:3	0:0	6	outcount
op	108:12	0:0	6	=
water	108:14	0:0	6	0
water	108:15	0:0	6	;
water	109:3	0:0	6	free_ent
op	109:12	0:0	6	=
water	109:14	0:0	6	CODE_FIRST
water	109:24	0:0	6	;
call	110:3	110:29	6	PutNextCode
arg	110:15	110:17	7	op
water	110:15	0:0	8	op
arg	110:19	110:29	7	CODE_CLEAR
water	110:19	0:0	8	CODE_CLEAR
water	110:30	0:0	6	;
water	111:3	0:0	6	nbits
op	111:9	0:0	6	=
water	111:11	0:0	6	BITS_MIN
water	111:19	0:0	6	;
water	112:3	0:0	6	maxcode
op	112:11	0:0	6	=
call	112:13	112:29	6	MAXCODE
arg	112:21	112:29	7	BITS_MIN
water	112:21	0:0	8	BITS_MIN
water	112:30	0:0	6	;
water	113:2	0:0	6	}
else	113:4	144:2	4
stmts	113:9	144:2	5	
water	113:9	0:0	6	{
if	118:3	122:3	6	(free_ent > maxcode)
cond	118:7	118:18	7	free_ent > maxcode
water	118:7	0:0	8	free_ent
op	118:16	0:0	8	>
water	118:18	0:0	8	maxcode
stmts	118:27	122:3	7	
water	118:27	0:0	8	{
water	119:4	0:0	8	nbits
op	119:9	0:0	8	++
water	119:11	0:0	8	;
call	120:4	120:28	8	assert
arg	120:11	120:28	9	nbits<=BITS_MAX
water	120:11	0:0	10	nbits
op	120:17	0:0	10	<=
water	120:20	0:0	10	BITS_MAX
water	120:29	0:0	8	;
water	121:4	0:0	8	maxcode
op	121:12	0:0	8	=
water	121:14	0:0	8	(
water	121:15	0:0	8	int
water	121:18	0:0	8	)
call	121:20	121:33	8	MAXCODE
arg	121:28	121:33	9	nbits
water	121:28	0:0	10	nbits
water	121:34	0:0	8	;
water	122:3	0:0	8	}
else	122:5	143:3	6
stmts	122:10	143:3	7	
if	122:10	143:3	8	(incount >= checkpoint)
cond	122:14	122:25	9	incount >= checkpoint
water	122:14	0:0	10	incount
op	122:22	0:0	10	>=
water	122:25	0:0	10	checkpoint
stmts	122:37	143:3	9	
water	122:37	0:0	10	{
decl	123:4	123:12	10	long	rat
water	130:4	0:0	10	checkpoint
op	130:15	0:0	10	=
water	130:17	0:0	10	incount
op	130:24	0:0	10	+
water	130:25	0:0	10	CHECK_GAP
water	130:34	0:0	10	;
call	131:4	131:21	10	CALCRATIO
arg	131:14	131:16	11	sp
water	131:14	0:0	12	sp
arg	131:18	131:21	11	rat
water	131:18	0:0	12	rat
water	131:22	0:0	10	;
if	132:4	141:4	10	(rat <= sp -> enc_ratio)
cond	132:8	132:19	11	rat <= sp -> enc_ratio
water	132:8	0:0	12	rat
op	132:12	0:0	12	<=
water	132:15	0:0	12	sp
op	132:17	0:0	12	->
water	132:19	0:0	12	enc_ratio
stmts	132:30	141:4	11	
water	132:30	0:0	12	{
call	133:5	133:15	12	cl_hash
arg	133:13	133:15	13	sp
water	133:13	0:0	14	sp
water	133:16	0:0	12	;
water	134:5	0:0	12	sp
op	134:7	0:0	12	->
water	134:9	0:0	12	enc_ratio
op	134:19	0:0	12	=
water	134:21	0:0	12	0
water	134:22	0:0	12	;
water	135:5	0:0	12	incount
op	135:13	0:0	12	=
water	135:15	0:0	12	0
water	135:16	0:0	12	;
water	136:5	0:0	12	outcount
op	136:14	0:0	12	=
water	136:16	0:0	12	0
water	136:17	0:0	12	;
water	137:5	0:0	12	free_ent
op	137:14	0:0	12	=
water	137:16	0:0	12	CODE_FIRST
water	137:26	0:0	12	;
call	138:5	138:31	12	PutNextCode
arg	138:17	138:19	13	op
water	138:17	0:0	14	op
arg	138:21	138:31	13	CODE_CLEAR
water	138:21	0:0	14	CODE_CLEAR
water	138:32	0:0	12	;
water	139:5	0:0	12	nbits
op	139:11	0:0	12	=
water	139:13	0:0	12	BITS_MIN
water	139:21	0:0	12	;
water	140:5	0:0	12	maxcode
op	140:13	0:0	12	=
call	140:15	140:31	12	MAXCODE
arg	140:23	140:31	13	BITS_MIN
water	140:23	0:0	14	BITS_MIN
water	140:32	0:0	12	;
water	141:4	0:0	12	}
else	141:6	142:24	10
stmts	142:5	142:24	11	
water	142:5	0:0	12	sp
op	142:7	0:0	12	->
water	142:9	0:0	12	enc_ratio
op	142:19	0:0	12	=
water	142:21	0:0	12	rat
water	142:24	0:0	12	;
water	143:3	0:0	10	}
water	144:2	0:0	6	}
label	145:1	145:4	4	hit :
water	146:2	0:0	4	;
water	147:1	0:0	4	}
water	152:1	0:0	2	sp
op	152:3	0:0	2	->
water	152:5	0:0	2	enc_incount
op	152:17	0:0	2	=
water	152:19	0:0	2	incount
water	152:26	0:0	2	;
water	153:1	0:0	2	sp
op	153:3	0:0	2	->
water	153:5	0:0	2	enc_outcount
op	153:18	0:0	2	=
water	153:20	0:0	2	outcount
water	153:28	0:0	2	;
water	154:1	0:0	2	sp
op	154:3	0:0	2	->
water	154:5	0:0	2	enc_checkpoint
op	154:20	0:0	2	=
water	154:22	0:0	2	checkpoint
water	154:32	0:0	2	;
water	155:1	0:0	2	sp
op	155:3	0:0	2	->
water	155:5	0:0	2	enc_oldcode
op	155:17	0:0	2	=
water	155:19	0:0	2	ent
water	155:22	0:0	2	;
water	156:1	0:0	2	sp
op	156:3	0:0	2	->
water	156:5	0:0	2	lzw_nextdata
op	156:18	0:0	2	=
water	156:20	0:0	2	nextdata
water	156:28	0:0	2	;
water	157:1	0:0	2	sp
op	157:3	0:0	2	->
water	157:5	0:0	2	lzw_nextbits
op	157:18	0:0	2	=
water	157:20	0:0	2	nextbits
water	157:28	0:0	2	;
water	158:1	0:0	2	sp
op	158:3	0:0	2	->
water	158:5	0:0	2	lzw_free_ent
op	158:18	0:0	2	=
water	158:20	0:0	2	(
water	158:21	0:0	2	unsigned
water	158:30	0:0	2	short
water	158:35	0:0	2	)
water	158:36	0:0	2	free_ent
water	158:44	0:0	2	;
water	159:1	0:0	2	sp
op	159:3	0:0	2	->
water	159:5	0:0	2	lzw_maxcode
op	159:17	0:0	2	=
water	159:19	0:0	2	(
water	159:20	0:0	2	unsigned
water	159:29	0:0	2	short
water	159:34	0:0	2	)
water	159:35	0:0	2	maxcode
water	159:42	0:0	2	;
water	160:1	0:0	2	sp
op	160:3	0:0	2	->
water	160:5	0:0	2	lzw_nbits
op	160:15	0:0	2	=
water	160:17	0:0	2	(
water	160:18	0:0	2	unsigned
water	160:27	0:0	2	short
water	160:32	0:0	2	)
water	160:33	0:0	2	nbits
water	160:38	0:0	2	;
water	161:1	0:0	2	tif
op	161:4	0:0	2	->
water	161:6	0:0	2	tif_rawcp
op	161:16	0:0	2	=
water	161:18	0:0	2	op
water	161:20	0:0	2	;
return	162:1	162:11	2	(1)
water	162:8	0:0	3	(
water	162:9	0:0	3	1
water	162:10	0:0	3	)

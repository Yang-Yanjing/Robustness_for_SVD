func	3:0	38:0	0	static void	fpAcc
params	4:5	0:0	1	
param	4:6	4:15	2	TIFF *	tif
param	4:17	4:27	2	uint8 *	cp0
param	4:29	4:40	2	tmsize_t	cc
stmnts	0:0	37:15	1	
decl	6:1	6:46	2	tmsize_t	stride
op	6:17	0:0	2	=
call	6:19	6:37	3	PredictorState
arg	6:34	6:37	4	tif
water	6:34	0:0	5	tif
op	6:38	0:0	2	->
water	6:40	0:0	2	stride
decl	7:1	7:47	2	uint32	bps
op	7:12	0:0	2	=
water	7:14	0:0	2	tif
op	7:17	0:0	2	->
water	7:19	0:0	2	tif_dir
op	7:26	0:0	2	.
water	7:27	0:0	2	td_bitspersample
op	7:44	0:0	2	/
water	7:46	0:0	2	8
decl	8:1	8:23	2	tmsize_t	wc
op	8:13	0:0	2	=
water	8:15	0:0	2	cc
op	8:18	0:0	2	/
water	8:20	0:0	2	bps
decl	9:1	9:20	2	tmsize_t	count
op	9:16	0:0	2	=
water	9:18	0:0	2	cc
decl	10:1	10:26	2	uint8	*cp
op	10:11	0:0	2	=
water	10:13	0:0	2	(
water	10:14	0:0	2	uint8
op	10:20	0:0	2	*
water	10:21	0:0	2	)
water	10:23	0:0	2	cp0
decl	11:1	11:38	2	uint8	*tmp
op	11:12	0:0	2	=
water	11:14	0:0	2	(
water	11:15	0:0	2	uint8
op	11:21	0:0	2	*
water	11:22	0:0	2	)
call	11:23	11:37	3	_TIFFmalloc
arg	11:35	11:37	4	cc
water	11:35	0:0	5	cc
call	13:1	13:28	2	assert
arg	13:8	13:28	3	(cc%(bps*stride))==0
water	13:8	0:0	4	(
water	13:9	0:0	4	cc
op	13:11	0:0	4	%
water	13:12	0:0	4	(
water	13:13	0:0	4	bps
op	13:16	0:0	4	*
water	13:17	0:0	4	stride
water	13:23	0:0	4	)
water	13:24	0:0	4	)
op	13:25	0:0	4	==
water	13:27	0:0	4	0
water	13:29	0:0	2	;
if	15:1	16:8	2	(! tmp)
cond	15:5	15:6	3	! tmp
op	15:5	0:0	4	!
water	15:6	0:0	4	tmp
stmts	16:2	16:8	3	
return	16:2	16:8	4	
while	18:1	22:1	2	(count > stride)
cond	18:8	18:16	3	count > stride
water	18:8	0:0	4	count
op	18:14	0:0	4	>
water	18:16	0:0	4	stride
stmts	18:24	22:1	3	
water	18:24	0:0	4	{
water	19:2	0:0	4	REPEAT4
water	19:9	0:0	4	(
water	19:10	0:0	4	stride
water	19:16	0:0	4	,
water	19:18	0:0	4	cp
op	19:20	0:0	4	[
water	19:21	0:0	4	stride
op	19:27	0:0	4	]
op	19:29	0:0	4	=
call	20:24	20:68	4	(unsignedchar)
arg	20:41	20:68	5	(cp[stride]+cp[0])&0xff
water	20:41	0:0	6	(
water	20:42	0:0	6	cp
op	20:44	0:0	6	[
water	20:45	0:0	6	stride
op	20:51	0:0	6	]
op	20:53	0:0	6	+
water	20:55	0:0	6	cp
op	20:57	0:0	6	[
water	20:58	0:0	6	0
op	20:59	0:0	6	]
water	20:60	0:0	6	)
op	20:62	0:0	6	&
water	20:64	0:0	6	0
water	20:65	0:0	6	xff
water	20:69	0:0	4	;
water	20:71	0:0	4	cp
op	20:73	0:0	4	++
water	20:75	0:0	4	)
water	21:2	0:0	4	count
op	21:8	0:0	4	-=
water	21:11	0:0	4	stride
water	21:17	0:0	4	;
water	22:1	0:0	4	}
call	24:1	24:25	2	_TIFFmemcpy
arg	24:13	24:16	3	tmp
water	24:13	0:0	4	tmp
arg	24:18	24:21	3	cp0
water	24:18	0:0	4	cp0
arg	24:23	24:25	3	cc
water	24:23	0:0	4	cc
water	24:26	0:0	2	;
water	25:1	0:0	2	cp
op	25:4	0:0	2	=
water	25:6	0:0	2	(
water	25:7	0:0	2	uint8
op	25:13	0:0	2	*
water	25:14	0:0	2	)
water	25:16	0:0	2	cp0
water	25:19	0:0	2	;
for	26:1	36:1	2	(count = 0 ;count < wc;count ++)
forinit	26:6	26:15	3	count = 0 ;
water	26:6	0:0	4	count
op	26:12	0:0	4	=
water	26:14	0:0	4	0
water	26:15	0:0	4	;
cond	26:17	26:25	3	count < wc
water	26:17	0:0	4	count
op	26:23	0:0	4	<
water	26:25	0:0	4	wc
forexpr	26:29	26:34	3	count ++
water	26:29	0:0	4	count
op	26:34	0:0	4	++
stmts	26:38	36:1	3	
water	26:38	0:0	4	{
decl	27:2	27:13	4	uint32	byte
for	28:2	35:2	4	(byte = 0 ;byte < bps;byte ++)
forinit	28:7	28:15	5	byte = 0 ;
water	28:7	0:0	6	byte
op	28:12	0:0	6	=
water	28:14	0:0	6	0
water	28:15	0:0	6	;
cond	28:17	28:24	5	byte < bps
water	28:17	0:0	6	byte
op	28:22	0:0	6	<
water	28:24	0:0	6	bps
forexpr	28:29	28:33	5	byte ++
water	28:29	0:0	6	byte
op	28:33	0:0	6	++
stmts	28:37	35:2	5	
water	28:37	0:0	6	{
water	30:3	0:0	6	cp
op	30:5	0:0	6	[
water	30:6	0:0	6	bps
op	30:10	0:0	6	*
water	30:12	0:0	6	count
op	30:18	0:0	6	+
water	30:20	0:0	6	byte
op	30:24	0:0	6	]
op	30:26	0:0	6	=
water	30:28	0:0	6	tmp
op	30:31	0:0	6	[
water	30:32	0:0	6	byte
op	30:37	0:0	6	*
water	30:39	0:0	6	wc
op	30:42	0:0	6	+
water	30:44	0:0	6	count
op	30:49	0:0	6	]
water	30:50	0:0	6	;
water	32:3	0:0	6	cp
op	32:5	0:0	6	[
water	32:6	0:0	6	bps
op	32:10	0:0	6	*
water	32:12	0:0	6	count
op	32:18	0:0	6	+
water	32:20	0:0	6	byte
op	32:24	0:0	6	]
op	32:26	0:0	6	=
water	33:4	0:0	6	tmp
op	33:7	0:0	6	[
water	33:8	0:0	6	(
water	33:9	0:0	6	bps
op	33:13	0:0	6	-
water	33:15	0:0	6	byte
op	33:20	0:0	6	-
water	33:22	0:0	6	1
water	33:23	0:0	6	)
op	33:25	0:0	6	*
water	33:27	0:0	6	wc
op	33:30	0:0	6	+
water	33:32	0:0	6	count
op	33:37	0:0	6	]
water	33:38	0:0	6	;
water	35:2	0:0	6	}
water	36:1	0:0	4	}
call	37:1	37:14	2	_TIFFfree
arg	37:11	37:14	3	tmp
water	37:11	0:0	4	tmp
water	37:15	0:0	2	;

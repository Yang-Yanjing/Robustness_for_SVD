func	2:0	34:0	0	static void	cvtClump
params	3:8	0:0	1	
param	3:9	3:26	2	unsigned char *	op
param	3:28	3:42	2	uint32 *	raster
param	3:44	3:53	2	uint32	ch
param	3:55	3:64	2	uint32	cw
param	3:66	3:74	2	uint32	w
stmnts	0:0	33:70	1	
decl	5:1	5:24	2	float	Y
water	5:8	0:0	2	,
decl	5:1	5:24	2	float	Cb
op	5:13	0:0	2	=
water	5:15	0:0	2	0
water	5:16	0:0	2	,
decl	5:1	5:24	2	float	Cr
op	5:21	0:0	2	=
water	5:23	0:0	2	0
decl	6:1	6:12	2	uint32	j
water	6:9	0:0	2	,
decl	6:1	6:12	2	uint32	k
for	11:1	26:1	2	(k = 0 ;k < ch;k ++)
forinit	11:6	11:11	3	k = 0 ;
water	11:6	0:0	4	k
op	11:8	0:0	4	=
water	11:10	0:0	4	0
water	11:11	0:0	4	;
cond	11:13	11:17	3	k < ch
water	11:13	0:0	4	k
op	11:15	0:0	4	<
water	11:17	0:0	4	ch
forexpr	11:21	11:22	3	k ++
water	11:21	0:0	4	k
op	11:22	0:0	4	++
stmts	11:26	26:1	3	
water	11:26	0:0	4	{
for	12:2	23:2	4	(j = 0 ;j < cw;j ++)
forinit	12:7	12:12	5	j = 0 ;
water	12:7	0:0	6	j
op	12:9	0:0	6	=
water	12:11	0:0	6	0
water	12:12	0:0	6	;
cond	12:14	12:18	5	j < cw
water	12:14	0:0	6	j
op	12:16	0:0	6	<
water	12:18	0:0	6	cw
forexpr	12:22	12:23	5	j ++
water	12:22	0:0	6	j
op	12:23	0:0	6	++
stmts	12:27	23:2	5	
water	12:27	0:0	6	{
decl	13:3	13:33	6	uint32	RGB
op	13:14	0:0	6	=
water	13:16	0:0	6	(
water	13:17	0:0	6	raster
op	13:24	0:0	6	-
water	13:26	0:0	6	k
op	13:27	0:0	6	*
water	13:28	0:0	6	w
water	13:29	0:0	6	)
op	13:30	0:0	6	[
water	13:31	0:0	6	j
op	13:32	0:0	6	]
water	14:3	0:0	6	Y
op	14:5	0:0	6	=
water	14:7	0:0	6	lumaRed
op	14:14	0:0	6	[
call	14:15	14:27	6	TIFFGetR
arg	14:24	14:27	7	RGB
water	14:24	0:0	8	RGB
op	14:28	0:0	6	]
op	14:30	0:0	6	+
water	15:7	0:0	6	lumaGreen
op	15:16	0:0	6	[
call	15:17	15:29	6	TIFFGetG
arg	15:26	15:29	7	RGB
water	15:26	0:0	8	RGB
op	15:30	0:0	6	]
op	15:32	0:0	6	+
water	16:7	0:0	6	lumaBlue
op	16:15	0:0	6	[
call	16:16	16:28	6	TIFFGetB
arg	16:25	16:28	7	RGB
water	16:25	0:0	8	RGB
op	16:29	0:0	6	]
water	16:30	0:0	6	;
water	18:3	0:0	6	Cb
op	18:6	0:0	6	+=
water	18:9	0:0	6	(
call	18:10	18:22	6	TIFFGetB
arg	18:19	18:22	7	RGB
water	18:19	0:0	8	RGB
op	18:24	0:0	6	-
water	18:26	0:0	6	Y
water	18:27	0:0	6	)
op	18:29	0:0	6	*
water	18:31	0:0	6	D1
water	18:33	0:0	6	;
water	19:3	0:0	6	Cr
op	19:6	0:0	6	+=
water	19:9	0:0	6	(
call	19:10	19:22	6	TIFFGetR
arg	19:19	19:22	7	RGB
water	19:19	0:0	8	RGB
op	19:24	0:0	6	-
water	19:26	0:0	6	Y
water	19:27	0:0	6	)
op	19:29	0:0	6	*
water	19:31	0:0	6	D2
water	19:33	0:0	6	;
op	21:3	0:0	6	*
water	21:4	0:0	6	op
op	21:6	0:0	6	++
op	21:9	0:0	6	=
call	21:11	22:46	6	V2Code
arg	21:18	21:19	7	Y
water	21:18	0:0	8	Y
arg	22:7	22:23	7	refBlackWhite[0]
water	22:7	0:0	8	refBlackWhite
op	22:20	0:0	8	[
water	22:21	0:0	8	0
op	22:22	0:0	8	]
arg	22:25	22:41	7	refBlackWhite[1]
water	22:25	0:0	8	refBlackWhite
op	22:38	0:0	8	[
water	22:39	0:0	8	1
op	22:40	0:0	8	]
arg	22:43	22:46	7	255
water	22:43	0:0	8	255
water	22:47	0:0	6	;
water	23:2	0:0	6	}
for	24:2	25:16	4	(;j < horizSubSampling;j ++)
forinit	24:7	24:7	5	;
water	24:7	0:0	6	;
cond	24:9	24:13	5	j < horizSubSampling
water	24:9	0:0	6	j
op	24:11	0:0	6	<
water	24:13	0:0	6	horizSubSampling
forexpr	24:31	24:32	5	j ++
water	24:31	0:0	6	j
op	24:32	0:0	6	++
stmts	25:3	25:16	5	
op	25:3	0:0	6	*
water	25:4	0:0	6	op
op	25:6	0:0	6	++
op	25:9	0:0	6	=
water	25:11	0:0	6	Yzero
water	25:16	0:0	6	;
water	26:1	0:0	4	}
for	27:1	30:1	2	(;k < vertSubSampling;k ++)
forinit	27:6	27:6	3	;
water	27:6	0:0	4	;
cond	27:8	27:12	3	k < vertSubSampling
water	27:8	0:0	4	k
op	27:10	0:0	4	<
water	27:12	0:0	4	vertSubSampling
forexpr	27:29	27:30	3	k ++
water	27:29	0:0	4	k
op	27:30	0:0	4	++
stmts	27:34	30:1	3	
water	27:34	0:0	4	{
for	28:2	29:16	4	(j = 0 ;j < horizSubSampling;j ++)
forinit	28:7	28:12	5	j = 0 ;
water	28:7	0:0	6	j
op	28:9	0:0	6	=
water	28:11	0:0	6	0
water	28:12	0:0	6	;
cond	28:14	28:18	5	j < horizSubSampling
water	28:14	0:0	6	j
op	28:16	0:0	6	<
water	28:18	0:0	6	horizSubSampling
forexpr	28:36	28:37	5	j ++
water	28:36	0:0	6	j
op	28:37	0:0	6	++
stmts	29:3	29:16	5	
op	29:3	0:0	6	*
water	29:4	0:0	6	op
op	29:6	0:0	6	++
op	29:9	0:0	6	=
water	29:11	0:0	6	Yzero
water	29:16	0:0	6	;
water	30:1	0:0	4	}
op	32:1	0:0	2	*
water	32:2	0:0	2	op
op	32:4	0:0	2	++
op	32:7	0:0	2	=
call	32:9	32:69	2	V2Code
arg	32:16	32:28	3	Cb/(ch*cw)
water	32:16	0:0	4	Cb
op	32:19	0:0	4	/
water	32:21	0:0	4	(
water	32:22	0:0	4	ch
op	32:24	0:0	4	*
water	32:25	0:0	4	cw
water	32:27	0:0	4	)
arg	32:30	32:46	3	refBlackWhite[2]
water	32:30	0:0	4	refBlackWhite
op	32:43	0:0	4	[
water	32:44	0:0	4	2
op	32:45	0:0	4	]
arg	32:48	32:64	3	refBlackWhite[3]
water	32:48	0:0	4	refBlackWhite
op	32:61	0:0	4	[
water	32:62	0:0	4	3
op	32:63	0:0	4	]
arg	32:66	32:69	3	127
water	32:66	0:0	4	127
water	32:70	0:0	2	;
op	33:1	0:0	2	*
water	33:2	0:0	2	op
op	33:4	0:0	2	++
op	33:7	0:0	2	=
call	33:9	33:69	2	V2Code
arg	33:16	33:28	3	Cr/(ch*cw)
water	33:16	0:0	4	Cr
op	33:19	0:0	4	/
water	33:21	0:0	4	(
water	33:22	0:0	4	ch
op	33:24	0:0	4	*
water	33:25	0:0	4	cw
water	33:27	0:0	4	)
arg	33:30	33:46	3	refBlackWhite[4]
water	33:30	0:0	4	refBlackWhite
op	33:43	0:0	4	[
water	33:44	0:0	4	4
op	33:45	0:0	4	]
arg	33:48	33:64	3	refBlackWhite[5]
water	33:48	0:0	4	refBlackWhite
op	33:61	0:0	4	[
water	33:62	0:0	4	5
op	33:63	0:0	4	]
arg	33:66	33:69	3	127
water	33:66	0:0	4	127
water	33:70	0:0	2	;

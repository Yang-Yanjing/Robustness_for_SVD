func	2:0	58:0	0	int	readgifimage
params	3:12	0:0	1	
param	3:13	3:23	2	char *	mode
stmnts	0:0	57:17	1	
decl	5:4	5:24	2	unsigned char	buf[9]
decl	6:4	6:26	2	int	local
water	6:13	0:0	2	,
decl	6:4	6:26	2	int	interleaved
water	7:4	0:0	2	unsigned
water	7:13	0:0	2	char
water	7:18	0:0	2	localmap
op	7:26	0:0	2	[
water	7:27	0:0	2	256
op	7:30	0:0	2	]
op	7:31	0:0	2	[
water	7:32	0:0	2	3
op	7:33	0:0	2	]
water	7:34	0:0	2	;
decl	8:4	8:17	2	int	localbits
decl	9:4	9:14	2	int	status
decl	10:4	10:22	2	size_t	raster_size
if	12:4	16:4	2	(fread (buf ,1 ,9 ,infile ) != 9)
cond	12:8	12:36	3	fread (buf ,1 ,9 ,infile ) != 9
call	12:8	12:31	4	fread
arg	12:14	12:17	5	buf
water	12:14	0:0	6	buf
arg	12:19	12:20	5	1
water	12:19	0:0	6	1
arg	12:22	12:23	5	9
water	12:22	0:0	6	9
arg	12:25	12:31	5	infile
water	12:25	0:0	6	infile
op	12:33	0:0	4	!=
water	12:36	0:0	4	9
stmts	12:39	16:4	3	
water	12:39	0:0	4	{
call	13:8	14:41	4	fprintf
arg	13:16	13:22	5	stderr
water	13:16	0:0	6	stderr
arg	13:24	13:56	5	"short read from file %s (%s)\n"
water	13:24	0:0	6	"short read from file %s (%s)\n"
arg	14:16	14:24	5	filename
water	14:16	0:0	6	filename
arg	14:26	14:41	5	strerror(errno)
call	14:26	14:40	6	strerror
arg	14:35	14:40	7	errno
water	14:35	0:0	8	errno
water	14:42	0:0	4	;
return	15:1	15:11	4	(0)
water	15:8	0:0	5	(
water	15:9	0:0	5	0
water	15:10	0:0	5	)
water	16:4	0:0	4	}
water	17:4	0:0	2	width
op	17:10	0:0	2	=
water	17:12	0:0	2	(
water	17:13	0:0	2	buf
op	17:16	0:0	2	[
water	17:17	0:0	2	4
op	17:18	0:0	2	]
op	17:20	0:0	2	+
water	17:22	0:0	2	(
water	17:23	0:0	2	buf
op	17:26	0:0	2	[
water	17:27	0:0	2	5
op	17:28	0:0	2	]
op	17:30	0:0	2	<<
water	17:33	0:0	2	8
water	17:34	0:0	2	)
water	17:35	0:0	2	)
op	17:37	0:0	2	&
water	17:39	0:0	2	0
water	17:40	0:0	2	xffff
water	17:45	0:0	2	;
water	18:4	0:0	2	height
op	18:11	0:0	2	=
water	18:13	0:0	2	(
water	18:14	0:0	2	buf
op	18:17	0:0	2	[
water	18:18	0:0	2	6
op	18:19	0:0	2	]
op	18:21	0:0	2	+
water	18:23	0:0	2	(
water	18:24	0:0	2	buf
op	18:27	0:0	2	[
water	18:28	0:0	2	7
op	18:29	0:0	2	]
op	18:31	0:0	2	<<
water	18:34	0:0	2	8
water	18:35	0:0	2	)
water	18:36	0:0	2	)
op	18:38	0:0	2	&
water	18:40	0:0	2	0
water	18:41	0:0	2	xffff
water	18:46	0:0	2	;
water	19:4	0:0	2	local
op	19:10	0:0	2	=
water	19:12	0:0	2	buf
op	19:15	0:0	2	[
water	19:16	0:0	2	8
op	19:17	0:0	2	]
op	19:19	0:0	2	&
water	19:21	0:0	2	0
water	19:22	0:0	2	x80
water	19:25	0:0	2	;
water	20:4	0:0	2	interleaved
op	20:16	0:0	2	=
water	20:18	0:0	2	buf
op	20:21	0:0	2	[
water	20:22	0:0	2	8
op	20:23	0:0	2	]
op	20:25	0:0	2	&
water	20:27	0:0	2	0
water	20:28	0:0	2	x40
water	20:31	0:0	2	;
if	21:4	24:4	2	(width == 0 UL || height == 0 UL || ( width > 2000000000 UL / height ))
cond	21:8	21:71	3	width == 0 UL || height == 0 UL || ( width > 2000000000 UL / height )
water	21:8	0:0	4	width
op	21:14	0:0	4	==
water	21:17	0:0	4	0
water	21:18	0:0	4	UL
op	21:21	0:0	4	||
water	21:24	0:0	4	height
op	21:31	0:0	4	==
water	21:34	0:0	4	0
water	21:35	0:0	4	UL
op	21:38	0:0	4	||
water	21:41	0:0	4	(
water	21:42	0:0	4	width
op	21:48	0:0	4	>
water	21:50	0:0	4	2000000000
water	21:60	0:0	4	UL
op	21:63	0:0	4	/
water	21:65	0:0	4	height
water	21:71	0:0	4	)
stmts	21:74	24:4	3	
water	21:74	0:0	4	{
call	22:8	22:60	4	fprintf
arg	22:16	22:22	5	stderr
water	22:16	0:0	6	stderr
arg	22:24	22:60	5	"Invalid value of width or height\n"
water	22:24	0:0	6	"Invalid value of width or height\n"
water	22:61	0:0	4	;
return	23:8	23:17	4	(0)
water	23:14	0:0	5	(
water	23:15	0:0	5	0
water	23:16	0:0	5	)
water	24:4	0:0	4	}
if	25:4	28:4	2	(local == 0 && global == 0)
cond	25:8	25:32	3	local == 0 && global == 0
water	25:8	0:0	4	local
op	25:14	0:0	4	==
water	25:17	0:0	4	0
op	25:19	0:0	4	&&
water	25:22	0:0	4	global
op	25:29	0:0	4	==
water	25:32	0:0	4	0
stmts	25:35	28:4	3	
water	25:35	0:0	4	{
call	26:8	26:57	4	fprintf
arg	26:16	26:22	5	stderr
water	26:16	0:0	6	stderr
arg	26:24	26:57	5	"no colormap present for image\n"
water	26:24	0:0	6	"no colormap present for image\n"
water	26:58	0:0	4	;
return	27:8	27:18	4	(0)
water	27:15	0:0	5	(
water	27:16	0:0	5	0
water	27:17	0:0	5	)
water	28:4	0:0	4	}
water	29:4	0:0	2	raster_size
op	29:15	0:0	2	=
water	29:16	0:0	2	width
op	29:21	0:0	2	*
water	29:22	0:0	2	height
water	29:28	0:0	2	;
if	30:4	32:4	2	(( raster_size / width ) == height)
cond	30:8	30:31	3	( raster_size / width ) == height
water	30:8	0:0	4	(
water	30:9	0:0	4	raster_size
op	30:20	0:0	4	/
water	30:21	0:0	4	width
water	30:26	0:0	4	)
op	30:28	0:0	4	==
water	30:31	0:0	4	height
stmts	30:39	32:4	3	
water	30:39	0:0	4	{
water	31:8	0:0	4	raster_size
op	31:20	0:0	4	+=
water	31:23	0:0	4	EXTRAFUDGE
water	31:33	0:0	4	;
water	32:4	0:0	4	}
else	32:6	34:4	2
stmts	32:11	34:4	3	
water	32:11	0:0	4	{
water	33:8	0:0	4	raster_size
op	33:19	0:0	4	=
water	33:20	0:0	4	0
water	33:21	0:0	4	;
water	34:4	0:0	4	}
if	35:4	38:4	2	(( raster = ( unsigned char * )_TIFFmalloc (raster_size ) ) == NULL)
cond	35:8	35:64	3	( raster = ( unsigned char * )_TIFFmalloc (raster_size ) ) == NULL
water	35:8	0:0	4	(
water	35:9	0:0	4	raster
op	35:16	0:0	4	=
water	35:18	0:0	4	(
water	35:19	0:0	4	unsigned
water	35:28	0:0	4	char
op	35:32	0:0	4	*
water	35:33	0:0	4	)
call	35:35	35:58	4	_TIFFmalloc
arg	35:47	35:58	5	raster_size
water	35:47	0:0	6	raster_size
water	35:59	0:0	4	)
op	35:61	0:0	4	==
water	35:64	0:0	4	NULL
stmts	35:70	38:4	3	
water	35:70	0:0	4	{
call	36:8	36:55	4	fprintf
arg	36:16	36:22	5	stderr
water	36:16	0:0	6	stderr
arg	36:24	36:55	5	"not enough memory for image\n"
water	36:24	0:0	6	"not enough memory for image\n"
water	36:56	0:0	4	;
return	37:8	37:18	4	(0)
water	37:15	0:0	5	(
water	37:16	0:0	5	0
water	37:17	0:0	5	)
water	38:4	0:0	4	}
if	39:4	51:4	2	(local)
cond	39:8	39:8	3	local
water	39:8	0:0	4	local
stmts	39:15	51:4	3	
water	39:15	0:0	4	{
water	40:8	0:0	4	localbits
op	40:18	0:0	4	=
water	40:20	0:0	4	(
water	40:21	0:0	4	buf
op	40:24	0:0	4	[
water	40:25	0:0	4	8
op	40:26	0:0	4	]
op	40:28	0:0	4	&
water	40:30	0:0	4	0
water	40:31	0:0	4	x7
water	40:33	0:0	4	)
op	40:35	0:0	4	+
water	40:37	0:0	4	1
water	40:38	0:0	4	;
call	42:8	42:61	4	fprintf
arg	42:16	42:22	5	stderr
water	42:16	0:0	6	stderr
arg	42:24	42:47	5	"   local colors: %d\n"
water	42:24	0:0	6	"   local colors: %d\n"
arg	42:49	42:61	5	1<<localbits
water	42:49	0:0	6	1
op	42:50	0:0	6	<<
water	42:52	0:0	6	localbits
water	42:62	0:0	4	;
if	44:8	49:8	4	(fread (localmap ,3 ,( ( size_t ) 1 ) << localbits ,infile ) != ( ( size_t ) 1 ) << localbits)
cond	44:12	45:25	5	fread (localmap ,3 ,( ( size_t ) 1 ) << localbits ,infile ) != ( ( size_t ) 1 ) << localbits
call	44:12	44:61	6	fread
arg	44:18	44:26	7	localmap
water	44:18	0:0	8	localmap
arg	44:28	44:29	7	3
water	44:28	0:0	8	3
arg	44:31	44:53	7	((size_t)1)<<localbits
water	44:31	0:0	8	(
water	44:32	0:0	8	(
water	44:33	0:0	8	size_t
water	44:39	0:0	8	)
water	44:40	0:0	8	1
water	44:41	0:0	8	)
op	44:42	0:0	8	<<
water	44:44	0:0	8	localbits
arg	44:55	44:61	7	infile
water	44:55	0:0	8	infile
op	44:63	0:0	6	!=
water	45:12	0:0	6	(
water	45:13	0:0	6	(
water	45:14	0:0	6	size_t
water	45:20	0:0	6	)
water	45:21	0:0	6	1
water	45:22	0:0	6	)
op	45:23	0:0	6	<<
water	45:25	0:0	6	localbits
stmts	45:36	49:8	5	
water	45:36	0:0	6	{
call	46:12	47:45	6	fprintf
arg	46:20	46:26	7	stderr
water	46:20	0:0	8	stderr
arg	46:28	46:60	7	"short read from file %s (%s)\n"
water	46:28	0:0	8	"short read from file %s (%s)\n"
arg	47:20	47:28	7	filename
water	47:20	0:0	8	filename
arg	47:30	47:45	7	strerror(errno)
call	47:30	47:44	8	strerror
arg	47:39	47:44	9	errno
water	47:39	0:0	10	errno
water	47:46	0:0	6	;
return	48:12	48:22	6	(0)
water	48:19	0:0	7	(
water	48:20	0:0	7	0
water	48:21	0:0	7	)
water	49:8	0:0	6	}
call	50:8	50:41	4	initcolors
arg	50:19	50:27	5	localmap
water	50:19	0:0	6	localmap
arg	50:29	50:41	5	1<<localbits
water	50:29	0:0	6	1
op	50:30	0:0	6	<<
water	50:32	0:0	6	localbits
water	50:42	0:0	4	;
water	51:4	0:0	4	}
else	51:6	53:4	2
stmts	51:11	53:4	3	
if	51:11	53:4	4	(global)
cond	51:15	51:15	5	global
water	51:15	0:0	6	global
stmts	51:23	53:4	5	
water	51:23	0:0	6	{
call	52:8	52:43	6	initcolors
arg	52:19	52:28	7	globalmap
water	52:19	0:0	8	globalmap
arg	52:30	52:43	7	1<<globalbits
water	52:30	0:0	8	1
op	52:31	0:0	8	<<
water	52:33	0:0	8	globalbits
water	52:44	0:0	6	;
water	53:4	0:0	6	}
if	54:4	55:29	2	(( status =readraster ( ) ))
cond	54:8	54:30	3	( status =readraster ( ) )
water	54:8	0:0	4	(
water	54:9	0:0	4	status
op	54:16	0:0	4	=
call	54:18	54:29	4	readraster
water	54:30	0:0	4	)
stmts	55:1	55:29	3	
call	55:1	55:28	4	rasterize
arg	55:11	55:22	5	interleaved
water	55:11	0:0	6	interleaved
arg	55:24	55:28	5	mode
water	55:24	0:0	6	mode
water	55:29	0:0	4	;
call	56:4	56:20	2	_TIFFfree
arg	56:14	56:20	3	raster
water	56:14	0:0	4	raster
water	56:21	0:0	2	;
return	57:4	57:17	2	status
water	57:11	0:0	3	status

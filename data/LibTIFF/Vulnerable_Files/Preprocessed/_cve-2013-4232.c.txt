func	2:0	582:0	0	tsize_t	t2p_readwrite_pdf_image
params	2:31	0:0	1	
param	2:32	2:40	2	T2P *	t2p
param	2:42	2:53	2	TIFF *	input
param	2:55	2:67	2	TIFF *	output
stmnts	0:0	581:16	1	
decl	4:1	4:18	2	tsize_t	written
op	4:16	0:0	2	=
water	4:17	0:0	2	0
decl	5:1	5:27	2	unsigned char	*buffer
op	5:22	0:0	2	=
water	5:23	0:0	2	NULL
decl	6:1	6:33	2	unsigned char	*samplebuffer
op	6:28	0:0	2	=
water	6:29	0:0	2	NULL
decl	7:1	7:23	2	tsize_t	bufferoffset
op	7:21	0:0	2	=
water	7:22	0:0	2	0
decl	8:1	8:29	2	tsize_t	samplebufferoffset
op	8:27	0:0	2	=
water	8:28	0:0	2	0
decl	9:1	9:15	2	tsize_t	read
op	9:13	0:0	2	=
water	9:14	0:0	2	0
decl	10:1	10:13	2	tstrip_t	i
op	10:11	0:0	2	=
water	10:12	0:0	2	0
decl	11:1	11:13	2	tstrip_t	j
op	11:11	0:0	2	=
water	11:12	0:0	2	0
decl	12:1	12:22	2	tstrip_t	stripcount
op	12:20	0:0	2	=
water	12:21	0:0	2	0
decl	13:1	13:20	2	tsize_t	stripsize
op	13:18	0:0	2	=
water	13:19	0:0	2	0
decl	14:1	14:24	2	tsize_t	sepstripcount
op	14:22	0:0	2	=
water	14:23	0:0	2	0
decl	15:1	15:23	2	tsize_t	sepstripsize
op	15:21	0:0	2	=
water	15:22	0:0	2	0
decl	17:1	17:21	2	toff_t	inputoffset
op	17:19	0:0	2	=
water	17:20	0:0	2	0
decl	18:1	18:16	2	uint16	h_samp
op	18:14	0:0	2	=
water	18:15	0:0	2	1
decl	19:1	19:16	2	uint16	v_samp
op	19:14	0:0	2	=
water	19:15	0:0	2	1
decl	20:1	20:12	2	uint16	ri
op	20:10	0:0	2	=
water	20:11	0:0	2	1
decl	21:1	21:14	2	uint32	rows
op	21:12	0:0	2	=
water	21:13	0:0	2	0
decl	24:1	24:19	2	unsigned char	*jpt
decl	25:1	25:15	2	float	*xfloatp
decl	26:1	26:12	2	uint64	*sbc
decl	27:1	27:27	2	unsigned char	*stripbuffer
decl	28:1	28:22	2	tsize_t	striplength
op	28:20	0:0	2	=
water	28:21	0:0	2	0
decl	29:1	29:25	2	uint32	max_striplength
op	29:23	0:0	2	=
water	29:24	0:0	2	0
if	33:1	34:11	2	(t2p -> t2p_error != T2P_ERR_OK)
cond	33:5	33:23	3	t2p -> t2p_error != T2P_ERR_OK
water	33:5	0:0	4	t2p
op	33:8	0:0	4	->
water	33:10	0:0	4	t2p_error
op	33:20	0:0	4	!=
water	33:23	0:0	4	T2P_ERR_OK
stmts	34:2	34:11	3	
return	34:2	34:11	4	(0)
water	34:8	0:0	5	(
water	34:9	0:0	5	0
water	34:10	0:0	5	)
if	36:1	273:1	2	(t2p -> pdf_transcode == T2P_TRANSCODE_RAW)
cond	36:4	36:26	3	t2p -> pdf_transcode == T2P_TRANSCODE_RAW
water	36:4	0:0	4	t2p
op	36:7	0:0	4	->
water	36:9	0:0	4	pdf_transcode
op	36:23	0:0	4	==
water	36:26	0:0	4	T2P_TRANSCODE_RAW
stmts	36:44	273:1	3	
water	36:44	0:0	4	{
if	38:2	63:2	4	(t2p -> pdf_compression == T2P_COMPRESS_G4)
cond	38:5	38:29	5	t2p -> pdf_compression == T2P_COMPRESS_G4
water	38:5	0:0	6	t2p
op	38:8	0:0	6	->
water	38:10	0:0	6	pdf_compression
op	38:26	0:0	6	==
water	38:29	0:0	6	T2P_COMPRESS_G4
stmts	38:45	63:2	5	
water	38:45	0:0	6	{
water	39:3	0:0	6	buffer
op	39:10	0:0	6	=
water	39:12	0:0	6	(
water	39:13	0:0	6	unsigned
water	39:22	0:0	6	char
op	39:26	0:0	6	*
water	39:27	0:0	6	)
call	40:4	40:34	6	_TIFFmalloc
arg	40:16	40:34	7	t2p->tiff_datasize
water	40:16	0:0	8	t2p
op	40:19	0:0	8	->
water	40:21	0:0	8	tiff_datasize
water	40:35	0:0	6	;
if	41:3	48:3	6	(buffer == NULL)
cond	41:7	41:17	7	buffer == NULL
water	41:7	0:0	8	buffer
op	41:14	0:0	8	==
water	41:17	0:0	8	NULL
stmts	41:23	48:3	7	
water	41:23	0:0	8	{
call	42:4	45:24	8	TIFFError
arg	42:14	42:29	9	TIFF2PDF_MODULE
water	42:14	0:0	10	TIFF2PDF_MODULE
arg	43:1	43:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	43:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	44:5	44:39	9	(unsignedlong)t2p->tiff_datasize
water	44:5	0:0	10	(
water	44:6	0:0	10	unsigned
water	44:15	0:0	10	long
water	44:19	0:0	10	)
water	44:21	0:0	10	t2p
op	44:24	0:0	10	->
water	44:26	0:0	10	tiff_datasize
arg	45:5	45:24	9	TIFFFileName(input)
call	45:5	45:23	10	TIFFFileName
arg	45:18	45:23	11	input
water	45:18	0:0	12	input
water	45:25	0:0	8	;
water	46:4	0:0	8	t2p
op	46:7	0:0	8	->
water	46:9	0:0	8	t2p_error
op	46:19	0:0	8	=
water	46:21	0:0	8	T2P_ERR_ERROR
water	46:34	0:0	8	;
return	47:4	47:13	8	(0)
water	47:10	0:0	9	(
water	47:11	0:0	9	0
water	47:12	0:0	9	)
water	48:3	0:0	8	}
call	49:3	50:24	6	TIFFReadRawStrip
arg	49:20	49:25	7	input
water	49:20	0:0	8	input
arg	49:27	49:28	7	0
water	49:27	0:0	8	0
arg	49:30	49:46	7	(tdata_t)buffer
water	49:30	0:0	8	(
water	49:31	0:0	8	tdata_t
water	49:38	0:0	8	)
water	49:40	0:0	8	buffer
arg	50:6	50:24	7	t2p->tiff_datasize
water	50:6	0:0	8	t2p
op	50:9	0:0	8	->
water	50:11	0:0	8	tiff_datasize
water	50:25	0:0	6	;
if	51:3	58:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	51:7	51:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	51:7	0:0	8	t2p
op	51:10	0:0	8	->
water	51:12	0:0	8	tiff_fillorder
op	51:26	0:0	8	==
water	51:28	0:0	8	FILLORDER_LSB2MSB
stmts	51:46	58:3	7	
water	51:46	0:0	8	{
call	56:5	57:25	8	TIFFReverseBits
arg	56:21	56:27	9	buffer
water	56:21	0:0	10	buffer
arg	57:7	57:25	9	t2p->tiff_datasize
water	57:7	0:0	10	t2p
op	57:10	0:0	10	->
water	57:12	0:0	10	tiff_datasize
water	57:26	0:0	8	;
water	58:3	0:0	8	}
call	59:3	60:28	6	t2pWriteFile
arg	59:16	59:22	7	output
water	59:16	0:0	8	output
arg	59:24	59:40	7	(tdata_t)buffer
water	59:24	0:0	8	(
water	59:25	0:0	8	tdata_t
water	59:32	0:0	8	)
water	59:34	0:0	8	buffer
arg	60:10	60:28	7	t2p->tiff_datasize
water	60:10	0:0	8	t2p
op	60:13	0:0	8	->
water	60:15	0:0	8	tiff_datasize
water	60:29	0:0	6	;
call	61:3	61:19	6	_TIFFfree
arg	61:13	61:19	7	buffer
water	61:13	0:0	8	buffer
water	61:20	0:0	6	;
return	62:3	62:29	6	(t2p->tiff_datasize)
water	62:9	0:0	7	(
water	62:10	0:0	7	t2p
op	62:13	0:0	7	->
water	62:15	0:0	7	tiff_datasize
water	62:28	0:0	7	)
water	63:2	0:0	6	}
if	66:2	88:2	4	(t2p -> pdf_compression == T2P_COMPRESS_ZIP)
cond	66:6	66:30	5	t2p -> pdf_compression == T2P_COMPRESS_ZIP
water	66:6	0:0	6	t2p
op	66:9	0:0	6	->
water	66:11	0:0	6	pdf_compression
op	66:27	0:0	6	==
water	66:30	0:0	6	T2P_COMPRESS_ZIP
stmts	66:48	88:2	5	
water	66:48	0:0	6	{
water	67:3	0:0	6	buffer
op	67:10	0:0	6	=
water	67:12	0:0	6	(
water	67:13	0:0	6	unsigned
water	67:22	0:0	6	char
op	67:26	0:0	6	*
water	67:27	0:0	6	)
call	68:4	68:34	6	_TIFFmalloc
arg	68:16	68:34	7	t2p->tiff_datasize
water	68:16	0:0	8	t2p
op	68:19	0:0	8	->
water	68:21	0:0	8	tiff_datasize
water	68:35	0:0	6	;
if	69:3	76:3	6	(buffer == NULL)
cond	69:6	69:16	7	buffer == NULL
water	69:6	0:0	8	buffer
op	69:13	0:0	8	==
water	69:16	0:0	8	NULL
stmts	69:21	76:3	7	
water	69:21	0:0	8	{
call	70:4	73:24	8	TIFFError
arg	70:14	70:29	9	TIFF2PDF_MODULE
water	70:14	0:0	10	TIFF2PDF_MODULE
arg	71:1	71:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	71:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	72:5	72:39	9	(unsignedlong)t2p->tiff_datasize
water	72:5	0:0	10	(
water	72:6	0:0	10	unsigned
water	72:15	0:0	10	long
water	72:19	0:0	10	)
water	72:21	0:0	10	t2p
op	72:24	0:0	10	->
water	72:26	0:0	10	tiff_datasize
arg	73:5	73:24	9	TIFFFileName(input)
call	73:5	73:23	10	TIFFFileName
arg	73:18	73:23	11	input
water	73:18	0:0	12	input
water	73:25	0:0	8	;
water	74:4	0:0	8	t2p
op	74:7	0:0	8	->
water	74:9	0:0	8	t2p_error
op	74:19	0:0	8	=
water	74:21	0:0	8	T2P_ERR_ERROR
water	74:34	0:0	8	;
return	75:4	75:13	8	(0)
water	75:10	0:0	9	(
water	75:11	0:0	9	0
water	75:12	0:0	9	)
water	76:3	0:0	8	}
call	77:24	77:60	6	memset
arg	77:31	77:37	7	buffer
water	77:31	0:0	8	buffer
arg	77:39	77:40	7	0
water	77:39	0:0	8	0
arg	77:42	77:60	7	t2p->tiff_datasize
water	77:42	0:0	8	t2p
op	77:45	0:0	8	->
water	77:47	0:0	8	tiff_datasize
water	77:61	0:0	6	;
call	78:3	79:24	6	TIFFReadRawStrip
arg	78:20	78:25	7	input
water	78:20	0:0	8	input
arg	78:27	78:28	7	0
water	78:27	0:0	8	0
arg	78:30	78:46	7	(tdata_t)buffer
water	78:30	0:0	8	(
water	78:31	0:0	8	tdata_t
water	78:38	0:0	8	)
water	78:40	0:0	8	buffer
arg	79:6	79:24	7	t2p->tiff_datasize
water	79:6	0:0	8	t2p
op	79:9	0:0	8	->
water	79:11	0:0	8	tiff_datasize
water	79:25	0:0	6	;
if	80:3	83:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	80:7	80:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	80:7	0:0	8	t2p
op	80:10	0:0	8	->
water	80:12	0:0	8	tiff_fillorder
op	80:26	0:0	8	==
water	80:28	0:0	8	FILLORDER_LSB2MSB
stmts	80:47	83:3	7	
water	80:47	0:0	8	{
call	81:5	82:25	8	TIFFReverseBits
arg	81:21	81:27	9	buffer
water	81:21	0:0	10	buffer
arg	82:7	82:25	9	t2p->tiff_datasize
water	82:7	0:0	10	t2p
op	82:10	0:0	10	->
water	82:12	0:0	10	tiff_datasize
water	82:26	0:0	8	;
water	83:3	0:0	8	}
call	84:3	85:28	6	t2pWriteFile
arg	84:16	84:22	7	output
water	84:16	0:0	8	output
arg	84:24	84:40	7	(tdata_t)buffer
water	84:24	0:0	8	(
water	84:25	0:0	8	tdata_t
water	84:32	0:0	8	)
water	84:34	0:0	8	buffer
arg	85:10	85:28	7	t2p->tiff_datasize
water	85:10	0:0	8	t2p
op	85:13	0:0	8	->
water	85:15	0:0	8	tiff_datasize
water	85:29	0:0	6	;
call	86:3	86:19	6	_TIFFfree
arg	86:13	86:19	7	buffer
water	86:13	0:0	8	buffer
water	86:20	0:0	6	;
return	87:3	87:29	6	(t2p->tiff_datasize)
water	87:9	0:0	7	(
water	87:10	0:0	7	t2p
op	87:13	0:0	7	->
water	87:15	0:0	7	tiff_datasize
water	87:28	0:0	7	)
water	88:2	0:0	6	}
if	91:2	208:2	4	(t2p -> tiff_compression == COMPRESSION_OJPEG)
cond	91:5	91:30	5	t2p -> tiff_compression == COMPRESSION_OJPEG
water	91:5	0:0	6	t2p
op	91:8	0:0	6	->
water	91:10	0:0	6	tiff_compression
op	91:27	0:0	6	==
water	91:30	0:0	6	COMPRESSION_OJPEG
stmts	91:49	208:2	5	
water	91:49	0:0	6	{
if	93:3	162:3	6	(t2p -> tiff_dataoffset != 0)
cond	93:6	93:30	7	t2p -> tiff_dataoffset != 0
water	93:6	0:0	8	t2p
op	93:9	0:0	8	->
water	93:11	0:0	8	tiff_dataoffset
op	93:27	0:0	8	!=
water	93:30	0:0	8	0
stmts	93:33	162:3	7	
water	93:33	0:0	8	{
water	94:4	0:0	8	buffer
op	94:11	0:0	8	=
water	94:13	0:0	8	(
water	94:14	0:0	8	unsigned
water	94:23	0:0	8	char
op	94:27	0:0	8	*
water	94:28	0:0	8	)
call	95:5	95:35	8	_TIFFmalloc
arg	95:17	95:35	9	t2p->tiff_datasize
water	95:17	0:0	10	t2p
op	95:20	0:0	10	->
water	95:22	0:0	10	tiff_datasize
water	95:36	0:0	8	;
if	96:4	103:4	8	(buffer == NULL)
cond	96:7	96:17	9	buffer == NULL
water	96:7	0:0	10	buffer
op	96:14	0:0	10	==
water	96:17	0:0	10	NULL
stmts	96:23	103:4	9	
water	96:23	0:0	10	{
call	97:5	100:25	10	TIFFError
arg	97:15	97:30	11	TIFF2PDF_MODULE
water	97:15	0:0	12	TIFF2PDF_MODULE
arg	98:1	98:69	11	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	98:1	0:0	12	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	99:6	99:40	11	(unsignedlong)t2p->tiff_datasize
water	99:6	0:0	12	(
water	99:7	0:0	12	unsigned
water	99:16	0:0	12	long
water	99:20	0:0	12	)
water	99:22	0:0	12	t2p
op	99:25	0:0	12	->
water	99:27	0:0	12	tiff_datasize
arg	100:6	100:25	11	TIFFFileName(input)
call	100:6	100:24	12	TIFFFileName
arg	100:19	100:24	13	input
water	100:19	0:0	14	input
water	100:26	0:0	10	;
water	101:5	0:0	10	t2p
op	101:8	0:0	10	->
water	101:10	0:0	10	t2p_error
op	101:20	0:0	10	=
water	101:22	0:0	10	T2P_ERR_ERROR
water	101:35	0:0	10	;
return	102:5	102:14	10	(0)
water	102:11	0:0	11	(
water	102:12	0:0	11	0
water	102:13	0:0	11	)
water	103:4	0:0	10	}
call	104:32	104:68	8	memset
arg	104:39	104:45	9	buffer
water	104:39	0:0	10	buffer
arg	104:47	104:48	9	0
water	104:47	0:0	10	0
arg	104:50	104:68	9	t2p->tiff_datasize
water	104:50	0:0	10	t2p
op	104:53	0:0	10	->
water	104:55	0:0	10	tiff_datasize
water	104:69	0:0	8	;
if	105:4	119:4	8	(t2p -> pdf_ojpegiflength == 0)
cond	105:7	105:31	9	t2p -> pdf_ojpegiflength == 0
water	105:7	0:0	10	t2p
op	105:10	0:0	10	->
water	105:12	0:0	10	pdf_ojpegiflength
op	105:29	0:0	10	==
water	105:31	0:0	10	0
stmts	105:33	119:4	9	
water	105:33	0:0	10	{
water	106:5	0:0	10	inputoffset
op	106:16	0:0	10	=
call	106:17	107:17	10	t2pSeekFile
arg	106:29	106:34	11	input
water	106:29	0:0	12	input
arg	106:36	106:37	11	0
water	106:36	0:0	12	0
arg	107:9	107:17	11	SEEK_CUR
water	107:9	0:0	12	SEEK_CUR
water	107:18	0:0	10	;
call	108:5	110:19	10	t2pSeekFile
arg	108:17	108:22	11	input
water	108:17	0:0	12	input
arg	109:11	109:31	11	t2p->tiff_dataoffset
water	109:11	0:0	12	t2p
op	109:14	0:0	12	->
water	109:16	0:0	12	tiff_dataoffset
arg	110:11	110:19	11	SEEK_SET
water	110:11	0:0	12	SEEK_SET
water	110:20	0:0	10	;
call	111:5	112:29	10	t2pReadFile
arg	111:17	111:22	11	input
water	111:17	0:0	12	input
arg	111:24	111:40	11	(tdata_t)buffer
water	111:24	0:0	12	(
water	111:25	0:0	12	tdata_t
water	111:32	0:0	12	)
water	111:34	0:0	12	buffer
arg	112:11	112:29	11	t2p->tiff_datasize
water	112:11	0:0	12	t2p
op	112:14	0:0	12	->
water	112:16	0:0	12	tiff_datasize
water	112:30	0:0	10	;
call	113:5	114:19	10	t2pSeekFile
arg	113:17	113:22	11	input
water	113:17	0:0	12	input
arg	113:24	113:35	11	inputoffset
water	113:24	0:0	12	inputoffset
arg	114:11	114:19	11	SEEK_SET
water	114:11	0:0	12	SEEK_SET
water	114:20	0:0	10	;
call	115:5	116:30	10	t2pWriteFile
arg	115:18	115:24	11	output
water	115:18	0:0	12	output
arg	115:26	115:42	11	(tdata_t)buffer
water	115:26	0:0	12	(
water	115:27	0:0	12	tdata_t
water	115:34	0:0	12	)
water	115:36	0:0	12	buffer
arg	116:12	116:30	11	t2p->tiff_datasize
water	116:12	0:0	12	t2p
op	116:15	0:0	12	->
water	116:17	0:0	12	tiff_datasize
water	116:31	0:0	10	;
call	117:5	117:21	10	_TIFFfree
arg	117:15	117:21	11	buffer
water	117:15	0:0	12	buffer
water	117:22	0:0	10	;
return	118:5	118:31	10	(t2p->tiff_datasize)
water	118:11	0:0	11	(
water	118:12	0:0	11	t2p
op	118:15	0:0	11	->
water	118:17	0:0	11	tiff_datasize
water	118:30	0:0	11	)
water	119:4	0:0	10	}
else	119:6	161:4	8
stmts	119:11	161:4	9	
water	119:11	0:0	10	{
water	120:5	0:0	10	inputoffset
op	120:16	0:0	10	=
call	120:17	121:17	10	t2pSeekFile
arg	120:29	120:34	11	input
water	120:29	0:0	12	input
arg	120:36	120:37	11	0
water	120:36	0:0	12	0
arg	121:9	121:17	11	SEEK_CUR
water	121:9	0:0	12	SEEK_CUR
water	121:18	0:0	10	;
call	122:5	124:19	10	t2pSeekFile
arg	122:17	122:22	11	input
water	122:17	0:0	12	input
arg	123:11	123:31	11	t2p->tiff_dataoffset
water	123:11	0:0	12	t2p
op	123:14	0:0	12	->
water	123:16	0:0	12	tiff_dataoffset
arg	124:11	124:19	11	SEEK_SET
water	124:11	0:0	12	SEEK_SET
water	124:20	0:0	10	;
water	125:5	0:0	10	bufferoffset
op	125:18	0:0	10	=
call	125:20	127:28	10	t2pReadFile
arg	125:32	125:37	11	input
water	125:32	0:0	12	input
arg	126:6	126:22	11	(tdata_t)buffer
water	126:6	0:0	12	(
water	126:7	0:0	12	tdata_t
water	126:14	0:0	12	)
water	126:16	0:0	12	buffer
arg	127:6	127:28	11	t2p->pdf_ojpegiflength
water	127:6	0:0	12	t2p
op	127:9	0:0	12	->
water	127:11	0:0	12	pdf_ojpegiflength
water	127:29	0:0	10	;
water	128:5	0:0	10	t2p
op	128:8	0:0	10	->
water	128:10	0:0	10	pdf_ojpegiflength
op	128:28	0:0	10	=
water	128:30	0:0	10	0
water	128:31	0:0	10	;
call	129:5	130:19	10	t2pSeekFile
arg	129:17	129:22	11	input
water	129:17	0:0	12	input
arg	129:24	129:35	11	inputoffset
water	129:24	0:0	12	inputoffset
arg	130:11	130:19	11	SEEK_SET
water	130:11	0:0	12	SEEK_SET
water	130:20	0:0	10	;
call	131:5	133:27	10	TIFFGetField
arg	131:18	131:23	11	input
water	131:18	0:0	12	input
arg	132:11	132:35	11	TIFFTAG_YCBCRSUBSAMPLING
water	132:11	0:0	12	TIFFTAG_YCBCRSUBSAMPLING
arg	133:11	133:18	11	&h_samp
op	133:11	0:0	12	&
water	133:12	0:0	12	h_samp
arg	133:20	133:27	11	&v_samp
op	133:20	0:0	12	&
water	133:21	0:0	12	v_samp
water	133:28	0:0	10	;
water	134:5	0:0	10	buffer
op	134:11	0:0	10	[
water	134:12	0:0	10	bufferoffset
op	134:24	0:0	10	++
op	134:26	0:0	10	]
op	134:27	0:0	10	=
water	134:29	0:0	10	0
water	134:30	0:0	10	xff
water	134:33	0:0	10	;
water	135:5	0:0	10	buffer
op	135:11	0:0	10	[
water	135:12	0:0	10	bufferoffset
op	135:24	0:0	10	++
op	135:26	0:0	10	]
op	135:27	0:0	10	=
water	135:29	0:0	10	0
water	135:30	0:0	10	xdd
water	135:33	0:0	10	;
water	136:5	0:0	10	buffer
op	136:11	0:0	10	[
water	136:12	0:0	10	bufferoffset
op	136:24	0:0	10	++
op	136:26	0:0	10	]
op	136:27	0:0	10	=
water	136:29	0:0	10	0
water	136:30	0:0	10	x00
water	136:33	0:0	10	;
water	137:5	0:0	10	buffer
op	137:11	0:0	10	[
water	137:12	0:0	10	bufferoffset
op	137:24	0:0	10	++
op	137:26	0:0	10	]
op	137:27	0:0	10	=
water	137:29	0:0	10	0
water	137:30	0:0	10	x04
water	137:33	0:0	10	;
water	138:5	0:0	10	h_samp
op	138:11	0:0	10	*=
water	138:13	0:0	10	8
water	138:14	0:0	10	;
water	139:5	0:0	10	v_samp
op	139:11	0:0	10	*=
water	139:13	0:0	10	8
water	139:14	0:0	10	;
water	140:5	0:0	10	ri
op	140:7	0:0	10	=
water	140:8	0:0	10	(
water	140:9	0:0	10	t2p
op	140:12	0:0	10	->
water	140:14	0:0	10	tiff_width
op	140:24	0:0	10	+
water	140:25	0:0	10	h_samp
op	140:31	0:0	10	-
water	140:32	0:0	10	1
water	140:33	0:0	10	)
op	140:35	0:0	10	/
water	140:37	0:0	10	h_samp
water	140:43	0:0	10	;
call	141:5	143:16	10	TIFFGetField
arg	141:18	141:23	11	input
water	141:18	0:0	12	input
arg	142:11	142:31	11	TIFFTAG_ROWSPERSTRIP
water	142:11	0:0	12	TIFFTAG_ROWSPERSTRIP
arg	143:11	143:16	11	&rows
op	143:11	0:0	12	&
water	143:12	0:0	12	rows
water	143:17	0:0	10	;
water	144:5	0:0	10	ri
op	144:7	0:0	10	*=
water	144:9	0:0	10	(
water	144:10	0:0	10	rows
op	144:14	0:0	10	+
water	144:15	0:0	10	v_samp
op	144:21	0:0	10	-
water	144:22	0:0	10	1
water	144:23	0:0	10	)
op	144:24	0:0	10	/
water	144:25	0:0	10	v_samp
water	144:31	0:0	10	;
water	145:5	0:0	10	buffer
op	145:11	0:0	10	[
water	145:12	0:0	10	bufferoffset
op	145:24	0:0	10	++
op	145:26	0:0	10	]
op	145:27	0:0	10	=
water	145:29	0:0	10	(
water	145:30	0:0	10	ri
op	145:32	0:0	10	>>
water	145:34	0:0	10	8
water	145:35	0:0	10	)
op	145:37	0:0	10	&
water	145:39	0:0	10	0
water	145:40	0:0	10	xff
water	145:43	0:0	10	;
water	146:5	0:0	10	buffer
op	146:11	0:0	10	[
water	146:12	0:0	10	bufferoffset
op	146:24	0:0	10	++
op	146:26	0:0	10	]
op	146:27	0:0	10	=
water	146:29	0:0	10	ri
op	146:32	0:0	10	&
water	146:34	0:0	10	0
water	146:35	0:0	10	xff
water	146:38	0:0	10	;
water	147:5	0:0	10	stripcount
op	147:15	0:0	10	=
call	147:16	147:40	10	TIFFNumberOfStrips
arg	147:35	147:40	11	input
water	147:35	0:0	12	input
water	147:41	0:0	10	;
for	148:5	157:5	10	(i = 0 ;i < stripcount;i ++)
forinit	148:9	148:12	11	i = 0 ;
water	148:9	0:0	12	i
op	148:10	0:0	12	=
water	148:11	0:0	12	0
water	148:12	0:0	12	;
cond	148:13	148:15	11	i < stripcount
water	148:13	0:0	12	i
op	148:14	0:0	12	<
water	148:15	0:0	12	stripcount
forexpr	148:26	148:27	11	i ++
water	148:26	0:0	12	i
op	148:27	0:0	12	++
stmts	148:30	157:5	11	
water	148:30	0:0	12	{
if	149:6	152:6	12	(i != 0)
cond	149:9	149:14	13	i != 0
water	149:9	0:0	14	i
op	149:11	0:0	14	!=
water	149:14	0:0	14	0
stmts	149:17	152:6	13	
water	149:17	0:0	14	{
water	150:7	0:0	14	buffer
op	150:13	0:0	14	[
water	150:14	0:0	14	bufferoffset
op	150:26	0:0	14	++
op	150:28	0:0	14	]
op	150:29	0:0	14	=
water	150:30	0:0	14	0
water	150:31	0:0	14	xff
water	150:34	0:0	14	;
water	151:7	0:0	14	buffer
op	151:13	0:0	14	[
water	151:14	0:0	14	bufferoffset
op	151:26	0:0	14	++
op	151:28	0:0	14	]
op	151:29	0:0	14	=
water	151:30	0:0	14	(
water	151:31	0:0	14	0
water	151:32	0:0	14	xd0
op	151:36	0:0	14	|
water	151:38	0:0	14	(
water	151:39	0:0	14	(
water	151:40	0:0	14	i
op	151:41	0:0	14	-
water	151:42	0:0	14	1
water	151:43	0:0	14	)
op	151:44	0:0	14	%
water	151:45	0:0	14	8
water	151:46	0:0	14	)
water	151:47	0:0	14	)
water	151:48	0:0	14	;
water	152:6	0:0	14	}
water	153:6	0:0	12	bufferoffset
op	153:18	0:0	12	+=
call	153:20	156:9	12	TIFFReadRawStrip
arg	153:37	153:42	13	input
water	153:37	0:0	14	input
arg	154:7	154:8	13	i
water	154:7	0:0	14	i
arg	155:7	155:58	13	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	155:7	0:0	14	(
water	155:8	0:0	14	tdata_t
water	155:15	0:0	14	)
op	155:17	0:0	14	&
water	155:18	0:0	14	(
water	155:19	0:0	14	(
water	155:20	0:0	14	(
water	155:21	0:0	14	unsigned
water	155:30	0:0	14	char
op	155:34	0:0	14	*
water	155:35	0:0	14	)
water	155:36	0:0	14	buffer
water	155:42	0:0	14	)
op	155:43	0:0	14	[
water	155:44	0:0	14	bufferoffset
op	155:56	0:0	14	]
water	155:57	0:0	14	)
arg	156:7	156:9	13	-1
op	156:7	0:0	14	-
water	156:8	0:0	14	1
water	156:10	0:0	12	;
water	157:5	0:0	12	}
call	158:5	158:56	10	t2pWriteFile
arg	158:18	158:24	11	output
water	158:18	0:0	12	output
arg	158:26	158:42	11	(tdata_t)buffer
water	158:26	0:0	12	(
water	158:27	0:0	12	tdata_t
water	158:34	0:0	12	)
water	158:36	0:0	12	buffer
arg	158:44	158:56	11	bufferoffset
water	158:44	0:0	12	bufferoffset
water	158:57	0:0	10	;
call	159:5	159:21	10	_TIFFfree
arg	159:15	159:21	11	buffer
water	159:15	0:0	12	buffer
water	159:22	0:0	10	;
return	160:5	160:25	10	(bufferoffset)
water	160:11	0:0	11	(
water	160:12	0:0	11	bufferoffset
water	160:24	0:0	11	)
water	161:4	0:0	10	}
water	162:3	0:0	8	}
else	162:5	206:3	6
stmts	162:10	206:3	7	
water	162:10	0:0	8	{
if	163:4	169:4	8	(! t2p -> pdf_ojpegdata)
cond	163:7	163:14	9	! t2p -> pdf_ojpegdata
op	163:7	0:0	10	!
water	163:9	0:0	10	t2p
op	163:12	0:0	10	->
water	163:14	0:0	10	pdf_ojpegdata
stmts	163:28	169:4	9	
water	163:28	0:0	10	{
call	164:5	166:25	10	TIFFError
arg	164:15	164:30	11	TIFF2PDF_MODULE
water	164:15	0:0	12	TIFF2PDF_MODULE
arg	165:4	165:51	11	"No support for OJPEG image %s with bad tables"
water	165:4	0:0	12	"No support for OJPEG image %s with bad tables"
arg	166:6	166:25	11	TIFFFileName(input)
call	166:6	166:24	12	TIFFFileName
arg	166:19	166:24	13	input
water	166:19	0:0	14	input
water	166:26	0:0	10	;
water	167:5	0:0	10	t2p
op	167:8	0:0	10	->
water	167:10	0:0	10	t2p_error
op	167:20	0:0	10	=
water	167:22	0:0	10	T2P_ERR_ERROR
water	167:35	0:0	10	;
return	168:5	168:14	10	(0)
water	168:11	0:0	11	(
water	168:12	0:0	11	0
water	168:13	0:0	11	)
water	169:4	0:0	10	}
water	170:4	0:0	8	buffer
op	170:11	0:0	8	=
water	170:13	0:0	8	(
water	170:14	0:0	8	unsigned
water	170:23	0:0	8	char
op	170:27	0:0	8	*
water	170:28	0:0	8	)
call	171:5	171:35	8	_TIFFmalloc
arg	171:17	171:35	9	t2p->tiff_datasize
water	171:17	0:0	10	t2p
op	171:20	0:0	10	->
water	171:22	0:0	10	tiff_datasize
water	171:36	0:0	8	;
if	172:4	179:4	8	(buffer == NULL)
cond	172:7	172:15	9	buffer == NULL
water	172:7	0:0	10	buffer
op	172:13	0:0	10	==
water	172:15	0:0	10	NULL
stmts	172:20	179:4	9	
water	172:20	0:0	10	{
call	173:5	176:25	10	TIFFError
arg	173:15	173:30	11	TIFF2PDF_MODULE
water	173:15	0:0	12	TIFF2PDF_MODULE
arg	174:1	174:69	11	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	174:1	0:0	12	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	175:6	175:40	11	(unsignedlong)t2p->tiff_datasize
water	175:6	0:0	12	(
water	175:7	0:0	12	unsigned
water	175:16	0:0	12	long
water	175:20	0:0	12	)
water	175:22	0:0	12	t2p
op	175:25	0:0	12	->
water	175:27	0:0	12	tiff_datasize
arg	176:6	176:25	11	TIFFFileName(input)
call	176:6	176:24	12	TIFFFileName
arg	176:19	176:24	13	input
water	176:19	0:0	14	input
water	176:26	0:0	10	;
water	177:5	0:0	10	t2p
op	177:8	0:0	10	->
water	177:10	0:0	10	t2p_error
op	177:20	0:0	10	=
water	177:22	0:0	10	T2P_ERR_ERROR
water	177:35	0:0	10	;
return	178:5	178:14	10	(0)
water	178:11	0:0	11	(
water	178:12	0:0	11	0
water	178:13	0:0	11	)
water	179:4	0:0	10	}
call	180:32	180:68	8	memset
arg	180:39	180:45	9	buffer
water	180:39	0:0	10	buffer
arg	180:47	180:48	9	0
water	180:47	0:0	10	0
arg	180:50	180:68	9	t2p->tiff_datasize
water	180:50	0:0	10	t2p
op	180:53	0:0	10	->
water	180:55	0:0	10	tiff_datasize
water	180:69	0:0	8	;
call	181:4	181:68	8	_TIFFmemcpy
arg	181:16	181:22	9	buffer
water	181:16	0:0	10	buffer
arg	181:24	181:42	9	t2p->pdf_ojpegdata
water	181:24	0:0	10	t2p
op	181:27	0:0	10	->
water	181:29	0:0	10	pdf_ojpegdata
arg	181:44	181:68	9	t2p->pdf_ojpegdatalength
water	181:44	0:0	10	t2p
op	181:47	0:0	10	->
water	181:49	0:0	10	pdf_ojpegdatalength
water	181:69	0:0	8	;
water	182:4	0:0	8	bufferoffset
op	182:16	0:0	8	=
water	182:17	0:0	8	t2p
op	182:20	0:0	8	->
water	182:22	0:0	8	pdf_ojpegdatalength
water	182:41	0:0	8	;
water	183:4	0:0	8	stripcount
op	183:14	0:0	8	=
call	183:15	183:39	8	TIFFNumberOfStrips
arg	183:34	183:39	9	input
water	183:34	0:0	10	input
water	183:40	0:0	8	;
for	184:4	193:4	8	(i = 0 ;i < stripcount;i ++)
forinit	184:8	184:11	9	i = 0 ;
water	184:8	0:0	10	i
op	184:9	0:0	10	=
water	184:10	0:0	10	0
water	184:11	0:0	10	;
cond	184:12	184:14	9	i < stripcount
water	184:12	0:0	10	i
op	184:13	0:0	10	<
water	184:14	0:0	10	stripcount
forexpr	184:25	184:26	9	i ++
water	184:25	0:0	10	i
op	184:26	0:0	10	++
stmts	184:29	193:4	9	
water	184:29	0:0	10	{
if	185:5	188:5	10	(i != 0)
cond	185:8	185:13	11	i != 0
water	185:8	0:0	12	i
op	185:10	0:0	12	!=
water	185:13	0:0	12	0
stmts	185:15	188:5	11	
water	185:15	0:0	12	{
water	186:6	0:0	12	buffer
op	186:12	0:0	12	[
water	186:13	0:0	12	bufferoffset
op	186:25	0:0	12	++
op	186:27	0:0	12	]
op	186:28	0:0	12	=
water	186:29	0:0	12	0
water	186:30	0:0	12	xff
water	186:33	0:0	12	;
water	187:6	0:0	12	buffer
op	187:12	0:0	12	[
water	187:13	0:0	12	bufferoffset
op	187:25	0:0	12	++
op	187:27	0:0	12	]
op	187:28	0:0	12	=
water	187:29	0:0	12	(
water	187:30	0:0	12	0
water	187:31	0:0	12	xd0
op	187:35	0:0	12	|
water	187:37	0:0	12	(
water	187:38	0:0	12	(
water	187:39	0:0	12	i
op	187:40	0:0	12	-
water	187:41	0:0	12	1
water	187:42	0:0	12	)
op	187:43	0:0	12	%
water	187:44	0:0	12	8
water	187:45	0:0	12	)
water	187:46	0:0	12	)
water	187:47	0:0	12	;
water	188:5	0:0	12	}
water	189:5	0:0	10	bufferoffset
op	189:17	0:0	10	+=
call	189:19	192:8	10	TIFFReadRawStrip
arg	189:36	189:41	11	input
water	189:36	0:0	12	input
arg	190:6	190:7	11	i
water	190:6	0:0	12	i
arg	191:6	191:57	11	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	191:6	0:0	12	(
water	191:7	0:0	12	tdata_t
water	191:14	0:0	12	)
op	191:16	0:0	12	&
water	191:17	0:0	12	(
water	191:18	0:0	12	(
water	191:19	0:0	12	(
water	191:20	0:0	12	unsigned
water	191:29	0:0	12	char
op	191:33	0:0	12	*
water	191:34	0:0	12	)
water	191:35	0:0	12	buffer
water	191:41	0:0	12	)
op	191:42	0:0	12	[
water	191:43	0:0	12	bufferoffset
op	191:55	0:0	12	]
water	191:56	0:0	12	)
arg	192:6	192:8	11	-1
op	192:6	0:0	12	-
water	192:7	0:0	12	1
water	192:9	0:0	10	;
water	193:4	0:0	10	}
if	194:4	197:4	8	(! ( ( buffer [ bufferoffset - 1 ] == 0 xd9 ) && ( buffer [ bufferoffset - 2 ] == 0 xff ) ))
cond	194:8	194:77	9	! ( ( buffer [ bufferoffset - 1 ] == 0 xd9 ) && ( buffer [ bufferoffset - 2 ] == 0 xff ) )
op	194:8	0:0	10	!
water	194:10	0:0	10	(
water	194:12	0:0	10	(
water	194:13	0:0	10	buffer
op	194:19	0:0	10	[
water	194:20	0:0	10	bufferoffset
op	194:32	0:0	10	-
water	194:33	0:0	10	1
op	194:34	0:0	10	]
op	194:35	0:0	10	==
water	194:37	0:0	10	0
water	194:38	0:0	10	xd9
water	194:41	0:0	10	)
op	194:43	0:0	10	&&
water	194:46	0:0	10	(
water	194:47	0:0	10	buffer
op	194:53	0:0	10	[
water	194:54	0:0	10	bufferoffset
op	194:66	0:0	10	-
water	194:67	0:0	10	2
op	194:68	0:0	10	]
op	194:69	0:0	10	==
water	194:71	0:0	10	0
water	194:72	0:0	10	xff
water	194:75	0:0	10	)
water	194:77	0:0	10	)
stmts	194:80	197:4	9	
water	194:80	0:0	10	{
water	195:6	0:0	10	buffer
op	195:12	0:0	10	[
water	195:13	0:0	10	bufferoffset
op	195:25	0:0	10	++
op	195:27	0:0	10	]
op	195:28	0:0	10	=
water	195:29	0:0	10	0
water	195:30	0:0	10	xff
water	195:33	0:0	10	;
water	196:6	0:0	10	buffer
op	196:12	0:0	10	[
water	196:13	0:0	10	bufferoffset
op	196:25	0:0	10	++
op	196:27	0:0	10	]
op	196:28	0:0	10	=
water	196:29	0:0	10	0
water	196:30	0:0	10	xd9
water	196:33	0:0	10	;
water	197:4	0:0	10	}
call	198:4	198:55	8	t2pWriteFile
arg	198:17	198:23	9	output
water	198:17	0:0	10	output
arg	198:25	198:41	9	(tdata_t)buffer
water	198:25	0:0	10	(
water	198:26	0:0	10	tdata_t
water	198:33	0:0	10	)
water	198:35	0:0	10	buffer
arg	198:43	198:55	9	bufferoffset
water	198:43	0:0	10	bufferoffset
water	198:56	0:0	8	;
call	199:4	199:20	8	_TIFFfree
arg	199:14	199:20	9	buffer
water	199:14	0:0	10	buffer
water	199:21	0:0	8	;
return	200:4	200:24	8	(bufferoffset)
water	200:10	0:0	9	(
water	200:11	0:0	9	bufferoffset
water	200:23	0:0	9	)
call	201:4	203:24	8	TIFFError
arg	201:14	201:29	9	TIFF2PDF_MODULE
water	201:14	0:0	10	TIFF2PDF_MODULE
arg	202:1	202:69	9	"No support for OJPEG image %s with no JPEG File Interchange offset"
water	202:1	0:0	10	"No support for OJPEG image %s with no JPEG File Interchange offset"
arg	203:5	203:24	9	TIFFFileName(input)
call	203:5	203:23	10	TIFFFileName
arg	203:18	203:23	11	input
water	203:18	0:0	12	input
water	203:25	0:0	8	;
water	204:4	0:0	8	t2p
op	204:7	0:0	8	->
water	204:9	0:0	8	t2p_error
op	204:19	0:0	8	=
water	204:21	0:0	8	T2P_ERR_ERROR
water	204:34	0:0	8	;
return	205:4	205:13	8	(0)
water	205:10	0:0	9	(
water	205:11	0:0	9	0
water	205:12	0:0	9	)
water	206:3	0:0	8	}
return	207:3	207:29	6	(t2p->tiff_datasize)
water	207:9	0:0	7	(
water	207:10	0:0	7	t2p
op	207:13	0:0	7	->
water	207:15	0:0	7	tiff_datasize
water	207:28	0:0	7	)
water	208:2	0:0	6	}
if	211:2	270:2	4	(t2p -> tiff_compression == COMPRESSION_JPEG)
cond	211:5	211:30	5	t2p -> tiff_compression == COMPRESSION_JPEG
water	211:5	0:0	6	t2p
op	211:8	0:0	6	->
water	211:10	0:0	6	tiff_compression
op	211:27	0:0	6	==
water	211:30	0:0	6	COMPRESSION_JPEG
stmts	211:48	270:2	5	
water	211:48	0:0	6	{
decl	212:3	212:19	6	uint32	count
op	212:16	0:0	6	=
water	212:18	0:0	6	0
water	213:3	0:0	6	buffer
op	213:10	0:0	6	=
water	213:12	0:0	6	(
water	213:13	0:0	6	unsigned
water	213:22	0:0	6	char
op	213:26	0:0	6	*
water	213:27	0:0	6	)
call	214:4	214:34	6	_TIFFmalloc
arg	214:16	214:34	7	t2p->tiff_datasize
water	214:16	0:0	8	t2p
op	214:19	0:0	8	->
water	214:21	0:0	8	tiff_datasize
water	214:35	0:0	6	;
if	215:3	222:3	6	(buffer == NULL)
cond	215:6	215:14	7	buffer == NULL
water	215:6	0:0	8	buffer
op	215:12	0:0	8	==
water	215:14	0:0	8	NULL
stmts	215:19	222:3	7	
water	215:19	0:0	8	{
call	216:4	219:24	8	TIFFError
arg	216:14	216:29	9	TIFF2PDF_MODULE
water	216:14	0:0	10	TIFF2PDF_MODULE
arg	217:1	217:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	217:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	218:5	218:39	9	(unsignedlong)t2p->tiff_datasize
water	218:5	0:0	10	(
water	218:6	0:0	10	unsigned
water	218:15	0:0	10	long
water	218:19	0:0	10	)
water	218:21	0:0	10	t2p
op	218:24	0:0	10	->
water	218:26	0:0	10	tiff_datasize
arg	219:5	219:24	9	TIFFFileName(input)
call	219:5	219:23	10	TIFFFileName
arg	219:18	219:23	11	input
water	219:18	0:0	12	input
water	219:25	0:0	8	;
water	220:4	0:0	8	t2p
op	220:7	0:0	8	->
water	220:9	0:0	8	t2p_error
op	220:19	0:0	8	=
water	220:21	0:0	8	T2P_ERR_ERROR
water	220:34	0:0	8	;
return	221:4	221:13	8	(0)
water	221:10	0:0	9	(
water	221:11	0:0	9	0
water	221:12	0:0	9	)
water	222:3	0:0	8	}
call	223:24	223:60	6	memset
arg	223:31	223:37	7	buffer
water	223:31	0:0	8	buffer
arg	223:39	223:40	7	0
water	223:39	0:0	8	0
arg	223:42	223:60	7	t2p->tiff_datasize
water	223:42	0:0	8	t2p
op	223:45	0:0	8	->
water	223:47	0:0	8	tiff_datasize
water	223:61	0:0	6	;
if	224:3	229:3	6	(TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0)
cond	224:7	224:64	7	TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0
call	224:7	224:59	8	TIFFGetField
arg	224:20	224:25	9	input
water	224:20	0:0	10	input
arg	224:27	224:45	9	TIFFTAG_JPEGTABLES
water	224:27	0:0	10	TIFFTAG_JPEGTABLES
arg	224:47	224:53	9	&count
op	224:47	0:0	10	&
water	224:48	0:0	10	count
arg	224:55	224:59	9	&jpt
op	224:55	0:0	10	&
water	224:56	0:0	10	jpt
op	224:61	0:0	8	!=
water	224:64	0:0	8	0
stmts	224:67	229:3	7	
water	224:67	0:0	8	{
if	225:4	228:4	8	(count > 4)
cond	225:7	225:15	9	count > 4
water	225:7	0:0	10	count
op	225:13	0:0	10	>
water	225:15	0:0	10	4
stmts	225:18	228:4	9	
water	225:18	0:0	10	{
call	226:5	226:35	10	_TIFFmemcpy
arg	226:17	226:23	11	buffer
water	226:17	0:0	12	buffer
arg	226:25	226:28	11	jpt
water	226:25	0:0	12	jpt
arg	226:30	226:35	11	count
water	226:30	0:0	12	count
water	226:36	0:0	10	;
water	227:5	0:0	10	bufferoffset
op	227:18	0:0	10	+=
water	227:21	0:0	10	count
op	227:27	0:0	10	-
water	227:29	0:0	10	2
water	227:30	0:0	10	;
water	228:4	0:0	10	}
water	229:3	0:0	8	}
water	230:3	0:0	6	stripcount
op	230:13	0:0	6	=
call	230:14	230:38	6	TIFFNumberOfStrips
arg	230:33	230:38	7	input
water	230:33	0:0	8	input
water	230:39	0:0	6	;
call	231:3	231:52	6	TIFFGetField
arg	231:16	231:21	7	input
water	231:16	0:0	8	input
arg	231:23	231:46	7	TIFFTAG_STRIPBYTECOUNTS
water	231:23	0:0	8	TIFFTAG_STRIPBYTECOUNTS
arg	231:48	231:52	7	&sbc
op	231:48	0:0	8	&
water	231:49	0:0	8	sbc
water	231:53	0:0	6	;
for	232:3	234:3	6	(i = 0 ;i < stripcount;i ++)
forinit	232:7	232:10	7	i = 0 ;
water	232:7	0:0	8	i
op	232:8	0:0	8	=
water	232:9	0:0	8	0
water	232:10	0:0	8	;
cond	232:11	232:13	7	i < stripcount
water	232:11	0:0	8	i
op	232:12	0:0	8	<
water	232:13	0:0	8	stripcount
forexpr	232:24	232:25	7	i ++
water	232:24	0:0	8	i
op	232:25	0:0	8	++
stmts	232:28	234:3	7	
water	232:28	0:0	8	{
if	233:4	233:53	8	(sbc [ i ] > max_striplength)
cond	233:7	233:14	9	sbc [ i ] > max_striplength
water	233:7	0:0	10	sbc
op	233:10	0:0	10	[
water	233:11	0:0	10	i
op	233:12	0:0	10	]
op	233:13	0:0	10	>
water	233:14	0:0	10	max_striplength
stmts	233:31	233:53	9	
water	233:31	0:0	10	max_striplength
op	233:46	0:0	10	=
water	233:47	0:0	10	sbc
op	233:50	0:0	10	[
water	233:51	0:0	10	i
op	233:52	0:0	10	]
water	233:53	0:0	10	;
water	234:3	0:0	8	}
water	235:3	0:0	6	stripbuffer
op	235:15	0:0	6	=
water	235:17	0:0	6	(
water	235:18	0:0	6	unsigned
water	235:27	0:0	6	char
op	235:31	0:0	6	*
water	235:32	0:0	6	)
call	236:4	236:31	6	_TIFFmalloc
arg	236:16	236:31	7	max_striplength
water	236:16	0:0	8	max_striplength
water	236:32	0:0	6	;
if	237:3	245:3	6	(stripbuffer == NULL)
cond	237:6	237:19	7	stripbuffer == NULL
water	237:6	0:0	8	stripbuffer
op	237:17	0:0	8	==
water	237:19	0:0	8	NULL
stmts	237:24	245:3	7	
water	237:24	0:0	8	{
call	238:4	241:24	8	TIFFError
arg	238:14	238:29	9	TIFF2PDF_MODULE
water	238:14	0:0	10	TIFF2PDF_MODULE
arg	239:1	239:68	9	"Can't allocate %u bytes of memory for t2p_readwrite_pdf_image, %s"
water	239:1	0:0	10	"Can't allocate %u bytes of memory for t2p_readwrite_pdf_image, %s"
arg	240:5	240:20	9	max_striplength
water	240:5	0:0	10	max_striplength
arg	241:5	241:24	9	TIFFFileName(input)
call	241:5	241:23	10	TIFFFileName
arg	241:18	241:23	11	input
water	241:18	0:0	12	input
water	241:25	0:0	8	;
call	242:4	242:20	8	_TIFFfree
arg	242:14	242:20	9	buffer
water	242:14	0:0	10	buffer
water	242:21	0:0	8	;
water	243:4	0:0	8	t2p
op	243:7	0:0	8	->
water	243:9	0:0	8	t2p_error
op	243:19	0:0	8	=
water	243:21	0:0	8	T2P_ERR_ERROR
water	243:34	0:0	8	;
return	244:4	244:13	8	(0)
water	244:10	0:0	9	(
water	244:11	0:0	9	0
water	244:12	0:0	9	)
water	245:3	0:0	8	}
for	246:3	263:3	6	(i = 0 ;i < stripcount;i ++)
forinit	246:7	246:10	7	i = 0 ;
water	246:7	0:0	8	i
op	246:8	0:0	8	=
water	246:9	0:0	8	0
water	246:10	0:0	8	;
cond	246:11	246:13	7	i < stripcount
water	246:11	0:0	8	i
op	246:12	0:0	8	<
water	246:13	0:0	8	stripcount
forexpr	246:24	246:25	7	i ++
water	246:24	0:0	8	i
op	246:25	0:0	8	++
stmts	246:28	263:3	7	
water	246:28	0:0	8	{
water	247:4	0:0	8	striplength
op	247:15	0:0	8	=
call	247:16	247:68	8	TIFFReadRawStrip
arg	247:33	247:38	9	input
water	247:33	0:0	10	input
arg	247:40	247:41	9	i
water	247:40	0:0	10	i
arg	247:43	247:64	9	(tdata_t)stripbuffer
water	247:43	0:0	10	(
water	247:44	0:0	10	tdata_t
water	247:51	0:0	10	)
water	247:53	0:0	10	stripbuffer
arg	247:66	247:68	9	-1
op	247:66	0:0	10	-
water	247:67	0:0	10	1
water	247:69	0:0	8	;
if	248:4	262:4	8	(!t2p_process_jpeg_strip (stripbuffer ,& striplength ,buffer ,& bufferoffset ,i ,t2p -> tiff_length ))
cond	248:7	254:21	9	!t2p_process_jpeg_strip (stripbuffer ,& striplength ,buffer ,& bufferoffset ,i ,t2p -> tiff_length )
op	248:7	0:0	10	!
call	248:8	254:21	10	t2p_process_jpeg_strip
arg	249:5	249:16	11	stripbuffer
water	249:5	0:0	12	stripbuffer
arg	250:5	250:17	11	&striplength
op	250:5	0:0	12	&
water	250:6	0:0	12	striplength
arg	251:5	251:11	11	buffer
water	251:5	0:0	12	buffer
arg	252:5	252:18	11	&bufferoffset
op	252:5	0:0	12	&
water	252:6	0:0	12	bufferoffset
arg	253:5	253:6	11	i
water	253:5	0:0	12	i
arg	254:5	254:21	11	t2p->tiff_length
water	254:5	0:0	12	t2p
op	254:8	0:0	12	->
water	254:10	0:0	12	tiff_length
stmts	254:23	262:4	9	
water	254:23	0:0	10	{
call	255:6	257:26	10	TIFFError
arg	255:16	255:31	11	TIFF2PDF_MODULE
water	255:16	0:0	12	TIFF2PDF_MODULE
arg	256:4	256:46	11	"Can't process JPEG data in input file %s"
water	256:4	0:0	12	"Can't process JPEG data in input file %s"
arg	257:7	257:26	11	TIFFFileName(input)
call	257:7	257:25	12	TIFFFileName
arg	257:20	257:25	13	input
water	257:20	0:0	14	input
water	257:27	0:0	10	;
call	258:6	258:28	10	_TIFFfree
arg	258:16	258:28	11	samplebuffer
water	258:16	0:0	12	samplebuffer
water	258:29	0:0	10	;
call	259:6	259:22	10	_TIFFfree
arg	259:16	259:22	11	buffer
water	259:16	0:0	12	buffer
water	259:23	0:0	10	;
water	260:6	0:0	10	t2p
op	260:9	0:0	10	->
water	260:11	0:0	10	t2p_error
op	260:21	0:0	10	=
water	260:23	0:0	10	T2P_ERR_ERROR
water	260:36	0:0	10	;
return	261:6	261:15	10	(0)
water	261:12	0:0	11	(
water	261:13	0:0	11	0
water	261:14	0:0	11	)
water	262:4	0:0	10	}
water	263:3	0:0	8	}
water	264:3	0:0	6	buffer
op	264:9	0:0	6	[
water	264:10	0:0	6	bufferoffset
op	264:22	0:0	6	++
op	264:24	0:0	6	]
op	264:25	0:0	6	=
water	264:26	0:0	6	0
water	264:27	0:0	6	xff
water	264:30	0:0	6	;
water	265:3	0:0	6	buffer
op	265:9	0:0	6	[
water	265:10	0:0	6	bufferoffset
op	265:22	0:0	6	++
op	265:24	0:0	6	]
op	265:25	0:0	6	=
water	265:26	0:0	6	0
water	265:27	0:0	6	xd9
water	265:30	0:0	6	;
call	266:3	266:54	6	t2pWriteFile
arg	266:16	266:22	7	output
water	266:16	0:0	8	output
arg	266:24	266:40	7	(tdata_t)buffer
water	266:24	0:0	8	(
water	266:25	0:0	8	tdata_t
water	266:32	0:0	8	)
water	266:34	0:0	8	buffer
arg	266:42	266:54	7	bufferoffset
water	266:42	0:0	8	bufferoffset
water	266:55	0:0	6	;
call	267:3	267:24	6	_TIFFfree
arg	267:13	267:24	7	stripbuffer
water	267:13	0:0	8	stripbuffer
water	267:25	0:0	6	;
call	268:3	268:19	6	_TIFFfree
arg	268:13	268:19	7	buffer
water	268:13	0:0	8	buffer
water	268:20	0:0	6	;
return	269:3	269:23	6	(bufferoffset)
water	269:9	0:0	7	(
water	269:10	0:0	7	bufferoffset
water	269:22	0:0	7	)
water	270:2	0:0	6	}
water	272:2	0:0	4	(
water	272:3	0:0	4	void
water	272:7	0:0	4	)
water	272:8	0:0	4	0
water	272:9	0:0	4	;
water	273:1	0:0	4	}
if	275:1	305:1	2	(t2p -> pdf_sample == T2P_SAMPLE_NOTHING)
cond	275:4	275:21	3	t2p -> pdf_sample == T2P_SAMPLE_NOTHING
water	275:4	0:0	4	t2p
op	275:7	0:0	4	->
water	275:9	0:0	4	pdf_sample
op	275:19	0:0	4	==
water	275:21	0:0	4	T2P_SAMPLE_NOTHING
stmts	275:40	305:1	3	
water	275:40	0:0	4	{
water	276:2	0:0	4	buffer
op	276:9	0:0	4	=
water	276:11	0:0	4	(
water	276:12	0:0	4	unsigned
water	276:21	0:0	4	char
op	276:25	0:0	4	*
water	276:26	0:0	4	)
call	276:28	276:58	4	_TIFFmalloc
arg	276:40	276:58	5	t2p->tiff_datasize
water	276:40	0:0	6	t2p
op	276:43	0:0	6	->
water	276:45	0:0	6	tiff_datasize
water	276:59	0:0	4	;
if	277:2	284:2	4	(buffer == NULL)
cond	277:5	277:13	5	buffer == NULL
water	277:5	0:0	6	buffer
op	277:11	0:0	6	==
water	277:13	0:0	6	NULL
stmts	277:18	284:2	5	
water	277:18	0:0	6	{
call	278:3	281:23	6	TIFFError
arg	278:13	278:28	7	TIFF2PDF_MODULE
water	278:13	0:0	8	TIFF2PDF_MODULE
arg	279:1	279:69	7	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	279:1	0:0	8	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	280:4	280:38	7	(unsignedlong)t2p->tiff_datasize
water	280:4	0:0	8	(
water	280:5	0:0	8	unsigned
water	280:14	0:0	8	long
water	280:18	0:0	8	)
water	280:20	0:0	8	t2p
op	280:23	0:0	8	->
water	280:25	0:0	8	tiff_datasize
arg	281:4	281:23	7	TIFFFileName(input)
call	281:4	281:22	8	TIFFFileName
arg	281:17	281:22	9	input
water	281:17	0:0	10	input
water	281:24	0:0	6	;
water	282:3	0:0	6	t2p
op	282:6	0:0	6	->
water	282:8	0:0	6	t2p_error
op	282:18	0:0	6	=
water	282:20	0:0	6	T2P_ERR_ERROR
water	282:33	0:0	6	;
return	283:3	283:12	6	(0)
water	283:9	0:0	7	(
water	283:10	0:0	7	0
water	283:11	0:0	7	)
water	284:2	0:0	6	}
call	285:16	285:52	4	memset
arg	285:23	285:29	5	buffer
water	285:23	0:0	6	buffer
arg	285:31	285:32	5	0
water	285:31	0:0	6	0
arg	285:34	285:52	5	t2p->tiff_datasize
water	285:34	0:0	6	t2p
op	285:37	0:0	6	->
water	285:39	0:0	6	tiff_datasize
water	285:53	0:0	4	;
water	286:2	0:0	4	stripsize
op	286:11	0:0	4	=
call	286:12	286:31	4	TIFFStripSize
arg	286:26	286:31	5	input
water	286:26	0:0	6	input
water	286:32	0:0	4	;
water	287:2	0:0	4	stripcount
op	287:12	0:0	4	=
call	287:13	287:37	4	TIFFNumberOfStrips
arg	287:32	287:37	5	input
water	287:32	0:0	6	input
water	287:38	0:0	4	;
for	288:2	304:2	4	(i = 0 ;i < stripcount;i ++)
forinit	288:6	288:9	5	i = 0 ;
water	288:6	0:0	6	i
op	288:7	0:0	6	=
water	288:8	0:0	6	0
water	288:9	0:0	6	;
cond	288:10	288:12	5	i < stripcount
water	288:10	0:0	6	i
op	288:11	0:0	6	<
water	288:12	0:0	6	stripcount
forexpr	288:23	288:24	5	i ++
water	288:23	0:0	6	i
op	288:24	0:0	6	++
stmts	288:27	304:2	5	
water	288:27	0:0	6	{
water	289:3	0:0	6	read
op	289:8	0:0	6	=
call	290:4	293:13	6	TIFFReadEncodedStrip
arg	290:25	290:30	7	input
water	290:25	0:0	8	input
arg	291:4	291:5	7	i
water	291:4	0:0	8	i
arg	292:4	292:35	7	(tdata_t)&buffer[bufferoffset]
water	292:4	0:0	8	(
water	292:5	0:0	8	tdata_t
water	292:12	0:0	8	)
op	292:14	0:0	8	&
water	292:15	0:0	8	buffer
op	292:21	0:0	8	[
water	292:22	0:0	8	bufferoffset
op	292:34	0:0	8	]
arg	293:4	293:13	7	stripsize
water	293:4	0:0	8	stripsize
water	293:14	0:0	6	;
if	294:3	302:3	6	(read == - 1)
cond	294:6	294:13	7	read == - 1
water	294:6	0:0	8	read
op	294:10	0:0	8	==
op	294:12	0:0	8	-
water	294:13	0:0	8	1
stmts	294:15	302:3	7	
water	294:15	0:0	8	{
call	295:4	298:24	8	TIFFError
arg	295:14	295:29	9	TIFF2PDF_MODULE
water	295:14	0:0	10	TIFF2PDF_MODULE
arg	296:5	296:39	9	"Error on decoding strip %u of %s"
water	296:5	0:0	10	"Error on decoding strip %u of %s"
arg	297:5	297:6	9	i
water	297:5	0:0	10	i
arg	298:5	298:24	9	TIFFFileName(input)
call	298:5	298:23	10	TIFFFileName
arg	298:18	298:23	11	input
water	298:18	0:0	12	input
water	298:25	0:0	8	;
call	299:4	299:20	8	_TIFFfree
arg	299:14	299:20	9	buffer
water	299:14	0:0	10	buffer
water	299:21	0:0	8	;
water	300:4	0:0	8	t2p
op	300:7	0:0	8	->
water	300:9	0:0	8	t2p_error
op	300:18	0:0	8	=
water	300:19	0:0	8	T2P_ERR_ERROR
water	300:32	0:0	8	;
return	301:4	301:13	8	(0)
water	301:10	0:0	9	(
water	301:11	0:0	9	0
water	301:12	0:0	9	)
water	302:3	0:0	8	}
water	303:3	0:0	6	bufferoffset
op	303:15	0:0	6	+=
water	303:17	0:0	6	read
water	303:21	0:0	6	;
water	304:2	0:0	6	}
water	305:1	0:0	4	}
else	305:3	464:1	2
stmts	305:8	464:1	3	
water	305:8	0:0	4	{
if	306:2	361:2	4	(t2p -> pdf_sample & T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG)
cond	306:5	306:23	5	t2p -> pdf_sample & T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
water	306:5	0:0	6	t2p
op	306:8	0:0	6	->
water	306:10	0:0	6	pdf_sample
op	306:21	0:0	6	&
water	306:23	0:0	6	T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
stmts	306:60	361:2	5	
water	306:60	0:0	6	{
water	308:3	0:0	6	sepstripsize
op	308:15	0:0	6	=
call	308:16	308:35	6	TIFFStripSize
arg	308:30	308:35	7	input
water	308:30	0:0	8	input
water	308:36	0:0	6	;
water	309:3	0:0	6	sepstripcount
op	309:16	0:0	6	=
call	309:17	309:41	6	TIFFNumberOfStrips
arg	309:36	309:41	7	input
water	309:36	0:0	8	input
water	309:42	0:0	6	;
water	311:3	0:0	6	stripsize
op	311:12	0:0	6	=
water	311:13	0:0	6	sepstripsize
op	311:25	0:0	6	*
water	311:26	0:0	6	t2p
op	311:29	0:0	6	->
water	311:31	0:0	6	tiff_samplesperpixel
water	311:51	0:0	6	;
water	312:3	0:0	6	stripcount
op	312:13	0:0	6	=
water	312:14	0:0	6	sepstripcount
op	312:27	0:0	6	/
water	312:28	0:0	6	t2p
op	312:31	0:0	6	->
water	312:33	0:0	6	tiff_samplesperpixel
water	312:53	0:0	6	;
water	314:3	0:0	6	buffer
op	314:10	0:0	6	=
water	314:12	0:0	6	(
water	314:13	0:0	6	unsigned
water	314:22	0:0	6	char
op	314:26	0:0	6	*
water	314:27	0:0	6	)
call	314:29	314:59	6	_TIFFmalloc
arg	314:41	314:59	7	t2p->tiff_datasize
water	314:41	0:0	8	t2p
op	314:44	0:0	8	->
water	314:46	0:0	8	tiff_datasize
water	314:60	0:0	6	;
if	315:3	322:3	6	(buffer == NULL)
cond	315:6	315:14	7	buffer == NULL
water	315:6	0:0	8	buffer
op	315:12	0:0	8	==
water	315:14	0:0	8	NULL
stmts	315:19	322:3	7	
water	315:19	0:0	8	{
call	316:4	319:24	8	TIFFError
arg	316:14	316:29	9	TIFF2PDF_MODULE
water	316:14	0:0	10	TIFF2PDF_MODULE
arg	317:1	317:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	317:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	318:5	318:39	9	(unsignedlong)t2p->tiff_datasize
water	318:5	0:0	10	(
water	318:6	0:0	10	unsigned
water	318:15	0:0	10	long
water	318:19	0:0	10	)
water	318:21	0:0	10	t2p
op	318:24	0:0	10	->
water	318:26	0:0	10	tiff_datasize
arg	319:5	319:24	9	TIFFFileName(input)
call	319:5	319:23	10	TIFFFileName
arg	319:18	319:23	11	input
water	319:18	0:0	12	input
water	319:25	0:0	8	;
water	320:4	0:0	8	t2p
op	320:7	0:0	8	->
water	320:9	0:0	8	t2p_error
op	320:19	0:0	8	=
water	320:21	0:0	8	T2P_ERR_ERROR
water	320:34	0:0	8	;
return	321:4	321:13	8	(0)
water	321:10	0:0	9	(
water	321:11	0:0	9	0
water	321:12	0:0	9	)
water	322:3	0:0	8	}
call	323:24	323:60	6	memset
arg	323:31	323:37	7	buffer
water	323:31	0:0	8	buffer
arg	323:39	323:40	7	0
water	323:39	0:0	8	0
arg	323:42	323:60	7	t2p->tiff_datasize
water	323:42	0:0	8	t2p
op	323:45	0:0	8	->
water	323:47	0:0	8	tiff_datasize
water	323:61	0:0	6	;
water	324:3	0:0	6	samplebuffer
op	324:16	0:0	6	=
water	324:18	0:0	6	(
water	324:19	0:0	6	unsigned
water	324:28	0:0	6	char
op	324:32	0:0	6	*
water	324:33	0:0	6	)
call	324:35	324:56	6	_TIFFmalloc
arg	324:47	324:56	7	stripsize
water	324:47	0:0	8	stripsize
water	324:57	0:0	6	;
if	325:3	332:3	6	(samplebuffer == NULL)
cond	325:6	325:20	7	samplebuffer == NULL
water	325:6	0:0	8	samplebuffer
op	325:18	0:0	8	==
water	325:20	0:0	8	NULL
stmts	325:25	332:3	7	
water	325:25	0:0	8	{
call	326:4	329:24	8	TIFFError
arg	326:14	326:29	9	TIFF2PDF_MODULE
water	326:14	0:0	10	TIFF2PDF_MODULE
arg	327:1	327:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	327:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	328:5	328:39	9	(unsignedlong)t2p->tiff_datasize
water	328:5	0:0	10	(
water	328:6	0:0	10	unsigned
water	328:15	0:0	10	long
water	328:19	0:0	10	)
water	328:21	0:0	10	t2p
op	328:24	0:0	10	->
water	328:26	0:0	10	tiff_datasize
arg	329:5	329:24	9	TIFFFileName(input)
call	329:5	329:23	10	TIFFFileName
arg	329:18	329:23	11	input
water	329:18	0:0	12	input
water	329:25	0:0	8	;
water	330:4	0:0	8	t2p
op	330:7	0:0	8	->
water	330:9	0:0	8	t2p_error
op	330:19	0:0	8	=
water	330:21	0:0	8	T2P_ERR_ERROR
water	330:34	0:0	8	;
return	331:4	331:13	8	(0)
water	331:10	0:0	9	(
water	331:11	0:0	9	0
water	331:12	0:0	9	)
water	332:3	0:0	8	}
for	333:3	358:3	6	(i = 0 ;i < stripcount;i ++)
forinit	333:7	333:10	7	i = 0 ;
water	333:7	0:0	8	i
op	333:8	0:0	8	=
water	333:9	0:0	8	0
water	333:10	0:0	8	;
cond	333:11	333:13	7	i < stripcount
water	333:11	0:0	8	i
op	333:12	0:0	8	<
water	333:13	0:0	8	stripcount
forexpr	333:24	333:25	7	i ++
water	333:24	0:0	8	i
op	333:25	0:0	8	++
stmts	333:28	358:3	7	
water	333:28	0:0	8	{
water	334:4	0:0	8	samplebufferoffset
op	334:22	0:0	8	=
water	334:23	0:0	8	0
water	334:24	0:0	8	;
for	335:4	351:4	8	(j = 0 ;j < t2p -> tiff_samplesperpixel;j ++)
forinit	335:8	335:11	9	j = 0 ;
water	335:8	0:0	10	j
op	335:9	0:0	10	=
water	335:10	0:0	10	0
water	335:11	0:0	10	;
cond	335:12	335:19	9	j < t2p -> tiff_samplesperpixel
water	335:12	0:0	10	j
op	335:13	0:0	10	<
water	335:14	0:0	10	t2p
op	335:17	0:0	10	->
water	335:19	0:0	10	tiff_samplesperpixel
forexpr	335:40	335:41	9	j ++
water	335:40	0:0	10	j
op	335:41	0:0	10	++
stmts	335:44	351:4	9	
water	335:44	0:0	10	{
water	336:5	0:0	10	read
op	336:10	0:0	10	=
call	337:6	340:19	10	TIFFReadEncodedStrip
arg	337:27	337:32	11	input
water	337:27	0:0	12	input
arg	338:7	338:23	11	i+j*stripcount
water	338:7	0:0	12	i
op	338:9	0:0	12	+
water	338:11	0:0	12	j
op	338:12	0:0	12	*
water	338:13	0:0	12	stripcount
arg	339:7	339:52	11	(tdata_t)&(samplebuffer[samplebufferoffset])
water	339:7	0:0	12	(
water	339:8	0:0	12	tdata_t
water	339:15	0:0	12	)
op	339:17	0:0	12	&
water	339:18	0:0	12	(
water	339:19	0:0	12	samplebuffer
op	339:31	0:0	12	[
water	339:32	0:0	12	samplebufferoffset
op	339:50	0:0	12	]
water	339:51	0:0	12	)
arg	340:7	340:19	11	sepstripsize
water	340:7	0:0	12	sepstripsize
water	340:20	0:0	10	;
if	341:5	349:5	10	(read == - 1)
cond	341:8	341:15	11	read == - 1
water	341:8	0:0	12	read
op	341:12	0:0	12	==
op	341:14	0:0	12	-
water	341:15	0:0	12	1
stmts	341:17	349:5	11	
water	341:17	0:0	12	{
call	342:6	345:26	12	TIFFError
arg	342:16	342:31	13	TIFF2PDF_MODULE
water	342:16	0:0	14	TIFF2PDF_MODULE
arg	343:5	343:39	13	"Error on decoding strip %u of %s"
water	343:5	0:0	14	"Error on decoding strip %u of %s"
arg	344:7	344:23	13	i+j*stripcount
water	344:7	0:0	14	i
op	344:9	0:0	14	+
water	344:11	0:0	14	j
op	344:12	0:0	14	*
water	344:13	0:0	14	stripcount
arg	345:7	345:26	13	TIFFFileName(input)
call	345:7	345:25	14	TIFFFileName
arg	345:20	345:25	15	input
water	345:20	0:0	16	input
water	345:27	0:0	12	;
call	346:7	346:23	12	_TIFFfree
arg	346:17	346:23	13	buffer
water	346:17	0:0	14	buffer
water	346:24	0:0	12	;
water	347:6	0:0	12	t2p
op	347:9	0:0	12	->
water	347:11	0:0	12	t2p_error
op	347:20	0:0	12	=
water	347:21	0:0	12	T2P_ERR_ERROR
water	347:34	0:0	12	;
return	348:6	348:15	12	(0)
water	348:12	0:0	13	(
water	348:13	0:0	13	0
water	348:14	0:0	13	)
water	349:5	0:0	12	}
water	350:5	0:0	10	samplebufferoffset
op	350:23	0:0	10	+=
water	350:25	0:0	10	read
water	350:29	0:0	10	;
water	351:4	0:0	10	}
call	352:4	356:23	8	t2p_sample_planar_separate_to_contig
arg	353:5	353:8	9	t2p
water	353:5	0:0	10	t2p
arg	354:5	354:28	9	&(buffer[bufferoffset])
op	354:5	0:0	10	&
water	354:6	0:0	10	(
water	354:7	0:0	10	buffer
op	354:13	0:0	10	[
water	354:14	0:0	10	bufferoffset
op	354:26	0:0	10	]
water	354:27	0:0	10	)
arg	355:5	355:17	9	samplebuffer
water	355:5	0:0	10	samplebuffer
arg	356:5	356:23	9	samplebufferoffset
water	356:5	0:0	10	samplebufferoffset
water	356:24	0:0	8	;
water	357:4	0:0	8	bufferoffset
op	357:16	0:0	8	+=
water	357:18	0:0	8	samplebufferoffset
water	357:36	0:0	8	;
water	358:3	0:0	8	}
call	359:3	359:25	6	_TIFFfree
arg	359:13	359:25	7	samplebuffer
water	359:13	0:0	8	samplebuffer
water	359:26	0:0	6	;
goto	360:3	360:17	6	dataready
water	360:8	0:0	7	dataready
water	361:2	0:0	6	}
water	363:2	0:0	4	buffer
op	363:9	0:0	4	=
water	363:11	0:0	4	(
water	363:12	0:0	4	unsigned
water	363:21	0:0	4	char
op	363:25	0:0	4	*
water	363:26	0:0	4	)
call	363:28	363:58	4	_TIFFmalloc
arg	363:40	363:58	5	t2p->tiff_datasize
water	363:40	0:0	6	t2p
op	363:43	0:0	6	->
water	363:45	0:0	6	tiff_datasize
water	363:59	0:0	4	;
if	364:2	371:2	4	(buffer == NULL)
cond	364:5	364:13	5	buffer == NULL
water	364:5	0:0	6	buffer
op	364:11	0:0	6	==
water	364:13	0:0	6	NULL
stmts	364:18	371:2	5	
water	364:18	0:0	6	{
call	365:3	368:23	6	TIFFError
arg	365:13	365:28	7	TIFF2PDF_MODULE
water	365:13	0:0	8	TIFF2PDF_MODULE
arg	366:1	366:69	7	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	366:1	0:0	8	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	367:4	367:38	7	(unsignedlong)t2p->tiff_datasize
water	367:4	0:0	8	(
water	367:5	0:0	8	unsigned
water	367:14	0:0	8	long
water	367:18	0:0	8	)
water	367:20	0:0	8	t2p
op	367:23	0:0	8	->
water	367:25	0:0	8	tiff_datasize
arg	368:4	368:23	7	TIFFFileName(input)
call	368:4	368:22	8	TIFFFileName
arg	368:17	368:22	9	input
water	368:17	0:0	10	input
water	368:24	0:0	6	;
water	369:3	0:0	6	t2p
op	369:6	0:0	6	->
water	369:8	0:0	6	t2p_error
op	369:18	0:0	6	=
water	369:20	0:0	6	T2P_ERR_ERROR
water	369:33	0:0	6	;
return	370:3	370:12	6	(0)
water	370:9	0:0	7	(
water	370:10	0:0	7	0
water	370:11	0:0	7	)
water	371:2	0:0	6	}
call	372:16	372:52	4	memset
arg	372:23	372:29	5	buffer
water	372:23	0:0	6	buffer
arg	372:31	372:32	5	0
water	372:31	0:0	6	0
arg	372:34	372:52	5	t2p->tiff_datasize
water	372:34	0:0	6	t2p
op	372:37	0:0	6	->
water	372:39	0:0	6	tiff_datasize
water	372:53	0:0	4	;
water	373:2	0:0	4	stripsize
op	373:11	0:0	4	=
call	373:12	373:31	4	TIFFStripSize
arg	373:26	373:31	5	input
water	373:26	0:0	6	input
water	373:32	0:0	4	;
water	374:2	0:0	4	stripcount
op	374:12	0:0	4	=
call	374:13	374:37	4	TIFFNumberOfStrips
arg	374:32	374:37	5	input
water	374:32	0:0	6	input
water	374:38	0:0	4	;
for	375:2	392:2	4	(i = 0 ;i < stripcount;i ++)
forinit	375:6	375:9	5	i = 0 ;
water	375:6	0:0	6	i
op	375:7	0:0	6	=
water	375:8	0:0	6	0
water	375:9	0:0	6	;
cond	375:10	375:12	5	i < stripcount
water	375:10	0:0	6	i
op	375:11	0:0	6	<
water	375:12	0:0	6	stripcount
forexpr	375:23	375:24	5	i ++
water	375:23	0:0	6	i
op	375:24	0:0	6	++
stmts	375:27	392:2	5	
water	375:27	0:0	6	{
water	376:3	0:0	6	read
op	376:8	0:0	6	=
call	377:4	380:13	6	TIFFReadEncodedStrip
arg	377:25	377:30	7	input
water	377:25	0:0	8	input
arg	378:4	378:5	7	i
water	378:4	0:0	8	i
arg	379:4	379:35	7	(tdata_t)&buffer[bufferoffset]
water	379:4	0:0	8	(
water	379:5	0:0	8	tdata_t
water	379:12	0:0	8	)
op	379:14	0:0	8	&
water	379:15	0:0	8	buffer
op	379:21	0:0	8	[
water	379:22	0:0	8	bufferoffset
op	379:34	0:0	8	]
arg	380:4	380:13	7	stripsize
water	380:4	0:0	8	stripsize
water	380:14	0:0	6	;
if	381:3	390:3	6	(read == - 1)
cond	381:6	381:13	7	read == - 1
water	381:6	0:0	8	read
op	381:10	0:0	8	==
op	381:12	0:0	8	-
water	381:13	0:0	8	1
stmts	381:15	390:3	7	
water	381:15	0:0	8	{
call	382:4	385:24	8	TIFFError
arg	382:14	382:29	9	TIFF2PDF_MODULE
water	382:14	0:0	10	TIFF2PDF_MODULE
arg	383:5	383:39	9	"Error on decoding strip %u of %s"
water	383:5	0:0	10	"Error on decoding strip %u of %s"
arg	384:5	384:6	9	i
water	384:5	0:0	10	i
arg	385:5	385:24	9	TIFFFileName(input)
call	385:5	385:23	10	TIFFFileName
arg	385:18	385:23	11	input
water	385:18	0:0	12	input
water	385:25	0:0	8	;
call	386:4	386:26	8	_TIFFfree
arg	386:14	386:26	9	samplebuffer
water	386:14	0:0	10	samplebuffer
water	386:27	0:0	8	;
call	387:4	387:20	8	_TIFFfree
arg	387:14	387:20	9	buffer
water	387:14	0:0	10	buffer
water	387:21	0:0	8	;
water	388:4	0:0	8	t2p
op	388:7	0:0	8	->
water	388:9	0:0	8	t2p_error
op	388:18	0:0	8	=
water	388:19	0:0	8	T2P_ERR_ERROR
water	388:32	0:0	8	;
return	389:4	389:13	8	(0)
water	389:10	0:0	9	(
water	389:11	0:0	9	0
water	389:12	0:0	9	)
water	390:3	0:0	8	}
water	391:3	0:0	6	bufferoffset
op	391:15	0:0	6	+=
water	391:17	0:0	6	read
water	391:21	0:0	6	;
water	392:2	0:0	6	}
if	394:2	411:2	4	(t2p -> pdf_sample & T2P_SAMPLE_REALIZE_PALETTE)
cond	394:5	394:23	5	t2p -> pdf_sample & T2P_SAMPLE_REALIZE_PALETTE
water	394:5	0:0	6	t2p
op	394:8	0:0	6	->
water	394:10	0:0	6	pdf_sample
op	394:21	0:0	6	&
water	394:23	0:0	6	T2P_SAMPLE_REALIZE_PALETTE
stmts	394:50	411:2	5	
water	394:50	0:0	6	{
water	396:3	0:0	6	samplebuffer
op	396:15	0:0	6	=
water	396:16	0:0	6	(
water	396:17	0:0	6	unsigned
water	396:26	0:0	6	char
op	396:30	0:0	6	*
water	396:31	0:0	6	)
call	396:32	398:50	6	_TIFFrealloc
arg	397:4	397:20	7	(tdata_t)buffer
water	397:4	0:0	8	(
water	397:5	0:0	8	tdata_t
water	397:12	0:0	8	)
water	397:14	0:0	8	buffer
arg	398:4	398:50	7	t2p->tiff_datasize*t2p->tiff_samplesperpixel
water	398:4	0:0	8	t2p
op	398:7	0:0	8	->
water	398:9	0:0	8	tiff_datasize
op	398:23	0:0	8	*
water	398:25	0:0	8	t2p
op	398:28	0:0	8	->
water	398:30	0:0	8	tiff_samplesperpixel
water	398:51	0:0	6	;
if	399:3	406:3	6	(samplebuffer == NULL)
cond	399:6	399:20	7	samplebuffer == NULL
water	399:6	0:0	8	samplebuffer
op	399:18	0:0	8	==
water	399:20	0:0	8	NULL
stmts	399:25	406:3	7	
water	399:25	0:0	8	{
call	400:4	403:24	8	TIFFError
arg	400:14	400:29	9	TIFF2PDF_MODULE
water	400:14	0:0	10	TIFF2PDF_MODULE
arg	401:1	401:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	401:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	402:5	402:39	9	(unsignedlong)t2p->tiff_datasize
water	402:5	0:0	10	(
water	402:6	0:0	10	unsigned
water	402:15	0:0	10	long
water	402:19	0:0	10	)
water	402:21	0:0	10	t2p
op	402:24	0:0	10	->
water	402:26	0:0	10	tiff_datasize
arg	403:5	403:24	9	TIFFFileName(input)
call	403:5	403:23	10	TIFFFileName
arg	403:18	403:23	11	input
water	403:18	0:0	12	input
water	403:25	0:0	8	;
water	404:4	0:0	8	t2p
op	404:7	0:0	8	->
water	404:9	0:0	8	t2p_error
op	404:19	0:0	8	=
water	404:21	0:0	8	T2P_ERR_ERROR
water	404:34	0:0	8	;
call	405:5	405:21	8	_TIFFfree
arg	405:15	405:21	9	buffer
water	405:15	0:0	10	buffer
water	405:22	0:0	8	;
water	406:3	0:0	8	}
else	406:5	409:3	6
stmts	406:10	409:3	7	
water	406:10	0:0	8	{
water	407:4	0:0	8	buffer
op	407:10	0:0	8	=
water	407:11	0:0	8	samplebuffer
water	407:23	0:0	8	;
water	408:4	0:0	8	t2p
op	408:7	0:0	8	->
water	408:9	0:0	8	tiff_datasize
op	408:23	0:0	8	*=
water	408:26	0:0	8	t2p
op	408:29	0:0	8	->
water	408:31	0:0	8	tiff_samplesperpixel
water	408:51	0:0	8	;
water	409:3	0:0	8	}
call	410:3	410:41	6	t2p_sample_realize_palette
arg	410:30	410:33	7	t2p
water	410:30	0:0	8	t2p
arg	410:35	410:41	7	buffer
water	410:35	0:0	8	buffer
water	410:42	0:0	6	;
water	411:2	0:0	6	}
if	413:2	417:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB)
cond	413:5	413:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB
water	413:5	0:0	6	t2p
op	413:8	0:0	6	->
water	413:10	0:0	6	pdf_sample
op	413:21	0:0	6	&
water	413:23	0:0	6	T2P_SAMPLE_RGBA_TO_RGB
stmts	413:46	417:2	5	
water	413:46	0:0	6	{
water	414:3	0:0	6	t2p
op	414:6	0:0	6	->
water	414:8	0:0	6	tiff_datasize
op	414:21	0:0	6	=
call	414:22	416:36	6	t2p_sample_rgba_to_rgb
arg	415:4	415:19	7	(tdata_t)buffer
water	415:4	0:0	8	(
water	415:5	0:0	8	tdata_t
water	415:12	0:0	8	)
water	415:13	0:0	8	buffer
arg	416:4	416:36	7	t2p->tiff_width*t2p->tiff_length
water	416:4	0:0	8	t2p
op	416:7	0:0	8	->
water	416:9	0:0	8	tiff_width
op	416:19	0:0	8	*
water	416:20	0:0	8	t2p
op	416:23	0:0	8	->
water	416:25	0:0	8	tiff_length
water	416:37	0:0	6	;
water	417:2	0:0	6	}
if	419:2	423:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB)
cond	419:5	419:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB
water	419:5	0:0	6	t2p
op	419:8	0:0	6	->
water	419:10	0:0	6	pdf_sample
op	419:21	0:0	6	&
water	419:23	0:0	6	T2P_SAMPLE_RGBAA_TO_RGB
stmts	419:47	423:2	5	
water	419:47	0:0	6	{
water	420:3	0:0	6	t2p
op	420:6	0:0	6	->
water	420:8	0:0	6	tiff_datasize
op	420:21	0:0	6	=
call	420:22	422:36	6	t2p_sample_rgbaa_to_rgb
arg	421:4	421:19	7	(tdata_t)buffer
water	421:4	0:0	8	(
water	421:5	0:0	8	tdata_t
water	421:12	0:0	8	)
water	421:13	0:0	8	buffer
arg	422:4	422:36	7	t2p->tiff_width*t2p->tiff_length
water	422:4	0:0	8	t2p
op	422:7	0:0	8	->
water	422:9	0:0	8	tiff_width
op	422:19	0:0	8	*
water	422:20	0:0	8	t2p
op	422:23	0:0	8	->
water	422:25	0:0	8	tiff_length
water	422:37	0:0	6	;
water	423:2	0:0	6	}
if	425:2	457:2	4	(t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB)
cond	425:5	425:23	5	t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB
water	425:5	0:0	6	t2p
op	425:8	0:0	6	->
water	425:10	0:0	6	pdf_sample
op	425:21	0:0	6	&
water	425:23	0:0	6	T2P_SAMPLE_YCBCR_TO_RGB
stmts	425:47	457:2	5	
water	425:47	0:0	6	{
water	426:3	0:0	6	samplebuffer
op	426:15	0:0	6	=
water	426:16	0:0	6	(
water	426:17	0:0	6	unsigned
water	426:26	0:0	6	char
op	426:30	0:0	6	*
water	426:31	0:0	6	)
call	426:32	428:38	6	_TIFFrealloc
arg	427:4	427:19	7	(tdata_t)buffer
water	427:4	0:0	8	(
water	427:5	0:0	8	tdata_t
water	427:12	0:0	8	)
water	427:13	0:0	8	buffer
arg	428:4	428:38	7	t2p->tiff_width*t2p->tiff_length*4
water	428:4	0:0	8	t2p
op	428:7	0:0	8	->
water	428:9	0:0	8	tiff_width
op	428:19	0:0	8	*
water	428:20	0:0	8	t2p
op	428:23	0:0	8	->
water	428:25	0:0	8	tiff_length
op	428:36	0:0	8	*
water	428:37	0:0	8	4
water	428:39	0:0	6	;
if	429:3	437:3	6	(samplebuffer == NULL)
cond	429:6	429:20	7	samplebuffer == NULL
water	429:6	0:0	8	samplebuffer
op	429:18	0:0	8	==
water	429:20	0:0	8	NULL
stmts	429:25	437:3	7	
water	429:25	0:0	8	{
call	430:4	433:24	8	TIFFError
arg	430:14	430:29	9	TIFF2PDF_MODULE
water	430:14	0:0	10	TIFF2PDF_MODULE
arg	431:1	431:69	9	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
water	431:1	0:0	10	"Can't allocate %lu bytes of memory for t2p_readwrite_pdf_image, %s"
arg	432:5	432:39	9	(unsignedlong)t2p->tiff_datasize
water	432:5	0:0	10	(
water	432:6	0:0	10	unsigned
water	432:15	0:0	10	long
water	432:19	0:0	10	)
water	432:21	0:0	10	t2p
op	432:24	0:0	10	->
water	432:26	0:0	10	tiff_datasize
arg	433:5	433:24	9	TIFFFileName(input)
call	433:5	433:23	10	TIFFFileName
arg	433:18	433:23	11	input
water	433:18	0:0	12	input
water	433:25	0:0	8	;
water	434:4	0:0	8	t2p
op	434:7	0:0	8	->
water	434:9	0:0	8	t2p_error
op	434:19	0:0	8	=
water	434:21	0:0	8	T2P_ERR_ERROR
water	434:34	0:0	8	;
call	435:4	435:20	8	_TIFFfree
arg	435:14	435:20	9	buffer
water	435:14	0:0	10	buffer
water	435:21	0:0	8	;
return	436:4	436:13	8	(0)
water	436:10	0:0	9	(
water	436:11	0:0	9	0
water	436:12	0:0	9	)
water	437:3	0:0	8	}
else	437:5	439:3	6
stmts	437:10	439:3	7	
water	437:10	0:0	8	{
water	438:4	0:0	8	buffer
op	438:10	0:0	8	=
water	438:11	0:0	8	samplebuffer
water	438:23	0:0	8	;
water	439:3	0:0	8	}
if	440:3	452:3	6	(!TIFFReadRGBAImageOriented (input ,t2p -> tiff_width ,t2p -> tiff_length ,( uint32 * ) buffer ,ORIENTATION_TOPLEFT ,0 ))
cond	440:6	446:5	7	!TIFFReadRGBAImageOriented (input ,t2p -> tiff_width ,t2p -> tiff_length ,( uint32 * ) buffer ,ORIENTATION_TOPLEFT ,0 )
op	440:6	0:0	8	!
call	440:7	446:5	8	TIFFReadRGBAImageOriented
arg	441:4	441:9	9	input
water	441:4	0:0	10	input
arg	442:4	442:19	9	t2p->tiff_width
water	442:4	0:0	10	t2p
op	442:7	0:0	10	->
water	442:9	0:0	10	tiff_width
arg	443:4	443:20	9	t2p->tiff_length
water	443:4	0:0	10	t2p
op	443:7	0:0	10	->
water	443:9	0:0	10	tiff_length
arg	444:4	444:19	9	(uint32*)buffer
water	444:4	0:0	10	(
water	444:5	0:0	10	uint32
op	444:11	0:0	10	*
water	444:12	0:0	10	)
water	444:13	0:0	10	buffer
arg	445:4	445:23	9	ORIENTATION_TOPLEFT
water	445:4	0:0	10	ORIENTATION_TOPLEFT
arg	446:4	446:5	9	0
water	446:4	0:0	10	0
stmts	446:7	452:3	7	
water	446:7	0:0	8	{
call	447:4	449:24	8	TIFFError
arg	447:14	447:29	9	TIFF2PDF_MODULE
water	447:14	0:0	10	TIFF2PDF_MODULE
arg	448:1	448:67	9	"Can't use TIFFReadRGBAImageOriented to extract RGB image from %s"
water	448:1	0:0	10	"Can't use TIFFReadRGBAImageOriented to extract RGB image from %s"
arg	449:5	449:24	9	TIFFFileName(input)
call	449:5	449:23	10	TIFFFileName
arg	449:18	449:23	11	input
water	449:18	0:0	12	input
water	449:25	0:0	8	;
water	450:4	0:0	8	t2p
op	450:7	0:0	8	->
water	450:9	0:0	8	t2p_error
op	450:19	0:0	8	=
water	450:21	0:0	8	T2P_ERR_ERROR
water	450:34	0:0	8	;
return	451:4	451:13	8	(0)
water	451:10	0:0	9	(
water	451:11	0:0	9	0
water	451:12	0:0	9	)
water	452:3	0:0	8	}
water	453:3	0:0	6	t2p
op	453:6	0:0	6	->
water	453:8	0:0	6	tiff_datasize
op	453:21	0:0	6	=
call	453:22	455:36	6	t2p_sample_abgr_to_rgb
arg	454:4	454:20	7	(tdata_t)buffer
water	454:4	0:0	8	(
water	454:5	0:0	8	tdata_t
water	454:12	0:0	8	)
water	454:14	0:0	8	buffer
arg	455:4	455:36	7	t2p->tiff_width*t2p->tiff_length
water	455:4	0:0	8	t2p
op	455:7	0:0	8	->
water	455:9	0:0	8	tiff_width
op	455:19	0:0	8	*
water	455:20	0:0	8	t2p
op	455:23	0:0	8	->
water	455:25	0:0	8	tiff_length
water	455:37	0:0	6	;
water	457:2	0:0	6	}
if	459:2	463:2	4	(t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED)
cond	459:5	459:23	5	t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
water	459:5	0:0	6	t2p
op	459:8	0:0	6	->
water	459:10	0:0	6	pdf_sample
op	459:21	0:0	6	&
water	459:23	0:0	6	T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
stmts	459:57	463:2	5	
water	459:57	0:0	6	{
water	460:3	0:0	6	t2p
op	460:6	0:0	6	->
water	460:8	0:0	6	tiff_datasize
op	460:21	0:0	6	=
call	460:22	462:36	6	t2p_sample_lab_signed_to_unsigned
arg	461:4	461:19	7	(tdata_t)buffer
water	461:4	0:0	8	(
water	461:5	0:0	8	tdata_t
water	461:12	0:0	8	)
water	461:13	0:0	8	buffer
arg	462:4	462:36	7	t2p->tiff_width*t2p->tiff_length
water	462:4	0:0	8	t2p
op	462:7	0:0	8	->
water	462:9	0:0	8	tiff_width
op	462:19	0:0	8	*
water	462:20	0:0	8	t2p
op	462:23	0:0	8	->
water	462:25	0:0	8	tiff_length
water	462:37	0:0	6	;
water	463:2	0:0	6	}
water	464:1	0:0	4	}
label	466:0	466:9	2	dataready :
call	468:1	468:19	2	t2p_disable
arg	468:13	468:19	3	output
water	468:13	0:0	4	output
water	468:20	0:0	2	;
call	469:1	469:64	2	TIFFSetField
arg	469:14	469:20	3	output
water	469:14	0:0	4	output
arg	469:22	469:41	3	TIFFTAG_PHOTOMETRIC
water	469:22	0:0	4	TIFFTAG_PHOTOMETRIC
arg	469:43	469:64	3	t2p->tiff_photometric
water	469:43	0:0	4	t2p
op	469:46	0:0	4	->
water	469:48	0:0	4	tiff_photometric
water	469:65	0:0	2	;
call	470:1	470:68	2	TIFFSetField
arg	470:14	470:20	3	output
water	470:14	0:0	4	output
arg	470:22	470:43	3	TIFFTAG_BITSPERSAMPLE
water	470:22	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	470:45	470:68	3	t2p->tiff_bitspersample
water	470:45	0:0	4	t2p
op	470:48	0:0	4	->
water	470:50	0:0	4	tiff_bitspersample
water	470:69	0:0	2	;
call	471:1	471:72	2	TIFFSetField
arg	471:14	471:20	3	output
water	471:14	0:0	4	output
arg	471:22	471:45	3	TIFFTAG_SAMPLESPERPIXEL
water	471:22	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	471:47	471:72	3	t2p->tiff_samplesperpixel
water	471:47	0:0	4	t2p
op	471:50	0:0	4	->
water	471:52	0:0	4	tiff_samplesperpixel
water	471:73	0:0	2	;
call	472:1	472:57	2	TIFFSetField
arg	472:14	472:20	3	output
water	472:14	0:0	4	output
arg	472:22	472:40	3	TIFFTAG_IMAGEWIDTH
water	472:22	0:0	4	TIFFTAG_IMAGEWIDTH
arg	472:42	472:57	3	t2p->tiff_width
water	472:42	0:0	4	t2p
op	472:45	0:0	4	->
water	472:47	0:0	4	tiff_width
water	472:58	0:0	2	;
call	473:1	473:59	2	TIFFSetField
arg	473:14	473:20	3	output
water	473:14	0:0	4	output
arg	473:22	473:41	3	TIFFTAG_IMAGELENGTH
water	473:22	0:0	4	TIFFTAG_IMAGELENGTH
arg	473:43	473:59	3	t2p->tiff_length
water	473:43	0:0	4	t2p
op	473:46	0:0	4	->
water	473:48	0:0	4	tiff_length
water	473:60	0:0	2	;
call	474:1	474:60	2	TIFFSetField
arg	474:14	474:20	3	output
water	474:14	0:0	4	output
arg	474:22	474:42	3	TIFFTAG_ROWSPERSTRIP
water	474:22	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	474:44	474:60	3	t2p->tiff_length
water	474:44	0:0	4	t2p
op	474:47	0:0	4	->
water	474:49	0:0	4	tiff_length
water	474:61	0:0	2	;
call	475:1	475:63	2	TIFFSetField
arg	475:14	475:20	3	output
water	475:14	0:0	4	output
arg	475:22	475:42	3	TIFFTAG_PLANARCONFIG
water	475:22	0:0	4	TIFFTAG_PLANARCONFIG
arg	475:44	475:63	3	PLANARCONFIG_CONTIG
water	475:44	0:0	4	PLANARCONFIG_CONTIG
water	475:64	0:0	2	;
call	476:1	476:58	2	TIFFSetField
arg	476:14	476:20	3	output
water	476:14	0:0	4	output
arg	476:22	476:39	3	TIFFTAG_FILLORDER
water	476:22	0:0	4	TIFFTAG_FILLORDER
arg	476:41	476:58	3	FILLORDER_MSB2LSB
water	476:41	0:0	4	FILLORDER_MSB2LSB
water	476:59	0:0	2	;
switch	478:1	550:1	2	(t2p -> pdf_compression)
cond	478:8	478:13	3	t2p -> pdf_compression
water	478:8	0:0	4	t2p
op	478:11	0:0	4	->
water	478:13	0:0	4	pdf_compression
stmts	478:29	550:1	3	
water	478:29	0:0	4	{
label	479:1	479:23	4	case T2P_COMPRESS_NONE :
call	480:2	480:60	4	TIFFSetField
arg	480:15	480:21	5	output
water	480:15	0:0	6	output
arg	480:23	480:42	5	TIFFTAG_COMPRESSION
water	480:23	0:0	6	TIFFTAG_COMPRESSION
arg	480:44	480:60	5	COMPRESSION_NONE
water	480:44	0:0	6	COMPRESSION_NONE
water	480:61	0:0	4	;
break	481:2	481:7	4	
label	483:1	483:21	4	case T2P_COMPRESS_G4 :
call	484:2	484:65	4	TIFFSetField
arg	484:15	484:21	5	output
water	484:15	0:0	6	output
arg	484:23	484:42	5	TIFFTAG_COMPRESSION
water	484:23	0:0	6	TIFFTAG_COMPRESSION
arg	484:44	484:65	5	COMPRESSION_CCITTFAX4
water	484:44	0:0	6	COMPRESSION_CCITTFAX4
water	484:66	0:0	4	;
break	485:2	485:7	4	
label	488:1	488:23	4	case T2P_COMPRESS_JPEG :
if	489:2	499:2	4	(t2p -> tiff_photometric == PHOTOMETRIC_YCBCR)
cond	489:5	489:28	5	t2p -> tiff_photometric == PHOTOMETRIC_YCBCR
water	489:5	0:0	6	t2p
op	489:8	0:0	6	->
water	489:10	0:0	6	tiff_photometric
op	489:26	0:0	6	==
water	489:28	0:0	6	PHOTOMETRIC_YCBCR
stmts	489:47	499:2	5	
water	489:47	0:0	6	{
decl	490:3	490:26	6	uint16	hor
op	490:14	0:0	6	=
water	490:16	0:0	6	0
water	490:17	0:0	6	,
decl	490:3	490:26	6	uint16	ver
op	490:23	0:0	6	=
water	490:25	0:0	6	0
if	491:3	495:3	6	(TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0)
cond	491:7	491:67	7	TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0
call	491:7	491:63	8	TIFFGetField
arg	491:20	491:25	9	input
water	491:20	0:0	10	input
arg	491:27	491:51	9	TIFFTAG_YCBCRSUBSAMPLING
water	491:27	0:0	10	TIFFTAG_YCBCRSUBSAMPLING
arg	491:53	491:57	9	&hor
op	491:53	0:0	10	&
water	491:54	0:0	10	hor
arg	491:59	491:63	9	&ver
op	491:59	0:0	10	&
water	491:60	0:0	10	ver
op	491:65	0:0	8	!=
water	491:67	0:0	8	0
stmts	491:71	495:3	7	
water	491:71	0:0	8	{
if	492:4	494:4	8	(hor != 0 && ver != 0)
cond	492:7	492:26	9	hor != 0 && ver != 0
water	492:7	0:0	10	hor
op	492:11	0:0	10	!=
water	492:14	0:0	10	0
op	492:16	0:0	10	&&
water	492:19	0:0	10	ver
op	492:23	0:0	10	!=
water	492:26	0:0	10	0
stmts	492:28	494:4	9	
water	492:28	0:0	10	{
call	493:5	493:60	10	TIFFSetField
arg	493:18	493:24	11	output
water	493:18	0:0	12	output
arg	493:26	493:50	11	TIFFTAG_YCBCRSUBSAMPLING
water	493:26	0:0	12	TIFFTAG_YCBCRSUBSAMPLING
arg	493:52	493:55	11	hor
water	493:52	0:0	12	hor
arg	493:57	493:60	11	ver
water	493:57	0:0	12	ver
water	493:61	0:0	10	;
water	494:4	0:0	10	}
water	495:3	0:0	8	}
if	496:3	498:3	6	(TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0)
cond	496:6	496:66	7	TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0
call	496:6	496:63	8	TIFFGetField
arg	496:19	496:24	9	input
water	496:19	0:0	10	input
arg	496:26	496:53	9	TIFFTAG_REFERENCEBLACKWHITE
water	496:26	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	496:55	496:63	9	&xfloatp
op	496:55	0:0	10	&
water	496:56	0:0	10	xfloatp
op	496:64	0:0	8	!=
water	496:66	0:0	8	0
stmts	496:68	498:3	7	
water	496:68	0:0	8	{
call	497:4	497:61	8	TIFFSetField
arg	497:17	497:23	9	output
water	497:17	0:0	10	output
arg	497:25	497:52	9	TIFFTAG_REFERENCEBLACKWHITE
water	497:25	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	497:54	497:61	9	xfloatp
water	497:54	0:0	10	xfloatp
water	497:62	0:0	8	;
water	498:3	0:0	8	}
water	499:2	0:0	6	}
if	500:2	508:2	4	(TIFFSetField (output ,TIFFTAG_COMPRESSION ,COMPRESSION_JPEG ) == 0)
cond	500:5	500:66	5	TIFFSetField (output ,TIFFTAG_COMPRESSION ,COMPRESSION_JPEG ) == 0
call	500:5	500:63	6	TIFFSetField
arg	500:18	500:24	7	output
water	500:18	0:0	8	output
arg	500:26	500:45	7	TIFFTAG_COMPRESSION
water	500:26	0:0	8	TIFFTAG_COMPRESSION
arg	500:47	500:63	7	COMPRESSION_JPEG
water	500:47	0:0	8	COMPRESSION_JPEG
op	500:64	0:0	6	==
water	500:66	0:0	6	0
stmts	500:68	508:2	5	
water	500:68	0:0	6	{
call	501:3	504:24	6	TIFFError
arg	501:13	501:28	7	TIFF2PDF_MODULE
water	501:13	0:0	8	TIFF2PDF_MODULE
arg	502:2	502:61	7	"Unable to use JPEG compression for input %s and output %s"
water	502:2	0:0	8	"Unable to use JPEG compression for input %s and output %s"
arg	503:4	503:23	7	TIFFFileName(input)
call	503:4	503:22	8	TIFFFileName
arg	503:17	503:22	9	input
water	503:17	0:0	10	input
arg	504:4	504:24	7	TIFFFileName(output)
call	504:4	504:23	8	TIFFFileName
arg	504:17	504:23	9	output
water	504:17	0:0	10	output
water	504:25	0:0	6	;
call	505:3	505:19	6	_TIFFfree
arg	505:13	505:19	7	buffer
water	505:13	0:0	8	buffer
water	505:20	0:0	6	;
water	506:3	0:0	6	t2p
op	506:6	0:0	6	->
water	506:8	0:0	6	t2p_error
op	506:18	0:0	6	=
water	506:20	0:0	6	T2P_ERR_ERROR
water	506:33	0:0	6	;
return	507:3	507:12	6	(0)
water	507:9	0:0	7	(
water	507:10	0:0	7	0
water	507:11	0:0	7	)
water	508:2	0:0	6	}
call	509:2	509:48	4	TIFFSetField
arg	509:15	509:21	5	output
water	509:15	0:0	6	output
arg	509:23	509:45	5	TIFFTAG_JPEGTABLESMODE
water	509:23	0:0	6	TIFFTAG_JPEGTABLESMODE
arg	509:47	509:48	5	0
water	509:47	0:0	6	0
water	509:49	0:0	4	;
if	511:2	518:2	4	(t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB ))
cond	511:5	511:51	5	t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB )
water	511:5	0:0	6	t2p
op	511:8	0:0	6	->
water	511:10	0:0	6	pdf_colorspace
op	511:25	0:0	6	&
water	511:27	0:0	6	(
water	511:28	0:0	6	T2P_CS_RGB
op	511:39	0:0	6	|
water	511:41	0:0	6	T2P_CS_LAB
water	511:51	0:0	6	)
stmts	511:53	518:2	5	
water	511:53	0:0	6	{
call	512:3	512:62	6	TIFFSetField
arg	512:16	512:22	7	output
water	512:16	0:0	8	output
arg	512:24	512:43	7	TIFFTAG_PHOTOMETRIC
water	512:24	0:0	8	TIFFTAG_PHOTOMETRIC
arg	512:45	512:62	7	PHOTOMETRIC_YCBCR
water	512:45	0:0	8	PHOTOMETRIC_YCBCR
water	512:63	0:0	6	;
if	513:3	515:3	6	(t2p -> tiff_photometric != PHOTOMETRIC_YCBCR)
cond	513:6	513:31	7	t2p -> tiff_photometric != PHOTOMETRIC_YCBCR
water	513:6	0:0	8	t2p
op	513:9	0:0	8	->
water	513:11	0:0	8	tiff_photometric
op	513:28	0:0	8	!=
water	513:31	0:0	8	PHOTOMETRIC_YCBCR
stmts	513:49	515:3	7	
water	513:49	0:0	8	{
call	514:4	514:65	8	TIFFSetField
arg	514:17	514:23	9	output
water	514:17	0:0	10	output
arg	514:25	514:46	9	TIFFTAG_JPEGCOLORMODE
water	514:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	514:48	514:65	9	JPEGCOLORMODE_RGB
water	514:48	0:0	10	JPEGCOLORMODE_RGB
water	514:66	0:0	8	;
water	515:3	0:0	8	}
else	515:5	517:3	6
stmts	515:10	517:3	7	
water	515:10	0:0	8	{
call	516:4	516:65	8	TIFFSetField
arg	516:17	516:23	9	output
water	516:17	0:0	10	output
arg	516:25	516:46	9	TIFFTAG_JPEGCOLORMODE
water	516:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	516:48	516:65	9	JPEGCOLORMODE_RAW
water	516:48	0:0	10	JPEGCOLORMODE_RAW
water	516:66	0:0	8	;
water	517:3	0:0	8	}
water	518:2	0:0	6	}
if	519:2	521:2	4	(t2p -> pdf_colorspace & T2P_CS_GRAY)
cond	519:5	519:27	5	t2p -> pdf_colorspace & T2P_CS_GRAY
water	519:5	0:0	6	t2p
op	519:8	0:0	6	->
water	519:10	0:0	6	pdf_colorspace
op	519:25	0:0	6	&
water	519:27	0:0	6	T2P_CS_GRAY
stmts	519:39	521:2	5	
water	519:39	0:0	6	{
water	520:3	0:0	6	(
water	520:4	0:0	6	void
water	520:8	0:0	6	)
water	520:9	0:0	6	0
water	520:10	0:0	6	;
water	521:2	0:0	6	}
if	522:2	524:2	4	(t2p -> pdf_colorspace & T2P_CS_CMYK)
cond	522:5	522:27	5	t2p -> pdf_colorspace & T2P_CS_CMYK
water	522:5	0:0	6	t2p
op	522:8	0:0	6	->
water	522:10	0:0	6	pdf_colorspace
op	522:25	0:0	6	&
water	522:27	0:0	6	T2P_CS_CMYK
stmts	522:39	524:2	5	
water	522:39	0:0	6	{
water	523:3	0:0	6	(
water	523:4	0:0	6	void
water	523:8	0:0	6	)
water	523:9	0:0	6	0
water	523:10	0:0	6	;
water	524:2	0:0	6	}
if	525:2	529:2	4	(t2p -> pdf_defaultcompressionquality != 0)
cond	525:5	525:43	5	t2p -> pdf_defaultcompressionquality != 0
water	525:5	0:0	6	t2p
op	525:8	0:0	6	->
water	525:10	0:0	6	pdf_defaultcompressionquality
op	525:40	0:0	6	!=
water	525:43	0:0	6	0
stmts	525:45	529:2	5	
water	525:45	0:0	6	{
call	526:3	528:38	6	TIFFSetField
arg	526:16	526:22	7	output
water	526:16	0:0	8	output
arg	527:4	527:23	7	TIFFTAG_JPEGQUALITY
water	527:4	0:0	8	TIFFTAG_JPEGQUALITY
arg	528:4	528:38	7	t2p->pdf_defaultcompressionquality
water	528:4	0:0	8	t2p
op	528:7	0:0	8	->
water	528:9	0:0	8	pdf_defaultcompressionquality
water	528:39	0:0	6	;
water	529:2	0:0	6	}
break	531:2	531:7	4	
label	534:1	534:22	4	case T2P_COMPRESS_ZIP :
call	535:2	535:63	4	TIFFSetField
arg	535:15	535:21	5	output
water	535:15	0:0	6	output
arg	535:23	535:42	5	TIFFTAG_COMPRESSION
water	535:23	0:0	6	TIFFTAG_COMPRESSION
arg	535:44	535:63	5	COMPRESSION_DEFLATE
water	535:44	0:0	6	COMPRESSION_DEFLATE
water	535:64	0:0	4	;
if	536:2	540:2	4	(t2p -> pdf_defaultcompressionquality % 100 != 0)
cond	536:5	536:47	5	t2p -> pdf_defaultcompressionquality % 100 != 0
water	536:5	0:0	6	t2p
op	536:8	0:0	6	->
water	536:10	0:0	6	pdf_defaultcompressionquality
op	536:39	0:0	6	%
water	536:40	0:0	6	100
op	536:44	0:0	6	!=
water	536:47	0:0	6	0
stmts	536:49	540:2	5	
water	536:49	0:0	6	{
call	537:3	539:44	6	TIFFSetField
arg	537:16	537:22	7	output
water	537:16	0:0	8	output
arg	538:4	538:21	7	TIFFTAG_PREDICTOR
water	538:4	0:0	8	TIFFTAG_PREDICTOR
arg	539:4	539:44	7	t2p->pdf_defaultcompressionquality%100
water	539:4	0:0	8	t2p
op	539:7	0:0	8	->
water	539:9	0:0	8	pdf_defaultcompressionquality
op	539:39	0:0	8	%
water	539:41	0:0	8	100
water	539:45	0:0	6	;
water	540:2	0:0	6	}
if	541:2	545:2	4	(t2p -> pdf_defaultcompressionquality / 100 != 0)
cond	541:5	541:47	5	t2p -> pdf_defaultcompressionquality / 100 != 0
water	541:5	0:0	6	t2p
op	541:8	0:0	6	->
water	541:10	0:0	6	pdf_defaultcompressionquality
op	541:39	0:0	6	/
water	541:40	0:0	6	100
op	541:44	0:0	6	!=
water	541:47	0:0	6	0
stmts	541:49	545:2	5	
water	541:49	0:0	6	{
call	542:3	544:46	6	TIFFSetField
arg	542:16	542:22	7	output
water	542:16	0:0	8	output
arg	543:4	543:22	7	TIFFTAG_ZIPQUALITY
water	543:4	0:0	8	TIFFTAG_ZIPQUALITY
arg	544:4	544:46	7	(t2p->pdf_defaultcompressionquality/100)
water	544:4	0:0	8	(
water	544:5	0:0	8	t2p
op	544:8	0:0	8	->
water	544:10	0:0	8	pdf_defaultcompressionquality
op	544:40	0:0	8	/
water	544:42	0:0	8	100
water	544:45	0:0	8	)
water	544:47	0:0	6	;
water	545:2	0:0	6	}
break	546:2	546:7	4	
label	548:1	548:8	4	default :
break	549:2	549:7	4	
water	550:1	0:0	4	}
call	552:1	552:18	2	t2p_enable
arg	552:12	552:18	3	output
water	552:12	0:0	4	output
water	552:19	0:0	2	;
water	553:1	0:0	2	t2p
op	553:4	0:0	2	->
water	553:6	0:0	2	outputwritten
op	553:20	0:0	2	=
water	553:22	0:0	2	0
water	553:23	0:0	2	;
if	555:1	560:1	2	(t2p -> pdf_compression == T2P_COMPRESS_JPEG && t2p -> tiff_photometric == PHOTOMETRIC_YCBCR)
cond	555:4	556:32	3	t2p -> pdf_compression == T2P_COMPRESS_JPEG && t2p -> tiff_photometric == PHOTOMETRIC_YCBCR
water	555:4	0:0	4	t2p
op	555:7	0:0	4	->
water	555:9	0:0	4	pdf_compression
op	555:25	0:0	4	==
water	555:28	0:0	4	T2P_COMPRESS_JPEG
op	556:4	0:0	4	&&
water	556:7	0:0	4	t2p
op	556:10	0:0	4	->
water	556:12	0:0	4	tiff_photometric
op	556:29	0:0	4	==
water	556:32	0:0	4	PHOTOMETRIC_YCBCR
stmts	556:50	560:1	3	
water	556:50	0:0	4	{
water	557:2	0:0	4	bufferoffset
op	557:15	0:0	4	=
call	557:17	559:33	4	TIFFWriteEncodedStrip
arg	557:39	557:45	5	output
water	557:39	0:0	6	output
arg	557:47	557:58	5	(tstrip_t)0
water	557:47	0:0	6	(
water	557:48	0:0	6	tstrip_t
water	557:56	0:0	6	)
water	557:57	0:0	6	0
arg	558:11	558:17	5	buffer
water	558:11	0:0	6	buffer
arg	559:11	559:33	5	stripsize*stripcount
water	559:11	0:0	6	stripsize
op	559:21	0:0	6	*
water	559:23	0:0	6	stripcount
water	559:34	0:0	4	;
water	560:1	0:0	4	}
else	560:3	566:1	2
stmts	562:8	566:1	3	
water	562:8	0:0	4	{
water	563:2	0:0	4	bufferoffset
op	563:15	0:0	4	=
call	563:17	565:29	4	TIFFWriteEncodedStrip
arg	563:39	563:45	5	output
water	563:39	0:0	6	output
arg	563:47	563:58	5	(tstrip_t)0
water	563:47	0:0	6	(
water	563:48	0:0	6	tstrip_t
water	563:56	0:0	6	)
water	563:57	0:0	6	0
arg	564:11	564:17	5	buffer
water	564:11	0:0	6	buffer
arg	565:11	565:29	5	t2p->tiff_datasize
water	565:11	0:0	6	t2p
op	565:14	0:0	6	->
water	565:16	0:0	6	tiff_datasize
water	565:30	0:0	4	;
water	566:1	0:0	4	}
if	567:1	570:1	2	(buffer != NULL)
cond	567:5	567:15	3	buffer != NULL
water	567:5	0:0	4	buffer
op	567:12	0:0	4	!=
water	567:15	0:0	4	NULL
stmts	567:21	570:1	3	
water	567:21	0:0	4	{
call	568:2	568:18	4	_TIFFfree
arg	568:12	568:18	5	buffer
water	568:12	0:0	6	buffer
water	568:19	0:0	4	;
water	569:2	0:0	4	buffer
op	569:8	0:0	4	=
water	569:9	0:0	4	NULL
water	569:13	0:0	4	;
water	570:1	0:0	4	}
if	572:1	578:1	2	(bufferoffset == ( tsize_t ) - 1)
cond	572:5	572:31	3	bufferoffset == ( tsize_t ) - 1
water	572:5	0:0	4	bufferoffset
op	572:18	0:0	4	==
water	572:21	0:0	4	(
water	572:22	0:0	4	tsize_t
water	572:29	0:0	4	)
op	572:30	0:0	4	-
water	572:31	0:0	4	1
stmts	572:34	578:1	3	
water	572:34	0:0	4	{
call	573:2	575:25	4	TIFFError
arg	573:12	573:27	5	TIFF2PDF_MODULE
water	573:12	0:0	6	TIFF2PDF_MODULE
arg	574:5	574:51	5	"Error writing encoded strip to output PDF %s"
water	574:5	0:0	6	"Error writing encoded strip to output PDF %s"
arg	575:5	575:25	5	TIFFFileName(output)
call	575:5	575:24	6	TIFFFileName
arg	575:18	575:24	7	output
water	575:18	0:0	8	output
water	575:26	0:0	4	;
water	576:2	0:0	4	t2p
op	576:5	0:0	4	->
water	576:7	0:0	4	t2p_error
op	576:17	0:0	4	=
water	576:19	0:0	4	T2P_ERR_ERROR
water	576:32	0:0	4	;
return	577:2	577:11	4	(0)
water	577:8	0:0	5	(
water	577:9	0:0	5	0
water	577:10	0:0	5	)
water	578:1	0:0	4	}
water	580:1	0:0	2	written
op	580:9	0:0	2	=
water	580:11	0:0	2	t2p
op	580:14	0:0	2	->
water	580:16	0:0	2	outputwritten
water	580:29	0:0	2	;
return	581:1	581:16	2	(written)
water	581:7	0:0	3	(
water	581:8	0:0	3	written
water	581:15	0:0	3	)

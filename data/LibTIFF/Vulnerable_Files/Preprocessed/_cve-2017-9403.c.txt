func	2:0	166:0	0	static enum TIFFReadDirEntryErr	TIFFReadDirEntryLong8Array
params	2:58	0:0	1	
param	2:59	2:68	2	TIFF *	tif
param	2:70	2:92	2	TIFFDirEntry *	direntry
param	2:94	2:108	2	uint64 * *	value
stmnts	0:0	165:30	1	
decl	4:1	4:29	2	enum TIFFReadDirEntryErr	err
decl	5:1	5:13	2	uint32	count
decl	6:1	6:15	2	void	*origdata
decl	7:1	7:13	2	uint64	*data
switch	8:1	21:1	2	(direntry -> tdir_type)
cond	8:9	8:19	3	direntry -> tdir_type
water	8:9	0:0	4	direntry
op	8:17	0:0	4	->
water	8:19	0:0	4	tdir_type
stmts	9:1	21:1	3	
water	9:1	0:0	4	{
label	10:2	10:16	4	case TIFF_BYTE :
label	11:2	11:17	4	case TIFF_SBYTE :
label	12:2	12:17	4	case TIFF_SHORT :
label	13:2	13:18	4	case TIFF_SSHORT :
label	14:2	14:16	4	case TIFF_LONG :
label	15:2	15:17	4	case TIFF_SLONG :
label	16:2	16:17	4	case TIFF_LONG8 :
label	17:2	17:18	4	case TIFF_SLONG8 :
break	18:3	18:8	4	
label	19:2	19:9	4	default :
return	20:3	20:34	4	(TIFFReadDirEntryErrType)
water	20:9	0:0	5	(
water	20:10	0:0	5	TIFFReadDirEntryErrType
water	20:33	0:0	5	)
water	21:1	0:0	4	}
water	22:1	0:0	2	err
op	22:4	0:0	2	=
call	22:5	22:58	2	TIFFReadDirEntryArray
arg	22:27	22:30	3	tif
water	22:27	0:0	4	tif
arg	22:31	22:39	3	direntry
water	22:31	0:0	4	direntry
arg	22:40	22:46	3	&count
op	22:40	0:0	4	&
water	22:41	0:0	4	count
arg	22:47	22:48	3	8
water	22:47	0:0	4	8
arg	22:49	22:58	3	&origdata
op	22:49	0:0	4	&
water	22:50	0:0	4	origdata
water	22:59	0:0	2	;
if	23:1	27:1	2	(( err != TIFFReadDirEntryErrOk ) || ( origdata == 0 ))
cond	23:5	23:47	3	( err != TIFFReadDirEntryErrOk ) || ( origdata == 0 )
water	23:5	0:0	4	(
water	23:6	0:0	4	err
op	23:9	0:0	4	!=
water	23:11	0:0	4	TIFFReadDirEntryErrOk
water	23:32	0:0	4	)
op	23:33	0:0	4	||
water	23:35	0:0	4	(
water	23:36	0:0	4	origdata
op	23:44	0:0	4	==
water	23:46	0:0	4	0
water	23:47	0:0	4	)
stmts	24:1	27:1	3	
water	24:1	0:0	4	{
op	25:2	0:0	4	*
water	25:3	0:0	4	value
op	25:8	0:0	4	=
water	25:9	0:0	4	0
water	25:10	0:0	4	;
return	26:2	26:13	4	(err)
water	26:8	0:0	5	(
water	26:9	0:0	5	err
water	26:12	0:0	5	)
water	27:1	0:0	4	}
switch	28:1	55:1	2	(direntry -> tdir_type)
cond	28:9	28:19	3	direntry -> tdir_type
water	28:9	0:0	4	direntry
op	28:17	0:0	4	->
water	28:19	0:0	4	tdir_type
stmts	29:1	55:1	3	
water	29:1	0:0	4	{
label	30:2	30:17	4	case TIFF_LONG8 :
op	31:3	0:0	4	*
water	31:4	0:0	4	value
op	31:9	0:0	4	=
water	31:10	0:0	4	(
water	31:11	0:0	4	uint64
op	31:17	0:0	4	*
water	31:18	0:0	4	)
water	31:19	0:0	4	origdata
water	31:27	0:0	4	;
if	32:3	33:38	4	(tif -> tif_flags & TIFF_SWAB)
cond	32:7	32:22	5	tif -> tif_flags & TIFF_SWAB
water	32:7	0:0	6	tif
op	32:10	0:0	6	->
water	32:12	0:0	6	tif_flags
op	32:21	0:0	6	&
water	32:22	0:0	6	TIFF_SWAB
stmts	33:4	33:38	5	
call	33:4	33:37	6	TIFFSwabArrayOfLong8
arg	33:25	33:31	7	*value
op	33:25	0:0	8	*
water	33:26	0:0	8	value
arg	33:32	33:37	7	count
water	33:32	0:0	8	count
water	33:38	0:0	6	;
return	34:3	34:32	4	(TIFFReadDirEntryErrOk)
water	34:9	0:0	5	(
water	34:10	0:0	5	TIFFReadDirEntryErrOk
water	34:31	0:0	5	)
label	35:2	35:18	4	case TIFF_SLONG8 :
water	36:3	0:0	4	{
decl	37:4	37:12	4	int64	*m
decl	38:4	38:12	4	uint32	n
water	39:4	0:0	4	m
op	39:5	0:0	4	=
water	39:6	0:0	4	(
water	39:7	0:0	4	int64
op	39:12	0:0	4	*
water	39:13	0:0	4	)
water	39:14	0:0	4	origdata
water	39:22	0:0	4	;
for	40:4	51:4	4	(n = 0 ;n < count;n ++)
forinit	40:9	40:12	5	n = 0 ;
water	40:9	0:0	6	n
op	40:10	0:0	6	=
water	40:11	0:0	6	0
water	40:12	0:0	6	;
cond	40:14	40:16	5	n < count
water	40:14	0:0	6	n
op	40:15	0:0	6	<
water	40:16	0:0	6	count
forexpr	40:23	40:24	5	n ++
water	40:23	0:0	6	n
op	40:24	0:0	6	++
stmts	41:4	51:4	5	
water	41:4	0:0	6	{
if	42:5	43:31	6	(tif -> tif_flags & TIFF_SWAB)
cond	42:9	42:24	7	tif -> tif_flags & TIFF_SWAB
water	42:9	0:0	8	tif
op	42:12	0:0	8	->
water	42:14	0:0	8	tif_flags
op	42:23	0:0	8	&
water	42:24	0:0	8	TIFF_SWAB
stmts	43:6	43:31	7	
call	43:6	43:30	8	TIFFSwabLong8
arg	43:20	43:30	9	(uint64*)m
water	43:20	0:0	10	(
water	43:21	0:0	10	uint64
op	43:27	0:0	10	*
water	43:28	0:0	10	)
water	43:29	0:0	10	m
water	43:31	0:0	8	;
water	44:5	0:0	6	err
op	44:8	0:0	6	=
call	44:9	44:49	6	TIFFReadDirEntryCheckRangeLong8Slong8
arg	44:47	44:49	7	*m
op	44:47	0:0	8	*
water	44:48	0:0	8	m
water	44:50	0:0	6	;
if	45:5	49:5	6	(err != TIFFReadDirEntryErrOk)
cond	45:9	45:14	7	err != TIFFReadDirEntryErrOk
water	45:9	0:0	8	err
op	45:12	0:0	8	!=
water	45:14	0:0	8	TIFFReadDirEntryErrOk
stmts	46:5	49:5	7	
water	46:5	0:0	8	{
call	47:6	47:24	8	_TIFFfree
arg	47:16	47:24	9	origdata
water	47:16	0:0	10	origdata
water	47:25	0:0	8	;
return	48:6	48:17	8	(err)
water	48:12	0:0	9	(
water	48:13	0:0	9	err
water	48:16	0:0	9	)
water	49:5	0:0	8	}
water	50:5	0:0	6	m
op	50:6	0:0	6	++
water	50:8	0:0	6	;
water	51:4	0:0	6	}
op	52:4	0:0	4	*
water	52:5	0:0	4	value
op	52:10	0:0	4	=
water	52:11	0:0	4	(
water	52:12	0:0	4	uint64
op	52:18	0:0	4	*
water	52:19	0:0	4	)
water	52:20	0:0	4	origdata
water	52:28	0:0	4	;
return	53:4	53:33	4	(TIFFReadDirEntryErrOk)
water	53:10	0:0	5	(
water	53:11	0:0	5	TIFFReadDirEntryErrOk
water	53:32	0:0	5	)
water	54:3	0:0	4	}
water	55:1	0:0	4	}
water	56:1	0:0	2	data
op	56:5	0:0	2	=
water	56:6	0:0	2	(
water	56:7	0:0	2	uint64
op	56:13	0:0	2	*
water	56:14	0:0	2	)
call	56:15	56:34	2	_TIFFmalloc
arg	56:27	56:34	3	count*8
water	56:27	0:0	4	count
op	56:32	0:0	4	*
water	56:33	0:0	4	8
water	56:35	0:0	2	;
if	57:1	61:1	2	(data == 0)
cond	57:5	57:11	3	data == 0
water	57:5	0:0	4	data
op	57:9	0:0	4	==
water	57:11	0:0	4	0
stmts	58:1	61:1	3	
water	58:1	0:0	4	{
call	59:2	59:20	4	_TIFFfree
arg	59:12	59:20	5	origdata
water	59:12	0:0	6	origdata
water	59:21	0:0	4	;
return	60:2	60:34	4	(TIFFReadDirEntryErrAlloc)
water	60:8	0:0	5	(
water	60:9	0:0	5	TIFFReadDirEntryErrAlloc
water	60:33	0:0	5	)
water	61:1	0:0	4	}
switch	62:1	157:1	2	(direntry -> tdir_type)
cond	62:9	62:19	3	direntry -> tdir_type
water	62:9	0:0	4	direntry
op	62:17	0:0	4	->
water	62:19	0:0	4	tdir_type
stmts	63:1	157:1	3	
water	63:1	0:0	4	{
label	64:2	64:16	4	case TIFF_BYTE :
water	65:3	0:0	4	{
decl	66:4	66:13	4	uint8	*ma
decl	67:4	67:14	4	uint64	*mb
decl	68:4	68:12	4	uint32	n
water	69:4	0:0	4	ma
op	69:6	0:0	4	=
water	69:7	0:0	4	(
water	69:8	0:0	4	uint8
op	69:13	0:0	4	*
water	69:14	0:0	4	)
water	69:15	0:0	4	origdata
water	69:23	0:0	4	;
water	70:4	0:0	4	mb
op	70:6	0:0	4	=
water	70:7	0:0	4	data
water	70:11	0:0	4	;
for	71:4	72:26	4	(n = 0 ;n < count;n ++)
forinit	71:9	71:12	5	n = 0 ;
water	71:9	0:0	6	n
op	71:10	0:0	6	=
water	71:11	0:0	6	0
water	71:12	0:0	6	;
cond	71:14	71:16	5	n < count
water	71:14	0:0	6	n
op	71:15	0:0	6	<
water	71:16	0:0	6	count
forexpr	71:23	71:24	5	n ++
water	71:23	0:0	6	n
op	71:24	0:0	6	++
stmts	72:5	72:26	5	
op	72:5	0:0	6	*
water	72:6	0:0	6	mb
op	72:8	0:0	6	++
op	72:10	0:0	6	=
call	72:11	72:25	6	(uint64)
arg	72:20	72:25	7	*ma++
op	72:20	0:0	8	*
water	72:21	0:0	8	ma
op	72:23	0:0	8	++
water	72:26	0:0	6	;
water	73:3	0:0	4	}
break	74:3	74:8	4	
label	75:2	75:17	4	case TIFF_SBYTE :
water	76:3	0:0	4	{
decl	77:4	77:12	4	int8	*ma
decl	78:4	78:14	4	uint64	*mb
decl	79:4	79:12	4	uint32	n
water	80:4	0:0	4	ma
op	80:6	0:0	4	=
water	80:7	0:0	4	(
water	80:8	0:0	4	int8
op	80:12	0:0	4	*
water	80:13	0:0	4	)
water	80:14	0:0	4	origdata
water	80:22	0:0	4	;
water	81:4	0:0	4	mb
op	81:6	0:0	4	=
water	81:7	0:0	4	data
water	81:11	0:0	4	;
for	82:4	88:4	4	(n = 0 ;n < count;n ++)
forinit	82:9	82:12	5	n = 0 ;
water	82:9	0:0	6	n
op	82:10	0:0	6	=
water	82:11	0:0	6	0
water	82:12	0:0	6	;
cond	82:14	82:16	5	n < count
water	82:14	0:0	6	n
op	82:15	0:0	6	<
water	82:16	0:0	6	count
forexpr	82:23	82:24	5	n ++
water	82:23	0:0	6	n
op	82:24	0:0	6	++
stmts	83:4	88:4	5	
water	83:4	0:0	6	{
water	84:5	0:0	6	err
op	84:8	0:0	6	=
call	84:9	84:49	6	TIFFReadDirEntryCheckRangeLong8Sbyte
arg	84:46	84:49	7	*ma
op	84:46	0:0	8	*
water	84:47	0:0	8	ma
water	84:50	0:0	6	;
if	85:5	86:11	6	(err != TIFFReadDirEntryErrOk)
cond	85:9	85:14	7	err != TIFFReadDirEntryErrOk
water	85:9	0:0	8	err
op	85:12	0:0	8	!=
water	85:14	0:0	8	TIFFReadDirEntryErrOk
stmts	86:6	86:11	7	
break	86:6	86:11	8	
op	87:5	0:0	6	*
water	87:6	0:0	6	mb
op	87:8	0:0	6	++
op	87:10	0:0	6	=
call	87:11	87:25	6	(uint64)
arg	87:20	87:25	7	*ma++
op	87:20	0:0	8	*
water	87:21	0:0	8	ma
op	87:23	0:0	8	++
water	87:26	0:0	6	;
water	88:4	0:0	6	}
water	89:3	0:0	4	}
break	90:3	90:8	4	
label	91:2	91:17	4	case TIFF_SHORT :
water	92:3	0:0	4	{
decl	93:4	93:14	4	uint16	*ma
decl	94:4	94:14	4	uint64	*mb
decl	95:4	95:12	4	uint32	n
water	96:4	0:0	4	ma
op	96:6	0:0	4	=
water	96:7	0:0	4	(
water	96:8	0:0	4	uint16
op	96:14	0:0	4	*
water	96:15	0:0	4	)
water	96:16	0:0	4	origdata
water	96:24	0:0	4	;
water	97:4	0:0	4	mb
op	97:6	0:0	4	=
water	97:7	0:0	4	data
water	97:11	0:0	4	;
for	98:4	103:4	4	(n = 0 ;n < count;n ++)
forinit	98:9	98:12	5	n = 0 ;
water	98:9	0:0	6	n
op	98:10	0:0	6	=
water	98:11	0:0	6	0
water	98:12	0:0	6	;
cond	98:14	98:16	5	n < count
water	98:14	0:0	6	n
op	98:15	0:0	6	<
water	98:16	0:0	6	count
forexpr	98:23	98:24	5	n ++
water	98:23	0:0	6	n
op	98:24	0:0	6	++
stmts	99:4	103:4	5	
water	99:4	0:0	6	{
if	100:5	101:23	6	(tif -> tif_flags & TIFF_SWAB)
cond	100:9	100:24	7	tif -> tif_flags & TIFF_SWAB
water	100:9	0:0	8	tif
op	100:12	0:0	8	->
water	100:14	0:0	8	tif_flags
op	100:23	0:0	8	&
water	100:24	0:0	8	TIFF_SWAB
stmts	101:6	101:23	7	
call	101:6	101:22	8	TIFFSwabShort
arg	101:20	101:22	9	ma
water	101:20	0:0	10	ma
water	101:23	0:0	8	;
op	102:5	0:0	6	*
water	102:6	0:0	6	mb
op	102:8	0:0	6	++
op	102:10	0:0	6	=
call	102:11	102:25	6	(uint64)
arg	102:20	102:25	7	*ma++
op	102:20	0:0	8	*
water	102:21	0:0	8	ma
op	102:23	0:0	8	++
water	102:26	0:0	6	;
water	103:4	0:0	6	}
water	104:3	0:0	4	}
break	105:3	105:8	4	
label	106:2	106:18	4	case TIFF_SSHORT :
water	107:3	0:0	4	{
decl	108:4	108:13	4	int16	*ma
decl	109:4	109:14	4	uint64	*mb
decl	110:4	110:12	4	uint32	n
water	111:4	0:0	4	ma
op	111:6	0:0	4	=
water	111:7	0:0	4	(
water	111:8	0:0	4	int16
op	111:13	0:0	4	*
water	111:14	0:0	4	)
water	111:15	0:0	4	origdata
water	111:23	0:0	4	;
water	112:4	0:0	4	mb
op	112:6	0:0	4	=
water	112:7	0:0	4	data
water	112:11	0:0	4	;
for	113:4	121:4	4	(n = 0 ;n < count;n ++)
forinit	113:9	113:12	5	n = 0 ;
water	113:9	0:0	6	n
op	113:10	0:0	6	=
water	113:11	0:0	6	0
water	113:12	0:0	6	;
cond	113:14	113:16	5	n < count
water	113:14	0:0	6	n
op	113:15	0:0	6	<
water	113:16	0:0	6	count
forexpr	113:23	113:24	5	n ++
water	113:23	0:0	6	n
op	113:24	0:0	6	++
stmts	114:4	121:4	5	
water	114:4	0:0	6	{
if	115:5	116:32	6	(tif -> tif_flags & TIFF_SWAB)
cond	115:9	115:24	7	tif -> tif_flags & TIFF_SWAB
water	115:9	0:0	8	tif
op	115:12	0:0	8	->
water	115:14	0:0	8	tif_flags
op	115:23	0:0	8	&
water	115:24	0:0	8	TIFF_SWAB
stmts	116:6	116:32	7	
call	116:6	116:31	8	TIFFSwabShort
arg	116:20	116:31	9	(uint16*)ma
water	116:20	0:0	10	(
water	116:21	0:0	10	uint16
op	116:27	0:0	10	*
water	116:28	0:0	10	)
water	116:29	0:0	10	ma
water	116:32	0:0	8	;
water	117:5	0:0	6	err
op	117:8	0:0	6	=
call	117:9	117:50	6	TIFFReadDirEntryCheckRangeLong8Sshort
arg	117:47	117:50	7	*ma
op	117:47	0:0	8	*
water	117:48	0:0	8	ma
water	117:51	0:0	6	;
if	118:5	119:11	6	(err != TIFFReadDirEntryErrOk)
cond	118:9	118:14	7	err != TIFFReadDirEntryErrOk
water	118:9	0:0	8	err
op	118:12	0:0	8	!=
water	118:14	0:0	8	TIFFReadDirEntryErrOk
stmts	119:6	119:11	7	
break	119:6	119:11	8	
op	120:5	0:0	6	*
water	120:6	0:0	6	mb
op	120:8	0:0	6	++
op	120:10	0:0	6	=
call	120:11	120:25	6	(uint64)
arg	120:20	120:25	7	*ma++
op	120:20	0:0	8	*
water	120:21	0:0	8	ma
op	120:23	0:0	8	++
water	120:26	0:0	6	;
water	121:4	0:0	6	}
water	122:3	0:0	4	}
break	123:3	123:8	4	
label	124:2	124:16	4	case TIFF_LONG :
water	125:3	0:0	4	{
decl	126:4	126:14	4	uint32	*ma
decl	127:4	127:14	4	uint64	*mb
decl	128:4	128:12	4	uint32	n
water	129:4	0:0	4	ma
op	129:6	0:0	4	=
water	129:7	0:0	4	(
water	129:8	0:0	4	uint32
op	129:14	0:0	4	*
water	129:15	0:0	4	)
water	129:16	0:0	4	origdata
water	129:24	0:0	4	;
water	130:4	0:0	4	mb
op	130:6	0:0	4	=
water	130:7	0:0	4	data
water	130:11	0:0	4	;
for	131:4	136:4	4	(n = 0 ;n < count;n ++)
forinit	131:9	131:12	5	n = 0 ;
water	131:9	0:0	6	n
op	131:10	0:0	6	=
water	131:11	0:0	6	0
water	131:12	0:0	6	;
cond	131:14	131:16	5	n < count
water	131:14	0:0	6	n
op	131:15	0:0	6	<
water	131:16	0:0	6	count
forexpr	131:23	131:24	5	n ++
water	131:23	0:0	6	n
op	131:24	0:0	6	++
stmts	132:4	136:4	5	
water	132:4	0:0	6	{
if	133:5	134:22	6	(tif -> tif_flags & TIFF_SWAB)
cond	133:9	133:24	7	tif -> tif_flags & TIFF_SWAB
water	133:9	0:0	8	tif
op	133:12	0:0	8	->
water	133:14	0:0	8	tif_flags
op	133:23	0:0	8	&
water	133:24	0:0	8	TIFF_SWAB
stmts	134:6	134:22	7	
call	134:6	134:21	8	TIFFSwabLong
arg	134:19	134:21	9	ma
water	134:19	0:0	10	ma
water	134:22	0:0	8	;
op	135:5	0:0	6	*
water	135:6	0:0	6	mb
op	135:8	0:0	6	++
op	135:10	0:0	6	=
call	135:11	135:25	6	(uint64)
arg	135:20	135:25	7	*ma++
op	135:20	0:0	8	*
water	135:21	0:0	8	ma
op	135:23	0:0	8	++
water	135:26	0:0	6	;
water	136:4	0:0	6	}
water	137:3	0:0	4	}
break	138:3	138:8	4	
label	139:2	139:17	4	case TIFF_SLONG :
water	140:3	0:0	4	{
decl	141:4	141:13	4	int32	*ma
decl	142:4	142:14	4	uint64	*mb
decl	143:4	143:12	4	uint32	n
water	144:4	0:0	4	ma
op	144:6	0:0	4	=
water	144:7	0:0	4	(
water	144:8	0:0	4	int32
op	144:13	0:0	4	*
water	144:14	0:0	4	)
water	144:15	0:0	4	origdata
water	144:23	0:0	4	;
water	145:4	0:0	4	mb
op	145:6	0:0	4	=
water	145:7	0:0	4	data
water	145:11	0:0	4	;
for	146:4	154:4	4	(n = 0 ;n < count;n ++)
forinit	146:9	146:12	5	n = 0 ;
water	146:9	0:0	6	n
op	146:10	0:0	6	=
water	146:11	0:0	6	0
water	146:12	0:0	6	;
cond	146:14	146:16	5	n < count
water	146:14	0:0	6	n
op	146:15	0:0	6	<
water	146:16	0:0	6	count
forexpr	146:23	146:24	5	n ++
water	146:23	0:0	6	n
op	146:24	0:0	6	++
stmts	147:4	154:4	5	
water	147:4	0:0	6	{
if	148:5	149:31	6	(tif -> tif_flags & TIFF_SWAB)
cond	148:9	148:24	7	tif -> tif_flags & TIFF_SWAB
water	148:9	0:0	8	tif
op	148:12	0:0	8	->
water	148:14	0:0	8	tif_flags
op	148:23	0:0	8	&
water	148:24	0:0	8	TIFF_SWAB
stmts	149:6	149:31	7	
call	149:6	149:30	8	TIFFSwabLong
arg	149:19	149:30	9	(uint32*)ma
water	149:19	0:0	10	(
water	149:20	0:0	10	uint32
op	149:26	0:0	10	*
water	149:27	0:0	10	)
water	149:28	0:0	10	ma
water	149:31	0:0	8	;
water	150:5	0:0	6	err
op	150:8	0:0	6	=
call	150:9	150:49	6	TIFFReadDirEntryCheckRangeLong8Slong
arg	150:46	150:49	7	*ma
op	150:46	0:0	8	*
water	150:47	0:0	8	ma
water	150:50	0:0	6	;
if	151:5	152:11	6	(err != TIFFReadDirEntryErrOk)
cond	151:9	151:14	7	err != TIFFReadDirEntryErrOk
water	151:9	0:0	8	err
op	151:12	0:0	8	!=
water	151:14	0:0	8	TIFFReadDirEntryErrOk
stmts	152:6	152:11	7	
break	152:6	152:11	8	
op	153:5	0:0	6	*
water	153:6	0:0	6	mb
op	153:8	0:0	6	++
op	153:10	0:0	6	=
call	153:11	153:25	6	(uint64)
arg	153:20	153:25	7	*ma++
op	153:20	0:0	8	*
water	153:21	0:0	8	ma
op	153:23	0:0	8	++
water	153:26	0:0	6	;
water	154:4	0:0	6	}
water	155:3	0:0	4	}
break	156:3	156:8	4	
water	157:1	0:0	4	}
call	158:1	158:19	2	_TIFFfree
arg	158:11	158:19	3	origdata
water	158:11	0:0	4	origdata
water	158:20	0:0	2	;
if	159:1	163:1	2	(err != TIFFReadDirEntryErrOk)
cond	159:5	159:10	3	err != TIFFReadDirEntryErrOk
water	159:5	0:0	4	err
op	159:8	0:0	4	!=
water	159:10	0:0	4	TIFFReadDirEntryErrOk
stmts	160:1	163:1	3	
water	160:1	0:0	4	{
call	161:2	161:16	4	_TIFFfree
arg	161:12	161:16	5	data
water	161:12	0:0	6	data
water	161:17	0:0	4	;
return	162:2	162:13	4	(err)
water	162:8	0:0	5	(
water	162:9	0:0	5	err
water	162:12	0:0	5	)
water	163:1	0:0	4	}
op	164:1	0:0	2	*
water	164:2	0:0	2	value
op	164:7	0:0	2	=
water	164:8	0:0	2	data
water	164:12	0:0	2	;
return	165:1	165:30	2	(TIFFReadDirEntryErrOk)
water	165:7	0:0	3	(
water	165:8	0:0	3	TIFFReadDirEntryErrOk
water	165:29	0:0	3	)

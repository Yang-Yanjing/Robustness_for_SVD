func	2:0	443:0	0	tsize_t	t2p_readwrite_pdf_image_tile
params	2:36	0:0	1	
param	2:37	2:45	2	T2P *	t2p
param	2:47	2:58	2	TIFF *	input
param	2:60	2:72	2	TIFF *	output
param	2:74	2:86	2	ttile_t	tile
stmnts	0:0	442:16	1	
decl	4:1	4:14	2	uint16	edge
op	4:12	0:0	2	=
water	4:13	0:0	2	0
decl	5:1	5:18	2	tsize_t	written
op	5:16	0:0	2	=
water	5:17	0:0	2	0
decl	6:1	6:27	2	unsigned char	*buffer
op	6:22	0:0	2	=
water	6:23	0:0	2	NULL
decl	7:1	7:23	2	tsize_t	bufferoffset
op	7:21	0:0	2	=
water	7:22	0:0	2	0
decl	8:1	8:33	2	unsigned char	*samplebuffer
op	8:28	0:0	2	=
water	8:29	0:0	2	NULL
decl	9:1	9:29	2	tsize_t	samplebufferoffset
op	9:27	0:0	2	=
water	9:28	0:0	2	0
decl	10:1	10:15	2	tsize_t	read
op	10:13	0:0	2	=
water	10:14	0:0	2	0
decl	11:1	11:11	2	uint16	i
op	11:9	0:0	2	=
water	11:10	0:0	2	0
decl	12:1	12:20	2	ttile_t	tilecount
op	12:18	0:0	2	=
water	12:19	0:0	2	0
decl	14:1	14:23	2	ttile_t	septilecount
op	14:21	0:0	2	=
water	14:22	0:0	2	0
decl	15:1	15:22	2	tsize_t	septilesize
op	15:20	0:0	2	=
water	15:21	0:0	2	0
decl	17:1	17:19	2	unsigned char	*jpt
decl	18:1	18:15	2	float	*xfloatp
decl	19:1	19:17	2	uint32	xuint32
op	19:15	0:0	2	=
water	19:16	0:0	2	0
if	23:1	24:11	2	(t2p -> t2p_error != T2P_ERR_OK)
cond	23:5	23:23	3	t2p -> t2p_error != T2P_ERR_OK
water	23:5	0:0	4	t2p
op	23:8	0:0	4	->
water	23:10	0:0	4	t2p_error
op	23:20	0:0	4	!=
water	23:23	0:0	4	T2P_ERR_OK
stmts	24:2	24:11	3	
return	24:2	24:11	4	(0)
water	24:8	0:0	5	(
water	24:9	0:0	5	0
water	24:10	0:0	5	)
water	26:1	0:0	2	edge
op	26:6	0:0	2	|=
call	26:9	26:68	2	t2p_tile_is_right_edge
arg	26:32	26:62	3	t2p->tiff_tiles[t2p->pdf_page]
water	26:32	0:0	4	t2p
op	26:35	0:0	4	->
water	26:37	0:0	4	tiff_tiles
op	26:47	0:0	4	[
water	26:48	0:0	4	t2p
op	26:51	0:0	4	->
water	26:53	0:0	4	pdf_page
op	26:61	0:0	4	]
arg	26:64	26:68	3	tile
water	26:64	0:0	4	tile
water	26:69	0:0	2	;
water	27:1	0:0	2	edge
op	27:6	0:0	2	|=
call	27:9	27:69	2	t2p_tile_is_bottom_edge
arg	27:33	27:63	3	t2p->tiff_tiles[t2p->pdf_page]
water	27:33	0:0	4	t2p
op	27:36	0:0	4	->
water	27:38	0:0	4	tiff_tiles
op	27:48	0:0	4	[
water	27:49	0:0	4	t2p
op	27:52	0:0	4	->
water	27:54	0:0	4	pdf_page
op	27:62	0:0	4	]
arg	27:65	27:69	3	tile
water	27:65	0:0	4	tile
water	27:70	0:0	2	;
if	29:1	171:1	2	(( t2p -> pdf_transcode == T2P_TRANSCODE_RAW ) && ( ( edge == 0 ) || ( t2p -> pdf_compression == T2P_COMPRESS_JPEG ) ))
cond	29:5	33:1	3	( t2p -> pdf_transcode == T2P_TRANSCODE_RAW ) && ( ( edge == 0 ) || ( t2p -> pdf_compression == T2P_COMPRESS_JPEG ) )
water	29:5	0:0	4	(
water	29:6	0:0	4	t2p
op	29:9	0:0	4	->
water	29:11	0:0	4	pdf_transcode
op	29:25	0:0	4	==
water	29:28	0:0	4	T2P_TRANSCODE_RAW
water	29:45	0:0	4	)
op	29:47	0:0	4	&&
water	29:50	0:0	4	(
water	29:51	0:0	4	(
water	29:52	0:0	4	edge
op	29:57	0:0	4	==
water	29:60	0:0	4	0
water	29:61	0:0	4	)
op	31:2	0:0	4	||
water	31:5	0:0	4	(
water	31:6	0:0	4	t2p
op	31:9	0:0	4	->
water	31:11	0:0	4	pdf_compression
op	31:27	0:0	4	==
water	31:30	0:0	4	T2P_COMPRESS_JPEG
water	31:47	0:0	4	)
water	33:1	0:0	4	)
stmts	34:2	171:1	3	
water	34:2	0:0	4	{
if	36:2	54:2	4	(t2p -> pdf_compression == T2P_COMPRESS_G4)
cond	36:5	36:29	5	t2p -> pdf_compression == T2P_COMPRESS_G4
water	36:5	0:0	6	t2p
op	36:8	0:0	6	->
water	36:10	0:0	6	pdf_compression
op	36:26	0:0	6	==
water	36:29	0:0	6	T2P_COMPRESS_G4
stmts	36:45	54:2	5	
water	36:45	0:0	6	{
water	37:3	0:0	6	buffer
op	37:9	0:0	6	=
water	37:11	0:0	6	(
water	37:12	0:0	6	unsigned
water	37:21	0:0	6	char
op	37:25	0:0	6	*
water	37:26	0:0	6	)
call	37:28	37:58	6	_TIFFmalloc
arg	37:40	37:58	7	t2p->tiff_datasize
water	37:40	0:0	8	t2p
op	37:43	0:0	8	->
water	37:45	0:0	8	tiff_datasize
water	37:59	0:0	6	;
if	38:3	46:3	6	(buffer == NULL)
cond	38:6	38:14	7	buffer == NULL
water	38:6	0:0	8	buffer
op	38:12	0:0	8	==
water	38:14	0:0	8	NULL
stmts	38:19	46:3	7	
water	38:19	0:0	8	{
call	39:4	43:24	8	TIFFError
arg	39:14	39:29	9	TIFF2PDF_MODULE
water	39:14	0:0	10	TIFF2PDF_MODULE
arg	40:5	41:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	40:5	0:0	10	"Can't allocate %lu bytes of memory "
water	41:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	42:5	42:39	9	(unsignedlong)t2p->tiff_datasize
water	42:5	0:0	10	(
water	42:6	0:0	10	unsigned
water	42:15	0:0	10	long
water	42:19	0:0	10	)
water	42:21	0:0	10	t2p
op	42:24	0:0	10	->
water	42:26	0:0	10	tiff_datasize
arg	43:5	43:24	9	TIFFFileName(input)
call	43:5	43:23	10	TIFFFileName
arg	43:18	43:23	11	input
water	43:18	0:0	12	input
water	43:25	0:0	8	;
water	44:4	0:0	8	t2p
op	44:7	0:0	8	->
water	44:9	0:0	8	t2p_error
op	44:19	0:0	8	=
water	44:21	0:0	8	T2P_ERR_ERROR
water	44:34	0:0	8	;
return	45:4	45:13	8	(0)
water	45:10	0:0	9	(
water	45:11	0:0	9	0
water	45:12	0:0	9	)
water	46:3	0:0	8	}
call	47:3	47:68	6	TIFFReadRawTile
arg	47:19	47:24	7	input
water	47:19	0:0	8	input
arg	47:26	47:30	7	tile
water	47:26	0:0	8	tile
arg	47:32	47:48	7	(tdata_t)buffer
water	47:32	0:0	8	(
water	47:33	0:0	8	tdata_t
water	47:40	0:0	8	)
water	47:42	0:0	8	buffer
arg	47:50	47:68	7	t2p->tiff_datasize
water	47:50	0:0	8	t2p
op	47:53	0:0	8	->
water	47:55	0:0	8	tiff_datasize
water	47:69	0:0	6	;
if	48:3	50:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	48:7	48:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	48:7	0:0	8	t2p
op	48:10	0:0	8	->
water	48:12	0:0	8	tiff_fillorder
op	48:26	0:0	8	==
water	48:28	0:0	8	FILLORDER_LSB2MSB
stmts	48:46	50:3	7	
water	48:46	0:0	8	{
call	49:5	49:47	8	TIFFReverseBits
arg	49:21	49:27	9	buffer
water	49:21	0:0	10	buffer
arg	49:29	49:47	9	t2p->tiff_datasize
water	49:29	0:0	10	t2p
op	49:32	0:0	10	->
water	49:34	0:0	10	tiff_datasize
water	49:48	0:0	8	;
water	50:3	0:0	8	}
call	51:3	51:60	6	t2pWriteFile
arg	51:16	51:22	7	output
water	51:16	0:0	8	output
arg	51:24	51:40	7	(tdata_t)buffer
water	51:24	0:0	8	(
water	51:25	0:0	8	tdata_t
water	51:32	0:0	8	)
water	51:34	0:0	8	buffer
arg	51:42	51:60	7	t2p->tiff_datasize
water	51:42	0:0	8	t2p
op	51:45	0:0	8	->
water	51:47	0:0	8	tiff_datasize
water	51:61	0:0	6	;
call	52:3	52:19	6	_TIFFfree
arg	52:13	52:19	7	buffer
water	52:13	0:0	8	buffer
water	52:20	0:0	6	;
return	53:3	53:29	6	(t2p->tiff_datasize)
water	53:9	0:0	7	(
water	53:10	0:0	7	t2p
op	53:13	0:0	7	->
water	53:15	0:0	7	tiff_datasize
water	53:28	0:0	7	)
water	54:2	0:0	6	}
if	57:2	75:2	4	(t2p -> pdf_compression == T2P_COMPRESS_ZIP)
cond	57:5	57:29	5	t2p -> pdf_compression == T2P_COMPRESS_ZIP
water	57:5	0:0	6	t2p
op	57:8	0:0	6	->
water	57:10	0:0	6	pdf_compression
op	57:26	0:0	6	==
water	57:29	0:0	6	T2P_COMPRESS_ZIP
stmts	57:46	75:2	5	
water	57:46	0:0	6	{
water	58:3	0:0	6	buffer
op	58:9	0:0	6	=
water	58:11	0:0	6	(
water	58:12	0:0	6	unsigned
water	58:21	0:0	6	char
op	58:25	0:0	6	*
water	58:26	0:0	6	)
call	58:28	58:58	6	_TIFFmalloc
arg	58:40	58:58	7	t2p->tiff_datasize
water	58:40	0:0	8	t2p
op	58:43	0:0	8	->
water	58:45	0:0	8	tiff_datasize
water	58:59	0:0	6	;
if	59:3	67:3	6	(buffer == NULL)
cond	59:6	59:14	7	buffer == NULL
water	59:6	0:0	8	buffer
op	59:12	0:0	8	==
water	59:14	0:0	8	NULL
stmts	59:19	67:3	7	
water	59:19	0:0	8	{
call	60:4	64:24	8	TIFFError
arg	60:14	60:29	9	TIFF2PDF_MODULE
water	60:14	0:0	10	TIFF2PDF_MODULE
arg	61:5	62:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	61:5	0:0	10	"Can't allocate %lu bytes of memory "
water	62:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	63:5	63:39	9	(unsignedlong)t2p->tiff_datasize
water	63:5	0:0	10	(
water	63:6	0:0	10	unsigned
water	63:15	0:0	10	long
water	63:19	0:0	10	)
water	63:21	0:0	10	t2p
op	63:24	0:0	10	->
water	63:26	0:0	10	tiff_datasize
arg	64:5	64:24	9	TIFFFileName(input)
call	64:5	64:23	10	TIFFFileName
arg	64:18	64:23	11	input
water	64:18	0:0	12	input
water	64:25	0:0	8	;
water	65:4	0:0	8	t2p
op	65:7	0:0	8	->
water	65:9	0:0	8	t2p_error
op	65:19	0:0	8	=
water	65:21	0:0	8	T2P_ERR_ERROR
water	65:34	0:0	8	;
return	66:4	66:13	8	(0)
water	66:10	0:0	9	(
water	66:11	0:0	9	0
water	66:12	0:0	9	)
water	67:3	0:0	8	}
call	68:3	68:68	6	TIFFReadRawTile
arg	68:19	68:24	7	input
water	68:19	0:0	8	input
arg	68:26	68:30	7	tile
water	68:26	0:0	8	tile
arg	68:32	68:48	7	(tdata_t)buffer
water	68:32	0:0	8	(
water	68:33	0:0	8	tdata_t
water	68:40	0:0	8	)
water	68:42	0:0	8	buffer
arg	68:50	68:68	7	t2p->tiff_datasize
water	68:50	0:0	8	t2p
op	68:53	0:0	8	->
water	68:55	0:0	8	tiff_datasize
water	68:69	0:0	6	;
if	69:3	71:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	69:7	69:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	69:7	0:0	8	t2p
op	69:10	0:0	8	->
water	69:12	0:0	8	tiff_fillorder
op	69:26	0:0	8	==
water	69:28	0:0	8	FILLORDER_LSB2MSB
stmts	69:46	71:3	7	
water	69:46	0:0	8	{
call	70:5	70:47	8	TIFFReverseBits
arg	70:21	70:27	9	buffer
water	70:21	0:0	10	buffer
arg	70:29	70:47	9	t2p->tiff_datasize
water	70:29	0:0	10	t2p
op	70:32	0:0	10	->
water	70:34	0:0	10	tiff_datasize
water	70:48	0:0	8	;
water	71:3	0:0	8	}
call	72:3	72:60	6	t2pWriteFile
arg	72:16	72:22	7	output
water	72:16	0:0	8	output
arg	72:24	72:40	7	(tdata_t)buffer
water	72:24	0:0	8	(
water	72:25	0:0	8	tdata_t
water	72:32	0:0	8	)
water	72:34	0:0	8	buffer
arg	72:42	72:60	7	t2p->tiff_datasize
water	72:42	0:0	8	t2p
op	72:45	0:0	8	->
water	72:47	0:0	8	tiff_datasize
water	72:61	0:0	6	;
call	73:3	73:19	6	_TIFFfree
arg	73:13	73:19	7	buffer
water	73:13	0:0	8	buffer
water	73:20	0:0	6	;
return	74:3	74:29	6	(t2p->tiff_datasize)
water	74:9	0:0	7	(
water	74:10	0:0	7	t2p
op	74:13	0:0	7	->
water	74:15	0:0	7	tiff_datasize
water	74:28	0:0	7	)
water	75:2	0:0	6	}
if	78:2	122:2	4	(t2p -> tiff_compression == COMPRESSION_OJPEG)
cond	78:5	78:30	5	t2p -> tiff_compression == COMPRESSION_OJPEG
water	78:5	0:0	6	t2p
op	78:8	0:0	6	->
water	78:10	0:0	6	tiff_compression
op	78:27	0:0	6	==
water	78:30	0:0	6	COMPRESSION_OJPEG
stmts	78:48	122:2	5	
water	78:48	0:0	6	{
if	79:3	86:3	6	(! t2p -> pdf_ojpegdata)
cond	79:6	79:13	7	! t2p -> pdf_ojpegdata
op	79:6	0:0	8	!
water	79:8	0:0	8	t2p
op	79:11	0:0	8	->
water	79:13	0:0	8	pdf_ojpegdata
stmts	79:27	86:3	7	
water	79:27	0:0	8	{
call	80:4	83:24	8	TIFFError
arg	80:14	80:29	9	TIFF2PDF_MODULE
water	80:14	0:0	10	TIFF2PDF_MODULE
arg	81:5	82:52	9	"No support for OJPEG image %s with ""bad tables"
water	81:5	0:0	10	"No support for OJPEG image %s with "
water	82:40	0:0	10	"bad tables"
arg	83:5	83:24	9	TIFFFileName(input)
call	83:5	83:23	10	TIFFFileName
arg	83:18	83:23	11	input
water	83:18	0:0	12	input
water	83:25	0:0	8	;
water	84:4	0:0	8	t2p
op	84:7	0:0	8	->
water	84:9	0:0	8	t2p_error
op	84:19	0:0	8	=
water	84:21	0:0	8	T2P_ERR_ERROR
water	84:34	0:0	8	;
return	85:4	85:13	8	(0)
water	85:10	0:0	9	(
water	85:11	0:0	9	0
water	85:12	0:0	9	)
water	86:3	0:0	8	}
water	87:3	0:0	6	buffer
op	87:9	0:0	6	=
water	87:10	0:0	6	(
water	87:11	0:0	6	unsigned
water	87:20	0:0	6	char
op	87:24	0:0	6	*
water	87:25	0:0	6	)
call	87:27	87:57	6	_TIFFmalloc
arg	87:39	87:57	7	t2p->tiff_datasize
water	87:39	0:0	8	t2p
op	87:42	0:0	8	->
water	87:44	0:0	8	tiff_datasize
water	87:58	0:0	6	;
if	88:3	96:3	6	(buffer == NULL)
cond	88:6	88:14	7	buffer == NULL
water	88:6	0:0	8	buffer
op	88:12	0:0	8	==
water	88:14	0:0	8	NULL
stmts	88:19	96:3	7	
water	88:19	0:0	8	{
call	89:4	93:24	8	TIFFError
arg	89:14	89:29	9	TIFF2PDF_MODULE
water	89:14	0:0	10	TIFF2PDF_MODULE
arg	90:5	91:73	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image, %s"
water	90:5	0:0	10	"Can't allocate %lu bytes of memory "
water	91:40	0:0	10	"for t2p_readwrite_pdf_image, %s"
arg	92:5	92:39	9	(unsignedlong)t2p->tiff_datasize
water	92:5	0:0	10	(
water	92:6	0:0	10	unsigned
water	92:15	0:0	10	long
water	92:19	0:0	10	)
water	92:21	0:0	10	t2p
op	92:24	0:0	10	->
water	92:26	0:0	10	tiff_datasize
arg	93:5	93:24	9	TIFFFileName(input)
call	93:5	93:23	10	TIFFFileName
arg	93:18	93:23	11	input
water	93:18	0:0	12	input
water	93:25	0:0	8	;
water	94:4	0:0	8	t2p
op	94:7	0:0	8	->
water	94:9	0:0	8	t2p_error
op	94:19	0:0	8	=
water	94:21	0:0	8	T2P_ERR_ERROR
water	94:34	0:0	8	;
return	95:4	95:13	8	(0)
water	95:10	0:0	9	(
water	95:11	0:0	9	0
water	95:12	0:0	9	)
water	96:3	0:0	8	}
call	97:3	97:67	6	_TIFFmemcpy
arg	97:15	97:21	7	buffer
water	97:15	0:0	8	buffer
arg	97:23	97:41	7	t2p->pdf_ojpegdata
water	97:23	0:0	8	t2p
op	97:26	0:0	8	->
water	97:28	0:0	8	pdf_ojpegdata
arg	97:43	97:67	7	t2p->pdf_ojpegdatalength
water	97:43	0:0	8	t2p
op	97:46	0:0	8	->
water	97:48	0:0	8	pdf_ojpegdatalength
water	97:68	0:0	6	;
if	98:3	111:3	6	(edge != 0)
cond	98:6	98:12	7	edge != 0
water	98:6	0:0	8	edge
op	98:10	0:0	8	!=
water	98:12	0:0	8	0
stmts	98:14	111:3	7	
water	98:14	0:0	8	{
if	99:4	104:4	8	(t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ))
cond	99:7	99:67	9	t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile )
call	99:7	99:67	10	t2p_tile_is_bottom_edge
arg	99:31	99:61	11	t2p->tiff_tiles[t2p->pdf_page]
water	99:31	0:0	12	t2p
op	99:34	0:0	12	->
water	99:36	0:0	12	tiff_tiles
op	99:46	0:0	12	[
water	99:47	0:0	12	t2p
op	99:50	0:0	12	->
water	99:52	0:0	12	pdf_page
op	99:60	0:0	12	]
arg	99:63	99:67	11	tile
water	99:63	0:0	12	tile
stmts	99:69	104:4	9	
water	99:69	0:0	10	{
water	100:5	0:0	10	buffer
op	100:11	0:0	10	[
water	100:12	0:0	10	7
op	100:13	0:0	10	]
op	100:14	0:0	10	=
water	101:6	0:0	10	(
water	101:7	0:0	10	t2p
op	101:10	0:0	10	->
water	101:12	0:0	10	tiff_tiles
op	101:22	0:0	10	[
water	101:23	0:0	10	t2p
op	101:26	0:0	10	->
water	101:28	0:0	10	pdf_page
op	101:36	0:0	10	]
op	101:37	0:0	10	.
water	101:38	0:0	10	tiles_edgetilelength
op	101:59	0:0	10	>>
water	101:62	0:0	10	8
water	101:63	0:0	10	)
op	101:65	0:0	10	&
water	101:67	0:0	10	0
water	101:68	0:0	10	xff
water	101:71	0:0	10	;
water	102:5	0:0	10	buffer
op	102:11	0:0	10	[
water	102:12	0:0	10	8
op	102:13	0:0	10	]
op	102:14	0:0	10	=
water	103:6	0:0	10	(
water	103:7	0:0	10	t2p
op	103:10	0:0	10	->
water	103:12	0:0	10	tiff_tiles
op	103:22	0:0	10	[
water	103:23	0:0	10	t2p
op	103:26	0:0	10	->
water	103:28	0:0	10	pdf_page
op	103:36	0:0	10	]
op	103:37	0:0	10	.
water	103:38	0:0	10	tiles_edgetilelength
water	103:59	0:0	10	)
op	103:61	0:0	10	&
water	103:63	0:0	10	0
water	103:64	0:0	10	xff
water	103:67	0:0	10	;
water	104:4	0:0	10	}
if	105:4	110:4	8	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ))
cond	105:7	105:66	9	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile )
call	105:7	105:66	10	t2p_tile_is_right_edge
arg	105:30	105:60	11	t2p->tiff_tiles[t2p->pdf_page]
water	105:30	0:0	12	t2p
op	105:33	0:0	12	->
water	105:35	0:0	12	tiff_tiles
op	105:45	0:0	12	[
water	105:46	0:0	12	t2p
op	105:49	0:0	12	->
water	105:51	0:0	12	pdf_page
op	105:59	0:0	12	]
arg	105:62	105:66	11	tile
water	105:62	0:0	12	tile
stmts	105:68	110:4	9	
water	105:68	0:0	10	{
water	106:5	0:0	10	buffer
op	106:11	0:0	10	[
water	106:12	0:0	10	9
op	106:13	0:0	10	]
op	106:14	0:0	10	=
water	107:6	0:0	10	(
water	107:7	0:0	10	t2p
op	107:10	0:0	10	->
water	107:12	0:0	10	tiff_tiles
op	107:22	0:0	10	[
water	107:23	0:0	10	t2p
op	107:26	0:0	10	->
water	107:28	0:0	10	pdf_page
op	107:36	0:0	10	]
op	107:37	0:0	10	.
water	107:38	0:0	10	tiles_edgetilewidth
op	107:58	0:0	10	>>
water	107:61	0:0	10	8
water	107:62	0:0	10	)
op	107:64	0:0	10	&
water	107:66	0:0	10	0
water	107:67	0:0	10	xff
water	107:70	0:0	10	;
water	108:5	0:0	10	buffer
op	108:11	0:0	10	[
water	108:12	0:0	10	10
op	108:14	0:0	10	]
op	108:15	0:0	10	=
water	109:6	0:0	10	(
water	109:7	0:0	10	t2p
op	109:10	0:0	10	->
water	109:12	0:0	10	tiff_tiles
op	109:22	0:0	10	[
water	109:23	0:0	10	t2p
op	109:26	0:0	10	->
water	109:28	0:0	10	pdf_page
op	109:36	0:0	10	]
op	109:37	0:0	10	.
water	109:38	0:0	10	tiles_edgetilewidth
water	109:58	0:0	10	)
op	109:60	0:0	10	&
water	109:62	0:0	10	0
water	109:63	0:0	10	xff
water	109:66	0:0	10	;
water	110:4	0:0	10	}
water	111:3	0:0	8	}
water	112:3	0:0	6	bufferoffset
op	112:15	0:0	6	=
water	112:16	0:0	6	t2p
op	112:19	0:0	6	->
water	112:21	0:0	6	pdf_ojpegdatalength
water	112:40	0:0	6	;
water	113:3	0:0	6	bufferoffset
op	113:15	0:0	6	+=
call	113:17	116:7	6	TIFFReadRawTile
arg	113:33	113:38	7	input
water	113:33	0:0	8	input
arg	114:5	114:9	7	tile
water	114:5	0:0	8	tile
arg	115:5	115:56	7	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	115:5	0:0	8	(
water	115:6	0:0	8	tdata_t
water	115:13	0:0	8	)
op	115:15	0:0	8	&
water	115:16	0:0	8	(
water	115:17	0:0	8	(
water	115:18	0:0	8	(
water	115:19	0:0	8	unsigned
water	115:28	0:0	8	char
op	115:32	0:0	8	*
water	115:33	0:0	8	)
water	115:34	0:0	8	buffer
water	115:40	0:0	8	)
op	115:41	0:0	8	[
water	115:42	0:0	8	bufferoffset
op	115:54	0:0	8	]
water	115:55	0:0	8	)
arg	116:5	116:7	7	-1
op	116:5	0:0	8	-
water	116:6	0:0	8	1
water	116:8	0:0	6	;
water	117:3	0:0	6	(
water	117:4	0:0	6	(
water	117:5	0:0	6	unsigned
water	117:14	0:0	6	char
op	117:18	0:0	6	*
water	117:19	0:0	6	)
water	117:20	0:0	6	buffer
water	117:26	0:0	6	)
op	117:27	0:0	6	[
water	117:28	0:0	6	bufferoffset
op	117:40	0:0	6	++
op	117:42	0:0	6	]
op	117:43	0:0	6	=
water	117:44	0:0	6	0
water	117:45	0:0	6	xff
water	117:48	0:0	6	;
water	118:3	0:0	6	(
water	118:4	0:0	6	(
water	118:5	0:0	6	unsigned
water	118:14	0:0	6	char
op	118:18	0:0	6	*
water	118:19	0:0	6	)
water	118:20	0:0	6	buffer
water	118:26	0:0	6	)
op	118:27	0:0	6	[
water	118:28	0:0	6	bufferoffset
op	118:40	0:0	6	++
op	118:42	0:0	6	]
op	118:43	0:0	6	=
water	118:44	0:0	6	0
water	118:45	0:0	6	xd9
water	118:48	0:0	6	;
call	119:3	119:54	6	t2pWriteFile
arg	119:16	119:22	7	output
water	119:16	0:0	8	output
arg	119:24	119:40	7	(tdata_t)buffer
water	119:24	0:0	8	(
water	119:25	0:0	8	tdata_t
water	119:32	0:0	8	)
water	119:34	0:0	8	buffer
arg	119:42	119:54	7	bufferoffset
water	119:42	0:0	8	bufferoffset
water	119:55	0:0	6	;
call	120:3	120:19	6	_TIFFfree
arg	120:13	120:19	7	buffer
water	120:13	0:0	8	buffer
water	120:20	0:0	6	;
return	121:3	121:23	6	(bufferoffset)
water	121:9	0:0	7	(
water	121:10	0:0	7	bufferoffset
water	121:22	0:0	7	)
water	122:2	0:0	6	}
if	125:2	168:2	4	(t2p -> tiff_compression == COMPRESSION_JPEG)
cond	125:5	125:30	5	t2p -> tiff_compression == COMPRESSION_JPEG
water	125:5	0:0	6	t2p
op	125:8	0:0	6	->
water	125:10	0:0	6	tiff_compression
op	125:27	0:0	6	==
water	125:30	0:0	6	COMPRESSION_JPEG
stmts	125:47	168:2	5	
water	125:47	0:0	6	{
decl	126:3	126:29	6	unsigned char	table_end[2]
decl	127:3	127:19	6	uint32	count
op	127:16	0:0	6	=
water	127:18	0:0	6	0
water	128:3	0:0	6	buffer
op	128:9	0:0	6	=
water	128:11	0:0	6	(
water	128:12	0:0	6	unsigned
water	128:21	0:0	6	char
op	128:25	0:0	6	*
water	128:26	0:0	6	)
call	128:28	128:58	6	_TIFFmalloc
arg	128:40	128:58	7	t2p->tiff_datasize
water	128:40	0:0	8	t2p
op	128:43	0:0	8	->
water	128:45	0:0	8	tiff_datasize
water	128:59	0:0	6	;
if	129:3	137:3	6	(buffer == NULL)
cond	129:6	129:14	7	buffer == NULL
water	129:6	0:0	8	buffer
op	129:12	0:0	8	==
water	129:14	0:0	8	NULL
stmts	129:19	137:3	7	
water	129:19	0:0	8	{
call	130:4	134:24	8	TIFFError
arg	130:14	130:29	9	TIFF2PDF_MODULE
water	130:14	0:0	10	TIFF2PDF_MODULE
arg	131:5	132:78	9	"Can't allocate "TIFF_SIZE_FORMAT" bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	131:5	0:0	10	"Can't allocate "
water	131:23	0:0	10	TIFF_SIZE_FORMAT
water	131:40	0:0	10	" bytes of memory "
water	132:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	133:42	133:74	9	(TIFF_SIZE_T)t2p->tiff_datasize
water	133:42	0:0	10	(
water	133:43	0:0	10	TIFF_SIZE_T
water	133:54	0:0	10	)
water	133:56	0:0	10	t2p
op	133:59	0:0	10	->
water	133:61	0:0	10	tiff_datasize
arg	134:5	134:24	9	TIFFFileName(input)
call	134:5	134:23	10	TIFFFileName
arg	134:18	134:23	11	input
water	134:18	0:0	12	input
water	134:25	0:0	8	;
water	135:4	0:0	8	t2p
op	135:7	0:0	8	->
water	135:9	0:0	8	t2p_error
op	135:19	0:0	8	=
water	135:21	0:0	8	T2P_ERR_ERROR
water	135:34	0:0	8	;
return	136:4	136:13	8	(0)
water	136:10	0:0	9	(
water	136:11	0:0	9	0
water	136:12	0:0	9	)
water	137:3	0:0	8	}
if	138:3	164:3	6	(TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0)
cond	138:6	138:63	7	TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0
call	138:6	138:58	8	TIFFGetField
arg	138:19	138:24	9	input
water	138:19	0:0	10	input
arg	138:26	138:44	9	TIFFTAG_JPEGTABLES
water	138:26	0:0	10	TIFFTAG_JPEGTABLES
arg	138:46	138:52	9	&count
op	138:46	0:0	10	&
water	138:47	0:0	10	count
arg	138:54	138:58	9	&jpt
op	138:54	0:0	10	&
water	138:55	0:0	10	jpt
op	138:60	0:0	8	!=
water	138:63	0:0	8	0
stmts	138:66	164:3	7	
water	138:66	0:0	8	{
if	139:4	157:4	8	(count >= 4)
cond	139:8	139:17	9	count >= 4
water	139:8	0:0	10	count
op	139:14	0:0	10	>=
water	139:17	0:0	10	4
stmts	139:20	157:4	9	
water	139:20	0:0	10	{
call	141:5	141:39	10	_TIFFmemcpy
arg	141:17	141:23	11	buffer
water	141:17	0:0	12	buffer
arg	141:25	141:28	11	jpt
water	141:25	0:0	12	jpt
arg	141:30	141:39	11	count-2
water	141:30	0:0	12	count
op	141:36	0:0	12	-
water	141:38	0:0	12	2
water	141:40	0:0	10	;
water	142:5	0:0	10	bufferoffset
op	142:18	0:0	10	+=
water	142:21	0:0	10	count
op	142:27	0:0	10	-
water	142:29	0:0	10	2
water	142:30	0:0	10	;
water	144:5	0:0	10	table_end
op	144:14	0:0	10	[
water	144:15	0:0	10	0
op	144:16	0:0	10	]
op	144:18	0:0	10	=
water	144:20	0:0	10	buffer
op	144:26	0:0	10	[
water	144:27	0:0	10	bufferoffset
op	144:39	0:0	10	-
water	144:40	0:0	10	2
op	144:41	0:0	10	]
water	144:42	0:0	10	;
water	145:5	0:0	10	table_end
op	145:14	0:0	10	[
water	145:15	0:0	10	1
op	145:16	0:0	10	]
op	145:18	0:0	10	=
water	145:20	0:0	10	buffer
op	145:26	0:0	10	[
water	145:27	0:0	10	bufferoffset
op	145:39	0:0	10	-
water	145:40	0:0	10	1
op	145:41	0:0	10	]
water	145:42	0:0	10	;
water	146:5	0:0	10	xuint32
op	146:13	0:0	10	=
water	146:15	0:0	10	bufferoffset
water	146:27	0:0	10	;
water	147:20	0:0	10	bufferoffset
op	147:33	0:0	10	-=
water	147:36	0:0	10	2
water	147:37	0:0	10	;
water	148:5	0:0	10	bufferoffset
op	148:18	0:0	10	+=
call	148:21	152:8	10	TIFFReadRawTile
arg	149:6	149:11	11	input
water	149:6	0:0	12	input
arg	150:6	150:10	11	tile
water	150:6	0:0	12	tile
arg	151:6	151:57	11	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	151:6	0:0	12	(
water	151:7	0:0	12	tdata_t
water	151:14	0:0	12	)
op	151:16	0:0	12	&
water	151:17	0:0	12	(
water	151:18	0:0	12	(
water	151:19	0:0	12	(
water	151:20	0:0	12	unsigned
water	151:29	0:0	12	char
op	151:33	0:0	12	*
water	151:34	0:0	12	)
water	151:35	0:0	12	buffer
water	151:41	0:0	12	)
op	151:42	0:0	12	[
water	151:43	0:0	12	bufferoffset
op	151:55	0:0	12	]
water	151:56	0:0	12	)
arg	152:6	152:8	11	-1
op	152:6	0:0	12	-
water	152:7	0:0	12	1
water	152:9	0:0	10	;
water	155:5	0:0	10	buffer
op	155:11	0:0	10	[
water	155:12	0:0	10	xuint32
op	155:19	0:0	10	-
water	155:20	0:0	10	2
op	155:21	0:0	10	]
op	155:22	0:0	10	=
water	155:23	0:0	10	table_end
op	155:32	0:0	10	[
water	155:33	0:0	10	0
op	155:34	0:0	10	]
water	155:35	0:0	10	;
water	156:5	0:0	10	buffer
op	156:11	0:0	10	[
water	156:12	0:0	10	xuint32
op	156:19	0:0	10	-
water	156:20	0:0	10	1
op	156:21	0:0	10	]
op	156:22	0:0	10	=
water	156:23	0:0	10	table_end
op	156:32	0:0	10	[
water	156:33	0:0	10	1
op	156:34	0:0	10	]
water	156:35	0:0	10	;
water	157:4	0:0	10	}
else	157:6	163:4	8
stmts	157:11	163:4	9	
water	157:11	0:0	10	{
water	158:5	0:0	10	bufferoffset
op	158:18	0:0	10	+=
call	158:21	162:8	10	TIFFReadRawTile
arg	159:6	159:11	11	input
water	159:6	0:0	12	input
arg	160:6	160:10	11	tile
water	160:6	0:0	12	tile
arg	161:6	161:57	11	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	161:6	0:0	12	(
water	161:7	0:0	12	tdata_t
water	161:14	0:0	12	)
op	161:16	0:0	12	&
water	161:17	0:0	12	(
water	161:18	0:0	12	(
water	161:19	0:0	12	(
water	161:20	0:0	12	unsigned
water	161:29	0:0	12	char
op	161:33	0:0	12	*
water	161:34	0:0	12	)
water	161:35	0:0	12	buffer
water	161:41	0:0	12	)
op	161:42	0:0	12	[
water	161:43	0:0	12	bufferoffset
op	161:55	0:0	12	]
water	161:56	0:0	12	)
arg	162:6	162:8	11	-1
op	162:6	0:0	12	-
water	162:7	0:0	12	1
water	162:9	0:0	10	;
water	163:4	0:0	10	}
water	164:3	0:0	8	}
call	165:3	165:54	6	t2pWriteFile
arg	165:16	165:22	7	output
water	165:16	0:0	8	output
arg	165:24	165:40	7	(tdata_t)buffer
water	165:24	0:0	8	(
water	165:25	0:0	8	tdata_t
water	165:32	0:0	8	)
water	165:34	0:0	8	buffer
arg	165:42	165:54	7	bufferoffset
water	165:42	0:0	8	bufferoffset
water	165:55	0:0	6	;
call	166:3	166:19	6	_TIFFfree
arg	166:13	166:19	7	buffer
water	166:13	0:0	8	buffer
water	166:20	0:0	6	;
return	167:3	167:23	6	(bufferoffset)
water	167:9	0:0	7	(
water	167:10	0:0	7	bufferoffset
water	167:22	0:0	7	)
water	168:2	0:0	6	}
water	170:2	0:0	4	(
water	170:3	0:0	4	void
water	170:7	0:0	4	)
water	170:8	0:0	4	0
water	170:9	0:0	4	;
water	171:1	0:0	4	}
if	173:1	200:1	2	(t2p -> pdf_sample == T2P_SAMPLE_NOTHING)
cond	173:4	173:21	3	t2p -> pdf_sample == T2P_SAMPLE_NOTHING
water	173:4	0:0	4	t2p
op	173:7	0:0	4	->
water	173:9	0:0	4	pdf_sample
op	173:19	0:0	4	==
water	173:21	0:0	4	T2P_SAMPLE_NOTHING
stmts	173:40	200:1	3	
water	173:40	0:0	4	{
water	174:2	0:0	4	buffer
op	174:9	0:0	4	=
water	174:11	0:0	4	(
water	174:12	0:0	4	unsigned
water	174:21	0:0	4	char
op	174:25	0:0	4	*
water	174:26	0:0	4	)
call	174:28	174:58	4	_TIFFmalloc
arg	174:40	174:58	5	t2p->tiff_datasize
water	174:40	0:0	6	t2p
op	174:43	0:0	6	->
water	174:45	0:0	6	tiff_datasize
water	174:59	0:0	4	;
if	175:2	183:2	4	(buffer == NULL)
cond	175:5	175:13	5	buffer == NULL
water	175:5	0:0	6	buffer
op	175:11	0:0	6	==
water	175:13	0:0	6	NULL
stmts	175:18	183:2	5	
water	175:18	0:0	6	{
call	176:3	180:23	6	TIFFError
arg	176:13	176:28	7	TIFF2PDF_MODULE
water	176:13	0:0	8	TIFF2PDF_MODULE
arg	177:4	178:66	7	"Can't allocate %lu bytes of memory for ""t2p_readwrite_pdf_image_tile, %s"
water	177:4	0:0	8	"Can't allocate %lu bytes of memory for "
water	178:32	0:0	8	"t2p_readwrite_pdf_image_tile, %s"
arg	179:4	179:38	7	(unsignedlong)t2p->tiff_datasize
water	179:4	0:0	8	(
water	179:5	0:0	8	unsigned
water	179:14	0:0	8	long
water	179:18	0:0	8	)
water	179:20	0:0	8	t2p
op	179:23	0:0	8	->
water	179:25	0:0	8	tiff_datasize
arg	180:4	180:23	7	TIFFFileName(input)
call	180:4	180:22	8	TIFFFileName
arg	180:17	180:22	9	input
water	180:17	0:0	10	input
water	180:24	0:0	6	;
water	181:3	0:0	6	t2p
op	181:6	0:0	6	->
water	181:8	0:0	6	t2p_error
op	181:18	0:0	6	=
water	181:20	0:0	6	T2P_ERR_ERROR
water	181:33	0:0	6	;
return	182:3	182:12	6	(0)
water	182:9	0:0	7	(
water	182:10	0:0	7	0
water	182:11	0:0	7	)
water	183:2	0:0	6	}
water	185:2	0:0	4	read
op	185:7	0:0	4	=
call	185:9	189:21	4	TIFFReadEncodedTile
arg	186:3	186:8	5	input
water	186:3	0:0	6	input
arg	187:3	187:7	5	tile
water	187:3	0:0	6	tile
arg	188:3	188:34	5	(tdata_t)&buffer[bufferoffset]
water	188:3	0:0	6	(
water	188:4	0:0	6	tdata_t
water	188:11	0:0	6	)
op	188:13	0:0	6	&
water	188:14	0:0	6	buffer
op	188:20	0:0	6	[
water	188:21	0:0	6	bufferoffset
op	188:33	0:0	6	]
arg	189:3	189:21	5	t2p->tiff_datasize
water	189:3	0:0	6	t2p
op	189:6	0:0	6	->
water	189:8	0:0	6	tiff_datasize
water	189:22	0:0	4	;
if	190:2	198:2	4	(read == - 1)
cond	190:5	190:12	5	read == - 1
water	190:5	0:0	6	read
op	190:9	0:0	6	==
op	190:11	0:0	6	-
water	190:12	0:0	6	1
stmts	190:14	198:2	5	
water	190:14	0:0	6	{
call	191:3	194:23	6	TIFFError
arg	191:13	191:28	7	TIFF2PDF_MODULE
water	191:13	0:0	8	TIFF2PDF_MODULE
arg	192:4	192:37	7	"Error on decoding tile %u of %s"
water	192:4	0:0	8	"Error on decoding tile %u of %s"
arg	193:4	193:8	7	tile
water	193:4	0:0	8	tile
arg	194:4	194:23	7	TIFFFileName(input)
call	194:4	194:22	8	TIFFFileName
arg	194:17	194:22	9	input
water	194:17	0:0	10	input
water	194:24	0:0	6	;
call	195:3	195:19	6	_TIFFfree
arg	195:13	195:19	7	buffer
water	195:13	0:0	8	buffer
water	195:20	0:0	6	;
water	196:3	0:0	6	t2p
op	196:6	0:0	6	->
water	196:8	0:0	6	t2p_error
op	196:17	0:0	6	=
water	196:18	0:0	6	T2P_ERR_ERROR
water	196:31	0:0	6	;
return	197:3	197:12	6	(0)
water	197:9	0:0	7	(
water	197:10	0:0	7	0
water	197:11	0:0	7	)
water	198:2	0:0	6	}
water	200:1	0:0	4	}
else	200:3	311:1	2
stmts	200:8	311:1	3	
water	200:8	0:0	4	{
if	202:2	253:2	4	(t2p -> pdf_sample == T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG)
cond	202:5	202:24	5	t2p -> pdf_sample == T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
water	202:5	0:0	6	t2p
op	202:8	0:0	6	->
water	202:10	0:0	6	pdf_sample
op	202:21	0:0	6	==
water	202:24	0:0	6	T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
stmts	202:61	253:2	5	
water	202:61	0:0	6	{
water	203:3	0:0	6	septilesize
op	203:14	0:0	6	=
call	203:15	203:33	6	TIFFTileSize
arg	203:28	203:33	7	input
water	203:28	0:0	8	input
water	203:34	0:0	6	;
water	204:3	0:0	6	septilecount
op	204:15	0:0	6	=
call	204:16	204:39	6	TIFFNumberOfTiles
arg	204:34	204:39	7	input
water	204:34	0:0	8	input
water	204:40	0:0	6	;
water	206:3	0:0	6	tilecount
op	206:12	0:0	6	=
water	206:13	0:0	6	septilecount
op	206:25	0:0	6	/
water	206:26	0:0	6	t2p
op	206:29	0:0	6	->
water	206:31	0:0	6	tiff_samplesperpixel
water	206:51	0:0	6	;
water	207:3	0:0	6	buffer
op	207:10	0:0	6	=
water	207:12	0:0	6	(
water	207:13	0:0	6	unsigned
water	207:22	0:0	6	char
op	207:26	0:0	6	*
water	207:27	0:0	6	)
call	207:29	207:59	6	_TIFFmalloc
arg	207:41	207:59	7	t2p->tiff_datasize
water	207:41	0:0	8	t2p
op	207:44	0:0	8	->
water	207:46	0:0	8	tiff_datasize
water	207:60	0:0	6	;
if	208:3	216:3	6	(buffer == NULL)
cond	208:6	208:14	7	buffer == NULL
water	208:6	0:0	8	buffer
op	208:12	0:0	8	==
water	208:14	0:0	8	NULL
stmts	208:19	216:3	7	
water	208:19	0:0	8	{
call	209:4	213:24	8	TIFFError
arg	209:14	209:29	9	TIFF2PDF_MODULE
water	209:14	0:0	10	TIFF2PDF_MODULE
arg	210:5	211:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	210:5	0:0	10	"Can't allocate %lu bytes of memory "
water	211:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	212:5	212:39	9	(unsignedlong)t2p->tiff_datasize
water	212:5	0:0	10	(
water	212:6	0:0	10	unsigned
water	212:15	0:0	10	long
water	212:19	0:0	10	)
water	212:21	0:0	10	t2p
op	212:24	0:0	10	->
water	212:26	0:0	10	tiff_datasize
arg	213:5	213:24	9	TIFFFileName(input)
call	213:5	213:23	10	TIFFFileName
arg	213:18	213:23	11	input
water	213:18	0:0	12	input
water	213:25	0:0	8	;
water	214:4	0:0	8	t2p
op	214:7	0:0	8	->
water	214:9	0:0	8	t2p_error
op	214:19	0:0	8	=
water	214:21	0:0	8	T2P_ERR_ERROR
water	214:34	0:0	8	;
return	215:4	215:13	8	(0)
water	215:10	0:0	9	(
water	215:11	0:0	9	0
water	215:12	0:0	9	)
water	216:3	0:0	8	}
water	217:3	0:0	6	samplebuffer
op	217:16	0:0	6	=
water	217:18	0:0	6	(
water	217:19	0:0	6	unsigned
water	217:28	0:0	6	char
op	217:32	0:0	6	*
water	217:33	0:0	6	)
call	217:35	217:65	6	_TIFFmalloc
arg	217:47	217:65	7	t2p->tiff_datasize
water	217:47	0:0	8	t2p
op	217:50	0:0	8	->
water	217:52	0:0	8	tiff_datasize
water	217:66	0:0	6	;
if	218:3	226:3	6	(samplebuffer == NULL)
cond	218:6	218:20	7	samplebuffer == NULL
water	218:6	0:0	8	samplebuffer
op	218:18	0:0	8	==
water	218:20	0:0	8	NULL
stmts	218:25	226:3	7	
water	218:25	0:0	8	{
call	219:4	223:24	8	TIFFError
arg	219:14	219:29	9	TIFF2PDF_MODULE
water	219:14	0:0	10	TIFF2PDF_MODULE
arg	220:5	221:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	220:5	0:0	10	"Can't allocate %lu bytes of memory "
water	221:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	222:5	222:39	9	(unsignedlong)t2p->tiff_datasize
water	222:5	0:0	10	(
water	222:6	0:0	10	unsigned
water	222:15	0:0	10	long
water	222:19	0:0	10	)
water	222:21	0:0	10	t2p
op	222:24	0:0	10	->
water	222:26	0:0	10	tiff_datasize
arg	223:5	223:24	9	TIFFFileName(input)
call	223:5	223:23	10	TIFFFileName
arg	223:18	223:23	11	input
water	223:18	0:0	12	input
water	223:25	0:0	8	;
water	224:4	0:0	8	t2p
op	224:7	0:0	8	->
water	224:9	0:0	8	t2p_error
op	224:19	0:0	8	=
water	224:21	0:0	8	T2P_ERR_ERROR
water	224:34	0:0	8	;
return	225:4	225:13	8	(0)
water	225:10	0:0	9	(
water	225:11	0:0	9	0
water	225:12	0:0	9	)
water	226:3	0:0	8	}
water	227:3	0:0	6	samplebufferoffset
op	227:21	0:0	6	=
water	227:22	0:0	6	0
water	227:23	0:0	6	;
for	228:3	245:3	6	(i = 0 ;i < t2p -> tiff_samplesperpixel;i ++)
forinit	228:7	228:10	7	i = 0 ;
water	228:7	0:0	8	i
op	228:8	0:0	8	=
water	228:9	0:0	8	0
water	228:10	0:0	8	;
cond	228:11	228:18	7	i < t2p -> tiff_samplesperpixel
water	228:11	0:0	8	i
op	228:12	0:0	8	<
water	228:13	0:0	8	t2p
op	228:16	0:0	8	->
water	228:18	0:0	8	tiff_samplesperpixel
forexpr	228:39	228:40	7	i ++
water	228:39	0:0	8	i
op	228:40	0:0	8	++
stmts	228:43	245:3	7	
water	228:43	0:0	8	{
water	229:4	0:0	8	read
op	229:9	0:0	8	=
call	230:5	233:17	8	TIFFReadEncodedTile
arg	230:25	230:30	9	input
water	230:25	0:0	10	input
arg	231:6	231:24	9	tile+i*tilecount
water	231:6	0:0	10	tile
op	231:11	0:0	10	+
water	231:13	0:0	10	i
op	231:14	0:0	10	*
water	231:15	0:0	10	tilecount
arg	232:6	232:51	9	(tdata_t)&(samplebuffer[samplebufferoffset])
water	232:6	0:0	10	(
water	232:7	0:0	10	tdata_t
water	232:14	0:0	10	)
op	232:16	0:0	10	&
water	232:17	0:0	10	(
water	232:18	0:0	10	samplebuffer
op	232:30	0:0	10	[
water	232:31	0:0	10	samplebufferoffset
op	232:49	0:0	10	]
water	232:50	0:0	10	)
arg	233:6	233:17	9	septilesize
water	233:6	0:0	10	septilesize
water	233:18	0:0	8	;
if	234:4	243:4	8	(read == - 1)
cond	234:7	234:14	9	read == - 1
water	234:7	0:0	10	read
op	234:11	0:0	10	==
op	234:13	0:0	10	-
water	234:14	0:0	10	1
stmts	234:16	243:4	9	
water	234:16	0:0	10	{
call	235:5	238:25	10	TIFFError
arg	235:15	235:30	11	TIFF2PDF_MODULE
water	235:15	0:0	12	TIFF2PDF_MODULE
arg	236:6	236:39	11	"Error on decoding tile %u of %s"
water	236:6	0:0	12	"Error on decoding tile %u of %s"
arg	237:6	237:24	11	tile+i*tilecount
water	237:6	0:0	12	tile
op	237:11	0:0	12	+
water	237:13	0:0	12	i
op	237:14	0:0	12	*
water	237:15	0:0	12	tilecount
arg	238:6	238:25	11	TIFFFileName(input)
call	238:6	238:24	12	TIFFFileName
arg	238:19	238:24	13	input
water	238:19	0:0	14	input
water	238:26	0:0	10	;
call	239:6	239:28	10	_TIFFfree
arg	239:16	239:28	11	samplebuffer
water	239:16	0:0	12	samplebuffer
water	239:29	0:0	10	;
call	240:6	240:22	10	_TIFFfree
arg	240:16	240:22	11	buffer
water	240:16	0:0	12	buffer
water	240:23	0:0	10	;
water	241:5	0:0	10	t2p
op	241:8	0:0	10	->
water	241:10	0:0	10	t2p_error
op	241:19	0:0	10	=
water	241:20	0:0	10	T2P_ERR_ERROR
water	241:33	0:0	10	;
return	242:5	242:14	10	(0)
water	242:11	0:0	11	(
water	242:12	0:0	11	0
water	242:13	0:0	11	)
water	243:4	0:0	10	}
water	244:4	0:0	8	samplebufferoffset
op	244:22	0:0	8	+=
water	244:24	0:0	8	read
water	244:28	0:0	8	;
water	245:3	0:0	8	}
call	246:3	250:22	6	t2p_sample_planar_separate_to_contig
arg	247:4	247:7	7	t2p
water	247:4	0:0	8	t2p
arg	248:4	248:27	7	&(buffer[bufferoffset])
op	248:4	0:0	8	&
water	248:5	0:0	8	(
water	248:6	0:0	8	buffer
op	248:12	0:0	8	[
water	248:13	0:0	8	bufferoffset
op	248:25	0:0	8	]
water	248:26	0:0	8	)
arg	249:4	249:16	7	samplebuffer
water	249:4	0:0	8	samplebuffer
arg	250:4	250:22	7	samplebufferoffset
water	250:4	0:0	8	samplebufferoffset
water	250:23	0:0	6	;
water	251:3	0:0	6	bufferoffset
op	251:15	0:0	6	+=
water	251:17	0:0	6	samplebufferoffset
water	251:35	0:0	6	;
call	252:3	252:25	6	_TIFFfree
arg	252:13	252:25	7	samplebuffer
water	252:13	0:0	8	samplebuffer
water	252:26	0:0	6	;
water	253:2	0:0	6	}
if	255:2	280:2	4	(buffer == NULL)
cond	255:5	255:13	5	buffer == NULL
water	255:5	0:0	6	buffer
op	255:11	0:0	6	==
water	255:13	0:0	6	NULL
stmts	255:18	280:2	5	
water	255:18	0:0	6	{
water	256:3	0:0	6	buffer
op	256:10	0:0	6	=
water	256:12	0:0	6	(
water	256:13	0:0	6	unsigned
water	256:22	0:0	6	char
op	256:26	0:0	6	*
water	256:27	0:0	6	)
call	256:29	256:59	6	_TIFFmalloc
arg	256:41	256:59	7	t2p->tiff_datasize
water	256:41	0:0	8	t2p
op	256:44	0:0	8	->
water	256:46	0:0	8	tiff_datasize
water	256:60	0:0	6	;
if	257:3	265:3	6	(buffer == NULL)
cond	257:6	257:14	7	buffer == NULL
water	257:6	0:0	8	buffer
op	257:12	0:0	8	==
water	257:14	0:0	8	NULL
stmts	257:19	265:3	7	
water	257:19	0:0	8	{
call	258:4	262:24	8	TIFFError
arg	258:14	258:29	9	TIFF2PDF_MODULE
water	258:14	0:0	10	TIFF2PDF_MODULE
arg	259:5	260:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	259:5	0:0	10	"Can't allocate %lu bytes of memory "
water	260:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	261:5	261:39	9	(unsignedlong)t2p->tiff_datasize
water	261:5	0:0	10	(
water	261:6	0:0	10	unsigned
water	261:15	0:0	10	long
water	261:19	0:0	10	)
water	261:21	0:0	10	t2p
op	261:24	0:0	10	->
water	261:26	0:0	10	tiff_datasize
arg	262:5	262:24	9	TIFFFileName(input)
call	262:5	262:23	10	TIFFFileName
arg	262:18	262:23	11	input
water	262:18	0:0	12	input
water	262:25	0:0	8	;
water	263:4	0:0	8	t2p
op	263:7	0:0	8	->
water	263:9	0:0	8	t2p_error
op	263:19	0:0	8	=
water	263:21	0:0	8	T2P_ERR_ERROR
water	263:34	0:0	8	;
return	264:4	264:13	8	(0)
water	264:10	0:0	9	(
water	264:11	0:0	9	0
water	264:12	0:0	9	)
water	265:3	0:0	8	}
water	266:3	0:0	6	read
op	266:8	0:0	6	=
call	266:10	270:22	6	TIFFReadEncodedTile
arg	267:4	267:9	7	input
water	267:4	0:0	8	input
arg	268:4	268:8	7	tile
water	268:4	0:0	8	tile
arg	269:4	269:35	7	(tdata_t)&buffer[bufferoffset]
water	269:4	0:0	8	(
water	269:5	0:0	8	tdata_t
water	269:12	0:0	8	)
op	269:14	0:0	8	&
water	269:15	0:0	8	buffer
op	269:21	0:0	8	[
water	269:22	0:0	8	bufferoffset
op	269:34	0:0	8	]
arg	270:4	270:22	7	t2p->tiff_datasize
water	270:4	0:0	8	t2p
op	270:7	0:0	8	->
water	270:9	0:0	8	tiff_datasize
water	270:23	0:0	6	;
if	271:3	279:3	6	(read == - 1)
cond	271:6	271:13	7	read == - 1
water	271:6	0:0	8	read
op	271:10	0:0	8	==
op	271:12	0:0	8	-
water	271:13	0:0	8	1
stmts	271:15	279:3	7	
water	271:15	0:0	8	{
call	272:4	275:24	8	TIFFError
arg	272:14	272:29	9	TIFF2PDF_MODULE
water	272:14	0:0	10	TIFF2PDF_MODULE
arg	273:5	273:38	9	"Error on decoding tile %u of %s"
water	273:5	0:0	10	"Error on decoding tile %u of %s"
arg	274:5	274:9	9	tile
water	274:5	0:0	10	tile
arg	275:5	275:24	9	TIFFFileName(input)
call	275:5	275:23	10	TIFFFileName
arg	275:18	275:23	11	input
water	275:18	0:0	12	input
water	275:25	0:0	8	;
call	276:4	276:20	8	_TIFFfree
arg	276:14	276:20	9	buffer
water	276:14	0:0	10	buffer
water	276:21	0:0	8	;
water	277:4	0:0	8	t2p
op	277:7	0:0	8	->
water	277:9	0:0	8	t2p_error
op	277:18	0:0	8	=
water	277:19	0:0	8	T2P_ERR_ERROR
water	277:32	0:0	8	;
return	278:4	278:13	8	(0)
water	278:10	0:0	9	(
water	278:11	0:0	9	0
water	278:12	0:0	9	)
water	279:3	0:0	8	}
water	280:2	0:0	6	}
if	282:2	287:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB)
cond	282:5	282:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB
water	282:5	0:0	6	t2p
op	282:8	0:0	6	->
water	282:10	0:0	6	pdf_sample
op	282:21	0:0	6	&
water	282:23	0:0	6	T2P_SAMPLE_RGBA_TO_RGB
stmts	282:46	287:2	5	
water	282:46	0:0	6	{
water	283:3	0:0	6	t2p
op	283:6	0:0	6	->
water	283:8	0:0	6	tiff_datasize
op	283:21	0:0	6	=
call	283:22	286:52	6	t2p_sample_rgba_to_rgb
arg	284:4	284:19	7	(tdata_t)buffer
water	284:4	0:0	8	(
water	284:5	0:0	8	tdata_t
water	284:12	0:0	8	)
water	284:13	0:0	8	buffer
arg	285:4	286:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	285:4	0:0	8	t2p
op	285:7	0:0	8	->
water	285:9	0:0	8	tiff_tiles
op	285:19	0:0	8	[
water	285:20	0:0	8	t2p
op	285:23	0:0	8	->
water	285:25	0:0	8	pdf_page
op	285:33	0:0	8	]
op	285:34	0:0	8	.
water	285:35	0:0	8	tiles_tilewidth
op	286:4	0:0	8	*
water	286:5	0:0	8	t2p
op	286:8	0:0	8	->
water	286:10	0:0	8	tiff_tiles
op	286:20	0:0	8	[
water	286:21	0:0	8	t2p
op	286:24	0:0	8	->
water	286:26	0:0	8	pdf_page
op	286:34	0:0	8	]
op	286:35	0:0	8	.
water	286:36	0:0	8	tiles_tilelength
water	286:53	0:0	6	;
water	287:2	0:0	6	}
if	289:2	294:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB)
cond	289:5	289:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB
water	289:5	0:0	6	t2p
op	289:8	0:0	6	->
water	289:10	0:0	6	pdf_sample
op	289:21	0:0	6	&
water	289:23	0:0	6	T2P_SAMPLE_RGBAA_TO_RGB
stmts	289:47	294:2	5	
water	289:47	0:0	6	{
water	290:3	0:0	6	t2p
op	290:6	0:0	6	->
water	290:8	0:0	6	tiff_datasize
op	290:21	0:0	6	=
call	290:22	293:52	6	t2p_sample_rgbaa_to_rgb
arg	291:4	291:19	7	(tdata_t)buffer
water	291:4	0:0	8	(
water	291:5	0:0	8	tdata_t
water	291:12	0:0	8	)
water	291:13	0:0	8	buffer
arg	292:4	293:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	292:4	0:0	8	t2p
op	292:7	0:0	8	->
water	292:9	0:0	8	tiff_tiles
op	292:19	0:0	8	[
water	292:20	0:0	8	t2p
op	292:23	0:0	8	->
water	292:25	0:0	8	pdf_page
op	292:33	0:0	8	]
op	292:34	0:0	8	.
water	292:35	0:0	8	tiles_tilewidth
op	293:4	0:0	8	*
water	293:5	0:0	8	t2p
op	293:8	0:0	8	->
water	293:10	0:0	8	tiff_tiles
op	293:20	0:0	8	[
water	293:21	0:0	8	t2p
op	293:24	0:0	8	->
water	293:26	0:0	8	pdf_page
op	293:34	0:0	8	]
op	293:35	0:0	8	.
water	293:36	0:0	8	tiles_tilelength
water	293:53	0:0	6	;
water	294:2	0:0	6	}
if	296:2	303:2	4	(t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB)
cond	296:5	296:23	5	t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB
water	296:5	0:0	6	t2p
op	296:8	0:0	6	->
water	296:10	0:0	6	pdf_sample
op	296:21	0:0	6	&
water	296:23	0:0	6	T2P_SAMPLE_YCBCR_TO_RGB
stmts	296:47	303:2	5	
water	296:47	0:0	6	{
call	297:3	299:23	6	TIFFError
arg	297:13	297:28	7	TIFF2PDF_MODULE
water	297:13	0:0	8	TIFF2PDF_MODULE
arg	298:4	298:48	7	"No support for YCbCr to RGB in tile for %s"
water	298:4	0:0	8	"No support for YCbCr to RGB in tile for %s"
arg	299:4	299:23	7	TIFFFileName(input)
call	299:4	299:22	8	TIFFFileName
arg	299:17	299:22	9	input
water	299:17	0:0	10	input
water	299:24	0:0	6	;
call	300:3	300:19	6	_TIFFfree
arg	300:13	300:19	7	buffer
water	300:13	0:0	8	buffer
water	300:20	0:0	6	;
water	301:3	0:0	6	t2p
op	301:6	0:0	6	->
water	301:8	0:0	6	t2p_error
op	301:18	0:0	6	=
water	301:20	0:0	6	T2P_ERR_ERROR
water	301:33	0:0	6	;
return	302:3	302:12	6	(0)
water	302:9	0:0	7	(
water	302:10	0:0	7	0
water	302:11	0:0	7	)
water	303:2	0:0	6	}
if	305:2	310:2	4	(t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED)
cond	305:5	305:23	5	t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
water	305:5	0:0	6	t2p
op	305:8	0:0	6	->
water	305:10	0:0	6	pdf_sample
op	305:21	0:0	6	&
water	305:23	0:0	6	T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
stmts	305:57	310:2	5	
water	305:57	0:0	6	{
water	306:3	0:0	6	t2p
op	306:6	0:0	6	->
water	306:8	0:0	6	tiff_datasize
op	306:21	0:0	6	=
call	306:22	309:52	6	t2p_sample_lab_signed_to_unsigned
arg	307:4	307:19	7	(tdata_t)buffer
water	307:4	0:0	8	(
water	307:5	0:0	8	tdata_t
water	307:12	0:0	8	)
water	307:13	0:0	8	buffer
arg	308:4	309:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	308:4	0:0	8	t2p
op	308:7	0:0	8	->
water	308:9	0:0	8	tiff_tiles
op	308:19	0:0	8	[
water	308:20	0:0	8	t2p
op	308:23	0:0	8	->
water	308:25	0:0	8	pdf_page
op	308:33	0:0	8	]
op	308:34	0:0	8	.
water	308:35	0:0	8	tiles_tilewidth
op	309:4	0:0	8	*
water	309:5	0:0	8	t2p
op	309:8	0:0	8	->
water	309:10	0:0	8	tiff_tiles
op	309:20	0:0	8	[
water	309:21	0:0	8	t2p
op	309:24	0:0	8	->
water	309:26	0:0	8	pdf_page
op	309:34	0:0	8	]
op	309:35	0:0	8	.
water	309:36	0:0	8	tiles_tilelength
water	309:53	0:0	6	;
water	310:2	0:0	6	}
water	311:1	0:0	4	}
if	313:1	320:1	2	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) != 0)
cond	313:4	313:68	3	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) != 0
call	313:4	313:63	4	t2p_tile_is_right_edge
arg	313:27	313:57	5	t2p->tiff_tiles[t2p->pdf_page]
water	313:27	0:0	6	t2p
op	313:30	0:0	6	->
water	313:32	0:0	6	tiff_tiles
op	313:42	0:0	6	[
water	313:43	0:0	6	t2p
op	313:46	0:0	6	->
water	313:48	0:0	6	pdf_page
op	313:56	0:0	6	]
arg	313:59	313:63	5	tile
water	313:59	0:0	6	tile
op	313:65	0:0	4	!=
water	313:68	0:0	4	0
stmts	313:70	320:1	3	
water	313:70	0:0	4	{
call	314:2	319:50	4	t2p_tile_collapse_left
arg	315:3	315:9	5	buffer
water	315:3	0:0	6	buffer
arg	316:3	316:25	5	TIFFTileRowSize(input)
call	316:3	316:24	6	TIFFTileRowSize
arg	316:19	316:24	7	input
water	316:19	0:0	8	input
arg	317:3	317:49	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth
water	317:3	0:0	6	t2p
op	317:6	0:0	6	->
water	317:8	0:0	6	tiff_tiles
op	317:18	0:0	6	[
water	317:19	0:0	6	t2p
op	317:22	0:0	6	->
water	317:24	0:0	6	pdf_page
op	317:32	0:0	6	]
op	317:33	0:0	6	.
water	317:34	0:0	6	tiles_tilewidth
arg	318:3	318:53	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilewidth
water	318:3	0:0	6	t2p
op	318:6	0:0	6	->
water	318:8	0:0	6	tiff_tiles
op	318:18	0:0	6	[
water	318:19	0:0	6	t2p
op	318:22	0:0	6	->
water	318:24	0:0	6	pdf_page
op	318:32	0:0	6	]
op	318:33	0:0	6	.
water	318:34	0:0	6	tiles_edgetilewidth
arg	319:3	319:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	319:3	0:0	6	t2p
op	319:6	0:0	6	->
water	319:8	0:0	6	tiff_tiles
op	319:18	0:0	6	[
water	319:19	0:0	6	t2p
op	319:22	0:0	6	->
water	319:24	0:0	6	pdf_page
op	319:32	0:0	6	]
op	319:33	0:0	6	.
water	319:34	0:0	6	tiles_tilelength
water	319:51	0:0	4	;
water	320:1	0:0	4	}
call	323:1	323:19	2	t2p_disable
arg	323:13	323:19	3	output
water	323:13	0:0	4	output
water	323:20	0:0	2	;
call	324:1	324:64	2	TIFFSetField
arg	324:14	324:20	3	output
water	324:14	0:0	4	output
arg	324:22	324:41	3	TIFFTAG_PHOTOMETRIC
water	324:22	0:0	4	TIFFTAG_PHOTOMETRIC
arg	324:43	324:64	3	t2p->tiff_photometric
water	324:43	0:0	4	t2p
op	324:46	0:0	4	->
water	324:48	0:0	4	tiff_photometric
water	324:65	0:0	2	;
call	325:1	325:68	2	TIFFSetField
arg	325:14	325:20	3	output
water	325:14	0:0	4	output
arg	325:22	325:43	3	TIFFTAG_BITSPERSAMPLE
water	325:22	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	325:45	325:68	3	t2p->tiff_bitspersample
water	325:45	0:0	4	t2p
op	325:48	0:0	4	->
water	325:50	0:0	4	tiff_bitspersample
water	325:69	0:0	2	;
call	326:1	326:72	2	TIFFSetField
arg	326:14	326:20	3	output
water	326:14	0:0	4	output
arg	326:22	326:45	3	TIFFTAG_SAMPLESPERPIXEL
water	326:22	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	326:47	326:72	3	t2p->tiff_samplesperpixel
water	326:47	0:0	4	t2p
op	326:50	0:0	4	->
water	326:52	0:0	4	tiff_samplesperpixel
water	326:73	0:0	2	;
if	327:1	332:1	2	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0)
cond	327:4	327:68	3	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0
call	327:4	327:63	4	t2p_tile_is_right_edge
arg	327:27	327:57	5	t2p->tiff_tiles[t2p->pdf_page]
water	327:27	0:0	6	t2p
op	327:30	0:0	6	->
water	327:32	0:0	6	tiff_tiles
op	327:42	0:0	6	[
water	327:43	0:0	6	t2p
op	327:46	0:0	6	->
water	327:48	0:0	6	pdf_page
op	327:56	0:0	6	]
arg	327:59	327:63	5	tile
water	327:59	0:0	6	tile
op	327:65	0:0	4	==
water	327:68	0:0	4	0
stmts	327:70	332:1	3	
water	327:70	0:0	4	{
call	328:2	331:49	4	TIFFSetField
arg	329:3	329:9	5	output
water	329:3	0:0	6	output
arg	330:3	330:21	5	TIFFTAG_IMAGEWIDTH
water	330:3	0:0	6	TIFFTAG_IMAGEWIDTH
arg	331:3	331:49	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth
water	331:3	0:0	6	t2p
op	331:6	0:0	6	->
water	331:8	0:0	6	tiff_tiles
op	331:18	0:0	6	[
water	331:19	0:0	6	t2p
op	331:22	0:0	6	->
water	331:24	0:0	6	pdf_page
op	331:32	0:0	6	]
op	331:33	0:0	6	.
water	331:34	0:0	6	tiles_tilewidth
water	331:50	0:0	4	;
water	332:1	0:0	4	}
else	332:3	337:1	2
stmts	332:8	337:1	3	
water	332:8	0:0	4	{
call	333:2	336:53	4	TIFFSetField
arg	334:3	334:9	5	output
water	334:3	0:0	6	output
arg	335:3	335:21	5	TIFFTAG_IMAGEWIDTH
water	335:3	0:0	6	TIFFTAG_IMAGEWIDTH
arg	336:3	336:53	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilewidth
water	336:3	0:0	6	t2p
op	336:6	0:0	6	->
water	336:8	0:0	6	tiff_tiles
op	336:18	0:0	6	[
water	336:19	0:0	6	t2p
op	336:22	0:0	6	->
water	336:24	0:0	6	pdf_page
op	336:32	0:0	6	]
op	336:33	0:0	6	.
water	336:34	0:0	6	tiles_edgetilewidth
water	336:54	0:0	4	;
water	337:1	0:0	4	}
if	338:1	347:1	2	(t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0)
cond	338:4	338:69	3	t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0
call	338:4	338:64	4	t2p_tile_is_bottom_edge
arg	338:28	338:58	5	t2p->tiff_tiles[t2p->pdf_page]
water	338:28	0:0	6	t2p
op	338:31	0:0	6	->
water	338:33	0:0	6	tiff_tiles
op	338:43	0:0	6	[
water	338:44	0:0	6	t2p
op	338:47	0:0	6	->
water	338:49	0:0	6	pdf_page
op	338:57	0:0	6	]
arg	338:60	338:64	5	tile
water	338:60	0:0	6	tile
op	338:66	0:0	4	==
water	338:69	0:0	4	0
stmts	338:71	347:1	3	
water	338:71	0:0	4	{
call	339:2	342:50	4	TIFFSetField
arg	340:3	340:9	5	output
water	340:3	0:0	6	output
arg	341:3	341:22	5	TIFFTAG_IMAGELENGTH
water	341:3	0:0	6	TIFFTAG_IMAGELENGTH
arg	342:3	342:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	342:3	0:0	6	t2p
op	342:6	0:0	6	->
water	342:8	0:0	6	tiff_tiles
op	342:18	0:0	6	[
water	342:19	0:0	6	t2p
op	342:22	0:0	6	->
water	342:24	0:0	6	pdf_page
op	342:32	0:0	6	]
op	342:33	0:0	6	.
water	342:34	0:0	6	tiles_tilelength
water	342:51	0:0	4	;
call	343:2	346:50	4	TIFFSetField
arg	344:3	344:9	5	output
water	344:3	0:0	6	output
arg	345:3	345:23	5	TIFFTAG_ROWSPERSTRIP
water	345:3	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	346:3	346:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	346:3	0:0	6	t2p
op	346:6	0:0	6	->
water	346:8	0:0	6	tiff_tiles
op	346:18	0:0	6	[
water	346:19	0:0	6	t2p
op	346:22	0:0	6	->
water	346:24	0:0	6	pdf_page
op	346:32	0:0	6	]
op	346:33	0:0	6	.
water	346:34	0:0	6	tiles_tilelength
water	346:51	0:0	4	;
water	347:1	0:0	4	}
else	347:3	356:1	2
stmts	347:8	356:1	3	
water	347:8	0:0	4	{
call	348:2	351:54	4	TIFFSetField
arg	349:3	349:9	5	output
water	349:3	0:0	6	output
arg	350:3	350:22	5	TIFFTAG_IMAGELENGTH
water	350:3	0:0	6	TIFFTAG_IMAGELENGTH
arg	351:3	351:54	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilelength
water	351:3	0:0	6	t2p
op	351:6	0:0	6	->
water	351:8	0:0	6	tiff_tiles
op	351:18	0:0	6	[
water	351:19	0:0	6	t2p
op	351:22	0:0	6	->
water	351:24	0:0	6	pdf_page
op	351:32	0:0	6	]
op	351:33	0:0	6	.
water	351:34	0:0	6	tiles_edgetilelength
water	351:55	0:0	4	;
call	352:2	355:54	4	TIFFSetField
arg	353:3	353:9	5	output
water	353:3	0:0	6	output
arg	354:3	354:23	5	TIFFTAG_ROWSPERSTRIP
water	354:3	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	355:3	355:54	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilelength
water	355:3	0:0	6	t2p
op	355:6	0:0	6	->
water	355:8	0:0	6	tiff_tiles
op	355:18	0:0	6	[
water	355:19	0:0	6	t2p
op	355:22	0:0	6	->
water	355:24	0:0	6	pdf_page
op	355:32	0:0	6	]
op	355:33	0:0	6	.
water	355:34	0:0	6	tiles_edgetilelength
water	355:55	0:0	4	;
water	356:1	0:0	4	}
call	357:1	357:63	2	TIFFSetField
arg	357:14	357:20	3	output
water	357:14	0:0	4	output
arg	357:22	357:42	3	TIFFTAG_PLANARCONFIG
water	357:22	0:0	4	TIFFTAG_PLANARCONFIG
arg	357:44	357:63	3	PLANARCONFIG_CONTIG
water	357:44	0:0	4	PLANARCONFIG_CONTIG
water	357:64	0:0	2	;
call	358:1	358:58	2	TIFFSetField
arg	358:14	358:20	3	output
water	358:14	0:0	4	output
arg	358:22	358:39	3	TIFFTAG_FILLORDER
water	358:22	0:0	4	TIFFTAG_FILLORDER
arg	358:41	358:58	3	FILLORDER_MSB2LSB
water	358:41	0:0	4	FILLORDER_MSB2LSB
water	358:59	0:0	2	;
switch	360:1	422:1	2	(t2p -> pdf_compression)
cond	360:8	360:13	3	t2p -> pdf_compression
water	360:8	0:0	4	t2p
op	360:11	0:0	4	->
water	360:13	0:0	4	pdf_compression
stmts	360:29	422:1	3	
water	360:29	0:0	4	{
label	361:1	361:23	4	case T2P_COMPRESS_NONE :
call	362:2	362:60	4	TIFFSetField
arg	362:15	362:21	5	output
water	362:15	0:0	6	output
arg	362:23	362:42	5	TIFFTAG_COMPRESSION
water	362:23	0:0	6	TIFFTAG_COMPRESSION
arg	362:44	362:60	5	COMPRESSION_NONE
water	362:44	0:0	6	COMPRESSION_NONE
water	362:61	0:0	4	;
break	363:2	363:7	4	
label	365:1	365:21	4	case T2P_COMPRESS_G4 :
call	366:2	366:65	4	TIFFSetField
arg	366:15	366:21	5	output
water	366:15	0:0	6	output
arg	366:23	366:42	5	TIFFTAG_COMPRESSION
water	366:23	0:0	6	TIFFTAG_COMPRESSION
arg	366:44	366:65	5	COMPRESSION_CCITTFAX4
water	366:44	0:0	6	COMPRESSION_CCITTFAX4
water	366:66	0:0	4	;
break	367:2	367:7	4	
label	370:1	370:23	4	case T2P_COMPRESS_JPEG :
if	371:2	381:2	4	(t2p -> tiff_photometric == PHOTOMETRIC_YCBCR)
cond	371:6	371:29	5	t2p -> tiff_photometric == PHOTOMETRIC_YCBCR
water	371:6	0:0	6	t2p
op	371:9	0:0	6	->
water	371:11	0:0	6	tiff_photometric
op	371:27	0:0	6	==
water	371:29	0:0	6	PHOTOMETRIC_YCBCR
stmts	371:48	381:2	5	
water	371:48	0:0	6	{
decl	372:3	372:26	6	uint16	hor
op	372:14	0:0	6	=
water	372:16	0:0	6	0
water	372:17	0:0	6	,
decl	372:3	372:26	6	uint16	ver
op	372:23	0:0	6	=
water	372:25	0:0	6	0
if	373:3	377:3	6	(TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0)
cond	373:7	373:66	7	TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0
call	373:7	373:63	8	TIFFGetField
arg	373:20	373:25	9	input
water	373:20	0:0	10	input
arg	373:27	373:51	9	TIFFTAG_YCBCRSUBSAMPLING
water	373:27	0:0	10	TIFFTAG_YCBCRSUBSAMPLING
arg	373:53	373:57	9	&hor
op	373:53	0:0	10	&
water	373:54	0:0	10	hor
arg	373:59	373:63	9	&ver
op	373:59	0:0	10	&
water	373:60	0:0	10	ver
op	373:64	0:0	8	!=
water	373:66	0:0	8	0
stmts	373:69	377:3	7	
water	373:69	0:0	8	{
if	374:4	376:4	8	(hor != 0 && ver != 0)
cond	374:8	374:27	9	hor != 0 && ver != 0
water	374:8	0:0	10	hor
op	374:12	0:0	10	!=
water	374:15	0:0	10	0
op	374:17	0:0	10	&&
water	374:20	0:0	10	ver
op	374:24	0:0	10	!=
water	374:27	0:0	10	0
stmts	374:30	376:4	9	
water	374:30	0:0	10	{
call	375:5	375:60	10	TIFFSetField
arg	375:18	375:24	11	output
water	375:18	0:0	12	output
arg	375:26	375:50	11	TIFFTAG_YCBCRSUBSAMPLING
water	375:26	0:0	12	TIFFTAG_YCBCRSUBSAMPLING
arg	375:52	375:55	11	hor
water	375:52	0:0	12	hor
arg	375:57	375:60	11	ver
water	375:57	0:0	12	ver
water	375:61	0:0	10	;
water	376:4	0:0	10	}
water	377:3	0:0	8	}
if	378:3	380:3	6	(TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0)
cond	378:6	378:66	7	TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0
call	378:6	378:63	8	TIFFGetField
arg	378:19	378:24	9	input
water	378:19	0:0	10	input
arg	378:26	378:53	9	TIFFTAG_REFERENCEBLACKWHITE
water	378:26	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	378:55	378:63	9	&xfloatp
op	378:55	0:0	10	&
water	378:56	0:0	10	xfloatp
op	378:64	0:0	8	!=
water	378:66	0:0	8	0
stmts	378:68	380:3	7	
water	378:68	0:0	8	{
call	379:4	379:61	8	TIFFSetField
arg	379:17	379:23	9	output
water	379:17	0:0	10	output
arg	379:25	379:52	9	TIFFTAG_REFERENCEBLACKWHITE
water	379:25	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	379:54	379:61	9	xfloatp
water	379:54	0:0	10	xfloatp
water	379:62	0:0	8	;
water	380:3	0:0	8	}
water	381:2	0:0	6	}
call	382:2	382:60	4	TIFFSetField
arg	382:15	382:21	5	output
water	382:15	0:0	6	output
arg	382:23	382:42	5	TIFFTAG_COMPRESSION
water	382:23	0:0	6	TIFFTAG_COMPRESSION
arg	382:44	382:60	5	COMPRESSION_JPEG
water	382:44	0:0	6	COMPRESSION_JPEG
water	382:61	0:0	4	;
call	383:2	383:48	4	TIFFSetField
arg	383:15	383:21	5	output
water	383:15	0:0	6	output
arg	383:23	383:45	5	TIFFTAG_JPEGTABLESMODE
water	383:23	0:0	6	TIFFTAG_JPEGTABLESMODE
arg	383:47	383:48	5	0
water	383:47	0:0	6	0
water	383:49	0:0	4	;
if	384:2	391:2	4	(t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB ))
cond	384:5	384:51	5	t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB )
water	384:5	0:0	6	t2p
op	384:8	0:0	6	->
water	384:10	0:0	6	pdf_colorspace
op	384:25	0:0	6	&
water	384:27	0:0	6	(
water	384:28	0:0	6	T2P_CS_RGB
op	384:39	0:0	6	|
water	384:41	0:0	6	T2P_CS_LAB
water	384:51	0:0	6	)
stmts	384:53	391:2	5	
water	384:53	0:0	6	{
call	385:3	385:62	6	TIFFSetField
arg	385:16	385:22	7	output
water	385:16	0:0	8	output
arg	385:24	385:43	7	TIFFTAG_PHOTOMETRIC
water	385:24	0:0	8	TIFFTAG_PHOTOMETRIC
arg	385:45	385:62	7	PHOTOMETRIC_YCBCR
water	385:45	0:0	8	PHOTOMETRIC_YCBCR
water	385:63	0:0	6	;
if	386:3	388:3	6	(t2p -> tiff_photometric != PHOTOMETRIC_YCBCR)
cond	386:6	386:31	7	t2p -> tiff_photometric != PHOTOMETRIC_YCBCR
water	386:6	0:0	8	t2p
op	386:9	0:0	8	->
water	386:11	0:0	8	tiff_photometric
op	386:28	0:0	8	!=
water	386:31	0:0	8	PHOTOMETRIC_YCBCR
stmts	386:49	388:3	7	
water	386:49	0:0	8	{
call	387:4	387:65	8	TIFFSetField
arg	387:17	387:23	9	output
water	387:17	0:0	10	output
arg	387:25	387:46	9	TIFFTAG_JPEGCOLORMODE
water	387:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	387:48	387:65	9	JPEGCOLORMODE_RGB
water	387:48	0:0	10	JPEGCOLORMODE_RGB
water	387:66	0:0	8	;
water	388:3	0:0	8	}
else	388:5	390:3	6
stmts	388:10	390:3	7	
water	388:10	0:0	8	{
call	389:4	389:65	8	TIFFSetField
arg	389:17	389:23	9	output
water	389:17	0:0	10	output
arg	389:25	389:46	9	TIFFTAG_JPEGCOLORMODE
water	389:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	389:48	389:65	9	JPEGCOLORMODE_RAW
water	389:48	0:0	10	JPEGCOLORMODE_RAW
water	389:66	0:0	8	;
water	390:3	0:0	8	}
water	391:2	0:0	6	}
if	392:2	394:2	4	(t2p -> pdf_colorspace & T2P_CS_GRAY)
cond	392:5	392:27	5	t2p -> pdf_colorspace & T2P_CS_GRAY
water	392:5	0:0	6	t2p
op	392:8	0:0	6	->
water	392:10	0:0	6	pdf_colorspace
op	392:25	0:0	6	&
water	392:27	0:0	6	T2P_CS_GRAY
stmts	392:39	394:2	5	
water	392:39	0:0	6	{
water	393:3	0:0	6	(
water	393:4	0:0	6	void
water	393:8	0:0	6	)
water	393:9	0:0	6	0
water	393:10	0:0	6	;
water	394:2	0:0	6	}
if	395:2	397:2	4	(t2p -> pdf_colorspace & T2P_CS_CMYK)
cond	395:5	395:27	5	t2p -> pdf_colorspace & T2P_CS_CMYK
water	395:5	0:0	6	t2p
op	395:8	0:0	6	->
water	395:10	0:0	6	pdf_colorspace
op	395:25	0:0	6	&
water	395:27	0:0	6	T2P_CS_CMYK
stmts	395:39	397:2	5	
water	395:39	0:0	6	{
water	396:3	0:0	6	(
water	396:4	0:0	6	void
water	396:8	0:0	6	)
water	396:9	0:0	6	0
water	396:10	0:0	6	;
water	397:2	0:0	6	}
if	398:2	402:2	4	(t2p -> pdf_defaultcompressionquality != 0)
cond	398:5	398:43	5	t2p -> pdf_defaultcompressionquality != 0
water	398:5	0:0	6	t2p
op	398:8	0:0	6	->
water	398:10	0:0	6	pdf_defaultcompressionquality
op	398:40	0:0	6	!=
water	398:43	0:0	6	0
stmts	398:45	402:2	5	
water	398:45	0:0	6	{
call	399:3	401:38	6	TIFFSetField
arg	399:16	399:22	7	output
water	399:16	0:0	8	output
arg	400:4	400:23	7	TIFFTAG_JPEGQUALITY
water	400:4	0:0	8	TIFFTAG_JPEGQUALITY
arg	401:4	401:38	7	t2p->pdf_defaultcompressionquality
water	401:4	0:0	8	t2p
op	401:7	0:0	8	->
water	401:9	0:0	8	pdf_defaultcompressionquality
water	401:39	0:0	6	;
water	402:2	0:0	6	}
break	403:2	403:7	4	
label	406:1	406:22	4	case T2P_COMPRESS_ZIP :
call	407:2	407:63	4	TIFFSetField
arg	407:15	407:21	5	output
water	407:15	0:0	6	output
arg	407:23	407:42	5	TIFFTAG_COMPRESSION
water	407:23	0:0	6	TIFFTAG_COMPRESSION
arg	407:44	407:63	5	COMPRESSION_DEFLATE
water	407:44	0:0	6	COMPRESSION_DEFLATE
water	407:64	0:0	4	;
if	408:2	412:2	4	(t2p -> pdf_defaultcompressionquality % 100 != 0)
cond	408:5	408:47	5	t2p -> pdf_defaultcompressionquality % 100 != 0
water	408:5	0:0	6	t2p
op	408:8	0:0	6	->
water	408:10	0:0	6	pdf_defaultcompressionquality
op	408:39	0:0	6	%
water	408:40	0:0	6	100
op	408:44	0:0	6	!=
water	408:47	0:0	6	0
stmts	408:49	412:2	5	
water	408:49	0:0	6	{
call	409:3	411:44	6	TIFFSetField
arg	409:16	409:22	7	output
water	409:16	0:0	8	output
arg	410:4	410:21	7	TIFFTAG_PREDICTOR
water	410:4	0:0	8	TIFFTAG_PREDICTOR
arg	411:4	411:44	7	t2p->pdf_defaultcompressionquality%100
water	411:4	0:0	8	t2p
op	411:7	0:0	8	->
water	411:9	0:0	8	pdf_defaultcompressionquality
op	411:39	0:0	8	%
water	411:41	0:0	8	100
water	411:45	0:0	6	;
water	412:2	0:0	6	}
if	413:2	417:2	4	(t2p -> pdf_defaultcompressionquality / 100 != 0)
cond	413:5	413:47	5	t2p -> pdf_defaultcompressionquality / 100 != 0
water	413:5	0:0	6	t2p
op	413:8	0:0	6	->
water	413:10	0:0	6	pdf_defaultcompressionquality
op	413:39	0:0	6	/
water	413:40	0:0	6	100
op	413:44	0:0	6	!=
water	413:47	0:0	6	0
stmts	413:49	417:2	5	
water	413:49	0:0	6	{
call	414:3	416:46	6	TIFFSetField
arg	414:16	414:22	7	output
water	414:16	0:0	8	output
arg	415:4	415:22	7	TIFFTAG_ZIPQUALITY
water	415:4	0:0	8	TIFFTAG_ZIPQUALITY
arg	416:4	416:46	7	(t2p->pdf_defaultcompressionquality/100)
water	416:4	0:0	8	(
water	416:5	0:0	8	t2p
op	416:8	0:0	8	->
water	416:10	0:0	8	pdf_defaultcompressionquality
op	416:40	0:0	8	/
water	416:42	0:0	8	100
water	416:45	0:0	8	)
water	416:47	0:0	6	;
water	417:2	0:0	6	}
break	418:2	418:7	4	
label	420:1	420:8	4	default :
break	421:2	421:7	4	
water	422:1	0:0	4	}
call	424:1	424:18	2	t2p_enable
arg	424:12	424:18	3	output
water	424:12	0:0	4	output
water	424:19	0:0	2	;
water	425:1	0:0	2	t2p
op	425:4	0:0	2	->
water	425:6	0:0	2	outputwritten
op	425:20	0:0	2	=
water	425:22	0:0	2	0
water	425:23	0:0	2	;
water	426:1	0:0	2	bufferoffset
op	426:14	0:0	2	=
call	426:16	427:31	2	TIFFWriteEncodedStrip
arg	426:38	426:44	3	output
water	426:38	0:0	4	output
arg	426:46	426:58	3	(tstrip_t)0
water	426:46	0:0	4	(
water	426:47	0:0	4	tstrip_t
water	426:55	0:0	4	)
water	426:57	0:0	4	0
arg	426:60	426:66	3	buffer
water	426:60	0:0	4	buffer
arg	427:10	427:31	3	TIFFStripSize(output)
call	427:10	427:30	4	TIFFStripSize
arg	427:24	427:30	5	output
water	427:24	0:0	6	output
water	427:32	0:0	2	;
if	428:1	431:1	2	(buffer != NULL)
cond	428:5	428:15	3	buffer != NULL
water	428:5	0:0	4	buffer
op	428:12	0:0	4	!=
water	428:15	0:0	4	NULL
stmts	428:21	431:1	3	
water	428:21	0:0	4	{
call	429:2	429:18	4	_TIFFfree
arg	429:12	429:18	5	buffer
water	429:12	0:0	6	buffer
water	429:19	0:0	4	;
water	430:2	0:0	4	buffer
op	430:9	0:0	4	=
water	430:11	0:0	4	NULL
water	430:15	0:0	4	;
water	431:1	0:0	4	}
if	432:1	438:1	2	(bufferoffset == - 1)
cond	432:5	432:22	3	bufferoffset == - 1
water	432:5	0:0	4	bufferoffset
op	432:18	0:0	4	==
op	432:21	0:0	4	-
water	432:22	0:0	4	1
stmts	432:25	438:1	3	
water	432:25	0:0	4	{
call	433:2	435:25	4	TIFFError
arg	433:12	433:27	5	TIFF2PDF_MODULE
water	433:12	0:0	6	TIFF2PDF_MODULE
arg	434:5	434:50	5	"Error writing encoded tile to output PDF %s"
water	434:5	0:0	6	"Error writing encoded tile to output PDF %s"
arg	435:5	435:25	5	TIFFFileName(output)
call	435:5	435:24	6	TIFFFileName
arg	435:18	435:24	7	output
water	435:18	0:0	8	output
water	435:26	0:0	4	;
water	436:2	0:0	4	t2p
op	436:5	0:0	4	->
water	436:7	0:0	4	t2p_error
op	436:17	0:0	4	=
water	436:19	0:0	4	T2P_ERR_ERROR
water	436:32	0:0	4	;
return	437:2	437:11	4	(0)
water	437:8	0:0	5	(
water	437:9	0:0	5	0
water	437:10	0:0	5	)
water	438:1	0:0	4	}
water	440:1	0:0	2	written
op	440:9	0:0	2	=
water	440:11	0:0	2	t2p
op	440:14	0:0	2	->
water	440:16	0:0	2	outputwritten
water	440:29	0:0	2	;
return	442:1	442:16	2	(written)
water	442:7	0:0	3	(
water	442:8	0:0	3	written
water	442:15	0:0	3	)

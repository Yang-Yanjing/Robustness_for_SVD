func	1:0	21:0	0	tsize_t	t2p_sample_lab_signed_to_unsigned
params	1:41	0:0	1	
param	1:42	1:56	2	tdata_t	buffer
param	1:58	1:76	2	uint32	samplecount
stmnts	0:0	20:22	1	
decl	3:1	3:11	2	uint32	i
op	3:9	0:0	2	=
water	3:10	0:0	2	0
for	5:1	18:1	2	(i = 0 ;i < samplecount;i ++)
forinit	5:5	5:8	3	i = 0 ;
water	5:5	0:0	4	i
op	5:6	0:0	4	=
water	5:7	0:0	4	0
water	5:8	0:0	4	;
cond	5:9	5:11	3	i < samplecount
water	5:9	0:0	4	i
op	5:10	0:0	4	<
water	5:11	0:0	4	samplecount
forexpr	5:23	5:24	3	i ++
water	5:23	0:0	4	i
op	5:24	0:0	4	++
stmts	5:27	18:1	3	
water	5:27	0:0	4	{
if	6:2	9:2	4	(( ( ( unsigned char * ) buffer ) [ ( i * 3 ) + 1 ] & 0 x80 ) != 0)
cond	6:6	6:51	5	( ( ( unsigned char * ) buffer ) [ ( i * 3 ) + 1 ] & 0 x80 ) != 0
water	6:6	0:0	6	(
water	6:7	0:0	6	(
water	6:8	0:0	6	(
water	6:9	0:0	6	unsigned
water	6:18	0:0	6	char
op	6:22	0:0	6	*
water	6:23	0:0	6	)
water	6:24	0:0	6	buffer
water	6:30	0:0	6	)
op	6:31	0:0	6	[
water	6:32	0:0	6	(
water	6:33	0:0	6	i
op	6:34	0:0	6	*
water	6:35	0:0	6	3
water	6:36	0:0	6	)
op	6:37	0:0	6	+
water	6:38	0:0	6	1
op	6:39	0:0	6	]
op	6:41	0:0	6	&
water	6:43	0:0	6	0
water	6:44	0:0	6	x80
water	6:47	0:0	6	)
op	6:49	0:0	6	!=
water	6:51	0:0	6	0
stmts	6:53	9:2	5	
water	6:53	0:0	6	{
water	7:3	0:0	6	(
water	7:4	0:0	6	(
water	7:5	0:0	6	unsigned
water	7:14	0:0	6	char
op	7:18	0:0	6	*
water	7:19	0:0	6	)
water	7:20	0:0	6	buffer
water	7:26	0:0	6	)
op	7:27	0:0	6	[
water	7:28	0:0	6	(
water	7:29	0:0	6	i
op	7:30	0:0	6	*
water	7:31	0:0	6	3
water	7:32	0:0	6	)
op	7:33	0:0	6	+
water	7:34	0:0	6	1
op	7:35	0:0	6	]
op	7:37	0:0	6	=
call	8:4	8:51	6	(unsignedchar)
arg	8:20	8:51	7	0x80+((char*)buffer)[(i*3)+1]
water	8:20	0:0	8	0
water	8:21	0:0	8	x80
op	8:25	0:0	8	+
water	8:27	0:0	8	(
water	8:28	0:0	8	(
water	8:29	0:0	8	char
op	8:33	0:0	8	*
water	8:34	0:0	8	)
water	8:35	0:0	8	buffer
water	8:41	0:0	8	)
op	8:42	0:0	8	[
water	8:43	0:0	8	(
water	8:44	0:0	8	i
op	8:45	0:0	8	*
water	8:46	0:0	8	3
water	8:47	0:0	8	)
op	8:48	0:0	8	+
water	8:49	0:0	8	1
op	8:50	0:0	8	]
water	8:52	0:0	6	;
water	9:2	0:0	6	}
else	9:4	11:2	4
stmts	9:9	11:2	5	
water	9:9	0:0	6	{
water	10:3	0:0	6	(
water	10:4	0:0	6	(
water	10:5	0:0	6	unsigned
water	10:14	0:0	6	char
op	10:18	0:0	6	*
water	10:19	0:0	6	)
water	10:20	0:0	6	buffer
water	10:26	0:0	6	)
op	10:27	0:0	6	[
water	10:28	0:0	6	(
water	10:29	0:0	6	i
op	10:30	0:0	6	*
water	10:31	0:0	6	3
water	10:32	0:0	6	)
op	10:33	0:0	6	+
water	10:34	0:0	6	1
op	10:35	0:0	6	]
op	10:37	0:0	6	|=
water	10:40	0:0	6	0
water	10:41	0:0	6	x80
water	10:44	0:0	6	;
water	11:2	0:0	6	}
if	12:2	15:2	4	(( ( ( unsigned char * ) buffer ) [ ( i * 3 ) + 2 ] & 0 x80 ) != 0)
cond	12:6	12:51	5	( ( ( unsigned char * ) buffer ) [ ( i * 3 ) + 2 ] & 0 x80 ) != 0
water	12:6	0:0	6	(
water	12:7	0:0	6	(
water	12:8	0:0	6	(
water	12:9	0:0	6	unsigned
water	12:18	0:0	6	char
op	12:22	0:0	6	*
water	12:23	0:0	6	)
water	12:24	0:0	6	buffer
water	12:30	0:0	6	)
op	12:31	0:0	6	[
water	12:32	0:0	6	(
water	12:33	0:0	6	i
op	12:34	0:0	6	*
water	12:35	0:0	6	3
water	12:36	0:0	6	)
op	12:37	0:0	6	+
water	12:38	0:0	6	2
op	12:39	0:0	6	]
op	12:41	0:0	6	&
water	12:43	0:0	6	0
water	12:44	0:0	6	x80
water	12:47	0:0	6	)
op	12:49	0:0	6	!=
water	12:51	0:0	6	0
stmts	12:53	15:2	5	
water	12:53	0:0	6	{
water	13:3	0:0	6	(
water	13:4	0:0	6	(
water	13:5	0:0	6	unsigned
water	13:14	0:0	6	char
op	13:18	0:0	6	*
water	13:19	0:0	6	)
water	13:20	0:0	6	buffer
water	13:26	0:0	6	)
op	13:27	0:0	6	[
water	13:28	0:0	6	(
water	13:29	0:0	6	i
op	13:30	0:0	6	*
water	13:31	0:0	6	3
water	13:32	0:0	6	)
op	13:33	0:0	6	+
water	13:34	0:0	6	2
op	13:35	0:0	6	]
op	13:37	0:0	6	=
call	14:4	14:51	6	(unsignedchar)
arg	14:20	14:51	7	0x80+((char*)buffer)[(i*3)+2]
water	14:20	0:0	8	0
water	14:21	0:0	8	x80
op	14:25	0:0	8	+
water	14:27	0:0	8	(
water	14:28	0:0	8	(
water	14:29	0:0	8	char
op	14:33	0:0	8	*
water	14:34	0:0	8	)
water	14:35	0:0	8	buffer
water	14:41	0:0	8	)
op	14:42	0:0	8	[
water	14:43	0:0	8	(
water	14:44	0:0	8	i
op	14:45	0:0	8	*
water	14:46	0:0	8	3
water	14:47	0:0	8	)
op	14:48	0:0	8	+
water	14:49	0:0	8	2
op	14:50	0:0	8	]
water	14:52	0:0	6	;
water	15:2	0:0	6	}
else	15:4	17:2	4
stmts	15:9	17:2	5	
water	15:9	0:0	6	{
water	16:3	0:0	6	(
water	16:4	0:0	6	(
water	16:5	0:0	6	unsigned
water	16:14	0:0	6	char
op	16:18	0:0	6	*
water	16:19	0:0	6	)
water	16:20	0:0	6	buffer
water	16:26	0:0	6	)
op	16:27	0:0	6	[
water	16:28	0:0	6	(
water	16:29	0:0	6	i
op	16:30	0:0	6	*
water	16:31	0:0	6	3
water	16:32	0:0	6	)
op	16:33	0:0	6	+
water	16:34	0:0	6	2
op	16:35	0:0	6	]
op	16:37	0:0	6	|=
water	16:40	0:0	6	0
water	16:41	0:0	6	x80
water	16:44	0:0	6	;
water	17:2	0:0	6	}
water	18:1	0:0	4	}
return	20:1	20:22	2	(samplecount*3)
water	20:7	0:0	3	(
water	20:8	0:0	3	samplecount
op	20:19	0:0	3	*
water	20:20	0:0	3	3
water	20:21	0:0	3	)

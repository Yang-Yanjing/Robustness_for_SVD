func	2:0	64:0	0	static int	OJPEGReadHeaderInfoSecTablesDcTable
params	3:35	0:0	1	
param	3:36	3:45	2	TIFF *	tif
stmnts	5:1	63:10	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	char
water	5:19	0:0	2	module
op	5:25	0:0	2	[
op	5:26	0:0	2	]
op	5:27	0:0	2	=
water	5:28	0:0	2	"OJPEGReadHeaderInfoSecTablesDcTable"
water	5:65	0:0	2	;
decl	6:1	6:42	2	OJPEGState	*sp
op	6:15	0:0	2	=
water	6:16	0:0	2	(
water	6:17	0:0	2	OJPEGState
op	6:27	0:0	2	*
water	6:28	0:0	2	)
water	6:29	0:0	2	tif
op	6:32	0:0	2	->
water	6:34	0:0	2	tif_data
decl	7:1	7:8	2	uint8	m
decl	8:1	8:8	2	uint8	n
decl	9:1	9:12	2	uint8	o[16]
decl	10:1	10:9	2	uint32	p
decl	11:1	11:9	2	uint32	q
decl	12:1	12:10	2	uint32	ra
decl	13:1	13:10	2	uint8	*rb
if	14:1	18:1	2	(sp -> dctable_offset [ 0 ] == 0)
cond	14:5	14:28	3	sp -> dctable_offset [ 0 ] == 0
water	14:5	0:0	4	sp
op	14:7	0:0	4	->
water	14:9	0:0	4	dctable_offset
op	14:23	0:0	4	[
water	14:24	0:0	4	0
op	14:25	0:0	4	]
op	14:26	0:0	4	==
water	14:28	0:0	4	0
stmts	15:1	18:1	3	
water	15:1	0:0	4	{
call	16:2	16:63	4	TIFFErrorExt
arg	16:15	16:34	5	tif->tif_clientdata
water	16:15	0:0	6	tif
op	16:18	0:0	6	->
water	16:20	0:0	6	tif_clientdata
arg	16:35	16:41	5	module
water	16:35	0:0	6	module
arg	16:42	16:63	5	"Missing JPEG tables"
water	16:42	0:0	6	"Missing JPEG tables"
water	16:64	0:0	4	;
return	17:2	17:11	4	(0)
water	17:8	0:0	5	(
water	17:9	0:0	5	0
water	17:10	0:0	5	)
water	18:1	0:0	4	}
water	19:1	0:0	2	sp
op	19:3	0:0	2	->
water	19:5	0:0	2	in_buffer_file_pos_log
op	19:27	0:0	2	=
water	19:28	0:0	2	0
water	19:29	0:0	2	;
for	20:1	62:1	2	(m = 0 ;m < sp -> samples_per_pixel;m ++)
forinit	20:6	20:9	3	m = 0 ;
water	20:6	0:0	4	m
op	20:7	0:0	4	=
water	20:8	0:0	4	0
water	20:9	0:0	4	;
cond	20:11	20:17	3	m < sp -> samples_per_pixel
water	20:11	0:0	4	m
op	20:12	0:0	4	<
water	20:13	0:0	4	sp
op	20:15	0:0	4	->
water	20:17	0:0	4	samples_per_pixel
forexpr	20:36	20:37	3	m ++
water	20:36	0:0	4	m
op	20:37	0:0	4	++
stmts	21:1	62:1	3	
water	21:1	0:0	4	{
if	22:2	59:2	4	(( sp -> dctable_offset [ m ] != 0 ) && ( ( m == 0 ) || ( sp -> dctable_offset [ m ] != sp -> dctable_offset [ m - 1 ] ) ))
cond	22:6	22:95	5	( sp -> dctable_offset [ m ] != 0 ) && ( ( m == 0 ) || ( sp -> dctable_offset [ m ] != sp -> dctable_offset [ m - 1 ] ) )
water	22:6	0:0	6	(
water	22:7	0:0	6	sp
op	22:9	0:0	6	->
water	22:11	0:0	6	dctable_offset
op	22:25	0:0	6	[
water	22:26	0:0	6	m
op	22:27	0:0	6	]
op	22:28	0:0	6	!=
water	22:30	0:0	6	0
water	22:31	0:0	6	)
op	22:33	0:0	6	&&
water	22:36	0:0	6	(
water	22:37	0:0	6	(
water	22:38	0:0	6	m
op	22:39	0:0	6	==
water	22:41	0:0	6	0
water	22:42	0:0	6	)
op	22:44	0:0	6	||
water	22:47	0:0	6	(
water	22:48	0:0	6	sp
op	22:50	0:0	6	->
water	22:52	0:0	6	dctable_offset
op	22:66	0:0	6	[
water	22:67	0:0	6	m
op	22:68	0:0	6	]
op	22:69	0:0	6	!=
water	22:71	0:0	6	sp
op	22:73	0:0	6	->
water	22:75	0:0	6	dctable_offset
op	22:89	0:0	6	[
water	22:90	0:0	6	m
op	22:91	0:0	6	-
water	22:92	0:0	6	1
op	22:93	0:0	6	]
water	22:94	0:0	6	)
water	22:95	0:0	6	)
stmts	23:2	59:2	5	
water	23:2	0:0	6	{
for	24:3	31:3	6	(n = 0 ;n < m - 1;n ++)
forinit	24:8	24:11	7	n = 0 ;
water	24:8	0:0	8	n
op	24:9	0:0	8	=
water	24:10	0:0	8	0
water	24:11	0:0	8	;
cond	24:13	24:17	7	n < m - 1
water	24:13	0:0	8	n
op	24:14	0:0	8	<
water	24:15	0:0	8	m
op	24:16	0:0	8	-
water	24:17	0:0	8	1
forexpr	24:20	24:21	7	n ++
water	24:20	0:0	8	n
op	24:21	0:0	8	++
stmts	25:3	31:3	7	
water	25:3	0:0	8	{
if	26:4	30:4	8	(sp -> dctable_offset [ m ] == sp -> dctable_offset [ n ])
cond	26:8	26:51	9	sp -> dctable_offset [ m ] == sp -> dctable_offset [ n ]
water	26:8	0:0	10	sp
op	26:10	0:0	10	->
water	26:12	0:0	10	dctable_offset
op	26:26	0:0	10	[
water	26:27	0:0	10	m
op	26:28	0:0	10	]
op	26:29	0:0	10	==
water	26:31	0:0	10	sp
op	26:33	0:0	10	->
water	26:35	0:0	10	dctable_offset
op	26:49	0:0	10	[
water	26:50	0:0	10	n
op	26:51	0:0	10	]
stmts	27:4	30:4	9	
water	27:4	0:0	10	{
call	28:5	28:77	10	TIFFErrorExt
arg	28:18	28:37	11	tif->tif_clientdata
water	28:18	0:0	12	tif
op	28:21	0:0	12	->
water	28:23	0:0	12	tif_clientdata
arg	28:38	28:44	11	module
water	28:38	0:0	12	module
arg	28:45	28:77	11	"Corrupt JpegDcTables tag value"
water	28:45	0:0	12	"Corrupt JpegDcTables tag value"
water	28:78	0:0	10	;
return	29:5	29:14	10	(0)
water	29:11	0:0	11	(
water	29:12	0:0	11	0
water	29:13	0:0	11	)
water	30:4	0:0	10	}
water	31:3	0:0	8	}
call	32:3	32:50	6	TIFFSeekFile
arg	32:16	32:19	7	tif
water	32:16	0:0	8	tif
arg	32:20	32:41	7	sp->dctable_offset[m]
water	32:20	0:0	8	sp
op	32:22	0:0	8	->
water	32:24	0:0	8	dctable_offset
op	32:38	0:0	8	[
water	32:39	0:0	8	m
op	32:40	0:0	8	]
arg	32:42	32:50	7	SEEK_SET
water	32:42	0:0	8	SEEK_SET
water	32:51	0:0	6	;
water	33:3	0:0	6	p
op	33:4	0:0	6	=
water	33:5	0:0	6	(
water	33:6	0:0	6	uint32
water	33:12	0:0	6	)
call	33:13	33:34	6	TIFFReadFile
arg	33:26	33:29	7	tif
water	33:26	0:0	8	tif
arg	33:30	33:31	7	o
water	33:30	0:0	8	o
arg	33:32	33:34	7	16
water	33:32	0:0	8	16
water	33:35	0:0	6	;
if	34:3	35:13	6	(p != 16)
cond	34:7	34:10	7	p != 16
water	34:7	0:0	8	p
op	34:8	0:0	8	!=
water	34:10	0:0	8	16
stmts	35:4	35:13	7	
return	35:4	35:13	8	(0)
water	35:10	0:0	9	(
water	35:11	0:0	9	0
water	35:12	0:0	9	)
water	36:3	0:0	6	q
op	36:4	0:0	6	=
water	36:5	0:0	6	0
water	36:6	0:0	6	;
for	37:3	38:11	6	(n = 0 ;n < 16;n ++)
forinit	37:8	37:11	7	n = 0 ;
water	37:8	0:0	8	n
op	37:9	0:0	8	=
water	37:10	0:0	8	0
water	37:11	0:0	8	;
cond	37:13	37:15	7	n < 16
water	37:13	0:0	8	n
op	37:14	0:0	8	<
water	37:15	0:0	8	16
forexpr	37:19	37:20	7	n ++
water	37:19	0:0	8	n
op	37:20	0:0	8	++
stmts	38:4	38:11	7	
water	38:4	0:0	8	q
op	38:5	0:0	8	+=
water	38:7	0:0	8	o
op	38:8	0:0	8	[
water	38:9	0:0	8	n
op	38:10	0:0	8	]
water	38:11	0:0	8	;
water	39:3	0:0	6	ra
op	39:5	0:0	6	=
op	39:6	0:0	6	sizeof
water	39:12	0:0	6	(
water	39:13	0:0	6	uint32
water	39:19	0:0	6	)
op	39:20	0:0	6	+
water	39:21	0:0	6	21
op	39:23	0:0	6	+
water	39:24	0:0	6	q
water	39:25	0:0	6	;
water	40:3	0:0	6	rb
op	40:5	0:0	6	=
call	40:6	40:20	6	_TIFFmalloc
arg	40:18	40:20	7	ra
water	40:18	0:0	8	ra
water	40:21	0:0	6	;
if	41:3	45:3	6	(rb == 0)
cond	41:7	41:11	7	rb == 0
water	41:7	0:0	8	rb
op	41:9	0:0	8	==
water	41:11	0:0	8	0
stmts	42:3	45:3	7	
water	42:3	0:0	8	{
call	43:4	43:59	8	TIFFErrorExt
arg	43:17	43:36	9	tif->tif_clientdata
water	43:17	0:0	10	tif
op	43:20	0:0	10	->
water	43:22	0:0	10	tif_clientdata
arg	43:37	43:43	9	module
water	43:37	0:0	10	module
arg	43:44	43:59	9	"Out of memory"
water	43:44	0:0	10	"Out of memory"
water	43:60	0:0	8	;
return	44:4	44:13	8	(0)
water	44:10	0:0	9	(
water	44:11	0:0	9	0
water	44:12	0:0	9	)
water	45:3	0:0	8	}
op	46:3	0:0	6	*
water	46:4	0:0	6	(
water	46:5	0:0	6	uint32
op	46:11	0:0	6	*
water	46:12	0:0	6	)
water	46:13	0:0	6	rb
op	46:15	0:0	6	=
water	46:16	0:0	6	ra
water	46:18	0:0	6	;
water	47:3	0:0	6	rb
op	47:5	0:0	6	[
op	47:6	0:0	6	sizeof
water	47:12	0:0	6	(
water	47:13	0:0	6	uint32
water	47:19	0:0	6	)
op	47:20	0:0	6	]
op	47:21	0:0	6	=
water	47:22	0:0	6	255
water	47:25	0:0	6	;
water	48:3	0:0	6	rb
op	48:5	0:0	6	[
op	48:6	0:0	6	sizeof
water	48:12	0:0	6	(
water	48:13	0:0	6	uint32
water	48:19	0:0	6	)
op	48:20	0:0	6	+
water	48:21	0:0	6	1
op	48:22	0:0	6	]
op	48:23	0:0	6	=
water	48:24	0:0	6	JPEG_MARKER_DHT
water	48:39	0:0	6	;
water	49:3	0:0	6	rb
op	49:5	0:0	6	[
op	49:6	0:0	6	sizeof
water	49:12	0:0	6	(
water	49:13	0:0	6	uint32
water	49:19	0:0	6	)
op	49:20	0:0	6	+
water	49:21	0:0	6	2
op	49:22	0:0	6	]
op	49:23	0:0	6	=
call	49:24	49:41	6	(uint8)
arg	49:32	49:41	7	(19+q)>>8
water	49:32	0:0	8	(
water	49:33	0:0	8	19
op	49:35	0:0	8	+
water	49:36	0:0	8	q
water	49:37	0:0	8	)
op	49:38	0:0	8	>>
water	49:40	0:0	8	8
water	49:42	0:0	6	;
water	50:3	0:0	6	rb
op	50:5	0:0	6	[
op	50:6	0:0	6	sizeof
water	50:12	0:0	6	(
water	50:13	0:0	6	uint32
water	50:19	0:0	6	)
op	50:20	0:0	6	+
water	50:21	0:0	6	3
op	50:22	0:0	6	]
op	50:23	0:0	6	=
water	50:24	0:0	6	(
water	50:25	0:0	6	(
water	50:26	0:0	6	19
op	50:28	0:0	6	+
water	50:29	0:0	6	q
water	50:30	0:0	6	)
op	50:31	0:0	6	&
water	50:32	0:0	6	255
water	50:35	0:0	6	)
water	50:36	0:0	6	;
water	51:3	0:0	6	rb
op	51:5	0:0	6	[
op	51:6	0:0	6	sizeof
water	51:12	0:0	6	(
water	51:13	0:0	6	uint32
water	51:19	0:0	6	)
op	51:20	0:0	6	+
water	51:21	0:0	6	4
op	51:22	0:0	6	]
op	51:23	0:0	6	=
water	51:24	0:0	6	m
water	51:25	0:0	6	;
for	52:3	53:31	6	(n = 0 ;n < 16;n ++)
forinit	52:8	52:11	7	n = 0 ;
water	52:8	0:0	8	n
op	52:9	0:0	8	=
water	52:10	0:0	8	0
water	52:11	0:0	8	;
cond	52:13	52:15	7	n < 16
water	52:13	0:0	8	n
op	52:14	0:0	8	<
water	52:15	0:0	8	16
forexpr	52:19	52:20	7	n ++
water	52:19	0:0	8	n
op	52:20	0:0	8	++
stmts	53:4	53:31	7	
water	53:4	0:0	8	rb
op	53:6	0:0	8	[
op	53:7	0:0	8	sizeof
water	53:13	0:0	8	(
water	53:14	0:0	8	uint32
water	53:20	0:0	8	)
op	53:21	0:0	8	+
water	53:22	0:0	8	5
op	53:23	0:0	8	+
water	53:24	0:0	8	n
op	53:25	0:0	8	]
op	53:26	0:0	8	=
water	53:27	0:0	8	o
op	53:28	0:0	8	[
water	53:29	0:0	8	n
op	53:30	0:0	8	]
water	53:31	0:0	8	;
water	54:3	0:0	6	p
op	54:4	0:0	6	=
water	54:5	0:0	6	(
water	54:6	0:0	6	uint32
water	54:12	0:0	6	)
call	54:13	54:56	6	TIFFReadFile
arg	54:26	54:29	7	tif
water	54:26	0:0	8	tif
arg	54:30	54:54	7	&(rb[sizeof(uint32)+21])
op	54:30	0:0	8	&
water	54:31	0:0	8	(
water	54:32	0:0	8	rb
op	54:34	0:0	8	[
op	54:35	0:0	8	sizeof
water	54:41	0:0	8	(
water	54:42	0:0	8	uint32
water	54:48	0:0	8	)
op	54:49	0:0	8	+
water	54:50	0:0	8	21
op	54:52	0:0	8	]
water	54:53	0:0	8	)
arg	54:55	54:56	7	q
water	54:55	0:0	8	q
water	54:57	0:0	6	;
if	55:3	56:13	6	(p != q)
cond	55:7	55:10	7	p != q
water	55:7	0:0	8	p
op	55:8	0:0	8	!=
water	55:10	0:0	8	q
stmts	56:4	56:13	7	
return	56:4	56:13	8	(0)
water	56:10	0:0	9	(
water	56:11	0:0	9	0
water	56:12	0:0	9	)
water	57:3	0:0	6	sp
op	57:5	0:0	6	->
water	57:7	0:0	6	dctable
op	57:14	0:0	6	[
water	57:15	0:0	6	m
op	57:16	0:0	6	]
op	57:17	0:0	6	=
water	57:18	0:0	6	rb
water	57:20	0:0	6	;
water	58:3	0:0	6	sp
op	58:5	0:0	6	->
water	58:7	0:0	6	sos_tda
op	58:14	0:0	6	[
water	58:15	0:0	6	m
op	58:16	0:0	6	]
op	58:17	0:0	6	=
water	58:18	0:0	6	(
water	58:19	0:0	6	m
op	58:20	0:0	6	<<
water	58:22	0:0	6	4
water	58:23	0:0	6	)
water	58:24	0:0	6	;
water	59:2	0:0	6	}
else	60:2	61:34	4
stmts	61:3	61:34	5	
water	61:3	0:0	6	sp
op	61:5	0:0	6	->
water	61:7	0:0	6	sos_tda
op	61:14	0:0	6	[
water	61:15	0:0	6	m
op	61:16	0:0	6	]
op	61:17	0:0	6	=
water	61:18	0:0	6	sp
op	61:20	0:0	6	->
water	61:22	0:0	6	sos_tda
op	61:29	0:0	6	[
water	61:30	0:0	6	m
op	61:31	0:0	6	-
water	61:32	0:0	6	1
op	61:33	0:0	6	]
water	61:34	0:0	6	;
water	62:1	0:0	4	}
return	63:1	63:10	2	(1)
water	63:7	0:0	3	(
water	63:8	0:0	3	1
water	63:9	0:0	3	)

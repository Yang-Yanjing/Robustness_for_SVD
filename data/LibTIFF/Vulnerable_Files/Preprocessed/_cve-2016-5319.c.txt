func	2:0	122:0	0	static int	PackBitsEncode
params	3:14	0:0	1	
param	3:15	3:24	2	TIFF *	tif
param	3:26	3:36	2	uint8 *	buf
param	3:38	3:49	2	tmsize_t	cc
param	3:51	3:59	2	uint16	s
stmnts	0:0	121:11	1	
decl	5:1	5:41	2	unsigned char	*bp
op	5:19	0:0	2	=
water	5:21	0:0	2	(
water	5:22	0:0	2	unsigned
water	5:31	0:0	2	char
op	5:35	0:0	2	*
water	5:36	0:0	2	)
water	5:38	0:0	2	buf
decl	6:1	6:10	2	uint8	*op
decl	7:1	7:10	2	uint8	*ep
decl	8:1	8:19	2	uint8	*lastliteral
decl	9:1	9:13	2	long	n
water	9:7	0:0	2	,
decl	9:1	9:13	2	long	slop
decl	10:1	10:6	2	int	b
enum	11:1	11:40	2	<anonymous_11:1>
water	11:8	0:0	3	BASE
water	11:12	0:0	3	,
water	11:14	0:0	3	LITERAL
water	11:21	0:0	3	,
water	11:23	0:0	3	RUN
water	11:26	0:0	3	,
water	11:28	0:0	3	LITERAL_RUN
decl	11:1	11:47	2	<anonymous_11:1>	state
water	13:1	0:0	2	(
water	13:2	0:0	2	void
water	13:6	0:0	2	)
water	13:8	0:0	2	s
water	13:9	0:0	2	;
water	14:1	0:0	2	op
op	14:4	0:0	2	=
water	14:6	0:0	2	tif
op	14:9	0:0	2	->
water	14:11	0:0	2	tif_rawcp
water	14:20	0:0	2	;
water	15:1	0:0	2	ep
op	15:4	0:0	2	=
water	15:6	0:0	2	tif
op	15:9	0:0	2	->
water	15:11	0:0	2	tif_rawdata
op	15:23	0:0	2	+
water	15:25	0:0	2	tif
op	15:28	0:0	2	->
water	15:30	0:0	2	tif_rawdatasize
water	15:45	0:0	2	;
water	16:1	0:0	2	state
op	16:7	0:0	2	=
water	16:9	0:0	2	BASE
water	16:13	0:0	2	;
water	17:1	0:0	2	lastliteral
op	17:13	0:0	2	=
water	17:15	0:0	2	0
water	17:16	0:0	2	;
while	18:1	118:1	2	(cc > 0)
cond	18:8	18:13	3	cc > 0
water	18:8	0:0	4	cc
op	18:11	0:0	4	>
water	18:13	0:0	4	0
stmts	18:16	118:1	3	
water	18:16	0:0	4	{
water	22:2	0:0	4	b
op	22:4	0:0	4	=
op	22:6	0:0	4	*
water	22:7	0:0	4	bp
op	22:9	0:0	4	++
water	22:11	0:0	4	,
water	22:13	0:0	4	cc
op	22:15	0:0	4	--
water	22:17	0:0	4	,
water	22:19	0:0	4	n
op	22:21	0:0	4	=
water	22:23	0:0	4	1
water	22:24	0:0	4	;
for	23:2	24:6	4	(;cc > 0 && b == * bp;cc -- , bp ++)
forinit	23:7	23:7	5	;
water	23:7	0:0	6	;
cond	23:9	23:25	5	cc > 0 && b == * bp
water	23:9	0:0	6	cc
op	23:12	0:0	6	>
water	23:14	0:0	6	0
op	23:16	0:0	6	&&
water	23:19	0:0	6	b
op	23:21	0:0	6	==
op	23:24	0:0	6	*
water	23:25	0:0	6	bp
forexpr	23:29	23:37	5	cc -- , bp ++
water	23:29	0:0	6	cc
op	23:31	0:0	6	--
water	23:33	0:0	6	,
water	23:35	0:0	6	bp
op	23:37	0:0	6	++
stmts	24:3	24:6	5	
water	24:3	0:0	6	n
op	24:4	0:0	6	++
water	24:6	0:0	6	;
label	25:1	25:6	4	again :
if	26:2	48:2	4	(op + 2 >= ep)
cond	26:6	26:16	5	op + 2 >= ep
water	26:6	0:0	6	op
op	26:9	0:0	6	+
water	26:11	0:0	6	2
op	26:13	0:0	6	>=
water	26:16	0:0	6	ep
stmts	26:20	48:2	5	
water	26:20	0:0	6	{
if	33:3	42:3	6	(state == LITERAL || state == LITERAL_RUN)
cond	33:7	33:36	7	state == LITERAL || state == LITERAL_RUN
water	33:7	0:0	8	state
op	33:13	0:0	8	==
water	33:16	0:0	8	LITERAL
op	33:24	0:0	8	||
water	33:27	0:0	8	state
op	33:33	0:0	8	==
water	33:36	0:0	8	LITERAL_RUN
stmts	33:49	42:3	7	
water	33:49	0:0	8	{
water	34:4	0:0	8	slop
op	34:9	0:0	8	=
call	34:11	34:34	8	(long)
arg	34:18	34:34	9	op-lastliteral
water	34:18	0:0	10	op
op	34:21	0:0	10	-
water	34:23	0:0	10	lastliteral
water	34:35	0:0	8	;
water	35:4	0:0	8	tif
op	35:7	0:0	8	->
water	35:9	0:0	8	tif_rawcc
op	35:19	0:0	8	+=
call	35:22	35:61	8	(tmsize_t)
arg	35:33	35:61	9	lastliteral-tif->tif_rawcp
water	35:33	0:0	10	lastliteral
op	35:45	0:0	10	-
water	35:47	0:0	10	tif
op	35:50	0:0	10	->
water	35:52	0:0	10	tif_rawcp
water	35:62	0:0	8	;
if	36:4	37:16	8	(!TIFFFlushData1 (tif ))
cond	36:8	36:27	9	!TIFFFlushData1 (tif )
op	36:8	0:0	10	!
call	36:9	36:27	10	TIFFFlushData1
arg	36:24	36:27	11	tif
water	36:24	0:0	12	tif
stmts	37:5	37:16	9	
return	37:5	37:16	10	(-1)
water	37:12	0:0	11	(
op	37:13	0:0	11	-
water	37:14	0:0	11	1
water	37:15	0:0	11	)
water	38:4	0:0	8	op
op	38:7	0:0	8	=
water	38:9	0:0	8	tif
op	38:12	0:0	8	->
water	38:14	0:0	8	tif_rawcp
water	38:23	0:0	8	;
while	39:4	40:27	8	(slop -- > 0)
cond	39:11	39:20	9	slop -- > 0
water	39:11	0:0	10	slop
op	39:15	0:0	10	--
op	39:18	0:0	10	>
water	39:20	0:0	10	0
stmts	40:5	40:27	9	
op	40:5	0:0	10	*
water	40:6	0:0	10	op
op	40:8	0:0	10	++
op	40:11	0:0	10	=
op	40:13	0:0	10	*
water	40:14	0:0	10	lastliteral
op	40:25	0:0	10	++
water	40:27	0:0	10	;
water	41:4	0:0	8	lastliteral
op	41:16	0:0	8	=
water	41:18	0:0	8	tif
op	41:21	0:0	8	->
water	41:23	0:0	8	tif_rawcp
water	41:32	0:0	8	;
water	42:3	0:0	8	}
else	42:5	47:3	6
stmts	42:10	47:3	7	
water	42:10	0:0	8	{
water	43:4	0:0	8	tif
op	43:7	0:0	8	->
water	43:9	0:0	8	tif_rawcc
op	43:19	0:0	8	+=
call	43:22	43:52	8	(tmsize_t)
arg	43:33	43:52	9	op-tif->tif_rawcp
water	43:33	0:0	10	op
op	43:36	0:0	10	-
water	43:38	0:0	10	tif
op	43:41	0:0	10	->
water	43:43	0:0	10	tif_rawcp
water	43:53	0:0	8	;
if	44:4	45:16	8	(!TIFFFlushData1 (tif ))
cond	44:8	44:27	9	!TIFFFlushData1 (tif )
op	44:8	0:0	10	!
call	44:9	44:27	10	TIFFFlushData1
arg	44:24	44:27	11	tif
water	44:24	0:0	12	tif
stmts	45:5	45:16	9	
return	45:5	45:16	10	(-1)
water	45:12	0:0	11	(
op	45:13	0:0	11	-
water	45:14	0:0	11	1
water	45:15	0:0	11	)
water	46:4	0:0	8	op
op	46:7	0:0	8	=
water	46:9	0:0	8	tif
op	46:12	0:0	8	->
water	46:14	0:0	8	tif_rawcp
water	46:23	0:0	8	;
water	47:3	0:0	8	}
water	48:2	0:0	6	}
switch	49:2	117:2	4	(state)
cond	49:10	49:10	5	state
water	49:10	0:0	6	state
stmts	49:17	117:2	5	
water	49:17	0:0	6	{
label	50:2	50:11	6	case BASE :
if	51:3	61:3	6	(n > 1)
cond	51:7	51:11	7	n > 1
water	51:7	0:0	8	n
op	51:9	0:0	8	>
water	51:11	0:0	8	1
stmts	51:14	61:3	7	
water	51:14	0:0	8	{
water	52:4	0:0	8	state
op	52:10	0:0	8	=
water	52:12	0:0	8	RUN
water	52:15	0:0	8	;
if	53:4	58:4	8	(n > 128)
cond	53:8	53:12	9	n > 128
water	53:8	0:0	10	n
op	53:10	0:0	10	>
water	53:12	0:0	10	128
stmts	53:17	58:4	9	
water	53:17	0:0	10	{
op	54:5	0:0	10	*
water	54:6	0:0	10	op
op	54:8	0:0	10	++
op	54:11	0:0	10	=
water	54:13	0:0	10	(
water	54:14	0:0	10	uint8
water	54:19	0:0	10	)
op	54:21	0:0	10	-
water	54:22	0:0	10	127
water	54:25	0:0	10	;
op	55:5	0:0	10	*
water	55:6	0:0	10	op
op	55:8	0:0	10	++
op	55:11	0:0	10	=
water	55:13	0:0	10	(
water	55:14	0:0	10	uint8
water	55:19	0:0	10	)
water	55:21	0:0	10	b
water	55:22	0:0	10	;
water	56:5	0:0	10	n
op	56:7	0:0	10	-=
water	56:10	0:0	10	128
water	56:13	0:0	10	;
goto	57:5	57:15	10	again
water	57:10	0:0	11	again
water	58:4	0:0	10	}
op	59:4	0:0	8	*
water	59:5	0:0	8	op
op	59:7	0:0	8	++
op	59:10	0:0	8	=
call	59:12	59:26	8	(uint8)
arg	59:20	59:26	9	-(n-1)
op	59:20	0:0	10	-
water	59:21	0:0	10	(
water	59:22	0:0	10	n
op	59:23	0:0	10	-
water	59:24	0:0	10	1
water	59:25	0:0	10	)
water	59:27	0:0	8	;
op	60:4	0:0	8	*
water	60:5	0:0	8	op
op	60:7	0:0	8	++
op	60:10	0:0	8	=
water	60:12	0:0	8	(
water	60:13	0:0	8	uint8
water	60:18	0:0	8	)
water	60:20	0:0	8	b
water	60:21	0:0	8	;
water	61:3	0:0	8	}
else	61:5	66:3	6
stmts	61:10	66:3	7	
water	61:10	0:0	8	{
water	62:4	0:0	8	lastliteral
op	62:16	0:0	8	=
water	62:18	0:0	8	op
water	62:20	0:0	8	;
op	63:4	0:0	8	*
water	63:5	0:0	8	op
op	63:7	0:0	8	++
op	63:10	0:0	8	=
water	63:12	0:0	8	0
water	63:13	0:0	8	;
op	64:4	0:0	8	*
water	64:5	0:0	8	op
op	64:7	0:0	8	++
op	64:10	0:0	8	=
water	64:12	0:0	8	(
water	64:13	0:0	8	uint8
water	64:18	0:0	8	)
water	64:20	0:0	8	b
water	64:21	0:0	8	;
water	65:4	0:0	8	state
op	65:10	0:0	8	=
water	65:12	0:0	8	LITERAL
water	65:19	0:0	8	;
water	66:3	0:0	8	}
break	67:3	67:8	6	
label	68:2	68:14	6	case LITERAL :
if	69:3	79:3	6	(n > 1)
cond	69:7	69:11	7	n > 1
water	69:7	0:0	8	n
op	69:9	0:0	8	>
water	69:11	0:0	8	1
stmts	69:14	79:3	7	
water	69:14	0:0	8	{
water	70:4	0:0	8	state
op	70:10	0:0	8	=
water	70:12	0:0	8	LITERAL_RUN
water	70:23	0:0	8	;
if	71:4	76:4	8	(n > 128)
cond	71:8	71:12	9	n > 128
water	71:8	0:0	10	n
op	71:10	0:0	10	>
water	71:12	0:0	10	128
stmts	71:17	76:4	9	
water	71:17	0:0	10	{
op	72:5	0:0	10	*
water	72:6	0:0	10	op
op	72:8	0:0	10	++
op	72:11	0:0	10	=
water	72:13	0:0	10	(
water	72:14	0:0	10	uint8
water	72:19	0:0	10	)
op	72:21	0:0	10	-
water	72:22	0:0	10	127
water	72:25	0:0	10	;
op	73:5	0:0	10	*
water	73:6	0:0	10	op
op	73:8	0:0	10	++
op	73:11	0:0	10	=
water	73:13	0:0	10	(
water	73:14	0:0	10	uint8
water	73:19	0:0	10	)
water	73:21	0:0	10	b
water	73:22	0:0	10	;
water	74:5	0:0	10	n
op	74:7	0:0	10	-=
water	74:10	0:0	10	128
water	74:13	0:0	10	;
goto	75:5	75:15	10	again
water	75:10	0:0	11	again
water	76:4	0:0	10	}
op	77:4	0:0	8	*
water	77:5	0:0	8	op
op	77:7	0:0	8	++
op	77:10	0:0	8	=
call	77:12	77:26	8	(uint8)
arg	77:20	77:26	9	-(n-1)
op	77:20	0:0	10	-
water	77:21	0:0	10	(
water	77:22	0:0	10	n
op	77:23	0:0	10	-
water	77:24	0:0	10	1
water	77:25	0:0	10	)
water	77:27	0:0	8	;
op	78:4	0:0	8	*
water	78:5	0:0	8	op
op	78:7	0:0	8	++
op	78:10	0:0	8	=
water	78:12	0:0	8	(
water	78:13	0:0	8	uint8
water	78:18	0:0	8	)
water	78:20	0:0	8	b
water	78:21	0:0	8	;
water	79:3	0:0	8	}
else	79:5	83:3	6
stmts	79:10	83:3	7	
water	79:10	0:0	8	{
if	80:4	81:17	8	(++ ( * lastliteral ) == 127)
cond	80:8	80:28	9	++ ( * lastliteral ) == 127
op	80:8	0:0	10	++
water	80:10	0:0	10	(
op	80:11	0:0	10	*
water	80:12	0:0	10	lastliteral
water	80:23	0:0	10	)
op	80:25	0:0	10	==
water	80:28	0:0	10	127
stmts	81:5	81:17	9	
water	81:5	0:0	10	state
op	81:11	0:0	10	=
water	81:13	0:0	10	BASE
water	81:17	0:0	10	;
op	82:4	0:0	8	*
water	82:5	0:0	8	op
op	82:7	0:0	8	++
op	82:10	0:0	8	=
water	82:12	0:0	8	(
water	82:13	0:0	8	uint8
water	82:18	0:0	8	)
water	82:20	0:0	8	b
water	82:21	0:0	8	;
water	83:3	0:0	8	}
break	84:3	84:8	6	
label	85:2	85:10	6	case RUN :
if	86:3	95:3	6	(n > 1)
cond	86:7	86:11	7	n > 1
water	86:7	0:0	8	n
op	86:9	0:0	8	>
water	86:11	0:0	8	1
stmts	86:14	95:3	7	
water	86:14	0:0	8	{
if	87:4	92:4	8	(n > 128)
cond	87:8	87:12	9	n > 128
water	87:8	0:0	10	n
op	87:10	0:0	10	>
water	87:12	0:0	10	128
stmts	87:17	92:4	9	
water	87:17	0:0	10	{
op	88:5	0:0	10	*
water	88:6	0:0	10	op
op	88:8	0:0	10	++
op	88:11	0:0	10	=
water	88:13	0:0	10	(
water	88:14	0:0	10	uint8
water	88:19	0:0	10	)
op	88:21	0:0	10	-
water	88:22	0:0	10	127
water	88:25	0:0	10	;
op	89:5	0:0	10	*
water	89:6	0:0	10	op
op	89:8	0:0	10	++
op	89:11	0:0	10	=
water	89:13	0:0	10	(
water	89:14	0:0	10	uint8
water	89:19	0:0	10	)
water	89:21	0:0	10	b
water	89:22	0:0	10	;
water	90:5	0:0	10	n
op	90:7	0:0	10	-=
water	90:10	0:0	10	128
water	90:13	0:0	10	;
goto	91:5	91:15	10	again
water	91:10	0:0	11	again
water	92:4	0:0	10	}
op	93:4	0:0	8	*
water	93:5	0:0	8	op
op	93:7	0:0	8	++
op	93:10	0:0	8	=
call	93:12	93:26	8	(uint8)
arg	93:20	93:26	9	-(n-1)
op	93:20	0:0	10	-
water	93:21	0:0	10	(
water	93:22	0:0	10	n
op	93:23	0:0	10	-
water	93:24	0:0	10	1
water	93:25	0:0	10	)
water	93:27	0:0	8	;
op	94:4	0:0	8	*
water	94:5	0:0	8	op
op	94:7	0:0	8	++
op	94:10	0:0	8	=
water	94:12	0:0	8	(
water	94:13	0:0	8	uint8
water	94:18	0:0	8	)
water	94:20	0:0	8	b
water	94:21	0:0	8	;
water	95:3	0:0	8	}
else	95:5	100:3	6
stmts	95:10	100:3	7	
water	95:10	0:0	8	{
water	96:4	0:0	8	lastliteral
op	96:16	0:0	8	=
water	96:18	0:0	8	op
water	96:20	0:0	8	;
op	97:4	0:0	8	*
water	97:5	0:0	8	op
op	97:7	0:0	8	++
op	97:10	0:0	8	=
water	97:12	0:0	8	0
water	97:13	0:0	8	;
op	98:4	0:0	8	*
water	98:5	0:0	8	op
op	98:7	0:0	8	++
op	98:10	0:0	8	=
water	98:12	0:0	8	(
water	98:13	0:0	8	uint8
water	98:18	0:0	8	)
water	98:20	0:0	8	b
water	98:21	0:0	8	;
water	99:4	0:0	8	state
op	99:10	0:0	8	=
water	99:12	0:0	8	LITERAL
water	99:19	0:0	8	;
water	100:3	0:0	8	}
break	101:3	101:8	6	
label	102:2	102:18	6	case LITERAL_RUN :
if	109:3	114:3	6	(n == 1 && op [ - 2 ] == ( uint8 ) - 1 && * lastliteral < 126)
cond	109:7	110:22	7	n == 1 && op [ - 2 ] == ( uint8 ) - 1 && * lastliteral < 126
water	109:7	0:0	8	n
op	109:9	0:0	8	==
water	109:12	0:0	8	1
op	109:14	0:0	8	&&
water	109:17	0:0	8	op
op	109:19	0:0	8	[
op	109:20	0:0	8	-
water	109:21	0:0	8	2
op	109:22	0:0	8	]
op	109:24	0:0	8	==
water	109:27	0:0	8	(
water	109:28	0:0	8	uint8
water	109:33	0:0	8	)
op	109:35	0:0	8	-
water	109:36	0:0	8	1
op	109:38	0:0	8	&&
op	110:7	0:0	8	*
water	110:8	0:0	8	lastliteral
op	110:20	0:0	8	<
water	110:22	0:0	8	126
stmts	110:27	114:3	7	
water	110:27	0:0	8	{
water	111:4	0:0	8	state
op	111:10	0:0	8	=
water	111:12	0:0	8	(
water	111:13	0:0	8	(
water	111:14	0:0	8	(
op	111:15	0:0	8	*
water	111:16	0:0	8	lastliteral
water	111:27	0:0	8	)
op	111:29	0:0	8	+=
water	111:32	0:0	8	2
water	111:33	0:0	8	)
op	111:35	0:0	8	==
water	111:38	0:0	8	127
water	111:42	0:0	8	?
water	112:8	0:0	8	BASE
water	112:13	0:0	8	:
water	112:15	0:0	8	LITERAL
water	112:22	0:0	8	)
water	112:23	0:0	8	;
water	113:4	0:0	8	op
op	113:6	0:0	8	[
op	113:7	0:0	8	-
water	113:8	0:0	8	2
op	113:9	0:0	8	]
op	113:11	0:0	8	=
water	113:13	0:0	8	op
op	113:15	0:0	8	[
op	113:16	0:0	8	-
water	113:17	0:0	8	1
op	113:18	0:0	8	]
water	113:19	0:0	8	;
water	114:3	0:0	8	}
else	114:5	115:15	6
stmts	115:4	115:15	7	
water	115:4	0:0	8	state
op	115:10	0:0	8	=
water	115:12	0:0	8	RUN
water	115:15	0:0	8	;
goto	116:3	116:13	6	again
water	116:8	0:0	7	again
water	117:2	0:0	6	}
water	118:1	0:0	4	}
water	119:1	0:0	2	tif
op	119:4	0:0	2	->
water	119:6	0:0	2	tif_rawcc
op	119:16	0:0	2	+=
call	119:19	119:49	2	(tmsize_t)
arg	119:30	119:49	3	op-tif->tif_rawcp
water	119:30	0:0	4	op
op	119:33	0:0	4	-
water	119:35	0:0	4	tif
op	119:38	0:0	4	->
water	119:40	0:0	4	tif_rawcp
water	119:50	0:0	2	;
water	120:1	0:0	2	tif
op	120:4	0:0	2	->
water	120:6	0:0	2	tif_rawcp
op	120:16	0:0	2	=
water	120:18	0:0	2	op
water	120:20	0:0	2	;
return	121:1	121:11	2	(1)
water	121:8	0:0	3	(
water	121:9	0:0	3	1
water	121:10	0:0	3	)

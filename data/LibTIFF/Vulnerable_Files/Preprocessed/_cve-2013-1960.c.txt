func	2:0	88:0	0	int	t2p_process_jpeg_strip
params	2:26	0:0	1	
param	3:1	3:21	2	unsigned char *	strip
param	4:1	4:21	2	tsize_t *	striplength
param	5:1	5:22	2	unsigned char *	buffer
param	6:1	6:22	2	tsize_t *	bufferoffset
param	7:1	7:12	2	tstrip_t	no
param	8:1	8:14	2	uint32	height
stmnts	0:0	87:10	1	
decl	10:1	10:12	2	tsize_t	i
op	10:10	0:0	2	=
water	10:11	0:0	2	0
decl	11:1	11:13	2	uint16	ri
op	11:11	0:0	2	=
water	11:12	0:0	2	0
decl	12:1	12:16	2	uint16	v_samp
op	12:14	0:0	2	=
water	12:15	0:0	2	1
decl	13:1	13:16	2	uint16	h_samp
op	13:14	0:0	2	=
water	13:15	0:0	2	1
decl	14:1	14:8	2	int	j
op	14:6	0:0	2	=
water	14:7	0:0	2	0
water	16:1	0:0	2	i
op	16:2	0:0	2	++
water	16:4	0:0	2	;
while	18:1	84:1	2	(i < ( * striplength ))
cond	18:7	18:22	3	i < ( * striplength )
water	18:7	0:0	4	i
op	18:8	0:0	4	<
water	18:9	0:0	4	(
op	18:10	0:0	4	*
water	18:11	0:0	4	striplength
water	18:22	0:0	4	)
stmts	18:24	84:1	3	
water	18:24	0:0	4	{
switch	19:2	83:2	4	(strip [ i ])
cond	19:10	19:17	5	strip [ i ]
water	19:10	0:0	6	strip
op	19:15	0:0	6	[
water	19:16	0:0	6	i
op	19:17	0:0	6	]
stmts	19:20	83:2	5	
water	19:20	0:0	6	{
label	20:3	20:12	6	case 0 xd8 :
water	21:4	0:0	6	i
op	21:5	0:0	6	+=
water	21:7	0:0	6	2
water	21:8	0:0	6	;
break	22:4	22:9	6	
label	23:3	23:12	6	case 0 xc0 :
label	24:3	24:12	6	case 0 xc1 :
label	25:3	25:12	6	case 0 xc3 :
label	26:3	26:12	6	case 0 xc9 :
label	27:3	27:12	6	case 0 xca :
if	28:4	57:4	6	(no == 0)
cond	28:7	28:11	7	no == 0
water	28:7	0:0	8	no
op	28:9	0:0	8	==
water	28:11	0:0	8	0
stmts	28:13	57:4	7	
water	28:13	0:0	8	{
call	29:5	29:70	8	_TIFFmemcpy
arg	29:17	29:41	9	&(buffer[*bufferoffset])
op	29:17	0:0	10	&
water	29:18	0:0	10	(
water	29:19	0:0	10	buffer
op	29:25	0:0	10	[
op	29:26	0:0	10	*
water	29:27	0:0	10	bufferoffset
op	29:39	0:0	10	]
water	29:40	0:0	10	)
arg	29:43	29:56	9	&(strip[i-1])
op	29:43	0:0	10	&
water	29:44	0:0	10	(
water	29:45	0:0	10	strip
op	29:50	0:0	10	[
water	29:51	0:0	10	i
op	29:52	0:0	10	-
water	29:53	0:0	10	1
op	29:54	0:0	10	]
water	29:55	0:0	10	)
arg	29:58	29:70	9	strip[i+2]+2
water	29:58	0:0	10	strip
op	29:63	0:0	10	[
water	29:64	0:0	10	i
op	29:65	0:0	10	+
water	29:66	0:0	10	2
op	29:67	0:0	10	]
op	29:68	0:0	10	+
water	29:69	0:0	10	2
water	29:71	0:0	8	;
for	30:5	35:5	8	(j = 0 ;j < buffer [ * bufferoffset + 9 ];j ++)
forinit	30:9	30:12	9	j = 0 ;
water	30:9	0:0	10	j
op	30:10	0:0	10	=
water	30:11	0:0	10	0
water	30:12	0:0	10	;
cond	30:13	30:37	9	j < buffer [ * bufferoffset + 9 ]
water	30:13	0:0	10	j
op	30:14	0:0	10	<
water	30:15	0:0	10	buffer
op	30:21	0:0	10	[
op	30:22	0:0	10	*
water	30:23	0:0	10	bufferoffset
op	30:35	0:0	10	+
water	30:36	0:0	10	9
op	30:37	0:0	10	]
forexpr	30:39	30:40	9	j ++
water	30:39	0:0	10	j
op	30:40	0:0	10	++
stmts	30:43	35:5	9	
water	30:43	0:0	10	{
if	31:6	32:51	10	(( buffer [ * bufferoffset + 11 + ( 2 * j ) ] >> 4 ) > h_samp)
cond	31:10	31:48	11	( buffer [ * bufferoffset + 11 + ( 2 * j ) ] >> 4 ) > h_samp
water	31:10	0:0	12	(
water	31:11	0:0	12	buffer
op	31:17	0:0	12	[
op	31:18	0:0	12	*
water	31:19	0:0	12	bufferoffset
op	31:31	0:0	12	+
water	31:32	0:0	12	11
op	31:34	0:0	12	+
water	31:35	0:0	12	(
water	31:36	0:0	12	2
op	31:37	0:0	12	*
water	31:38	0:0	12	j
water	31:39	0:0	12	)
op	31:40	0:0	12	]
op	31:41	0:0	12	>>
water	31:43	0:0	12	4
water	31:44	0:0	12	)
op	31:46	0:0	12	>
water	31:48	0:0	12	h_samp
stmts	32:7	32:51	11	
water	32:7	0:0	12	h_samp
op	32:14	0:0	12	=
water	32:16	0:0	12	(
water	32:17	0:0	12	buffer
op	32:23	0:0	12	[
op	32:24	0:0	12	*
water	32:25	0:0	12	bufferoffset
op	32:37	0:0	12	+
water	32:38	0:0	12	11
op	32:40	0:0	12	+
water	32:41	0:0	12	(
water	32:42	0:0	12	2
op	32:43	0:0	12	*
water	32:44	0:0	12	j
water	32:45	0:0	12	)
op	32:46	0:0	12	]
op	32:47	0:0	12	>>
water	32:49	0:0	12	4
water	32:50	0:0	12	)
water	32:51	0:0	12	;
if	33:6	34:55	10	(( buffer [ * bufferoffset + 11 + ( 2 * j ) ] & 0 x0f ) > v_samp)
cond	33:10	33:52	11	( buffer [ * bufferoffset + 11 + ( 2 * j ) ] & 0 x0f ) > v_samp
water	33:10	0:0	12	(
water	33:11	0:0	12	buffer
op	33:17	0:0	12	[
op	33:18	0:0	12	*
water	33:19	0:0	12	bufferoffset
op	33:31	0:0	12	+
water	33:32	0:0	12	11
op	33:34	0:0	12	+
water	33:35	0:0	12	(
water	33:36	0:0	12	2
op	33:37	0:0	12	*
water	33:38	0:0	12	j
water	33:39	0:0	12	)
op	33:40	0:0	12	]
op	33:42	0:0	12	&
water	33:44	0:0	12	0
water	33:45	0:0	12	x0f
water	33:48	0:0	12	)
op	33:50	0:0	12	>
water	33:52	0:0	12	v_samp
stmts	34:7	34:55	11	
water	34:7	0:0	12	v_samp
op	34:14	0:0	12	=
water	34:16	0:0	12	(
water	34:17	0:0	12	buffer
op	34:23	0:0	12	[
op	34:24	0:0	12	*
water	34:25	0:0	12	bufferoffset
op	34:37	0:0	12	+
water	34:38	0:0	12	11
op	34:40	0:0	12	+
water	34:41	0:0	12	(
water	34:42	0:0	12	2
op	34:43	0:0	12	*
water	34:44	0:0	12	j
water	34:45	0:0	12	)
op	34:46	0:0	12	]
op	34:48	0:0	12	&
water	34:50	0:0	12	0
water	34:51	0:0	12	x0f
water	34:54	0:0	12	)
water	34:55	0:0	12	;
water	35:5	0:0	10	}
water	36:5	0:0	8	v_samp
op	36:11	0:0	8	*=
water	36:13	0:0	8	8
water	36:14	0:0	8	;
water	37:5	0:0	8	h_samp
op	37:11	0:0	8	*=
water	37:13	0:0	8	8
water	37:14	0:0	8	;
water	38:5	0:0	8	ri
op	38:7	0:0	8	=
water	38:8	0:0	8	(
water	38:9	0:0	8	(
water	38:10	0:0	8	(
water	38:12	0:0	8	(
call	38:13	38:45	8	(uint16)
arg	38:22	38:45	9	buffer[*bufferoffset+5]
water	38:22	0:0	10	buffer
op	38:28	0:0	10	[
op	38:29	0:0	10	*
water	38:30	0:0	10	bufferoffset
op	38:42	0:0	10	+
water	38:43	0:0	10	5
op	38:44	0:0	10	]
op	38:46	0:0	8	<<
water	38:48	0:0	8	8
water	38:49	0:0	8	)
op	38:51	0:0	8	|
call	39:5	39:37	8	(uint16)
arg	39:14	39:37	9	buffer[*bufferoffset+6]
water	39:14	0:0	10	buffer
op	39:20	0:0	10	[
op	39:21	0:0	10	*
water	39:22	0:0	10	bufferoffset
op	39:34	0:0	10	+
water	39:35	0:0	10	6
op	39:36	0:0	10	]
water	39:39	0:0	8	)
op	39:40	0:0	8	+
water	39:41	0:0	8	v_samp
op	39:47	0:0	8	-
water	39:48	0:0	8	1
water	39:49	0:0	8	)
op	39:50	0:0	8	/
water	40:5	0:0	8	v_samp
water	40:11	0:0	8	)
water	40:12	0:0	8	;
water	41:5	0:0	8	ri
op	41:7	0:0	8	*=
water	41:9	0:0	8	(
water	41:10	0:0	8	(
water	41:11	0:0	8	(
water	41:13	0:0	8	(
call	41:14	41:46	8	(uint16)
arg	41:23	41:46	9	buffer[*bufferoffset+7]
water	41:23	0:0	10	buffer
op	41:29	0:0	10	[
op	41:30	0:0	10	*
water	41:31	0:0	10	bufferoffset
op	41:43	0:0	10	+
water	41:44	0:0	10	7
op	41:45	0:0	10	]
op	41:47	0:0	8	<<
water	41:49	0:0	8	8
water	41:50	0:0	8	)
op	41:52	0:0	8	|
call	42:5	42:37	8	(uint16)
arg	42:14	42:37	9	buffer[*bufferoffset+8]
water	42:14	0:0	10	buffer
op	42:20	0:0	10	[
op	42:21	0:0	10	*
water	42:22	0:0	10	bufferoffset
op	42:34	0:0	10	+
water	42:35	0:0	10	8
op	42:36	0:0	10	]
water	42:39	0:0	8	)
op	42:40	0:0	8	+
water	42:41	0:0	8	h_samp
op	42:47	0:0	8	-
water	42:48	0:0	8	1
water	42:49	0:0	8	)
op	42:50	0:0	8	/
water	43:5	0:0	8	h_samp
water	43:11	0:0	8	)
water	43:12	0:0	8	;
water	44:5	0:0	8	buffer
op	44:11	0:0	8	[
op	44:12	0:0	8	*
water	44:13	0:0	8	bufferoffset
op	44:25	0:0	8	+
water	44:26	0:0	8	5
op	44:27	0:0	8	]
op	44:28	0:0	8	=
call	45:42	45:77	8	(unsignedchar)
arg	45:59	45:77	9	(height>>8)&0xff
water	45:59	0:0	10	(
water	45:60	0:0	10	height
op	45:66	0:0	10	>>
water	45:68	0:0	10	8
water	45:69	0:0	10	)
op	45:71	0:0	10	&
water	45:73	0:0	10	0
water	45:74	0:0	10	xff
water	45:78	0:0	8	;
water	46:5	0:0	8	buffer
op	46:11	0:0	8	[
op	46:12	0:0	8	*
water	46:13	0:0	8	bufferoffset
op	46:25	0:0	8	+
water	46:26	0:0	8	6
op	46:27	0:0	8	]
op	46:28	0:0	8	=
call	47:44	47:74	8	(unsignedchar)
arg	47:61	47:74	9	height&0xff
water	47:61	0:0	10	height
op	47:68	0:0	10	&
water	47:70	0:0	10	0
water	47:71	0:0	10	xff
water	47:75	0:0	8	;
op	48:5	0:0	8	*
water	48:6	0:0	8	bufferoffset
op	48:18	0:0	8	+=
water	48:20	0:0	8	strip
op	48:25	0:0	8	[
water	48:26	0:0	8	i
op	48:27	0:0	8	+
water	48:28	0:0	8	2
op	48:29	0:0	8	]
op	48:30	0:0	8	+
water	48:31	0:0	8	2
water	48:32	0:0	8	;
water	49:5	0:0	8	i
op	49:6	0:0	8	+=
water	49:8	0:0	8	strip
op	49:13	0:0	8	[
water	49:14	0:0	8	i
op	49:15	0:0	8	+
water	49:16	0:0	8	2
op	49:17	0:0	8	]
op	49:18	0:0	8	+
water	49:19	0:0	8	2
water	49:20	0:0	8	;
water	51:5	0:0	8	buffer
op	51:11	0:0	8	[
water	51:12	0:0	8	(
op	51:13	0:0	8	*
water	51:14	0:0	8	bufferoffset
water	51:26	0:0	8	)
op	51:27	0:0	8	++
op	51:29	0:0	8	]
op	51:30	0:0	8	=
water	51:31	0:0	8	0
water	51:32	0:0	8	xff
water	51:35	0:0	8	;
water	52:5	0:0	8	buffer
op	52:11	0:0	8	[
water	52:12	0:0	8	(
op	52:13	0:0	8	*
water	52:14	0:0	8	bufferoffset
water	52:26	0:0	8	)
op	52:27	0:0	8	++
op	52:29	0:0	8	]
op	52:30	0:0	8	=
water	52:31	0:0	8	0
water	52:32	0:0	8	xdd
water	52:35	0:0	8	;
water	53:5	0:0	8	buffer
op	53:11	0:0	8	[
water	53:12	0:0	8	(
op	53:13	0:0	8	*
water	53:14	0:0	8	bufferoffset
water	53:26	0:0	8	)
op	53:27	0:0	8	++
op	53:29	0:0	8	]
op	53:30	0:0	8	=
water	53:31	0:0	8	0
water	53:32	0:0	8	x00
water	53:35	0:0	8	;
water	54:5	0:0	8	buffer
op	54:11	0:0	8	[
water	54:12	0:0	8	(
op	54:13	0:0	8	*
water	54:14	0:0	8	bufferoffset
water	54:26	0:0	8	)
op	54:27	0:0	8	++
op	54:29	0:0	8	]
op	54:30	0:0	8	=
water	54:31	0:0	8	0
water	54:32	0:0	8	x04
water	54:35	0:0	8	;
water	55:5	0:0	8	buffer
op	55:11	0:0	8	[
water	55:12	0:0	8	(
op	55:13	0:0	8	*
water	55:14	0:0	8	bufferoffset
water	55:26	0:0	8	)
op	55:27	0:0	8	++
op	55:29	0:0	8	]
op	55:30	0:0	8	=
water	55:31	0:0	8	(
water	55:32	0:0	8	ri
op	55:35	0:0	8	>>
water	55:38	0:0	8	8
water	55:39	0:0	8	)
op	55:41	0:0	8	&
water	55:43	0:0	8	0
water	55:44	0:0	8	xff
water	55:47	0:0	8	;
water	56:5	0:0	8	buffer
op	56:11	0:0	8	[
water	56:12	0:0	8	(
op	56:13	0:0	8	*
water	56:14	0:0	8	bufferoffset
water	56:26	0:0	8	)
op	56:27	0:0	8	++
op	56:29	0:0	8	]
op	56:30	0:0	8	=
water	56:32	0:0	8	ri
op	56:35	0:0	8	&
water	56:37	0:0	8	0
water	56:38	0:0	8	xff
water	56:41	0:0	8	;
water	57:4	0:0	8	}
else	57:6	59:4	6
stmts	57:11	59:4	7	
water	57:11	0:0	8	{
water	58:5	0:0	8	i
op	58:6	0:0	8	+=
water	58:8	0:0	8	strip
op	58:13	0:0	8	[
water	58:14	0:0	8	i
op	58:15	0:0	8	+
water	58:16	0:0	8	2
op	58:17	0:0	8	]
op	58:18	0:0	8	+
water	58:19	0:0	8	2
water	58:20	0:0	8	;
water	59:4	0:0	8	}
break	60:4	60:9	6	
label	61:3	61:12	6	case 0 xc4 :
label	62:3	62:12	6	case 0 xdb :
call	63:4	63:69	6	_TIFFmemcpy
arg	63:16	63:40	7	&(buffer[*bufferoffset])
op	63:16	0:0	8	&
water	63:17	0:0	8	(
water	63:18	0:0	8	buffer
op	63:24	0:0	8	[
op	63:25	0:0	8	*
water	63:26	0:0	8	bufferoffset
op	63:38	0:0	8	]
water	63:39	0:0	8	)
arg	63:42	63:55	7	&(strip[i-1])
op	63:42	0:0	8	&
water	63:43	0:0	8	(
water	63:44	0:0	8	strip
op	63:49	0:0	8	[
water	63:50	0:0	8	i
op	63:51	0:0	8	-
water	63:52	0:0	8	1
op	63:53	0:0	8	]
water	63:54	0:0	8	)
arg	63:57	63:69	7	strip[i+2]+2
water	63:57	0:0	8	strip
op	63:62	0:0	8	[
water	63:63	0:0	8	i
op	63:64	0:0	8	+
water	63:65	0:0	8	2
op	63:66	0:0	8	]
op	63:67	0:0	8	+
water	63:68	0:0	8	2
water	63:70	0:0	6	;
op	64:4	0:0	6	*
water	64:5	0:0	6	bufferoffset
op	64:17	0:0	6	+=
water	64:19	0:0	6	strip
op	64:24	0:0	6	[
water	64:25	0:0	6	i
op	64:26	0:0	6	+
water	64:27	0:0	6	2
op	64:28	0:0	6	]
op	64:29	0:0	6	+
water	64:30	0:0	6	2
water	64:31	0:0	6	;
water	65:4	0:0	6	i
op	65:5	0:0	6	+=
water	65:7	0:0	6	strip
op	65:12	0:0	6	[
water	65:13	0:0	6	i
op	65:14	0:0	6	+
water	65:15	0:0	6	2
op	65:16	0:0	6	]
op	65:17	0:0	6	+
water	65:18	0:0	6	2
water	65:19	0:0	6	;
break	66:4	66:9	6	
label	67:3	67:12	6	case 0 xda :
if	68:4	72:4	6	(no == 0)
cond	68:7	68:11	7	no == 0
water	68:7	0:0	8	no
op	68:9	0:0	8	==
water	68:11	0:0	8	0
stmts	68:13	72:4	7	
water	68:13	0:0	8	{
call	69:5	69:70	8	_TIFFmemcpy
arg	69:17	69:41	9	&(buffer[*bufferoffset])
op	69:17	0:0	10	&
water	69:18	0:0	10	(
water	69:19	0:0	10	buffer
op	69:25	0:0	10	[
op	69:26	0:0	10	*
water	69:27	0:0	10	bufferoffset
op	69:39	0:0	10	]
water	69:40	0:0	10	)
arg	69:43	69:56	9	&(strip[i-1])
op	69:43	0:0	10	&
water	69:44	0:0	10	(
water	69:45	0:0	10	strip
op	69:50	0:0	10	[
water	69:51	0:0	10	i
op	69:52	0:0	10	-
water	69:53	0:0	10	1
op	69:54	0:0	10	]
water	69:55	0:0	10	)
arg	69:58	69:70	9	strip[i+2]+2
water	69:58	0:0	10	strip
op	69:63	0:0	10	[
water	69:64	0:0	10	i
op	69:65	0:0	10	+
water	69:66	0:0	10	2
op	69:67	0:0	10	]
op	69:68	0:0	10	+
water	69:69	0:0	10	2
water	69:71	0:0	8	;
op	70:5	0:0	8	*
water	70:6	0:0	8	bufferoffset
op	70:18	0:0	8	+=
water	70:20	0:0	8	strip
op	70:25	0:0	8	[
water	70:26	0:0	8	i
op	70:27	0:0	8	+
water	70:28	0:0	8	2
op	70:29	0:0	8	]
op	70:30	0:0	8	+
water	70:31	0:0	8	2
water	70:32	0:0	8	;
water	71:5	0:0	8	i
op	71:6	0:0	8	+=
water	71:8	0:0	8	strip
op	71:13	0:0	8	[
water	71:14	0:0	8	i
op	71:15	0:0	8	+
water	71:16	0:0	8	2
op	71:17	0:0	8	]
op	71:18	0:0	8	+
water	71:19	0:0	8	2
water	71:20	0:0	8	;
water	72:4	0:0	8	}
else	72:6	77:4	6
stmts	72:11	77:4	7	
water	72:11	0:0	8	{
water	73:5	0:0	8	buffer
op	73:11	0:0	8	[
water	73:12	0:0	8	(
op	73:13	0:0	8	*
water	73:14	0:0	8	bufferoffset
water	73:26	0:0	8	)
op	73:27	0:0	8	++
op	73:29	0:0	8	]
op	73:30	0:0	8	=
water	73:31	0:0	8	0
water	73:32	0:0	8	xff
water	73:35	0:0	8	;
water	74:5	0:0	8	buffer
op	74:11	0:0	8	[
water	74:12	0:0	8	(
op	74:13	0:0	8	*
water	74:14	0:0	8	bufferoffset
water	74:26	0:0	8	)
op	74:27	0:0	8	++
op	74:29	0:0	8	]
op	74:30	0:0	8	=
call	75:44	75:77	8	(unsignedchar)
arg	75:60	75:77	9	0xd0|((no-1)%8)
water	75:60	0:0	10	0
water	75:61	0:0	10	xd0
op	75:65	0:0	10	|
water	75:67	0:0	10	(
water	75:68	0:0	10	(
water	75:69	0:0	10	no
op	75:71	0:0	10	-
water	75:72	0:0	10	1
water	75:73	0:0	10	)
op	75:74	0:0	10	%
water	75:75	0:0	10	8
water	75:76	0:0	10	)
water	75:78	0:0	8	;
water	76:5	0:0	8	i
op	76:6	0:0	8	+=
water	76:8	0:0	8	strip
op	76:13	0:0	8	[
water	76:14	0:0	8	i
op	76:15	0:0	8	+
water	76:16	0:0	8	2
op	76:17	0:0	8	]
op	76:18	0:0	8	+
water	76:19	0:0	8	2
water	76:20	0:0	8	;
water	77:4	0:0	8	}
call	78:4	78:75	6	_TIFFmemcpy
arg	78:16	78:40	7	&(buffer[*bufferoffset])
op	78:16	0:0	8	&
water	78:17	0:0	8	(
water	78:18	0:0	8	buffer
op	78:24	0:0	8	[
op	78:25	0:0	8	*
water	78:26	0:0	8	bufferoffset
op	78:38	0:0	8	]
water	78:39	0:0	8	)
arg	78:42	78:55	7	&(strip[i-1])
op	78:42	0:0	8	&
water	78:43	0:0	8	(
water	78:44	0:0	8	strip
op	78:49	0:0	8	[
water	78:50	0:0	8	i
op	78:51	0:0	8	-
water	78:52	0:0	8	1
op	78:53	0:0	8	]
water	78:54	0:0	8	)
arg	78:57	78:75	7	(*striplength)-i-1
water	78:57	0:0	8	(
op	78:58	0:0	8	*
water	78:59	0:0	8	striplength
water	78:70	0:0	8	)
op	78:71	0:0	8	-
water	78:72	0:0	8	i
op	78:73	0:0	8	-
water	78:74	0:0	8	1
water	78:76	0:0	6	;
op	79:4	0:0	6	*
water	79:5	0:0	6	bufferoffset
op	79:17	0:0	6	+=
water	79:19	0:0	6	(
op	79:20	0:0	6	*
water	79:21	0:0	6	striplength
water	79:32	0:0	6	)
op	79:33	0:0	6	-
water	79:34	0:0	6	i
op	79:35	0:0	6	-
water	79:36	0:0	6	1
water	79:37	0:0	6	;
return	80:4	80:13	6	(1)
water	80:10	0:0	7	(
water	80:11	0:0	7	1
water	80:12	0:0	7	)
label	81:3	81:10	6	default :
water	82:4	0:0	6	i
op	82:5	0:0	6	+=
water	82:7	0:0	6	strip
op	82:12	0:0	6	[
water	82:13	0:0	6	i
op	82:14	0:0	6	+
water	82:15	0:0	6	2
op	82:16	0:0	6	]
op	82:17	0:0	6	+
water	82:18	0:0	6	2
water	82:19	0:0	6	;
water	83:2	0:0	6	}
water	84:1	0:0	4	}
return	87:1	87:10	2	(0)
water	87:7	0:0	3	(
water	87:8	0:0	3	0
water	87:9	0:0	3	)

func	1:0	105:0	0	static int	NeXTDecode
params	2:10	0:0	1	
param	2:11	2:20	2	TIFF *	tif
param	2:22	2:32	2	uint8 *	buf
param	2:34	2:46	2	tmsize_t	occ
param	2:48	2:56	2	uint16	s
stmnts	4:1	104:11	1	
water	4:1	0:0	2	static
water	4:8	0:0	2	const
water	4:14	0:0	2	char
water	4:19	0:0	2	module
op	4:25	0:0	2	[
op	4:26	0:0	2	]
op	4:28	0:0	2	=
water	4:30	0:0	2	"NeXTDecode"
water	4:42	0:0	2	;
decl	5:1	5:23	2	unsigned char	*bp
water	5:18	0:0	2	,
decl	5:1	5:23	2	unsigned char	*op
decl	6:1	6:12	2	tmsize_t	cc
decl	7:1	7:11	2	uint8	*row
decl	8:1	8:21	2	tmsize_t	scanline
water	8:18	0:0	2	,
decl	8:1	8:21	2	tmsize_t	n
water	10:1	0:0	2	(
water	10:2	0:0	2	void
water	10:6	0:0	2	)
water	10:8	0:0	2	s
water	10:9	0:0	2	;
for	16:1	17:14	2	(op = ( unsigned char * ) buf , cc = occ ;cc -- > 0;)
forinit	16:6	16:41	3	op = ( unsigned char * ) buf , cc = occ ;
water	16:6	0:0	4	op
op	16:9	0:0	4	=
water	16:11	0:0	4	(
water	16:12	0:0	4	unsigned
water	16:21	0:0	4	char
op	16:25	0:0	4	*
water	16:26	0:0	4	)
water	16:28	0:0	4	buf
water	16:31	0:0	4	,
water	16:33	0:0	4	cc
op	16:36	0:0	4	=
water	16:38	0:0	4	occ
water	16:41	0:0	4	;
cond	16:43	16:50	3	cc -- > 0
water	16:43	0:0	4	cc
op	16:45	0:0	4	--
op	16:48	0:0	4	>
water	16:50	0:0	4	0
forexpr	0:0	0:0	3	
stmts	17:2	17:14	3	
op	17:2	0:0	4	*
water	17:3	0:0	4	op
op	17:5	0:0	4	++
op	17:8	0:0	4	=
water	17:10	0:0	4	0
water	17:11	0:0	4	xff
water	17:14	0:0	4	;
water	19:1	0:0	2	bp
op	19:4	0:0	2	=
water	19:6	0:0	2	(
water	19:7	0:0	2	unsigned
water	19:16	0:0	2	char
op	19:21	0:0	2	*
water	19:22	0:0	2	)
water	19:23	0:0	2	tif
op	19:26	0:0	2	->
water	19:28	0:0	2	tif_rawcp
water	19:37	0:0	2	;
water	20:1	0:0	2	cc
op	20:4	0:0	2	=
water	20:6	0:0	2	tif
op	20:9	0:0	2	->
water	20:11	0:0	2	tif_rawcc
water	20:20	0:0	2	;
water	21:1	0:0	2	scanline
op	21:10	0:0	2	=
water	21:12	0:0	2	tif
op	21:15	0:0	2	->
water	21:17	0:0	2	tif_scanlinesize
water	21:33	0:0	2	;
if	22:1	26:1	2	(occ % scanline)
cond	22:5	22:11	3	occ % scanline
water	22:5	0:0	4	occ
op	22:9	0:0	4	%
water	22:11	0:0	4	scanline
stmts	23:1	26:1	3	
water	23:1	0:0	4	{
call	24:2	24:81	4	TIFFErrorExt
arg	24:15	24:34	5	tif->tif_clientdata
water	24:15	0:0	6	tif
op	24:18	0:0	6	->
water	24:20	0:0	6	tif_clientdata
arg	24:36	24:42	5	module
water	24:36	0:0	6	module
arg	24:44	24:81	5	"Fractional scanlines cannot be read"
water	24:44	0:0	6	"Fractional scanlines cannot be read"
water	24:82	0:0	4	;
return	25:2	25:12	4	(0)
water	25:9	0:0	5	(
water	25:10	0:0	5	0
water	25:11	0:0	5	)
water	26:1	0:0	4	}
for	27:1	97:1	2	(row = buf ;cc > 0 && occ > 0;occ -= scanline , row += scanline)
forinit	27:6	27:15	3	row = buf ;
water	27:6	0:0	4	row
op	27:10	0:0	4	=
water	27:12	0:0	4	buf
water	27:15	0:0	4	;
cond	27:17	27:33	3	cc > 0 && occ > 0
water	27:17	0:0	4	cc
op	27:20	0:0	4	>
water	27:22	0:0	4	0
op	27:24	0:0	4	&&
water	27:27	0:0	4	occ
op	27:31	0:0	4	>
water	27:33	0:0	4	0
forexpr	27:36	27:60	3	occ -= scanline , row += scanline
water	27:36	0:0	4	occ
op	27:40	0:0	4	-=
water	27:43	0:0	4	scanline
water	27:51	0:0	4	,
water	27:53	0:0	4	row
op	27:57	0:0	4	+=
water	27:60	0:0	4	scanline
stmts	27:70	97:1	3	
water	27:70	0:0	4	{
water	28:2	0:0	4	n
op	28:4	0:0	4	=
op	28:6	0:0	4	*
water	28:7	0:0	4	bp
op	28:9	0:0	4	++
water	28:11	0:0	4	;
water	29:2	0:0	4	cc
op	29:4	0:0	4	--
water	29:6	0:0	4	;
switch	30:2	96:2	4	(n)
cond	30:10	30:10	5	n
water	30:10	0:0	6	n
stmts	30:13	96:2	5	
water	30:13	0:0	6	{
label	31:2	31:17	6	case LITERALROW :
if	35:3	36:12	6	(cc < scanline)
cond	35:7	35:12	7	cc < scanline
water	35:7	0:0	8	cc
op	35:10	0:0	8	<
water	35:12	0:0	8	scanline
stmts	36:4	36:12	7	
goto	36:4	36:12	8	bad
water	36:9	0:0	9	bad
call	37:3	37:32	6	_TIFFmemcpy
arg	37:15	37:18	7	row
water	37:15	0:0	8	row
arg	37:20	37:22	7	bp
water	37:20	0:0	8	bp
arg	37:24	37:32	7	scanline
water	37:24	0:0	8	scanline
water	37:33	0:0	6	;
water	38:3	0:0	6	bp
op	38:6	0:0	6	+=
water	38:9	0:0	6	scanline
water	38:17	0:0	6	;
water	39:3	0:0	6	cc
op	39:6	0:0	6	-=
water	39:9	0:0	6	scanline
water	39:17	0:0	6	;
break	40:3	40:8	6	
label	41:2	41:18	6	case LITERALSPAN :
water	41:20	0:0	6	{
decl	42:3	42:15	6	tmsize_t	off
if	47:3	48:12	6	(cc < 4)
cond	47:7	47:12	7	cc < 4
water	47:7	0:0	8	cc
op	47:10	0:0	8	<
water	47:12	0:0	8	4
stmts	48:4	48:12	7	
goto	48:4	48:12	8	bad
water	48:9	0:0	9	bad
water	49:3	0:0	6	off
op	49:7	0:0	6	=
water	49:9	0:0	6	(
water	49:10	0:0	6	bp
op	49:12	0:0	6	[
water	49:13	0:0	6	0
op	49:14	0:0	6	]
op	49:16	0:0	6	*
water	49:18	0:0	6	256
water	49:21	0:0	6	)
op	49:23	0:0	6	+
water	49:25	0:0	6	bp
op	49:27	0:0	6	[
water	49:28	0:0	6	1
op	49:29	0:0	6	]
water	49:30	0:0	6	;
water	50:3	0:0	6	n
op	50:5	0:0	6	=
water	50:7	0:0	6	(
water	50:8	0:0	6	bp
op	50:10	0:0	6	[
water	50:11	0:0	6	2
op	50:12	0:0	6	]
op	50:14	0:0	6	*
water	50:16	0:0	6	256
water	50:19	0:0	6	)
op	50:21	0:0	6	+
water	50:23	0:0	6	bp
op	50:25	0:0	6	[
water	50:26	0:0	6	3
op	50:27	0:0	6	]
water	50:28	0:0	6	;
if	51:3	52:12	6	(cc < 4 + n || off + n > scanline)
cond	51:7	51:27	7	cc < 4 + n || off + n > scanline
water	51:7	0:0	8	cc
op	51:10	0:0	8	<
water	51:12	0:0	8	4
op	51:13	0:0	8	+
water	51:14	0:0	8	n
op	51:16	0:0	8	||
water	51:19	0:0	8	off
op	51:22	0:0	8	+
water	51:23	0:0	8	n
op	51:25	0:0	8	>
water	51:27	0:0	8	scanline
stmts	52:4	52:12	7	
goto	52:4	52:12	8	bad
water	52:9	0:0	9	bad
call	53:3	53:31	6	_TIFFmemcpy
arg	53:15	53:22	7	row+off
water	53:15	0:0	8	row
op	53:18	0:0	8	+
water	53:19	0:0	8	off
arg	53:24	53:28	7	bp+4
water	53:24	0:0	8	bp
op	53:26	0:0	8	+
water	53:27	0:0	8	4
arg	53:30	53:31	7	n
water	53:30	0:0	8	n
water	53:32	0:0	6	;
water	54:3	0:0	6	bp
op	54:6	0:0	6	+=
water	54:9	0:0	6	4
op	54:10	0:0	6	+
water	54:11	0:0	6	n
water	54:12	0:0	6	;
water	55:3	0:0	6	cc
op	55:6	0:0	6	-=
water	55:9	0:0	6	4
op	55:10	0:0	6	+
water	55:11	0:0	6	n
water	55:12	0:0	6	;
break	56:3	56:8	6	
water	57:2	0:0	6	}
label	58:2	58:9	6	default :
water	58:11	0:0	6	{
decl	59:3	59:27	6	uint32	npixels
op	59:18	0:0	6	=
water	59:20	0:0	6	0
water	59:21	0:0	6	,
decl	59:3	59:27	6	uint32	grey
decl	60:3	60:25	6	tmsize_t	op_offset
op	60:22	0:0	6	=
water	60:24	0:0	6	0
decl	61:3	61:49	6	uint32	imagewidth
op	61:21	0:0	6	=
water	61:23	0:0	6	tif
op	61:26	0:0	6	->
water	61:28	0:0	6	tif_dir
op	61:35	0:0	6	.
water	61:36	0:0	6	td_imagewidth
if	62:12	63:54	6	(isTiled (tif ))
cond	62:16	62:27	7	isTiled (tif )
call	62:16	62:27	8	isTiled
arg	62:24	62:27	9	tif
water	62:24	0:0	10	tif
stmts	63:16	63:54	7	
water	63:16	0:0	8	imagewidth
op	63:27	0:0	8	=
water	63:29	0:0	8	tif
op	63:32	0:0	8	->
water	63:34	0:0	8	tif_dir
op	63:41	0:0	8	.
water	63:42	0:0	8	td_tilewidth
water	63:54	0:0	8	;
water	71:3	0:0	6	op
op	71:6	0:0	6	=
water	71:8	0:0	6	row
water	71:11	0:0	6	;
for	72:3	93:3	6	(;;)
forinit	72:8	72:8	7	;
water	72:8	0:0	8	;
cond	0:0	0:0	7	
forexpr	0:0	0:0	7	
stmts	72:12	93:3	7	
water	72:12	0:0	8	{
water	73:4	0:0	8	grey
op	73:9	0:0	8	=
call	73:11	73:32	8	(uint32)
arg	73:20	73:32	9	(n>>6)&0x3
water	73:20	0:0	10	(
water	73:21	0:0	10	n
op	73:22	0:0	10	>>
water	73:24	0:0	10	6
water	73:25	0:0	10	)
op	73:27	0:0	10	&
water	73:29	0:0	10	0
water	73:30	0:0	10	x3
water	73:33	0:0	8	;
water	74:4	0:0	8	n
op	74:6	0:0	8	&=
water	74:9	0:0	8	0
water	74:10	0:0	8	x3f
water	74:13	0:0	8	;
while	80:4	81:23	8	(n -- > 0 && npixels < imagewidth && op_offset < scanline)
cond	80:11	80:58	9	n -- > 0 && npixels < imagewidth && op_offset < scanline
water	80:11	0:0	10	n
op	80:12	0:0	10	--
op	80:15	0:0	10	>
water	80:17	0:0	10	0
op	80:19	0:0	10	&&
water	80:22	0:0	10	npixels
op	80:30	0:0	10	<
water	80:32	0:0	10	imagewidth
op	80:43	0:0	10	&&
water	80:46	0:0	10	op_offset
op	80:56	0:0	10	<
water	80:58	0:0	10	scanline
stmts	81:5	81:23	9	
call	81:5	81:22	10	SETPIXEL
arg	81:14	81:16	11	op
water	81:14	0:0	12	op
arg	81:18	81:22	11	grey
water	81:18	0:0	12	grey
water	81:23	0:0	10	;
if	82:4	83:10	8	(npixels >= imagewidth)
cond	82:8	82:19	9	npixels >= imagewidth
water	82:8	0:0	10	npixels
op	82:16	0:0	10	>=
water	82:19	0:0	10	imagewidth
stmts	83:5	83:10	9	
break	83:5	83:10	10	
if	84:16	88:16	8	(op_offset >= scanline)
cond	84:20	84:33	9	op_offset >= scanline
water	84:20	0:0	10	op_offset
op	84:30	0:0	10	>=
water	84:33	0:0	10	scanline
stmts	84:44	88:16	9	
water	84:44	0:0	10	{
call	85:20	86:43	10	TIFFErrorExt
arg	85:33	85:52	11	tif->tif_clientdata
water	85:33	0:0	12	tif
op	85:36	0:0	12	->
water	85:38	0:0	12	tif_clientdata
arg	85:54	85:60	11	module
water	85:54	0:0	12	module
arg	85:62	85:93	11	"Invalid data for scanline %ld"
water	85:62	0:0	12	"Invalid data for scanline %ld"
arg	86:24	86:43	11	(long)tif->tif_row
water	86:24	0:0	12	(
water	86:25	0:0	12	long
water	86:29	0:0	12	)
water	86:31	0:0	12	tif
op	86:34	0:0	12	->
water	86:36	0:0	12	tif_row
water	86:44	0:0	10	;
return	87:20	87:30	10	(0)
water	87:27	0:0	11	(
water	87:28	0:0	11	0
water	87:29	0:0	11	)
water	88:16	0:0	10	}
if	89:4	90:13	8	(cc == 0)
cond	89:8	89:14	9	cc == 0
water	89:8	0:0	10	cc
op	89:11	0:0	10	==
water	89:14	0:0	10	0
stmts	90:5	90:13	9	
goto	90:5	90:13	10	bad
water	90:10	0:0	11	bad
water	91:4	0:0	8	n
op	91:6	0:0	8	=
op	91:8	0:0	8	*
water	91:9	0:0	8	bp
op	91:11	0:0	8	++
water	91:13	0:0	8	;
water	92:4	0:0	8	cc
op	92:6	0:0	8	--
water	92:8	0:0	8	;
water	93:3	0:0	8	}
break	94:3	94:8	6	
water	95:2	0:0	6	}
water	96:2	0:0	6	}
water	97:1	0:0	4	}
water	98:1	0:0	2	tif
op	98:4	0:0	2	->
water	98:6	0:0	2	tif_rawcp
op	98:16	0:0	2	=
water	98:18	0:0	2	(
water	98:19	0:0	2	uint8
op	98:24	0:0	2	*
water	98:25	0:0	2	)
water	98:27	0:0	2	bp
water	98:29	0:0	2	;
water	99:1	0:0	2	tif
op	99:4	0:0	2	->
water	99:6	0:0	2	tif_rawcc
op	99:16	0:0	2	=
water	99:18	0:0	2	cc
water	99:20	0:0	2	;
return	100:1	100:11	2	(1)
water	100:8	0:0	3	(
water	100:9	0:0	3	1
water	100:10	0:0	3	)
label	101:0	101:3	2	bad :
call	102:1	103:24	2	TIFFErrorExt
arg	102:14	102:33	3	tif->tif_clientdata
water	102:14	0:0	4	tif
op	102:17	0:0	4	->
water	102:19	0:0	4	tif_clientdata
arg	102:35	102:41	3	module
water	102:35	0:0	4	module
arg	102:43	102:77	3	"Not enough data for scanline %ld"
water	102:43	0:0	4	"Not enough data for scanline %ld"
arg	103:5	103:24	3	(long)tif->tif_row
water	103:5	0:0	4	(
water	103:6	0:0	4	long
water	103:10	0:0	4	)
water	103:12	0:0	4	tif
op	103:15	0:0	4	->
water	103:17	0:0	4	tif_row
water	103:25	0:0	2	;
return	104:1	104:11	2	(0)
water	104:8	0:0	3	(
water	104:9	0:0	3	0
water	104:10	0:0	3	)

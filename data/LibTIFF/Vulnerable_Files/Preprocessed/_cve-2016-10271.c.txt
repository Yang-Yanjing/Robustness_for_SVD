func	2:0	89:0	0	void	_TIFFFax3fillruns
params	3:17	0:0	1	
param	3:18	3:36	2	unsigned char *	buf
param	3:38	3:50	2	uint32 *	runs
param	3:52	3:64	2	uint32 *	erun
param	3:66	3:78	2	uint32	lastx
stmnts	5:1	88:19	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	unsigned
water	5:23	0:0	2	char
water	5:28	0:0	2	_fillmasks
op	5:38	0:0	2	[
op	5:39	0:0	2	]
op	5:41	0:0	2	=
water	6:5	0:0	2	{
water	6:7	0:0	2	0
water	6:8	0:0	2	x00
water	6:11	0:0	2	,
water	6:13	0:0	2	0
water	6:14	0:0	2	x80
water	6:17	0:0	2	,
water	6:19	0:0	2	0
water	6:20	0:0	2	xc0
water	6:23	0:0	2	,
water	6:25	0:0	2	0
water	6:26	0:0	2	xe0
water	6:29	0:0	2	,
water	6:31	0:0	2	0
water	6:32	0:0	2	xf0
water	6:35	0:0	2	,
water	6:37	0:0	2	0
water	6:38	0:0	2	xf8
water	6:41	0:0	2	,
water	6:43	0:0	2	0
water	6:44	0:0	2	xfc
water	6:47	0:0	2	,
water	6:49	0:0	2	0
water	6:50	0:0	2	xfe
water	6:53	0:0	2	,
water	6:55	0:0	2	0
water	6:56	0:0	2	xff
water	6:60	0:0	2	}
water	6:61	0:0	2	;
decl	7:1	7:18	2	unsigned char	*cp
decl	8:1	8:18	2	uint32	x
water	8:9	0:0	2	,
decl	8:1	8:18	2	uint32	bx
water	8:13	0:0	2	,
decl	8:1	8:18	2	uint32	run
decl	9:1	9:12	2	int32	n
water	9:8	0:0	2	,
decl	9:1	9:12	2	int32	nw
decl	10:1	10:9	2	long	*lp
if	12:1	13:16	2	(( erun - runs ) & 1)
cond	12:5	12:17	3	( erun - runs ) & 1
water	12:5	0:0	4	(
water	12:6	0:0	4	erun
op	12:10	0:0	4	-
water	12:11	0:0	4	runs
water	12:15	0:0	4	)
op	12:16	0:0	4	&
water	12:17	0:0	4	1
stmts	13:5	13:16	3	
op	13:5	0:0	4	*
water	13:6	0:0	4	erun
op	13:10	0:0	4	++
op	13:13	0:0	4	=
water	13:15	0:0	4	0
water	13:16	0:0	4	;
water	14:1	0:0	2	x
op	14:3	0:0	2	=
water	14:5	0:0	2	0
water	14:6	0:0	2	;
for	15:1	87:1	2	(;runs < erun;runs += 2)
forinit	15:6	15:6	3	;
water	15:6	0:0	4	;
cond	15:8	15:15	3	runs < erun
water	15:8	0:0	4	runs
op	15:13	0:0	4	<
water	15:15	0:0	4	erun
forexpr	15:21	15:29	3	runs += 2
water	15:21	0:0	4	runs
op	15:26	0:0	4	+=
water	15:29	0:0	4	2
stmts	15:32	87:1	3	
water	15:32	0:0	4	{
water	16:5	0:0	4	run
op	16:9	0:0	4	=
water	16:11	0:0	4	runs
op	16:15	0:0	4	[
water	16:16	0:0	4	0
op	16:17	0:0	4	]
water	16:18	0:0	4	;
if	17:5	18:38	4	(x + run > lastx || run > lastx)
cond	17:9	17:32	5	x + run > lastx || run > lastx
water	17:9	0:0	6	x
op	17:10	0:0	6	+
water	17:11	0:0	6	run
op	17:15	0:0	6	>
water	17:17	0:0	6	lastx
op	17:23	0:0	6	||
water	17:26	0:0	6	run
op	17:30	0:0	6	>
water	17:32	0:0	6	lastx
stmts	18:2	18:38	5	
water	18:2	0:0	6	run
op	18:6	0:0	6	=
water	18:8	0:0	6	runs
op	18:12	0:0	6	[
water	18:13	0:0	6	0
op	18:14	0:0	6	]
op	18:16	0:0	6	=
call	18:18	18:37	6	(uint32)
arg	18:28	18:37	7	lastx-x
water	18:28	0:0	8	lastx
op	18:34	0:0	8	-
water	18:36	0:0	8	x
water	18:38	0:0	6	;
if	19:5	50:5	4	(run)
cond	19:9	19:9	5	run
water	19:9	0:0	6	run
stmts	19:14	50:5	5	
water	19:14	0:0	6	{
water	20:2	0:0	6	cp
op	20:5	0:0	6	=
water	20:7	0:0	6	buf
op	20:11	0:0	6	+
water	20:13	0:0	6	(
water	20:14	0:0	6	x
op	20:15	0:0	6	>>
water	20:17	0:0	6	3
water	20:18	0:0	6	)
water	20:19	0:0	6	;
water	21:2	0:0	6	bx
op	21:5	0:0	6	=
water	21:7	0:0	6	x
op	21:8	0:0	6	&
water	21:9	0:0	6	7
water	21:10	0:0	6	;
if	22:2	47:2	6	(run > 8 - bx)
cond	22:6	22:14	7	run > 8 - bx
water	22:6	0:0	8	run
op	22:10	0:0	8	>
water	22:12	0:0	8	8
op	22:13	0:0	8	-
water	22:14	0:0	8	bx
stmts	22:18	47:2	7	
water	22:18	0:0	8	{
if	23:6	26:6	8	(bx)
cond	23:10	23:10	9	bx
water	23:10	0:0	10	bx
stmts	23:14	26:6	9	
water	23:14	0:0	10	{
op	24:3	0:0	10	*
water	24:4	0:0	10	cp
op	24:6	0:0	10	++
op	24:9	0:0	10	&=
water	24:12	0:0	10	0
water	24:13	0:0	10	xff
op	24:17	0:0	10	<<
water	24:20	0:0	10	(
water	24:21	0:0	10	8
op	24:22	0:0	10	-
water	24:23	0:0	10	bx
water	24:25	0:0	10	)
water	24:26	0:0	10	;
water	25:3	0:0	10	run
op	25:7	0:0	10	-=
water	25:10	0:0	10	8
op	25:11	0:0	10	-
water	25:12	0:0	10	bx
water	25:14	0:0	10	;
water	26:6	0:0	10	}
if	27:6	44:6	8	(( n = run >> 3 ) != 0)
cond	27:10	27:28	9	( n = run >> 3 ) != 0
water	27:10	0:0	10	(
water	27:11	0:0	10	n
op	27:13	0:0	10	=
water	27:15	0:0	10	run
op	27:19	0:0	10	>>
water	27:22	0:0	10	3
water	27:23	0:0	10	)
op	27:25	0:0	10	!=
water	27:28	0:0	10	0
stmts	27:32	44:6	9	
water	27:32	0:0	10	{
if	28:3	41:3	10	(( n / sizeof ( long ) ) > 1)
cond	28:7	28:27	11	( n / sizeof ( long ) ) > 1
water	28:7	0:0	12	(
water	28:8	0:0	12	n
op	28:9	0:0	12	/
op	28:10	0:0	12	sizeof
water	28:17	0:0	12	(
water	28:18	0:0	12	long
water	28:22	0:0	12	)
water	28:23	0:0	12	)
op	28:25	0:0	12	>
water	28:27	0:0	12	1
stmts	28:30	41:3	11	
water	28:30	0:0	12	{
for	32:7	33:20	12	(;n && !isAligned (cp ,long );n --)
forinit	32:12	32:12	13	;
water	32:12	0:0	14	;
cond	32:14	32:38	13	n && !isAligned (cp ,long )
water	32:14	0:0	14	n
op	32:16	0:0	14	&&
op	32:19	0:0	14	!
call	32:20	32:38	14	isAligned
arg	32:30	32:32	15	cp
water	32:30	0:0	16	cp
arg	32:34	32:38	15	long
water	32:34	0:0	16	long
forexpr	32:41	32:42	13	n --
water	32:41	0:0	14	n
op	32:42	0:0	14	--
stmts	33:8	33:20	13	
op	33:8	0:0	14	*
water	33:9	0:0	14	cp
op	33:11	0:0	14	++
op	33:14	0:0	14	=
water	33:16	0:0	14	0
water	33:17	0:0	14	x00
water	33:20	0:0	14	;
water	34:7	0:0	12	lp
op	34:10	0:0	12	=
water	34:12	0:0	12	(
water	34:13	0:0	12	long
op	34:17	0:0	12	*
water	34:18	0:0	12	)
water	34:20	0:0	12	cp
water	34:22	0:0	12	;
water	35:7	0:0	12	nw
op	35:10	0:0	12	=
call	35:12	35:37	12	(int32)
arg	35:20	35:37	13	n/sizeof(long)
water	35:20	0:0	14	n
op	35:22	0:0	14	/
op	35:24	0:0	14	sizeof
water	35:31	0:0	14	(
water	35:32	0:0	14	long
water	35:36	0:0	14	)
water	35:38	0:0	12	;
water	36:7	0:0	12	n
op	36:9	0:0	12	-=
water	36:12	0:0	12	nw
op	36:15	0:0	12	*
op	36:17	0:0	12	sizeof
water	36:24	0:0	12	(
water	36:25	0:0	12	long
water	36:29	0:0	12	)
water	36:30	0:0	12	;
do	37:7	39:7	12	(-- nw)
cond	39:16	39:18	13	-- nw
op	39:16	0:0	14	--
water	39:18	0:0	14	nw
stmts	37:10	39:7	13	
water	37:10	0:0	14	{
op	38:8	0:0	14	*
water	38:9	0:0	14	lp
op	38:11	0:0	14	++
op	38:14	0:0	14	=
water	38:16	0:0	14	0
water	38:17	0:0	14	L
water	38:18	0:0	14	;
water	39:7	0:0	14	}
water	39:21	0:0	12	;
water	40:7	0:0	12	cp
op	40:10	0:0	12	=
water	40:12	0:0	12	(
water	40:13	0:0	12	unsigned
water	40:22	0:0	12	char
op	40:26	0:0	12	*
water	40:27	0:0	12	)
water	40:29	0:0	12	lp
water	40:31	0:0	12	;
water	41:3	0:0	12	}
call	42:3	42:13	10	ZERO
arg	42:8	42:9	11	n
water	42:8	0:0	12	n
arg	42:11	42:13	11	cp
water	42:11	0:0	12	cp
water	42:14	0:0	10	;
water	43:3	0:0	10	run
op	43:7	0:0	10	&=
water	43:10	0:0	10	7
water	43:11	0:0	10	;
water	44:6	0:0	10	}
if	45:6	46:23	8	(run)
cond	45:10	45:10	9	run
water	45:10	0:0	10	run
stmts	46:3	46:23	9	
water	46:3	0:0	10	cp
op	46:5	0:0	10	[
water	46:6	0:0	10	0
op	46:7	0:0	10	]
op	46:9	0:0	10	&=
water	46:12	0:0	10	0
water	46:13	0:0	10	xff
op	46:17	0:0	10	>>
water	46:20	0:0	10	run
water	46:23	0:0	10	;
water	47:2	0:0	8	}
else	47:4	48:37	6
stmts	48:6	48:37	7	
water	48:6	0:0	8	cp
op	48:8	0:0	8	[
water	48:9	0:0	8	0
op	48:10	0:0	8	]
op	48:12	0:0	8	&=
op	48:15	0:0	8	~
water	48:16	0:0	8	(
water	48:17	0:0	8	_fillmasks
op	48:27	0:0	8	[
water	48:28	0:0	8	run
op	48:31	0:0	8	]
op	48:32	0:0	8	>>
water	48:34	0:0	8	bx
water	48:36	0:0	8	)
water	48:37	0:0	8	;
water	49:2	0:0	6	x
op	49:4	0:0	6	+=
water	49:7	0:0	6	runs
op	49:11	0:0	6	[
water	49:12	0:0	6	0
op	49:13	0:0	6	]
water	49:14	0:0	6	;
water	50:5	0:0	6	}
water	51:5	0:0	4	run
op	51:9	0:0	4	=
water	51:11	0:0	4	runs
op	51:15	0:0	4	[
water	51:16	0:0	4	1
op	51:17	0:0	4	]
water	51:18	0:0	4	;
if	52:5	53:27	4	(x + run > lastx || run > lastx)
cond	52:9	52:32	5	x + run > lastx || run > lastx
water	52:9	0:0	6	x
op	52:10	0:0	6	+
water	52:11	0:0	6	run
op	52:15	0:0	6	>
water	52:17	0:0	6	lastx
op	52:23	0:0	6	||
water	52:26	0:0	6	run
op	52:30	0:0	6	>
water	52:32	0:0	6	lastx
stmts	53:2	53:27	5	
water	53:2	0:0	6	run
op	53:6	0:0	6	=
water	53:8	0:0	6	runs
op	53:12	0:0	6	[
water	53:13	0:0	6	1
op	53:14	0:0	6	]
op	53:16	0:0	6	=
water	53:18	0:0	6	lastx
op	53:24	0:0	6	-
water	53:26	0:0	6	x
water	53:27	0:0	6	;
if	54:5	86:5	4	(run)
cond	54:9	54:9	5	run
water	54:9	0:0	6	run
stmts	54:14	86:5	5	
water	54:14	0:0	6	{
water	55:2	0:0	6	cp
op	55:5	0:0	6	=
water	55:7	0:0	6	buf
op	55:11	0:0	6	+
water	55:13	0:0	6	(
water	55:14	0:0	6	x
op	55:15	0:0	6	>>
water	55:17	0:0	6	3
water	55:18	0:0	6	)
water	55:19	0:0	6	;
water	56:2	0:0	6	bx
op	56:5	0:0	6	=
water	56:7	0:0	6	x
op	56:8	0:0	6	&
water	56:9	0:0	6	7
water	56:10	0:0	6	;
if	57:2	83:2	6	(run > 8 - bx)
cond	57:6	57:14	7	run > 8 - bx
water	57:6	0:0	8	run
op	57:10	0:0	8	>
water	57:12	0:0	8	8
op	57:13	0:0	8	-
water	57:14	0:0	8	bx
stmts	57:18	83:2	7	
water	57:18	0:0	8	{
if	58:6	61:6	8	(bx)
cond	58:10	58:10	9	bx
water	58:10	0:0	10	bx
stmts	58:14	61:6	9	
water	58:14	0:0	10	{
op	59:3	0:0	10	*
water	59:4	0:0	10	cp
op	59:6	0:0	10	++
op	59:9	0:0	10	|=
water	59:12	0:0	10	0
water	59:13	0:0	10	xff
op	59:17	0:0	10	>>
water	59:20	0:0	10	bx
water	59:22	0:0	10	;
water	60:3	0:0	10	run
op	60:7	0:0	10	-=
water	60:10	0:0	10	8
op	60:11	0:0	10	-
water	60:12	0:0	10	bx
water	60:14	0:0	10	;
water	61:6	0:0	10	}
if	62:6	79:6	8	(( n = run >> 3 ) != 0)
cond	62:10	62:26	9	( n = run >> 3 ) != 0
water	62:10	0:0	10	(
water	62:11	0:0	10	n
op	62:13	0:0	10	=
water	62:15	0:0	10	run
op	62:18	0:0	10	>>
water	62:20	0:0	10	3
water	62:21	0:0	10	)
op	62:23	0:0	10	!=
water	62:26	0:0	10	0
stmts	62:30	79:6	9	
water	62:30	0:0	10	{
if	63:3	76:3	10	(( n / sizeof ( long ) ) > 1)
cond	63:7	63:27	11	( n / sizeof ( long ) ) > 1
water	63:7	0:0	12	(
water	63:8	0:0	12	n
op	63:9	0:0	12	/
op	63:10	0:0	12	sizeof
water	63:17	0:0	12	(
water	63:18	0:0	12	long
water	63:22	0:0	12	)
water	63:23	0:0	12	)
op	63:25	0:0	12	>
water	63:27	0:0	12	1
stmts	63:30	76:3	11	
water	63:30	0:0	12	{
for	67:7	68:16	12	(;n && !isAligned (cp ,long );n --)
forinit	67:12	67:12	13	;
water	67:12	0:0	14	;
cond	67:14	67:38	13	n && !isAligned (cp ,long )
water	67:14	0:0	14	n
op	67:16	0:0	14	&&
op	67:19	0:0	14	!
call	67:20	67:38	14	isAligned
arg	67:30	67:32	15	cp
water	67:30	0:0	16	cp
arg	67:34	67:38	15	long
water	67:34	0:0	16	long
forexpr	67:41	67:42	13	n --
water	67:41	0:0	14	n
op	67:42	0:0	14	--
stmts	68:4	68:16	13	
op	68:4	0:0	14	*
water	68:5	0:0	14	cp
op	68:7	0:0	14	++
op	68:10	0:0	14	=
water	68:12	0:0	14	0
water	68:13	0:0	14	xff
water	68:16	0:0	14	;
water	69:7	0:0	12	lp
op	69:10	0:0	12	=
water	69:12	0:0	12	(
water	69:13	0:0	12	long
op	69:17	0:0	12	*
water	69:18	0:0	12	)
water	69:20	0:0	12	cp
water	69:22	0:0	12	;
water	70:7	0:0	12	nw
op	70:10	0:0	12	=
call	70:12	70:37	12	(int32)
arg	70:20	70:37	13	n/sizeof(long)
water	70:20	0:0	14	n
op	70:22	0:0	14	/
op	70:24	0:0	14	sizeof
water	70:31	0:0	14	(
water	70:32	0:0	14	long
water	70:36	0:0	14	)
water	70:38	0:0	12	;
water	71:7	0:0	12	n
op	71:9	0:0	12	-=
water	71:12	0:0	12	nw
op	71:15	0:0	12	*
op	71:17	0:0	12	sizeof
water	71:24	0:0	12	(
water	71:25	0:0	12	long
water	71:29	0:0	12	)
water	71:30	0:0	12	;
do	72:7	74:7	12	(-- nw)
cond	74:16	74:18	13	-- nw
op	74:16	0:0	14	--
water	74:18	0:0	14	nw
stmts	72:10	74:7	13	
water	72:10	0:0	14	{
op	73:4	0:0	14	*
water	73:5	0:0	14	lp
op	73:7	0:0	14	++
op	73:10	0:0	14	=
op	73:12	0:0	14	-
water	73:13	0:0	14	1
water	73:14	0:0	14	L
water	73:15	0:0	14	;
water	74:7	0:0	14	}
water	74:21	0:0	12	;
water	75:7	0:0	12	cp
op	75:10	0:0	12	=
water	75:12	0:0	12	(
water	75:13	0:0	12	unsigned
water	75:22	0:0	12	char
op	75:26	0:0	12	*
water	75:27	0:0	12	)
water	75:29	0:0	12	lp
water	75:31	0:0	12	;
water	76:3	0:0	12	}
call	77:3	77:13	10	FILL
arg	77:8	77:9	11	n
water	77:8	0:0	12	n
arg	77:11	77:13	11	cp
water	77:11	0:0	12	cp
water	77:14	0:0	10	;
water	78:3	0:0	10	run
op	78:7	0:0	10	&=
water	78:10	0:0	10	7
water	78:11	0:0	10	;
water	79:6	0:0	10	}
if	81:6	82:58	8	(run)
cond	81:10	81:10	9	run
water	81:10	0:0	10	run
stmts	82:3	82:58	9	
water	82:3	0:0	10	cp
op	82:5	0:0	10	[
water	82:6	0:0	10	0
op	82:7	0:0	10	]
op	82:9	0:0	10	=
call	82:11	82:57	10	(unsignedchar)
arg	82:27	82:57	11	(cp[0]|(0xff00>>run))&0xff
water	82:27	0:0	12	(
water	82:28	0:0	12	cp
op	82:30	0:0	12	[
water	82:31	0:0	12	0
op	82:32	0:0	12	]
op	82:34	0:0	12	|
water	82:36	0:0	12	(
water	82:37	0:0	12	0
water	82:38	0:0	12	xff00
op	82:44	0:0	12	>>
water	82:47	0:0	12	run
water	82:50	0:0	12	)
water	82:51	0:0	12	)
op	82:52	0:0	12	&
water	82:53	0:0	12	0
water	82:54	0:0	12	xff
water	82:58	0:0	10	;
water	83:2	0:0	8	}
else	83:4	84:34	6
stmts	84:6	84:34	7	
water	84:6	0:0	8	cp
op	84:8	0:0	8	[
water	84:9	0:0	8	0
op	84:10	0:0	8	]
op	84:12	0:0	8	|=
water	84:15	0:0	8	_fillmasks
op	84:25	0:0	8	[
water	84:26	0:0	8	run
op	84:29	0:0	8	]
op	84:30	0:0	8	>>
water	84:32	0:0	8	bx
water	84:34	0:0	8	;
water	85:2	0:0	6	x
op	85:4	0:0	6	+=
water	85:7	0:0	6	runs
op	85:11	0:0	6	[
water	85:12	0:0	6	1
op	85:13	0:0	6	]
water	85:14	0:0	6	;
water	86:5	0:0	6	}
water	87:1	0:0	4	}
call	88:1	88:18	2	assert
arg	88:8	88:18	3	x==lastx
water	88:8	0:0	4	x
op	88:10	0:0	4	==
water	88:13	0:0	4	lastx
water	88:19	0:0	2	;

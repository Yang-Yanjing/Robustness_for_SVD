func	1:0	78:0	0	static int	TIFFFetchAnyArray
params	2:17	0:0	1	
param	2:18	2:27	2	TIFF *	tif
param	2:29	2:46	2	TIFFDirEntry *	dir
param	2:48	2:57	2	double *	v
stmnts	0:0	77:11	1	
decl	4:1	4:6	2	int	i
switch	6:1	76:1	2	(dir -> tdir_type)
cond	6:9	6:14	3	dir -> tdir_type
water	6:9	0:0	4	dir
op	6:12	0:0	4	->
water	6:14	0:0	4	tdir_type
stmts	6:25	76:1	3	
water	6:25	0:0	4	{
label	7:1	7:15	4	case TIFF_BYTE :
label	8:1	8:16	4	case TIFF_SBYTE :
if	9:2	10:13	4	(!TIFFFetchByteArray (tif ,dir ,( uint8 * ) v ))
cond	9:6	9:46	5	!TIFFFetchByteArray (tif ,dir ,( uint8 * ) v )
op	9:6	0:0	6	!
call	9:7	9:46	6	TIFFFetchByteArray
arg	9:26	9:29	7	tif
water	9:26	0:0	8	tif
arg	9:31	9:34	7	dir
water	9:31	0:0	8	dir
arg	9:36	9:46	7	(uint8*)v
water	9:36	0:0	8	(
water	9:37	0:0	8	uint8
op	9:42	0:0	8	*
water	9:43	0:0	8	)
water	9:45	0:0	8	v
stmts	10:3	10:13	5	
return	10:3	10:13	6	(0)
water	10:10	0:0	7	(
water	10:11	0:0	7	0
water	10:12	0:0	7	)
if	11:2	15:2	4	(dir -> tdir_type == TIFF_BYTE)
cond	11:6	11:24	5	dir -> tdir_type == TIFF_BYTE
water	11:6	0:0	6	dir
op	11:9	0:0	6	->
water	11:11	0:0	6	tdir_type
op	11:21	0:0	6	==
water	11:24	0:0	6	TIFF_BYTE
stmts	11:35	15:2	5	
water	11:35	0:0	6	{
decl	12:3	12:25	6	uint8	*vp
op	12:13	0:0	6	=
water	12:15	0:0	6	(
water	12:16	0:0	6	uint8
op	12:21	0:0	6	*
water	12:22	0:0	6	)
water	12:24	0:0	6	v
for	13:3	14:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	13:8	13:29	7	i = dir -> tdir_count - 1 ;
water	13:8	0:0	8	i
op	13:10	0:0	8	=
water	13:12	0:0	8	dir
op	13:15	0:0	8	->
water	13:17	0:0	8	tdir_count
op	13:27	0:0	8	-
water	13:28	0:0	8	1
water	13:29	0:0	8	;
cond	13:31	13:36	7	i >= 0
water	13:31	0:0	8	i
op	13:33	0:0	8	>=
water	13:36	0:0	8	0
forexpr	13:39	13:40	7	i --
water	13:39	0:0	8	i
op	13:40	0:0	8	--
stmts	14:4	14:16	7	
water	14:4	0:0	8	v
op	14:5	0:0	8	[
water	14:6	0:0	8	i
op	14:7	0:0	8	]
op	14:9	0:0	8	=
water	14:11	0:0	8	vp
op	14:13	0:0	8	[
water	14:14	0:0	8	i
op	14:15	0:0	8	]
water	14:16	0:0	8	;
water	15:2	0:0	6	}
else	15:4	19:2	4
stmts	15:9	19:2	5	
water	15:9	0:0	6	{
decl	16:3	16:23	6	int8	*vp
op	16:12	0:0	6	=
water	16:14	0:0	6	(
water	16:15	0:0	6	int8
op	16:19	0:0	6	*
water	16:20	0:0	6	)
water	16:22	0:0	6	v
for	17:3	18:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	17:8	17:29	7	i = dir -> tdir_count - 1 ;
water	17:8	0:0	8	i
op	17:10	0:0	8	=
water	17:12	0:0	8	dir
op	17:15	0:0	8	->
water	17:17	0:0	8	tdir_count
op	17:27	0:0	8	-
water	17:28	0:0	8	1
water	17:29	0:0	8	;
cond	17:31	17:36	7	i >= 0
water	17:31	0:0	8	i
op	17:33	0:0	8	>=
water	17:36	0:0	8	0
forexpr	17:39	17:40	7	i --
water	17:39	0:0	8	i
op	17:40	0:0	8	--
stmts	18:4	18:16	7	
water	18:4	0:0	8	v
op	18:5	0:0	8	[
water	18:6	0:0	8	i
op	18:7	0:0	8	]
op	18:9	0:0	8	=
water	18:11	0:0	8	vp
op	18:13	0:0	8	[
water	18:14	0:0	8	i
op	18:15	0:0	8	]
water	18:16	0:0	8	;
water	19:2	0:0	6	}
break	20:2	20:7	4	
label	21:1	21:16	4	case TIFF_SHORT :
label	22:1	22:17	4	case TIFF_SSHORT :
if	23:2	24:13	4	(!TIFFFetchShortArray (tif ,dir ,( uint16 * ) v ))
cond	23:6	23:48	5	!TIFFFetchShortArray (tif ,dir ,( uint16 * ) v )
op	23:6	0:0	6	!
call	23:7	23:48	6	TIFFFetchShortArray
arg	23:27	23:30	7	tif
water	23:27	0:0	8	tif
arg	23:32	23:35	7	dir
water	23:32	0:0	8	dir
arg	23:37	23:48	7	(uint16*)v
water	23:37	0:0	8	(
water	23:38	0:0	8	uint16
op	23:44	0:0	8	*
water	23:45	0:0	8	)
water	23:47	0:0	8	v
stmts	24:3	24:13	5	
return	24:3	24:13	6	(0)
water	24:10	0:0	7	(
water	24:11	0:0	7	0
water	24:12	0:0	7	)
if	25:2	29:2	4	(dir -> tdir_type == TIFF_SHORT)
cond	25:6	25:24	5	dir -> tdir_type == TIFF_SHORT
water	25:6	0:0	6	dir
op	25:9	0:0	6	->
water	25:11	0:0	6	tdir_type
op	25:21	0:0	6	==
water	25:24	0:0	6	TIFF_SHORT
stmts	25:36	29:2	5	
water	25:36	0:0	6	{
decl	26:3	26:27	6	uint16	*vp
op	26:14	0:0	6	=
water	26:16	0:0	6	(
water	26:17	0:0	6	uint16
op	26:23	0:0	6	*
water	26:24	0:0	6	)
water	26:26	0:0	6	v
for	27:3	28:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	27:8	27:29	7	i = dir -> tdir_count - 1 ;
water	27:8	0:0	8	i
op	27:10	0:0	8	=
water	27:12	0:0	8	dir
op	27:15	0:0	8	->
water	27:17	0:0	8	tdir_count
op	27:27	0:0	8	-
water	27:28	0:0	8	1
water	27:29	0:0	8	;
cond	27:31	27:36	7	i >= 0
water	27:31	0:0	8	i
op	27:33	0:0	8	>=
water	27:36	0:0	8	0
forexpr	27:39	27:40	7	i --
water	27:39	0:0	8	i
op	27:40	0:0	8	--
stmts	28:4	28:16	7	
water	28:4	0:0	8	v
op	28:5	0:0	8	[
water	28:6	0:0	8	i
op	28:7	0:0	8	]
op	28:9	0:0	8	=
water	28:11	0:0	8	vp
op	28:13	0:0	8	[
water	28:14	0:0	8	i
op	28:15	0:0	8	]
water	28:16	0:0	8	;
water	29:2	0:0	6	}
else	29:4	33:2	4
stmts	29:9	33:2	5	
water	29:9	0:0	6	{
decl	30:3	30:25	6	int16	*vp
op	30:13	0:0	6	=
water	30:15	0:0	6	(
water	30:16	0:0	6	int16
op	30:21	0:0	6	*
water	30:22	0:0	6	)
water	30:24	0:0	6	v
for	31:3	32:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	31:8	31:29	7	i = dir -> tdir_count - 1 ;
water	31:8	0:0	8	i
op	31:10	0:0	8	=
water	31:12	0:0	8	dir
op	31:15	0:0	8	->
water	31:17	0:0	8	tdir_count
op	31:27	0:0	8	-
water	31:28	0:0	8	1
water	31:29	0:0	8	;
cond	31:31	31:36	7	i >= 0
water	31:31	0:0	8	i
op	31:33	0:0	8	>=
water	31:36	0:0	8	0
forexpr	31:39	31:40	7	i --
water	31:39	0:0	8	i
op	31:40	0:0	8	--
stmts	32:4	32:16	7	
water	32:4	0:0	8	v
op	32:5	0:0	8	[
water	32:6	0:0	8	i
op	32:7	0:0	8	]
op	32:9	0:0	8	=
water	32:11	0:0	8	vp
op	32:13	0:0	8	[
water	32:14	0:0	8	i
op	32:15	0:0	8	]
water	32:16	0:0	8	;
water	33:2	0:0	6	}
break	34:2	34:7	4	
label	35:1	35:15	4	case TIFF_LONG :
label	36:1	36:16	4	case TIFF_SLONG :
if	37:2	38:13	4	(!TIFFFetchLongArray (tif ,dir ,( uint32 * ) v ))
cond	37:6	37:47	5	!TIFFFetchLongArray (tif ,dir ,( uint32 * ) v )
op	37:6	0:0	6	!
call	37:7	37:47	6	TIFFFetchLongArray
arg	37:26	37:29	7	tif
water	37:26	0:0	8	tif
arg	37:31	37:34	7	dir
water	37:31	0:0	8	dir
arg	37:36	37:47	7	(uint32*)v
water	37:36	0:0	8	(
water	37:37	0:0	8	uint32
op	37:43	0:0	8	*
water	37:44	0:0	8	)
water	37:46	0:0	8	v
stmts	38:3	38:13	5	
return	38:3	38:13	6	(0)
water	38:10	0:0	7	(
water	38:11	0:0	7	0
water	38:12	0:0	7	)
if	39:2	43:2	4	(dir -> tdir_type == TIFF_LONG)
cond	39:6	39:24	5	dir -> tdir_type == TIFF_LONG
water	39:6	0:0	6	dir
op	39:9	0:0	6	->
water	39:11	0:0	6	tdir_type
op	39:21	0:0	6	==
water	39:24	0:0	6	TIFF_LONG
stmts	39:35	43:2	5	
water	39:35	0:0	6	{
decl	40:3	40:27	6	uint32	*vp
op	40:14	0:0	6	=
water	40:16	0:0	6	(
water	40:17	0:0	6	uint32
op	40:23	0:0	6	*
water	40:24	0:0	6	)
water	40:26	0:0	6	v
for	41:3	42:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	41:8	41:29	7	i = dir -> tdir_count - 1 ;
water	41:8	0:0	8	i
op	41:10	0:0	8	=
water	41:12	0:0	8	dir
op	41:15	0:0	8	->
water	41:17	0:0	8	tdir_count
op	41:27	0:0	8	-
water	41:28	0:0	8	1
water	41:29	0:0	8	;
cond	41:31	41:36	7	i >= 0
water	41:31	0:0	8	i
op	41:33	0:0	8	>=
water	41:36	0:0	8	0
forexpr	41:39	41:40	7	i --
water	41:39	0:0	8	i
op	41:40	0:0	8	--
stmts	42:4	42:16	7	
water	42:4	0:0	8	v
op	42:5	0:0	8	[
water	42:6	0:0	8	i
op	42:7	0:0	8	]
op	42:9	0:0	8	=
water	42:11	0:0	8	vp
op	42:13	0:0	8	[
water	42:14	0:0	8	i
op	42:15	0:0	8	]
water	42:16	0:0	8	;
water	43:2	0:0	6	}
else	43:4	47:2	4
stmts	43:9	47:2	5	
water	43:9	0:0	6	{
decl	44:3	44:25	6	int32	*vp
op	44:13	0:0	6	=
water	44:15	0:0	6	(
water	44:16	0:0	6	int32
op	44:21	0:0	6	*
water	44:22	0:0	6	)
water	44:24	0:0	6	v
for	45:3	46:16	6	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	45:8	45:29	7	i = dir -> tdir_count - 1 ;
water	45:8	0:0	8	i
op	45:10	0:0	8	=
water	45:12	0:0	8	dir
op	45:15	0:0	8	->
water	45:17	0:0	8	tdir_count
op	45:27	0:0	8	-
water	45:28	0:0	8	1
water	45:29	0:0	8	;
cond	45:31	45:36	7	i >= 0
water	45:31	0:0	8	i
op	45:33	0:0	8	>=
water	45:36	0:0	8	0
forexpr	45:39	45:40	7	i --
water	45:39	0:0	8	i
op	45:40	0:0	8	--
stmts	46:4	46:16	7	
water	46:4	0:0	8	v
op	46:5	0:0	8	[
water	46:6	0:0	8	i
op	46:7	0:0	8	]
op	46:9	0:0	8	=
water	46:11	0:0	8	vp
op	46:13	0:0	8	[
water	46:14	0:0	8	i
op	46:15	0:0	8	]
water	46:16	0:0	8	;
water	47:2	0:0	6	}
break	48:2	48:7	4	
label	49:1	49:19	4	case TIFF_RATIONAL :
label	50:1	50:20	4	case TIFF_SRATIONAL :
if	51:2	52:13	4	(!TIFFFetchRationalArray (tif ,dir ,( float * ) v ))
cond	51:6	51:50	5	!TIFFFetchRationalArray (tif ,dir ,( float * ) v )
op	51:6	0:0	6	!
call	51:7	51:50	6	TIFFFetchRationalArray
arg	51:30	51:33	7	tif
water	51:30	0:0	8	tif
arg	51:35	51:38	7	dir
water	51:35	0:0	8	dir
arg	51:40	51:50	7	(float*)v
water	51:40	0:0	8	(
water	51:41	0:0	8	float
op	51:46	0:0	8	*
water	51:47	0:0	8	)
water	51:49	0:0	8	v
stmts	52:3	52:13	5	
return	52:3	52:13	6	(0)
water	52:10	0:0	7	(
water	52:11	0:0	7	0
water	52:12	0:0	7	)
water	53:2	0:0	4	{
decl	53:4	53:26	4	float	*vp
op	53:14	0:0	4	=
water	53:16	0:0	4	(
water	53:17	0:0	4	float
op	53:22	0:0	4	*
water	53:23	0:0	4	)
water	53:25	0:0	4	v
for	54:4	55:15	4	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	54:9	54:30	5	i = dir -> tdir_count - 1 ;
water	54:9	0:0	6	i
op	54:11	0:0	6	=
water	54:13	0:0	6	dir
op	54:16	0:0	6	->
water	54:18	0:0	6	tdir_count
op	54:28	0:0	6	-
water	54:29	0:0	6	1
water	54:30	0:0	6	;
cond	54:32	54:37	5	i >= 0
water	54:32	0:0	6	i
op	54:34	0:0	6	>=
water	54:37	0:0	6	0
forexpr	54:40	54:41	5	i --
water	54:40	0:0	6	i
op	54:41	0:0	6	--
stmts	55:3	55:15	5	
water	55:3	0:0	6	v
op	55:4	0:0	6	[
water	55:5	0:0	6	i
op	55:6	0:0	6	]
op	55:8	0:0	6	=
water	55:10	0:0	6	vp
op	55:12	0:0	6	[
water	55:13	0:0	6	i
op	55:14	0:0	6	]
water	55:15	0:0	6	;
water	56:2	0:0	4	}
break	57:2	57:7	4	
label	58:1	58:16	4	case TIFF_FLOAT :
if	59:2	60:13	4	(!TIFFFetchFloatArray (tif ,dir ,( float * ) v ))
cond	59:6	59:47	5	!TIFFFetchFloatArray (tif ,dir ,( float * ) v )
op	59:6	0:0	6	!
call	59:7	59:47	6	TIFFFetchFloatArray
arg	59:27	59:30	7	tif
water	59:27	0:0	8	tif
arg	59:32	59:35	7	dir
water	59:32	0:0	8	dir
arg	59:37	59:47	7	(float*)v
water	59:37	0:0	8	(
water	59:38	0:0	8	float
op	59:43	0:0	8	*
water	59:44	0:0	8	)
water	59:46	0:0	8	v
stmts	60:3	60:13	5	
return	60:3	60:13	6	(0)
water	60:10	0:0	7	(
water	60:11	0:0	7	0
water	60:12	0:0	7	)
water	61:2	0:0	4	{
decl	61:4	61:26	4	float	*vp
op	61:14	0:0	4	=
water	61:16	0:0	4	(
water	61:17	0:0	4	float
op	61:22	0:0	4	*
water	61:23	0:0	4	)
water	61:25	0:0	4	v
for	62:4	63:15	4	(i = dir -> tdir_count - 1 ;i >= 0;i --)
forinit	62:9	62:30	5	i = dir -> tdir_count - 1 ;
water	62:9	0:0	6	i
op	62:11	0:0	6	=
water	62:13	0:0	6	dir
op	62:16	0:0	6	->
water	62:18	0:0	6	tdir_count
op	62:28	0:0	6	-
water	62:29	0:0	6	1
water	62:30	0:0	6	;
cond	62:32	62:37	5	i >= 0
water	62:32	0:0	6	i
op	62:34	0:0	6	>=
water	62:37	0:0	6	0
forexpr	62:40	62:41	5	i --
water	62:40	0:0	6	i
op	62:41	0:0	6	--
stmts	63:3	63:15	5	
water	63:3	0:0	6	v
op	63:4	0:0	6	[
water	63:5	0:0	6	i
op	63:6	0:0	6	]
op	63:8	0:0	6	=
water	63:10	0:0	6	vp
op	63:12	0:0	6	[
water	63:13	0:0	6	i
op	63:14	0:0	6	]
water	63:15	0:0	6	;
water	64:2	0:0	4	}
break	65:2	65:7	4	
label	66:1	66:17	4	case TIFF_DOUBLE :
return	67:2	67:54	4	(TIFFFetchDoubleArray(tif,dir,(double*)v))
water	67:9	0:0	5	(
call	67:10	67:52	5	TIFFFetchDoubleArray
arg	67:31	67:34	6	tif
water	67:31	0:0	7	tif
arg	67:36	67:39	6	dir
water	67:36	0:0	7	dir
arg	67:41	67:52	6	(double*)v
water	67:41	0:0	7	(
water	67:42	0:0	7	double
op	67:48	0:0	7	*
water	67:49	0:0	7	)
water	67:51	0:0	7	v
water	67:53	0:0	5	)
label	68:1	68:8	4	default :
call	72:2	74:55	4	TIFFErrorExt
arg	72:15	72:34	5	tif->tif_clientdata
water	72:15	0:0	6	tif
op	72:18	0:0	6	->
water	72:20	0:0	6	tif_clientdata
arg	72:36	72:49	5	tif->tif_name
water	72:36	0:0	6	tif
op	72:39	0:0	6	->
water	72:41	0:0	6	tif_name
arg	73:6	73:53	5	"cannot read TIFF_ANY type %d for field \"%s\""
water	73:6	0:0	6	"cannot read TIFF_ANY type %d for field \"%s\""
arg	74:6	74:55	5	_TIFFFieldWithTag(tif,dir->tdir_tag)->field_name
call	74:6	74:42	6	_TIFFFieldWithTag
arg	74:24	74:27	7	tif
water	74:24	0:0	8	tif
arg	74:29	74:42	7	dir->tdir_tag
water	74:29	0:0	8	dir
op	74:32	0:0	8	->
water	74:34	0:0	8	tdir_tag
op	74:43	0:0	6	->
water	74:45	0:0	6	field_name
water	74:56	0:0	4	;
return	75:2	75:12	4	(0)
water	75:9	0:0	5	(
water	75:10	0:0	5	0
water	75:11	0:0	5	)
water	76:1	0:0	4	}
return	77:1	77:11	2	(1)
water	77:8	0:0	3	(
water	77:9	0:0	3	1
water	77:10	0:0	3	)

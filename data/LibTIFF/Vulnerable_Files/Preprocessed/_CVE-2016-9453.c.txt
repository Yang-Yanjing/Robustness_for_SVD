func	1:0	439:0	0	tsize_t	t2p_readwrite_pdf_image_tile
params	1:36	0:0	1	
param	1:37	1:45	2	T2P *	t2p
param	1:47	1:58	2	TIFF *	input
param	1:60	1:72	2	TIFF *	output
param	1:74	1:86	2	ttile_t	tile
stmnts	0:0	438:16	1	
decl	3:1	3:14	2	uint16	edge
op	3:12	0:0	2	=
water	3:13	0:0	2	0
decl	4:1	4:18	2	tsize_t	written
op	4:16	0:0	2	=
water	4:17	0:0	2	0
decl	5:1	5:27	2	unsigned char	*buffer
op	5:22	0:0	2	=
water	5:23	0:0	2	NULL
decl	6:1	6:23	2	tsize_t	bufferoffset
op	6:21	0:0	2	=
water	6:22	0:0	2	0
decl	7:1	7:33	2	unsigned char	*samplebuffer
op	7:28	0:0	2	=
water	7:29	0:0	2	NULL
decl	8:1	8:29	2	tsize_t	samplebufferoffset
op	8:27	0:0	2	=
water	8:28	0:0	2	0
decl	9:1	9:15	2	tsize_t	read
op	9:13	0:0	2	=
water	9:14	0:0	2	0
decl	10:1	10:11	2	uint16	i
op	10:9	0:0	2	=
water	10:10	0:0	2	0
decl	11:1	11:20	2	ttile_t	tilecount
op	11:18	0:0	2	=
water	11:19	0:0	2	0
decl	13:1	13:23	2	ttile_t	septilecount
op	13:21	0:0	2	=
water	13:22	0:0	2	0
decl	14:1	14:22	2	tsize_t	septilesize
op	14:20	0:0	2	=
water	14:21	0:0	2	0
decl	16:1	16:19	2	unsigned char	*jpt
decl	17:1	17:15	2	float	*xfloatp
decl	18:1	18:17	2	uint32	xuint32
op	18:15	0:0	2	=
water	18:16	0:0	2	0
if	22:1	23:11	2	(t2p -> t2p_error != T2P_ERR_OK)
cond	22:5	22:23	3	t2p -> t2p_error != T2P_ERR_OK
water	22:5	0:0	4	t2p
op	22:8	0:0	4	->
water	22:10	0:0	4	t2p_error
op	22:20	0:0	4	!=
water	22:23	0:0	4	T2P_ERR_OK
stmts	23:2	23:11	3	
return	23:2	23:11	4	(0)
water	23:8	0:0	5	(
water	23:9	0:0	5	0
water	23:10	0:0	5	)
water	25:1	0:0	2	edge
op	25:6	0:0	2	|=
call	25:9	25:68	2	t2p_tile_is_right_edge
arg	25:32	25:62	3	t2p->tiff_tiles[t2p->pdf_page]
water	25:32	0:0	4	t2p
op	25:35	0:0	4	->
water	25:37	0:0	4	tiff_tiles
op	25:47	0:0	4	[
water	25:48	0:0	4	t2p
op	25:51	0:0	4	->
water	25:53	0:0	4	pdf_page
op	25:61	0:0	4	]
arg	25:64	25:68	3	tile
water	25:64	0:0	4	tile
water	25:69	0:0	2	;
water	26:1	0:0	2	edge
op	26:6	0:0	2	|=
call	26:9	26:69	2	t2p_tile_is_bottom_edge
arg	26:33	26:63	3	t2p->tiff_tiles[t2p->pdf_page]
water	26:33	0:0	4	t2p
op	26:36	0:0	4	->
water	26:38	0:0	4	tiff_tiles
op	26:48	0:0	4	[
water	26:49	0:0	4	t2p
op	26:52	0:0	4	->
water	26:54	0:0	4	pdf_page
op	26:62	0:0	4	]
arg	26:65	26:69	3	tile
water	26:65	0:0	4	tile
water	26:70	0:0	2	;
if	28:1	167:1	2	(( t2p -> pdf_transcode == T2P_TRANSCODE_RAW ) && ( ( edge == 0 ) || ( t2p -> pdf_compression == T2P_COMPRESS_JPEG ) ))
cond	28:5	32:1	3	( t2p -> pdf_transcode == T2P_TRANSCODE_RAW ) && ( ( edge == 0 ) || ( t2p -> pdf_compression == T2P_COMPRESS_JPEG ) )
water	28:5	0:0	4	(
water	28:6	0:0	4	t2p
op	28:9	0:0	4	->
water	28:11	0:0	4	pdf_transcode
op	28:25	0:0	4	==
water	28:28	0:0	4	T2P_TRANSCODE_RAW
water	28:45	0:0	4	)
op	28:47	0:0	4	&&
water	28:50	0:0	4	(
water	28:51	0:0	4	(
water	28:52	0:0	4	edge
op	28:57	0:0	4	==
water	28:60	0:0	4	0
water	28:61	0:0	4	)
op	30:2	0:0	4	||
water	30:5	0:0	4	(
water	30:6	0:0	4	t2p
op	30:9	0:0	4	->
water	30:11	0:0	4	pdf_compression
op	30:27	0:0	4	==
water	30:30	0:0	4	T2P_COMPRESS_JPEG
water	30:47	0:0	4	)
water	32:1	0:0	4	)
stmts	33:2	167:1	3	
water	33:2	0:0	4	{
if	35:2	53:2	4	(t2p -> pdf_compression == T2P_COMPRESS_G4)
cond	35:5	35:29	5	t2p -> pdf_compression == T2P_COMPRESS_G4
water	35:5	0:0	6	t2p
op	35:8	0:0	6	->
water	35:10	0:0	6	pdf_compression
op	35:26	0:0	6	==
water	35:29	0:0	6	T2P_COMPRESS_G4
stmts	35:45	53:2	5	
water	35:45	0:0	6	{
water	36:3	0:0	6	buffer
op	36:9	0:0	6	=
water	36:11	0:0	6	(
water	36:12	0:0	6	unsigned
water	36:21	0:0	6	char
op	36:25	0:0	6	*
water	36:26	0:0	6	)
call	36:28	36:58	6	_TIFFmalloc
arg	36:40	36:58	7	t2p->tiff_datasize
water	36:40	0:0	8	t2p
op	36:43	0:0	8	->
water	36:45	0:0	8	tiff_datasize
water	36:59	0:0	6	;
if	37:3	45:3	6	(buffer == NULL)
cond	37:6	37:14	7	buffer == NULL
water	37:6	0:0	8	buffer
op	37:12	0:0	8	==
water	37:14	0:0	8	NULL
stmts	37:19	45:3	7	
water	37:19	0:0	8	{
call	38:4	42:24	8	TIFFError
arg	38:14	38:29	9	TIFF2PDF_MODULE
water	38:14	0:0	10	TIFF2PDF_MODULE
arg	39:5	40:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	39:5	0:0	10	"Can't allocate %lu bytes of memory "
water	40:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	41:5	41:39	9	(unsignedlong)t2p->tiff_datasize
water	41:5	0:0	10	(
water	41:6	0:0	10	unsigned
water	41:15	0:0	10	long
water	41:19	0:0	10	)
water	41:21	0:0	10	t2p
op	41:24	0:0	10	->
water	41:26	0:0	10	tiff_datasize
arg	42:5	42:24	9	TIFFFileName(input)
call	42:5	42:23	10	TIFFFileName
arg	42:18	42:23	11	input
water	42:18	0:0	12	input
water	42:25	0:0	8	;
water	43:4	0:0	8	t2p
op	43:7	0:0	8	->
water	43:9	0:0	8	t2p_error
op	43:19	0:0	8	=
water	43:21	0:0	8	T2P_ERR_ERROR
water	43:34	0:0	8	;
return	44:4	44:13	8	(0)
water	44:10	0:0	9	(
water	44:11	0:0	9	0
water	44:12	0:0	9	)
water	45:3	0:0	8	}
call	46:3	46:68	6	TIFFReadRawTile
arg	46:19	46:24	7	input
water	46:19	0:0	8	input
arg	46:26	46:30	7	tile
water	46:26	0:0	8	tile
arg	46:32	46:48	7	(tdata_t)buffer
water	46:32	0:0	8	(
water	46:33	0:0	8	tdata_t
water	46:40	0:0	8	)
water	46:42	0:0	8	buffer
arg	46:50	46:68	7	t2p->tiff_datasize
water	46:50	0:0	8	t2p
op	46:53	0:0	8	->
water	46:55	0:0	8	tiff_datasize
water	46:69	0:0	6	;
if	47:3	49:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	47:7	47:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	47:7	0:0	8	t2p
op	47:10	0:0	8	->
water	47:12	0:0	8	tiff_fillorder
op	47:26	0:0	8	==
water	47:28	0:0	8	FILLORDER_LSB2MSB
stmts	47:46	49:3	7	
water	47:46	0:0	8	{
call	48:5	48:47	8	TIFFReverseBits
arg	48:21	48:27	9	buffer
water	48:21	0:0	10	buffer
arg	48:29	48:47	9	t2p->tiff_datasize
water	48:29	0:0	10	t2p
op	48:32	0:0	10	->
water	48:34	0:0	10	tiff_datasize
water	48:48	0:0	8	;
water	49:3	0:0	8	}
call	50:3	50:60	6	t2pWriteFile
arg	50:16	50:22	7	output
water	50:16	0:0	8	output
arg	50:24	50:40	7	(tdata_t)buffer
water	50:24	0:0	8	(
water	50:25	0:0	8	tdata_t
water	50:32	0:0	8	)
water	50:34	0:0	8	buffer
arg	50:42	50:60	7	t2p->tiff_datasize
water	50:42	0:0	8	t2p
op	50:45	0:0	8	->
water	50:47	0:0	8	tiff_datasize
water	50:61	0:0	6	;
call	51:3	51:19	6	_TIFFfree
arg	51:13	51:19	7	buffer
water	51:13	0:0	8	buffer
water	51:20	0:0	6	;
return	52:3	52:29	6	(t2p->tiff_datasize)
water	52:9	0:0	7	(
water	52:10	0:0	7	t2p
op	52:13	0:0	7	->
water	52:15	0:0	7	tiff_datasize
water	52:28	0:0	7	)
water	53:2	0:0	6	}
if	56:2	74:2	4	(t2p -> pdf_compression == T2P_COMPRESS_ZIP)
cond	56:5	56:29	5	t2p -> pdf_compression == T2P_COMPRESS_ZIP
water	56:5	0:0	6	t2p
op	56:8	0:0	6	->
water	56:10	0:0	6	pdf_compression
op	56:26	0:0	6	==
water	56:29	0:0	6	T2P_COMPRESS_ZIP
stmts	56:46	74:2	5	
water	56:46	0:0	6	{
water	57:3	0:0	6	buffer
op	57:9	0:0	6	=
water	57:11	0:0	6	(
water	57:12	0:0	6	unsigned
water	57:21	0:0	6	char
op	57:25	0:0	6	*
water	57:26	0:0	6	)
call	57:28	57:58	6	_TIFFmalloc
arg	57:40	57:58	7	t2p->tiff_datasize
water	57:40	0:0	8	t2p
op	57:43	0:0	8	->
water	57:45	0:0	8	tiff_datasize
water	57:59	0:0	6	;
if	58:3	66:3	6	(buffer == NULL)
cond	58:6	58:14	7	buffer == NULL
water	58:6	0:0	8	buffer
op	58:12	0:0	8	==
water	58:14	0:0	8	NULL
stmts	58:19	66:3	7	
water	58:19	0:0	8	{
call	59:4	63:24	8	TIFFError
arg	59:14	59:29	9	TIFF2PDF_MODULE
water	59:14	0:0	10	TIFF2PDF_MODULE
arg	60:5	61:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	60:5	0:0	10	"Can't allocate %lu bytes of memory "
water	61:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	62:5	62:39	9	(unsignedlong)t2p->tiff_datasize
water	62:5	0:0	10	(
water	62:6	0:0	10	unsigned
water	62:15	0:0	10	long
water	62:19	0:0	10	)
water	62:21	0:0	10	t2p
op	62:24	0:0	10	->
water	62:26	0:0	10	tiff_datasize
arg	63:5	63:24	9	TIFFFileName(input)
call	63:5	63:23	10	TIFFFileName
arg	63:18	63:23	11	input
water	63:18	0:0	12	input
water	63:25	0:0	8	;
water	64:4	0:0	8	t2p
op	64:7	0:0	8	->
water	64:9	0:0	8	t2p_error
op	64:19	0:0	8	=
water	64:21	0:0	8	T2P_ERR_ERROR
water	64:34	0:0	8	;
return	65:4	65:13	8	(0)
water	65:10	0:0	9	(
water	65:11	0:0	9	0
water	65:12	0:0	9	)
water	66:3	0:0	8	}
call	67:3	67:68	6	TIFFReadRawTile
arg	67:19	67:24	7	input
water	67:19	0:0	8	input
arg	67:26	67:30	7	tile
water	67:26	0:0	8	tile
arg	67:32	67:48	7	(tdata_t)buffer
water	67:32	0:0	8	(
water	67:33	0:0	8	tdata_t
water	67:40	0:0	8	)
water	67:42	0:0	8	buffer
arg	67:50	67:68	7	t2p->tiff_datasize
water	67:50	0:0	8	t2p
op	67:53	0:0	8	->
water	67:55	0:0	8	tiff_datasize
water	67:69	0:0	6	;
if	68:3	70:3	6	(t2p -> tiff_fillorder == FILLORDER_LSB2MSB)
cond	68:7	68:28	7	t2p -> tiff_fillorder == FILLORDER_LSB2MSB
water	68:7	0:0	8	t2p
op	68:10	0:0	8	->
water	68:12	0:0	8	tiff_fillorder
op	68:26	0:0	8	==
water	68:28	0:0	8	FILLORDER_LSB2MSB
stmts	68:46	70:3	7	
water	68:46	0:0	8	{
call	69:5	69:47	8	TIFFReverseBits
arg	69:21	69:27	9	buffer
water	69:21	0:0	10	buffer
arg	69:29	69:47	9	t2p->tiff_datasize
water	69:29	0:0	10	t2p
op	69:32	0:0	10	->
water	69:34	0:0	10	tiff_datasize
water	69:48	0:0	8	;
water	70:3	0:0	8	}
call	71:3	71:60	6	t2pWriteFile
arg	71:16	71:22	7	output
water	71:16	0:0	8	output
arg	71:24	71:40	7	(tdata_t)buffer
water	71:24	0:0	8	(
water	71:25	0:0	8	tdata_t
water	71:32	0:0	8	)
water	71:34	0:0	8	buffer
arg	71:42	71:60	7	t2p->tiff_datasize
water	71:42	0:0	8	t2p
op	71:45	0:0	8	->
water	71:47	0:0	8	tiff_datasize
water	71:61	0:0	6	;
call	72:3	72:19	6	_TIFFfree
arg	72:13	72:19	7	buffer
water	72:13	0:0	8	buffer
water	72:20	0:0	6	;
return	73:3	73:29	6	(t2p->tiff_datasize)
water	73:9	0:0	7	(
water	73:10	0:0	7	t2p
op	73:13	0:0	7	->
water	73:15	0:0	7	tiff_datasize
water	73:28	0:0	7	)
water	74:2	0:0	6	}
if	77:2	121:2	4	(t2p -> tiff_compression == COMPRESSION_OJPEG)
cond	77:5	77:30	5	t2p -> tiff_compression == COMPRESSION_OJPEG
water	77:5	0:0	6	t2p
op	77:8	0:0	6	->
water	77:10	0:0	6	tiff_compression
op	77:27	0:0	6	==
water	77:30	0:0	6	COMPRESSION_OJPEG
stmts	77:48	121:2	5	
water	77:48	0:0	6	{
if	78:3	85:3	6	(! t2p -> pdf_ojpegdata)
cond	78:6	78:13	7	! t2p -> pdf_ojpegdata
op	78:6	0:0	8	!
water	78:8	0:0	8	t2p
op	78:11	0:0	8	->
water	78:13	0:0	8	pdf_ojpegdata
stmts	78:27	85:3	7	
water	78:27	0:0	8	{
call	79:4	82:24	8	TIFFError
arg	79:14	79:29	9	TIFF2PDF_MODULE
water	79:14	0:0	10	TIFF2PDF_MODULE
arg	80:5	81:52	9	"No support for OJPEG image %s with ""bad tables"
water	80:5	0:0	10	"No support for OJPEG image %s with "
water	81:40	0:0	10	"bad tables"
arg	82:5	82:24	9	TIFFFileName(input)
call	82:5	82:23	10	TIFFFileName
arg	82:18	82:23	11	input
water	82:18	0:0	12	input
water	82:25	0:0	8	;
water	83:4	0:0	8	t2p
op	83:7	0:0	8	->
water	83:9	0:0	8	t2p_error
op	83:19	0:0	8	=
water	83:21	0:0	8	T2P_ERR_ERROR
water	83:34	0:0	8	;
return	84:4	84:13	8	(0)
water	84:10	0:0	9	(
water	84:11	0:0	9	0
water	84:12	0:0	9	)
water	85:3	0:0	8	}
water	86:3	0:0	6	buffer
op	86:9	0:0	6	=
water	86:10	0:0	6	(
water	86:11	0:0	6	unsigned
water	86:20	0:0	6	char
op	86:24	0:0	6	*
water	86:25	0:0	6	)
call	86:27	86:57	6	_TIFFmalloc
arg	86:39	86:57	7	t2p->tiff_datasize
water	86:39	0:0	8	t2p
op	86:42	0:0	8	->
water	86:44	0:0	8	tiff_datasize
water	86:58	0:0	6	;
if	87:3	95:3	6	(buffer == NULL)
cond	87:6	87:14	7	buffer == NULL
water	87:6	0:0	8	buffer
op	87:12	0:0	8	==
water	87:14	0:0	8	NULL
stmts	87:19	95:3	7	
water	87:19	0:0	8	{
call	88:4	92:24	8	TIFFError
arg	88:14	88:29	9	TIFF2PDF_MODULE
water	88:14	0:0	10	TIFF2PDF_MODULE
arg	89:5	90:73	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image, %s"
water	89:5	0:0	10	"Can't allocate %lu bytes of memory "
water	90:40	0:0	10	"for t2p_readwrite_pdf_image, %s"
arg	91:5	91:39	9	(unsignedlong)t2p->tiff_datasize
water	91:5	0:0	10	(
water	91:6	0:0	10	unsigned
water	91:15	0:0	10	long
water	91:19	0:0	10	)
water	91:21	0:0	10	t2p
op	91:24	0:0	10	->
water	91:26	0:0	10	tiff_datasize
arg	92:5	92:24	9	TIFFFileName(input)
call	92:5	92:23	10	TIFFFileName
arg	92:18	92:23	11	input
water	92:18	0:0	12	input
water	92:25	0:0	8	;
water	93:4	0:0	8	t2p
op	93:7	0:0	8	->
water	93:9	0:0	8	t2p_error
op	93:19	0:0	8	=
water	93:21	0:0	8	T2P_ERR_ERROR
water	93:34	0:0	8	;
return	94:4	94:13	8	(0)
water	94:10	0:0	9	(
water	94:11	0:0	9	0
water	94:12	0:0	9	)
water	95:3	0:0	8	}
call	96:3	96:67	6	_TIFFmemcpy
arg	96:15	96:21	7	buffer
water	96:15	0:0	8	buffer
arg	96:23	96:41	7	t2p->pdf_ojpegdata
water	96:23	0:0	8	t2p
op	96:26	0:0	8	->
water	96:28	0:0	8	pdf_ojpegdata
arg	96:43	96:67	7	t2p->pdf_ojpegdatalength
water	96:43	0:0	8	t2p
op	96:46	0:0	8	->
water	96:48	0:0	8	pdf_ojpegdatalength
water	96:68	0:0	6	;
if	97:3	110:3	6	(edge != 0)
cond	97:6	97:12	7	edge != 0
water	97:6	0:0	8	edge
op	97:10	0:0	8	!=
water	97:12	0:0	8	0
stmts	97:14	110:3	7	
water	97:14	0:0	8	{
if	98:4	103:4	8	(t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ))
cond	98:7	98:67	9	t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile )
call	98:7	98:67	10	t2p_tile_is_bottom_edge
arg	98:31	98:61	11	t2p->tiff_tiles[t2p->pdf_page]
water	98:31	0:0	12	t2p
op	98:34	0:0	12	->
water	98:36	0:0	12	tiff_tiles
op	98:46	0:0	12	[
water	98:47	0:0	12	t2p
op	98:50	0:0	12	->
water	98:52	0:0	12	pdf_page
op	98:60	0:0	12	]
arg	98:63	98:67	11	tile
water	98:63	0:0	12	tile
stmts	98:69	103:4	9	
water	98:69	0:0	10	{
water	99:5	0:0	10	buffer
op	99:11	0:0	10	[
water	99:12	0:0	10	7
op	99:13	0:0	10	]
op	99:14	0:0	10	=
water	100:6	0:0	10	(
water	100:7	0:0	10	t2p
op	100:10	0:0	10	->
water	100:12	0:0	10	tiff_tiles
op	100:22	0:0	10	[
water	100:23	0:0	10	t2p
op	100:26	0:0	10	->
water	100:28	0:0	10	pdf_page
op	100:36	0:0	10	]
op	100:37	0:0	10	.
water	100:38	0:0	10	tiles_edgetilelength
op	100:59	0:0	10	>>
water	100:62	0:0	10	8
water	100:63	0:0	10	)
op	100:65	0:0	10	&
water	100:67	0:0	10	0
water	100:68	0:0	10	xff
water	100:71	0:0	10	;
water	101:5	0:0	10	buffer
op	101:11	0:0	10	[
water	101:12	0:0	10	8
op	101:13	0:0	10	]
op	101:14	0:0	10	=
water	102:6	0:0	10	(
water	102:7	0:0	10	t2p
op	102:10	0:0	10	->
water	102:12	0:0	10	tiff_tiles
op	102:22	0:0	10	[
water	102:23	0:0	10	t2p
op	102:26	0:0	10	->
water	102:28	0:0	10	pdf_page
op	102:36	0:0	10	]
op	102:37	0:0	10	.
water	102:38	0:0	10	tiles_edgetilelength
water	102:59	0:0	10	)
op	102:61	0:0	10	&
water	102:63	0:0	10	0
water	102:64	0:0	10	xff
water	102:67	0:0	10	;
water	103:4	0:0	10	}
if	104:4	109:4	8	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ))
cond	104:7	104:66	9	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile )
call	104:7	104:66	10	t2p_tile_is_right_edge
arg	104:30	104:60	11	t2p->tiff_tiles[t2p->pdf_page]
water	104:30	0:0	12	t2p
op	104:33	0:0	12	->
water	104:35	0:0	12	tiff_tiles
op	104:45	0:0	12	[
water	104:46	0:0	12	t2p
op	104:49	0:0	12	->
water	104:51	0:0	12	pdf_page
op	104:59	0:0	12	]
arg	104:62	104:66	11	tile
water	104:62	0:0	12	tile
stmts	104:68	109:4	9	
water	104:68	0:0	10	{
water	105:5	0:0	10	buffer
op	105:11	0:0	10	[
water	105:12	0:0	10	9
op	105:13	0:0	10	]
op	105:14	0:0	10	=
water	106:6	0:0	10	(
water	106:7	0:0	10	t2p
op	106:10	0:0	10	->
water	106:12	0:0	10	tiff_tiles
op	106:22	0:0	10	[
water	106:23	0:0	10	t2p
op	106:26	0:0	10	->
water	106:28	0:0	10	pdf_page
op	106:36	0:0	10	]
op	106:37	0:0	10	.
water	106:38	0:0	10	tiles_edgetilewidth
op	106:58	0:0	10	>>
water	106:61	0:0	10	8
water	106:62	0:0	10	)
op	106:64	0:0	10	&
water	106:66	0:0	10	0
water	106:67	0:0	10	xff
water	106:70	0:0	10	;
water	107:5	0:0	10	buffer
op	107:11	0:0	10	[
water	107:12	0:0	10	10
op	107:14	0:0	10	]
op	107:15	0:0	10	=
water	108:6	0:0	10	(
water	108:7	0:0	10	t2p
op	108:10	0:0	10	->
water	108:12	0:0	10	tiff_tiles
op	108:22	0:0	10	[
water	108:23	0:0	10	t2p
op	108:26	0:0	10	->
water	108:28	0:0	10	pdf_page
op	108:36	0:0	10	]
op	108:37	0:0	10	.
water	108:38	0:0	10	tiles_edgetilewidth
water	108:58	0:0	10	)
op	108:60	0:0	10	&
water	108:62	0:0	10	0
water	108:63	0:0	10	xff
water	108:66	0:0	10	;
water	109:4	0:0	10	}
water	110:3	0:0	8	}
water	111:3	0:0	6	bufferoffset
op	111:15	0:0	6	=
water	111:16	0:0	6	t2p
op	111:19	0:0	6	->
water	111:21	0:0	6	pdf_ojpegdatalength
water	111:40	0:0	6	;
water	112:3	0:0	6	bufferoffset
op	112:15	0:0	6	+=
call	112:17	115:7	6	TIFFReadRawTile
arg	112:33	112:38	7	input
water	112:33	0:0	8	input
arg	113:5	113:9	7	tile
water	113:5	0:0	8	tile
arg	114:5	114:56	7	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	114:5	0:0	8	(
water	114:6	0:0	8	tdata_t
water	114:13	0:0	8	)
op	114:15	0:0	8	&
water	114:16	0:0	8	(
water	114:17	0:0	8	(
water	114:18	0:0	8	(
water	114:19	0:0	8	unsigned
water	114:28	0:0	8	char
op	114:32	0:0	8	*
water	114:33	0:0	8	)
water	114:34	0:0	8	buffer
water	114:40	0:0	8	)
op	114:41	0:0	8	[
water	114:42	0:0	8	bufferoffset
op	114:54	0:0	8	]
water	114:55	0:0	8	)
arg	115:5	115:7	7	-1
op	115:5	0:0	8	-
water	115:6	0:0	8	1
water	115:8	0:0	6	;
water	116:3	0:0	6	(
water	116:4	0:0	6	(
water	116:5	0:0	6	unsigned
water	116:14	0:0	6	char
op	116:18	0:0	6	*
water	116:19	0:0	6	)
water	116:20	0:0	6	buffer
water	116:26	0:0	6	)
op	116:27	0:0	6	[
water	116:28	0:0	6	bufferoffset
op	116:40	0:0	6	++
op	116:42	0:0	6	]
op	116:43	0:0	6	=
water	116:44	0:0	6	0
water	116:45	0:0	6	xff
water	116:48	0:0	6	;
water	117:3	0:0	6	(
water	117:4	0:0	6	(
water	117:5	0:0	6	unsigned
water	117:14	0:0	6	char
op	117:18	0:0	6	*
water	117:19	0:0	6	)
water	117:20	0:0	6	buffer
water	117:26	0:0	6	)
op	117:27	0:0	6	[
water	117:28	0:0	6	bufferoffset
op	117:40	0:0	6	++
op	117:42	0:0	6	]
op	117:43	0:0	6	=
water	117:44	0:0	6	0
water	117:45	0:0	6	xd9
water	117:48	0:0	6	;
call	118:3	118:54	6	t2pWriteFile
arg	118:16	118:22	7	output
water	118:16	0:0	8	output
arg	118:24	118:40	7	(tdata_t)buffer
water	118:24	0:0	8	(
water	118:25	0:0	8	tdata_t
water	118:32	0:0	8	)
water	118:34	0:0	8	buffer
arg	118:42	118:54	7	bufferoffset
water	118:42	0:0	8	bufferoffset
water	118:55	0:0	6	;
call	119:3	119:19	6	_TIFFfree
arg	119:13	119:19	7	buffer
water	119:13	0:0	8	buffer
water	119:20	0:0	6	;
return	120:3	120:23	6	(bufferoffset)
water	120:9	0:0	7	(
water	120:10	0:0	7	bufferoffset
water	120:22	0:0	7	)
water	121:2	0:0	6	}
if	124:2	164:2	4	(t2p -> tiff_compression == COMPRESSION_JPEG)
cond	124:5	124:30	5	t2p -> tiff_compression == COMPRESSION_JPEG
water	124:5	0:0	6	t2p
op	124:8	0:0	6	->
water	124:10	0:0	6	tiff_compression
op	124:27	0:0	6	==
water	124:30	0:0	6	COMPRESSION_JPEG
stmts	124:47	164:2	5	
water	124:47	0:0	6	{
decl	125:3	125:29	6	unsigned char	table_end[2]
decl	126:3	126:19	6	uint32	count
op	126:16	0:0	6	=
water	126:18	0:0	6	0
water	127:3	0:0	6	buffer
op	127:9	0:0	6	=
water	127:11	0:0	6	(
water	127:12	0:0	6	unsigned
water	127:21	0:0	6	char
op	127:25	0:0	6	*
water	127:26	0:0	6	)
call	127:28	127:58	6	_TIFFmalloc
arg	127:40	127:58	7	t2p->tiff_datasize
water	127:40	0:0	8	t2p
op	127:43	0:0	8	->
water	127:45	0:0	8	tiff_datasize
water	127:59	0:0	6	;
if	128:3	136:3	6	(buffer == NULL)
cond	128:6	128:14	7	buffer == NULL
water	128:6	0:0	8	buffer
op	128:12	0:0	8	==
water	128:14	0:0	8	NULL
stmts	128:19	136:3	7	
water	128:19	0:0	8	{
call	129:4	133:24	8	TIFFError
arg	129:14	129:29	9	TIFF2PDF_MODULE
water	129:14	0:0	10	TIFF2PDF_MODULE
arg	130:5	131:78	9	"Can't allocate "TIFF_SIZE_FORMAT" bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	130:5	0:0	10	"Can't allocate "
water	130:23	0:0	10	TIFF_SIZE_FORMAT
water	130:40	0:0	10	" bytes of memory "
water	131:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	132:42	132:74	9	(TIFF_SIZE_T)t2p->tiff_datasize
water	132:42	0:0	10	(
water	132:43	0:0	10	TIFF_SIZE_T
water	132:54	0:0	10	)
water	132:56	0:0	10	t2p
op	132:59	0:0	10	->
water	132:61	0:0	10	tiff_datasize
arg	133:5	133:24	9	TIFFFileName(input)
call	133:5	133:23	10	TIFFFileName
arg	133:18	133:23	11	input
water	133:18	0:0	12	input
water	133:25	0:0	8	;
water	134:4	0:0	8	t2p
op	134:7	0:0	8	->
water	134:9	0:0	8	t2p_error
op	134:19	0:0	8	=
water	134:21	0:0	8	T2P_ERR_ERROR
water	134:34	0:0	8	;
return	135:4	135:13	8	(0)
water	135:10	0:0	9	(
water	135:11	0:0	9	0
water	135:12	0:0	9	)
water	136:3	0:0	8	}
if	137:3	160:3	6	(TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0)
cond	137:6	137:63	7	TIFFGetField (input ,TIFFTAG_JPEGTABLES ,& count ,& jpt ) != 0
call	137:6	137:58	8	TIFFGetField
arg	137:19	137:24	9	input
water	137:19	0:0	10	input
arg	137:26	137:44	9	TIFFTAG_JPEGTABLES
water	137:26	0:0	10	TIFFTAG_JPEGTABLES
arg	137:46	137:52	9	&count
op	137:46	0:0	10	&
water	137:47	0:0	10	count
arg	137:54	137:58	9	&jpt
op	137:54	0:0	10	&
water	137:55	0:0	10	jpt
op	137:60	0:0	8	!=
water	137:63	0:0	8	0
stmts	137:66	160:3	7	
water	137:66	0:0	8	{
if	138:4	143:4	8	(count > 0)
cond	138:8	138:16	9	count > 0
water	138:8	0:0	10	count
op	138:14	0:0	10	>
water	138:16	0:0	10	0
stmts	138:19	143:4	9	
water	138:19	0:0	10	{
call	139:5	139:35	10	_TIFFmemcpy
arg	139:17	139:23	11	buffer
water	139:17	0:0	12	buffer
arg	139:25	139:28	11	jpt
water	139:25	0:0	12	jpt
arg	139:30	139:35	11	count
water	139:30	0:0	12	count
water	139:36	0:0	10	;
water	140:5	0:0	10	bufferoffset
op	140:18	0:0	10	+=
water	140:21	0:0	10	count
op	140:27	0:0	10	-
water	140:29	0:0	10	2
water	140:30	0:0	10	;
water	141:5	0:0	10	table_end
op	141:14	0:0	10	[
water	141:15	0:0	10	0
op	141:16	0:0	10	]
op	141:18	0:0	10	=
water	141:20	0:0	10	buffer
op	141:26	0:0	10	[
water	141:27	0:0	10	bufferoffset
op	141:39	0:0	10	-
water	141:40	0:0	10	2
op	141:41	0:0	10	]
water	141:42	0:0	10	;
water	142:5	0:0	10	table_end
op	142:14	0:0	10	[
water	142:15	0:0	10	1
op	142:16	0:0	10	]
op	142:18	0:0	10	=
water	142:20	0:0	10	buffer
op	142:26	0:0	10	[
water	142:27	0:0	10	bufferoffset
op	142:39	0:0	10	-
water	142:40	0:0	10	1
op	142:41	0:0	10	]
water	142:42	0:0	10	;
water	143:4	0:0	10	}
if	144:4	153:4	8	(count > 0)
cond	144:8	144:16	9	count > 0
water	144:8	0:0	10	count
op	144:14	0:0	10	>
water	144:16	0:0	10	0
stmts	144:19	153:4	9	
water	144:19	0:0	10	{
water	145:5	0:0	10	xuint32
op	145:13	0:0	10	=
water	145:15	0:0	10	bufferoffset
water	145:27	0:0	10	;
water	146:5	0:0	10	bufferoffset
op	146:18	0:0	10	+=
call	146:21	150:8	10	TIFFReadRawTile
arg	147:6	147:11	11	input
water	147:6	0:0	12	input
arg	148:6	148:10	11	tile
water	148:6	0:0	12	tile
arg	149:6	149:59	11	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset-2])
water	149:6	0:0	12	(
water	149:7	0:0	12	tdata_t
water	149:14	0:0	12	)
op	149:16	0:0	12	&
water	149:17	0:0	12	(
water	149:18	0:0	12	(
water	149:19	0:0	12	(
water	149:20	0:0	12	unsigned
water	149:29	0:0	12	char
op	149:33	0:0	12	*
water	149:34	0:0	12	)
water	149:35	0:0	12	buffer
water	149:41	0:0	12	)
op	149:42	0:0	12	[
water	149:43	0:0	12	bufferoffset
op	149:55	0:0	12	-
water	149:56	0:0	12	2
op	149:57	0:0	12	]
water	149:58	0:0	12	)
arg	150:6	150:8	11	-1
op	150:6	0:0	12	-
water	150:7	0:0	12	1
water	150:9	0:0	10	;
water	151:6	0:0	10	buffer
op	151:12	0:0	10	[
water	151:13	0:0	10	xuint32
op	151:20	0:0	10	-
water	151:21	0:0	10	2
op	151:22	0:0	10	]
op	151:23	0:0	10	=
water	151:24	0:0	10	table_end
op	151:33	0:0	10	[
water	151:34	0:0	10	0
op	151:35	0:0	10	]
water	151:36	0:0	10	;
water	152:6	0:0	10	buffer
op	152:12	0:0	10	[
water	152:13	0:0	10	xuint32
op	152:20	0:0	10	-
water	152:21	0:0	10	1
op	152:22	0:0	10	]
op	152:23	0:0	10	=
water	152:24	0:0	10	table_end
op	152:33	0:0	10	[
water	152:34	0:0	10	1
op	152:35	0:0	10	]
water	152:36	0:0	10	;
water	153:4	0:0	10	}
else	153:6	159:4	8
stmts	153:11	159:4	9	
water	153:11	0:0	10	{
water	154:5	0:0	10	bufferoffset
op	154:18	0:0	10	+=
call	154:21	158:8	10	TIFFReadRawTile
arg	155:6	155:11	11	input
water	155:6	0:0	12	input
arg	156:6	156:10	11	tile
water	156:6	0:0	12	tile
arg	157:6	157:57	11	(tdata_t)&(((unsignedchar*)buffer)[bufferoffset])
water	157:6	0:0	12	(
water	157:7	0:0	12	tdata_t
water	157:14	0:0	12	)
op	157:16	0:0	12	&
water	157:17	0:0	12	(
water	157:18	0:0	12	(
water	157:19	0:0	12	(
water	157:20	0:0	12	unsigned
water	157:29	0:0	12	char
op	157:33	0:0	12	*
water	157:34	0:0	12	)
water	157:35	0:0	12	buffer
water	157:41	0:0	12	)
op	157:42	0:0	12	[
water	157:43	0:0	12	bufferoffset
op	157:55	0:0	12	]
water	157:56	0:0	12	)
arg	158:6	158:8	11	-1
op	158:6	0:0	12	-
water	158:7	0:0	12	1
water	158:9	0:0	10	;
water	159:4	0:0	10	}
water	160:3	0:0	8	}
call	161:3	161:54	6	t2pWriteFile
arg	161:16	161:22	7	output
water	161:16	0:0	8	output
arg	161:24	161:40	7	(tdata_t)buffer
water	161:24	0:0	8	(
water	161:25	0:0	8	tdata_t
water	161:32	0:0	8	)
water	161:34	0:0	8	buffer
arg	161:42	161:54	7	bufferoffset
water	161:42	0:0	8	bufferoffset
water	161:55	0:0	6	;
call	162:3	162:19	6	_TIFFfree
arg	162:13	162:19	7	buffer
water	162:13	0:0	8	buffer
water	162:20	0:0	6	;
return	163:3	163:23	6	(bufferoffset)
water	163:9	0:0	7	(
water	163:10	0:0	7	bufferoffset
water	163:22	0:0	7	)
water	164:2	0:0	6	}
water	166:2	0:0	4	(
water	166:3	0:0	4	void
water	166:7	0:0	4	)
water	166:8	0:0	4	0
water	166:9	0:0	4	;
water	167:1	0:0	4	}
if	169:1	196:1	2	(t2p -> pdf_sample == T2P_SAMPLE_NOTHING)
cond	169:4	169:21	3	t2p -> pdf_sample == T2P_SAMPLE_NOTHING
water	169:4	0:0	4	t2p
op	169:7	0:0	4	->
water	169:9	0:0	4	pdf_sample
op	169:19	0:0	4	==
water	169:21	0:0	4	T2P_SAMPLE_NOTHING
stmts	169:40	196:1	3	
water	169:40	0:0	4	{
water	170:2	0:0	4	buffer
op	170:9	0:0	4	=
water	170:11	0:0	4	(
water	170:12	0:0	4	unsigned
water	170:21	0:0	4	char
op	170:25	0:0	4	*
water	170:26	0:0	4	)
call	170:28	170:58	4	_TIFFmalloc
arg	170:40	170:58	5	t2p->tiff_datasize
water	170:40	0:0	6	t2p
op	170:43	0:0	6	->
water	170:45	0:0	6	tiff_datasize
water	170:59	0:0	4	;
if	171:2	179:2	4	(buffer == NULL)
cond	171:5	171:13	5	buffer == NULL
water	171:5	0:0	6	buffer
op	171:11	0:0	6	==
water	171:13	0:0	6	NULL
stmts	171:18	179:2	5	
water	171:18	0:0	6	{
call	172:3	176:23	6	TIFFError
arg	172:13	172:28	7	TIFF2PDF_MODULE
water	172:13	0:0	8	TIFF2PDF_MODULE
arg	173:4	174:66	7	"Can't allocate %lu bytes of memory for ""t2p_readwrite_pdf_image_tile, %s"
water	173:4	0:0	8	"Can't allocate %lu bytes of memory for "
water	174:32	0:0	8	"t2p_readwrite_pdf_image_tile, %s"
arg	175:4	175:38	7	(unsignedlong)t2p->tiff_datasize
water	175:4	0:0	8	(
water	175:5	0:0	8	unsigned
water	175:14	0:0	8	long
water	175:18	0:0	8	)
water	175:20	0:0	8	t2p
op	175:23	0:0	8	->
water	175:25	0:0	8	tiff_datasize
arg	176:4	176:23	7	TIFFFileName(input)
call	176:4	176:22	8	TIFFFileName
arg	176:17	176:22	9	input
water	176:17	0:0	10	input
water	176:24	0:0	6	;
water	177:3	0:0	6	t2p
op	177:6	0:0	6	->
water	177:8	0:0	6	t2p_error
op	177:18	0:0	6	=
water	177:20	0:0	6	T2P_ERR_ERROR
water	177:33	0:0	6	;
return	178:3	178:12	6	(0)
water	178:9	0:0	7	(
water	178:10	0:0	7	0
water	178:11	0:0	7	)
water	179:2	0:0	6	}
water	181:2	0:0	4	read
op	181:7	0:0	4	=
call	181:9	185:21	4	TIFFReadEncodedTile
arg	182:3	182:8	5	input
water	182:3	0:0	6	input
arg	183:3	183:7	5	tile
water	183:3	0:0	6	tile
arg	184:3	184:34	5	(tdata_t)&buffer[bufferoffset]
water	184:3	0:0	6	(
water	184:4	0:0	6	tdata_t
water	184:11	0:0	6	)
op	184:13	0:0	6	&
water	184:14	0:0	6	buffer
op	184:20	0:0	6	[
water	184:21	0:0	6	bufferoffset
op	184:33	0:0	6	]
arg	185:3	185:21	5	t2p->tiff_datasize
water	185:3	0:0	6	t2p
op	185:6	0:0	6	->
water	185:8	0:0	6	tiff_datasize
water	185:22	0:0	4	;
if	186:2	194:2	4	(read == - 1)
cond	186:5	186:12	5	read == - 1
water	186:5	0:0	6	read
op	186:9	0:0	6	==
op	186:11	0:0	6	-
water	186:12	0:0	6	1
stmts	186:14	194:2	5	
water	186:14	0:0	6	{
call	187:3	190:23	6	TIFFError
arg	187:13	187:28	7	TIFF2PDF_MODULE
water	187:13	0:0	8	TIFF2PDF_MODULE
arg	188:4	188:37	7	"Error on decoding tile %u of %s"
water	188:4	0:0	8	"Error on decoding tile %u of %s"
arg	189:4	189:8	7	tile
water	189:4	0:0	8	tile
arg	190:4	190:23	7	TIFFFileName(input)
call	190:4	190:22	8	TIFFFileName
arg	190:17	190:22	9	input
water	190:17	0:0	10	input
water	190:24	0:0	6	;
call	191:3	191:19	6	_TIFFfree
arg	191:13	191:19	7	buffer
water	191:13	0:0	8	buffer
water	191:20	0:0	6	;
water	192:3	0:0	6	t2p
op	192:6	0:0	6	->
water	192:8	0:0	6	t2p_error
op	192:17	0:0	6	=
water	192:18	0:0	6	T2P_ERR_ERROR
water	192:31	0:0	6	;
return	193:3	193:12	6	(0)
water	193:9	0:0	7	(
water	193:10	0:0	7	0
water	193:11	0:0	7	)
water	194:2	0:0	6	}
water	196:1	0:0	4	}
else	196:3	307:1	2
stmts	196:8	307:1	3	
water	196:8	0:0	4	{
if	198:2	249:2	4	(t2p -> pdf_sample == T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG)
cond	198:5	198:24	5	t2p -> pdf_sample == T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
water	198:5	0:0	6	t2p
op	198:8	0:0	6	->
water	198:10	0:0	6	pdf_sample
op	198:21	0:0	6	==
water	198:24	0:0	6	T2P_SAMPLE_PLANAR_SEPARATE_TO_CONTIG
stmts	198:61	249:2	5	
water	198:61	0:0	6	{
water	199:3	0:0	6	septilesize
op	199:14	0:0	6	=
call	199:15	199:33	6	TIFFTileSize
arg	199:28	199:33	7	input
water	199:28	0:0	8	input
water	199:34	0:0	6	;
water	200:3	0:0	6	septilecount
op	200:15	0:0	6	=
call	200:16	200:39	6	TIFFNumberOfTiles
arg	200:34	200:39	7	input
water	200:34	0:0	8	input
water	200:40	0:0	6	;
water	202:3	0:0	6	tilecount
op	202:12	0:0	6	=
water	202:13	0:0	6	septilecount
op	202:25	0:0	6	/
water	202:26	0:0	6	t2p
op	202:29	0:0	6	->
water	202:31	0:0	6	tiff_samplesperpixel
water	202:51	0:0	6	;
water	203:3	0:0	6	buffer
op	203:10	0:0	6	=
water	203:12	0:0	6	(
water	203:13	0:0	6	unsigned
water	203:22	0:0	6	char
op	203:26	0:0	6	*
water	203:27	0:0	6	)
call	203:29	203:59	6	_TIFFmalloc
arg	203:41	203:59	7	t2p->tiff_datasize
water	203:41	0:0	8	t2p
op	203:44	0:0	8	->
water	203:46	0:0	8	tiff_datasize
water	203:60	0:0	6	;
if	204:3	212:3	6	(buffer == NULL)
cond	204:6	204:14	7	buffer == NULL
water	204:6	0:0	8	buffer
op	204:12	0:0	8	==
water	204:14	0:0	8	NULL
stmts	204:19	212:3	7	
water	204:19	0:0	8	{
call	205:4	209:24	8	TIFFError
arg	205:14	205:29	9	TIFF2PDF_MODULE
water	205:14	0:0	10	TIFF2PDF_MODULE
arg	206:5	207:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	206:5	0:0	10	"Can't allocate %lu bytes of memory "
water	207:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	208:5	208:39	9	(unsignedlong)t2p->tiff_datasize
water	208:5	0:0	10	(
water	208:6	0:0	10	unsigned
water	208:15	0:0	10	long
water	208:19	0:0	10	)
water	208:21	0:0	10	t2p
op	208:24	0:0	10	->
water	208:26	0:0	10	tiff_datasize
arg	209:5	209:24	9	TIFFFileName(input)
call	209:5	209:23	10	TIFFFileName
arg	209:18	209:23	11	input
water	209:18	0:0	12	input
water	209:25	0:0	8	;
water	210:4	0:0	8	t2p
op	210:7	0:0	8	->
water	210:9	0:0	8	t2p_error
op	210:19	0:0	8	=
water	210:21	0:0	8	T2P_ERR_ERROR
water	210:34	0:0	8	;
return	211:4	211:13	8	(0)
water	211:10	0:0	9	(
water	211:11	0:0	9	0
water	211:12	0:0	9	)
water	212:3	0:0	8	}
water	213:3	0:0	6	samplebuffer
op	213:16	0:0	6	=
water	213:18	0:0	6	(
water	213:19	0:0	6	unsigned
water	213:28	0:0	6	char
op	213:32	0:0	6	*
water	213:33	0:0	6	)
call	213:35	213:65	6	_TIFFmalloc
arg	213:47	213:65	7	t2p->tiff_datasize
water	213:47	0:0	8	t2p
op	213:50	0:0	8	->
water	213:52	0:0	8	tiff_datasize
water	213:66	0:0	6	;
if	214:3	222:3	6	(samplebuffer == NULL)
cond	214:6	214:20	7	samplebuffer == NULL
water	214:6	0:0	8	samplebuffer
op	214:18	0:0	8	==
water	214:20	0:0	8	NULL
stmts	214:25	222:3	7	
water	214:25	0:0	8	{
call	215:4	219:24	8	TIFFError
arg	215:14	215:29	9	TIFF2PDF_MODULE
water	215:14	0:0	10	TIFF2PDF_MODULE
arg	216:5	217:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	216:5	0:0	10	"Can't allocate %lu bytes of memory "
water	217:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	218:5	218:39	9	(unsignedlong)t2p->tiff_datasize
water	218:5	0:0	10	(
water	218:6	0:0	10	unsigned
water	218:15	0:0	10	long
water	218:19	0:0	10	)
water	218:21	0:0	10	t2p
op	218:24	0:0	10	->
water	218:26	0:0	10	tiff_datasize
arg	219:5	219:24	9	TIFFFileName(input)
call	219:5	219:23	10	TIFFFileName
arg	219:18	219:23	11	input
water	219:18	0:0	12	input
water	219:25	0:0	8	;
water	220:4	0:0	8	t2p
op	220:7	0:0	8	->
water	220:9	0:0	8	t2p_error
op	220:19	0:0	8	=
water	220:21	0:0	8	T2P_ERR_ERROR
water	220:34	0:0	8	;
return	221:4	221:13	8	(0)
water	221:10	0:0	9	(
water	221:11	0:0	9	0
water	221:12	0:0	9	)
water	222:3	0:0	8	}
water	223:3	0:0	6	samplebufferoffset
op	223:21	0:0	6	=
water	223:22	0:0	6	0
water	223:23	0:0	6	;
for	224:3	241:3	6	(i = 0 ;i < t2p -> tiff_samplesperpixel;i ++)
forinit	224:7	224:10	7	i = 0 ;
water	224:7	0:0	8	i
op	224:8	0:0	8	=
water	224:9	0:0	8	0
water	224:10	0:0	8	;
cond	224:11	224:18	7	i < t2p -> tiff_samplesperpixel
water	224:11	0:0	8	i
op	224:12	0:0	8	<
water	224:13	0:0	8	t2p
op	224:16	0:0	8	->
water	224:18	0:0	8	tiff_samplesperpixel
forexpr	224:39	224:40	7	i ++
water	224:39	0:0	8	i
op	224:40	0:0	8	++
stmts	224:43	241:3	7	
water	224:43	0:0	8	{
water	225:4	0:0	8	read
op	225:9	0:0	8	=
call	226:5	229:17	8	TIFFReadEncodedTile
arg	226:25	226:30	9	input
water	226:25	0:0	10	input
arg	227:6	227:24	9	tile+i*tilecount
water	227:6	0:0	10	tile
op	227:11	0:0	10	+
water	227:13	0:0	10	i
op	227:14	0:0	10	*
water	227:15	0:0	10	tilecount
arg	228:6	228:51	9	(tdata_t)&(samplebuffer[samplebufferoffset])
water	228:6	0:0	10	(
water	228:7	0:0	10	tdata_t
water	228:14	0:0	10	)
op	228:16	0:0	10	&
water	228:17	0:0	10	(
water	228:18	0:0	10	samplebuffer
op	228:30	0:0	10	[
water	228:31	0:0	10	samplebufferoffset
op	228:49	0:0	10	]
water	228:50	0:0	10	)
arg	229:6	229:17	9	septilesize
water	229:6	0:0	10	septilesize
water	229:18	0:0	8	;
if	230:4	239:4	8	(read == - 1)
cond	230:7	230:14	9	read == - 1
water	230:7	0:0	10	read
op	230:11	0:0	10	==
op	230:13	0:0	10	-
water	230:14	0:0	10	1
stmts	230:16	239:4	9	
water	230:16	0:0	10	{
call	231:5	234:25	10	TIFFError
arg	231:15	231:30	11	TIFF2PDF_MODULE
water	231:15	0:0	12	TIFF2PDF_MODULE
arg	232:6	232:39	11	"Error on decoding tile %u of %s"
water	232:6	0:0	12	"Error on decoding tile %u of %s"
arg	233:6	233:24	11	tile+i*tilecount
water	233:6	0:0	12	tile
op	233:11	0:0	12	+
water	233:13	0:0	12	i
op	233:14	0:0	12	*
water	233:15	0:0	12	tilecount
arg	234:6	234:25	11	TIFFFileName(input)
call	234:6	234:24	12	TIFFFileName
arg	234:19	234:24	13	input
water	234:19	0:0	14	input
water	234:26	0:0	10	;
call	235:6	235:28	10	_TIFFfree
arg	235:16	235:28	11	samplebuffer
water	235:16	0:0	12	samplebuffer
water	235:29	0:0	10	;
call	236:6	236:22	10	_TIFFfree
arg	236:16	236:22	11	buffer
water	236:16	0:0	12	buffer
water	236:23	0:0	10	;
water	237:5	0:0	10	t2p
op	237:8	0:0	10	->
water	237:10	0:0	10	t2p_error
op	237:19	0:0	10	=
water	237:20	0:0	10	T2P_ERR_ERROR
water	237:33	0:0	10	;
return	238:5	238:14	10	(0)
water	238:11	0:0	11	(
water	238:12	0:0	11	0
water	238:13	0:0	11	)
water	239:4	0:0	10	}
water	240:4	0:0	8	samplebufferoffset
op	240:22	0:0	8	+=
water	240:24	0:0	8	read
water	240:28	0:0	8	;
water	241:3	0:0	8	}
call	242:3	246:22	6	t2p_sample_planar_separate_to_contig
arg	243:4	243:7	7	t2p
water	243:4	0:0	8	t2p
arg	244:4	244:27	7	&(buffer[bufferoffset])
op	244:4	0:0	8	&
water	244:5	0:0	8	(
water	244:6	0:0	8	buffer
op	244:12	0:0	8	[
water	244:13	0:0	8	bufferoffset
op	244:25	0:0	8	]
water	244:26	0:0	8	)
arg	245:4	245:16	7	samplebuffer
water	245:4	0:0	8	samplebuffer
arg	246:4	246:22	7	samplebufferoffset
water	246:4	0:0	8	samplebufferoffset
water	246:23	0:0	6	;
water	247:3	0:0	6	bufferoffset
op	247:15	0:0	6	+=
water	247:17	0:0	6	samplebufferoffset
water	247:35	0:0	6	;
call	248:3	248:25	6	_TIFFfree
arg	248:13	248:25	7	samplebuffer
water	248:13	0:0	8	samplebuffer
water	248:26	0:0	6	;
water	249:2	0:0	6	}
if	251:2	276:2	4	(buffer == NULL)
cond	251:5	251:13	5	buffer == NULL
water	251:5	0:0	6	buffer
op	251:11	0:0	6	==
water	251:13	0:0	6	NULL
stmts	251:18	276:2	5	
water	251:18	0:0	6	{
water	252:3	0:0	6	buffer
op	252:10	0:0	6	=
water	252:12	0:0	6	(
water	252:13	0:0	6	unsigned
water	252:22	0:0	6	char
op	252:26	0:0	6	*
water	252:27	0:0	6	)
call	252:29	252:59	6	_TIFFmalloc
arg	252:41	252:59	7	t2p->tiff_datasize
water	252:41	0:0	8	t2p
op	252:44	0:0	8	->
water	252:46	0:0	8	tiff_datasize
water	252:60	0:0	6	;
if	253:3	261:3	6	(buffer == NULL)
cond	253:6	253:14	7	buffer == NULL
water	253:6	0:0	8	buffer
op	253:12	0:0	8	==
water	253:14	0:0	8	NULL
stmts	253:19	261:3	7	
water	253:19	0:0	8	{
call	254:4	258:24	8	TIFFError
arg	254:14	254:29	9	TIFF2PDF_MODULE
water	254:14	0:0	10	TIFF2PDF_MODULE
arg	255:5	256:78	9	"Can't allocate %lu bytes of memory ""for t2p_readwrite_pdf_image_tile, %s"
water	255:5	0:0	10	"Can't allocate %lu bytes of memory "
water	256:40	0:0	10	"for t2p_readwrite_pdf_image_tile, %s"
arg	257:5	257:39	9	(unsignedlong)t2p->tiff_datasize
water	257:5	0:0	10	(
water	257:6	0:0	10	unsigned
water	257:15	0:0	10	long
water	257:19	0:0	10	)
water	257:21	0:0	10	t2p
op	257:24	0:0	10	->
water	257:26	0:0	10	tiff_datasize
arg	258:5	258:24	9	TIFFFileName(input)
call	258:5	258:23	10	TIFFFileName
arg	258:18	258:23	11	input
water	258:18	0:0	12	input
water	258:25	0:0	8	;
water	259:4	0:0	8	t2p
op	259:7	0:0	8	->
water	259:9	0:0	8	t2p_error
op	259:19	0:0	8	=
water	259:21	0:0	8	T2P_ERR_ERROR
water	259:34	0:0	8	;
return	260:4	260:13	8	(0)
water	260:10	0:0	9	(
water	260:11	0:0	9	0
water	260:12	0:0	9	)
water	261:3	0:0	8	}
water	262:3	0:0	6	read
op	262:8	0:0	6	=
call	262:10	266:22	6	TIFFReadEncodedTile
arg	263:4	263:9	7	input
water	263:4	0:0	8	input
arg	264:4	264:8	7	tile
water	264:4	0:0	8	tile
arg	265:4	265:35	7	(tdata_t)&buffer[bufferoffset]
water	265:4	0:0	8	(
water	265:5	0:0	8	tdata_t
water	265:12	0:0	8	)
op	265:14	0:0	8	&
water	265:15	0:0	8	buffer
op	265:21	0:0	8	[
water	265:22	0:0	8	bufferoffset
op	265:34	0:0	8	]
arg	266:4	266:22	7	t2p->tiff_datasize
water	266:4	0:0	8	t2p
op	266:7	0:0	8	->
water	266:9	0:0	8	tiff_datasize
water	266:23	0:0	6	;
if	267:3	275:3	6	(read == - 1)
cond	267:6	267:13	7	read == - 1
water	267:6	0:0	8	read
op	267:10	0:0	8	==
op	267:12	0:0	8	-
water	267:13	0:0	8	1
stmts	267:15	275:3	7	
water	267:15	0:0	8	{
call	268:4	271:24	8	TIFFError
arg	268:14	268:29	9	TIFF2PDF_MODULE
water	268:14	0:0	10	TIFF2PDF_MODULE
arg	269:5	269:38	9	"Error on decoding tile %u of %s"
water	269:5	0:0	10	"Error on decoding tile %u of %s"
arg	270:5	270:9	9	tile
water	270:5	0:0	10	tile
arg	271:5	271:24	9	TIFFFileName(input)
call	271:5	271:23	10	TIFFFileName
arg	271:18	271:23	11	input
water	271:18	0:0	12	input
water	271:25	0:0	8	;
call	272:4	272:20	8	_TIFFfree
arg	272:14	272:20	9	buffer
water	272:14	0:0	10	buffer
water	272:21	0:0	8	;
water	273:4	0:0	8	t2p
op	273:7	0:0	8	->
water	273:9	0:0	8	t2p_error
op	273:18	0:0	8	=
water	273:19	0:0	8	T2P_ERR_ERROR
water	273:32	0:0	8	;
return	274:4	274:13	8	(0)
water	274:10	0:0	9	(
water	274:11	0:0	9	0
water	274:12	0:0	9	)
water	275:3	0:0	8	}
water	276:2	0:0	6	}
if	278:2	283:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB)
cond	278:5	278:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBA_TO_RGB
water	278:5	0:0	6	t2p
op	278:8	0:0	6	->
water	278:10	0:0	6	pdf_sample
op	278:21	0:0	6	&
water	278:23	0:0	6	T2P_SAMPLE_RGBA_TO_RGB
stmts	278:46	283:2	5	
water	278:46	0:0	6	{
water	279:3	0:0	6	t2p
op	279:6	0:0	6	->
water	279:8	0:0	6	tiff_datasize
op	279:21	0:0	6	=
call	279:22	282:52	6	t2p_sample_rgba_to_rgb
arg	280:4	280:19	7	(tdata_t)buffer
water	280:4	0:0	8	(
water	280:5	0:0	8	tdata_t
water	280:12	0:0	8	)
water	280:13	0:0	8	buffer
arg	281:4	282:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	281:4	0:0	8	t2p
op	281:7	0:0	8	->
water	281:9	0:0	8	tiff_tiles
op	281:19	0:0	8	[
water	281:20	0:0	8	t2p
op	281:23	0:0	8	->
water	281:25	0:0	8	pdf_page
op	281:33	0:0	8	]
op	281:34	0:0	8	.
water	281:35	0:0	8	tiles_tilewidth
op	282:4	0:0	8	*
water	282:5	0:0	8	t2p
op	282:8	0:0	8	->
water	282:10	0:0	8	tiff_tiles
op	282:20	0:0	8	[
water	282:21	0:0	8	t2p
op	282:24	0:0	8	->
water	282:26	0:0	8	pdf_page
op	282:34	0:0	8	]
op	282:35	0:0	8	.
water	282:36	0:0	8	tiles_tilelength
water	282:53	0:0	6	;
water	283:2	0:0	6	}
if	285:2	290:2	4	(t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB)
cond	285:5	285:23	5	t2p -> pdf_sample & T2P_SAMPLE_RGBAA_TO_RGB
water	285:5	0:0	6	t2p
op	285:8	0:0	6	->
water	285:10	0:0	6	pdf_sample
op	285:21	0:0	6	&
water	285:23	0:0	6	T2P_SAMPLE_RGBAA_TO_RGB
stmts	285:47	290:2	5	
water	285:47	0:0	6	{
water	286:3	0:0	6	t2p
op	286:6	0:0	6	->
water	286:8	0:0	6	tiff_datasize
op	286:21	0:0	6	=
call	286:22	289:52	6	t2p_sample_rgbaa_to_rgb
arg	287:4	287:19	7	(tdata_t)buffer
water	287:4	0:0	8	(
water	287:5	0:0	8	tdata_t
water	287:12	0:0	8	)
water	287:13	0:0	8	buffer
arg	288:4	289:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	288:4	0:0	8	t2p
op	288:7	0:0	8	->
water	288:9	0:0	8	tiff_tiles
op	288:19	0:0	8	[
water	288:20	0:0	8	t2p
op	288:23	0:0	8	->
water	288:25	0:0	8	pdf_page
op	288:33	0:0	8	]
op	288:34	0:0	8	.
water	288:35	0:0	8	tiles_tilewidth
op	289:4	0:0	8	*
water	289:5	0:0	8	t2p
op	289:8	0:0	8	->
water	289:10	0:0	8	tiff_tiles
op	289:20	0:0	8	[
water	289:21	0:0	8	t2p
op	289:24	0:0	8	->
water	289:26	0:0	8	pdf_page
op	289:34	0:0	8	]
op	289:35	0:0	8	.
water	289:36	0:0	8	tiles_tilelength
water	289:53	0:0	6	;
water	290:2	0:0	6	}
if	292:2	299:2	4	(t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB)
cond	292:5	292:23	5	t2p -> pdf_sample & T2P_SAMPLE_YCBCR_TO_RGB
water	292:5	0:0	6	t2p
op	292:8	0:0	6	->
water	292:10	0:0	6	pdf_sample
op	292:21	0:0	6	&
water	292:23	0:0	6	T2P_SAMPLE_YCBCR_TO_RGB
stmts	292:47	299:2	5	
water	292:47	0:0	6	{
call	293:3	295:23	6	TIFFError
arg	293:13	293:28	7	TIFF2PDF_MODULE
water	293:13	0:0	8	TIFF2PDF_MODULE
arg	294:4	294:48	7	"No support for YCbCr to RGB in tile for %s"
water	294:4	0:0	8	"No support for YCbCr to RGB in tile for %s"
arg	295:4	295:23	7	TIFFFileName(input)
call	295:4	295:22	8	TIFFFileName
arg	295:17	295:22	9	input
water	295:17	0:0	10	input
water	295:24	0:0	6	;
call	296:3	296:19	6	_TIFFfree
arg	296:13	296:19	7	buffer
water	296:13	0:0	8	buffer
water	296:20	0:0	6	;
water	297:3	0:0	6	t2p
op	297:6	0:0	6	->
water	297:8	0:0	6	t2p_error
op	297:18	0:0	6	=
water	297:20	0:0	6	T2P_ERR_ERROR
water	297:33	0:0	6	;
return	298:3	298:12	6	(0)
water	298:9	0:0	7	(
water	298:10	0:0	7	0
water	298:11	0:0	7	)
water	299:2	0:0	6	}
if	301:2	306:2	4	(t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED)
cond	301:5	301:23	5	t2p -> pdf_sample & T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
water	301:5	0:0	6	t2p
op	301:8	0:0	6	->
water	301:10	0:0	6	pdf_sample
op	301:21	0:0	6	&
water	301:23	0:0	6	T2P_SAMPLE_LAB_SIGNED_TO_UNSIGNED
stmts	301:57	306:2	5	
water	301:57	0:0	6	{
water	302:3	0:0	6	t2p
op	302:6	0:0	6	->
water	302:8	0:0	6	tiff_datasize
op	302:21	0:0	6	=
call	302:22	305:52	6	t2p_sample_lab_signed_to_unsigned
arg	303:4	303:19	7	(tdata_t)buffer
water	303:4	0:0	8	(
water	303:5	0:0	8	tdata_t
water	303:12	0:0	8	)
water	303:13	0:0	8	buffer
arg	304:4	305:52	7	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth*t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	304:4	0:0	8	t2p
op	304:7	0:0	8	->
water	304:9	0:0	8	tiff_tiles
op	304:19	0:0	8	[
water	304:20	0:0	8	t2p
op	304:23	0:0	8	->
water	304:25	0:0	8	pdf_page
op	304:33	0:0	8	]
op	304:34	0:0	8	.
water	304:35	0:0	8	tiles_tilewidth
op	305:4	0:0	8	*
water	305:5	0:0	8	t2p
op	305:8	0:0	8	->
water	305:10	0:0	8	tiff_tiles
op	305:20	0:0	8	[
water	305:21	0:0	8	t2p
op	305:24	0:0	8	->
water	305:26	0:0	8	pdf_page
op	305:34	0:0	8	]
op	305:35	0:0	8	.
water	305:36	0:0	8	tiles_tilelength
water	305:53	0:0	6	;
water	306:2	0:0	6	}
water	307:1	0:0	4	}
if	309:1	316:1	2	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) != 0)
cond	309:4	309:68	3	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) != 0
call	309:4	309:63	4	t2p_tile_is_right_edge
arg	309:27	309:57	5	t2p->tiff_tiles[t2p->pdf_page]
water	309:27	0:0	6	t2p
op	309:30	0:0	6	->
water	309:32	0:0	6	tiff_tiles
op	309:42	0:0	6	[
water	309:43	0:0	6	t2p
op	309:46	0:0	6	->
water	309:48	0:0	6	pdf_page
op	309:56	0:0	6	]
arg	309:59	309:63	5	tile
water	309:59	0:0	6	tile
op	309:65	0:0	4	!=
water	309:68	0:0	4	0
stmts	309:70	316:1	3	
water	309:70	0:0	4	{
call	310:2	315:50	4	t2p_tile_collapse_left
arg	311:3	311:9	5	buffer
water	311:3	0:0	6	buffer
arg	312:3	312:25	5	TIFFTileRowSize(input)
call	312:3	312:24	6	TIFFTileRowSize
arg	312:19	312:24	7	input
water	312:19	0:0	8	input
arg	313:3	313:49	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth
water	313:3	0:0	6	t2p
op	313:6	0:0	6	->
water	313:8	0:0	6	tiff_tiles
op	313:18	0:0	6	[
water	313:19	0:0	6	t2p
op	313:22	0:0	6	->
water	313:24	0:0	6	pdf_page
op	313:32	0:0	6	]
op	313:33	0:0	6	.
water	313:34	0:0	6	tiles_tilewidth
arg	314:3	314:53	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilewidth
water	314:3	0:0	6	t2p
op	314:6	0:0	6	->
water	314:8	0:0	6	tiff_tiles
op	314:18	0:0	6	[
water	314:19	0:0	6	t2p
op	314:22	0:0	6	->
water	314:24	0:0	6	pdf_page
op	314:32	0:0	6	]
op	314:33	0:0	6	.
water	314:34	0:0	6	tiles_edgetilewidth
arg	315:3	315:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	315:3	0:0	6	t2p
op	315:6	0:0	6	->
water	315:8	0:0	6	tiff_tiles
op	315:18	0:0	6	[
water	315:19	0:0	6	t2p
op	315:22	0:0	6	->
water	315:24	0:0	6	pdf_page
op	315:32	0:0	6	]
op	315:33	0:0	6	.
water	315:34	0:0	6	tiles_tilelength
water	315:51	0:0	4	;
water	316:1	0:0	4	}
call	319:1	319:19	2	t2p_disable
arg	319:13	319:19	3	output
water	319:13	0:0	4	output
water	319:20	0:0	2	;
call	320:1	320:64	2	TIFFSetField
arg	320:14	320:20	3	output
water	320:14	0:0	4	output
arg	320:22	320:41	3	TIFFTAG_PHOTOMETRIC
water	320:22	0:0	4	TIFFTAG_PHOTOMETRIC
arg	320:43	320:64	3	t2p->tiff_photometric
water	320:43	0:0	4	t2p
op	320:46	0:0	4	->
water	320:48	0:0	4	tiff_photometric
water	320:65	0:0	2	;
call	321:1	321:68	2	TIFFSetField
arg	321:14	321:20	3	output
water	321:14	0:0	4	output
arg	321:22	321:43	3	TIFFTAG_BITSPERSAMPLE
water	321:22	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	321:45	321:68	3	t2p->tiff_bitspersample
water	321:45	0:0	4	t2p
op	321:48	0:0	4	->
water	321:50	0:0	4	tiff_bitspersample
water	321:69	0:0	2	;
call	322:1	322:72	2	TIFFSetField
arg	322:14	322:20	3	output
water	322:14	0:0	4	output
arg	322:22	322:45	3	TIFFTAG_SAMPLESPERPIXEL
water	322:22	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	322:47	322:72	3	t2p->tiff_samplesperpixel
water	322:47	0:0	4	t2p
op	322:50	0:0	4	->
water	322:52	0:0	4	tiff_samplesperpixel
water	322:73	0:0	2	;
if	323:1	328:1	2	(t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0)
cond	323:4	323:68	3	t2p_tile_is_right_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0
call	323:4	323:63	4	t2p_tile_is_right_edge
arg	323:27	323:57	5	t2p->tiff_tiles[t2p->pdf_page]
water	323:27	0:0	6	t2p
op	323:30	0:0	6	->
water	323:32	0:0	6	tiff_tiles
op	323:42	0:0	6	[
water	323:43	0:0	6	t2p
op	323:46	0:0	6	->
water	323:48	0:0	6	pdf_page
op	323:56	0:0	6	]
arg	323:59	323:63	5	tile
water	323:59	0:0	6	tile
op	323:65	0:0	4	==
water	323:68	0:0	4	0
stmts	323:70	328:1	3	
water	323:70	0:0	4	{
call	324:2	327:49	4	TIFFSetField
arg	325:3	325:9	5	output
water	325:3	0:0	6	output
arg	326:3	326:21	5	TIFFTAG_IMAGEWIDTH
water	326:3	0:0	6	TIFFTAG_IMAGEWIDTH
arg	327:3	327:49	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilewidth
water	327:3	0:0	6	t2p
op	327:6	0:0	6	->
water	327:8	0:0	6	tiff_tiles
op	327:18	0:0	6	[
water	327:19	0:0	6	t2p
op	327:22	0:0	6	->
water	327:24	0:0	6	pdf_page
op	327:32	0:0	6	]
op	327:33	0:0	6	.
water	327:34	0:0	6	tiles_tilewidth
water	327:50	0:0	4	;
water	328:1	0:0	4	}
else	328:3	333:1	2
stmts	328:8	333:1	3	
water	328:8	0:0	4	{
call	329:2	332:53	4	TIFFSetField
arg	330:3	330:9	5	output
water	330:3	0:0	6	output
arg	331:3	331:21	5	TIFFTAG_IMAGEWIDTH
water	331:3	0:0	6	TIFFTAG_IMAGEWIDTH
arg	332:3	332:53	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilewidth
water	332:3	0:0	6	t2p
op	332:6	0:0	6	->
water	332:8	0:0	6	tiff_tiles
op	332:18	0:0	6	[
water	332:19	0:0	6	t2p
op	332:22	0:0	6	->
water	332:24	0:0	6	pdf_page
op	332:32	0:0	6	]
op	332:33	0:0	6	.
water	332:34	0:0	6	tiles_edgetilewidth
water	332:54	0:0	4	;
water	333:1	0:0	4	}
if	334:1	343:1	2	(t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0)
cond	334:4	334:69	3	t2p_tile_is_bottom_edge (t2p -> tiff_tiles [ t2p -> pdf_page ] ,tile ) == 0
call	334:4	334:64	4	t2p_tile_is_bottom_edge
arg	334:28	334:58	5	t2p->tiff_tiles[t2p->pdf_page]
water	334:28	0:0	6	t2p
op	334:31	0:0	6	->
water	334:33	0:0	6	tiff_tiles
op	334:43	0:0	6	[
water	334:44	0:0	6	t2p
op	334:47	0:0	6	->
water	334:49	0:0	6	pdf_page
op	334:57	0:0	6	]
arg	334:60	334:64	5	tile
water	334:60	0:0	6	tile
op	334:66	0:0	4	==
water	334:69	0:0	4	0
stmts	334:71	343:1	3	
water	334:71	0:0	4	{
call	335:2	338:50	4	TIFFSetField
arg	336:3	336:9	5	output
water	336:3	0:0	6	output
arg	337:3	337:22	5	TIFFTAG_IMAGELENGTH
water	337:3	0:0	6	TIFFTAG_IMAGELENGTH
arg	338:3	338:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	338:3	0:0	6	t2p
op	338:6	0:0	6	->
water	338:8	0:0	6	tiff_tiles
op	338:18	0:0	6	[
water	338:19	0:0	6	t2p
op	338:22	0:0	6	->
water	338:24	0:0	6	pdf_page
op	338:32	0:0	6	]
op	338:33	0:0	6	.
water	338:34	0:0	6	tiles_tilelength
water	338:51	0:0	4	;
call	339:2	342:50	4	TIFFSetField
arg	340:3	340:9	5	output
water	340:3	0:0	6	output
arg	341:3	341:23	5	TIFFTAG_ROWSPERSTRIP
water	341:3	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	342:3	342:50	5	t2p->tiff_tiles[t2p->pdf_page].tiles_tilelength
water	342:3	0:0	6	t2p
op	342:6	0:0	6	->
water	342:8	0:0	6	tiff_tiles
op	342:18	0:0	6	[
water	342:19	0:0	6	t2p
op	342:22	0:0	6	->
water	342:24	0:0	6	pdf_page
op	342:32	0:0	6	]
op	342:33	0:0	6	.
water	342:34	0:0	6	tiles_tilelength
water	342:51	0:0	4	;
water	343:1	0:0	4	}
else	343:3	352:1	2
stmts	343:8	352:1	3	
water	343:8	0:0	4	{
call	344:2	347:54	4	TIFFSetField
arg	345:3	345:9	5	output
water	345:3	0:0	6	output
arg	346:3	346:22	5	TIFFTAG_IMAGELENGTH
water	346:3	0:0	6	TIFFTAG_IMAGELENGTH
arg	347:3	347:54	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilelength
water	347:3	0:0	6	t2p
op	347:6	0:0	6	->
water	347:8	0:0	6	tiff_tiles
op	347:18	0:0	6	[
water	347:19	0:0	6	t2p
op	347:22	0:0	6	->
water	347:24	0:0	6	pdf_page
op	347:32	0:0	6	]
op	347:33	0:0	6	.
water	347:34	0:0	6	tiles_edgetilelength
water	347:55	0:0	4	;
call	348:2	351:54	4	TIFFSetField
arg	349:3	349:9	5	output
water	349:3	0:0	6	output
arg	350:3	350:23	5	TIFFTAG_ROWSPERSTRIP
water	350:3	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	351:3	351:54	5	t2p->tiff_tiles[t2p->pdf_page].tiles_edgetilelength
water	351:3	0:0	6	t2p
op	351:6	0:0	6	->
water	351:8	0:0	6	tiff_tiles
op	351:18	0:0	6	[
water	351:19	0:0	6	t2p
op	351:22	0:0	6	->
water	351:24	0:0	6	pdf_page
op	351:32	0:0	6	]
op	351:33	0:0	6	.
water	351:34	0:0	6	tiles_edgetilelength
water	351:55	0:0	4	;
water	352:1	0:0	4	}
call	353:1	353:63	2	TIFFSetField
arg	353:14	353:20	3	output
water	353:14	0:0	4	output
arg	353:22	353:42	3	TIFFTAG_PLANARCONFIG
water	353:22	0:0	4	TIFFTAG_PLANARCONFIG
arg	353:44	353:63	3	PLANARCONFIG_CONTIG
water	353:44	0:0	4	PLANARCONFIG_CONTIG
water	353:64	0:0	2	;
call	354:1	354:58	2	TIFFSetField
arg	354:14	354:20	3	output
water	354:14	0:0	4	output
arg	354:22	354:39	3	TIFFTAG_FILLORDER
water	354:22	0:0	4	TIFFTAG_FILLORDER
arg	354:41	354:58	3	FILLORDER_MSB2LSB
water	354:41	0:0	4	FILLORDER_MSB2LSB
water	354:59	0:0	2	;
switch	356:1	418:1	2	(t2p -> pdf_compression)
cond	356:8	356:13	3	t2p -> pdf_compression
water	356:8	0:0	4	t2p
op	356:11	0:0	4	->
water	356:13	0:0	4	pdf_compression
stmts	356:29	418:1	3	
water	356:29	0:0	4	{
label	357:1	357:23	4	case T2P_COMPRESS_NONE :
call	358:2	358:60	4	TIFFSetField
arg	358:15	358:21	5	output
water	358:15	0:0	6	output
arg	358:23	358:42	5	TIFFTAG_COMPRESSION
water	358:23	0:0	6	TIFFTAG_COMPRESSION
arg	358:44	358:60	5	COMPRESSION_NONE
water	358:44	0:0	6	COMPRESSION_NONE
water	358:61	0:0	4	;
break	359:2	359:7	4	
label	361:1	361:21	4	case T2P_COMPRESS_G4 :
call	362:2	362:65	4	TIFFSetField
arg	362:15	362:21	5	output
water	362:15	0:0	6	output
arg	362:23	362:42	5	TIFFTAG_COMPRESSION
water	362:23	0:0	6	TIFFTAG_COMPRESSION
arg	362:44	362:65	5	COMPRESSION_CCITTFAX4
water	362:44	0:0	6	COMPRESSION_CCITTFAX4
water	362:66	0:0	4	;
break	363:2	363:7	4	
label	366:1	366:23	4	case T2P_COMPRESS_JPEG :
if	367:2	377:2	4	(t2p -> tiff_photometric == PHOTOMETRIC_YCBCR)
cond	367:6	367:29	5	t2p -> tiff_photometric == PHOTOMETRIC_YCBCR
water	367:6	0:0	6	t2p
op	367:9	0:0	6	->
water	367:11	0:0	6	tiff_photometric
op	367:27	0:0	6	==
water	367:29	0:0	6	PHOTOMETRIC_YCBCR
stmts	367:48	377:2	5	
water	367:48	0:0	6	{
decl	368:3	368:26	6	uint16	hor
op	368:14	0:0	6	=
water	368:16	0:0	6	0
water	368:17	0:0	6	,
decl	368:3	368:26	6	uint16	ver
op	368:23	0:0	6	=
water	368:25	0:0	6	0
if	369:3	373:3	6	(TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0)
cond	369:7	369:66	7	TIFFGetField (input ,TIFFTAG_YCBCRSUBSAMPLING ,& hor ,& ver ) != 0
call	369:7	369:63	8	TIFFGetField
arg	369:20	369:25	9	input
water	369:20	0:0	10	input
arg	369:27	369:51	9	TIFFTAG_YCBCRSUBSAMPLING
water	369:27	0:0	10	TIFFTAG_YCBCRSUBSAMPLING
arg	369:53	369:57	9	&hor
op	369:53	0:0	10	&
water	369:54	0:0	10	hor
arg	369:59	369:63	9	&ver
op	369:59	0:0	10	&
water	369:60	0:0	10	ver
op	369:64	0:0	8	!=
water	369:66	0:0	8	0
stmts	369:69	373:3	7	
water	369:69	0:0	8	{
if	370:4	372:4	8	(hor != 0 && ver != 0)
cond	370:8	370:27	9	hor != 0 && ver != 0
water	370:8	0:0	10	hor
op	370:12	0:0	10	!=
water	370:15	0:0	10	0
op	370:17	0:0	10	&&
water	370:20	0:0	10	ver
op	370:24	0:0	10	!=
water	370:27	0:0	10	0
stmts	370:30	372:4	9	
water	370:30	0:0	10	{
call	371:5	371:60	10	TIFFSetField
arg	371:18	371:24	11	output
water	371:18	0:0	12	output
arg	371:26	371:50	11	TIFFTAG_YCBCRSUBSAMPLING
water	371:26	0:0	12	TIFFTAG_YCBCRSUBSAMPLING
arg	371:52	371:55	11	hor
water	371:52	0:0	12	hor
arg	371:57	371:60	11	ver
water	371:57	0:0	12	ver
water	371:61	0:0	10	;
water	372:4	0:0	10	}
water	373:3	0:0	8	}
if	374:3	376:3	6	(TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0)
cond	374:6	374:66	7	TIFFGetField (input ,TIFFTAG_REFERENCEBLACKWHITE ,& xfloatp ) != 0
call	374:6	374:63	8	TIFFGetField
arg	374:19	374:24	9	input
water	374:19	0:0	10	input
arg	374:26	374:53	9	TIFFTAG_REFERENCEBLACKWHITE
water	374:26	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	374:55	374:63	9	&xfloatp
op	374:55	0:0	10	&
water	374:56	0:0	10	xfloatp
op	374:64	0:0	8	!=
water	374:66	0:0	8	0
stmts	374:68	376:3	7	
water	374:68	0:0	8	{
call	375:4	375:61	8	TIFFSetField
arg	375:17	375:23	9	output
water	375:17	0:0	10	output
arg	375:25	375:52	9	TIFFTAG_REFERENCEBLACKWHITE
water	375:25	0:0	10	TIFFTAG_REFERENCEBLACKWHITE
arg	375:54	375:61	9	xfloatp
water	375:54	0:0	10	xfloatp
water	375:62	0:0	8	;
water	376:3	0:0	8	}
water	377:2	0:0	6	}
call	378:2	378:60	4	TIFFSetField
arg	378:15	378:21	5	output
water	378:15	0:0	6	output
arg	378:23	378:42	5	TIFFTAG_COMPRESSION
water	378:23	0:0	6	TIFFTAG_COMPRESSION
arg	378:44	378:60	5	COMPRESSION_JPEG
water	378:44	0:0	6	COMPRESSION_JPEG
water	378:61	0:0	4	;
call	379:2	379:48	4	TIFFSetField
arg	379:15	379:21	5	output
water	379:15	0:0	6	output
arg	379:23	379:45	5	TIFFTAG_JPEGTABLESMODE
water	379:23	0:0	6	TIFFTAG_JPEGTABLESMODE
arg	379:47	379:48	5	0
water	379:47	0:0	6	0
water	379:49	0:0	4	;
if	380:2	387:2	4	(t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB ))
cond	380:5	380:51	5	t2p -> pdf_colorspace & ( T2P_CS_RGB | T2P_CS_LAB )
water	380:5	0:0	6	t2p
op	380:8	0:0	6	->
water	380:10	0:0	6	pdf_colorspace
op	380:25	0:0	6	&
water	380:27	0:0	6	(
water	380:28	0:0	6	T2P_CS_RGB
op	380:39	0:0	6	|
water	380:41	0:0	6	T2P_CS_LAB
water	380:51	0:0	6	)
stmts	380:53	387:2	5	
water	380:53	0:0	6	{
call	381:3	381:62	6	TIFFSetField
arg	381:16	381:22	7	output
water	381:16	0:0	8	output
arg	381:24	381:43	7	TIFFTAG_PHOTOMETRIC
water	381:24	0:0	8	TIFFTAG_PHOTOMETRIC
arg	381:45	381:62	7	PHOTOMETRIC_YCBCR
water	381:45	0:0	8	PHOTOMETRIC_YCBCR
water	381:63	0:0	6	;
if	382:3	384:3	6	(t2p -> tiff_photometric != PHOTOMETRIC_YCBCR)
cond	382:6	382:31	7	t2p -> tiff_photometric != PHOTOMETRIC_YCBCR
water	382:6	0:0	8	t2p
op	382:9	0:0	8	->
water	382:11	0:0	8	tiff_photometric
op	382:28	0:0	8	!=
water	382:31	0:0	8	PHOTOMETRIC_YCBCR
stmts	382:49	384:3	7	
water	382:49	0:0	8	{
call	383:4	383:65	8	TIFFSetField
arg	383:17	383:23	9	output
water	383:17	0:0	10	output
arg	383:25	383:46	9	TIFFTAG_JPEGCOLORMODE
water	383:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	383:48	383:65	9	JPEGCOLORMODE_RGB
water	383:48	0:0	10	JPEGCOLORMODE_RGB
water	383:66	0:0	8	;
water	384:3	0:0	8	}
else	384:5	386:3	6
stmts	384:10	386:3	7	
water	384:10	0:0	8	{
call	385:4	385:65	8	TIFFSetField
arg	385:17	385:23	9	output
water	385:17	0:0	10	output
arg	385:25	385:46	9	TIFFTAG_JPEGCOLORMODE
water	385:25	0:0	10	TIFFTAG_JPEGCOLORMODE
arg	385:48	385:65	9	JPEGCOLORMODE_RAW
water	385:48	0:0	10	JPEGCOLORMODE_RAW
water	385:66	0:0	8	;
water	386:3	0:0	8	}
water	387:2	0:0	6	}
if	388:2	390:2	4	(t2p -> pdf_colorspace & T2P_CS_GRAY)
cond	388:5	388:27	5	t2p -> pdf_colorspace & T2P_CS_GRAY
water	388:5	0:0	6	t2p
op	388:8	0:0	6	->
water	388:10	0:0	6	pdf_colorspace
op	388:25	0:0	6	&
water	388:27	0:0	6	T2P_CS_GRAY
stmts	388:39	390:2	5	
water	388:39	0:0	6	{
water	389:3	0:0	6	(
water	389:4	0:0	6	void
water	389:8	0:0	6	)
water	389:9	0:0	6	0
water	389:10	0:0	6	;
water	390:2	0:0	6	}
if	391:2	393:2	4	(t2p -> pdf_colorspace & T2P_CS_CMYK)
cond	391:5	391:27	5	t2p -> pdf_colorspace & T2P_CS_CMYK
water	391:5	0:0	6	t2p
op	391:8	0:0	6	->
water	391:10	0:0	6	pdf_colorspace
op	391:25	0:0	6	&
water	391:27	0:0	6	T2P_CS_CMYK
stmts	391:39	393:2	5	
water	391:39	0:0	6	{
water	392:3	0:0	6	(
water	392:4	0:0	6	void
water	392:8	0:0	6	)
water	392:9	0:0	6	0
water	392:10	0:0	6	;
water	393:2	0:0	6	}
if	394:2	398:2	4	(t2p -> pdf_defaultcompressionquality != 0)
cond	394:5	394:43	5	t2p -> pdf_defaultcompressionquality != 0
water	394:5	0:0	6	t2p
op	394:8	0:0	6	->
water	394:10	0:0	6	pdf_defaultcompressionquality
op	394:40	0:0	6	!=
water	394:43	0:0	6	0
stmts	394:45	398:2	5	
water	394:45	0:0	6	{
call	395:3	397:38	6	TIFFSetField
arg	395:16	395:22	7	output
water	395:16	0:0	8	output
arg	396:4	396:23	7	TIFFTAG_JPEGQUALITY
water	396:4	0:0	8	TIFFTAG_JPEGQUALITY
arg	397:4	397:38	7	t2p->pdf_defaultcompressionquality
water	397:4	0:0	8	t2p
op	397:7	0:0	8	->
water	397:9	0:0	8	pdf_defaultcompressionquality
water	397:39	0:0	6	;
water	398:2	0:0	6	}
break	399:2	399:7	4	
label	402:1	402:22	4	case T2P_COMPRESS_ZIP :
call	403:2	403:63	4	TIFFSetField
arg	403:15	403:21	5	output
water	403:15	0:0	6	output
arg	403:23	403:42	5	TIFFTAG_COMPRESSION
water	403:23	0:0	6	TIFFTAG_COMPRESSION
arg	403:44	403:63	5	COMPRESSION_DEFLATE
water	403:44	0:0	6	COMPRESSION_DEFLATE
water	403:64	0:0	4	;
if	404:2	408:2	4	(t2p -> pdf_defaultcompressionquality % 100 != 0)
cond	404:5	404:47	5	t2p -> pdf_defaultcompressionquality % 100 != 0
water	404:5	0:0	6	t2p
op	404:8	0:0	6	->
water	404:10	0:0	6	pdf_defaultcompressionquality
op	404:39	0:0	6	%
water	404:40	0:0	6	100
op	404:44	0:0	6	!=
water	404:47	0:0	6	0
stmts	404:49	408:2	5	
water	404:49	0:0	6	{
call	405:3	407:44	6	TIFFSetField
arg	405:16	405:22	7	output
water	405:16	0:0	8	output
arg	406:4	406:21	7	TIFFTAG_PREDICTOR
water	406:4	0:0	8	TIFFTAG_PREDICTOR
arg	407:4	407:44	7	t2p->pdf_defaultcompressionquality%100
water	407:4	0:0	8	t2p
op	407:7	0:0	8	->
water	407:9	0:0	8	pdf_defaultcompressionquality
op	407:39	0:0	8	%
water	407:41	0:0	8	100
water	407:45	0:0	6	;
water	408:2	0:0	6	}
if	409:2	413:2	4	(t2p -> pdf_defaultcompressionquality / 100 != 0)
cond	409:5	409:47	5	t2p -> pdf_defaultcompressionquality / 100 != 0
water	409:5	0:0	6	t2p
op	409:8	0:0	6	->
water	409:10	0:0	6	pdf_defaultcompressionquality
op	409:39	0:0	6	/
water	409:40	0:0	6	100
op	409:44	0:0	6	!=
water	409:47	0:0	6	0
stmts	409:49	413:2	5	
water	409:49	0:0	6	{
call	410:3	412:46	6	TIFFSetField
arg	410:16	410:22	7	output
water	410:16	0:0	8	output
arg	411:4	411:22	7	TIFFTAG_ZIPQUALITY
water	411:4	0:0	8	TIFFTAG_ZIPQUALITY
arg	412:4	412:46	7	(t2p->pdf_defaultcompressionquality/100)
water	412:4	0:0	8	(
water	412:5	0:0	8	t2p
op	412:8	0:0	8	->
water	412:10	0:0	8	pdf_defaultcompressionquality
op	412:40	0:0	8	/
water	412:42	0:0	8	100
water	412:45	0:0	8	)
water	412:47	0:0	6	;
water	413:2	0:0	6	}
break	414:2	414:7	4	
label	416:1	416:8	4	default :
break	417:2	417:7	4	
water	418:1	0:0	4	}
call	420:1	420:18	2	t2p_enable
arg	420:12	420:18	3	output
water	420:12	0:0	4	output
water	420:19	0:0	2	;
water	421:1	0:0	2	t2p
op	421:4	0:0	2	->
water	421:6	0:0	2	outputwritten
op	421:20	0:0	2	=
water	421:22	0:0	2	0
water	421:23	0:0	2	;
water	422:1	0:0	2	bufferoffset
op	422:14	0:0	2	=
call	422:16	423:31	2	TIFFWriteEncodedStrip
arg	422:38	422:44	3	output
water	422:38	0:0	4	output
arg	422:46	422:58	3	(tstrip_t)0
water	422:46	0:0	4	(
water	422:47	0:0	4	tstrip_t
water	422:55	0:0	4	)
water	422:57	0:0	4	0
arg	422:60	422:66	3	buffer
water	422:60	0:0	4	buffer
arg	423:10	423:31	3	TIFFStripSize(output)
call	423:10	423:30	4	TIFFStripSize
arg	423:24	423:30	5	output
water	423:24	0:0	6	output
water	423:32	0:0	2	;
if	424:1	427:1	2	(buffer != NULL)
cond	424:5	424:15	3	buffer != NULL
water	424:5	0:0	4	buffer
op	424:12	0:0	4	!=
water	424:15	0:0	4	NULL
stmts	424:21	427:1	3	
water	424:21	0:0	4	{
call	425:2	425:18	4	_TIFFfree
arg	425:12	425:18	5	buffer
water	425:12	0:0	6	buffer
water	425:19	0:0	4	;
water	426:2	0:0	4	buffer
op	426:9	0:0	4	=
water	426:11	0:0	4	NULL
water	426:15	0:0	4	;
water	427:1	0:0	4	}
if	428:1	434:1	2	(bufferoffset == - 1)
cond	428:5	428:22	3	bufferoffset == - 1
water	428:5	0:0	4	bufferoffset
op	428:18	0:0	4	==
op	428:21	0:0	4	-
water	428:22	0:0	4	1
stmts	428:25	434:1	3	
water	428:25	0:0	4	{
call	429:2	431:25	4	TIFFError
arg	429:12	429:27	5	TIFF2PDF_MODULE
water	429:12	0:0	6	TIFF2PDF_MODULE
arg	430:5	430:50	5	"Error writing encoded tile to output PDF %s"
water	430:5	0:0	6	"Error writing encoded tile to output PDF %s"
arg	431:5	431:25	5	TIFFFileName(output)
call	431:5	431:24	6	TIFFFileName
arg	431:18	431:24	7	output
water	431:18	0:0	8	output
water	431:26	0:0	4	;
water	432:2	0:0	4	t2p
op	432:5	0:0	4	->
water	432:7	0:0	4	t2p_error
op	432:17	0:0	4	=
water	432:19	0:0	4	T2P_ERR_ERROR
water	432:32	0:0	4	;
return	433:2	433:11	4	(0)
water	433:8	0:0	5	(
water	433:9	0:0	5	0
water	433:10	0:0	5	)
water	434:1	0:0	4	}
water	436:1	0:0	2	written
op	436:9	0:0	2	=
water	436:11	0:0	2	t2p
op	436:14	0:0	2	->
water	436:16	0:0	2	outputwritten
water	436:29	0:0	2	;
return	438:1	438:16	2	(written)
water	438:7	0:0	3	(
water	438:8	0:0	3	written
water	438:15	0:0	3	)

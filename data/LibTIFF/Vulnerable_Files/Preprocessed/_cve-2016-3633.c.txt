func	2:0	36:0	0	static void	setrow
params	3:6	0:0	1	
param	3:7	3:17	2	uint8 *	row
param	3:19	3:31	2	uint32	nrows
param	3:33	3:52	2	const uint8 *	rows[]
stmnts	0:0	35:4	1	
decl	5:4	5:12	2	uint32	x
decl	6:4	6:37	2	uint32	area
op	6:16	0:0	2	=
water	6:18	0:0	2	nrows
op	6:24	0:0	2	*
water	6:26	0:0	2	filterWidth
for	7:4	35:4	2	(x = 0 ;x < tnw;x ++)
forinit	7:9	7:14	3	x = 0 ;
water	7:9	0:0	4	x
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	x < tnw
water	7:16	0:0	4	x
op	7:18	0:0	4	<
water	7:20	0:0	4	tnw
forexpr	7:25	7:26	3	x ++
water	7:25	0:0	4	x
op	7:26	0:0	4	++
stmts	7:30	35:4	3	
water	7:30	0:0	4	{
decl	8:1	8:23	4	uint32	mask0
op	8:14	0:0	4	=
water	8:16	0:0	4	src0
op	8:20	0:0	4	[
water	8:21	0:0	4	x
op	8:22	0:0	4	]
decl	9:1	9:20	4	uint32	fw
op	9:11	0:0	4	=
water	9:13	0:0	4	src1
op	9:17	0:0	4	[
water	9:18	0:0	4	x
op	9:19	0:0	4	]
decl	10:1	10:23	4	uint32	mask1
op	10:14	0:0	4	=
water	10:16	0:0	4	src1
op	10:20	0:0	4	[
water	10:21	0:0	4	x
op	10:22	0:0	4	]
decl	11:1	11:23	4	uint32	off
op	11:12	0:0	4	=
water	11:14	0:0	4	rowoff
op	11:20	0:0	4	[
water	11:21	0:0	4	x
op	11:22	0:0	4	]
decl	12:1	12:15	4	uint32	acc
op	12:12	0:0	4	=
water	12:14	0:0	4	0
decl	13:1	13:12	4	uint32	y
water	13:9	0:0	4	,
decl	13:1	13:12	4	uint32	i
for	14:1	33:1	4	(y = 0 ;y < nrows;y ++)
forinit	14:6	14:11	5	y = 0 ;
water	14:6	0:0	6	y
op	14:8	0:0	6	=
water	14:10	0:0	6	0
water	14:11	0:0	6	;
cond	14:13	14:17	5	y < nrows
water	14:13	0:0	6	y
op	14:15	0:0	6	<
water	14:17	0:0	6	nrows
forexpr	14:24	14:25	5	y ++
water	14:24	0:0	6	y
op	14:25	0:0	6	++
stmts	14:29	33:1	5	
water	14:29	0:0	6	{
decl	15:5	15:37	6	const uint8	*src
op	15:22	0:0	6	=
water	15:24	0:0	6	rows
op	15:28	0:0	6	[
water	15:29	0:0	6	y
op	15:30	0:0	6	]
op	15:32	0:0	6	+
water	15:34	0:0	6	off
water	16:5	0:0	6	acc
op	16:9	0:0	6	+=
water	16:12	0:0	6	bits
op	16:16	0:0	6	[
op	16:17	0:0	6	*
water	16:18	0:0	6	src
op	16:21	0:0	6	++
op	16:24	0:0	6	&
water	16:26	0:0	6	mask0
op	16:31	0:0	6	]
water	16:32	0:0	6	;
switch	17:5	31:5	6	(fw)
cond	17:13	17:13	7	fw
water	17:13	0:0	8	fw
stmts	17:17	31:5	7	
water	17:17	0:0	8	{
label	18:5	18:12	8	default :
for	19:2	20:25	8	(i = fw ;i > 8;i --)
forinit	19:7	19:13	9	i = fw ;
water	19:7	0:0	10	i
op	19:9	0:0	10	=
water	19:11	0:0	10	fw
water	19:13	0:0	10	;
cond	19:15	19:19	9	i > 8
water	19:15	0:0	10	i
op	19:17	0:0	10	>
water	19:19	0:0	10	8
forexpr	19:22	19:23	9	i --
water	19:22	0:0	10	i
op	19:23	0:0	10	--
stmts	20:6	20:25	9	
water	20:6	0:0	10	acc
op	20:10	0:0	10	+=
water	20:13	0:0	10	bits
op	20:17	0:0	10	[
op	20:18	0:0	10	*
water	20:19	0:0	10	src
op	20:22	0:0	10	++
op	20:24	0:0	10	]
water	20:25	0:0	10	;
label	22:5	22:11	8	case 8 :
water	22:13	0:0	8	acc
op	22:17	0:0	8	+=
water	22:20	0:0	8	bits
op	22:24	0:0	8	[
op	22:25	0:0	8	*
water	22:26	0:0	8	src
op	22:29	0:0	8	++
op	22:31	0:0	8	]
water	22:32	0:0	8	;
label	23:5	23:11	8	case 7 :
water	23:13	0:0	8	acc
op	23:17	0:0	8	+=
water	23:20	0:0	8	bits
op	23:24	0:0	8	[
op	23:25	0:0	8	*
water	23:26	0:0	8	src
op	23:29	0:0	8	++
op	23:31	0:0	8	]
water	23:32	0:0	8	;
label	24:5	24:11	8	case 6 :
water	24:13	0:0	8	acc
op	24:17	0:0	8	+=
water	24:20	0:0	8	bits
op	24:24	0:0	8	[
op	24:25	0:0	8	*
water	24:26	0:0	8	src
op	24:29	0:0	8	++
op	24:31	0:0	8	]
water	24:32	0:0	8	;
label	25:5	25:11	8	case 5 :
water	25:13	0:0	8	acc
op	25:17	0:0	8	+=
water	25:20	0:0	8	bits
op	25:24	0:0	8	[
op	25:25	0:0	8	*
water	25:26	0:0	8	src
op	25:29	0:0	8	++
op	25:31	0:0	8	]
water	25:32	0:0	8	;
label	26:5	26:11	8	case 4 :
water	26:13	0:0	8	acc
op	26:17	0:0	8	+=
water	26:20	0:0	8	bits
op	26:24	0:0	8	[
op	26:25	0:0	8	*
water	26:26	0:0	8	src
op	26:29	0:0	8	++
op	26:31	0:0	8	]
water	26:32	0:0	8	;
label	27:5	27:11	8	case 3 :
water	27:13	0:0	8	acc
op	27:17	0:0	8	+=
water	27:20	0:0	8	bits
op	27:24	0:0	8	[
op	27:25	0:0	8	*
water	27:26	0:0	8	src
op	27:29	0:0	8	++
op	27:31	0:0	8	]
water	27:32	0:0	8	;
label	28:5	28:11	8	case 2 :
water	28:13	0:0	8	acc
op	28:17	0:0	8	+=
water	28:20	0:0	8	bits
op	28:24	0:0	8	[
op	28:25	0:0	8	*
water	28:26	0:0	8	src
op	28:29	0:0	8	++
op	28:31	0:0	8	]
water	28:32	0:0	8	;
label	29:5	29:11	8	case 1 :
water	29:13	0:0	8	acc
op	29:17	0:0	8	+=
water	29:20	0:0	8	bits
op	29:24	0:0	8	[
op	29:25	0:0	8	*
water	29:26	0:0	8	src
op	29:29	0:0	8	++
op	29:31	0:0	8	]
water	29:32	0:0	8	;
label	30:5	30:11	8	case 0 :
break	30:13	30:18	8	
water	31:5	0:0	8	}
water	32:5	0:0	6	acc
op	32:9	0:0	6	+=
water	32:12	0:0	6	bits
op	32:16	0:0	6	[
op	32:17	0:0	6	*
water	32:18	0:0	6	src
op	32:22	0:0	6	&
water	32:24	0:0	6	mask1
op	32:29	0:0	6	]
water	32:30	0:0	6	;
water	33:1	0:0	6	}
op	34:1	0:0	4	*
water	34:2	0:0	4	row
op	34:5	0:0	4	++
op	34:8	0:0	4	=
water	34:10	0:0	4	cmap
op	34:14	0:0	4	[
water	34:15	0:0	4	(
water	34:16	0:0	4	255
op	34:19	0:0	4	*
water	34:20	0:0	4	acc
water	34:23	0:0	4	)
op	34:24	0:0	4	/
water	34:25	0:0	4	area
op	34:29	0:0	4	]
water	34:30	0:0	4	;
water	35:4	0:0	4	}

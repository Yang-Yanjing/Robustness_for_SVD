func	2:0	38:0	0	static int	ZIPEncode
params	3:9	0:0	1	
param	3:10	3:19	2	TIFF *	tif
param	3:21	3:30	2	uint8 *	bp
param	3:32	3:43	2	tmsize_t	cc
param	3:45	3:53	2	uint16	s
stmnts	5:1	37:11	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	char
water	5:19	0:0	2	module
op	5:25	0:0	2	[
op	5:26	0:0	2	]
op	5:28	0:0	2	=
water	5:30	0:0	2	"ZIPEncode"
water	5:41	0:0	2	;
decl	6:1	6:33	2	ZIPState	*sp
op	6:14	0:0	2	=
call	6:16	6:32	3	EncoderState
arg	6:29	6:32	4	tif
water	6:29	0:0	5	tif
call	8:1	8:18	2	assert
arg	8:8	8:18	3	sp!=NULL
water	8:8	0:0	4	sp
op	8:11	0:0	4	!=
water	8:14	0:0	4	NULL
water	8:19	0:0	2	;
call	9:1	9:39	2	assert
arg	9:8	9:39	3	sp->state==ZSTATE_INIT_ENCODE
water	9:8	0:0	4	sp
op	9:10	0:0	4	->
water	9:12	0:0	4	state
op	9:18	0:0	4	==
water	9:21	0:0	4	ZSTATE_INIT_ENCODE
water	9:40	0:0	2	;
water	11:1	0:0	2	(
water	11:2	0:0	2	void
water	11:6	0:0	2	)
water	11:8	0:0	2	s
water	11:9	0:0	2	;
water	12:1	0:0	2	sp
op	12:3	0:0	2	->
water	12:5	0:0	2	stream
op	12:11	0:0	2	.
water	12:12	0:0	2	next_in
op	12:20	0:0	2	=
water	12:22	0:0	2	bp
water	12:24	0:0	2	;
call	13:1	13:38	2	assert
arg	13:8	13:38	3	sizeof(sp->stream.avail_in)==4
op	13:8	0:0	4	sizeof
water	13:14	0:0	4	(
water	13:15	0:0	4	sp
op	13:17	0:0	4	->
water	13:19	0:0	4	stream
op	13:25	0:0	4	.
water	13:26	0:0	4	avail_in
water	13:34	0:0	4	)
op	13:35	0:0	4	==
water	13:37	0:0	4	4
water	13:39	0:0	2	;
water	17:1	0:0	2	sp
op	17:3	0:0	2	->
water	17:5	0:0	2	stream
op	17:11	0:0	2	.
water	17:12	0:0	2	avail_in
op	17:21	0:0	2	=
water	17:23	0:0	2	(
water	17:24	0:0	2	uInt
water	17:28	0:0	2	)
water	17:30	0:0	2	cc
water	17:32	0:0	2	;
if	18:1	22:1	2	(( tmsize_t ) sp -> stream . avail_in != cc)
cond	18:5	18:38	3	( tmsize_t ) sp -> stream . avail_in != cc
water	18:5	0:0	4	(
water	18:6	0:0	4	tmsize_t
water	18:14	0:0	4	)
water	18:15	0:0	4	sp
op	18:17	0:0	4	->
water	18:19	0:0	4	stream
op	18:25	0:0	4	.
water	18:26	0:0	4	avail_in
op	18:35	0:0	4	!=
water	18:38	0:0	4	cc
stmts	19:1	22:1	3	
water	19:1	0:0	4	{
call	20:2	20:85	4	TIFFErrorExt
arg	20:15	20:34	5	tif->tif_clientdata
water	20:15	0:0	6	tif
op	20:18	0:0	6	->
water	20:20	0:0	6	tif_clientdata
arg	20:36	20:42	5	module
water	20:36	0:0	6	module
arg	20:44	20:85	5	"ZLib cannot deal with buffers this size"
water	20:44	0:0	6	"ZLib cannot deal with buffers this size"
water	20:86	0:0	4	;
return	21:2	21:12	4	(0)
water	21:9	0:0	5	(
water	21:10	0:0	5	0
water	21:11	0:0	5	)
water	22:1	0:0	4	}
do	23:1	36:1	2	(sp -> stream . avail_in > 0)
cond	36:10	36:32	3	sp -> stream . avail_in > 0
water	36:10	0:0	4	sp
op	36:12	0:0	4	->
water	36:14	0:0	4	stream
op	36:20	0:0	4	.
water	36:21	0:0	4	avail_in
op	36:30	0:0	4	>
water	36:32	0:0	4	0
stmts	23:4	36:1	3	
water	23:4	0:0	4	{
if	24:2	29:2	4	(deflate (& sp -> stream ,Z_NO_FLUSH ) != Z_OK)
cond	24:6	24:42	5	deflate (& sp -> stream ,Z_NO_FLUSH ) != Z_OK
call	24:6	24:37	6	deflate
arg	24:14	24:25	7	&sp->stream
op	24:14	0:0	8	&
water	24:15	0:0	8	sp
op	24:17	0:0	8	->
water	24:19	0:0	8	stream
arg	24:27	24:37	7	Z_NO_FLUSH
water	24:27	0:0	8	Z_NO_FLUSH
op	24:39	0:0	6	!=
water	24:42	0:0	6	Z_OK
stmts	24:48	29:2	5	
water	24:48	0:0	6	{
call	25:3	27:21	6	TIFFErrorExt
arg	25:16	25:35	7	tif->tif_clientdata
water	25:16	0:0	8	tif
op	25:19	0:0	8	->
water	25:21	0:0	8	tif_clientdata
arg	25:37	25:43	7	module
water	25:37	0:0	8	module
arg	26:9	26:28	7	"Encoder error: %s"
water	26:9	0:0	8	"Encoder error: %s"
arg	27:9	27:21	7	SAFE_MSG(sp)
call	27:9	27:20	8	SAFE_MSG
arg	27:18	27:20	9	sp
water	27:18	0:0	10	sp
water	27:22	0:0	6	;
return	28:3	28:13	6	(0)
water	28:10	0:0	7	(
water	28:11	0:0	7	0
water	28:12	0:0	7	)
water	29:2	0:0	6	}
if	30:2	35:2	4	(sp -> stream . avail_out == 0)
cond	30:6	30:30	5	sp -> stream . avail_out == 0
water	30:6	0:0	6	sp
op	30:8	0:0	6	->
water	30:10	0:0	6	stream
op	30:16	0:0	6	.
water	30:17	0:0	6	avail_out
op	30:27	0:0	6	==
water	30:30	0:0	6	0
stmts	30:33	35:2	5	
water	30:33	0:0	6	{
water	31:3	0:0	6	tif
op	31:6	0:0	6	->
water	31:8	0:0	6	tif_rawcc
op	31:18	0:0	6	=
water	31:20	0:0	6	tif
op	31:23	0:0	6	->
water	31:25	0:0	6	tif_rawdatasize
water	31:40	0:0	6	;
call	32:3	32:21	6	TIFFFlushData1
arg	32:18	32:21	7	tif
water	32:18	0:0	8	tif
water	32:22	0:0	6	;
water	33:3	0:0	6	sp
op	33:5	0:0	6	->
water	33:7	0:0	6	stream
op	33:13	0:0	6	.
water	33:14	0:0	6	next_out
op	33:23	0:0	6	=
water	33:25	0:0	6	tif
op	33:28	0:0	6	->
water	33:30	0:0	6	tif_rawdata
water	33:41	0:0	6	;
water	34:3	0:0	6	sp
op	34:5	0:0	6	->
water	34:7	0:0	6	stream
op	34:13	0:0	6	.
water	34:14	0:0	6	avail_out
op	34:24	0:0	6	=
water	34:26	0:0	6	(
water	34:27	0:0	6	uInt
water	34:31	0:0	6	)
water	34:33	0:0	6	tif
op	34:36	0:0	6	->
water	34:38	0:0	6	tif_rawdatasize
water	34:53	0:0	6	;
water	35:2	0:0	6	}
water	36:1	0:0	4	}
water	36:34	0:0	2	;
return	37:1	37:11	2	(1)
water	37:8	0:0	3	(
water	37:9	0:0	3	1
water	37:10	0:0	3	)

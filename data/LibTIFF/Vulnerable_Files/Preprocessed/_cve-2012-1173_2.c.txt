func	2:0	104:0	0	static int	gtStripSeparate
params	3:15	0:0	1	
param	3:16	3:34	2	TIFFRGBAImage *	img
param	3:36	3:50	2	uint32 *	raster
param	3:52	3:60	2	uint32	w
param	3:62	3:70	2	uint32	h
stmnts	0:0	103:13	1	
decl	5:1	5:21	2	TIFF	*tif
op	5:11	0:0	2	=
water	5:13	0:0	2	img
op	5:16	0:0	2	->
water	5:18	0:0	2	tif
decl	6:1	6:44	2	tileSeparateRoutine	put
op	6:25	0:0	2	=
water	6:27	0:0	2	img
op	6:30	0:0	2	->
water	6:32	0:0	2	put
op	6:35	0:0	2	.
water	6:36	0:0	2	separate
decl	7:1	7:19	2	unsigned char	*buf
decl	8:1	8:33	2	unsigned char	*p0
water	8:18	0:0	2	,
decl	8:1	8:33	2	unsigned char	*p1
water	8:23	0:0	2	,
decl	8:1	8:33	2	unsigned char	*p2
water	8:28	0:0	2	,
decl	8:1	8:33	2	unsigned char	*pa
decl	9:1	9:32	2	uint32	row
water	9:11	0:0	2	,
decl	9:1	9:32	2	uint32	y
water	9:14	0:0	2	,
decl	9:1	9:32	2	uint32	nrow
water	9:20	0:0	2	,
decl	9:1	9:32	2	uint32	rowstoread
decl	10:1	10:11	2	uint32	pos
decl	11:1	11:17	2	tsize_t	scanline
decl	12:1	12:32	2	uint32	rowsperstrip
water	12:20	0:0	2	,
decl	12:1	12:32	2	uint32	offset_row
decl	13:1	13:31	2	uint32	imagewidth
op	13:19	0:0	2	=
water	13:21	0:0	2	img
op	13:24	0:0	2	->
water	13:26	0:0	2	width
decl	14:1	14:18	2	tsize_t	stripsize
decl	15:1	15:23	2	int32	fromskew
water	15:15	0:0	2	,
decl	15:1	15:23	2	int32	toskew
decl	16:1	16:23	2	int	alpha
op	16:11	0:0	2	=
water	16:13	0:0	2	img
op	16:16	0:0	2	->
water	16:18	0:0	2	alpha
decl	17:1	17:18	2	int	ret
op	17:9	0:0	2	=
water	17:11	0:0	2	1
water	17:12	0:0	2	,
decl	17:1	17:18	2	int	flip
water	19:1	0:0	2	stripsize
op	19:11	0:0	2	=
call	19:13	19:30	2	TIFFStripSize
arg	19:27	19:30	3	tif
water	19:27	0:0	4	tif
water	19:31	0:0	2	;
water	20:1	0:0	2	p0
op	20:4	0:0	2	=
water	20:6	0:0	2	buf
op	20:10	0:0	2	=
water	20:12	0:0	2	(
water	20:13	0:0	2	unsigned
water	20:22	0:0	2	char
op	20:27	0:0	2	*
water	20:28	0:0	2	)
call	20:29	20:62	2	_TIFFmalloc
arg	20:41	20:62	3	(alpha?4:3)*stripsize
water	20:41	0:0	4	(
water	20:42	0:0	4	alpha
water	20:47	0:0	4	?
water	20:48	0:0	4	4
water	20:49	0:0	4	:
water	20:50	0:0	4	3
water	20:51	0:0	4	)
op	20:52	0:0	4	*
water	20:53	0:0	4	stripsize
water	20:63	0:0	2	;
if	21:1	24:1	2	(buf == 0)
cond	21:5	21:12	3	buf == 0
water	21:5	0:0	4	buf
op	21:9	0:0	4	==
water	21:12	0:0	4	0
stmts	21:15	24:1	3	
water	21:15	0:0	4	{
call	22:2	22:81	4	TIFFErrorExt
arg	22:15	22:34	5	tif->tif_clientdata
water	22:15	0:0	6	tif
op	22:18	0:0	6	->
water	22:20	0:0	6	tif_clientdata
arg	22:36	22:53	5	TIFFFileName(tif)
call	22:36	22:52	6	TIFFFileName
arg	22:49	22:52	7	tif
water	22:49	0:0	8	tif
arg	22:55	22:81	5	"No space for tile buffer"
water	22:55	0:0	6	"No space for tile buffer"
water	22:82	0:0	4	;
return	23:2	23:12	4	(0)
water	23:9	0:0	5	(
water	23:10	0:0	5	0
water	23:11	0:0	5	)
water	24:1	0:0	4	}
call	25:1	25:42	2	_TIFFmemset
arg	25:13	25:16	3	buf
water	25:13	0:0	4	buf
arg	25:18	25:19	3	0
water	25:18	0:0	4	0
arg	25:21	25:42	3	(alpha?4:3)*stripsize
water	25:21	0:0	4	(
water	25:22	0:0	4	alpha
water	25:27	0:0	4	?
water	25:28	0:0	4	4
water	25:29	0:0	4	:
water	25:30	0:0	4	3
water	25:31	0:0	4	)
op	25:32	0:0	4	*
water	25:33	0:0	4	stripsize
water	25:43	0:0	2	;
water	26:1	0:0	2	p1
op	26:4	0:0	2	=
water	26:6	0:0	2	p0
op	26:9	0:0	2	+
water	26:11	0:0	2	stripsize
water	26:20	0:0	2	;
water	27:1	0:0	2	p2
op	27:4	0:0	2	=
water	27:6	0:0	2	p1
op	27:9	0:0	2	+
water	27:11	0:0	2	stripsize
water	27:20	0:0	2	;
water	28:1	0:0	2	pa
op	28:4	0:0	2	=
water	28:6	0:0	2	(
water	28:7	0:0	2	alpha
water	28:12	0:0	2	?
water	28:13	0:0	2	(
water	28:14	0:0	2	p2
op	28:16	0:0	2	+
water	28:17	0:0	2	stripsize
water	28:26	0:0	2	)
water	28:27	0:0	2	:
water	28:28	0:0	2	NULL
water	28:32	0:0	2	)
water	28:33	0:0	2	;
water	30:1	0:0	2	flip
op	30:6	0:0	2	=
call	30:8	30:26	2	setorientation
arg	30:23	30:26	3	img
water	30:23	0:0	4	img
water	30:27	0:0	2	;
if	31:1	34:1	2	(flip & FLIP_VERTICALLY)
cond	31:5	31:12	3	flip & FLIP_VERTICALLY
water	31:5	0:0	4	flip
op	31:10	0:0	4	&
water	31:12	0:0	4	FLIP_VERTICALLY
stmts	31:29	34:1	3	
water	31:29	0:0	4	{
water	32:2	0:0	4	y
op	32:4	0:0	4	=
water	32:6	0:0	4	h
op	32:8	0:0	4	-
water	32:10	0:0	4	1
water	32:11	0:0	4	;
water	33:2	0:0	4	toskew
op	33:9	0:0	4	=
op	33:11	0:0	4	-
call	33:12	33:25	4	(int32)
arg	33:20	33:25	5	w+w
water	33:20	0:0	6	w
op	33:22	0:0	6	+
water	33:24	0:0	6	w
water	33:26	0:0	4	;
water	34:1	0:0	4	}
else	35:1	38:1	2
stmts	35:6	38:1	3	
water	35:6	0:0	4	{
water	36:2	0:0	4	y
op	36:4	0:0	4	=
water	36:6	0:0	4	0
water	36:7	0:0	4	;
water	37:2	0:0	4	toskew
op	37:9	0:0	4	=
op	37:11	0:0	4	-
call	37:12	37:25	4	(int32)
arg	37:20	37:25	5	w-w
water	37:20	0:0	6	w
op	37:22	0:0	6	-
water	37:24	0:0	6	w
water	37:26	0:0	4	;
water	38:1	0:0	4	}
call	40:1	40:63	2	TIFFGetFieldDefaulted
arg	40:23	40:26	3	tif
water	40:23	0:0	4	tif
arg	40:28	40:48	3	TIFFTAG_ROWSPERSTRIP
water	40:28	0:0	4	TIFFTAG_ROWSPERSTRIP
arg	40:50	40:63	3	&rowsperstrip
op	40:50	0:0	4	&
water	40:51	0:0	4	rowsperstrip
water	40:64	0:0	2	;
water	41:1	0:0	2	scanline
op	41:10	0:0	2	=
call	41:12	41:32	2	TIFFScanlineSize
arg	41:29	41:32	3	tif
water	41:29	0:0	4	tif
water	41:33	0:0	2	;
water	42:1	0:0	2	fromskew
op	42:10	0:0	2	=
water	42:12	0:0	2	(
water	42:13	0:0	2	w
op	42:15	0:0	2	<
water	42:17	0:0	2	imagewidth
water	42:28	0:0	2	?
water	42:30	0:0	2	imagewidth
op	42:41	0:0	2	-
water	42:43	0:0	2	w
water	42:45	0:0	2	:
water	42:47	0:0	2	0
water	42:48	0:0	2	)
water	42:49	0:0	2	;
for	43:1	84:1	2	(row = 0 ;row < h;row += nrow)
forinit	43:6	43:13	3	row = 0 ;
water	43:6	0:0	4	row
op	43:10	0:0	4	=
water	43:12	0:0	4	0
water	43:13	0:0	4	;
cond	43:15	43:21	3	row < h
water	43:15	0:0	4	row
op	43:19	0:0	4	<
water	43:21	0:0	4	h
forexpr	43:24	43:31	3	row += nrow
water	43:24	0:0	4	row
op	43:28	0:0	4	+=
water	43:31	0:0	4	nrow
stmts	44:1	84:1	3	
water	44:1	0:0	4	{
water	45:2	0:0	4	rowstoread
op	45:13	0:0	4	=
water	45:15	0:0	4	rowsperstrip
op	45:28	0:0	4	-
water	45:30	0:0	4	(
water	45:31	0:0	4	row
op	45:35	0:0	4	+
water	45:37	0:0	4	img
op	45:40	0:0	4	->
water	45:42	0:0	4	row_offset
water	45:52	0:0	4	)
op	45:54	0:0	4	%
water	45:56	0:0	4	rowsperstrip
water	45:68	0:0	4	;
water	46:2	0:0	4	nrow
op	46:7	0:0	4	=
water	46:9	0:0	4	(
water	46:10	0:0	4	row
op	46:14	0:0	4	+
water	46:16	0:0	4	rowstoread
op	46:27	0:0	4	>
water	46:29	0:0	4	h
water	46:31	0:0	4	?
water	46:33	0:0	4	h
op	46:35	0:0	4	-
water	46:37	0:0	4	row
water	46:41	0:0	4	:
water	46:43	0:0	4	rowstoread
water	46:53	0:0	4	)
water	46:54	0:0	4	;
water	47:2	0:0	4	offset_row
op	47:13	0:0	4	=
water	47:15	0:0	4	row
op	47:19	0:0	4	+
water	47:21	0:0	4	img
op	47:24	0:0	4	->
water	47:26	0:0	4	row_offset
water	47:36	0:0	4	;
if	48:2	54:2	4	(TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,0 ) ,p0 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr)
cond	48:6	50:14	5	TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,0 ) ,p0 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr
call	48:6	49:66	6	TIFFReadEncodedStrip
arg	48:27	48:30	7	tif
water	48:27	0:0	8	tif
arg	48:32	48:68	7	TIFFComputeStrip(tif,offset_row,0)
call	48:32	48:67	8	TIFFComputeStrip
arg	48:49	48:52	9	tif
water	48:49	0:0	10	tif
arg	48:54	48:64	9	offset_row
water	48:54	0:0	10	offset_row
arg	48:66	48:67	9	0
water	48:66	0:0	10	0
arg	49:6	49:8	7	p0
water	49:6	0:0	8	p0
arg	49:10	49:66	7	((row+img->row_offset)%rowsperstrip+nrow)*scanline
water	49:10	0:0	8	(
water	49:11	0:0	8	(
water	49:12	0:0	8	row
op	49:16	0:0	8	+
water	49:18	0:0	8	img
op	49:21	0:0	8	->
water	49:23	0:0	8	row_offset
water	49:33	0:0	8	)
op	49:34	0:0	8	%
water	49:35	0:0	8	rowsperstrip
op	49:48	0:0	8	+
water	49:50	0:0	8	nrow
water	49:54	0:0	8	)
op	49:56	0:0	8	*
water	49:58	0:0	8	scanline
op	49:68	0:0	6	<
water	49:70	0:0	6	0
op	50:6	0:0	6	&&
water	50:9	0:0	6	img
op	50:12	0:0	6	->
water	50:14	0:0	6	stoponerr
stmts	51:2	54:2	5	
water	51:2	0:0	6	{
water	52:3	0:0	6	ret
op	52:7	0:0	6	=
water	52:9	0:0	6	0
water	52:10	0:0	6	;
break	53:3	53:8	6	
water	54:2	0:0	6	}
if	55:2	61:2	4	(TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,1 ) ,p1 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr)
cond	55:6	57:14	5	TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,1 ) ,p1 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr
call	55:6	56:66	6	TIFFReadEncodedStrip
arg	55:27	55:30	7	tif
water	55:27	0:0	8	tif
arg	55:32	55:68	7	TIFFComputeStrip(tif,offset_row,1)
call	55:32	55:67	8	TIFFComputeStrip
arg	55:49	55:52	9	tif
water	55:49	0:0	10	tif
arg	55:54	55:64	9	offset_row
water	55:54	0:0	10	offset_row
arg	55:66	55:67	9	1
water	55:66	0:0	10	1
arg	56:6	56:8	7	p1
water	56:6	0:0	8	p1
arg	56:10	56:66	7	((row+img->row_offset)%rowsperstrip+nrow)*scanline
water	56:10	0:0	8	(
water	56:11	0:0	8	(
water	56:12	0:0	8	row
op	56:16	0:0	8	+
water	56:18	0:0	8	img
op	56:21	0:0	8	->
water	56:23	0:0	8	row_offset
water	56:33	0:0	8	)
op	56:34	0:0	8	%
water	56:35	0:0	8	rowsperstrip
op	56:48	0:0	8	+
water	56:50	0:0	8	nrow
water	56:54	0:0	8	)
op	56:56	0:0	8	*
water	56:58	0:0	8	scanline
op	56:68	0:0	6	<
water	56:70	0:0	6	0
op	57:6	0:0	6	&&
water	57:9	0:0	6	img
op	57:12	0:0	6	->
water	57:14	0:0	6	stoponerr
stmts	58:2	61:2	5	
water	58:2	0:0	6	{
water	59:3	0:0	6	ret
op	59:7	0:0	6	=
water	59:9	0:0	6	0
water	59:10	0:0	6	;
break	60:3	60:8	6	
water	61:2	0:0	6	}
if	62:2	68:2	4	(TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,2 ) ,p2 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr)
cond	62:6	64:14	5	TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,2 ) ,p2 ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr
call	62:6	63:66	6	TIFFReadEncodedStrip
arg	62:27	62:30	7	tif
water	62:27	0:0	8	tif
arg	62:32	62:68	7	TIFFComputeStrip(tif,offset_row,2)
call	62:32	62:67	8	TIFFComputeStrip
arg	62:49	62:52	9	tif
water	62:49	0:0	10	tif
arg	62:54	62:64	9	offset_row
water	62:54	0:0	10	offset_row
arg	62:66	62:67	9	2
water	62:66	0:0	10	2
arg	63:6	63:8	7	p2
water	63:6	0:0	8	p2
arg	63:10	63:66	7	((row+img->row_offset)%rowsperstrip+nrow)*scanline
water	63:10	0:0	8	(
water	63:11	0:0	8	(
water	63:12	0:0	8	row
op	63:16	0:0	8	+
water	63:18	0:0	8	img
op	63:21	0:0	8	->
water	63:23	0:0	8	row_offset
water	63:33	0:0	8	)
op	63:34	0:0	8	%
water	63:35	0:0	8	rowsperstrip
op	63:48	0:0	8	+
water	63:50	0:0	8	nrow
water	63:54	0:0	8	)
op	63:56	0:0	8	*
water	63:58	0:0	8	scanline
op	63:68	0:0	6	<
water	63:70	0:0	6	0
op	64:6	0:0	6	&&
water	64:9	0:0	6	img
op	64:12	0:0	6	->
water	64:14	0:0	6	stoponerr
stmts	65:2	68:2	5	
water	65:2	0:0	6	{
water	66:3	0:0	6	ret
op	66:7	0:0	6	=
water	66:9	0:0	6	0
water	66:10	0:0	6	;
break	67:3	67:8	6	
water	68:2	0:0	6	}
if	69:2	78:2	4	(alpha)
cond	69:6	69:6	5	alpha
water	69:6	0:0	6	alpha
stmts	70:2	78:2	5	
water	70:2	0:0	6	{
if	71:3	77:3	6	(TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,3 ) ,pa ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr)
cond	71:7	73:15	7	TIFFReadEncodedStrip (tif ,TIFFComputeStrip (tif ,offset_row ,3 ) ,pa ,( ( row + img -> row_offset ) % rowsperstrip + nrow ) * scanline ) < 0 && img -> stoponerr
call	71:7	72:67	8	TIFFReadEncodedStrip
arg	71:28	71:31	9	tif
water	71:28	0:0	10	tif
arg	71:33	71:69	9	TIFFComputeStrip(tif,offset_row,3)
call	71:33	71:68	10	TIFFComputeStrip
arg	71:50	71:53	11	tif
water	71:50	0:0	12	tif
arg	71:55	71:65	11	offset_row
water	71:55	0:0	12	offset_row
arg	71:67	71:68	11	3
water	71:67	0:0	12	3
arg	72:7	72:9	9	pa
water	72:7	0:0	10	pa
arg	72:11	72:67	9	((row+img->row_offset)%rowsperstrip+nrow)*scanline
water	72:11	0:0	10	(
water	72:12	0:0	10	(
water	72:13	0:0	10	row
op	72:17	0:0	10	+
water	72:19	0:0	10	img
op	72:22	0:0	10	->
water	72:24	0:0	10	row_offset
water	72:34	0:0	10	)
op	72:35	0:0	10	%
water	72:36	0:0	10	rowsperstrip
op	72:49	0:0	10	+
water	72:51	0:0	10	nrow
water	72:55	0:0	10	)
op	72:57	0:0	10	*
water	72:59	0:0	10	scanline
op	72:69	0:0	8	<
water	72:71	0:0	8	0
op	73:7	0:0	8	&&
water	73:10	0:0	8	img
op	73:13	0:0	8	->
water	73:15	0:0	8	stoponerr
stmts	74:3	77:3	7	
water	74:3	0:0	8	{
water	75:4	0:0	8	ret
op	75:8	0:0	8	=
water	75:10	0:0	8	0
water	75:11	0:0	8	;
break	76:4	76:9	8	
water	77:3	0:0	8	}
water	78:2	0:0	6	}
water	80:2	0:0	4	pos
op	80:6	0:0	4	=
water	80:8	0:0	4	(
water	80:9	0:0	4	(
water	80:10	0:0	4	row
op	80:14	0:0	4	+
water	80:16	0:0	4	img
op	80:19	0:0	4	->
water	80:21	0:0	4	row_offset
water	80:31	0:0	4	)
op	80:33	0:0	4	%
water	80:35	0:0	4	rowsperstrip
water	80:47	0:0	4	)
op	80:49	0:0	4	*
water	80:51	0:0	4	scanline
water	80:59	0:0	4	;
call	81:2	82:37	4	(*put)
arg	81:9	81:12	5	img
water	81:9	0:0	6	img
arg	81:14	81:24	5	raster+y*w
water	81:14	0:0	6	raster
op	81:20	0:0	6	+
water	81:21	0:0	6	y
op	81:22	0:0	6	*
water	81:23	0:0	6	w
arg	81:26	81:27	5	0
water	81:26	0:0	6	0
arg	81:29	81:30	5	y
water	81:29	0:0	6	y
arg	81:32	81:33	5	w
water	81:32	0:0	6	w
arg	81:35	81:39	5	nrow
water	81:35	0:0	6	nrow
arg	81:41	81:49	5	fromskew
water	81:41	0:0	6	fromskew
arg	81:51	81:57	5	toskew
water	81:51	0:0	6	toskew
arg	81:59	81:67	5	p0+pos
water	81:59	0:0	6	p0
op	81:62	0:0	6	+
water	81:64	0:0	6	pos
arg	81:69	81:77	5	p1+pos
water	81:69	0:0	6	p1
op	81:72	0:0	6	+
water	81:74	0:0	6	pos
arg	82:6	82:14	5	p2+pos
water	82:6	0:0	6	p2
op	82:9	0:0	6	+
water	82:11	0:0	6	pos
arg	82:16	82:37	5	(alpha?(pa+pos):NULL)
water	82:16	0:0	6	(
water	82:17	0:0	6	alpha
water	82:22	0:0	6	?
water	82:23	0:0	6	(
water	82:24	0:0	6	pa
op	82:26	0:0	6	+
water	82:27	0:0	6	pos
water	82:30	0:0	6	)
water	82:31	0:0	6	:
water	82:32	0:0	6	NULL
water	82:36	0:0	6	)
water	82:38	0:0	4	;
water	83:2	0:0	4	y
op	83:4	0:0	4	+=
water	83:7	0:0	4	(
water	83:8	0:0	4	flip
op	83:13	0:0	4	&
water	83:15	0:0	4	FLIP_VERTICALLY
water	83:31	0:0	4	?
op	83:33	0:0	4	-
water	83:34	0:0	4	(
water	83:35	0:0	4	int32
water	83:40	0:0	4	)
water	83:42	0:0	4	nrow
water	83:47	0:0	4	:
water	83:49	0:0	4	(
water	83:50	0:0	4	int32
water	83:55	0:0	4	)
water	83:57	0:0	4	nrow
water	83:61	0:0	4	)
water	83:62	0:0	4	;
water	84:1	0:0	4	}
if	86:1	100:1	2	(flip & FLIP_HORIZONTALLY)
cond	86:5	86:12	3	flip & FLIP_HORIZONTALLY
water	86:5	0:0	4	flip
op	86:10	0:0	4	&
water	86:12	0:0	4	FLIP_HORIZONTALLY
stmts	86:31	100:1	3	
water	86:31	0:0	4	{
decl	87:2	87:13	4	uint32	line
for	89:2	99:2	4	(line = 0 ;line < h;line ++)
forinit	89:7	89:15	5	line = 0 ;
water	89:7	0:0	6	line
op	89:12	0:0	6	=
water	89:14	0:0	6	0
water	89:15	0:0	6	;
cond	89:17	89:24	5	line < h
water	89:17	0:0	6	line
op	89:22	0:0	6	<
water	89:24	0:0	6	h
forexpr	89:27	89:31	5	line ++
water	89:27	0:0	6	line
op	89:31	0:0	6	++
stmts	89:35	99:2	5	
water	89:35	0:0	6	{
decl	90:3	90:37	6	uint32	*left
op	90:16	0:0	6	=
water	90:18	0:0	6	raster
op	90:25	0:0	6	+
water	90:27	0:0	6	(
water	90:28	0:0	6	line
op	90:33	0:0	6	*
water	90:35	0:0	6	w
water	90:36	0:0	6	)
decl	91:3	91:31	6	uint32	*right
op	91:17	0:0	6	=
water	91:19	0:0	6	left
op	91:24	0:0	6	+
water	91:26	0:0	6	w
op	91:28	0:0	6	-
water	91:30	0:0	6	1
while	93:3	98:3	6	(left < right)
cond	93:11	93:18	7	left < right
water	93:11	0:0	8	left
op	93:16	0:0	8	<
water	93:18	0:0	8	right
stmts	93:26	98:3	7	
water	93:26	0:0	8	{
decl	94:4	94:23	8	uint32	temp
op	94:16	0:0	8	=
op	94:18	0:0	8	*
water	94:19	0:0	8	left
op	95:4	0:0	8	*
water	95:5	0:0	8	left
op	95:10	0:0	8	=
op	95:12	0:0	8	*
water	95:13	0:0	8	right
water	95:18	0:0	8	;
op	96:4	0:0	8	*
water	96:5	0:0	8	right
op	96:11	0:0	8	=
water	96:13	0:0	8	temp
water	96:17	0:0	8	;
water	97:4	0:0	8	left
op	97:8	0:0	8	++
water	97:10	0:0	8	,
water	97:12	0:0	8	right
op	97:17	0:0	8	--
water	97:19	0:0	8	;
water	98:3	0:0	8	}
water	99:2	0:0	6	}
water	100:1	0:0	4	}
call	102:1	102:14	2	_TIFFfree
arg	102:11	102:14	3	buf
water	102:11	0:0	4	buf
water	102:15	0:0	2	;
return	103:1	103:13	2	(ret)
water	103:8	0:0	3	(
water	103:9	0:0	3	ret
water	103:12	0:0	3	)

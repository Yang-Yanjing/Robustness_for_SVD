func	1:0	64:0	0	static int	ThunderDecode
params	2:13	0:0	1	
param	2:14	2:23	2	TIFF *	tif
param	2:25	2:36	2	tidata_t	op
param	2:38	2:55	2	tsize_t	maxpixels
stmnts	4:1	63:11	1	
water	4:1	0:0	2	register
water	4:10	0:0	2	u_char
op	4:17	0:0	2	*
water	4:18	0:0	2	bp
water	4:20	0:0	2	;
water	5:1	0:0	2	register
water	5:10	0:0	2	tsize_t
water	5:18	0:0	2	cc
water	5:20	0:0	2	;
decl	6:1	6:16	2	u_int	lastpixel
decl	7:1	7:16	2	tsize_t	npixels
water	9:1	0:0	2	bp
op	9:4	0:0	2	=
water	9:6	0:0	2	(
water	9:7	0:0	2	u_char
op	9:14	0:0	2	*
water	9:15	0:0	2	)
water	9:16	0:0	2	tif
op	9:19	0:0	2	->
water	9:21	0:0	2	tif_rawcp
water	9:30	0:0	2	;
water	10:1	0:0	2	cc
op	10:4	0:0	2	=
water	10:6	0:0	2	tif
op	10:9	0:0	2	->
water	10:11	0:0	2	tif_rawcc
water	10:20	0:0	2	;
water	11:1	0:0	2	lastpixel
op	11:11	0:0	2	=
water	11:13	0:0	2	0
water	11:14	0:0	2	;
water	12:1	0:0	2	npixels
op	12:9	0:0	2	=
water	12:11	0:0	2	0
water	12:12	0:0	2	;
while	13:1	53:1	2	(cc > 0 && npixels < maxpixels)
cond	13:8	13:28	3	cc > 0 && npixels < maxpixels
water	13:8	0:0	4	cc
op	13:11	0:0	4	>
water	13:13	0:0	4	0
op	13:15	0:0	4	&&
water	13:18	0:0	4	npixels
op	13:26	0:0	4	<
water	13:28	0:0	4	maxpixels
stmts	13:39	53:1	3	
water	13:39	0:0	4	{
decl	14:2	14:14	4	int	n
water	14:7	0:0	4	,
decl	14:2	14:14	4	int	delta
water	16:2	0:0	4	n
op	16:4	0:0	4	=
op	16:6	0:0	4	*
water	16:7	0:0	4	bp
op	16:9	0:0	4	++
water	16:11	0:0	4	,
water	16:13	0:0	4	cc
op	16:15	0:0	4	--
water	16:17	0:0	4	;
switch	17:2	52:2	4	(n & THUNDER_CODE)
cond	17:10	17:14	5	n & THUNDER_CODE
water	17:10	0:0	6	n
op	17:12	0:0	6	&
water	17:14	0:0	6	THUNDER_CODE
stmts	17:28	52:2	5	
water	17:28	0:0	6	{
label	18:2	18:18	6	case THUNDER_RUN :
if	23:3	26:3	6	(npixels & 1)
cond	23:7	23:17	7	npixels & 1
water	23:7	0:0	8	npixels
op	23:15	0:0	8	&
water	23:17	0:0	8	1
stmts	23:20	26:3	7	
water	23:20	0:0	8	{
water	24:4	0:0	8	op
op	24:6	0:0	8	[
water	24:7	0:0	8	0
op	24:8	0:0	8	]
op	24:10	0:0	8	|=
water	24:13	0:0	8	lastpixel
water	24:22	0:0	8	;
water	25:4	0:0	8	lastpixel
op	25:14	0:0	8	=
op	25:16	0:0	8	*
water	25:17	0:0	8	op
op	25:19	0:0	8	++
water	25:21	0:0	8	;
water	25:23	0:0	8	npixels
op	25:30	0:0	8	++
water	25:32	0:0	8	;
water	25:34	0:0	8	n
op	25:35	0:0	8	--
water	25:37	0:0	8	;
water	26:3	0:0	8	}
else	26:5	27:31	6
stmts	27:4	27:31	7	
water	27:4	0:0	8	lastpixel
op	27:14	0:0	8	|=
water	27:17	0:0	8	lastpixel
op	27:27	0:0	8	<<
water	27:30	0:0	8	4
water	27:31	0:0	8	;
water	28:3	0:0	6	npixels
op	28:11	0:0	6	+=
water	28:14	0:0	6	n
water	28:15	0:0	6	;
for	29:3	30:35	6	(;n > 0;n -= 2)
forinit	29:8	29:8	7	;
water	29:8	0:0	8	;
cond	29:10	29:14	7	n > 0
water	29:10	0:0	8	n
op	29:12	0:0	8	>
water	29:14	0:0	8	0
forexpr	29:17	29:22	7	n -= 2
water	29:17	0:0	8	n
op	29:19	0:0	8	-=
water	29:22	0:0	8	2
stmts	30:4	30:35	7	
op	30:4	0:0	8	*
water	30:5	0:0	8	op
op	30:7	0:0	8	++
op	30:10	0:0	8	=
water	30:12	0:0	8	(
water	30:13	0:0	8	tidataval_t
water	30:24	0:0	8	)
water	30:26	0:0	8	lastpixel
water	30:35	0:0	8	;
if	31:3	32:17	6	(n == - 1)
cond	31:7	31:13	7	n == - 1
water	31:7	0:0	8	n
op	31:9	0:0	8	==
op	31:12	0:0	8	-
water	31:13	0:0	8	1
stmts	32:4	32:17	7	
op	32:4	0:0	8	*
op	32:5	0:0	8	--
water	32:7	0:0	8	op
op	32:10	0:0	8	&=
water	32:13	0:0	8	0
water	32:14	0:0	8	xf0
water	32:17	0:0	8	;
water	33:3	0:0	6	lastpixel
op	33:13	0:0	6	&=
water	33:16	0:0	6	0
water	33:17	0:0	6	xf
water	33:19	0:0	6	;
break	34:3	34:8	6	
label	35:2	35:25	6	case THUNDER_2BITDELTAS :
if	36:3	37:49	6	(( delta = ( ( n >> 4 ) & 3 ) ) != DELTA2_SKIP)
cond	36:7	36:35	7	( delta = ( ( n >> 4 ) & 3 ) ) != DELTA2_SKIP
water	36:7	0:0	8	(
water	36:8	0:0	8	delta
op	36:14	0:0	8	=
water	36:16	0:0	8	(
water	36:17	0:0	8	(
water	36:18	0:0	8	n
op	36:20	0:0	8	>>
water	36:23	0:0	8	4
water	36:24	0:0	8	)
op	36:26	0:0	8	&
water	36:28	0:0	8	3
water	36:29	0:0	8	)
water	36:30	0:0	8	)
op	36:32	0:0	8	!=
water	36:35	0:0	8	DELTA2_SKIP
stmts	37:4	37:49	7	
call	37:4	37:48	8	SETPIXEL
arg	37:13	37:15	9	op
water	37:13	0:0	10	op
arg	37:17	37:48	9	lastpixel+twobitdeltas[delta]
water	37:17	0:0	10	lastpixel
op	37:27	0:0	10	+
water	37:29	0:0	10	twobitdeltas
op	37:41	0:0	10	[
water	37:42	0:0	10	delta
op	37:47	0:0	10	]
water	37:49	0:0	8	;
if	38:3	39:49	6	(( delta = ( ( n >> 2 ) & 3 ) ) != DELTA2_SKIP)
cond	38:7	38:35	7	( delta = ( ( n >> 2 ) & 3 ) ) != DELTA2_SKIP
water	38:7	0:0	8	(
water	38:8	0:0	8	delta
op	38:14	0:0	8	=
water	38:16	0:0	8	(
water	38:17	0:0	8	(
water	38:18	0:0	8	n
op	38:20	0:0	8	>>
water	38:23	0:0	8	2
water	38:24	0:0	8	)
op	38:26	0:0	8	&
water	38:28	0:0	8	3
water	38:29	0:0	8	)
water	38:30	0:0	8	)
op	38:32	0:0	8	!=
water	38:35	0:0	8	DELTA2_SKIP
stmts	39:4	39:49	7	
call	39:4	39:48	8	SETPIXEL
arg	39:13	39:15	9	op
water	39:13	0:0	10	op
arg	39:17	39:48	9	lastpixel+twobitdeltas[delta]
water	39:17	0:0	10	lastpixel
op	39:27	0:0	10	+
water	39:29	0:0	10	twobitdeltas
op	39:41	0:0	10	[
water	39:42	0:0	10	delta
op	39:47	0:0	10	]
water	39:49	0:0	8	;
if	40:3	41:49	6	(( delta = ( n & 3 ) ) != DELTA2_SKIP)
cond	40:7	40:28	7	( delta = ( n & 3 ) ) != DELTA2_SKIP
water	40:7	0:0	8	(
water	40:8	0:0	8	delta
op	40:14	0:0	8	=
water	40:16	0:0	8	(
water	40:17	0:0	8	n
op	40:19	0:0	8	&
water	40:21	0:0	8	3
water	40:22	0:0	8	)
water	40:23	0:0	8	)
op	40:25	0:0	8	!=
water	40:28	0:0	8	DELTA2_SKIP
stmts	41:4	41:49	7	
call	41:4	41:48	8	SETPIXEL
arg	41:13	41:15	9	op
water	41:13	0:0	10	op
arg	41:17	41:48	9	lastpixel+twobitdeltas[delta]
water	41:17	0:0	10	lastpixel
op	41:27	0:0	10	+
water	41:29	0:0	10	twobitdeltas
op	41:41	0:0	10	[
water	41:42	0:0	10	delta
op	41:47	0:0	10	]
water	41:49	0:0	8	;
break	42:3	42:8	6	
label	43:2	43:25	6	case THUNDER_3BITDELTAS :
if	44:3	45:51	6	(( delta = ( ( n >> 3 ) & 7 ) ) != DELTA3_SKIP)
cond	44:7	44:35	7	( delta = ( ( n >> 3 ) & 7 ) ) != DELTA3_SKIP
water	44:7	0:0	8	(
water	44:8	0:0	8	delta
op	44:14	0:0	8	=
water	44:16	0:0	8	(
water	44:17	0:0	8	(
water	44:18	0:0	8	n
op	44:20	0:0	8	>>
water	44:23	0:0	8	3
water	44:24	0:0	8	)
op	44:26	0:0	8	&
water	44:28	0:0	8	7
water	44:29	0:0	8	)
water	44:30	0:0	8	)
op	44:32	0:0	8	!=
water	44:35	0:0	8	DELTA3_SKIP
stmts	45:4	45:51	7	
call	45:4	45:50	8	SETPIXEL
arg	45:13	45:15	9	op
water	45:13	0:0	10	op
arg	45:17	45:50	9	lastpixel+threebitdeltas[delta]
water	45:17	0:0	10	lastpixel
op	45:27	0:0	10	+
water	45:29	0:0	10	threebitdeltas
op	45:43	0:0	10	[
water	45:44	0:0	10	delta
op	45:49	0:0	10	]
water	45:51	0:0	8	;
if	46:3	47:51	6	(( delta = ( n & 7 ) ) != DELTA3_SKIP)
cond	46:7	46:28	7	( delta = ( n & 7 ) ) != DELTA3_SKIP
water	46:7	0:0	8	(
water	46:8	0:0	8	delta
op	46:14	0:0	8	=
water	46:16	0:0	8	(
water	46:17	0:0	8	n
op	46:19	0:0	8	&
water	46:21	0:0	8	7
water	46:22	0:0	8	)
water	46:23	0:0	8	)
op	46:25	0:0	8	!=
water	46:28	0:0	8	DELTA3_SKIP
stmts	47:4	47:51	7	
call	47:4	47:50	8	SETPIXEL
arg	47:13	47:15	9	op
water	47:13	0:0	10	op
arg	47:17	47:50	9	lastpixel+threebitdeltas[delta]
water	47:17	0:0	10	lastpixel
op	47:27	0:0	10	+
water	47:29	0:0	10	threebitdeltas
op	47:43	0:0	10	[
water	47:44	0:0	10	delta
op	47:49	0:0	10	]
water	47:51	0:0	8	;
break	48:3	48:8	6	
label	49:2	49:18	6	case THUNDER_RAW :
call	50:3	50:17	6	SETPIXEL
arg	50:12	50:14	7	op
water	50:12	0:0	8	op
arg	50:16	50:17	7	n
water	50:16	0:0	8	n
water	50:18	0:0	6	;
break	51:3	51:8	6	
water	52:2	0:0	6	}
water	53:1	0:0	4	}
water	54:1	0:0	2	tif
op	54:4	0:0	2	->
water	54:6	0:0	2	tif_rawcp
op	54:16	0:0	2	=
water	54:18	0:0	2	(
water	54:19	0:0	2	tidata_t
water	54:27	0:0	2	)
water	54:29	0:0	2	bp
water	54:31	0:0	2	;
water	55:1	0:0	2	tif
op	55:4	0:0	2	->
water	55:6	0:0	2	tif_rawcc
op	55:16	0:0	2	=
water	55:18	0:0	2	cc
water	55:20	0:0	2	;
if	56:1	62:1	2	(npixels != maxpixels)
cond	56:5	56:16	3	npixels != maxpixels
water	56:5	0:0	4	npixels
op	56:13	0:0	4	!=
water	56:16	0:0	4	maxpixels
stmts	56:27	62:1	3	
water	56:27	0:0	4	{
call	57:2	60:59	4	TIFFError
arg	57:12	57:25	5	tif->tif_name
water	57:12	0:0	6	tif
op	57:15	0:0	6	->
water	57:17	0:0	6	tif_name
arg	58:6	58:59	5	"ThunderDecode: %s data at scanline %ld (%lu != %lu)"
water	58:6	0:0	6	"ThunderDecode: %s data at scanline %ld (%lu != %lu)"
arg	59:6	59:53	5	npixels<maxpixels?"Not enough":"Too much"
water	59:6	0:0	6	npixels
op	59:14	0:0	6	<
water	59:16	0:0	6	maxpixels
water	59:26	0:0	6	?
water	59:28	0:0	6	"Not enough"
water	59:41	0:0	6	:
water	59:43	0:0	6	"Too much"
arg	60:6	60:25	5	(long)tif->tif_row
water	60:6	0:0	6	(
water	60:7	0:0	6	long
water	60:11	0:0	6	)
water	60:13	0:0	6	tif
op	60:16	0:0	6	->
water	60:18	0:0	6	tif_row
arg	60:27	60:41	5	(long)npixels
water	60:27	0:0	6	(
water	60:28	0:0	6	long
water	60:32	0:0	6	)
water	60:34	0:0	6	npixels
arg	60:43	60:59	5	(long)maxpixels
water	60:43	0:0	6	(
water	60:44	0:0	6	long
water	60:48	0:0	6	)
water	60:50	0:0	6	maxpixels
water	60:60	0:0	4	;
return	61:2	61:12	4	(0)
water	61:9	0:0	5	(
water	61:10	0:0	5	0
water	61:11	0:0	5	)
water	62:1	0:0	4	}
return	63:1	63:11	2	(1)
water	63:8	0:0	3	(
water	63:9	0:0	3	1
water	63:10	0:0	3	)

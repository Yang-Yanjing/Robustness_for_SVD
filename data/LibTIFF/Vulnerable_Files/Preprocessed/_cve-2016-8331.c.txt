func	2:0	561:0	0	static int	_TIFFVSetField
params	3:14	0:0	1	
param	3:15	3:24	2	TIFF *	tif
param	3:26	3:36	2	uint32	tag
param	3:38	3:48	2	va_list	ap
stmnts	5:1	560:14	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	char
water	5:19	0:0	2	module
op	5:25	0:0	2	[
op	5:26	0:0	2	]
op	5:28	0:0	2	=
water	5:30	0:0	2	"_TIFFVSetField"
water	5:46	0:0	2	;
decl	7:1	7:34	2	TIFFDirectory	*td
op	7:19	0:0	2	=
op	7:21	0:0	2	&
water	7:22	0:0	2	tif
op	7:25	0:0	2	->
water	7:27	0:0	2	tif_dir
decl	8:1	8:15	2	int	status
op	8:12	0:0	2	=
water	8:14	0:0	2	1
decl	9:1	9:17	2	uint32	v32
water	9:11	0:0	2	,
decl	9:1	9:17	2	uint32	i
water	9:14	0:0	2	,
decl	9:1	9:17	2	uint32	v
decl	10:4	10:17	2	double	dblval
decl	11:1	11:8	2	char	*s
decl	12:1	12:57	2	const TIFFField	*fip
op	12:22	0:0	2	=
call	12:24	12:56	3	TIFFFindField
arg	12:38	12:41	4	tif
water	12:38	0:0	5	tif
arg	12:43	12:46	4	tag
water	12:43	0:0	5	tag
arg	12:48	12:56	4	TIFF_ANY
water	12:48	0:0	5	TIFF_ANY
decl	13:1	13:26	2	uint32	standard_tag
op	13:21	0:0	2	=
water	13:23	0:0	2	tag
if	14:1	15:13	2	(fip == NULL)
cond	14:5	14:12	3	fip == NULL
water	14:5	0:0	4	fip
op	14:9	0:0	4	==
water	14:12	0:0	4	NULL
stmts	15:5	15:13	3	
return	15:5	15:13	4	0
water	15:12	0:0	5	0
if	22:1	24:1	2	(fip -> field_bit == FIELD_CUSTOM)
cond	22:5	22:23	3	fip -> field_bit == FIELD_CUSTOM
water	22:5	0:0	4	fip
op	22:8	0:0	4	->
water	22:10	0:0	4	field_bit
op	22:20	0:0	4	==
water	22:23	0:0	4	FIELD_CUSTOM
stmts	22:37	24:1	3	
water	22:37	0:0	4	{
water	23:2	0:0	4	standard_tag
op	23:15	0:0	4	=
water	23:17	0:0	4	0
water	23:18	0:0	4	;
water	24:1	0:0	4	}
switch	26:1	520:1	2	(standard_tag)
cond	26:9	26:9	3	standard_tag
water	26:9	0:0	4	standard_tag
stmts	26:23	520:1	3	
water	26:23	0:0	4	{
label	27:1	27:25	4	case TIFFTAG_SUBFILETYPE :
water	28:2	0:0	4	td
op	28:4	0:0	4	->
water	28:6	0:0	4	td_subfiletype
op	28:21	0:0	4	=
water	28:23	0:0	4	(
water	28:24	0:0	4	uint32
water	28:30	0:0	4	)
call	28:32	28:49	4	va_arg
arg	28:39	28:41	5	ap
water	28:39	0:0	6	ap
arg	28:43	28:49	5	uint32
water	28:43	0:0	6	uint32
water	28:50	0:0	4	;
break	29:2	29:7	4	
label	30:1	30:24	4	case TIFFTAG_IMAGEWIDTH :
water	31:2	0:0	4	td
op	31:4	0:0	4	->
water	31:6	0:0	4	td_imagewidth
op	31:20	0:0	4	=
water	31:22	0:0	4	(
water	31:23	0:0	4	uint32
water	31:29	0:0	4	)
call	31:31	31:48	4	va_arg
arg	31:38	31:40	5	ap
water	31:38	0:0	6	ap
arg	31:42	31:48	5	uint32
water	31:42	0:0	6	uint32
water	31:49	0:0	4	;
break	32:2	32:7	4	
label	33:1	33:25	4	case TIFFTAG_IMAGELENGTH :
water	34:2	0:0	4	td
op	34:4	0:0	4	->
water	34:6	0:0	4	td_imagelength
op	34:21	0:0	4	=
water	34:23	0:0	4	(
water	34:24	0:0	4	uint32
water	34:30	0:0	4	)
call	34:32	34:49	4	va_arg
arg	34:39	34:41	5	ap
water	34:39	0:0	6	ap
arg	34:43	34:49	5	uint32
water	34:43	0:0	6	uint32
water	34:50	0:0	4	;
break	35:2	35:7	4	
label	36:1	36:27	4	case TIFFTAG_BITSPERSAMPLE :
water	37:2	0:0	4	td
op	37:4	0:0	4	->
water	37:6	0:0	4	td_bitspersample
op	37:23	0:0	4	=
water	37:25	0:0	4	(
water	37:26	0:0	4	uint16
water	37:32	0:0	4	)
call	37:34	37:55	4	va_arg
arg	37:41	37:43	5	ap
water	37:41	0:0	6	ap
arg	37:45	37:55	5	uint16_vap
water	37:45	0:0	6	uint16_vap
water	37:56	0:0	4	;
if	45:2	58:2	4	(tif -> tif_flags & TIFF_SWAB)
cond	45:6	45:23	5	tif -> tif_flags & TIFF_SWAB
water	45:6	0:0	6	tif
op	45:9	0:0	6	->
water	45:11	0:0	6	tif_flags
op	45:21	0:0	6	&
water	45:23	0:0	6	TIFF_SWAB
stmts	45:34	58:2	5	
water	45:34	0:0	6	{
if	46:3	47:43	6	(td -> td_bitspersample == 8)
cond	46:7	46:31	7	td -> td_bitspersample == 8
water	46:7	0:0	8	td
op	46:9	0:0	8	->
water	46:11	0:0	8	td_bitspersample
op	46:28	0:0	8	==
water	46:31	0:0	8	8
stmts	47:4	47:43	7	
water	47:4	0:0	8	tif
op	47:7	0:0	8	->
water	47:9	0:0	8	tif_postdecode
op	47:24	0:0	8	=
water	47:26	0:0	8	_TIFFNoPostDecode
water	47:43	0:0	8	;
else	48:3	49:44	6
stmts	48:8	49:44	7	
if	48:8	49:44	8	(td -> td_bitspersample == 16)
cond	48:12	48:36	9	td -> td_bitspersample == 16
water	48:12	0:0	10	td
op	48:14	0:0	10	->
water	48:16	0:0	10	td_bitspersample
op	48:33	0:0	10	==
water	48:36	0:0	10	16
stmts	49:4	49:44	9	
water	49:4	0:0	10	tif
op	49:7	0:0	10	->
water	49:9	0:0	10	tif_postdecode
op	49:24	0:0	10	=
water	49:26	0:0	10	_TIFFSwab16BitData
water	49:44	0:0	10	;
else	50:3	51:44	6
stmts	50:8	51:44	7	
if	50:8	51:44	8	(td -> td_bitspersample == 24)
cond	50:12	50:36	9	td -> td_bitspersample == 24
water	50:12	0:0	10	td
op	50:14	0:0	10	->
water	50:16	0:0	10	td_bitspersample
op	50:33	0:0	10	==
water	50:36	0:0	10	24
stmts	51:4	51:44	9	
water	51:4	0:0	10	tif
op	51:7	0:0	10	->
water	51:9	0:0	10	tif_postdecode
op	51:24	0:0	10	=
water	51:26	0:0	10	_TIFFSwab24BitData
water	51:44	0:0	10	;
else	52:3	53:44	6
stmts	52:8	53:44	7	
if	52:8	53:44	8	(td -> td_bitspersample == 32)
cond	52:12	52:36	9	td -> td_bitspersample == 32
water	52:12	0:0	10	td
op	52:14	0:0	10	->
water	52:16	0:0	10	td_bitspersample
op	52:33	0:0	10	==
water	52:36	0:0	10	32
stmts	53:4	53:44	9	
water	53:4	0:0	10	tif
op	53:7	0:0	10	->
water	53:9	0:0	10	tif_postdecode
op	53:24	0:0	10	=
water	53:26	0:0	10	_TIFFSwab32BitData
water	53:44	0:0	10	;
else	54:3	55:44	6
stmts	54:8	55:44	7	
if	54:8	55:44	8	(td -> td_bitspersample == 64)
cond	54:12	54:36	9	td -> td_bitspersample == 64
water	54:12	0:0	10	td
op	54:14	0:0	10	->
water	54:16	0:0	10	td_bitspersample
op	54:33	0:0	10	==
water	54:36	0:0	10	64
stmts	55:4	55:44	9	
water	55:4	0:0	10	tif
op	55:7	0:0	10	->
water	55:9	0:0	10	tif_postdecode
op	55:24	0:0	10	=
water	55:26	0:0	10	_TIFFSwab64BitData
water	55:44	0:0	10	;
else	56:3	57:44	6
stmts	56:8	57:44	7	
if	56:8	57:44	8	(td -> td_bitspersample == 128)
cond	56:12	56:36	9	td -> td_bitspersample == 128
water	56:12	0:0	10	td
op	56:14	0:0	10	->
water	56:16	0:0	10	td_bitspersample
op	56:33	0:0	10	==
water	56:36	0:0	10	128
stmts	57:4	57:44	9	
water	57:4	0:0	10	tif
op	57:7	0:0	10	->
water	57:9	0:0	10	tif_postdecode
op	57:24	0:0	10	=
water	57:26	0:0	10	_TIFFSwab64BitData
water	57:44	0:0	10	;
water	58:2	0:0	6	}
break	59:2	59:7	4	
label	60:1	60:25	4	case TIFFTAG_COMPRESSION :
water	61:2	0:0	4	v
op	61:4	0:0	4	=
water	61:6	0:0	4	(
water	61:7	0:0	4	uint16
water	61:13	0:0	4	)
call	61:15	61:36	4	va_arg
arg	61:22	61:24	5	ap
water	61:22	0:0	6	ap
arg	61:26	61:36	5	uint16_vap
water	61:26	0:0	6	uint16_vap
water	61:37	0:0	4	;
if	67:2	72:2	4	(TIFFFieldSet (tif ,FIELD_COMPRESSION ))
cond	67:6	67:41	5	TIFFFieldSet (tif ,FIELD_COMPRESSION )
call	67:6	67:41	6	TIFFFieldSet
arg	67:19	67:22	7	tif
water	67:19	0:0	8	tif
arg	67:24	67:41	7	FIELD_COMPRESSION
water	67:24	0:0	8	FIELD_COMPRESSION
stmts	67:44	72:2	5	
water	67:44	0:0	6	{
if	68:3	69:9	6	(( uint32 ) td -> td_compression == v)
cond	68:7	68:37	7	( uint32 ) td -> td_compression == v
water	68:7	0:0	8	(
water	68:8	0:0	8	uint32
water	68:14	0:0	8	)
water	68:15	0:0	8	td
op	68:17	0:0	8	->
water	68:19	0:0	8	td_compression
op	68:34	0:0	8	==
water	68:37	0:0	8	v
stmts	69:4	69:9	7	
break	69:4	69:9	8	
call	70:3	70:26	6	(*tif->tif_cleanup)
arg	70:23	70:26	7	tif
water	70:23	0:0	8	tif
water	70:27	0:0	6	;
water	71:3	0:0	6	tif
op	71:6	0:0	6	->
water	71:8	0:0	6	tif_flags
op	71:18	0:0	6	&=
water	71:21	0:0	6	~TIFF_CODERSETUP
water	71:37	0:0	6	;
water	72:2	0:0	6	}
if	76:2	77:37	4	(( status =TIFFSetCompressionScheme (tif ,v ) ) != 0)
cond	76:6	76:53	5	( status =TIFFSetCompressionScheme (tif ,v ) ) != 0
water	76:6	0:0	6	(
water	76:7	0:0	6	status
op	76:14	0:0	6	=
call	76:16	76:47	6	TIFFSetCompressionScheme
arg	76:41	76:44	7	tif
water	76:41	0:0	8	tif
arg	76:46	76:47	7	v
water	76:46	0:0	8	v
water	76:48	0:0	6	)
op	76:50	0:0	6	!=
water	76:53	0:0	6	0
stmts	77:6	77:37	5	
water	77:6	0:0	6	td
op	77:8	0:0	6	->
water	77:10	0:0	6	td_compression
op	77:25	0:0	6	=
water	77:27	0:0	6	(
water	77:28	0:0	6	uint16
water	77:34	0:0	6	)
water	77:36	0:0	6	v
water	77:37	0:0	6	;
else	78:2	79:16	4
stmts	79:6	79:16	5	
water	79:6	0:0	6	status
op	79:13	0:0	6	=
water	79:15	0:0	6	0
water	79:16	0:0	6	;
break	80:2	80:7	4	
label	81:1	81:25	4	case TIFFTAG_PHOTOMETRIC :
water	82:2	0:0	4	td
op	82:4	0:0	4	->
water	82:6	0:0	4	td_photometric
op	82:21	0:0	4	=
water	82:23	0:0	4	(
water	82:24	0:0	4	uint16
water	82:30	0:0	4	)
call	82:32	82:53	4	va_arg
arg	82:39	82:41	5	ap
water	82:39	0:0	6	ap
arg	82:43	82:53	5	uint16_vap
water	82:43	0:0	6	uint16_vap
water	82:54	0:0	4	;
break	83:2	83:7	4	
label	84:1	84:27	4	case TIFFTAG_THRESHHOLDING :
water	85:2	0:0	4	td
op	85:4	0:0	4	->
water	85:6	0:0	4	td_threshholding
op	85:23	0:0	4	=
water	85:25	0:0	4	(
water	85:26	0:0	4	uint16
water	85:32	0:0	4	)
call	85:34	85:55	4	va_arg
arg	85:41	85:43	5	ap
water	85:41	0:0	6	ap
arg	85:45	85:55	5	uint16_vap
water	85:45	0:0	6	uint16_vap
water	85:56	0:0	4	;
break	86:2	86:7	4	
label	87:1	87:23	4	case TIFFTAG_FILLORDER :
water	88:2	0:0	4	v
op	88:4	0:0	4	=
water	88:6	0:0	4	(
water	88:7	0:0	4	uint16
water	88:13	0:0	4	)
call	88:15	88:36	4	va_arg
arg	88:22	88:24	5	ap
water	88:22	0:0	6	ap
arg	88:26	88:36	5	uint16_vap
water	88:26	0:0	6	uint16_vap
water	88:37	0:0	4	;
if	89:2	90:16	4	(v != FILLORDER_LSB2MSB && v != FILLORDER_MSB2LSB)
cond	89:6	89:37	5	v != FILLORDER_LSB2MSB && v != FILLORDER_MSB2LSB
water	89:6	0:0	6	v
op	89:8	0:0	6	!=
water	89:11	0:0	6	FILLORDER_LSB2MSB
op	89:29	0:0	6	&&
water	89:32	0:0	6	v
op	89:34	0:0	6	!=
water	89:37	0:0	6	FILLORDER_MSB2LSB
stmts	90:3	90:16	5	
goto	90:3	90:16	6	badvalue
water	90:8	0:0	7	badvalue
water	91:2	0:0	4	td
op	91:4	0:0	4	->
water	91:6	0:0	4	td_fillorder
op	91:19	0:0	4	=
water	91:21	0:0	4	(
water	91:22	0:0	4	uint16
water	91:28	0:0	4	)
water	91:30	0:0	4	v
water	91:31	0:0	4	;
break	92:2	92:7	4	
label	93:1	93:25	4	case TIFFTAG_ORIENTATION :
water	94:2	0:0	4	v
op	94:4	0:0	4	=
water	94:6	0:0	4	(
water	94:7	0:0	4	uint16
water	94:13	0:0	4	)
call	94:15	94:36	4	va_arg
arg	94:22	94:24	5	ap
water	94:22	0:0	6	ap
arg	94:26	94:36	5	uint16_vap
water	94:26	0:0	6	uint16_vap
water	94:37	0:0	4	;
if	95:2	96:16	4	(v < ORIENTATION_TOPLEFT || ORIENTATION_LEFTBOT < v)
cond	95:6	95:55	5	v < ORIENTATION_TOPLEFT || ORIENTATION_LEFTBOT < v
water	95:6	0:0	6	v
op	95:8	0:0	6	<
water	95:10	0:0	6	ORIENTATION_TOPLEFT
op	95:30	0:0	6	||
water	95:33	0:0	6	ORIENTATION_LEFTBOT
op	95:53	0:0	6	<
water	95:55	0:0	6	v
stmts	96:3	96:16	5	
goto	96:3	96:16	6	badvalue
water	96:8	0:0	7	badvalue
else	97:2	98:34	4
stmts	98:3	98:34	5	
water	98:3	0:0	6	td
op	98:5	0:0	6	->
water	98:7	0:0	6	td_orientation
op	98:22	0:0	6	=
water	98:24	0:0	6	(
water	98:25	0:0	6	uint16
water	98:31	0:0	6	)
water	98:33	0:0	6	v
water	98:34	0:0	6	;
break	99:2	99:7	4	
label	100:1	100:29	4	case TIFFTAG_SAMPLESPERPIXEL :
water	101:2	0:0	4	v
op	101:4	0:0	4	=
water	101:6	0:0	4	(
water	101:7	0:0	4	uint16
water	101:13	0:0	4	)
call	101:15	101:36	4	va_arg
arg	101:22	101:24	5	ap
water	101:22	0:0	6	ap
arg	101:26	101:36	5	uint16_vap
water	101:26	0:0	6	uint16_vap
water	101:37	0:0	4	;
if	102:2	103:16	4	(v == 0)
cond	102:6	102:11	5	v == 0
water	102:6	0:0	6	v
op	102:8	0:0	6	==
water	102:11	0:0	6	0
stmts	103:3	103:16	5	
goto	103:3	103:16	6	badvalue
water	103:8	0:0	7	badvalue
water	104:2	0:0	4	td
op	104:4	0:0	4	->
water	104:6	0:0	4	td_samplesperpixel
op	104:25	0:0	4	=
water	104:27	0:0	4	(
water	104:28	0:0	4	uint16
water	104:34	0:0	4	)
water	104:36	0:0	4	v
water	104:37	0:0	4	;
break	105:2	105:7	4	
label	106:1	106:26	4	case TIFFTAG_ROWSPERSTRIP :
water	107:2	0:0	4	v32
op	107:6	0:0	4	=
water	107:8	0:0	4	(
water	107:9	0:0	4	uint32
water	107:15	0:0	4	)
call	107:17	107:34	4	va_arg
arg	107:24	107:26	5	ap
water	107:24	0:0	6	ap
arg	107:28	107:34	5	uint32
water	107:28	0:0	6	uint32
water	107:35	0:0	4	;
if	108:2	109:18	4	(v32 == 0)
cond	108:6	108:13	5	v32 == 0
water	108:6	0:0	6	v32
op	108:10	0:0	6	==
water	108:13	0:0	6	0
stmts	109:3	109:18	5	
goto	109:3	109:18	6	badvalue32
water	109:8	0:0	7	badvalue32
water	110:2	0:0	4	td
op	110:4	0:0	4	->
water	110:6	0:0	4	td_rowsperstrip
op	110:22	0:0	4	=
water	110:24	0:0	4	v32
water	110:27	0:0	4	;
if	111:2	114:2	4	(!TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS ))
cond	111:6	111:45	5	!TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS )
op	111:6	0:0	6	!
call	111:7	111:45	6	TIFFFieldSet
arg	111:20	111:23	7	tif
water	111:20	0:0	8	tif
arg	111:25	111:45	7	FIELD_TILEDIMENSIONS
water	111:25	0:0	8	FIELD_TILEDIMENSIONS
stmts	111:48	114:2	5	
water	111:48	0:0	6	{
water	112:3	0:0	6	td
op	112:5	0:0	6	->
water	112:7	0:0	6	td_tilelength
op	112:21	0:0	6	=
water	112:23	0:0	6	v32
water	112:26	0:0	6	;
water	113:3	0:0	6	td
op	113:5	0:0	6	->
water	113:7	0:0	6	td_tilewidth
op	113:20	0:0	6	=
water	113:22	0:0	6	td
op	113:24	0:0	6	->
water	113:26	0:0	6	td_imagewidth
water	113:39	0:0	6	;
water	114:2	0:0	6	}
break	115:2	115:7	4	
label	116:1	116:28	4	case TIFFTAG_MINSAMPLEVALUE :
water	117:2	0:0	4	td
op	117:4	0:0	4	->
water	117:6	0:0	4	td_minsamplevalue
op	117:24	0:0	4	=
water	117:26	0:0	4	(
water	117:27	0:0	4	uint16
water	117:33	0:0	4	)
call	117:35	117:56	4	va_arg
arg	117:42	117:44	5	ap
water	117:42	0:0	6	ap
arg	117:46	117:56	5	uint16_vap
water	117:46	0:0	6	uint16_vap
water	117:57	0:0	4	;
break	118:2	118:7	4	
label	119:1	119:28	4	case TIFFTAG_MAXSAMPLEVALUE :
water	120:2	0:0	4	td
op	120:4	0:0	4	->
water	120:6	0:0	4	td_maxsamplevalue
op	120:24	0:0	4	=
water	120:26	0:0	4	(
water	120:27	0:0	4	uint16
water	120:33	0:0	4	)
call	120:35	120:56	4	va_arg
arg	120:42	120:44	5	ap
water	120:42	0:0	6	ap
arg	120:46	120:56	5	uint16_vap
water	120:46	0:0	6	uint16_vap
water	120:57	0:0	4	;
break	121:2	121:7	4	
label	122:1	122:29	4	case TIFFTAG_SMINSAMPLEVALUE :
if	123:2	124:92	4	(tif -> tif_flags & TIFF_PERSAMPLE)
cond	123:6	123:23	5	tif -> tif_flags & TIFF_PERSAMPLE
water	123:6	0:0	6	tif
op	123:9	0:0	6	->
water	123:11	0:0	6	tif_flags
op	123:21	0:0	6	&
water	123:23	0:0	6	TIFF_PERSAMPLE
stmts	124:3	124:92	5	
call	124:3	124:91	6	_TIFFsetDoubleArray
arg	124:23	124:46	7	&td->td_sminsamplevalue
op	124:23	0:0	8	&
water	124:24	0:0	8	td
op	124:26	0:0	8	->
water	124:28	0:0	8	td_sminsamplevalue
arg	124:48	124:67	7	va_arg(ap,double*)
call	124:48	124:66	8	va_arg
arg	124:55	124:57	9	ap
water	124:55	0:0	10	ap
arg	124:59	124:66	9	double*
water	124:59	0:0	10	double
op	124:65	0:0	10	*
arg	124:69	124:91	7	td->td_samplesperpixel
water	124:69	0:0	8	td
op	124:71	0:0	8	->
water	124:73	0:0	8	td_samplesperpixel
water	124:92	0:0	6	;
else	125:2	126:94	4
stmts	126:3	126:94	5	
call	126:3	126:93	6	setDoubleArrayOneValue
arg	126:26	126:49	7	&td->td_sminsamplevalue
op	126:26	0:0	8	&
water	126:27	0:0	8	td
op	126:29	0:0	8	->
water	126:31	0:0	8	td_sminsamplevalue
arg	126:51	126:69	7	va_arg(ap,double)
call	126:51	126:68	8	va_arg
arg	126:58	126:60	9	ap
water	126:58	0:0	10	ap
arg	126:62	126:68	9	double
water	126:62	0:0	10	double
arg	126:71	126:93	7	td->td_samplesperpixel
water	126:71	0:0	8	td
op	126:73	0:0	8	->
water	126:75	0:0	8	td_samplesperpixel
water	126:94	0:0	6	;
break	127:2	127:7	4	
label	128:1	128:29	4	case TIFFTAG_SMAXSAMPLEVALUE :
if	129:2	130:92	4	(tif -> tif_flags & TIFF_PERSAMPLE)
cond	129:6	129:23	5	tif -> tif_flags & TIFF_PERSAMPLE
water	129:6	0:0	6	tif
op	129:9	0:0	6	->
water	129:11	0:0	6	tif_flags
op	129:21	0:0	6	&
water	129:23	0:0	6	TIFF_PERSAMPLE
stmts	130:3	130:92	5	
call	130:3	130:91	6	_TIFFsetDoubleArray
arg	130:23	130:46	7	&td->td_smaxsamplevalue
op	130:23	0:0	8	&
water	130:24	0:0	8	td
op	130:26	0:0	8	->
water	130:28	0:0	8	td_smaxsamplevalue
arg	130:48	130:67	7	va_arg(ap,double*)
call	130:48	130:66	8	va_arg
arg	130:55	130:57	9	ap
water	130:55	0:0	10	ap
arg	130:59	130:66	9	double*
water	130:59	0:0	10	double
op	130:65	0:0	10	*
arg	130:69	130:91	7	td->td_samplesperpixel
water	130:69	0:0	8	td
op	130:71	0:0	8	->
water	130:73	0:0	8	td_samplesperpixel
water	130:92	0:0	6	;
else	131:2	132:94	4
stmts	132:3	132:94	5	
call	132:3	132:93	6	setDoubleArrayOneValue
arg	132:26	132:49	7	&td->td_smaxsamplevalue
op	132:26	0:0	8	&
water	132:27	0:0	8	td
op	132:29	0:0	8	->
water	132:31	0:0	8	td_smaxsamplevalue
arg	132:51	132:69	7	va_arg(ap,double)
call	132:51	132:68	8	va_arg
arg	132:58	132:60	9	ap
water	132:58	0:0	10	ap
arg	132:62	132:68	9	double
water	132:62	0:0	10	double
arg	132:71	132:93	7	td->td_samplesperpixel
water	132:71	0:0	8	td
op	132:73	0:0	8	->
water	132:75	0:0	8	td_samplesperpixel
water	132:94	0:0	6	;
break	133:2	133:7	4	
label	134:1	134:25	4	case TIFFTAG_XRESOLUTION :
water	135:8	0:0	4	dblval
op	135:15	0:0	4	=
call	135:17	135:34	4	va_arg
arg	135:24	135:26	5	ap
water	135:24	0:0	6	ap
arg	135:28	135:34	5	double
water	135:28	0:0	6	double
water	135:35	0:0	4	;
if	136:8	137:31	4	(dblval < 0)
cond	136:12	136:21	5	dblval < 0
water	136:12	0:0	6	dblval
op	136:19	0:0	6	<
water	136:21	0:0	6	0
stmts	137:12	137:31	5	
goto	137:12	137:31	6	badvaluedouble
water	137:17	0:0	7	badvaluedouble
water	138:2	0:0	4	td
op	138:4	0:0	4	->
water	138:6	0:0	4	td_xresolution
op	138:21	0:0	4	=
water	138:23	0:0	4	(
water	138:24	0:0	4	float
water	138:29	0:0	4	)
water	138:31	0:0	4	dblval
water	138:37	0:0	4	;
break	139:2	139:7	4	
label	140:1	140:25	4	case TIFFTAG_YRESOLUTION :
water	141:8	0:0	4	dblval
op	141:15	0:0	4	=
call	141:17	141:34	4	va_arg
arg	141:24	141:26	5	ap
water	141:24	0:0	6	ap
arg	141:28	141:34	5	double
water	141:28	0:0	6	double
water	141:35	0:0	4	;
if	142:8	143:31	4	(dblval < 0)
cond	142:12	142:21	5	dblval < 0
water	142:12	0:0	6	dblval
op	142:19	0:0	6	<
water	142:21	0:0	6	0
stmts	143:12	143:31	5	
goto	143:12	143:31	6	badvaluedouble
water	143:17	0:0	7	badvaluedouble
water	144:2	0:0	4	td
op	144:4	0:0	4	->
water	144:6	0:0	4	td_yresolution
op	144:21	0:0	4	=
water	144:23	0:0	4	(
water	144:24	0:0	4	float
water	144:29	0:0	4	)
water	144:31	0:0	4	dblval
water	144:37	0:0	4	;
break	145:2	145:7	4	
label	146:1	146:26	4	case TIFFTAG_PLANARCONFIG :
water	147:2	0:0	4	v
op	147:4	0:0	4	=
water	147:6	0:0	4	(
water	147:7	0:0	4	uint16
water	147:13	0:0	4	)
call	147:15	147:36	4	va_arg
arg	147:22	147:24	5	ap
water	147:22	0:0	6	ap
arg	147:26	147:36	5	uint16_vap
water	147:26	0:0	6	uint16_vap
water	147:37	0:0	4	;
if	148:2	149:16	4	(v != PLANARCONFIG_CONTIG && v != PLANARCONFIG_SEPARATE)
cond	148:6	148:39	5	v != PLANARCONFIG_CONTIG && v != PLANARCONFIG_SEPARATE
water	148:6	0:0	6	v
op	148:8	0:0	6	!=
water	148:11	0:0	6	PLANARCONFIG_CONTIG
op	148:31	0:0	6	&&
water	148:34	0:0	6	v
op	148:36	0:0	6	!=
water	148:39	0:0	6	PLANARCONFIG_SEPARATE
stmts	149:3	149:16	5	
goto	149:3	149:16	6	badvalue
water	149:8	0:0	7	badvalue
water	150:2	0:0	4	td
op	150:4	0:0	4	->
water	150:6	0:0	4	td_planarconfig
op	150:22	0:0	4	=
water	150:24	0:0	4	(
water	150:25	0:0	4	uint16
water	150:31	0:0	4	)
water	150:33	0:0	4	v
water	150:34	0:0	4	;
break	151:2	151:7	4	
label	152:1	152:23	4	case TIFFTAG_XPOSITION :
water	153:2	0:0	4	td
op	153:4	0:0	4	->
water	153:6	0:0	4	td_xposition
op	153:19	0:0	4	=
water	153:21	0:0	4	(
water	153:22	0:0	4	float
water	153:27	0:0	4	)
call	153:29	153:46	4	va_arg
arg	153:36	153:38	5	ap
water	153:36	0:0	6	ap
arg	153:40	153:46	5	double
water	153:40	0:0	6	double
water	153:47	0:0	4	;
break	154:2	154:7	4	
label	155:1	155:23	4	case TIFFTAG_YPOSITION :
water	156:2	0:0	4	td
op	156:4	0:0	4	->
water	156:6	0:0	4	td_yposition
op	156:19	0:0	4	=
water	156:21	0:0	4	(
water	156:22	0:0	4	float
water	156:27	0:0	4	)
call	156:29	156:46	4	va_arg
arg	156:36	156:38	5	ap
water	156:36	0:0	6	ap
arg	156:40	156:46	5	double
water	156:40	0:0	6	double
water	156:47	0:0	4	;
break	157:2	157:7	4	
label	158:1	158:28	4	case TIFFTAG_RESOLUTIONUNIT :
water	159:2	0:0	4	v
op	159:4	0:0	4	=
water	159:6	0:0	4	(
water	159:7	0:0	4	uint16
water	159:13	0:0	4	)
call	159:15	159:36	4	va_arg
arg	159:22	159:24	5	ap
water	159:22	0:0	6	ap
arg	159:26	159:36	5	uint16_vap
water	159:26	0:0	6	uint16_vap
water	159:37	0:0	4	;
if	160:2	161:16	4	(v < RESUNIT_NONE || RESUNIT_CENTIMETER < v)
cond	160:6	160:47	5	v < RESUNIT_NONE || RESUNIT_CENTIMETER < v
water	160:6	0:0	6	v
op	160:8	0:0	6	<
water	160:10	0:0	6	RESUNIT_NONE
op	160:23	0:0	6	||
water	160:26	0:0	6	RESUNIT_CENTIMETER
op	160:45	0:0	6	<
water	160:47	0:0	6	v
stmts	161:3	161:16	5	
goto	161:3	161:16	6	badvalue
water	161:8	0:0	7	badvalue
water	162:2	0:0	4	td
op	162:4	0:0	4	->
water	162:6	0:0	4	td_resolutionunit
op	162:24	0:0	4	=
water	162:26	0:0	4	(
water	162:27	0:0	4	uint16
water	162:33	0:0	4	)
water	162:35	0:0	4	v
water	162:36	0:0	4	;
break	163:2	163:7	4	
label	164:1	164:24	4	case TIFFTAG_PAGENUMBER :
water	165:2	0:0	4	td
op	165:4	0:0	4	->
water	165:6	0:0	4	td_pagenumber
op	165:19	0:0	4	[
water	165:20	0:0	4	0
op	165:21	0:0	4	]
op	165:23	0:0	4	=
water	165:25	0:0	4	(
water	165:26	0:0	4	uint16
water	165:32	0:0	4	)
call	165:34	165:55	4	va_arg
arg	165:41	165:43	5	ap
water	165:41	0:0	6	ap
arg	165:45	165:55	5	uint16_vap
water	165:45	0:0	6	uint16_vap
water	165:56	0:0	4	;
water	166:2	0:0	4	td
op	166:4	0:0	4	->
water	166:6	0:0	4	td_pagenumber
op	166:19	0:0	4	[
water	166:20	0:0	4	1
op	166:21	0:0	4	]
op	166:23	0:0	4	=
water	166:25	0:0	4	(
water	166:26	0:0	4	uint16
water	166:32	0:0	4	)
call	166:34	166:55	4	va_arg
arg	166:41	166:43	5	ap
water	166:41	0:0	6	ap
arg	166:45	166:55	5	uint16_vap
water	166:45	0:0	6	uint16_vap
water	166:56	0:0	4	;
break	167:2	167:7	4	
label	168:1	168:27	4	case TIFFTAG_HALFTONEHINTS :
water	169:2	0:0	4	td
op	169:4	0:0	4	->
water	169:6	0:0	4	td_halftonehints
op	169:22	0:0	4	[
water	169:23	0:0	4	0
op	169:24	0:0	4	]
op	169:26	0:0	4	=
water	169:28	0:0	4	(
water	169:29	0:0	4	uint16
water	169:35	0:0	4	)
call	169:37	169:58	4	va_arg
arg	169:44	169:46	5	ap
water	169:44	0:0	6	ap
arg	169:48	169:58	5	uint16_vap
water	169:48	0:0	6	uint16_vap
water	169:59	0:0	4	;
water	170:2	0:0	4	td
op	170:4	0:0	4	->
water	170:6	0:0	4	td_halftonehints
op	170:22	0:0	4	[
water	170:23	0:0	4	1
op	170:24	0:0	4	]
op	170:26	0:0	4	=
water	170:28	0:0	4	(
water	170:29	0:0	4	uint16
water	170:35	0:0	4	)
call	170:37	170:58	4	va_arg
arg	170:44	170:46	5	ap
water	170:44	0:0	6	ap
arg	170:48	170:58	5	uint16_vap
water	170:48	0:0	6	uint16_vap
water	170:59	0:0	4	;
break	171:2	171:7	4	
label	172:1	172:22	4	case TIFFTAG_COLORMAP :
water	173:2	0:0	4	v32
op	173:6	0:0	4	=
call	173:8	173:41	4	(uint32)
arg	173:17	173:41	5	1L<<td->td_bitspersample
water	173:17	0:0	6	1
water	173:18	0:0	6	L
op	173:19	0:0	6	<<
water	173:21	0:0	6	td
op	173:23	0:0	6	->
water	173:25	0:0	6	td_bitspersample
water	173:42	0:0	4	;
call	174:2	174:66	4	_TIFFsetShortArray
arg	174:21	174:40	5	&td->td_colormap[0]
op	174:21	0:0	6	&
water	174:22	0:0	6	td
op	174:24	0:0	6	->
water	174:26	0:0	6	td_colormap
op	174:37	0:0	6	[
water	174:38	0:0	6	0
op	174:39	0:0	6	]
arg	174:42	174:61	5	va_arg(ap,uint16*)
call	174:42	174:60	6	va_arg
arg	174:49	174:51	7	ap
water	174:49	0:0	8	ap
arg	174:53	174:60	7	uint16*
water	174:53	0:0	8	uint16
op	174:59	0:0	8	*
arg	174:63	174:66	5	v32
water	174:63	0:0	6	v32
water	174:67	0:0	4	;
call	175:2	175:66	4	_TIFFsetShortArray
arg	175:21	175:40	5	&td->td_colormap[1]
op	175:21	0:0	6	&
water	175:22	0:0	6	td
op	175:24	0:0	6	->
water	175:26	0:0	6	td_colormap
op	175:37	0:0	6	[
water	175:38	0:0	6	1
op	175:39	0:0	6	]
arg	175:42	175:61	5	va_arg(ap,uint16*)
call	175:42	175:60	6	va_arg
arg	175:49	175:51	7	ap
water	175:49	0:0	8	ap
arg	175:53	175:60	7	uint16*
water	175:53	0:0	8	uint16
op	175:59	0:0	8	*
arg	175:63	175:66	5	v32
water	175:63	0:0	6	v32
water	175:67	0:0	4	;
call	176:2	176:66	4	_TIFFsetShortArray
arg	176:21	176:40	5	&td->td_colormap[2]
op	176:21	0:0	6	&
water	176:22	0:0	6	td
op	176:24	0:0	6	->
water	176:26	0:0	6	td_colormap
op	176:37	0:0	6	[
water	176:38	0:0	6	2
op	176:39	0:0	6	]
arg	176:42	176:61	5	va_arg(ap,uint16*)
call	176:42	176:60	6	va_arg
arg	176:49	176:51	7	ap
water	176:49	0:0	8	ap
arg	176:53	176:60	7	uint16*
water	176:53	0:0	8	uint16
op	176:59	0:0	8	*
arg	176:63	176:66	5	v32
water	176:63	0:0	6	v32
water	176:67	0:0	4	;
break	177:2	177:7	4	
label	178:1	178:26	4	case TIFFTAG_EXTRASAMPLES :
if	179:2	180:16	4	(!setExtraSamples (td ,ap ,& v ))
cond	179:6	179:33	5	!setExtraSamples (td ,ap ,& v )
op	179:6	0:0	6	!
call	179:7	179:33	6	setExtraSamples
arg	179:23	179:25	7	td
water	179:23	0:0	8	td
arg	179:27	179:29	7	ap
water	179:27	0:0	8	ap
arg	179:31	179:33	7	&v
op	179:31	0:0	8	&
water	179:32	0:0	8	v
stmts	180:3	180:16	5	
goto	180:3	180:16	6	badvalue
water	180:8	0:0	7	badvalue
break	181:2	181:7	4	
label	182:1	182:22	4	case TIFFTAG_MATTEING :
water	183:2	0:0	4	td
op	183:4	0:0	4	->
water	183:6	0:0	4	td_extrasamples
op	183:22	0:0	4	=
water	183:25	0:0	4	(
water	183:26	0:0	4	(
water	183:27	0:0	4	(
water	183:28	0:0	4	uint16
water	183:34	0:0	4	)
call	183:36	183:57	4	va_arg
arg	183:43	183:45	5	ap
water	183:43	0:0	6	ap
arg	183:47	183:57	5	uint16_vap
water	183:47	0:0	6	uint16_vap
water	183:58	0:0	4	)
op	183:60	0:0	4	!=
water	183:63	0:0	4	0
water	183:64	0:0	4	)
water	183:65	0:0	4	;
if	184:2	187:2	4	(td -> td_extrasamples)
cond	184:6	184:10	5	td -> td_extrasamples
water	184:6	0:0	6	td
op	184:8	0:0	6	->
water	184:10	0:0	6	td_extrasamples
stmts	184:27	187:2	5	
water	184:27	0:0	6	{
decl	185:3	185:37	6	uint16	sv
op	185:13	0:0	6	=
water	185:15	0:0	6	EXTRASAMPLE_ASSOCALPHA
call	186:3	186:48	6	_TIFFsetShortArray
arg	186:22	186:40	7	&td->td_sampleinfo
op	186:22	0:0	8	&
water	186:23	0:0	8	td
op	186:25	0:0	8	->
water	186:27	0:0	8	td_sampleinfo
arg	186:42	186:45	7	&sv
op	186:42	0:0	8	&
water	186:43	0:0	8	sv
arg	186:47	186:48	7	1
water	186:47	0:0	8	1
water	186:49	0:0	6	;
water	187:2	0:0	6	}
break	188:2	188:7	4	
label	189:1	189:23	4	case TIFFTAG_TILEWIDTH :
water	190:2	0:0	4	v32
op	190:6	0:0	4	=
water	190:8	0:0	4	(
water	190:9	0:0	4	uint32
water	190:15	0:0	4	)
call	190:17	190:34	4	va_arg
arg	190:24	190:26	5	ap
water	190:24	0:0	6	ap
arg	190:28	190:34	5	uint32
water	190:28	0:0	6	uint32
water	190:35	0:0	4	;
if	191:2	196:2	4	(v32 % 16)
cond	191:6	191:12	5	v32 % 16
water	191:6	0:0	6	v32
op	191:10	0:0	6	%
water	191:12	0:0	6	16
stmts	191:16	196:2	5	
water	191:16	0:0	6	{
if	192:3	193:19	6	(tif -> tif_mode != O_RDONLY)
cond	192:7	192:24	7	tif -> tif_mode != O_RDONLY
water	192:7	0:0	8	tif
op	192:10	0:0	8	->
water	192:12	0:0	8	tif_mode
op	192:21	0:0	8	!=
water	192:24	0:0	8	O_RDONLY
stmts	193:4	193:19	7	
goto	193:4	193:19	8	badvalue32
water	193:9	0:0	9	badvalue32
call	194:3	195:50	6	TIFFWarningExt
arg	194:18	194:37	7	tif->tif_clientdata
water	194:18	0:0	8	tif
op	194:21	0:0	8	->
water	194:23	0:0	8	tif_clientdata
arg	194:39	194:52	7	tif->tif_name
water	194:39	0:0	8	tif
op	194:42	0:0	8	->
water	194:44	0:0	8	tif_name
arg	195:4	195:45	7	"Nonstandard tile width %d, convert file"
water	195:4	0:0	8	"Nonstandard tile width %d, convert file"
arg	195:47	195:50	7	v32
water	195:47	0:0	8	v32
water	195:51	0:0	6	;
water	196:2	0:0	6	}
water	197:2	0:0	4	td
op	197:4	0:0	4	->
water	197:6	0:0	4	td_tilewidth
op	197:19	0:0	4	=
water	197:21	0:0	4	v32
water	197:24	0:0	4	;
water	198:2	0:0	4	tif
op	198:5	0:0	4	->
water	198:7	0:0	4	tif_flags
op	198:17	0:0	4	|=
water	198:20	0:0	4	TIFF_ISTILED
water	198:32	0:0	4	;
break	199:2	199:7	4	
label	200:1	200:24	4	case TIFFTAG_TILELENGTH :
water	201:2	0:0	4	v32
op	201:6	0:0	4	=
water	201:8	0:0	4	(
water	201:9	0:0	4	uint32
water	201:15	0:0	4	)
call	201:17	201:34	4	va_arg
arg	201:24	201:26	5	ap
water	201:24	0:0	6	ap
arg	201:28	201:34	5	uint32
water	201:28	0:0	6	uint32
water	201:35	0:0	4	;
if	202:2	207:2	4	(v32 % 16)
cond	202:6	202:12	5	v32 % 16
water	202:6	0:0	6	v32
op	202:10	0:0	6	%
water	202:12	0:0	6	16
stmts	202:16	207:2	5	
water	202:16	0:0	6	{
if	203:3	204:19	6	(tif -> tif_mode != O_RDONLY)
cond	203:7	203:24	7	tif -> tif_mode != O_RDONLY
water	203:7	0:0	8	tif
op	203:10	0:0	8	->
water	203:12	0:0	8	tif_mode
op	203:21	0:0	8	!=
water	203:24	0:0	8	O_RDONLY
stmts	204:4	204:19	7	
goto	204:4	204:19	8	badvalue32
water	204:9	0:0	9	badvalue32
call	205:3	206:54	6	TIFFWarningExt
arg	205:18	205:37	7	tif->tif_clientdata
water	205:18	0:0	8	tif
op	205:21	0:0	8	->
water	205:23	0:0	8	tif_clientdata
arg	205:39	205:52	7	tif->tif_name
water	205:39	0:0	8	tif
op	205:42	0:0	8	->
water	205:44	0:0	8	tif_name
arg	206:7	206:49	7	"Nonstandard tile length %d, convert file"
water	206:7	0:0	8	"Nonstandard tile length %d, convert file"
arg	206:51	206:54	7	v32
water	206:51	0:0	8	v32
water	206:55	0:0	6	;
water	207:2	0:0	6	}
water	208:2	0:0	4	td
op	208:4	0:0	4	->
water	208:6	0:0	4	td_tilelength
op	208:20	0:0	4	=
water	208:22	0:0	4	v32
water	208:25	0:0	4	;
water	209:2	0:0	4	tif
op	209:5	0:0	4	->
water	209:7	0:0	4	tif_flags
op	209:17	0:0	4	|=
water	209:20	0:0	4	TIFF_ISTILED
water	209:32	0:0	4	;
break	210:2	210:7	4	
label	211:1	211:23	4	case TIFFTAG_TILEDEPTH :
water	212:2	0:0	4	v32
op	212:6	0:0	4	=
water	212:8	0:0	4	(
water	212:9	0:0	4	uint32
water	212:15	0:0	4	)
call	212:17	212:34	4	va_arg
arg	212:24	212:26	5	ap
water	212:24	0:0	6	ap
arg	212:28	212:34	5	uint32
water	212:28	0:0	6	uint32
water	212:35	0:0	4	;
if	213:2	214:18	4	(v32 == 0)
cond	213:6	213:13	5	v32 == 0
water	213:6	0:0	6	v32
op	213:10	0:0	6	==
water	213:13	0:0	6	0
stmts	214:3	214:18	5	
goto	214:3	214:18	6	badvalue32
water	214:8	0:0	7	badvalue32
water	215:2	0:0	4	td
op	215:4	0:0	4	->
water	215:6	0:0	4	td_tiledepth
op	215:19	0:0	4	=
water	215:21	0:0	4	v32
water	215:24	0:0	4	;
break	216:2	216:7	4	
label	217:1	217:22	4	case TIFFTAG_DATATYPE :
water	218:2	0:0	4	v
op	218:4	0:0	4	=
water	218:6	0:0	4	(
water	218:7	0:0	4	uint16
water	218:13	0:0	4	)
call	218:15	218:36	4	va_arg
arg	218:22	218:24	5	ap
water	218:22	0:0	6	ap
arg	218:26	218:36	5	uint16_vap
water	218:26	0:0	6	uint16_vap
water	218:37	0:0	4	;
switch	219:2	225:2	4	(v)
cond	219:10	219:10	5	v
water	219:10	0:0	6	v
stmts	219:13	225:2	5	
water	219:13	0:0	6	{
label	220:2	220:20	6	case DATATYPE_VOID :
water	220:22	0:0	6	v
op	220:24	0:0	6	=
water	220:26	0:0	6	SAMPLEFORMAT_VOID
water	220:43	0:0	6	;
break	220:45	220:50	6	
label	221:2	221:19	6	case DATATYPE_INT :
water	221:21	0:0	6	v
op	221:23	0:0	6	=
water	221:25	0:0	6	SAMPLEFORMAT_INT
water	221:41	0:0	6	;
break	221:43	221:48	6	
label	222:2	222:20	6	case DATATYPE_UINT :
water	222:22	0:0	6	v
op	222:24	0:0	6	=
water	222:26	0:0	6	SAMPLEFORMAT_UINT
water	222:43	0:0	6	;
break	222:45	222:50	6	
label	223:2	223:22	6	case DATATYPE_IEEEFP :
water	223:24	0:0	6	v
op	223:26	0:0	6	=
water	223:28	0:0	6	SAMPLEFORMAT_IEEEFP
water	223:47	0:0	6	;
break	223:48	223:53	6	
label	224:2	224:9	6	default :
goto	224:12	224:25	6	badvalue
water	224:17	0:0	7	badvalue
water	225:2	0:0	6	}
water	226:2	0:0	4	td
op	226:4	0:0	4	->
water	226:6	0:0	4	td_sampleformat
op	226:22	0:0	4	=
water	226:24	0:0	4	(
water	226:25	0:0	4	uint16
water	226:31	0:0	4	)
water	226:33	0:0	4	v
water	226:34	0:0	4	;
break	227:2	227:7	4	
label	228:1	228:26	4	case TIFFTAG_SAMPLEFORMAT :
water	229:2	0:0	4	v
op	229:4	0:0	4	=
water	229:6	0:0	4	(
water	229:7	0:0	4	uint16
water	229:13	0:0	4	)
call	229:15	229:36	4	va_arg
arg	229:22	229:24	5	ap
water	229:22	0:0	6	ap
arg	229:26	229:36	5	uint16_vap
water	229:26	0:0	6	uint16_vap
water	229:37	0:0	4	;
if	230:2	231:16	4	(v < SAMPLEFORMAT_UINT || SAMPLEFORMAT_COMPLEXIEEEFP < v)
cond	230:6	230:60	5	v < SAMPLEFORMAT_UINT || SAMPLEFORMAT_COMPLEXIEEEFP < v
water	230:6	0:0	6	v
op	230:8	0:0	6	<
water	230:10	0:0	6	SAMPLEFORMAT_UINT
op	230:28	0:0	6	||
water	230:31	0:0	6	SAMPLEFORMAT_COMPLEXIEEEFP
op	230:58	0:0	6	<
water	230:60	0:0	6	v
stmts	231:3	231:16	5	
goto	231:3	231:16	6	badvalue
water	231:8	0:0	7	badvalue
water	232:2	0:0	4	td
op	232:4	0:0	4	->
water	232:6	0:0	4	td_sampleformat
op	232:22	0:0	4	=
water	232:24	0:0	4	(
water	232:25	0:0	4	uint16
water	232:31	0:0	4	)
water	232:33	0:0	4	v
water	232:34	0:0	4	;
if	235:2	238:46	4	(td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT && td -> td_bitspersample == 32 && tif -> tif_postdecode == _TIFFSwab32BitData)
cond	235:6	237:32	5	td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT && td -> td_bitspersample == 32 && tif -> tif_postdecode == _TIFFSwab32BitData
water	235:6	0:0	6	td
op	235:8	0:0	6	->
water	235:10	0:0	6	td_sampleformat
op	235:26	0:0	6	==
water	235:29	0:0	6	SAMPLEFORMAT_COMPLEXINT
op	236:6	0:0	6	&&
water	236:9	0:0	6	td
op	236:11	0:0	6	->
water	236:13	0:0	6	td_bitspersample
op	236:30	0:0	6	==
water	236:33	0:0	6	32
op	237:6	0:0	6	&&
water	237:9	0:0	6	tif
op	237:12	0:0	6	->
water	237:14	0:0	6	tif_postdecode
op	237:29	0:0	6	==
water	237:32	0:0	6	_TIFFSwab32BitData
stmts	238:6	238:46	5	
water	238:6	0:0	6	tif
op	238:9	0:0	6	->
water	238:11	0:0	6	tif_postdecode
op	238:26	0:0	6	=
water	238:28	0:0	6	_TIFFSwab16BitData
water	238:46	0:0	6	;
else	239:2	243:46	4
stmts	239:7	243:46	5	
if	239:7	243:46	6	(( td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT || td -> td_sampleformat == SAMPLEFORMAT_COMPLEXIEEEFP ) && td -> td_bitspersample == 64 && tif -> tif_postdecode == _TIFFSwab64BitData)
cond	239:11	242:30	7	( td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT || td -> td_sampleformat == SAMPLEFORMAT_COMPLEXIEEEFP ) && td -> td_bitspersample == 64 && tif -> tif_postdecode == _TIFFSwab64BitData
water	239:11	0:0	8	(
water	239:12	0:0	8	td
op	239:14	0:0	8	->
water	239:16	0:0	8	td_sampleformat
op	239:32	0:0	8	==
water	239:35	0:0	8	SAMPLEFORMAT_COMPLEXINT
op	240:5	0:0	8	||
water	240:8	0:0	8	td
op	240:10	0:0	8	->
water	240:12	0:0	8	td_sampleformat
op	240:28	0:0	8	==
water	240:31	0:0	8	SAMPLEFORMAT_COMPLEXIEEEFP
water	240:57	0:0	8	)
op	241:4	0:0	8	&&
water	241:7	0:0	8	td
op	241:9	0:0	8	->
water	241:11	0:0	8	td_bitspersample
op	241:28	0:0	8	==
water	241:31	0:0	8	64
op	242:4	0:0	8	&&
water	242:7	0:0	8	tif
op	242:10	0:0	8	->
water	242:12	0:0	8	tif_postdecode
op	242:27	0:0	8	==
water	242:30	0:0	8	_TIFFSwab64BitData
stmts	243:6	243:46	7	
water	243:6	0:0	8	tif
op	243:9	0:0	8	->
water	243:11	0:0	8	tif_postdecode
op	243:26	0:0	8	=
water	243:28	0:0	8	_TIFFSwab32BitData
water	243:46	0:0	8	;
break	244:2	244:7	4	
label	245:1	245:24	4	case TIFFTAG_IMAGEDEPTH :
water	246:2	0:0	4	td
op	246:4	0:0	4	->
water	246:6	0:0	4	td_imagedepth
op	246:20	0:0	4	=
water	246:22	0:0	4	(
water	246:23	0:0	4	uint32
water	246:29	0:0	4	)
call	246:31	246:48	4	va_arg
arg	246:38	246:40	5	ap
water	246:38	0:0	6	ap
arg	246:42	246:48	5	uint32
water	246:42	0:0	6	uint32
water	246:49	0:0	4	;
break	247:2	247:7	4	
label	248:1	248:20	4	case TIFFTAG_SUBIFD :
if	249:2	253:2	4	(( tif -> tif_flags & TIFF_INSUBIFD ) == 0)
cond	249:6	249:42	5	( tif -> tif_flags & TIFF_INSUBIFD ) == 0
water	249:6	0:0	6	(
water	249:7	0:0	6	tif
op	249:10	0:0	6	->
water	249:12	0:0	6	tif_flags
op	249:22	0:0	6	&
water	249:24	0:0	6	TIFF_INSUBIFD
water	249:37	0:0	6	)
op	249:39	0:0	6	==
water	249:42	0:0	6	0
stmts	249:45	253:2	5	
water	249:45	0:0	6	{
water	250:3	0:0	6	td
op	250:5	0:0	6	->
water	250:7	0:0	6	td_nsubifd
op	250:18	0:0	6	=
water	250:20	0:0	6	(
water	250:21	0:0	6	uint16
water	250:27	0:0	6	)
call	250:29	250:50	6	va_arg
arg	250:36	250:38	7	ap
water	250:36	0:0	8	ap
arg	250:40	250:50	7	uint16_vap
water	250:40	0:0	8	uint16_vap
water	250:51	0:0	6	;
call	251:3	252:28	6	_TIFFsetLong8Array
arg	251:22	251:36	7	&td->td_subifd
op	251:22	0:0	8	&
water	251:23	0:0	8	td
op	251:25	0:0	8	->
water	251:27	0:0	8	td_subifd
arg	251:38	251:67	7	(uint64*)va_arg(ap,uint64*)
water	251:38	0:0	8	(
water	251:39	0:0	8	uint64
op	251:45	0:0	8	*
water	251:46	0:0	8	)
call	251:48	251:66	8	va_arg
arg	251:55	251:57	9	ap
water	251:55	0:0	10	ap
arg	251:59	251:66	9	uint64*
water	251:59	0:0	10	uint64
op	251:65	0:0	10	*
arg	252:7	252:28	7	(long)td->td_nsubifd
water	252:7	0:0	8	(
water	252:8	0:0	8	long
water	252:12	0:0	8	)
water	252:14	0:0	8	td
op	252:16	0:0	8	->
water	252:18	0:0	8	td_nsubifd
water	252:29	0:0	6	;
water	253:2	0:0	6	}
else	253:4	258:2	4
stmts	253:9	258:2	5	
water	253:9	0:0	6	{
call	254:3	256:22	6	TIFFErrorExt
arg	254:16	254:35	7	tif->tif_clientdata
water	254:16	0:0	8	tif
op	254:19	0:0	8	->
water	254:21	0:0	8	tif_clientdata
arg	254:37	254:43	7	module
water	254:37	0:0	8	module
arg	255:9	255:41	7	"%s: Sorry, cannot nest SubIFDs"
water	255:9	0:0	8	"%s: Sorry, cannot nest SubIFDs"
arg	256:9	256:22	7	tif->tif_name
water	256:9	0:0	8	tif
op	256:12	0:0	8	->
water	256:14	0:0	8	tif_name
water	256:23	0:0	6	;
water	257:3	0:0	6	status
op	257:10	0:0	6	=
water	257:12	0:0	6	0
water	257:13	0:0	6	;
water	258:2	0:0	6	}
break	259:2	259:7	4	
label	260:1	260:30	4	case TIFFTAG_YCBCRPOSITIONING :
water	261:2	0:0	4	td
op	261:4	0:0	4	->
water	261:6	0:0	4	td_ycbcrpositioning
op	261:26	0:0	4	=
water	261:28	0:0	4	(
water	261:29	0:0	4	uint16
water	261:35	0:0	4	)
call	261:37	261:58	4	va_arg
arg	261:44	261:46	5	ap
water	261:44	0:0	6	ap
arg	261:48	261:58	5	uint16_vap
water	261:48	0:0	6	uint16_vap
water	261:59	0:0	4	;
break	262:2	262:7	4	
label	263:1	263:30	4	case TIFFTAG_YCBCRSUBSAMPLING :
water	264:2	0:0	4	td
op	264:4	0:0	4	->
water	264:6	0:0	4	td_ycbcrsubsampling
op	264:25	0:0	4	[
water	264:26	0:0	4	0
op	264:27	0:0	4	]
op	264:29	0:0	4	=
water	264:31	0:0	4	(
water	264:32	0:0	4	uint16
water	264:38	0:0	4	)
call	264:40	264:61	4	va_arg
arg	264:47	264:49	5	ap
water	264:47	0:0	6	ap
arg	264:51	264:61	5	uint16_vap
water	264:51	0:0	6	uint16_vap
water	264:62	0:0	4	;
water	265:2	0:0	4	td
op	265:4	0:0	4	->
water	265:6	0:0	4	td_ycbcrsubsampling
op	265:25	0:0	4	[
water	265:26	0:0	4	1
op	265:27	0:0	4	]
op	265:29	0:0	4	=
water	265:31	0:0	4	(
water	265:32	0:0	4	uint16
water	265:38	0:0	4	)
call	265:40	265:61	4	va_arg
arg	265:47	265:49	5	ap
water	265:47	0:0	6	ap
arg	265:51	265:61	5	uint16_vap
water	265:51	0:0	6	uint16_vap
water	265:62	0:0	4	;
break	266:2	266:7	4	
label	267:1	267:30	4	case TIFFTAG_TRANSFERFUNCTION :
water	268:2	0:0	4	v
op	268:4	0:0	4	=
water	268:6	0:0	4	(
water	268:7	0:0	4	td
op	268:9	0:0	4	->
water	268:11	0:0	4	td_samplesperpixel
op	268:30	0:0	4	-
water	268:32	0:0	4	td
op	268:34	0:0	4	->
water	268:36	0:0	4	td_extrasamples
water	268:51	0:0	4	)
op	268:53	0:0	4	>
water	268:55	0:0	4	1
water	268:57	0:0	4	?
water	268:59	0:0	4	3
water	268:61	0:0	4	:
water	268:63	0:0	4	1
water	268:64	0:0	4	;
for	269:2	271:53	4	(i = 0 ;i < v;i ++)
forinit	269:7	269:12	5	i = 0 ;
water	269:7	0:0	6	i
op	269:9	0:0	6	=
water	269:11	0:0	6	0
water	269:12	0:0	6	;
cond	269:14	269:18	5	i < v
water	269:14	0:0	6	i
op	269:16	0:0	6	<
water	269:18	0:0	6	v
forexpr	269:21	269:22	5	i ++
water	269:21	0:0	6	i
op	269:22	0:0	6	++
stmts	270:3	271:53	5	
call	270:3	271:52	6	_TIFFsetShortArray
arg	270:22	270:49	7	&td->td_transferfunction[i]
op	270:22	0:0	8	&
water	270:23	0:0	8	td
op	270:25	0:0	8	->
water	270:27	0:0	8	td_transferfunction
op	270:46	0:0	8	[
water	270:47	0:0	8	i
op	270:48	0:0	8	]
arg	271:7	271:26	7	va_arg(ap,uint16*)
call	271:7	271:25	8	va_arg
arg	271:14	271:16	9	ap
water	271:14	0:0	10	ap
arg	271:18	271:25	9	uint16*
water	271:18	0:0	10	uint16
op	271:24	0:0	10	*
arg	271:28	271:52	7	1L<<td->td_bitspersample
water	271:28	0:0	8	1
water	271:29	0:0	8	L
op	271:30	0:0	8	<<
water	271:32	0:0	8	td
op	271:34	0:0	8	->
water	271:36	0:0	8	td_bitspersample
water	271:53	0:0	6	;
break	272:2	272:7	4	
label	273:1	273:33	4	case TIFFTAG_REFERENCEBLACKWHITE :
call	275:2	275:65	4	_TIFFsetFloatArray
arg	275:21	275:42	5	&td->td_refblackwhite
op	275:21	0:0	6	&
water	275:22	0:0	6	td
op	275:24	0:0	6	->
water	275:26	0:0	6	td_refblackwhite
arg	275:44	275:62	5	va_arg(ap,float*)
call	275:44	275:61	6	va_arg
arg	275:51	275:53	7	ap
water	275:51	0:0	8	ap
arg	275:55	275:61	7	float*
water	275:55	0:0	8	float
op	275:60	0:0	8	*
arg	275:64	275:65	5	6
water	275:64	0:0	6	6
water	275:66	0:0	4	;
break	276:2	276:7	4	
label	277:1	277:22	4	case TIFFTAG_INKNAMES :
water	278:2	0:0	4	v
op	278:4	0:0	4	=
water	278:6	0:0	4	(
water	278:7	0:0	4	uint16
water	278:13	0:0	4	)
call	278:15	278:36	4	va_arg
arg	278:22	278:24	5	ap
water	278:22	0:0	6	ap
arg	278:26	278:36	5	uint16_vap
water	278:26	0:0	6	uint16_vap
water	278:37	0:0	4	;
water	279:2	0:0	4	s
op	279:4	0:0	4	=
call	279:6	279:22	4	va_arg
arg	279:13	279:15	5	ap
water	279:13	0:0	6	ap
arg	279:17	279:22	5	char*
water	279:17	0:0	6	char
op	279:21	0:0	6	*
water	279:23	0:0	4	;
water	280:2	0:0	4	v
op	280:4	0:0	4	=
call	280:6	280:35	4	checkInkNamesString
arg	280:26	280:29	5	tif
water	280:26	0:0	6	tif
arg	280:31	280:32	5	v
water	280:31	0:0	6	v
arg	280:34	280:35	5	s
water	280:34	0:0	6	s
water	280:36	0:0	4	;
water	281:2	0:0	4	status
op	281:9	0:0	4	=
water	281:11	0:0	4	v
op	281:13	0:0	4	>
water	281:15	0:0	4	0
water	281:16	0:0	4	;
if	282:2	285:2	4	(v > 0)
cond	282:6	282:10	5	v > 0
water	282:6	0:0	6	v
op	282:8	0:0	6	>
water	282:10	0:0	6	0
stmts	282:14	285:2	5	
water	282:14	0:0	6	{
call	283:3	283:41	6	_TIFFsetNString
arg	283:19	283:35	7	&td->td_inknames
op	283:19	0:0	8	&
water	283:20	0:0	8	td
op	283:22	0:0	8	->
water	283:24	0:0	8	td_inknames
arg	283:37	283:38	7	s
water	283:37	0:0	8	s
arg	283:40	283:41	7	v
water	283:40	0:0	8	v
water	283:42	0:0	6	;
water	284:3	0:0	6	td
op	284:5	0:0	6	->
water	284:7	0:0	6	td_inknameslen
op	284:22	0:0	6	=
water	284:24	0:0	6	v
water	284:25	0:0	6	;
water	285:2	0:0	6	}
break	286:2	286:7	4	
label	287:1	287:23	4	case TIFFTAG_PERSAMPLE :
water	288:2	0:0	4	v
op	288:4	0:0	4	=
water	288:6	0:0	4	(
water	288:7	0:0	4	uint16
water	288:13	0:0	4	)
call	288:15	288:36	4	va_arg
arg	288:22	288:24	5	ap
water	288:22	0:0	6	ap
arg	288:26	288:36	5	uint16_vap
water	288:26	0:0	6	uint16_vap
water	288:37	0:0	4	;
if	289:2	290:35	4	(v == PERSAMPLE_MULTI)
cond	289:6	289:11	5	v == PERSAMPLE_MULTI
water	289:6	0:0	6	v
op	289:8	0:0	6	==
water	289:11	0:0	6	PERSAMPLE_MULTI
stmts	290:3	290:35	5	
water	290:3	0:0	6	tif
op	290:6	0:0	6	->
water	290:8	0:0	6	tif_flags
op	290:18	0:0	6	|=
water	290:21	0:0	6	TIFF_PERSAMPLE
water	290:35	0:0	6	;
else	291:2	292:36	4
stmts	292:3	292:36	5	
water	292:3	0:0	6	tif
op	292:6	0:0	6	->
water	292:8	0:0	6	tif_flags
op	292:18	0:0	6	&=
water	292:21	0:0	6	~TIFF_PERSAMPLE
water	292:36	0:0	6	;
break	293:2	293:7	4	
label	294:1	294:8	4	default :
water	294:10	0:0	4	{
decl	295:2	295:18	4	TIFFTagValue	*tv
decl	296:2	296:22	4	int	tv_size
water	296:13	0:0	4	,
decl	296:2	296:22	4	int	iCustom
if	307:2	314:2	4	(fip -> field_bit != FIELD_CUSTOM)
cond	307:5	307:23	5	fip -> field_bit != FIELD_CUSTOM
water	307:5	0:0	6	fip
op	307:8	0:0	6	->
water	307:10	0:0	6	field_bit
op	307:20	0:0	6	!=
water	307:23	0:0	6	FIELD_CUSTOM
stmts	307:37	314:2	5	
water	307:37	0:0	6	{
call	308:3	311:22	6	TIFFErrorExt
arg	308:16	308:35	7	tif->tif_clientdata
water	308:16	0:0	8	tif
op	308:19	0:0	8	->
water	308:21	0:0	8	tif_clientdata
arg	308:37	308:43	7	module
water	308:37	0:0	8	module
arg	309:7	309:58	7	"%s: Invalid %stag \"%s\" (not supported by codec)"
water	309:7	0:0	8	"%s: Invalid %stag \"%s\" (not supported by codec)"
arg	310:7	310:20	7	tif->tif_name
water	310:7	0:0	8	tif
op	310:10	0:0	8	->
water	310:12	0:0	8	tif_name
arg	310:22	310:55	7	isPseudoTag(tag)?"pseudo-":""
call	310:22	310:37	8	isPseudoTag
arg	310:34	310:37	9	tag
water	310:34	0:0	10	tag
water	310:39	0:0	8	?
water	310:41	0:0	8	"pseudo-"
water	310:51	0:0	8	:
water	310:53	0:0	8	""
arg	311:7	311:22	7	fip->field_name
water	311:7	0:0	8	fip
op	311:10	0:0	8	->
water	311:12	0:0	8	field_name
water	311:23	0:0	6	;
water	312:3	0:0	6	status
op	312:10	0:0	6	=
water	312:12	0:0	6	0
water	312:13	0:0	6	;
break	313:3	313:8	6	
water	314:2	0:0	6	}
water	319:2	0:0	4	tv
op	319:5	0:0	4	=
water	319:7	0:0	4	NULL
water	319:11	0:0	4	;
for	320:2	329:2	4	(iCustom = 0 ;iCustom < td -> td_customValueCount;iCustom ++)
forinit	320:7	320:18	5	iCustom = 0 ;
water	320:7	0:0	6	iCustom
op	320:15	0:0	6	=
water	320:17	0:0	6	0
water	320:18	0:0	6	;
cond	320:20	320:34	5	iCustom < td -> td_customValueCount
water	320:20	0:0	6	iCustom
op	320:28	0:0	6	<
water	320:30	0:0	6	td
op	320:32	0:0	6	->
water	320:34	0:0	6	td_customValueCount
forexpr	320:55	320:62	5	iCustom ++
water	320:55	0:0	6	iCustom
op	320:62	0:0	6	++
stmts	320:66	329:2	5	
water	320:66	0:0	6	{
if	321:3	328:3	6	(td -> td_customValues [ iCustom ] . info -> field_tag == tag)
cond	321:7	321:55	7	td -> td_customValues [ iCustom ] . info -> field_tag == tag
water	321:7	0:0	8	td
op	321:9	0:0	8	->
water	321:11	0:0	8	td_customValues
op	321:26	0:0	8	[
water	321:27	0:0	8	iCustom
op	321:34	0:0	8	]
op	321:35	0:0	8	.
water	321:36	0:0	8	info
op	321:40	0:0	8	->
water	321:42	0:0	8	field_tag
op	321:52	0:0	8	==
water	321:55	0:0	8	tag
stmts	321:60	328:3	7	
water	321:60	0:0	8	{
water	322:4	0:0	8	tv
op	322:7	0:0	8	=
water	322:9	0:0	8	td
op	322:11	0:0	8	->
water	322:13	0:0	8	td_customValues
op	322:29	0:0	8	+
water	322:31	0:0	8	iCustom
water	322:38	0:0	8	;
if	323:4	326:4	8	(tv -> value != NULL)
cond	323:8	323:21	9	tv -> value != NULL
water	323:8	0:0	10	tv
op	323:10	0:0	10	->
water	323:12	0:0	10	value
op	323:18	0:0	10	!=
water	323:21	0:0	10	NULL
stmts	323:27	326:4	9	
water	323:27	0:0	10	{
call	324:5	324:24	10	_TIFFfree
arg	324:15	324:24	11	tv->value
water	324:15	0:0	12	tv
op	324:17	0:0	12	->
water	324:19	0:0	12	value
water	324:25	0:0	10	;
water	325:5	0:0	10	tv
op	325:7	0:0	10	->
water	325:9	0:0	10	value
op	325:15	0:0	10	=
water	325:17	0:0	10	NULL
water	325:21	0:0	10	;
water	326:4	0:0	10	}
break	327:4	327:9	8	
water	328:3	0:0	8	}
water	329:2	0:0	6	}
if	334:2	355:2	4	(tv == NULL)
cond	334:5	334:11	5	tv == NULL
water	334:5	0:0	6	tv
op	334:8	0:0	6	==
water	334:11	0:0	6	NULL
stmts	334:17	355:2	5	
water	334:17	0:0	6	{
decl	335:3	335:33	6	TIFFTagValue	*new_customValues
water	337:3	0:0	6	td
op	337:5	0:0	6	->
water	337:7	0:0	6	td_customValueCount
op	337:26	0:0	6	++
water	337:28	0:0	6	;
water	338:3	0:0	6	new_customValues
op	338:20	0:0	6	=
water	338:22	0:0	6	(
water	338:23	0:0	6	TIFFTagValue
op	338:36	0:0	6	*
water	338:37	0:0	6	)
call	339:7	340:53	6	_TIFFrealloc
arg	339:20	339:39	7	td->td_customValues
water	339:20	0:0	8	td
op	339:22	0:0	8	->
water	339:24	0:0	8	td_customValues
arg	340:7	340:53	7	sizeof(TIFFTagValue)*td->td_customValueCount
op	340:7	0:0	8	sizeof
water	340:13	0:0	8	(
water	340:14	0:0	8	TIFFTagValue
water	340:26	0:0	8	)
op	340:28	0:0	8	*
water	340:30	0:0	8	td
op	340:32	0:0	8	->
water	340:34	0:0	8	td_customValueCount
water	340:54	0:0	6	;
if	341:3	347:3	6	(! new_customValues)
cond	341:7	341:8	7	! new_customValues
op	341:7	0:0	8	!
water	341:8	0:0	8	new_customValues
stmts	341:26	347:3	7	
water	341:26	0:0	8	{
call	342:4	344:21	8	TIFFErrorExt
arg	342:17	342:36	9	tif->tif_clientdata
water	342:17	0:0	10	tif
op	342:20	0:0	10	->
water	342:22	0:0	10	tif_clientdata
arg	342:38	342:44	9	module
water	342:38	0:0	10	module
arg	343:8	343:64	9	"%s: Failed to allocate space for list of custom values"
water	343:8	0:0	10	"%s: Failed to allocate space for list of custom values"
arg	344:8	344:21	9	tif->tif_name
water	344:8	0:0	10	tif
op	344:11	0:0	10	->
water	344:13	0:0	10	tif_name
water	344:22	0:0	8	;
water	345:4	0:0	8	status
op	345:11	0:0	8	=
water	345:13	0:0	8	0
water	345:14	0:0	8	;
goto	346:4	346:12	8	end
water	346:9	0:0	9	end
water	347:3	0:0	8	}
water	349:3	0:0	6	td
op	349:5	0:0	6	->
water	349:7	0:0	6	td_customValues
op	349:23	0:0	6	=
water	349:25	0:0	6	new_customValues
water	349:41	0:0	6	;
water	351:3	0:0	6	tv
op	351:6	0:0	6	=
water	351:8	0:0	6	td
op	351:10	0:0	6	->
water	351:12	0:0	6	td_customValues
op	351:28	0:0	6	+
water	351:30	0:0	6	(
water	351:31	0:0	6	td
op	351:33	0:0	6	->
water	351:35	0:0	6	td_customValueCount
op	351:55	0:0	6	-
water	351:57	0:0	6	1
water	351:58	0:0	6	)
water	351:59	0:0	6	;
water	352:3	0:0	6	tv
op	352:5	0:0	6	->
water	352:7	0:0	6	info
op	352:12	0:0	6	=
water	352:14	0:0	6	fip
water	352:17	0:0	6	;
water	353:3	0:0	6	tv
op	353:5	0:0	6	->
water	353:7	0:0	6	value
op	353:13	0:0	6	=
water	353:15	0:0	6	NULL
water	353:19	0:0	6	;
water	354:3	0:0	6	tv
op	354:5	0:0	6	->
water	354:7	0:0	6	count
op	354:13	0:0	6	=
water	354:15	0:0	6	0
water	354:16	0:0	6	;
water	355:2	0:0	6	}
water	360:2	0:0	4	tv_size
op	360:10	0:0	4	=
call	360:12	360:41	4	_TIFFDataSize
arg	360:26	360:41	5	fip->field_type
water	360:26	0:0	6	fip
op	360:29	0:0	6	->
water	360:31	0:0	6	field_type
water	360:42	0:0	4	;
if	361:2	368:2	4	(tv_size == 0)
cond	361:6	361:17	5	tv_size == 0
water	361:6	0:0	6	tv_size
op	361:14	0:0	6	==
water	361:17	0:0	6	0
stmts	361:20	368:2	5	
water	361:20	0:0	6	{
water	362:3	0:0	6	status
op	362:10	0:0	6	=
water	362:12	0:0	6	0
water	362:13	0:0	6	;
call	363:3	366:22	6	TIFFErrorExt
arg	363:16	363:35	7	tif->tif_clientdata
water	363:16	0:0	8	tif
op	363:19	0:0	8	->
water	363:21	0:0	8	tif_clientdata
arg	363:37	363:43	7	module
water	363:37	0:0	8	module
arg	364:7	364:41	7	"%s: Bad field type %d for \"%s\""
water	364:7	0:0	8	"%s: Bad field type %d for \"%s\""
arg	365:7	365:20	7	tif->tif_name
water	365:7	0:0	8	tif
op	365:10	0:0	8	->
water	365:12	0:0	8	tif_name
arg	365:22	365:37	7	fip->field_type
water	365:22	0:0	8	fip
op	365:25	0:0	8	->
water	365:27	0:0	8	field_type
arg	366:7	366:22	7	fip->field_name
water	366:7	0:0	8	fip
op	366:10	0:0	8	->
water	366:12	0:0	8	field_name
water	366:23	0:0	6	;
goto	367:3	367:11	6	end
water	367:8	0:0	7	end
water	368:2	0:0	6	}
if	370:2	387:2	4	(fip -> field_type == TIFF_ASCII)
cond	370:6	370:25	5	fip -> field_type == TIFF_ASCII
water	370:6	0:0	6	fip
op	370:9	0:0	6	->
water	370:11	0:0	6	field_type
op	370:22	0:0	6	==
water	370:25	0:0	6	TIFF_ASCII
stmts	371:2	387:2	5	
water	371:2	0:0	6	{
decl	372:3	372:12	6	uint32	ma
decl	373:3	373:11	6	char	*mb
if	374:3	379:3	6	(fip -> field_passcount)
cond	374:7	374:12	7	fip -> field_passcount
water	374:7	0:0	8	fip
op	374:10	0:0	8	->
water	374:12	0:0	8	field_passcount
stmts	375:3	379:3	7	
water	375:3	0:0	8	{
call	376:4	376:48	8	assert
arg	376:11	376:48	9	fip->field_writecount==TIFF_VARIABLE2
water	376:11	0:0	10	fip
op	376:14	0:0	10	->
water	376:16	0:0	10	field_writecount
op	376:32	0:0	10	==
water	376:34	0:0	10	TIFF_VARIABLE2
water	376:49	0:0	8	;
water	377:4	0:0	8	ma
op	377:6	0:0	8	=
water	377:7	0:0	8	(
water	377:8	0:0	8	uint32
water	377:14	0:0	8	)
call	377:15	377:31	8	va_arg
arg	377:22	377:24	9	ap
water	377:22	0:0	10	ap
arg	377:25	377:31	9	uint32
water	377:25	0:0	10	uint32
water	377:32	0:0	8	;
water	378:4	0:0	8	mb
op	378:6	0:0	8	=
water	378:7	0:0	8	(
water	378:8	0:0	8	char
op	378:12	0:0	8	*
water	378:13	0:0	8	)
call	378:14	378:29	8	va_arg
arg	378:21	378:23	9	ap
water	378:21	0:0	10	ap
arg	378:24	378:29	9	char*
water	378:24	0:0	10	char
op	378:28	0:0	10	*
water	378:30	0:0	8	;
water	379:3	0:0	8	}
else	380:3	384:3	6
stmts	381:3	384:3	7	
water	381:3	0:0	8	{
water	382:4	0:0	8	mb
op	382:6	0:0	8	=
water	382:7	0:0	8	(
water	382:8	0:0	8	char
op	382:12	0:0	8	*
water	382:13	0:0	8	)
call	382:14	382:29	8	va_arg
arg	382:21	382:23	9	ap
water	382:21	0:0	10	ap
arg	382:24	382:29	9	char*
water	382:24	0:0	10	char
op	382:28	0:0	10	*
water	382:30	0:0	8	;
water	383:4	0:0	8	ma
op	383:6	0:0	8	=
call	383:7	383:28	8	(uint32)
arg	383:16	383:28	9	strlen(mb)+1
call	383:16	383:25	10	strlen
arg	383:23	383:25	11	mb
water	383:23	0:0	12	mb
op	383:26	0:0	10	+
water	383:27	0:0	10	1
water	383:29	0:0	8	;
water	384:3	0:0	8	}
water	385:3	0:0	6	tv
op	385:5	0:0	6	->
water	385:7	0:0	6	count
op	385:12	0:0	6	=
water	385:13	0:0	6	ma
water	385:15	0:0	6	;
call	386:3	386:34	6	setByteArray
arg	386:16	386:26	7	&tv->value
op	386:16	0:0	8	&
water	386:17	0:0	8	tv
op	386:19	0:0	8	->
water	386:21	0:0	8	value
arg	386:27	386:29	7	mb
water	386:27	0:0	8	mb
arg	386:30	386:32	7	ma
water	386:30	0:0	8	ma
arg	386:33	386:34	7	1
water	386:33	0:0	8	1
water	386:35	0:0	6	;
water	387:2	0:0	6	}
else	388:2	518:2	4
stmts	389:2	518:2	5	
water	389:2	0:0	6	{
if	390:3	395:3	6	(fip -> field_passcount)
cond	390:7	390:12	7	fip -> field_passcount
water	390:7	0:0	8	fip
op	390:10	0:0	8	->
water	390:12	0:0	8	field_passcount
stmts	390:29	395:3	7	
water	390:29	0:0	8	{
if	391:4	392:44	8	(fip -> field_writecount == TIFF_VARIABLE2)
cond	391:8	391:33	9	fip -> field_writecount == TIFF_VARIABLE2
water	391:8	0:0	10	fip
op	391:11	0:0	10	->
water	391:13	0:0	10	field_writecount
op	391:30	0:0	10	==
water	391:33	0:0	10	TIFF_VARIABLE2
stmts	392:5	392:44	9	
water	392:5	0:0	10	tv
op	392:7	0:0	10	->
water	392:9	0:0	10	count
op	392:15	0:0	10	=
water	392:17	0:0	10	(
water	392:18	0:0	10	uint32
water	392:24	0:0	10	)
call	392:26	392:43	10	va_arg
arg	392:33	392:35	11	ap
water	392:33	0:0	12	ap
arg	392:37	392:43	11	uint32
water	392:37	0:0	12	uint32
water	392:44	0:0	10	;
else	393:4	394:38	8
stmts	394:5	394:38	9	
water	394:5	0:0	10	tv
op	394:7	0:0	10	->
water	394:9	0:0	10	count
op	394:15	0:0	10	=
water	394:17	0:0	10	(
water	394:18	0:0	10	int
water	394:21	0:0	10	)
call	394:23	394:37	10	va_arg
arg	394:30	394:32	11	ap
water	394:30	0:0	12	ap
arg	394:34	394:37	11	int
water	394:34	0:0	12	int
water	394:38	0:0	10	;
water	395:3	0:0	8	}
else	395:5	397:17	6
stmts	395:10	397:17	7	
if	395:10	397:17	8	(fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2)
cond	395:14	396:34	9	fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2
water	395:14	0:0	10	fip
op	395:17	0:0	10	->
water	395:19	0:0	10	field_writecount
op	395:36	0:0	10	==
water	395:39	0:0	10	TIFF_VARIABLE
op	396:6	0:0	10	||
water	396:9	0:0	10	fip
op	396:12	0:0	10	->
water	396:14	0:0	10	field_writecount
op	396:31	0:0	10	==
water	396:34	0:0	10	TIFF_VARIABLE2
stmts	397:4	397:17	9	
water	397:4	0:0	10	tv
op	397:6	0:0	10	->
water	397:8	0:0	10	count
op	397:14	0:0	10	=
water	397:16	0:0	10	1
water	397:17	0:0	10	;
else	398:3	399:38	6
stmts	398:8	399:38	7	
if	398:8	399:38	8	(fip -> field_writecount == TIFF_SPP)
cond	398:12	398:37	9	fip -> field_writecount == TIFF_SPP
water	398:12	0:0	10	fip
op	398:15	0:0	10	->
water	398:17	0:0	10	field_writecount
op	398:34	0:0	10	==
water	398:37	0:0	10	TIFF_SPP
stmts	399:4	399:38	9	
water	399:4	0:0	10	tv
op	399:6	0:0	10	->
water	399:8	0:0	10	count
op	399:14	0:0	10	=
water	399:16	0:0	10	td
op	399:18	0:0	10	->
water	399:20	0:0	10	td_samplesperpixel
water	399:38	0:0	10	;
else	400:3	401:37	6
stmts	401:4	401:37	7	
water	401:4	0:0	8	tv
op	401:6	0:0	8	->
water	401:8	0:0	8	count
op	401:14	0:0	8	=
water	401:16	0:0	8	fip
op	401:19	0:0	8	->
water	401:21	0:0	8	field_writecount
water	401:37	0:0	8	;
if	403:3	414:3	6	(tv -> count == 0)
cond	403:7	403:20	7	tv -> count == 0
water	403:7	0:0	8	tv
op	403:9	0:0	8	->
water	403:11	0:0	8	count
op	403:17	0:0	8	==
water	403:20	0:0	8	0
stmts	403:23	414:3	7	
water	403:23	0:0	8	{
water	404:4	0:0	8	status
op	404:11	0:0	8	=
water	404:13	0:0	8	0
water	404:14	0:0	8	;
call	405:4	412:30	8	TIFFErrorExt
arg	405:17	405:36	9	tif->tif_clientdata
water	405:17	0:0	10	tif
op	405:20	0:0	10	->
water	405:22	0:0	10	tif_clientdata
arg	405:38	405:44	9	module
water	405:38	0:0	10	module
arg	406:10	407:44	9	"%s: Null count for \"%s\" (type ""%d, writecount %d, passcount %d)"
water	406:10	0:0	10	"%s: Null count for \"%s\" (type "
water	407:10	0:0	10	"%d, writecount %d, passcount %d)"
arg	408:10	408:23	9	tif->tif_name
water	408:10	0:0	10	tif
op	408:13	0:0	10	->
water	408:15	0:0	10	tif_name
arg	409:10	409:25	9	fip->field_name
water	409:10	0:0	10	fip
op	409:13	0:0	10	->
water	409:15	0:0	10	field_name
arg	410:10	410:25	9	fip->field_type
water	410:10	0:0	10	fip
op	410:13	0:0	10	->
water	410:15	0:0	10	field_type
arg	411:10	411:31	9	fip->field_writecount
water	411:10	0:0	10	fip
op	411:13	0:0	10	->
water	411:15	0:0	10	field_writecount
arg	412:10	412:30	9	fip->field_passcount
water	412:10	0:0	10	fip
op	412:13	0:0	10	->
water	412:15	0:0	10	field_passcount
water	412:31	0:0	8	;
goto	413:4	413:12	8	end
water	413:9	0:0	9	end
water	414:3	0:0	8	}
water	416:3	0:0	6	tv
op	416:5	0:0	6	->
water	416:7	0:0	6	value
op	416:13	0:0	6	=
call	416:15	417:33	6	_TIFFCheckMalloc
arg	416:32	416:35	7	tif
water	416:32	0:0	8	tif
arg	416:37	416:46	7	tv->count
water	416:37	0:0	8	tv
op	416:39	0:0	8	->
water	416:41	0:0	8	count
arg	416:48	416:55	7	tv_size
water	416:48	0:0	8	tv_size
arg	417:7	417:33	7	"custom tag binary object"
water	417:7	0:0	8	"custom tag binary object"
water	417:34	0:0	6	;
if	418:3	421:3	6	(! tv -> value)
cond	418:7	418:12	7	! tv -> value
op	418:7	0:0	8	!
water	418:8	0:0	8	tv
op	418:10	0:0	8	->
water	418:12	0:0	8	value
stmts	418:19	421:3	7	
water	418:19	0:0	8	{
water	419:4	0:0	8	status
op	419:11	0:0	8	=
water	419:13	0:0	8	0
water	419:14	0:0	8	;
goto	420:4	420:12	8	end
water	420:9	0:0	9	end
water	421:3	0:0	8	}
if	423:3	433:3	6	(fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0)
cond	423:7	424:48	7	fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0
water	423:7	0:0	8	fip
op	423:10	0:0	8	->
water	423:12	0:0	8	field_tag
op	423:22	0:0	8	==
water	423:25	0:0	8	TIFFTAG_DOTRANGE
op	424:7	0:0	8	&&
call	424:10	424:43	8	strcmp
arg	424:17	424:32	9	fip->field_name
water	424:17	0:0	10	fip
op	424:20	0:0	10	->
water	424:22	0:0	10	field_name
arg	424:33	424:43	9	"DotRange"
water	424:33	0:0	10	"DotRange"
op	424:45	0:0	8	==
water	424:48	0:0	8	0
stmts	424:51	433:3	7	
water	424:51	0:0	8	{
decl	429:4	429:15	8	uint16	v[2]
water	430:4	0:0	8	v
op	430:5	0:0	8	[
water	430:6	0:0	8	0
op	430:7	0:0	8	]
op	430:9	0:0	8	=
water	430:11	0:0	8	(
water	430:12	0:0	8	uint16
water	430:18	0:0	8	)
call	430:19	430:33	8	va_arg
arg	430:26	430:28	9	ap
water	430:26	0:0	10	ap
arg	430:30	430:33	9	int
water	430:30	0:0	10	int
water	430:34	0:0	8	;
water	431:4	0:0	8	v
op	431:5	0:0	8	[
water	431:6	0:0	8	1
op	431:7	0:0	8	]
op	431:9	0:0	8	=
water	431:11	0:0	8	(
water	431:12	0:0	8	uint16
water	431:18	0:0	8	)
call	431:19	431:33	8	va_arg
arg	431:26	431:28	9	ap
water	431:26	0:0	10	ap
arg	431:30	431:33	9	int
water	431:30	0:0	10	int
water	431:34	0:0	8	;
call	432:4	432:32	8	_TIFFmemcpy
arg	432:16	432:25	9	tv->value
water	432:16	0:0	10	tv
op	432:18	0:0	10	->
water	432:20	0:0	10	value
arg	432:27	432:29	9	&v
op	432:27	0:0	10	&
water	432:28	0:0	10	v
arg	432:31	432:32	9	4
water	432:31	0:0	10	4
water	432:33	0:0	8	;
water	433:3	0:0	8	}
else	435:3	442:3	6
stmts	435:8	442:3	7	
if	435:8	442:3	8	(fip -> field_passcount || fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2 || fip -> field_writecount == TIFF_SPP || tv -> count > 1)
cond	435:12	439:21	9	fip -> field_passcount || fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2 || fip -> field_writecount == TIFF_SPP || tv -> count > 1
water	435:12	0:0	10	fip
op	435:15	0:0	10	->
water	435:17	0:0	10	field_passcount
op	436:6	0:0	10	||
water	436:9	0:0	10	fip
op	436:12	0:0	10	->
water	436:14	0:0	10	field_writecount
op	436:31	0:0	10	==
water	436:34	0:0	10	TIFF_VARIABLE
op	437:6	0:0	10	||
water	437:9	0:0	10	fip
op	437:12	0:0	10	->
water	437:14	0:0	10	field_writecount
op	437:31	0:0	10	==
water	437:34	0:0	10	TIFF_VARIABLE2
op	438:6	0:0	10	||
water	438:9	0:0	10	fip
op	438:12	0:0	10	->
water	438:14	0:0	10	field_writecount
op	438:31	0:0	10	==
water	438:34	0:0	10	TIFF_SPP
op	439:6	0:0	10	||
water	439:9	0:0	10	tv
op	439:11	0:0	10	->
water	439:13	0:0	10	count
op	439:19	0:0	10	>
water	439:21	0:0	10	1
stmts	439:24	442:3	9	
water	439:24	0:0	10	{
call	440:4	441:27	10	_TIFFmemcpy
arg	440:16	440:25	11	tv->value
water	440:16	0:0	12	tv
op	440:18	0:0	12	->
water	440:20	0:0	12	value
arg	440:27	440:45	11	va_arg(ap,void*)
call	440:27	440:44	12	va_arg
arg	440:34	440:36	13	ap
water	440:34	0:0	14	ap
arg	440:38	440:44	13	void*
water	440:38	0:0	14	void
op	440:43	0:0	14	*
arg	441:8	441:27	11	tv->count*tv_size
water	441:8	0:0	12	tv
op	441:10	0:0	12	->
water	441:12	0:0	12	count
op	441:18	0:0	12	*
water	441:20	0:0	12	tv_size
water	441:28	0:0	10	;
water	442:3	0:0	10	}
else	442:5	517:3	6
stmts	442:10	517:3	7	
water	442:10	0:0	8	{
decl	443:4	443:33	8	char	*val
op	443:14	0:0	8	=
water	443:16	0:0	8	(
water	443:17	0:0	8	char
op	443:22	0:0	8	*
water	443:23	0:0	8	)
water	443:24	0:0	8	tv
op	443:26	0:0	8	->
water	443:28	0:0	8	value
call	444:4	444:27	8	assert
arg	444:12	444:27	9	tv->count==1
water	444:12	0:0	10	tv
op	444:14	0:0	10	->
water	444:16	0:0	10	count
op	444:22	0:0	10	==
water	444:25	0:0	10	1
water	444:28	0:0	8	;
switch	446:4	516:4	8	(fip -> field_type)
cond	446:12	446:17	9	fip -> field_type
water	446:12	0:0	10	fip
op	446:15	0:0	10	->
water	446:17	0:0	10	field_type
stmts	446:29	516:4	9	
water	446:29	0:0	10	{
label	447:4	447:18	10	case TIFF_BYTE :
label	448:4	448:23	10	case TIFF_UNDEFINED :
water	449:5	0:0	10	{
decl	450:6	450:38	10	uint8	v
op	450:14	0:0	10	=
water	450:16	0:0	10	(
water	450:17	0:0	10	uint8
water	450:22	0:0	10	)
call	450:23	450:37	11	va_arg
arg	450:30	450:32	12	ap
water	450:30	0:0	13	ap
arg	450:34	450:37	12	int
water	450:34	0:0	13	int
call	451:6	451:34	10	_TIFFmemcpy
arg	451:18	451:21	11	val
water	451:18	0:0	12	val
arg	451:23	451:25	11	&v
op	451:23	0:0	12	&
water	451:24	0:0	12	v
arg	451:27	451:34	11	tv_size
water	451:27	0:0	12	tv_size
water	451:35	0:0	10	;
water	452:5	0:0	10	}
break	453:5	453:10	10	
label	454:4	454:19	10	case TIFF_SBYTE :
water	455:5	0:0	10	{
decl	456:6	456:36	10	int8	v
op	456:13	0:0	10	=
water	456:15	0:0	10	(
water	456:16	0:0	10	int8
water	456:20	0:0	10	)
call	456:21	456:35	11	va_arg
arg	456:28	456:30	12	ap
water	456:28	0:0	13	ap
arg	456:32	456:35	12	int
water	456:32	0:0	13	int
call	457:6	457:34	10	_TIFFmemcpy
arg	457:18	457:21	11	val
water	457:18	0:0	12	val
arg	457:23	457:25	11	&v
op	457:23	0:0	12	&
water	457:24	0:0	12	v
arg	457:27	457:34	11	tv_size
water	457:27	0:0	12	tv_size
water	457:35	0:0	10	;
water	458:5	0:0	10	}
break	459:5	459:10	10	
label	460:4	460:19	10	case TIFF_SHORT :
water	461:5	0:0	10	{
decl	462:6	462:40	10	uint16	v
op	462:15	0:0	10	=
water	462:17	0:0	10	(
water	462:18	0:0	10	uint16
water	462:24	0:0	10	)
call	462:25	462:39	11	va_arg
arg	462:32	462:34	12	ap
water	462:32	0:0	13	ap
arg	462:36	462:39	12	int
water	462:36	0:0	13	int
call	463:6	463:34	10	_TIFFmemcpy
arg	463:18	463:21	11	val
water	463:18	0:0	12	val
arg	463:23	463:25	11	&v
op	463:23	0:0	12	&
water	463:24	0:0	12	v
arg	463:27	463:34	11	tv_size
water	463:27	0:0	12	tv_size
water	463:35	0:0	10	;
water	464:5	0:0	10	}
break	465:5	465:10	10	
label	466:4	466:20	10	case TIFF_SSHORT :
water	467:5	0:0	10	{
decl	468:6	468:38	10	int16	v
op	468:14	0:0	10	=
water	468:16	0:0	10	(
water	468:17	0:0	10	int16
water	468:22	0:0	10	)
call	468:23	468:37	11	va_arg
arg	468:30	468:32	12	ap
water	468:30	0:0	13	ap
arg	468:34	468:37	12	int
water	468:34	0:0	13	int
call	469:6	469:34	10	_TIFFmemcpy
arg	469:18	469:21	11	val
water	469:18	0:0	12	val
arg	469:23	469:25	11	&v
op	469:23	0:0	12	&
water	469:24	0:0	12	v
arg	469:27	469:34	11	tv_size
water	469:27	0:0	12	tv_size
water	469:35	0:0	10	;
water	470:5	0:0	10	}
break	471:5	471:10	10	
label	472:4	472:18	10	case TIFF_LONG :
label	473:4	473:17	10	case TIFF_IFD :
water	474:5	0:0	10	{
decl	475:6	475:35	10	uint32	v
op	475:15	0:0	10	=
call	475:17	475:34	11	va_arg
arg	475:24	475:26	12	ap
water	475:24	0:0	13	ap
arg	475:28	475:34	12	uint32
water	475:28	0:0	13	uint32
call	476:6	476:34	10	_TIFFmemcpy
arg	476:18	476:21	11	val
water	476:18	0:0	12	val
arg	476:23	476:25	11	&v
op	476:23	0:0	12	&
water	476:24	0:0	12	v
arg	476:27	476:34	11	tv_size
water	476:27	0:0	12	tv_size
water	476:35	0:0	10	;
water	477:5	0:0	10	}
break	478:5	478:10	10	
label	479:4	479:19	10	case TIFF_SLONG :
water	480:5	0:0	10	{
decl	481:6	481:33	10	int32	v
op	481:14	0:0	10	=
call	481:16	481:32	11	va_arg
arg	481:23	481:25	12	ap
water	481:23	0:0	13	ap
arg	481:27	481:32	12	int32
water	481:27	0:0	13	int32
call	482:6	482:34	10	_TIFFmemcpy
arg	482:18	482:21	11	val
water	482:18	0:0	12	val
arg	482:23	482:25	11	&v
op	482:23	0:0	12	&
water	482:24	0:0	12	v
arg	482:27	482:34	11	tv_size
water	482:27	0:0	12	tv_size
water	482:35	0:0	10	;
water	483:5	0:0	10	}
break	484:5	484:10	10	
label	485:4	485:19	10	case TIFF_LONG8 :
label	486:4	486:18	10	case TIFF_IFD8 :
water	487:5	0:0	10	{
decl	488:6	488:35	10	uint64	v
op	488:15	0:0	10	=
call	488:17	488:34	11	va_arg
arg	488:24	488:26	12	ap
water	488:24	0:0	13	ap
arg	488:28	488:34	12	uint64
water	488:28	0:0	13	uint64
call	489:6	489:34	10	_TIFFmemcpy
arg	489:18	489:21	11	val
water	489:18	0:0	12	val
arg	489:23	489:25	11	&v
op	489:23	0:0	12	&
water	489:24	0:0	12	v
arg	489:27	489:34	11	tv_size
water	489:27	0:0	12	tv_size
water	489:35	0:0	10	;
water	490:5	0:0	10	}
break	491:5	491:10	10	
label	492:4	492:20	10	case TIFF_SLONG8 :
water	493:5	0:0	10	{
decl	494:6	494:33	10	int64	v
op	494:14	0:0	10	=
call	494:16	494:32	11	va_arg
arg	494:23	494:25	12	ap
water	494:23	0:0	13	ap
arg	494:27	494:32	12	int64
water	494:27	0:0	13	int64
call	495:6	495:34	10	_TIFFmemcpy
arg	495:18	495:21	11	val
water	495:18	0:0	12	val
arg	495:23	495:25	11	&v
op	495:23	0:0	12	&
water	495:24	0:0	12	v
arg	495:27	495:34	11	tv_size
water	495:27	0:0	12	tv_size
water	495:35	0:0	10	;
water	496:5	0:0	10	}
break	497:5	497:10	10	
label	498:4	498:22	10	case TIFF_RATIONAL :
label	499:4	499:23	10	case TIFF_SRATIONAL :
label	500:4	500:19	10	case TIFF_FLOAT :
water	501:5	0:0	10	{
decl	502:6	502:41	10	float	v
op	502:14	0:0	10	=
water	502:16	0:0	10	(
water	502:17	0:0	10	float
water	502:22	0:0	10	)
call	502:23	502:40	11	va_arg
arg	502:30	502:32	12	ap
water	502:30	0:0	13	ap
arg	502:34	502:40	12	double
water	502:34	0:0	13	double
call	503:6	503:34	10	_TIFFmemcpy
arg	503:18	503:21	11	val
water	503:18	0:0	12	val
arg	503:23	503:25	11	&v
op	503:23	0:0	12	&
water	503:24	0:0	12	v
arg	503:27	503:34	11	tv_size
water	503:27	0:0	12	tv_size
water	503:35	0:0	10	;
water	504:5	0:0	10	}
break	505:5	505:10	10	
label	506:4	506:20	10	case TIFF_DOUBLE :
water	507:5	0:0	10	{
decl	508:6	508:35	10	double	v
op	508:15	0:0	10	=
call	508:17	508:34	11	va_arg
arg	508:24	508:26	12	ap
water	508:24	0:0	13	ap
arg	508:28	508:34	12	double
water	508:28	0:0	13	double
call	509:6	509:34	10	_TIFFmemcpy
arg	509:18	509:21	11	val
water	509:18	0:0	12	val
arg	509:23	509:25	11	&v
op	509:23	0:0	12	&
water	509:24	0:0	12	v
arg	509:27	509:34	11	tv_size
water	509:27	0:0	12	tv_size
water	509:35	0:0	10	;
water	510:5	0:0	10	}
break	511:5	511:10	10	
label	512:4	512:11	10	default :
call	513:5	513:32	10	_TIFFmemset
arg	513:17	513:20	11	val
water	513:17	0:0	12	val
arg	513:22	513:23	11	0
water	513:22	0:0	12	0
arg	513:25	513:32	11	tv_size
water	513:25	0:0	12	tv_size
water	513:33	0:0	10	;
water	514:5	0:0	10	status
op	514:12	0:0	10	=
water	514:14	0:0	10	0
water	514:15	0:0	10	;
break	515:5	515:10	10	
water	516:4	0:0	10	}
water	517:3	0:0	8	}
water	518:2	0:0	6	}
water	519:1	0:0	4	}
water	520:1	0:0	4	}
if	521:1	526:1	2	(status)
cond	521:5	521:5	3	status
water	521:5	0:0	4	status
stmts	521:13	526:1	3	
water	521:13	0:0	4	{
decl	522:2	522:48	4	const TIFFField	*fip
op	522:22	0:0	4	=
call	522:23	522:47	5	TIFFFieldWithTag
arg	522:40	522:43	6	tif
water	522:40	0:0	7	tif
arg	522:44	522:47	6	tag
water	522:44	0:0	7	tag
if	523:2	524:39	4	(fip)
cond	523:6	523:6	5	fip
water	523:6	0:0	6	fip
stmts	524:3	524:39	5	
call	524:3	524:38	6	TIFFSetFieldBit
arg	524:19	524:22	7	tif
water	524:19	0:0	8	tif
arg	524:24	524:38	7	fip->field_bit
water	524:24	0:0	8	fip
op	524:27	0:0	8	->
water	524:29	0:0	8	field_bit
water	524:39	0:0	6	;
water	525:2	0:0	4	tif
op	525:5	0:0	4	->
water	525:7	0:0	4	tif_flags
op	525:17	0:0	4	|=
water	525:20	0:0	4	TIFF_DIRTYDIRECT
water	525:36	0:0	4	;
water	526:1	0:0	4	}
label	528:0	528:3	2	end :
call	529:1	529:10	2	va_end
arg	529:8	529:10	3	ap
water	529:8	0:0	4	ap
water	529:11	0:0	2	;
return	530:1	530:16	2	(status)
water	530:8	0:0	3	(
water	530:9	0:0	3	status
water	530:15	0:0	3	)
label	531:0	531:8	2	badvalue :
water	532:8	0:0	2	{
decl	533:2	533:48	2	const TIFFField	*fip
op	533:22	0:0	2	=
call	533:23	533:47	3	TIFFFieldWithTag
arg	533:40	533:43	4	tif
water	533:40	0:0	5	tif
arg	533:44	533:47	4	tag
water	533:44	0:0	5	tag
call	534:2	537:40	2	TIFFErrorExt
arg	534:15	534:34	3	tif->tif_clientdata
water	534:15	0:0	4	tif
op	534:18	0:0	4	->
water	534:20	0:0	4	tif_clientdata
arg	534:36	534:42	3	module
water	534:36	0:0	4	module
arg	535:7	535:40	3	"%s: Bad value %u for \"%s\" tag"
water	535:7	0:0	4	"%s: Bad value %u for \"%s\" tag"
arg	536:7	536:20	3	tif->tif_name
water	536:7	0:0	4	tif
op	536:10	0:0	4	->
water	536:12	0:0	4	tif_name
arg	536:22	536:23	3	v
water	536:22	0:0	4	v
arg	537:7	537:40	3	fip?fip->field_name:"Unknown"
water	537:7	0:0	4	fip
water	537:11	0:0	4	?
water	537:13	0:0	4	fip
op	537:16	0:0	4	->
water	537:18	0:0	4	field_name
water	537:29	0:0	4	:
water	537:31	0:0	4	"Unknown"
water	537:41	0:0	2	;
call	538:2	538:11	2	va_end
arg	538:9	538:11	3	ap
water	538:9	0:0	4	ap
water	538:12	0:0	2	;
water	539:8	0:0	2	}
return	540:1	540:11	2	(0)
water	540:8	0:0	3	(
water	540:9	0:0	3	0
water	540:10	0:0	3	)
label	541:0	541:10	2	badvalue32 :
water	542:8	0:0	2	{
decl	543:2	543:48	2	const TIFFField	*fip
op	543:22	0:0	2	=
call	543:23	543:47	3	TIFFFieldWithTag
arg	543:40	543:43	4	tif
water	543:40	0:0	5	tif
arg	543:44	543:47	4	tag
water	543:44	0:0	5	tag
call	544:2	547:40	2	TIFFErrorExt
arg	544:15	544:34	3	tif->tif_clientdata
water	544:15	0:0	4	tif
op	544:18	0:0	4	->
water	544:20	0:0	4	tif_clientdata
arg	544:36	544:42	3	module
water	544:36	0:0	4	module
arg	545:7	545:40	3	"%s: Bad value %u for \"%s\" tag"
water	545:7	0:0	4	"%s: Bad value %u for \"%s\" tag"
arg	546:7	546:20	3	tif->tif_name
water	546:7	0:0	4	tif
op	546:10	0:0	4	->
water	546:12	0:0	4	tif_name
arg	546:22	546:25	3	v32
water	546:22	0:0	4	v32
arg	547:7	547:40	3	fip?fip->field_name:"Unknown"
water	547:7	0:0	4	fip
water	547:11	0:0	4	?
water	547:13	0:0	4	fip
op	547:16	0:0	4	->
water	547:18	0:0	4	field_name
water	547:29	0:0	4	:
water	547:31	0:0	4	"Unknown"
water	547:41	0:0	2	;
call	548:2	548:11	2	va_end
arg	548:9	548:11	3	ap
water	548:9	0:0	4	ap
water	548:12	0:0	2	;
water	549:8	0:0	2	}
return	550:1	550:11	2	(0)
water	550:8	0:0	3	(
water	550:9	0:0	3	0
water	550:10	0:0	3	)
label	551:0	551:14	2	badvaluedouble :
water	552:8	0:0	2	{
decl	553:8	553:54	2	const TIFFField	*fip
op	553:28	0:0	2	=
call	553:29	553:53	3	TIFFFieldWithTag
arg	553:46	553:49	4	tif
water	553:46	0:0	5	tif
arg	553:50	553:53	4	tag
water	553:50	0:0	5	tag
call	554:8	557:46	2	TIFFErrorExt
arg	554:21	554:40	3	tif->tif_clientdata
water	554:21	0:0	4	tif
op	554:24	0:0	4	->
water	554:26	0:0	4	tif_clientdata
arg	554:42	554:48	3	module
water	554:42	0:0	4	module
arg	555:13	555:46	3	"%s: Bad value %f for \"%s\" tag"
water	555:13	0:0	4	"%s: Bad value %f for \"%s\" tag"
arg	556:13	556:26	3	tif->tif_name
water	556:13	0:0	4	tif
op	556:16	0:0	4	->
water	556:18	0:0	4	tif_name
arg	556:28	556:34	3	dblval
water	556:28	0:0	4	dblval
arg	557:13	557:46	3	fip?fip->field_name:"Unknown"
water	557:13	0:0	4	fip
water	557:17	0:0	4	?
water	557:19	0:0	4	fip
op	557:22	0:0	4	->
water	557:24	0:0	4	field_name
water	557:35	0:0	4	:
water	557:37	0:0	4	"Unknown"
water	557:47	0:0	2	;
call	558:8	558:17	2	va_end
arg	558:15	558:17	3	ap
water	558:15	0:0	4	ap
water	558:18	0:0	2	;
water	559:8	0:0	2	}
return	560:4	560:14	2	(0)
water	560:11	0:0	3	(
water	560:12	0:0	3	0
water	560:13	0:0	3	)

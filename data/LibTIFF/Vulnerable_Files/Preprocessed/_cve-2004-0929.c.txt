func	2:0	448:2	0	static int	OJPEGVSetField
params	3:14	0:0	1	
param	3:15	3:33	2	register TIFF *	tif
param	3:34	3:44	2	ttag_t	tag
param	3:45	3:55	2	va_list	ap
stmnts	0:0	446:12	1	
decl	5:4	5:14	2	uint32	v32
water	6:4	0:0	2	register
water	6:13	0:0	2	OJPEGState
op	6:24	0:0	2	*
water	6:25	0:0	2	sp
op	6:28	0:0	2	=
call	6:30	6:41	2	OJState
arg	6:38	6:41	3	tif
water	6:38	0:0	4	tif
water	6:42	0:0	2	;
decl	8:4	8:20	2	toff_t	tiffoff
op	8:18	0:0	2	=
water	8:19	0:0	2	0
decl	9:4	9:19	2	uint32	bufoff
op	9:17	0:0	2	=
water	9:18	0:0	2	0
decl	10:4	10:23	2	uint32	code_count
op	10:21	0:0	2	=
water	10:22	0:0	2	0
decl	11:4	11:12	2	int	i2
op	11:10	0:0	2	=
water	11:11	0:0	2	0
decl	12:4	12:12	2	int	k2
op	12:10	0:0	2	=
water	12:11	0:0	2	0
switch	14:4	98:6	2	(tag)
cond	14:12	14:12	3	tag
water	14:12	0:0	4	tag
stmts	15:6	98:6	3	
water	15:6	0:0	4	{
label	21:8	21:43	4	case TIFFTAG_REFERENCEBLACKWHITE :
if	21:45	25:47	4	(td -> td_refblackwhite)
cond	21:49	21:53	5	td -> td_refblackwhite
water	21:49	0:0	6	td
op	21:51	0:0	6	->
water	21:53	0:0	6	td_refblackwhite
stmts	22:47	25:47	5	
water	22:47	0:0	6	{
call	23:49	23:79	6	_TIFFfree
arg	23:59	23:79	7	td->td_refblackwhite
water	23:59	0:0	8	td
op	23:61	0:0	8	->
water	23:63	0:0	8	td_refblackwhite
water	23:80	0:0	6	;
water	24:49	0:0	6	td
op	24:51	0:0	6	->
water	24:53	0:0	6	td_refblackwhite
op	24:70	0:0	6	=
water	24:72	0:0	6	0
water	24:73	0:0	6	;
water	25:47	0:0	6	}
water	25:48	0:0	4	;
label	26:8	26:43	4	default :
return	26:45	27:76	4	(*sp->vsetparent)(tif,tag,ap)
call	27:47	27:75	5	(*sp->vsetparent)
arg	27:65	27:68	6	tif
water	27:65	0:0	7	tif
arg	27:69	27:72	6	tag
water	27:69	0:0	7	tag
arg	27:73	27:75	6	ap
water	27:73	0:0	7	ap
label	44:8	44:43	4	case TIFFTAG_PHOTOMETRIC :
if	45:10	63:3	4	(( v32 =( * sp -> vsetparent ) (tif ,tag ,ap ) ) && td -> td_photometric == PHOTOMETRIC_YCBCR)
cond	45:17	46:39	5	( v32 =( * sp -> vsetparent ) (tif ,tag ,ap ) ) && td -> td_photometric == PHOTOMETRIC_YCBCR
water	45:17	0:0	6	(
water	45:18	0:0	6	v32
op	45:22	0:0	6	=
call	45:24	45:52	6	(*sp->vsetparent)
arg	45:42	45:45	7	tif
water	45:42	0:0	8	tif
arg	45:46	45:49	7	tag
water	45:46	0:0	8	tag
arg	45:50	45:52	7	ap
water	45:50	0:0	8	ap
water	45:53	0:0	6	)
op	46:14	0:0	6	&&
water	46:17	0:0	6	td
op	46:19	0:0	6	->
water	46:21	0:0	6	td_photometric
op	46:36	0:0	6	==
water	46:39	0:0	6	PHOTOMETRIC_YCBCR
stmts	48:3	63:3	5	
water	48:3	0:0	6	{
if	49:12	56:14	6	(( td -> td_refblackwhite =_TIFFmalloc (6 * sizeof ( float ) ) ))
cond	49:17	49:69	7	( td -> td_refblackwhite =_TIFFmalloc (6 * sizeof ( float ) ) )
water	49:17	0:0	8	(
water	49:18	0:0	8	td
op	49:20	0:0	8	->
water	49:22	0:0	8	td_refblackwhite
op	49:39	0:0	8	=
call	49:41	49:68	8	_TIFFmalloc
arg	49:53	49:68	9	6*sizeof(float)
water	49:53	0:0	10	6
op	49:54	0:0	10	*
op	49:55	0:0	10	sizeof
water	49:61	0:0	10	(
water	49:62	0:0	10	float
water	49:67	0:0	10	)
water	49:69	0:0	8	)
stmts	50:14	56:14	7	
water	50:14	0:0	8	{
water	50:16	0:0	8	register
water	50:25	0:0	8	long
water	50:30	0:0	8	top
op	50:34	0:0	8	=
water	50:36	0:0	8	1
op	50:38	0:0	8	<<
water	50:41	0:0	8	td
op	50:43	0:0	8	->
water	50:45	0:0	8	td_bitspersample
water	50:61	0:0	8	;
water	52:16	0:0	8	td
op	52:18	0:0	8	->
water	52:20	0:0	8	td_refblackwhite
op	52:36	0:0	8	[
water	52:37	0:0	8	0
op	52:38	0:0	8	]
op	52:40	0:0	8	=
water	52:42	0:0	8	0
water	52:43	0:0	8	;
water	53:16	0:0	8	td
op	53:18	0:0	8	->
water	53:20	0:0	8	td_refblackwhite
op	53:36	0:0	8	[
water	53:37	0:0	8	1
op	53:38	0:0	8	]
op	53:40	0:0	8	=
water	53:42	0:0	8	td
op	53:44	0:0	8	->
water	53:46	0:0	8	td_refblackwhite
op	53:62	0:0	8	[
water	53:63	0:0	8	3
op	53:64	0:0	8	]
op	53:66	0:0	8	=
water	54:16	0:0	8	td
op	54:18	0:0	8	->
water	54:20	0:0	8	td_refblackwhite
op	54:36	0:0	8	[
water	54:37	0:0	8	5
op	54:38	0:0	8	]
op	54:40	0:0	8	=
water	54:42	0:0	8	top
op	54:46	0:0	8	-
water	54:48	0:0	8	1
water	54:49	0:0	8	;
water	55:16	0:0	8	td
op	55:18	0:0	8	->
water	55:20	0:0	8	td_refblackwhite
op	55:36	0:0	8	[
water	55:37	0:0	8	2
op	55:38	0:0	8	]
op	55:40	0:0	8	=
water	55:42	0:0	8	td
op	55:44	0:0	8	->
water	55:46	0:0	8	td_refblackwhite
op	55:62	0:0	8	[
water	55:63	0:0	8	4
op	55:64	0:0	8	]
op	55:66	0:0	8	=
water	55:68	0:0	8	top
op	55:72	0:0	8	>>
water	55:75	0:0	8	1
water	55:76	0:0	8	;
water	56:14	0:0	8	}
else	57:12	62:14	6
stmts	58:14	62:14	7	
water	58:14	0:0	8	{
call	59:16	60:71	8	TIFFError
arg	59:26	59:39	9	tif->tif_name
water	59:26	0:0	10	tif
op	59:29	0:0	10	->
water	59:31	0:0	10	tif_name
arg	60:18	60:71	9	"Cannot set default reference black and white levels"
water	60:18	0:0	10	"Cannot set default reference black and white levels"
water	60:72	0:0	8	;
water	61:16	0:0	8	v32
op	61:20	0:0	8	=
water	61:22	0:0	8	0
water	61:23	0:0	8	;
water	62:14	0:0	8	}
water	62:15	0:0	6	;
water	63:3	0:0	6	}
return	64:10	64:20	4	v32
water	64:17	0:0	5	v32
label	76:8	76:43	4	case TIFFTAG_SOFTWARE :
water	77:8	0:0	4	{
decl	78:12	78:26	4	char	*software
water	80:12	0:0	4	v32
op	80:16	0:0	4	=
call	80:18	80:46	4	(*sp->vsetparent)
arg	80:36	80:39	5	tif
water	80:36	0:0	6	tif
arg	80:40	80:43	5	tag
water	80:40	0:0	6	tag
arg	80:44	80:46	5	ap
water	80:44	0:0	6	ap
water	80:47	0:0	4	;
if	81:12	83:31	4	(TIFFGetField (tif ,TIFFTAG_SOFTWARE ,& software ) &&strstr (software ,"Wang Labs" ))
cond	81:16	82:49	5	TIFFGetField (tif ,TIFFTAG_SOFTWARE ,& software ) &&strstr (software ,"Wang Labs" )
call	81:16	81:63	6	TIFFGetField
arg	81:30	81:33	7	tif
water	81:30	0:0	8	tif
arg	81:35	81:51	7	TIFFTAG_SOFTWARE
water	81:35	0:0	8	TIFFTAG_SOFTWARE
arg	81:53	81:63	7	&software
op	81:53	0:0	8	&
water	81:54	0:0	8	software
op	82:16	0:0	6	&&
call	82:19	82:49	6	strstr
arg	82:27	82:35	7	software
water	82:27	0:0	8	software
arg	82:37	82:49	7	"Wang Labs"
water	82:37	0:0	8	"Wang Labs"
stmts	83:16	83:31	5	
water	83:16	0:0	6	sp
op	83:18	0:0	6	->
water	83:20	0:0	6	is_WANG
op	83:28	0:0	6	=
water	83:30	0:0	6	1
water	83:31	0:0	6	;
return	84:12	84:22	4	v32
water	84:19	0:0	5	v32
water	85:8	0:0	4	}
label	87:8	87:43	4	case TIFFTAG_JPEGPROC :
label	88:8	88:43	4	case TIFFTAG_JPEGIFOFFSET :
label	89:8	89:43	4	case TIFFTAG_JPEGIFBYTECOUNT :
label	90:8	90:43	4	case TIFFTAG_JPEGRESTARTINTERVAL :
label	91:8	91:43	4	case TIFFTAG_JPEGLOSSLESSPREDICTORS :
label	92:8	92:43	4	case TIFFTAG_JPEGPOINTTRANSFORM :
label	93:8	93:43	4	case TIFFTAG_JPEGQTABLES :
label	94:8	94:43	4	case TIFFTAG_JPEGDCTABLES :
label	95:8	95:43	4	case TIFFTAG_JPEGACTABLES :
label	96:8	96:43	4	case TIFFTAG_WANG_PAGECONTROL :
label	97:8	97:43	4	case TIFFTAG_JPEGCOLORMODE :
water	97:45	0:0	4	;
water	98:6	0:0	4	}
water	98:7	0:0	2	;
water	99:4	0:0	2	v32
op	99:8	0:0	2	=
call	99:10	99:26	2	va_arg
arg	99:17	99:19	3	ap
water	99:17	0:0	4	ap
arg	99:20	99:26	3	uint32
water	99:20	0:0	4	uint32
water	99:27	0:0	2	;
if	102:4	134:4	2	(v32 != 0)
cond	102:7	102:13	3	v32 != 0
water	102:7	0:0	4	v32
op	102:11	0:0	4	!=
water	102:13	0:0	4	0
stmts	102:15	134:4	3	
water	102:15	0:0	4	{
switch	103:8	133:8	4	(tag)
cond	103:15	103:15	5	tag
water	103:15	0:0	6	tag
stmts	103:19	133:8	5	
water	103:19	0:0	6	{
label	104:12	104:33	6	case TIFFTAG_JPEGPROC :
water	105:16	0:0	6	sp
op	105:18	0:0	6	->
water	105:20	0:0	6	jpegproc
op	105:28	0:0	6	=
water	105:29	0:0	6	v32
water	105:32	0:0	6	;
break	106:16	106:21	6	
label	107:12	107:37	6	case TIFFTAG_JPEGIFOFFSET :
water	108:16	0:0	6	sp
op	108:18	0:0	6	->
water	108:20	0:0	6	jpegifoffset
op	108:32	0:0	6	=
water	108:33	0:0	6	v32
water	108:36	0:0	6	;
break	109:2	109:7	6	
label	110:12	110:40	6	case TIFFTAG_JPEGIFBYTECOUNT :
water	111:2	0:0	6	sp
op	111:4	0:0	6	->
water	111:6	0:0	6	jpegifbytecount
op	111:21	0:0	6	=
water	111:22	0:0	6	v32
water	111:25	0:0	6	;
break	112:2	112:7	6	
label	113:12	113:44	6	case TIFFTAG_JPEGRESTARTINTERVAL :
water	114:2	0:0	6	sp
op	114:4	0:0	6	->
water	114:6	0:0	6	jpegrestartinterval
op	114:25	0:0	6	=
water	114:26	0:0	6	v32
water	114:29	0:0	6	;
break	115:2	115:7	6	
label	116:12	116:47	6	case TIFFTAG_JPEGLOSSLESSPREDICTORS :
water	117:2	0:0	6	sp
op	117:4	0:0	6	->
water	117:6	0:0	6	jpeglosslesspredictors_length
op	117:35	0:0	6	=
water	117:36	0:0	6	v32
water	117:39	0:0	6	;
break	118:2	118:7	6	
label	119:12	119:43	6	case TIFFTAG_JPEGPOINTTRANSFORM :
water	120:2	0:0	6	sp
op	120:4	0:0	6	->
water	120:6	0:0	6	jpegpointtransform_length
op	120:31	0:0	6	=
water	120:32	0:0	6	v32
water	120:35	0:0	6	;
break	121:2	121:7	6	
label	122:12	122:36	6	case TIFFTAG_JPEGQTABLES :
water	123:2	0:0	6	sp
op	123:4	0:0	6	->
water	123:6	0:0	6	jpegqtables_length
op	123:24	0:0	6	=
water	123:25	0:0	6	v32
water	123:28	0:0	6	;
break	124:2	124:7	6	
label	125:12	125:37	6	case TIFFTAG_JPEGACTABLES :
water	126:2	0:0	6	sp
op	126:4	0:0	6	->
water	126:6	0:0	6	jpegactables_length
op	126:25	0:0	6	=
water	126:26	0:0	6	v32
water	126:29	0:0	6	;
break	127:2	127:7	6	
label	128:12	128:37	6	case TIFFTAG_JPEGDCTABLES :
water	129:2	0:0	6	sp
op	129:4	0:0	6	->
water	129:6	0:0	6	jpegdctables_length
op	129:25	0:0	6	=
water	129:26	0:0	6	v32
water	129:29	0:0	6	;
break	130:2	130:7	6	
label	131:12	131:19	6	default :
break	132:2	132:7	6	
water	133:8	0:0	6	}
water	134:4	0:0	4	}
switch	145:4	444:6	2	(tag)
cond	145:12	145:12	3	tag
water	145:12	0:0	4	tag
stmts	146:6	444:6	3	
water	146:6	0:0	4	{
decl	146:8	146:21	4	JHUFF_TBL	**h
label	150:8	150:43	4	case TIFFTAG_JPEGPROC :
switch	151:10	174:12	4	(v32)
cond	151:18	151:18	5	v32
water	151:18	0:0	6	v32
stmts	152:12	174:12	5	
water	152:12	0:0	6	{
label	153:14	153:36	6	default :
call	153:38	154:62	6	TIFFError
arg	153:48	153:61	7	tif->tif_name
water	153:48	0:0	8	tif
op	153:51	0:0	8	->
water	153:53	0:0	8	tif_name
arg	154:40	154:62	7	"Unknown JPEG process"
water	154:40	0:0	8	"Unknown JPEG process"
water	154:63	0:0	6	;
return	155:38	155:46	6	0
water	155:45	0:0	7	0
label	160:14	160:36	6	case JPEGPROC_BASELINE :
water	160:38	0:0	6	sp
op	160:40	0:0	6	->
water	160:42	0:0	6	cinfo
op	160:47	0:0	6	.
water	160:48	0:0	6	d
op	160:49	0:0	6	.
water	160:50	0:0	6	process
op	160:58	0:0	6	=
water	160:60	0:0	6	JPROC_SEQUENTIAL
water	160:76	0:0	6	;
water	161:38	0:0	6	sp
op	161:40	0:0	6	->
water	161:42	0:0	6	cinfo
op	161:47	0:0	6	.
water	161:48	0:0	6	d
op	161:49	0:0	6	.
water	161:50	0:0	6	data_unit
op	161:60	0:0	6	=
water	161:62	0:0	6	DCTSIZE
water	161:69	0:0	6	;
break	162:38	162:43	6	
label	166:14	166:36	6	case JPEGPROC_LOSSLESS :
water	166:38	0:0	6	sp
op	166:40	0:0	6	->
water	166:42	0:0	6	cinfo
op	166:47	0:0	6	.
water	166:48	0:0	6	d
op	166:49	0:0	6	.
water	166:50	0:0	6	process
op	166:58	0:0	6	=
water	166:60	0:0	6	JPROC_LOSSLESS
water	166:74	0:0	6	;
water	167:38	0:0	6	sp
op	167:40	0:0	6	->
water	167:42	0:0	6	cinfo
op	167:47	0:0	6	.
water	167:48	0:0	6	d
op	167:49	0:0	6	.
water	167:50	0:0	6	data_unit
op	167:60	0:0	6	=
water	167:62	0:0	6	1
water	167:63	0:0	6	;
label	169:14	169:36	6	case JPEGPROC_LOSSLESS :
call	169:38	170:82	6	TIFFError
arg	169:48	169:60	7	JPEGLib_name
water	169:48	0:0	8	JPEGLib_name
arg	170:40	170:82	7	"Does not support lossless Huffman coding"
water	170:40	0:0	8	"Does not support lossless Huffman coding"
water	170:83	0:0	6	;
return	171:38	171:46	6	0
water	171:45	0:0	7	0
label	172:14	172:36	6	case JPEGPROC_BASELINE :
water	172:38	0:0	6	;
water	174:12	0:0	6	}
water	174:13	0:0	4	;
break	175:10	175:15	4	
label	184:8	184:43	4	case TIFFTAG_JPEGIFOFFSET :
if	185:10	189:12	4	(v32)
cond	185:14	185:14	5	v32
water	185:14	0:0	6	v32
stmts	186:12	189:12	5	
water	186:12	0:0	6	{
water	187:14	0:0	6	sp
op	187:16	0:0	6	->
water	187:18	0:0	6	src
op	187:21	0:0	6	.
water	187:22	0:0	6	next_input_byte
op	187:38	0:0	6	=
water	187:40	0:0	6	tif
op	187:43	0:0	6	->
water	187:45	0:0	6	tif_base
op	187:54	0:0	6	+
water	187:56	0:0	6	v32
water	187:59	0:0	6	;
break	188:14	188:19	6	
water	189:12	0:0	6	}
water	189:13	0:0	4	;
return	190:10	190:18	4	1
water	190:17	0:0	5	1
label	191:8	191:43	4	case TIFFTAG_JPEGIFBYTECOUNT :
water	192:10	0:0	4	sp
op	192:12	0:0	4	->
water	192:14	0:0	4	src
op	192:17	0:0	4	.
water	192:18	0:0	4	bytes_in_buffer
op	192:34	0:0	4	=
water	192:36	0:0	4	v32
water	192:39	0:0	4	;
break	193:10	193:15	4	
label	204:8	204:43	4	case TIFFTAG_JPEGRESTARTINTERVAL :
if	205:10	206:48	4	(v32)
cond	205:14	205:14	5	v32
water	205:14	0:0	6	v32
stmts	206:14	206:48	5	
water	206:14	0:0	6	sp
op	206:16	0:0	6	->
water	206:18	0:0	6	cinfo
op	206:23	0:0	6	.
water	206:24	0:0	6	d
op	206:25	0:0	6	.
water	206:26	0:0	6	restart_interval
op	206:43	0:0	6	=
water	206:45	0:0	6	v32
water	206:48	0:0	6	;
break	207:14	207:19	4	
label	216:8	216:43	4	case TIFFTAG_JPEGLOSSLESSPREDICTORS :
if	217:11	230:13	4	(v32)
cond	217:15	217:15	5	v32
water	217:15	0:0	6	v32
stmts	218:13	230:13	5	
water	218:13	0:0	6	{
water	219:15	0:0	6	sp
op	219:17	0:0	6	->
water	219:19	0:0	6	cinfo
op	219:24	0:0	6	.
water	219:25	0:0	6	d
op	219:26	0:0	6	.
water	219:27	0:0	6	Ss
op	219:30	0:0	6	=
call	219:32	219:51	6	*va_arg
arg	219:40	219:42	7	ap
water	219:40	0:0	8	ap
arg	219:43	219:51	7	uint16*
water	219:43	0:0	8	uint16
op	219:50	0:0	8	*
water	219:52	0:0	6	;
water	220:15	0:0	6	sp
op	220:17	0:0	6	->
water	220:19	0:0	6	jpeglosslesspredictors
op	220:42	0:0	6	=
call	221:6	222:20	6	_TIFFmalloc
arg	221:18	222:20	7	sp->jpeglosslesspredictors_length*sizeof(uint16)
water	221:18	0:0	8	sp
op	221:20	0:0	8	->
water	221:22	0:0	8	jpeglosslesspredictors_length
op	222:4	0:0	8	*
op	222:6	0:0	8	sizeof
water	222:12	0:0	8	(
water	222:13	0:0	8	uint16
water	222:19	0:0	8	)
water	222:21	0:0	6	;
if	223:15	223:62	6	(sp -> jpeglosslesspredictors == NULL)
cond	223:18	223:46	7	sp -> jpeglosslesspredictors == NULL
water	223:18	0:0	8	sp
op	223:20	0:0	8	->
water	223:22	0:0	8	jpeglosslesspredictors
op	223:44	0:0	8	==
water	223:46	0:0	8	NULL
stmts	223:51	223:62	7	
water	223:51	0:0	8	{
return	223:52	223:61	8	(0)
water	223:58	0:0	9	(
water	223:59	0:0	9	0
water	223:60	0:0	9	)
water	223:62	0:0	8	}
for	224:15	227:15	6	(i2 = 0 ;i2 < sp -> jpeglosslesspredictors_length;i2 ++)
forinit	224:19	224:23	7	i2 = 0 ;
water	224:19	0:0	8	i2
op	224:21	0:0	8	=
water	224:22	0:0	8	0
water	224:23	0:0	8	;
cond	224:24	224:31	7	i2 < sp -> jpeglosslesspredictors_length
water	224:24	0:0	8	i2
op	224:26	0:0	8	<
water	224:27	0:0	8	sp
op	224:29	0:0	8	->
water	224:31	0:0	8	jpeglosslesspredictors_length
forexpr	224:61	224:63	7	i2 ++
water	224:61	0:0	8	i2
op	224:63	0:0	8	++
stmts	224:66	227:15	7	
water	224:66	0:0	8	{
water	225:16	0:0	8	(
water	225:17	0:0	8	(
water	225:18	0:0	8	uint16
op	225:24	0:0	8	*
water	225:25	0:0	8	)
water	225:26	0:0	8	sp
op	225:28	0:0	8	->
water	225:30	0:0	8	jpeglosslesspredictors
water	225:52	0:0	8	)
op	225:53	0:0	8	[
water	225:54	0:0	8	i2
op	225:56	0:0	8	]
op	225:58	0:0	8	=
water	226:3	0:0	8	(
water	226:4	0:0	8	(
water	226:5	0:0	8	uint16
op	226:11	0:0	8	*
water	226:12	0:0	8	)
water	226:13	0:0	8	sp
op	226:15	0:0	8	->
water	226:17	0:0	8	cinfo
op	226:22	0:0	8	.
water	226:23	0:0	8	d
op	226:24	0:0	8	.
water	226:25	0:0	8	Ss
water	226:27	0:0	8	)
op	226:28	0:0	8	[
water	226:29	0:0	8	i2
op	226:31	0:0	8	]
water	226:32	0:0	8	;
water	227:15	0:0	8	}
water	228:15	0:0	6	sp
op	228:17	0:0	6	->
water	228:19	0:0	6	jpeglosslesspredictors_length
op	228:48	0:0	6	*=
op	228:50	0:0	6	sizeof
water	228:56	0:0	6	(
water	228:57	0:0	6	uint16
water	228:63	0:0	6	)
water	228:64	0:0	6	;
break	229:15	229:20	6	
water	230:13	0:0	6	}
water	230:14	0:0	4	;
return	231:11	231:21	4	v32
water	231:18	0:0	5	v32
label	241:8	241:43	4	case TIFFTAG_JPEGPOINTTRANSFORM :
if	242:11	254:13	4	(v32)
cond	242:15	242:15	5	v32
water	242:15	0:0	6	v32
stmts	243:13	254:13	5	
water	243:13	0:0	6	{
water	244:15	0:0	6	sp
op	244:17	0:0	6	->
water	244:19	0:0	6	cinfo
op	244:24	0:0	6	.
water	244:25	0:0	6	d
op	244:26	0:0	6	.
water	244:27	0:0	6	Al
op	244:30	0:0	6	=
call	244:32	244:51	6	*va_arg
arg	244:40	244:42	7	ap
water	244:40	0:0	8	ap
arg	244:43	244:51	7	uint16*
water	244:43	0:0	8	uint16
op	244:50	0:0	8	*
water	244:52	0:0	6	;
water	245:15	0:0	6	sp
op	245:17	0:0	6	->
water	245:19	0:0	6	jpegpointtransform
op	245:38	0:0	6	=
call	246:6	246:62	6	_TIFFmalloc
arg	246:18	246:62	7	sp->jpegpointtransform_length*sizeof(uint16)
water	246:18	0:0	8	sp
op	246:20	0:0	8	->
water	246:22	0:0	8	jpegpointtransform_length
op	246:47	0:0	8	*
op	246:48	0:0	8	sizeof
water	246:54	0:0	8	(
water	246:55	0:0	8	uint16
water	246:61	0:0	8	)
water	246:63	0:0	6	;
if	247:15	247:58	6	(sp -> jpegpointtransform == NULL)
cond	247:18	247:42	7	sp -> jpegpointtransform == NULL
water	247:18	0:0	8	sp
op	247:20	0:0	8	->
water	247:22	0:0	8	jpegpointtransform
op	247:40	0:0	8	==
water	247:42	0:0	8	NULL
stmts	247:47	247:58	7	
water	247:47	0:0	8	{
return	247:48	247:57	8	(0)
water	247:54	0:0	9	(
water	247:55	0:0	9	0
water	247:56	0:0	9	)
water	247:58	0:0	8	}
for	248:15	251:15	6	(i2 = 0 ;i2 < sp -> jpegpointtransform_length;i2 ++)
forinit	248:19	248:23	7	i2 = 0 ;
water	248:19	0:0	8	i2
op	248:21	0:0	8	=
water	248:22	0:0	8	0
water	248:23	0:0	8	;
cond	248:24	248:31	7	i2 < sp -> jpegpointtransform_length
water	248:24	0:0	8	i2
op	248:26	0:0	8	<
water	248:27	0:0	8	sp
op	248:29	0:0	8	->
water	248:31	0:0	8	jpegpointtransform_length
forexpr	248:57	248:59	7	i2 ++
water	248:57	0:0	8	i2
op	248:59	0:0	8	++
stmts	248:63	251:15	7	
water	248:63	0:0	8	{
water	249:16	0:0	8	(
water	249:17	0:0	8	(
water	249:18	0:0	8	uint16
op	249:24	0:0	8	*
water	249:25	0:0	8	)
water	249:26	0:0	8	sp
op	249:28	0:0	8	->
water	249:30	0:0	8	jpegpointtransform
water	249:48	0:0	8	)
op	249:49	0:0	8	[
water	249:50	0:0	8	i2
op	249:52	0:0	8	]
op	249:54	0:0	8	=
water	250:3	0:0	8	(
water	250:4	0:0	8	(
water	250:5	0:0	8	uint16
op	250:11	0:0	8	*
water	250:12	0:0	8	)
water	250:13	0:0	8	sp
op	250:15	0:0	8	->
water	250:17	0:0	8	cinfo
op	250:22	0:0	8	.
water	250:23	0:0	8	d
op	250:24	0:0	8	.
water	250:25	0:0	8	Al
water	250:27	0:0	8	)
op	250:28	0:0	8	[
water	250:29	0:0	8	i2
op	250:31	0:0	8	]
water	250:32	0:0	8	;
water	251:15	0:0	8	}
water	252:15	0:0	6	sp
op	252:17	0:0	6	->
water	252:19	0:0	6	jpegpointtransform_length
op	252:44	0:0	6	*=
op	252:46	0:0	6	sizeof
water	252:52	0:0	6	(
water	252:53	0:0	6	uint16
water	252:59	0:0	6	)
water	252:60	0:0	6	;
break	253:15	253:20	6	
water	254:13	0:0	6	}
return	255:11	255:21	4	v32
water	255:18	0:0	5	v32
label	259:8	259:43	4	case TIFFTAG_JPEGQTABLES :
if	260:10	301:12	4	(v32)
cond	260:14	260:14	5	v32
water	260:14	0:0	6	v32
stmts	261:12	301:12	5	
water	261:12	0:0	6	{
decl	261:14	261:23	6	uint32	*v
decl	262:14	262:19	6	int	i
if	263:14	267:16	6	(v32 > NUM_QUANT_TBLS)
cond	263:18	263:24	7	v32 > NUM_QUANT_TBLS
water	263:18	0:0	8	v32
op	263:22	0:0	8	>
water	263:24	0:0	8	NUM_QUANT_TBLS
stmts	264:16	267:16	7	
water	264:16	0:0	8	{
call	265:18	265:72	8	TIFFError
arg	265:28	265:41	9	tif->tif_name
water	265:28	0:0	10	tif
op	265:31	0:0	10	->
water	265:33	0:0	10	tif_name
arg	265:42	265:72	9	"Too many quantization tables"
water	265:42	0:0	10	"Too many quantization tables"
water	265:73	0:0	8	;
return	266:18	266:26	8	0
water	266:25	0:0	9	0
water	267:16	0:0	8	}
water	267:17	0:0	6	;
water	268:14	0:0	6	i
op	268:16	0:0	6	=
water	268:18	0:0	6	0
water	268:19	0:0	6	;
water	269:14	0:0	6	v
op	269:16	0:0	6	=
call	269:18	269:36	6	va_arg
arg	269:25	269:27	7	ap
water	269:25	0:0	8	ap
arg	269:28	269:36	7	uint32*
water	269:28	0:0	8	uint32
op	269:35	0:0	8	*
water	269:37	0:0	6	;
water	270:16	0:0	6	sp
op	270:18	0:0	6	->
water	270:20	0:0	6	jpegqtables
op	270:31	0:0	6	=
call	270:32	270:69	6	_TIFFmalloc
arg	270:44	270:69	7	64*sp->jpegqtables_length
water	270:44	0:0	8	64
op	270:46	0:0	8	*
water	270:47	0:0	8	sp
op	270:49	0:0	8	->
water	270:51	0:0	8	jpegqtables_length
water	270:70	0:0	6	;
if	271:16	271:52	6	(sp -> jpegqtables == NULL)
cond	271:19	271:36	7	sp -> jpegqtables == NULL
water	271:19	0:0	8	sp
op	271:21	0:0	8	->
water	271:23	0:0	8	jpegqtables
op	271:34	0:0	8	==
water	271:36	0:0	8	NULL
stmts	271:41	271:52	7	
water	271:41	0:0	8	{
return	271:42	271:51	8	(0)
water	271:48	0:0	9	(
water	271:49	0:0	9	0
water	271:50	0:0	9	)
water	271:52	0:0	8	}
water	272:16	0:0	6	tiffoff
op	272:24	0:0	6	=
call	272:26	272:55	6	TIFFSeekFile
arg	272:39	272:42	7	tif
water	272:39	0:0	8	tif
arg	272:44	272:45	7	0
water	272:44	0:0	8	0
arg	272:47	272:55	7	SEEK_CUR
water	272:47	0:0	8	SEEK_CUR
water	272:56	0:0	6	;
water	273:16	0:0	6	bufoff
op	273:22	0:0	6	=
water	273:23	0:0	6	0
water	273:24	0:0	6	;
for	274:16	279:16	6	(i2 = 0 ;i2 < sp -> jpegqtables_length;i2 ++)
forinit	274:20	274:24	7	i2 = 0 ;
water	274:20	0:0	8	i2
op	274:22	0:0	8	=
water	274:23	0:0	8	0
water	274:24	0:0	8	;
cond	274:25	274:32	7	i2 < sp -> jpegqtables_length
water	274:25	0:0	8	i2
op	274:27	0:0	8	<
water	274:28	0:0	8	sp
op	274:30	0:0	8	->
water	274:32	0:0	8	jpegqtables_length
forexpr	274:51	274:53	7	i2 ++
water	274:51	0:0	8	i2
op	274:53	0:0	8	++
stmts	274:56	279:16	7	
water	274:56	0:0	8	{
call	275:20	275:53	8	TIFFSeekFile
arg	275:33	275:36	9	tif
water	275:33	0:0	10	tif
arg	275:38	275:43	9	v[i2]
water	275:38	0:0	10	v
op	275:39	0:0	10	[
water	275:40	0:0	10	i2
op	275:42	0:0	10	]
arg	275:45	275:53	9	SEEK_SET
water	275:45	0:0	10	SEEK_SET
water	275:54	0:0	8	;
call	276:20	277:7	8	TIFFReadFile
arg	276:33	276:36	9	tif
water	276:33	0:0	10	tif
arg	276:38	276:77	9	&(((u_char*)(sp->jpegqtables))[bufoff])
op	276:38	0:0	10	&
water	276:39	0:0	10	(
water	276:40	0:0	10	(
call	276:41	276:66	10	(u_char*)
arg	276:51	276:66	11	sp->jpegqtables
water	276:51	0:0	12	sp
op	276:53	0:0	12	->
water	276:55	0:0	12	jpegqtables
water	276:67	0:0	10	)
op	276:68	0:0	10	[
water	276:69	0:0	10	bufoff
op	276:75	0:0	10	]
water	276:76	0:0	10	)
arg	277:5	277:7	9	64
water	277:5	0:0	10	64
water	277:8	0:0	8	;
water	278:20	0:0	8	bufoff
op	278:26	0:0	8	+=
water	278:28	0:0	8	64
water	278:30	0:0	8	;
water	279:16	0:0	8	}
water	280:16	0:0	6	sp
op	280:18	0:0	6	->
water	280:20	0:0	6	jpegqtables_length
op	280:38	0:0	6	=
water	280:39	0:0	6	bufoff
water	280:45	0:0	6	;
call	281:16	281:51	6	TIFFSeekFile
arg	281:29	281:32	7	tif
water	281:29	0:0	8	tif
arg	281:34	281:41	7	tiffoff
water	281:34	0:0	8	tiffoff
arg	281:43	281:51	7	SEEK_SET
water	281:43	0:0	8	SEEK_SET
water	281:52	0:0	6	;
do	283:14	298:16	6	(++ i < v32)
cond	299:21	299:27	7	++ i < v32
op	299:21	0:0	8	++
water	299:23	0:0	8	i
op	299:25	0:0	8	<
water	299:27	0:0	8	v32
stmts	284:16	298:16	7	
water	284:16	0:0	8	{
water	284:18	0:0	8	register
water	284:27	0:0	8	UINT8
op	284:33	0:0	8	*
water	284:34	0:0	8	from
op	284:39	0:0	8	=
water	284:41	0:0	8	tif
op	284:44	0:0	8	->
water	284:46	0:0	8	tif_base
op	284:55	0:0	8	+
op	284:57	0:0	8	*
water	284:58	0:0	8	v
op	284:59	0:0	8	++
water	284:61	0:0	8	;
water	285:18	0:0	8	register
water	285:27	0:0	8	UINT16
op	285:34	0:0	8	*
water	285:35	0:0	8	to
water	285:37	0:0	8	;
water	286:18	0:0	8	register
water	286:27	0:0	8	int
water	286:31	0:0	8	j
op	286:33	0:0	8	=
water	286:35	0:0	8	DCTSIZE2
water	286:43	0:0	8	;
if	288:18	295:20	8	(! ( sp -> cinfo . d . quant_tbl_ptrs [ i ] =CALLJPEG (sp ,0 ,jpeg_alloc_quant_table (& sp -> cinfo . comm ) ) ))
cond	288:22	290:23	9	! ( sp -> cinfo . d . quant_tbl_ptrs [ i ] =CALLJPEG (sp ,0 ,jpeg_alloc_quant_table (& sp -> cinfo . comm ) ) )
op	288:22	0:0	10	!
water	288:23	0:0	10	(
water	288:25	0:0	10	sp
op	288:27	0:0	10	->
water	288:29	0:0	10	cinfo
op	288:34	0:0	10	.
water	288:35	0:0	10	d
op	288:36	0:0	10	.
water	288:37	0:0	10	quant_tbl_ptrs
op	288:51	0:0	10	[
water	288:52	0:0	10	i
op	288:53	0:0	10	]
op	289:23	0:0	10	=
call	289:25	289:78	10	CALLJPEG
arg	289:34	289:36	11	sp
water	289:34	0:0	12	sp
arg	289:37	289:38	11	0
water	289:37	0:0	12	0
arg	289:39	289:78	11	jpeg_alloc_quant_table(&sp->cinfo.comm)
call	289:39	289:77	12	jpeg_alloc_quant_table
arg	289:62	289:77	13	&sp->cinfo.comm
op	289:62	0:0	14	&
water	289:63	0:0	14	sp
op	289:65	0:0	14	->
water	289:67	0:0	14	cinfo
op	289:72	0:0	14	.
water	289:73	0:0	14	comm
water	290:23	0:0	10	)
stmts	292:20	295:20	9	
water	292:20	0:0	10	{
call	293:22	293:78	10	TIFFError
arg	293:32	293:44	11	JPEGLib_name
water	293:32	0:0	12	JPEGLib_name
arg	293:45	293:78	11	"No space for quantization table"
water	293:45	0:0	12	"No space for quantization table"
water	293:79	0:0	10	;
return	294:22	294:30	10	0
water	294:29	0:0	11	0
water	295:20	0:0	10	}
water	295:21	0:0	8	;
water	296:18	0:0	8	to
op	296:21	0:0	8	=
water	296:23	0:0	8	sp
op	296:25	0:0	8	->
water	296:27	0:0	8	cinfo
op	296:32	0:0	8	.
water	296:33	0:0	8	d
op	296:34	0:0	8	.
water	296:35	0:0	8	quant_tbl_ptrs
op	296:49	0:0	8	[
water	296:50	0:0	8	i
op	296:51	0:0	8	]
op	296:52	0:0	8	->
water	296:54	0:0	8	quantval
water	296:62	0:0	8	;
do	297:18	297:36	8	(-- j > 0)
cond	297:45	297:51	9	-- j > 0
op	297:45	0:0	10	--
water	297:47	0:0	10	j
op	297:49	0:0	10	>
water	297:51	0:0	10	0
stmts	297:21	297:36	9	
op	297:21	0:0	10	*
water	297:22	0:0	10	to
op	297:24	0:0	10	++
op	297:27	0:0	10	=
op	297:29	0:0	10	*
water	297:30	0:0	10	from
op	297:34	0:0	10	++
water	297:36	0:0	10	;
water	297:53	0:0	8	;
water	298:16	0:0	8	}
water	299:31	0:0	6	;
water	300:14	0:0	6	sp
op	300:16	0:0	6	->
water	300:18	0:0	6	jpegtablesmode
op	300:33	0:0	6	|=
water	300:36	0:0	6	JPEGTABLESMODE_QUANT
water	300:56	0:0	6	;
water	301:12	0:0	6	}
water	301:13	0:0	4	;
break	302:10	302:15	4	
label	306:8	306:43	4	case TIFFTAG_JPEGDCTABLES :
water	307:10	0:0	4	h
op	307:12	0:0	4	=
water	307:14	0:0	4	sp
op	307:16	0:0	4	->
water	307:18	0:0	4	cinfo
op	307:23	0:0	4	.
water	307:24	0:0	4	d
op	307:25	0:0	4	.
water	307:26	0:0	4	dc_huff_tbl_ptrs
water	307:42	0:0	4	;
goto	308:10	308:16	4	L
water	308:15	0:0	5	L
label	312:8	312:43	4	case TIFFTAG_JPEGACTABLES :
water	313:10	0:0	4	h
op	313:12	0:0	4	=
water	313:14	0:0	4	sp
op	313:16	0:0	4	->
water	313:18	0:0	4	cinfo
op	313:23	0:0	4	.
water	313:24	0:0	4	d
op	313:25	0:0	4	.
water	313:26	0:0	4	ac_huff_tbl_ptrs
water	313:42	0:0	4	;
label	314:7	314:8	4	L :
if	314:10	402:12	4	(v32)
cond	314:14	314:14	5	v32
water	314:14	0:0	6	v32
stmts	315:12	402:12	5	
water	315:12	0:0	6	{
decl	315:14	315:23	6	uint32	*v
decl	316:14	316:19	6	int	i
if	317:14	321:16	6	(v32 > NUM_HUFF_TBLS)
cond	317:18	317:24	7	v32 > NUM_HUFF_TBLS
water	317:18	0:0	8	v32
op	317:22	0:0	8	>
water	317:24	0:0	8	NUM_HUFF_TBLS
stmts	318:16	321:16	7	
water	318:16	0:0	8	{
call	319:18	319:67	8	TIFFError
arg	319:28	319:41	9	tif->tif_name
water	319:28	0:0	10	tif
op	319:31	0:0	10	->
water	319:33	0:0	10	tif_name
arg	319:42	319:67	9	"Too many Huffman tables"
water	319:42	0:0	10	"Too many Huffman tables"
water	319:68	0:0	8	;
return	320:18	320:26	8	0
water	320:25	0:0	9	0
water	321:16	0:0	8	}
water	321:17	0:0	6	;
water	322:14	0:0	6	v
op	322:16	0:0	6	=
call	322:18	322:36	6	va_arg
arg	322:25	322:27	7	ap
water	322:25	0:0	8	ap
arg	322:28	322:36	7	uint32*
water	322:28	0:0	8	uint32
op	322:35	0:0	8	*
water	322:37	0:0	6	;
if	323:16	346:16	6	(tag == TIFFTAG_JPEGDCTABLES)
cond	323:19	323:26	7	tag == TIFFTAG_JPEGDCTABLES
water	323:19	0:0	8	tag
op	323:23	0:0	8	==
water	323:26	0:0	8	TIFFTAG_JPEGDCTABLES
stmts	323:48	346:16	7	
water	323:48	0:0	8	{
water	324:20	0:0	8	sp
op	324:22	0:0	8	->
water	324:24	0:0	8	jpegdctables
op	324:36	0:0	8	=
call	324:37	324:76	8	_TIFFmalloc
arg	324:49	324:76	9	272*sp->jpegdctables_length
water	324:49	0:0	10	272
op	324:52	0:0	10	*
water	324:53	0:0	10	sp
op	324:55	0:0	10	->
water	324:57	0:0	10	jpegdctables_length
water	324:77	0:0	8	;
if	325:20	325:57	8	(sp -> jpegdctables == NULL)
cond	325:23	325:41	9	sp -> jpegdctables == NULL
water	325:23	0:0	10	sp
op	325:25	0:0	10	->
water	325:27	0:0	10	jpegdctables
op	325:39	0:0	10	==
water	325:41	0:0	10	NULL
stmts	325:46	325:57	9	
water	325:46	0:0	10	{
return	325:47	325:56	10	(0)
water	325:53	0:0	11	(
water	325:54	0:0	11	0
water	325:55	0:0	11	)
water	325:57	0:0	10	}
water	326:20	0:0	8	tiffoff
op	326:28	0:0	8	=
call	326:30	326:59	8	TIFFSeekFile
arg	326:43	326:46	9	tif
water	326:43	0:0	10	tif
arg	326:48	326:49	9	0
water	326:48	0:0	10	0
arg	326:51	326:59	9	SEEK_CUR
water	326:51	0:0	10	SEEK_CUR
water	326:60	0:0	8	;
water	327:20	0:0	8	bufoff
op	327:26	0:0	8	=
water	327:27	0:0	8	0
water	327:28	0:0	8	;
water	328:20	0:0	8	code_count
op	328:30	0:0	8	=
water	328:31	0:0	8	0
water	328:32	0:0	8	;
for	329:20	343:20	8	(i2 = 0 ;i2 < sp -> jpegdctables_length;i2 ++)
forinit	329:24	329:28	9	i2 = 0 ;
water	329:24	0:0	10	i2
op	329:26	0:0	10	=
water	329:27	0:0	10	0
water	329:28	0:0	10	;
cond	329:29	329:36	9	i2 < sp -> jpegdctables_length
water	329:29	0:0	10	i2
op	329:31	0:0	10	<
water	329:32	0:0	10	sp
op	329:34	0:0	10	->
water	329:36	0:0	10	jpegdctables_length
forexpr	329:56	329:58	9	i2 ++
water	329:56	0:0	10	i2
op	329:58	0:0	10	++
stmts	329:61	343:20	9	
water	329:61	0:0	10	{
call	330:24	330:57	10	TIFFSeekFile
arg	330:37	330:40	11	tif
water	330:37	0:0	12	tif
arg	330:42	330:47	11	v[i2]
water	330:42	0:0	12	v
op	330:43	0:0	12	[
water	330:44	0:0	12	i2
op	330:46	0:0	12	]
arg	330:49	330:57	11	SEEK_SET
water	330:49	0:0	12	SEEK_SET
water	330:58	0:0	10	;
call	331:24	333:11	10	TIFFReadFile
arg	331:37	331:40	11	tif
water	331:37	0:0	12	tif
arg	332:9	332:49	11	&(((u_char*)(sp->jpegdctables))[bufoff])
op	332:9	0:0	12	&
water	332:10	0:0	12	(
water	332:11	0:0	12	(
call	332:12	332:38	12	(u_char*)
arg	332:22	332:38	13	sp->jpegdctables
water	332:22	0:0	14	sp
op	332:24	0:0	14	->
water	332:26	0:0	14	jpegdctables
water	332:39	0:0	12	)
op	332:40	0:0	12	[
water	332:41	0:0	12	bufoff
op	332:47	0:0	12	]
water	332:48	0:0	12	)
arg	333:9	333:11	11	16
water	333:9	0:0	12	16
water	333:12	0:0	10	;
water	334:24	0:0	10	code_count
op	334:34	0:0	10	=
water	334:35	0:0	10	0
water	334:36	0:0	10	;
for	335:24	337:24	10	(k2 = 0 ;k2 < 16;k2 ++)
forinit	335:28	335:32	11	k2 = 0 ;
water	335:28	0:0	12	k2
op	335:30	0:0	12	=
water	335:31	0:0	12	0
water	335:32	0:0	12	;
cond	335:33	335:36	11	k2 < 16
water	335:33	0:0	12	k2
op	335:35	0:0	12	<
water	335:36	0:0	12	16
forexpr	335:39	335:41	11	k2 ++
water	335:39	0:0	12	k2
op	335:41	0:0	12	++
stmts	335:44	337:24	11	
water	335:44	0:0	12	{
water	336:28	0:0	12	code_count
op	336:38	0:0	12	+=
water	336:40	0:0	12	(
call	336:41	336:67	12	(u_char*)
arg	336:51	336:67	13	sp->jpegdctables
water	336:51	0:0	14	sp
op	336:53	0:0	14	->
water	336:55	0:0	14	jpegdctables
water	336:68	0:0	12	)
op	336:69	0:0	12	[
water	336:70	0:0	12	k2
op	336:72	0:0	12	+
water	336:73	0:0	12	bufoff
op	336:79	0:0	12	]
water	336:80	0:0	12	;
water	337:24	0:0	12	}
call	338:24	340:19	10	TIFFReadFile
arg	338:37	338:40	11	tif
water	338:37	0:0	12	tif
arg	339:9	339:52	11	&(((u_char*)(sp->jpegdctables))[bufoff+16])
op	339:9	0:0	12	&
water	339:10	0:0	12	(
water	339:11	0:0	12	(
call	339:12	339:38	12	(u_char*)
arg	339:22	339:38	13	sp->jpegdctables
water	339:22	0:0	14	sp
op	339:24	0:0	14	->
water	339:26	0:0	14	jpegdctables
water	339:39	0:0	12	)
op	339:40	0:0	12	[
water	339:41	0:0	12	bufoff
op	339:47	0:0	12	+
water	339:48	0:0	12	16
op	339:50	0:0	12	]
water	339:51	0:0	12	)
arg	340:9	340:19	11	code_count
water	340:9	0:0	12	code_count
water	340:20	0:0	10	;
water	341:24	0:0	10	bufoff
op	341:30	0:0	10	+=
water	341:32	0:0	10	16
water	341:34	0:0	10	;
water	342:24	0:0	10	bufoff
op	342:30	0:0	10	+=
water	342:32	0:0	10	code_count
water	342:42	0:0	10	;
water	343:20	0:0	10	}
water	344:20	0:0	8	sp
op	344:22	0:0	8	->
water	344:24	0:0	8	jpegdctables_length
op	344:43	0:0	8	=
water	344:44	0:0	8	bufoff
water	344:50	0:0	8	;
call	345:20	345:55	8	TIFFSeekFile
arg	345:33	345:36	9	tif
water	345:33	0:0	10	tif
arg	345:38	345:45	9	tiffoff
water	345:38	0:0	10	tiffoff
arg	345:47	345:55	9	SEEK_SET
water	345:47	0:0	10	SEEK_SET
water	345:56	0:0	8	;
water	346:16	0:0	8	}
if	347:16	366:16	6	(tag == TIFFTAG_JPEGACTABLES)
cond	347:19	347:24	7	tag == TIFFTAG_JPEGACTABLES
water	347:19	0:0	8	tag
op	347:22	0:0	8	==
water	347:24	0:0	8	TIFFTAG_JPEGACTABLES
stmts	347:45	366:16	7	
water	347:45	0:0	8	{
water	348:20	0:0	8	sp
op	348:22	0:0	8	->
water	348:24	0:0	8	jpegactables
op	348:36	0:0	8	=
call	348:37	348:76	8	_TIFFmalloc
arg	348:49	348:76	9	272*sp->jpegactables_length
water	348:49	0:0	10	272
op	348:52	0:0	10	*
water	348:53	0:0	10	sp
op	348:55	0:0	10	->
water	348:57	0:0	10	jpegactables_length
water	348:77	0:0	8	;
if	349:20	349:57	8	(sp -> jpegactables == NULL)
cond	349:23	349:41	9	sp -> jpegactables == NULL
water	349:23	0:0	10	sp
op	349:25	0:0	10	->
water	349:27	0:0	10	jpegactables
op	349:39	0:0	10	==
water	349:41	0:0	10	NULL
stmts	349:46	349:57	9	
water	349:46	0:0	10	{
return	349:47	349:56	10	(0)
water	349:53	0:0	11	(
water	349:54	0:0	11	0
water	349:55	0:0	11	)
water	349:57	0:0	10	}
water	350:20	0:0	8	tiffoff
op	350:28	0:0	8	=
call	350:30	350:59	8	TIFFSeekFile
arg	350:43	350:46	9	tif
water	350:43	0:0	10	tif
arg	350:48	350:49	9	0
water	350:48	0:0	10	0
arg	350:51	350:59	9	SEEK_CUR
water	350:51	0:0	10	SEEK_CUR
water	350:60	0:0	8	;
water	351:20	0:0	8	bufoff
op	351:26	0:0	8	=
water	351:27	0:0	8	0
water	351:28	0:0	8	;
water	352:20	0:0	8	code_count
op	352:30	0:0	8	=
water	352:31	0:0	8	0
water	352:32	0:0	8	;
for	353:20	363:20	8	(i2 = 0 ;i2 < sp -> jpegactables_length;i2 ++)
forinit	353:24	353:28	9	i2 = 0 ;
water	353:24	0:0	10	i2
op	353:26	0:0	10	=
water	353:27	0:0	10	0
water	353:28	0:0	10	;
cond	353:29	353:36	9	i2 < sp -> jpegactables_length
water	353:29	0:0	10	i2
op	353:31	0:0	10	<
water	353:32	0:0	10	sp
op	353:34	0:0	10	->
water	353:36	0:0	10	jpegactables_length
forexpr	353:56	353:58	9	i2 ++
water	353:56	0:0	10	i2
op	353:58	0:0	10	++
stmts	353:61	363:20	9	
water	353:61	0:0	10	{
call	354:24	354:57	10	TIFFSeekFile
arg	354:37	354:40	11	tif
water	354:37	0:0	12	tif
arg	354:42	354:47	11	v[i2]
water	354:42	0:0	12	v
op	354:43	0:0	12	[
water	354:44	0:0	12	i2
op	354:46	0:0	12	]
arg	354:49	354:57	11	SEEK_SET
water	354:49	0:0	12	SEEK_SET
water	354:58	0:0	10	;
call	355:24	355:93	10	TIFFReadFile
arg	355:37	355:40	11	tif
water	355:37	0:0	12	tif
arg	355:42	355:89	11	&(((unsignedchar*)(sp->jpegactables))[bufoff])
op	355:42	0:0	12	&
water	355:43	0:0	12	(
water	355:44	0:0	12	(
call	355:45	355:78	12	(unsignedchar*)
arg	355:62	355:78	13	sp->jpegactables
water	355:62	0:0	14	sp
op	355:64	0:0	14	->
water	355:66	0:0	14	jpegactables
water	355:79	0:0	12	)
op	355:80	0:0	12	[
water	355:81	0:0	12	bufoff
op	355:87	0:0	12	]
water	355:88	0:0	12	)
arg	355:91	355:93	11	16
water	355:91	0:0	12	16
water	355:94	0:0	10	;
water	356:24	0:0	10	code_count
op	356:34	0:0	10	=
water	356:35	0:0	10	0
water	356:36	0:0	10	;
for	357:24	359:24	10	(k2 = 0 ;k2 < 16;k2 ++)
forinit	357:28	357:32	11	k2 = 0 ;
water	357:28	0:0	12	k2
op	357:30	0:0	12	=
water	357:31	0:0	12	0
water	357:32	0:0	12	;
cond	357:33	357:36	11	k2 < 16
water	357:33	0:0	12	k2
op	357:35	0:0	12	<
water	357:36	0:0	12	16
forexpr	357:39	357:41	11	k2 ++
water	357:39	0:0	12	k2
op	357:41	0:0	12	++
stmts	357:44	359:24	11	
water	357:44	0:0	12	{
water	358:28	0:0	12	code_count
op	358:38	0:0	12	+=
water	358:40	0:0	12	(
call	358:41	358:74	12	(unsignedchar*)
arg	358:58	358:74	13	sp->jpegactables
water	358:58	0:0	14	sp
op	358:60	0:0	14	->
water	358:62	0:0	14	jpegactables
water	358:75	0:0	12	)
op	358:76	0:0	12	[
water	358:77	0:0	12	k2
op	358:79	0:0	12	+
water	358:80	0:0	12	bufoff
op	358:86	0:0	12	]
water	358:87	0:0	12	;
water	359:24	0:0	12	}
call	360:24	360:104	10	TIFFReadFile
arg	360:37	360:40	11	tif
water	360:37	0:0	12	tif
arg	360:42	360:92	11	&(((unsignedchar*)(sp->jpegactables))[bufoff+16])
op	360:42	0:0	12	&
water	360:43	0:0	12	(
water	360:44	0:0	12	(
call	360:45	360:78	12	(unsignedchar*)
arg	360:62	360:78	13	sp->jpegactables
water	360:62	0:0	14	sp
op	360:64	0:0	14	->
water	360:66	0:0	14	jpegactables
water	360:79	0:0	12	)
op	360:80	0:0	12	[
water	360:81	0:0	12	bufoff
op	360:87	0:0	12	+
water	360:88	0:0	12	16
op	360:90	0:0	12	]
water	360:91	0:0	12	)
arg	360:94	360:104	11	code_count
water	360:94	0:0	12	code_count
water	360:105	0:0	10	;
water	361:24	0:0	10	bufoff
op	361:30	0:0	10	+=
water	361:32	0:0	10	16
water	361:34	0:0	10	;
water	362:24	0:0	10	bufoff
op	362:30	0:0	10	+=
water	362:32	0:0	10	code_count
water	362:42	0:0	10	;
water	363:20	0:0	10	}
water	364:20	0:0	8	sp
op	364:22	0:0	8	->
water	364:24	0:0	8	jpegactables_length
op	364:43	0:0	8	=
water	364:44	0:0	8	bufoff
water	364:50	0:0	8	;
call	365:20	365:55	8	TIFFSeekFile
arg	365:33	365:36	9	tif
water	365:33	0:0	10	tif
arg	365:38	365:45	9	tiffoff
water	365:38	0:0	10	tiffoff
arg	365:47	365:55	9	SEEK_SET
water	365:47	0:0	10	SEEK_SET
water	365:56	0:0	8	;
water	366:16	0:0	8	}
water	367:14	0:0	6	i
op	367:16	0:0	6	=
water	367:18	0:0	6	0
water	367:19	0:0	6	;
do	368:14	399:16	6	(++ i < v32)
cond	400:21	400:27	7	++ i < v32
op	400:21	0:0	8	++
water	400:23	0:0	8	i
op	400:25	0:0	8	<
water	400:27	0:0	8	v32
stmts	369:16	399:16	7	
water	369:16	0:0	8	{
decl	369:18	369:30	8	int	size
op	369:27	0:0	8	=
water	369:29	0:0	8	0
water	370:18	0:0	8	register
water	370:27	0:0	8	UINT8
op	370:33	0:0	8	*
water	370:34	0:0	8	from
op	370:39	0:0	8	=
water	370:41	0:0	8	tif
op	370:44	0:0	8	->
water	370:46	0:0	8	tif_base
op	370:55	0:0	8	+
op	370:57	0:0	8	*
water	370:58	0:0	8	v
op	370:59	0:0	8	++
water	370:61	0:0	8	,
op	370:63	0:0	8	*
water	370:64	0:0	8	to
water	370:66	0:0	8	;
water	371:18	0:0	8	register
water	371:27	0:0	8	int
water	371:31	0:0	8	j
op	371:33	0:0	8	=
op	371:35	0:0	8	sizeof
water	371:42	0:0	8	(
op	371:43	0:0	8	*
water	371:44	0:0	8	h
water	371:45	0:0	8	)
op	371:46	0:0	8	->
water	371:48	0:0	8	bits
water	371:52	0:0	8	;
if	380:18	387:20	8	(! ( * h =CALLJPEG (sp ,0 ,jpeg_alloc_huff_table (& sp -> cinfo . comm ) ) ))
cond	380:22	382:23	9	! ( * h =CALLJPEG (sp ,0 ,jpeg_alloc_huff_table (& sp -> cinfo . comm ) ) )
op	380:22	0:0	10	!
water	380:23	0:0	10	(
op	380:25	0:0	10	*
water	380:26	0:0	10	h
op	381:23	0:0	10	=
call	381:25	381:77	10	CALLJPEG
arg	381:34	381:36	11	sp
water	381:34	0:0	12	sp
arg	381:37	381:38	11	0
water	381:37	0:0	12	0
arg	381:39	381:77	11	jpeg_alloc_huff_table(&sp->cinfo.comm)
call	381:39	381:76	12	jpeg_alloc_huff_table
arg	381:61	381:76	13	&sp->cinfo.comm
op	381:61	0:0	14	&
water	381:62	0:0	14	sp
op	381:64	0:0	14	->
water	381:66	0:0	14	cinfo
op	381:71	0:0	14	.
water	381:72	0:0	14	comm
water	382:23	0:0	10	)
stmts	384:20	387:20	9	
water	384:20	0:0	10	{
call	385:22	385:73	10	TIFFError
arg	385:32	385:44	11	JPEGLib_name
water	385:32	0:0	12	JPEGLib_name
arg	385:45	385:73	11	"No space for Huffman table"
water	385:45	0:0	12	"No space for Huffman table"
water	385:74	0:0	10	;
return	386:22	386:30	10	0
water	386:29	0:0	11	0
water	387:20	0:0	10	}
water	387:21	0:0	8	;
water	388:18	0:0	8	to
op	388:21	0:0	8	=
water	388:23	0:0	8	(
op	388:24	0:0	8	*
water	388:25	0:0	8	h
op	388:26	0:0	8	++
water	388:28	0:0	8	)
op	388:29	0:0	8	->
water	388:31	0:0	8	bits
water	388:35	0:0	8	;
op	389:18	0:0	8	*
water	389:19	0:0	8	to
op	389:21	0:0	8	++
op	389:24	0:0	8	=
water	389:26	0:0	8	0
water	389:27	0:0	8	;
while	390:18	390:57	8	(-- j > 0)
cond	390:25	390:31	9	-- j > 0
op	390:25	0:0	10	--
water	390:27	0:0	10	j
op	390:29	0:0	10	>
water	390:31	0:0	10	0
stmts	390:34	390:57	9	
water	390:34	0:0	10	size
op	390:39	0:0	10	+=
op	390:42	0:0	10	*
water	390:43	0:0	10	to
op	390:45	0:0	10	++
op	390:48	0:0	10	=
op	390:50	0:0	10	*
water	390:51	0:0	10	from
op	390:55	0:0	10	++
water	390:57	0:0	10	;
if	391:18	395:20	8	(size > sizeof ( * h ) -> huffval / sizeof * ( * h ) -> huffval)
cond	391:22	391:64	9	size > sizeof ( * h ) -> huffval / sizeof * ( * h ) -> huffval
water	391:22	0:0	10	size
op	391:27	0:0	10	>
op	391:29	0:0	10	sizeof
water	391:36	0:0	10	(
op	391:37	0:0	10	*
water	391:38	0:0	10	h
water	391:39	0:0	10	)
op	391:40	0:0	10	->
water	391:42	0:0	10	huffval
op	391:49	0:0	10	/
op	391:50	0:0	10	sizeof
op	391:57	0:0	10	*
water	391:58	0:0	10	(
op	391:59	0:0	10	*
water	391:60	0:0	10	h
water	391:61	0:0	10	)
op	391:62	0:0	10	->
water	391:64	0:0	10	huffval
stmts	392:20	395:20	9	
water	392:20	0:0	10	{
call	393:22	393:69	10	TIFFError
arg	393:32	393:45	11	tif->tif_name
water	393:32	0:0	12	tif
op	393:35	0:0	12	->
water	393:37	0:0	12	tif_name
arg	393:46	393:69	11	"Huffman table too big"
water	393:46	0:0	12	"Huffman table too big"
water	393:70	0:0	10	;
return	394:22	394:30	10	0
water	394:29	0:0	11	0
water	395:20	0:0	10	}
water	395:21	0:0	8	;
if	396:18	396:56	8	(( j = size ) > 0)
cond	396:22	396:35	9	( j = size ) > 0
water	396:22	0:0	10	(
water	396:23	0:0	10	j
op	396:25	0:0	10	=
water	396:27	0:0	10	size
water	396:31	0:0	10	)
op	396:33	0:0	10	>
water	396:35	0:0	10	0
stmts	396:38	396:56	9	
do	396:38	396:56	10	(-- j > 0)
cond	396:65	396:71	11	-- j > 0
op	396:65	0:0	12	--
water	396:67	0:0	12	j
op	396:69	0:0	12	>
water	396:71	0:0	12	0
stmts	396:41	396:56	11	
op	396:41	0:0	12	*
water	396:42	0:0	12	to
op	396:44	0:0	12	++
op	396:47	0:0	12	=
op	396:49	0:0	12	*
water	396:50	0:0	12	from
op	396:54	0:0	12	++
water	396:56	0:0	12	;
water	396:73	0:0	8	;
while	397:18	398:29	8	(++ size <= sizeof ( * h ) -> huffval / sizeof * ( * h ) -> huffval)
cond	397:25	397:70	9	++ size <= sizeof ( * h ) -> huffval / sizeof * ( * h ) -> huffval
op	397:25	0:0	10	++
water	397:27	0:0	10	size
op	397:32	0:0	10	<=
op	397:35	0:0	10	sizeof
water	397:42	0:0	10	(
op	397:43	0:0	10	*
water	397:44	0:0	10	h
water	397:45	0:0	10	)
op	397:46	0:0	10	->
water	397:48	0:0	10	huffval
op	397:55	0:0	10	/
op	397:56	0:0	10	sizeof
op	397:63	0:0	10	*
water	397:64	0:0	10	(
op	397:65	0:0	10	*
water	397:66	0:0	10	h
water	397:67	0:0	10	)
op	397:68	0:0	10	->
water	397:70	0:0	10	huffval
stmts	398:20	398:29	9	
op	398:20	0:0	10	*
water	398:21	0:0	10	to
op	398:23	0:0	10	++
op	398:26	0:0	10	=
water	398:28	0:0	10	0
water	398:29	0:0	10	;
water	399:16	0:0	8	}
water	400:31	0:0	6	;
water	401:14	0:0	6	sp
op	401:16	0:0	6	->
water	401:18	0:0	6	jpegtablesmode
op	401:33	0:0	6	|=
water	401:36	0:0	6	JPEGTABLESMODE_HUFF
water	401:55	0:0	6	;
water	402:12	0:0	6	}
water	402:13	0:0	4	;
break	403:10	403:15	4	
label	412:8	412:43	4	case TIFFTAG_WANG_PAGECONTROL :
if	413:10	413:32	4	(v32 == 0)
cond	413:14	413:21	5	v32 == 0
water	413:14	0:0	6	v32
op	413:18	0:0	6	==
water	413:21	0:0	6	0
stmts	413:24	413:32	5	
water	413:24	0:0	6	v32
op	413:28	0:0	6	=
op	413:30	0:0	6	-
water	413:31	0:0	6	1
water	413:32	0:0	6	;
water	414:10	0:0	4	sp
op	414:12	0:0	4	->
water	414:14	0:0	4	is_WANG
op	414:22	0:0	4	=
water	414:24	0:0	4	v32
water	414:27	0:0	4	;
water	415:10	0:0	4	tag
op	415:14	0:0	4	=
water	415:16	0:0	4	TIFFTAG_JPEGPROC
op	415:32	0:0	4	+
water	415:33	0:0	4	FIELD_WANG_PAGECONTROL
op	415:55	0:0	4	-
water	415:56	0:0	4	FIELD_JPEGPROC
water	415:70	0:0	4	;
break	416:10	416:15	4	
label	422:8	422:43	4	case TIFFTAG_JPEGCOLORMODE :
water	423:10	0:0	4	sp
op	423:12	0:0	4	->
water	423:14	0:0	4	jpegcolormode
op	423:28	0:0	4	=
water	423:30	0:0	4	v32
water	423:33	0:0	4	;
water	428:10	0:0	4	v32
op	428:14	0:0	4	=
water	428:16	0:0	4	tif
op	428:19	0:0	4	->
water	428:21	0:0	4	tif_flags
water	428:30	0:0	4	;
water	429:10	0:0	4	tif
op	429:13	0:0	4	->
water	429:15	0:0	4	tif_flags
op	429:25	0:0	4	&=
water	429:28	0:0	4	~TIFF_UPSAMPLED
water	429:43	0:0	4	;
if	430:10	434:47	4	(td -> td_photometric == PHOTOMETRIC_YCBCR && ( td -> td_ycbcrsubsampling [ 0 ] << 3 | td -> td_ycbcrsubsampling [ 1 ] ) != 011 && sp -> jpegcolormode == JPEGCOLORMODE_RGB)
cond	430:17	433:38	5	td -> td_photometric == PHOTOMETRIC_YCBCR && ( td -> td_ycbcrsubsampling [ 0 ] << 3 | td -> td_ycbcrsubsampling [ 1 ] ) != 011 && sp -> jpegcolormode == JPEGCOLORMODE_RGB
water	430:17	0:0	6	td
op	430:19	0:0	6	->
water	430:21	0:0	6	td_photometric
op	430:36	0:0	6	==
water	430:39	0:0	6	PHOTOMETRIC_YCBCR
op	431:14	0:0	6	&&
water	431:20	0:0	6	(
water	431:21	0:0	6	td
op	431:23	0:0	6	->
water	431:25	0:0	6	td_ycbcrsubsampling
op	431:44	0:0	6	[
water	431:45	0:0	6	0
op	431:46	0:0	6	]
op	431:47	0:0	6	<<
water	431:49	0:0	6	3
op	431:51	0:0	6	|
water	431:53	0:0	6	td
op	431:55	0:0	6	->
water	431:57	0:0	6	td_ycbcrsubsampling
op	431:76	0:0	6	[
water	431:77	0:0	6	1
op	431:78	0:0	6	]
water	431:79	0:0	6	)
op	432:17	0:0	6	!=
water	432:20	0:0	6	011
op	433:14	0:0	6	&&
water	433:17	0:0	6	sp
op	433:19	0:0	6	->
water	433:21	0:0	6	jpegcolormode
op	433:35	0:0	6	==
water	433:38	0:0	6	JPEGCOLORMODE_RGB
stmts	434:15	434:47	5	
water	434:15	0:0	6	tif
op	434:18	0:0	6	->
water	434:20	0:0	6	tif_flags
op	434:30	0:0	6	|=
water	434:33	0:0	6	TIFF_UPSAMPLED
water	434:47	0:0	6	;
if	438:10	442:12	4	(( tif -> tif_flags ^ v32 ) & TIFF_UPSAMPLED)
cond	438:14	438:39	5	( tif -> tif_flags ^ v32 ) & TIFF_UPSAMPLED
water	438:14	0:0	6	(
water	438:15	0:0	6	tif
op	438:18	0:0	6	->
water	438:20	0:0	6	tif_flags
op	438:30	0:0	6	^
water	438:32	0:0	6	v32
water	438:35	0:0	6	)
op	438:37	0:0	6	&
water	438:39	0:0	6	TIFF_UPSAMPLED
stmts	439:12	442:12	5	
water	439:12	0:0	6	{
water	440:14	0:0	6	tif
op	440:17	0:0	6	->
water	440:19	0:0	6	tif_tilesize
op	440:32	0:0	6	=
call	440:34	440:50	6	TIFFTileSize
arg	440:47	440:50	7	tif
water	440:47	0:0	8	tif
water	440:51	0:0	6	;
water	441:14	0:0	6	tif
op	441:17	0:0	6	->
water	441:19	0:0	6	tif_flags
op	441:29	0:0	6	|=
water	441:32	0:0	6	TIFF_DIRTYDIRECT
water	441:48	0:0	6	;
water	442:12	0:0	6	}
water	442:13	0:0	4	;
return	443:10	443:18	4	1
water	443:17	0:0	5	1
water	444:6	0:0	4	}
water	444:7	0:0	2	;
call	445:4	445:59	2	TIFFSetFieldBit
arg	445:20	445:23	3	tif
water	445:20	0:0	4	tif
arg	445:24	445:59	3	tag-TIFFTAG_JPEGPROC+FIELD_JPEGPROC
water	445:24	0:0	4	tag
op	445:27	0:0	4	-
water	445:28	0:0	4	TIFFTAG_JPEGPROC
op	445:44	0:0	4	+
water	445:45	0:0	4	FIELD_JPEGPROC
water	445:60	0:0	2	;
return	446:4	446:12	2	1
water	446:11	0:0	3	1

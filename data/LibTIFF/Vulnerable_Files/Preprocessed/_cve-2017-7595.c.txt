func	2:0	157:0	0	static int	JPEGSetupEncode
params	3:15	0:0	1	
param	3:16	3:25	2	TIFF *	tif
stmnts	0:0	156:11	1	
decl	5:1	5:28	2	JPEGState	*sp
op	5:15	0:0	2	=
call	5:17	5:27	3	JState
arg	5:24	5:27	4	tif
water	5:24	0:0	5	tif
decl	6:1	6:34	2	TIFFDirectory	*td
op	6:19	0:0	2	=
op	6:21	0:0	2	&
water	6:22	0:0	2	tif
op	6:25	0:0	2	->
water	6:27	0:0	2	tif_dir
water	7:1	0:0	2	static
water	7:8	0:0	2	const
water	7:14	0:0	2	char
water	7:19	0:0	2	module
op	7:25	0:0	2	[
op	7:26	0:0	2	]
op	7:28	0:0	2	=
water	7:30	0:0	2	"JPEGSetupEncode"
water	7:47	0:0	2	;
if	10:8	11:64	2	(tif -> tif_dir . td_bitspersample == 12)
cond	10:12	10:45	3	tif -> tif_dir . td_bitspersample == 12
water	10:12	0:0	4	tif
op	10:15	0:0	4	->
water	10:17	0:0	4	tif_dir
op	10:24	0:0	4	.
water	10:25	0:0	4	td_bitspersample
op	10:42	0:0	4	==
water	10:45	0:0	4	12
stmts	11:12	11:64	3	
return	11:12	11:64	4	TIFFReInitJPEG_12(tif,COMPRESSION_JPEG,1)
call	11:19	11:63	5	TIFFReInitJPEG_12
arg	11:38	11:41	6	tif
water	11:38	0:0	7	tif
arg	11:43	11:59	6	COMPRESSION_JPEG
water	11:43	0:0	7	COMPRESSION_JPEG
arg	11:61	11:63	6	1
water	11:61	0:0	7	1
call	14:8	14:42	2	JPEGInitializeLibJPEG
arg	14:31	14:34	3	tif
water	14:31	0:0	4	tif
arg	14:36	14:42	3	FALSE
water	14:36	0:0	4	FALSE
water	14:43	0:0	2	;
call	16:1	16:18	2	assert
arg	16:8	16:18	3	sp!=NULL
water	16:8	0:0	4	sp
op	16:11	0:0	4	!=
water	16:14	0:0	4	NULL
water	16:19	0:0	2	;
call	17:1	17:39	2	assert
arg	17:8	17:39	3	!sp->cinfo.comm.is_decompressor
op	17:8	0:0	4	!
water	17:9	0:0	4	sp
op	17:11	0:0	4	->
water	17:13	0:0	4	cinfo
op	17:18	0:0	4	.
water	17:19	0:0	4	comm
op	17:23	0:0	4	.
water	17:24	0:0	4	is_decompressor
water	17:40	0:0	2	;
water	19:1	0:0	2	sp
op	19:3	0:0	2	->
water	19:5	0:0	2	photometric
op	19:17	0:0	2	=
water	19:19	0:0	2	td
op	19:21	0:0	2	->
water	19:23	0:0	2	td_photometric
water	19:37	0:0	2	;
if	26:1	44:1	2	(td -> td_planarconfig == PLANARCONFIG_CONTIG)
cond	26:5	26:28	3	td -> td_planarconfig == PLANARCONFIG_CONTIG
water	26:5	0:0	4	td
op	26:7	0:0	4	->
water	26:9	0:0	4	td_planarconfig
op	26:25	0:0	4	==
water	26:28	0:0	4	PLANARCONFIG_CONTIG
stmts	26:49	44:1	3	
water	26:49	0:0	4	{
water	27:2	0:0	4	sp
op	27:4	0:0	4	->
water	27:6	0:0	4	cinfo
op	27:11	0:0	4	.
water	27:12	0:0	4	c
op	27:13	0:0	4	.
water	27:14	0:0	4	input_components
op	27:31	0:0	4	=
water	27:33	0:0	4	td
op	27:35	0:0	4	->
water	27:37	0:0	4	td_samplesperpixel
water	27:55	0:0	4	;
if	28:2	34:2	4	(sp -> photometric == PHOTOMETRIC_YCBCR)
cond	28:6	28:25	5	sp -> photometric == PHOTOMETRIC_YCBCR
water	28:6	0:0	6	sp
op	28:8	0:0	6	->
water	28:10	0:0	6	photometric
op	28:22	0:0	6	==
water	28:25	0:0	6	PHOTOMETRIC_YCBCR
stmts	28:44	34:2	5	
water	28:44	0:0	6	{
if	29:3	31:3	6	(sp -> jpegcolormode == JPEGCOLORMODE_RGB)
cond	29:7	29:28	7	sp -> jpegcolormode == JPEGCOLORMODE_RGB
water	29:7	0:0	8	sp
op	29:9	0:0	8	->
water	29:11	0:0	8	jpegcolormode
op	29:25	0:0	8	==
water	29:28	0:0	8	JPEGCOLORMODE_RGB
stmts	29:47	31:3	7	
water	29:47	0:0	8	{
water	30:4	0:0	8	sp
op	30:6	0:0	8	->
water	30:8	0:0	8	cinfo
op	30:13	0:0	8	.
water	30:14	0:0	8	c
op	30:15	0:0	8	.
water	30:16	0:0	8	in_color_space
op	30:31	0:0	8	=
water	30:33	0:0	8	JCS_RGB
water	30:40	0:0	8	;
water	31:3	0:0	8	}
else	31:5	33:3	6
stmts	31:10	33:3	7	
water	31:10	0:0	8	{
water	32:4	0:0	8	sp
op	32:6	0:0	8	->
water	32:8	0:0	8	cinfo
op	32:13	0:0	8	.
water	32:14	0:0	8	c
op	32:15	0:0	8	.
water	32:16	0:0	8	in_color_space
op	32:31	0:0	8	=
water	32:33	0:0	8	JCS_YCbCr
water	32:42	0:0	8	;
water	33:3	0:0	8	}
water	34:2	0:0	6	}
else	34:4	43:2	4
stmts	34:9	43:2	5	
water	34:9	0:0	6	{
if	35:3	36:46	6	(( td -> td_photometric == PHOTOMETRIC_MINISWHITE || td -> td_photometric == PHOTOMETRIC_MINISBLACK ) && td -> td_samplesperpixel == 1)
cond	35:7	35:131	7	( td -> td_photometric == PHOTOMETRIC_MINISWHITE || td -> td_photometric == PHOTOMETRIC_MINISBLACK ) && td -> td_samplesperpixel == 1
water	35:7	0:0	8	(
water	35:8	0:0	8	td
op	35:10	0:0	8	->
water	35:12	0:0	8	td_photometric
op	35:27	0:0	8	==
water	35:30	0:0	8	PHOTOMETRIC_MINISWHITE
op	35:53	0:0	8	||
water	35:56	0:0	8	td
op	35:58	0:0	8	->
water	35:60	0:0	8	td_photometric
op	35:75	0:0	8	==
water	35:78	0:0	8	PHOTOMETRIC_MINISBLACK
water	35:100	0:0	8	)
op	35:102	0:0	8	&&
water	35:105	0:0	8	td
op	35:107	0:0	8	->
water	35:109	0:0	8	td_samplesperpixel
op	35:128	0:0	8	==
water	35:131	0:0	8	1
stmts	36:4	36:46	7	
water	36:4	0:0	8	sp
op	36:6	0:0	8	->
water	36:8	0:0	8	cinfo
op	36:13	0:0	8	.
water	36:14	0:0	8	c
op	36:15	0:0	8	.
water	36:16	0:0	8	in_color_space
op	36:31	0:0	8	=
water	36:33	0:0	8	JCS_GRAYSCALE
water	36:46	0:0	8	;
else	37:3	38:40	6
stmts	37:8	38:40	7	
if	37:8	38:40	8	(td -> td_photometric == PHOTOMETRIC_RGB && td -> td_samplesperpixel == 3)
cond	37:12	37:79	9	td -> td_photometric == PHOTOMETRIC_RGB && td -> td_samplesperpixel == 3
water	37:12	0:0	10	td
op	37:14	0:0	10	->
water	37:16	0:0	10	td_photometric
op	37:31	0:0	10	==
water	37:34	0:0	10	PHOTOMETRIC_RGB
op	37:50	0:0	10	&&
water	37:53	0:0	10	td
op	37:55	0:0	10	->
water	37:57	0:0	10	td_samplesperpixel
op	37:76	0:0	10	==
water	37:79	0:0	10	3
stmts	38:4	38:40	9	
water	38:4	0:0	10	sp
op	38:6	0:0	10	->
water	38:8	0:0	10	cinfo
op	38:13	0:0	10	.
water	38:14	0:0	10	c
op	38:15	0:0	10	.
water	38:16	0:0	10	in_color_space
op	38:31	0:0	10	=
water	38:33	0:0	10	JCS_RGB
water	38:40	0:0	10	;
else	39:3	40:41	6
stmts	39:8	40:41	7	
if	39:8	40:41	8	(td -> td_photometric == PHOTOMETRIC_SEPARATED && td -> td_samplesperpixel == 4)
cond	39:12	39:85	9	td -> td_photometric == PHOTOMETRIC_SEPARATED && td -> td_samplesperpixel == 4
water	39:12	0:0	10	td
op	39:14	0:0	10	->
water	39:16	0:0	10	td_photometric
op	39:31	0:0	10	==
water	39:34	0:0	10	PHOTOMETRIC_SEPARATED
op	39:56	0:0	10	&&
water	39:59	0:0	10	td
op	39:61	0:0	10	->
water	39:63	0:0	10	td_samplesperpixel
op	39:82	0:0	10	==
water	39:85	0:0	10	4
stmts	40:4	40:41	9	
water	40:4	0:0	10	sp
op	40:6	0:0	10	->
water	40:8	0:0	10	cinfo
op	40:13	0:0	10	.
water	40:14	0:0	10	c
op	40:15	0:0	10	.
water	40:16	0:0	10	in_color_space
op	40:31	0:0	10	=
water	40:33	0:0	10	JCS_CMYK
water	40:41	0:0	10	;
else	41:3	42:44	6
stmts	42:4	42:44	7	
water	42:4	0:0	8	sp
op	42:6	0:0	8	->
water	42:8	0:0	8	cinfo
op	42:13	0:0	8	.
water	42:14	0:0	8	c
op	42:15	0:0	8	.
water	42:16	0:0	8	in_color_space
op	42:31	0:0	8	=
water	42:33	0:0	8	JCS_UNKNOWN
water	42:44	0:0	8	;
water	43:2	0:0	6	}
water	44:1	0:0	4	}
else	44:3	47:1	2
stmts	44:8	47:1	3	
water	44:8	0:0	4	{
water	45:2	0:0	4	sp
op	45:4	0:0	4	->
water	45:6	0:0	4	cinfo
op	45:11	0:0	4	.
water	45:12	0:0	4	c
op	45:13	0:0	4	.
water	45:14	0:0	4	input_components
op	45:31	0:0	4	=
water	45:33	0:0	4	1
water	45:34	0:0	4	;
water	46:2	0:0	4	sp
op	46:4	0:0	4	->
water	46:6	0:0	4	cinfo
op	46:11	0:0	4	.
water	46:12	0:0	4	c
op	46:13	0:0	4	.
water	46:14	0:0	4	in_color_space
op	46:29	0:0	4	=
water	46:31	0:0	4	JCS_UNKNOWN
water	46:42	0:0	4	;
water	47:1	0:0	4	}
if	48:1	49:12	2	(!TIFFjpeg_set_defaults (sp ))
cond	48:5	48:30	3	!TIFFjpeg_set_defaults (sp )
op	48:5	0:0	4	!
call	48:6	48:30	4	TIFFjpeg_set_defaults
arg	48:28	48:30	5	sp
water	48:28	0:0	6	sp
stmts	49:2	49:12	3	
return	49:2	49:12	4	(0)
water	49:9	0:0	5	(
water	49:10	0:0	5	0
water	49:11	0:0	5	)
switch	51:1	88:1	2	(sp -> photometric)
cond	51:9	51:13	3	sp -> photometric
water	51:9	0:0	4	sp
op	51:11	0:0	4	->
water	51:13	0:0	4	photometric
stmts	51:26	88:1	3	
water	51:26	0:0	4	{
label	52:1	52:23	4	case PHOTOMETRIC_YCBCR :
water	53:2	0:0	4	sp
op	53:4	0:0	4	->
water	53:6	0:0	4	h_sampling
op	53:17	0:0	4	=
water	53:19	0:0	4	td
op	53:21	0:0	4	->
water	53:23	0:0	4	td_ycbcrsubsampling
op	53:42	0:0	4	[
water	53:43	0:0	4	0
op	53:44	0:0	4	]
water	53:45	0:0	4	;
water	54:2	0:0	4	sp
op	54:4	0:0	4	->
water	54:6	0:0	4	v_sampling
op	54:17	0:0	4	=
water	54:19	0:0	4	td
op	54:21	0:0	4	->
water	54:23	0:0	4	td_ycbcrsubsampling
op	54:42	0:0	4	[
water	54:43	0:0	4	1
op	54:44	0:0	4	]
water	54:45	0:0	4	;
water	60:2	0:0	4	{
decl	61:3	61:13	4	float	*ref
if	62:3	74:3	4	(!TIFFGetField (tif ,TIFFTAG_REFERENCEBLACKWHITE ,& ref ))
cond	62:7	63:11	5	!TIFFGetField (tif ,TIFFTAG_REFERENCEBLACKWHITE ,& ref )
op	62:7	0:0	6	!
call	62:8	63:11	6	TIFFGetField
arg	62:21	62:24	7	tif
water	62:21	0:0	8	tif
arg	62:26	62:53	7	TIFFTAG_REFERENCEBLACKWHITE
water	62:26	0:0	8	TIFFTAG_REFERENCEBLACKWHITE
arg	63:7	63:11	7	&ref
op	63:7	0:0	8	&
water	63:8	0:0	8	ref
stmts	63:14	74:3	5	
water	63:14	0:0	6	{
decl	64:4	64:18	6	float	refbw[6]
decl	65:4	65:41	6	long	top
op	65:13	0:0	6	=
water	65:15	0:0	6	1
water	65:16	0:0	6	L
op	65:18	0:0	6	<<
water	65:21	0:0	6	td
op	65:23	0:0	6	->
water	65:25	0:0	6	td_bitspersample
water	66:4	0:0	6	refbw
op	66:9	0:0	6	[
water	66:10	0:0	6	0
op	66:11	0:0	6	]
op	66:13	0:0	6	=
water	66:15	0:0	6	0
water	66:16	0:0	6	;
water	67:4	0:0	6	refbw
op	67:9	0:0	6	[
water	67:10	0:0	6	1
op	67:11	0:0	6	]
op	67:13	0:0	6	=
call	67:15	67:29	6	(float)
arg	67:23	67:29	7	top-1L
water	67:23	0:0	8	top
op	67:26	0:0	8	-
water	67:27	0:0	8	1
water	67:28	0:0	8	L
water	67:30	0:0	6	;
water	68:4	0:0	6	refbw
op	68:9	0:0	6	[
water	68:10	0:0	6	2
op	68:11	0:0	6	]
op	68:13	0:0	6	=
call	68:15	68:29	6	(float)
arg	68:23	68:29	7	top>>1
water	68:23	0:0	8	top
op	68:26	0:0	8	>>
water	68:28	0:0	8	1
water	68:30	0:0	6	;
water	69:4	0:0	6	refbw
op	69:9	0:0	6	[
water	69:10	0:0	6	3
op	69:11	0:0	6	]
op	69:13	0:0	6	=
water	69:15	0:0	6	refbw
op	69:20	0:0	6	[
water	69:21	0:0	6	1
op	69:22	0:0	6	]
water	69:23	0:0	6	;
water	70:4	0:0	6	refbw
op	70:9	0:0	6	[
water	70:10	0:0	6	4
op	70:11	0:0	6	]
op	70:13	0:0	6	=
water	70:15	0:0	6	refbw
op	70:20	0:0	6	[
water	70:21	0:0	6	2
op	70:22	0:0	6	]
water	70:23	0:0	6	;
water	71:4	0:0	6	refbw
op	71:9	0:0	6	[
water	71:10	0:0	6	5
op	71:11	0:0	6	]
op	71:13	0:0	6	=
water	71:15	0:0	6	refbw
op	71:20	0:0	6	[
water	71:21	0:0	6	1
op	71:22	0:0	6	]
water	71:23	0:0	6	;
call	72:4	73:15	6	TIFFSetField
arg	72:17	72:20	7	tif
water	72:17	0:0	8	tif
arg	72:22	72:49	7	TIFFTAG_REFERENCEBLACKWHITE
water	72:22	0:0	8	TIFFTAG_REFERENCEBLACKWHITE
arg	73:10	73:15	7	refbw
water	73:10	0:0	8	refbw
water	73:16	0:0	6	;
water	74:3	0:0	6	}
water	75:2	0:0	4	}
break	76:2	76:7	4	
label	77:1	77:25	4	case PHOTOMETRIC_PALETTE :
label	78:1	78:22	4	case PHOTOMETRIC_MASK :
call	79:2	81:26	4	TIFFErrorExt
arg	79:15	79:34	5	tif->tif_clientdata
water	79:15	0:0	6	tif
op	79:18	0:0	6	->
water	79:20	0:0	6	tif_clientdata
arg	79:36	79:42	5	module
water	79:36	0:0	6	module
arg	80:5	80:56	5	"PhotometricInterpretation %d not allowed for JPEG"
water	80:5	0:0	6	"PhotometricInterpretation %d not allowed for JPEG"
arg	81:5	81:26	5	(int)sp->photometric
water	81:5	0:0	6	(
water	81:6	0:0	6	int
water	81:9	0:0	6	)
water	81:11	0:0	6	sp
op	81:13	0:0	6	->
water	81:15	0:0	6	photometric
water	81:27	0:0	4	;
return	82:2	82:12	4	(0)
water	82:9	0:0	5	(
water	82:10	0:0	5	0
water	82:11	0:0	5	)
label	83:1	83:8	4	default :
water	85:2	0:0	4	sp
op	85:4	0:0	4	->
water	85:6	0:0	4	h_sampling
op	85:17	0:0	4	=
water	85:19	0:0	4	1
water	85:20	0:0	4	;
water	86:2	0:0	4	sp
op	86:4	0:0	4	->
water	86:6	0:0	4	v_sampling
op	86:17	0:0	4	=
water	86:19	0:0	4	1
water	86:20	0:0	4	;
break	87:2	87:7	4	
water	88:1	0:0	4	}
if	99:1	107:1	2	(td -> td_bitspersample != 8 && td -> td_bitspersample != 12)
cond	99:5	99:58	3	td -> td_bitspersample != 8 && td -> td_bitspersample != 12
water	99:5	0:0	4	td
op	99:7	0:0	4	->
water	99:9	0:0	4	td_bitspersample
op	99:26	0:0	4	!=
water	99:29	0:0	4	8
op	99:31	0:0	4	&&
water	99:34	0:0	4	td
op	99:36	0:0	4	->
water	99:38	0:0	4	td_bitspersample
op	99:55	0:0	4	!=
water	99:58	0:0	4	12
stmts	101:1	107:1	3	
if	101:1	107:1	4	(td -> td_bitspersample != BITS_IN_JSAMPLE)
cond	101:5	101:29	5	td -> td_bitspersample != BITS_IN_JSAMPLE
water	101:5	0:0	6	td
op	101:7	0:0	6	->
water	101:9	0:0	6	td_bitspersample
op	101:26	0:0	6	!=
water	101:29	0:0	6	BITS_IN_JSAMPLE
stmts	103:1	107:1	5	
water	103:1	0:0	6	{
call	104:2	105:31	6	TIFFErrorExt
arg	104:15	104:34	7	tif->tif_clientdata
water	104:15	0:0	8	tif
op	104:18	0:0	8	->
water	104:20	0:0	8	tif_clientdata
arg	104:36	104:42	7	module
water	104:36	0:0	8	module
arg	104:44	104:83	7	"BitsPerSample %d not allowed for JPEG"
water	104:44	0:0	8	"BitsPerSample %d not allowed for JPEG"
arg	105:5	105:31	7	(int)td->td_bitspersample
water	105:5	0:0	8	(
water	105:6	0:0	8	int
water	105:9	0:0	8	)
water	105:11	0:0	8	td
op	105:13	0:0	8	->
water	105:15	0:0	8	td_bitspersample
water	105:32	0:0	6	;
return	106:2	106:12	6	(0)
water	106:9	0:0	7	(
water	106:10	0:0	7	0
water	106:11	0:0	7	)
water	107:1	0:0	6	}
water	108:1	0:0	2	sp
op	108:3	0:0	2	->
water	108:5	0:0	2	cinfo
op	108:10	0:0	2	.
water	108:11	0:0	2	c
op	108:12	0:0	2	.
water	108:13	0:0	2	data_precision
op	108:28	0:0	2	=
water	108:30	0:0	2	td
op	108:32	0:0	2	->
water	108:34	0:0	2	td_bitspersample
water	108:50	0:0	2	;
water	110:8	0:0	2	sp
op	110:10	0:0	2	->
water	110:12	0:0	2	cinfo
op	110:17	0:0	2	.
water	110:18	0:0	2	c
op	110:19	0:0	2	.
water	110:20	0:0	2	bits_in_jsample
op	110:36	0:0	2	=
water	110:38	0:0	2	td
op	110:40	0:0	2	->
water	110:42	0:0	2	td_bitspersample
water	110:58	0:0	2	;
if	112:1	125:1	2	(isTiled (tif ))
cond	112:5	112:16	3	isTiled (tif )
call	112:5	112:16	4	isTiled
arg	112:13	112:16	5	tif
water	112:13	0:0	6	tif
stmts	112:19	125:1	3	
water	112:19	0:0	4	{
if	113:2	118:2	4	(( td -> td_tilelength % ( sp -> v_sampling * DCTSIZE ) ) != 0)
cond	113:6	113:58	5	( td -> td_tilelength % ( sp -> v_sampling * DCTSIZE ) ) != 0
water	113:6	0:0	6	(
water	113:7	0:0	6	td
op	113:9	0:0	6	->
water	113:11	0:0	6	td_tilelength
op	113:25	0:0	6	%
water	113:27	0:0	6	(
water	113:28	0:0	6	sp
op	113:30	0:0	6	->
water	113:32	0:0	6	v_sampling
op	113:43	0:0	6	*
water	113:45	0:0	6	DCTSIZE
water	113:52	0:0	6	)
water	113:53	0:0	6	)
op	113:55	0:0	6	!=
water	113:58	0:0	6	0
stmts	113:61	118:2	5	
water	113:61	0:0	6	{
call	114:3	116:30	6	TIFFErrorExt
arg	114:16	114:35	7	tif->tif_clientdata
water	114:16	0:0	8	tif
op	114:19	0:0	8	->
water	114:21	0:0	8	tif_clientdata
arg	114:37	114:43	7	module
water	114:37	0:0	8	module
arg	115:6	115:47	7	"JPEG tile height must be multiple of %d"
water	115:6	0:0	8	"JPEG tile height must be multiple of %d"
arg	116:6	116:30	7	sp->v_sampling*DCTSIZE
water	116:6	0:0	8	sp
op	116:8	0:0	8	->
water	116:10	0:0	8	v_sampling
op	116:21	0:0	8	*
water	116:23	0:0	8	DCTSIZE
water	116:31	0:0	6	;
return	117:3	117:13	6	(0)
water	117:10	0:0	7	(
water	117:11	0:0	7	0
water	117:12	0:0	7	)
water	118:2	0:0	6	}
if	119:2	124:2	4	(( td -> td_tilewidth % ( sp -> h_sampling * DCTSIZE ) ) != 0)
cond	119:6	119:57	5	( td -> td_tilewidth % ( sp -> h_sampling * DCTSIZE ) ) != 0
water	119:6	0:0	6	(
water	119:7	0:0	6	td
op	119:9	0:0	6	->
water	119:11	0:0	6	td_tilewidth
op	119:24	0:0	6	%
water	119:26	0:0	6	(
water	119:27	0:0	6	sp
op	119:29	0:0	6	->
water	119:31	0:0	6	h_sampling
op	119:42	0:0	6	*
water	119:44	0:0	6	DCTSIZE
water	119:51	0:0	6	)
water	119:52	0:0	6	)
op	119:54	0:0	6	!=
water	119:57	0:0	6	0
stmts	119:60	124:2	5	
water	119:60	0:0	6	{
call	120:3	122:30	6	TIFFErrorExt
arg	120:16	120:35	7	tif->tif_clientdata
water	120:16	0:0	8	tif
op	120:19	0:0	8	->
water	120:21	0:0	8	tif_clientdata
arg	120:37	120:43	7	module
water	120:37	0:0	8	module
arg	121:6	121:46	7	"JPEG tile width must be multiple of %d"
water	121:6	0:0	8	"JPEG tile width must be multiple of %d"
arg	122:6	122:30	7	sp->h_sampling*DCTSIZE
water	122:6	0:0	8	sp
op	122:8	0:0	8	->
water	122:10	0:0	8	h_sampling
op	122:21	0:0	8	*
water	122:23	0:0	8	DCTSIZE
water	122:31	0:0	6	;
return	123:3	123:13	6	(0)
water	123:10	0:0	7	(
water	123:11	0:0	7	0
water	123:12	0:0	7	)
water	124:2	0:0	6	}
water	125:1	0:0	4	}
else	125:3	133:1	2
stmts	125:8	133:1	3	
water	125:8	0:0	4	{
if	126:2	132:2	4	(td -> td_rowsperstrip < td -> td_imagelength && ( td -> td_rowsperstrip % ( sp -> v_sampling * DCTSIZE ) ) != 0)
cond	126:6	127:60	5	td -> td_rowsperstrip < td -> td_imagelength && ( td -> td_rowsperstrip % ( sp -> v_sampling * DCTSIZE ) ) != 0
water	126:6	0:0	6	td
op	126:8	0:0	6	->
water	126:10	0:0	6	td_rowsperstrip
op	126:26	0:0	6	<
water	126:28	0:0	6	td
op	126:30	0:0	6	->
water	126:32	0:0	6	td_imagelength
op	126:47	0:0	6	&&
water	127:6	0:0	6	(
water	127:7	0:0	6	td
op	127:9	0:0	6	->
water	127:11	0:0	6	td_rowsperstrip
op	127:27	0:0	6	%
water	127:29	0:0	6	(
water	127:30	0:0	6	sp
op	127:32	0:0	6	->
water	127:34	0:0	6	v_sampling
op	127:45	0:0	6	*
water	127:47	0:0	6	DCTSIZE
water	127:54	0:0	6	)
water	127:55	0:0	6	)
op	127:57	0:0	6	!=
water	127:60	0:0	6	0
stmts	127:63	132:2	5	
water	127:63	0:0	6	{
call	128:3	130:30	6	TIFFErrorExt
arg	128:16	128:35	7	tif->tif_clientdata
water	128:16	0:0	8	tif
op	128:19	0:0	8	->
water	128:21	0:0	8	tif_clientdata
arg	128:37	128:43	7	module
water	128:37	0:0	8	module
arg	129:6	129:52	7	"RowsPerStrip must be multiple of %d for JPEG"
water	129:6	0:0	8	"RowsPerStrip must be multiple of %d for JPEG"
arg	130:6	130:30	7	sp->v_sampling*DCTSIZE
water	130:6	0:0	8	sp
op	130:8	0:0	8	->
water	130:10	0:0	8	v_sampling
op	130:21	0:0	8	*
water	130:23	0:0	8	DCTSIZE
water	130:31	0:0	6	;
return	131:3	131:13	6	(0)
water	131:10	0:0	7	(
water	131:11	0:0	7	0
water	131:12	0:0	7	)
water	132:2	0:0	6	}
water	133:1	0:0	4	}
if	136:1	147:1	2	(sp -> jpegtablesmode & ( JPEGTABLESMODE_QUANT | JPEGTABLESMODE_HUFF ))
cond	136:5	136:67	3	sp -> jpegtablesmode & ( JPEGTABLESMODE_QUANT | JPEGTABLESMODE_HUFF )
water	136:5	0:0	4	sp
op	136:7	0:0	4	->
water	136:9	0:0	4	jpegtablesmode
op	136:24	0:0	4	&
water	136:26	0:0	4	(
water	136:27	0:0	4	JPEGTABLESMODE_QUANT
op	136:47	0:0	4	|
water	136:48	0:0	4	JPEGTABLESMODE_HUFF
water	136:67	0:0	4	)
stmts	136:70	147:1	3	
water	136:70	0:0	4	{
if	137:16	146:16	4	(sp -> jpegtables == NULL ||memcmp (sp -> jpegtables ,"\0\0\0\0\0\0\0\0\0" ,8 ) == 0)
cond	137:20	138:72	5	sp -> jpegtables == NULL ||memcmp (sp -> jpegtables ,"\0\0\0\0\0\0\0\0\0" ,8 ) == 0
water	137:20	0:0	6	sp
op	137:22	0:0	6	->
water	137:24	0:0	6	jpegtables
op	137:35	0:0	6	==
water	137:38	0:0	6	NULL
op	138:20	0:0	6	||
call	138:23	138:67	6	memcmp
arg	138:30	138:44	7	sp->jpegtables
water	138:30	0:0	8	sp
op	138:32	0:0	8	->
water	138:34	0:0	8	jpegtables
arg	138:45	138:65	7	"\0\0\0\0\0\0\0\0\0"
water	138:45	0:0	8	"\0\0\0\0\0\0\0\0\0"
arg	138:66	138:67	7	8
water	138:66	0:0	8	8
op	138:69	0:0	6	==
water	138:72	0:0	6	0
stmts	139:16	146:16	5	
water	139:16	0:0	6	{
if	140:24	141:42	6	(!prepare_JPEGTables (tif ))
cond	140:28	140:51	7	!prepare_JPEGTables (tif )
op	140:28	0:0	8	!
call	140:29	140:51	8	prepare_JPEGTables
arg	140:48	140:51	9	tif
water	140:48	0:0	10	tif
stmts	141:32	141:42	7	
return	141:32	141:42	8	(0)
water	141:39	0:0	9	(
water	141:40	0:0	9	0
water	141:41	0:0	9	)
water	144:24	0:0	6	tif
op	144:27	0:0	6	->
water	144:29	0:0	6	tif_flags
op	144:39	0:0	6	|=
water	144:42	0:0	6	TIFF_DIRTYDIRECT
water	144:58	0:0	6	;
call	145:24	145:61	6	TIFFSetFieldBit
arg	145:40	145:43	7	tif
water	145:40	0:0	8	tif
arg	145:45	145:61	7	FIELD_JPEGTABLES
water	145:45	0:0	8	FIELD_JPEGTABLES
water	145:62	0:0	6	;
water	146:16	0:0	6	}
water	147:1	0:0	4	}
else	147:3	151:1	2
stmts	147:8	151:1	3	
water	147:8	0:0	4	{
call	150:2	150:39	4	TIFFClrFieldBit
arg	150:18	150:21	5	tif
water	150:18	0:0	6	tif
arg	150:23	150:39	5	FIELD_JPEGTABLES
water	150:23	0:0	6	FIELD_JPEGTABLES
water	150:40	0:0	4	;
water	151:1	0:0	4	}
call	154:1	154:27	2	TIFFjpeg_data_dest
arg	154:20	154:22	3	sp
water	154:20	0:0	4	sp
arg	154:24	154:27	3	tif
water	154:24	0:0	4	tif
water	154:28	0:0	2	;
return	156:1	156:11	2	(1)
water	156:8	0:0	3	(
water	156:9	0:0	3	1
water	156:10	0:0	3	)

func	2:0	28:0	0	static enum TIFFReadDirEntryErr	TIFFReadDirEntryCheckedRational
params	2:63	0:0	1	
param	2:64	2:73	2	TIFF *	tif
param	2:75	2:97	2	TIFFDirEntry *	direntry
param	2:99	2:112	2	double *	value
stmnts	0:0	27:30	1	
decl	4:1	4:18	2	UInt64Aligned_t	m
call	6:1	6:25	2	assert
arg	6:8	6:25	3	sizeof(double)==8
op	6:8	0:0	4	sizeof
water	6:14	0:0	4	(
water	6:15	0:0	4	double
water	6:21	0:0	4	)
op	6:22	0:0	4	==
water	6:24	0:0	4	8
water	6:26	0:0	2	;
call	7:1	7:25	2	assert
arg	7:8	7:25	3	sizeof(uint64)==8
op	7:8	0:0	4	sizeof
water	7:14	0:0	4	(
water	7:15	0:0	4	uint64
water	7:21	0:0	4	)
op	7:22	0:0	4	==
water	7:24	0:0	4	8
water	7:26	0:0	2	;
call	8:1	8:25	2	assert
arg	8:8	8:25	3	sizeof(uint32)==4
op	8:8	0:0	4	sizeof
water	8:14	0:0	4	(
water	8:15	0:0	4	uint32
water	8:21	0:0	4	)
op	8:22	0:0	4	==
water	8:24	0:0	4	4
water	8:26	0:0	2	;
if	9:1	18:1	2	(! ( tif -> tif_flags & TIFF_BIGTIFF ))
cond	9:5	9:34	3	! ( tif -> tif_flags & TIFF_BIGTIFF )
op	9:5	0:0	4	!
water	9:6	0:0	4	(
water	9:7	0:0	4	tif
op	9:10	0:0	4	->
water	9:12	0:0	4	tif_flags
op	9:21	0:0	4	&
water	9:22	0:0	4	TIFF_BIGTIFF
water	9:34	0:0	4	)
stmts	10:1	18:1	3	
water	10:1	0:0	4	{
decl	11:2	11:30	4	enum TIFFReadDirEntryErr	err
decl	12:2	12:49	4	uint32	offset
op	12:16	0:0	4	=
water	12:18	0:0	4	direntry
op	12:26	0:0	4	->
water	12:28	0:0	4	tdir_offset
op	12:39	0:0	4	.
water	12:40	0:0	4	toff_long
if	13:2	14:24	4	(tif -> tif_flags & TIFF_SWAB)
cond	13:6	13:21	5	tif -> tif_flags & TIFF_SWAB
water	13:6	0:0	6	tif
op	13:9	0:0	6	->
water	13:11	0:0	6	tif_flags
op	13:20	0:0	6	&
water	13:21	0:0	6	TIFF_SWAB
stmts	14:3	14:24	5	
call	14:3	14:23	6	TIFFSwabLong
arg	14:16	14:23	7	&offset
op	14:16	0:0	8	&
water	14:17	0:0	8	offset
water	14:24	0:0	6	;
water	15:2	0:0	4	err
op	15:5	0:0	4	=
call	15:6	15:43	4	TIFFReadDirEntryData
arg	15:27	15:30	5	tif
water	15:27	0:0	6	tif
arg	15:31	15:37	5	offset
water	15:31	0:0	6	offset
arg	15:38	15:39	5	8
water	15:38	0:0	6	8
arg	15:40	15:43	5	m.i
water	15:40	0:0	6	m
op	15:41	0:0	6	.
water	15:42	0:0	6	i
water	15:44	0:0	4	;
if	16:2	17:14	4	(err != TIFFReadDirEntryErrOk)
cond	16:6	16:11	5	err != TIFFReadDirEntryErrOk
water	16:6	0:0	6	err
op	16:9	0:0	6	!=
water	16:11	0:0	6	TIFFReadDirEntryErrOk
stmts	17:3	17:14	5	
return	17:3	17:14	6	(err)
water	17:9	0:0	7	(
water	17:10	0:0	7	err
water	17:13	0:0	7	)
water	18:1	0:0	4	}
else	19:1	20:40	2
stmts	20:2	20:40	3	
water	20:2	0:0	4	m
op	20:3	0:0	4	.
water	20:4	0:0	4	l
op	20:6	0:0	4	=
water	20:8	0:0	4	direntry
op	20:16	0:0	4	->
water	20:18	0:0	4	tdir_offset
op	20:29	0:0	4	.
water	20:30	0:0	4	toff_long8
water	20:40	0:0	4	;
if	21:1	22:28	2	(tif -> tif_flags & TIFF_SWAB)
cond	21:5	21:20	3	tif -> tif_flags & TIFF_SWAB
water	21:5	0:0	4	tif
op	21:8	0:0	4	->
water	21:10	0:0	4	tif_flags
op	21:19	0:0	4	&
water	21:20	0:0	4	TIFF_SWAB
stmts	22:2	22:28	3	
call	22:2	22:27	4	TIFFSwabArrayOfLong
arg	22:22	22:25	5	m.i
water	22:22	0:0	6	m
op	22:23	0:0	6	.
water	22:24	0:0	6	i
arg	22:26	22:27	5	2
water	22:26	0:0	6	2
water	22:28	0:0	4	;
if	23:1	24:12	2	(m . i [ 0 ] == 0)
cond	23:5	23:13	3	m . i [ 0 ] == 0
water	23:5	0:0	4	m
op	23:6	0:0	4	.
water	23:7	0:0	4	i
op	23:8	0:0	4	[
water	23:9	0:0	4	0
op	23:10	0:0	4	]
op	23:11	0:0	4	==
water	23:13	0:0	4	0
stmts	24:2	24:12	3	
op	24:2	0:0	4	*
water	24:3	0:0	4	value
op	24:8	0:0	4	=
water	24:9	0:0	4	0
op	24:10	0:0	4	.
water	24:11	0:0	4	0
water	24:12	0:0	4	;
else	25:1	26:38	2
stmts	26:2	26:38	3	
op	26:2	0:0	4	*
water	26:3	0:0	4	value
op	26:8	0:0	4	=
water	26:9	0:0	4	(
water	26:10	0:0	4	double
water	26:16	0:0	4	)
water	26:17	0:0	4	m
op	26:18	0:0	4	.
water	26:19	0:0	4	i
op	26:20	0:0	4	[
water	26:21	0:0	4	0
op	26:22	0:0	4	]
op	26:23	0:0	4	/
water	26:24	0:0	4	(
water	26:25	0:0	4	double
water	26:31	0:0	4	)
water	26:32	0:0	4	m
op	26:33	0:0	4	.
water	26:34	0:0	4	i
op	26:35	0:0	4	[
water	26:36	0:0	4	1
op	26:37	0:0	4	]
water	26:38	0:0	4	;
return	27:1	27:30	2	(TIFFReadDirEntryErrOk)
water	27:7	0:0	3	(
water	27:8	0:0	3	TIFFReadDirEntryErrOk
water	27:29	0:0	3	)

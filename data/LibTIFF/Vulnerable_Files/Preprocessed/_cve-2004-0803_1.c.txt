func	2:0	85:0	0	static int	NeXTDecode
params	3:10	0:0	1	
param	3:11	3:20	2	TIFF *	tif
param	3:22	3:34	2	tidata_t	buf
param	3:36	3:47	2	tsize_t	occ
param	3:49	3:60	2	tsample_t	s
stmnts	5:1	84:11	1	
water	5:1	0:0	2	register
water	5:10	0:0	2	u_char
op	5:17	0:0	2	*
water	5:18	0:0	2	bp
water	5:20	0:0	2	,
op	5:22	0:0	2	*
water	5:23	0:0	2	op
water	5:25	0:0	2	;
water	6:1	0:0	2	register
water	6:10	0:0	2	tsize_t
water	6:18	0:0	2	cc
water	6:20	0:0	2	;
water	7:1	0:0	2	register
water	7:10	0:0	2	int
water	7:14	0:0	2	n
water	7:15	0:0	2	;
decl	8:1	8:13	2	tidata_t	row
decl	9:1	9:17	2	tsize_t	scanline
water	11:1	0:0	2	(
water	11:2	0:0	2	void
water	11:6	0:0	2	)
water	11:8	0:0	2	s
water	11:9	0:0	2	;
for	17:1	18:14	2	(op = buf , cc = occ ;cc -- > 0;)
forinit	17:6	17:24	3	op = buf , cc = occ ;
water	17:6	0:0	4	op
op	17:9	0:0	4	=
water	17:11	0:0	4	buf
water	17:14	0:0	4	,
water	17:16	0:0	4	cc
op	17:19	0:0	4	=
water	17:21	0:0	4	occ
water	17:24	0:0	4	;
cond	17:26	17:33	3	cc -- > 0
water	17:26	0:0	4	cc
op	17:28	0:0	4	--
op	17:31	0:0	4	>
water	17:33	0:0	4	0
forexpr	0:0	0:0	3	
stmts	18:2	18:14	3	
op	18:2	0:0	4	*
water	18:3	0:0	4	op
op	18:5	0:0	4	++
op	18:8	0:0	4	=
water	18:10	0:0	4	0
water	18:11	0:0	4	xff
water	18:14	0:0	4	;
water	20:1	0:0	2	bp
op	20:4	0:0	2	=
water	20:6	0:0	2	(
water	20:7	0:0	2	u_char
op	20:14	0:0	2	*
water	20:15	0:0	2	)
water	20:16	0:0	2	tif
op	20:19	0:0	2	->
water	20:21	0:0	2	tif_rawcp
water	20:30	0:0	2	;
water	21:1	0:0	2	cc
op	21:4	0:0	2	=
water	21:6	0:0	2	tif
op	21:9	0:0	2	->
water	21:11	0:0	2	tif_rawcc
water	21:20	0:0	2	;
water	22:1	0:0	2	scanline
op	22:10	0:0	2	=
water	22:12	0:0	2	tif
op	22:15	0:0	2	->
water	22:17	0:0	2	tif_scanlinesize
water	22:33	0:0	2	;
for	23:1	77:1	2	(row = buf ;( long ) occ > 0;occ -= scanline , row += scanline)
forinit	23:6	23:15	3	row = buf ;
water	23:6	0:0	4	row
op	23:10	0:0	4	=
water	23:12	0:0	4	buf
water	23:15	0:0	4	;
cond	23:17	23:29	3	( long ) occ > 0
water	23:17	0:0	4	(
water	23:18	0:0	4	long
water	23:22	0:0	4	)
water	23:23	0:0	4	occ
op	23:27	0:0	4	>
water	23:29	0:0	4	0
forexpr	23:32	23:56	3	occ -= scanline , row += scanline
water	23:32	0:0	4	occ
op	23:36	0:0	4	-=
water	23:39	0:0	4	scanline
water	23:47	0:0	4	,
water	23:49	0:0	4	row
op	23:53	0:0	4	+=
water	23:56	0:0	4	scanline
stmts	23:66	77:1	3	
water	23:66	0:0	4	{
water	24:2	0:0	4	n
op	24:4	0:0	4	=
op	24:6	0:0	4	*
water	24:7	0:0	4	bp
op	24:9	0:0	4	++
water	24:11	0:0	4	,
water	24:13	0:0	4	cc
op	24:15	0:0	4	--
water	24:17	0:0	4	;
switch	25:2	76:2	4	(n)
cond	25:10	25:10	5	n
water	25:10	0:0	6	n
stmts	25:13	76:2	5	
water	25:13	0:0	6	{
label	26:2	26:17	6	case LITERALROW :
if	30:3	31:12	6	(cc < scanline)
cond	30:7	30:12	7	cc < scanline
water	30:7	0:0	8	cc
op	30:10	0:0	8	<
water	30:12	0:0	8	scanline
stmts	31:4	31:12	7	
goto	31:4	31:12	8	bad
water	31:9	0:0	9	bad
call	32:3	32:32	6	_TIFFmemcpy
arg	32:15	32:18	7	row
water	32:15	0:0	8	row
arg	32:20	32:22	7	bp
water	32:20	0:0	8	bp
arg	32:24	32:32	7	scanline
water	32:24	0:0	8	scanline
water	32:33	0:0	6	;
water	33:3	0:0	6	bp
op	33:6	0:0	6	+=
water	33:9	0:0	6	scanline
water	33:17	0:0	6	;
water	34:3	0:0	6	cc
op	34:6	0:0	6	-=
water	34:9	0:0	6	scanline
water	34:17	0:0	6	;
break	35:3	35:8	6	
label	36:2	36:18	6	case LITERALSPAN :
water	36:20	0:0	6	{
decl	37:3	37:10	6	int	off
water	42:3	0:0	6	off
op	42:7	0:0	6	=
water	42:9	0:0	6	(
water	42:10	0:0	6	bp
op	42:12	0:0	6	[
water	42:13	0:0	6	0
op	42:14	0:0	6	]
op	42:16	0:0	6	*
water	42:18	0:0	6	256
water	42:21	0:0	6	)
op	42:23	0:0	6	+
water	42:25	0:0	6	bp
op	42:27	0:0	6	[
water	42:28	0:0	6	1
op	42:29	0:0	6	]
water	42:30	0:0	6	;
water	43:3	0:0	6	n
op	43:5	0:0	6	=
water	43:7	0:0	6	(
water	43:8	0:0	6	bp
op	43:10	0:0	6	[
water	43:11	0:0	6	2
op	43:12	0:0	6	]
op	43:14	0:0	6	*
water	43:16	0:0	6	256
water	43:19	0:0	6	)
op	43:21	0:0	6	+
water	43:23	0:0	6	bp
op	43:25	0:0	6	[
water	43:26	0:0	6	3
op	43:27	0:0	6	]
water	43:28	0:0	6	;
if	44:3	45:12	6	(cc < 4 + n)
cond	44:7	44:14	7	cc < 4 + n
water	44:7	0:0	8	cc
op	44:10	0:0	8	<
water	44:12	0:0	8	4
op	44:13	0:0	8	+
water	44:14	0:0	8	n
stmts	45:4	45:12	7	
goto	45:4	45:12	8	bad
water	45:9	0:0	9	bad
call	46:3	46:31	6	_TIFFmemcpy
arg	46:15	46:22	7	row+off
water	46:15	0:0	8	row
op	46:18	0:0	8	+
water	46:19	0:0	8	off
arg	46:24	46:28	7	bp+4
water	46:24	0:0	8	bp
op	46:26	0:0	8	+
water	46:27	0:0	8	4
arg	46:30	46:31	7	n
water	46:30	0:0	8	n
water	46:32	0:0	6	;
water	47:3	0:0	6	bp
op	47:6	0:0	6	+=
water	47:9	0:0	6	4
op	47:10	0:0	6	+
water	47:11	0:0	6	n
water	47:12	0:0	6	;
water	48:3	0:0	6	cc
op	48:6	0:0	6	-=
water	48:9	0:0	6	4
op	48:10	0:0	6	+
water	48:11	0:0	6	n
water	48:12	0:0	6	;
break	49:3	49:8	6	
water	50:2	0:0	6	}
label	51:2	51:9	6	default :
water	51:11	0:0	6	{
water	52:3	0:0	6	register
water	52:12	0:0	6	int
water	52:16	0:0	6	npixels
op	52:24	0:0	6	=
water	52:26	0:0	6	0
water	52:27	0:0	6	,
water	52:29	0:0	6	grey
water	52:33	0:0	6	;
decl	53:3	53:49	6	u_long	imagewidth
op	53:21	0:0	6	=
water	53:23	0:0	6	tif
op	53:26	0:0	6	->
water	53:28	0:0	6	tif_dir
op	53:35	0:0	6	.
water	53:36	0:0	6	td_imagewidth
water	62:3	0:0	6	op
op	62:6	0:0	6	=
water	62:8	0:0	6	row
water	62:11	0:0	6	;
for	63:3	73:3	6	(;;)
forinit	63:8	63:8	7	;
water	63:8	0:0	8	;
cond	0:0	0:0	7	
forexpr	0:0	0:0	7	
stmts	63:12	73:3	7	
water	63:12	0:0	8	{
water	64:4	0:0	8	grey
op	64:9	0:0	8	=
water	64:11	0:0	8	(
water	64:12	0:0	8	n
op	64:13	0:0	8	>>
water	64:15	0:0	8	6
water	64:16	0:0	8	)
op	64:18	0:0	8	&
water	64:20	0:0	8	0
water	64:21	0:0	8	x3
water	64:23	0:0	8	;
water	65:4	0:0	8	n
op	65:6	0:0	8	&=
water	65:9	0:0	8	0
water	65:10	0:0	8	x3f
water	65:13	0:0	8	;
while	66:4	67:23	8	(n -- > 0)
cond	66:11	66:17	9	n -- > 0
water	66:11	0:0	10	n
op	66:12	0:0	10	--
op	66:15	0:0	10	>
water	66:17	0:0	10	0
stmts	67:5	67:23	9	
call	67:5	67:22	10	SETPIXEL
arg	67:14	67:16	11	op
water	67:14	0:0	12	op
arg	67:18	67:22	11	grey
water	67:18	0:0	12	grey
water	67:23	0:0	10	;
if	68:4	69:10	8	(npixels >= ( int ) imagewidth)
cond	68:8	68:25	9	npixels >= ( int ) imagewidth
water	68:8	0:0	10	npixels
op	68:16	0:0	10	>=
water	68:19	0:0	10	(
water	68:20	0:0	10	int
water	68:23	0:0	10	)
water	68:25	0:0	10	imagewidth
stmts	69:5	69:10	9	
break	69:5	69:10	10	
if	70:4	71:13	8	(cc == 0)
cond	70:8	70:14	9	cc == 0
water	70:8	0:0	10	cc
op	70:11	0:0	10	==
water	70:14	0:0	10	0
stmts	71:5	71:13	9	
goto	71:5	71:13	10	bad
water	71:10	0:0	11	bad
water	72:4	0:0	8	n
op	72:6	0:0	8	=
op	72:8	0:0	8	*
water	72:9	0:0	8	bp
op	72:11	0:0	8	++
water	72:13	0:0	8	,
water	72:15	0:0	8	cc
op	72:17	0:0	8	--
water	72:19	0:0	8	;
water	73:3	0:0	8	}
break	74:3	74:8	6	
water	75:2	0:0	6	}
water	76:2	0:0	6	}
water	77:1	0:0	4	}
water	78:1	0:0	2	tif
op	78:4	0:0	2	->
water	78:6	0:0	2	tif_rawcp
op	78:16	0:0	2	=
water	78:18	0:0	2	(
water	78:19	0:0	2	tidata_t
water	78:27	0:0	2	)
water	78:29	0:0	2	bp
water	78:31	0:0	2	;
water	79:1	0:0	2	tif
op	79:4	0:0	2	->
water	79:6	0:0	2	tif_rawcc
op	79:16	0:0	2	=
water	79:18	0:0	2	cc
water	79:20	0:0	2	;
return	80:1	80:11	2	(1)
water	80:8	0:0	3	(
water	80:9	0:0	3	1
water	80:10	0:0	3	)
label	81:0	81:3	2	bad :
call	82:1	83:24	2	TIFFError
arg	82:11	82:24	3	tif->tif_name
water	82:11	0:0	4	tif
op	82:14	0:0	4	->
water	82:16	0:0	4	tif_name
arg	82:26	82:72	3	"NeXTDecode: Not enough data for scanline %ld"
water	82:26	0:0	4	"NeXTDecode: Not enough data for scanline %ld"
arg	83:5	83:24	3	(long)tif->tif_row
water	83:5	0:0	4	(
water	83:6	0:0	4	long
water	83:10	0:0	4	)
water	83:12	0:0	4	tif
op	83:15	0:0	4	->
water	83:17	0:0	4	tif_row
water	83:25	0:0	2	;
return	84:1	84:11	2	(0)
water	84:8	0:0	3	(
water	84:9	0:0	3	0
water	84:10	0:0	3	)

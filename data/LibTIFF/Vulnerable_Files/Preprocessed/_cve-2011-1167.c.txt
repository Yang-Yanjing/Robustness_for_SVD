func	2:0	67:0	0	static int	ThunderDecode
params	3:13	0:0	1	
param	3:14	3:23	2	TIFF *	tif
param	3:25	3:36	2	tidata_t	op
param	3:38	3:55	2	tsize_t	maxpixels
stmnts	5:1	66:11	1	
water	5:1	0:0	2	register
water	5:10	0:0	2	unsigned
water	5:19	0:0	2	char
op	5:24	0:0	2	*
water	5:25	0:0	2	bp
water	5:27	0:0	2	;
water	6:1	0:0	2	register
water	6:10	0:0	2	tsize_t
water	6:18	0:0	2	cc
water	6:20	0:0	2	;
decl	7:1	7:23	2	unsigned int	lastpixel
decl	8:1	8:16	2	tsize_t	npixels
water	10:1	0:0	2	bp
op	10:4	0:0	2	=
water	10:6	0:0	2	(
water	10:7	0:0	2	unsigned
water	10:16	0:0	2	char
op	10:21	0:0	2	*
water	10:22	0:0	2	)
water	10:23	0:0	2	tif
op	10:26	0:0	2	->
water	10:28	0:0	2	tif_rawcp
water	10:37	0:0	2	;
water	11:1	0:0	2	cc
op	11:4	0:0	2	=
water	11:6	0:0	2	tif
op	11:9	0:0	2	->
water	11:11	0:0	2	tif_rawcc
water	11:20	0:0	2	;
water	12:1	0:0	2	lastpixel
op	12:11	0:0	2	=
water	12:13	0:0	2	0
water	12:14	0:0	2	;
water	13:1	0:0	2	npixels
op	13:9	0:0	2	=
water	13:11	0:0	2	0
water	13:12	0:0	2	;
while	14:1	56:1	2	(cc > 0 && npixels < maxpixels)
cond	14:8	14:28	3	cc > 0 && npixels < maxpixels
water	14:8	0:0	4	cc
op	14:11	0:0	4	>
water	14:13	0:0	4	0
op	14:15	0:0	4	&&
water	14:18	0:0	4	npixels
op	14:26	0:0	4	<
water	14:28	0:0	4	maxpixels
stmts	14:39	56:1	3	
water	14:39	0:0	4	{
decl	15:2	15:14	4	int	n
water	15:7	0:0	4	,
decl	15:2	15:14	4	int	delta
water	17:2	0:0	4	n
op	17:4	0:0	4	=
op	17:6	0:0	4	*
water	17:7	0:0	4	bp
op	17:9	0:0	4	++
water	17:11	0:0	4	,
water	17:13	0:0	4	cc
op	17:15	0:0	4	--
water	17:17	0:0	4	;
switch	18:2	55:2	4	(n & THUNDER_CODE)
cond	18:10	18:14	5	n & THUNDER_CODE
water	18:10	0:0	6	n
op	18:12	0:0	6	&
water	18:14	0:0	6	THUNDER_CODE
stmts	18:28	55:2	5	
water	18:28	0:0	6	{
label	19:2	19:18	6	case THUNDER_RUN :
if	24:3	27:3	6	(npixels & 1)
cond	24:7	24:17	7	npixels & 1
water	24:7	0:0	8	npixels
op	24:15	0:0	8	&
water	24:17	0:0	8	1
stmts	24:20	27:3	7	
water	24:20	0:0	8	{
water	25:4	0:0	8	op
op	25:6	0:0	8	[
water	25:7	0:0	8	0
op	25:8	0:0	8	]
op	25:10	0:0	8	|=
water	25:13	0:0	8	lastpixel
water	25:22	0:0	8	;
water	26:4	0:0	8	lastpixel
op	26:14	0:0	8	=
op	26:16	0:0	8	*
water	26:17	0:0	8	op
op	26:19	0:0	8	++
water	26:21	0:0	8	;
water	26:23	0:0	8	npixels
op	26:30	0:0	8	++
water	26:32	0:0	8	;
water	26:34	0:0	8	n
op	26:35	0:0	8	--
water	26:37	0:0	8	;
water	27:3	0:0	8	}
else	27:5	28:31	6
stmts	28:4	28:31	7	
water	28:4	0:0	8	lastpixel
op	28:14	0:0	8	|=
water	28:17	0:0	8	lastpixel
op	28:27	0:0	8	<<
water	28:30	0:0	8	4
water	28:31	0:0	8	;
water	29:3	0:0	6	npixels
op	29:11	0:0	6	+=
water	29:14	0:0	6	n
water	29:15	0:0	6	;
if	30:3	33:3	6	(npixels < maxpixels)
cond	30:7	30:17	7	npixels < maxpixels
water	30:7	0:0	8	npixels
op	30:15	0:0	8	<
water	30:17	0:0	8	maxpixels
stmts	30:28	33:3	7	
water	30:28	0:0	8	{
for	31:4	32:36	8	(;n > 0;n -= 2)
forinit	31:9	31:9	9	;
water	31:9	0:0	10	;
cond	31:11	31:15	9	n > 0
water	31:11	0:0	10	n
op	31:13	0:0	10	>
water	31:15	0:0	10	0
forexpr	31:18	31:23	9	n -= 2
water	31:18	0:0	10	n
op	31:20	0:0	10	-=
water	31:23	0:0	10	2
stmts	32:5	32:36	9	
op	32:5	0:0	10	*
water	32:6	0:0	10	op
op	32:8	0:0	10	++
op	32:11	0:0	10	=
water	32:13	0:0	10	(
water	32:14	0:0	10	tidataval_t
water	32:25	0:0	10	)
water	32:27	0:0	10	lastpixel
water	32:36	0:0	10	;
water	33:3	0:0	8	}
if	34:3	35:17	6	(n == - 1)
cond	34:7	34:13	7	n == - 1
water	34:7	0:0	8	n
op	34:9	0:0	8	==
op	34:12	0:0	8	-
water	34:13	0:0	8	1
stmts	35:4	35:17	7	
op	35:4	0:0	8	*
op	35:5	0:0	8	--
water	35:7	0:0	8	op
op	35:10	0:0	8	&=
water	35:13	0:0	8	0
water	35:14	0:0	8	xf0
water	35:17	0:0	8	;
water	36:3	0:0	6	lastpixel
op	36:13	0:0	6	&=
water	36:16	0:0	6	0
water	36:17	0:0	6	xf
water	36:19	0:0	6	;
break	37:3	37:8	6	
label	38:2	38:25	6	case THUNDER_2BITDELTAS :
if	39:3	40:49	6	(( delta = ( ( n >> 4 ) & 3 ) ) != DELTA2_SKIP)
cond	39:7	39:35	7	( delta = ( ( n >> 4 ) & 3 ) ) != DELTA2_SKIP
water	39:7	0:0	8	(
water	39:8	0:0	8	delta
op	39:14	0:0	8	=
water	39:16	0:0	8	(
water	39:17	0:0	8	(
water	39:18	0:0	8	n
op	39:20	0:0	8	>>
water	39:23	0:0	8	4
water	39:24	0:0	8	)
op	39:26	0:0	8	&
water	39:28	0:0	8	3
water	39:29	0:0	8	)
water	39:30	0:0	8	)
op	39:32	0:0	8	!=
water	39:35	0:0	8	DELTA2_SKIP
stmts	40:4	40:49	7	
call	40:4	40:48	8	SETPIXEL
arg	40:13	40:15	9	op
water	40:13	0:0	10	op
arg	40:17	40:48	9	lastpixel+twobitdeltas[delta]
water	40:17	0:0	10	lastpixel
op	40:27	0:0	10	+
water	40:29	0:0	10	twobitdeltas
op	40:41	0:0	10	[
water	40:42	0:0	10	delta
op	40:47	0:0	10	]
water	40:49	0:0	8	;
if	41:3	42:49	6	(( delta = ( ( n >> 2 ) & 3 ) ) != DELTA2_SKIP)
cond	41:7	41:35	7	( delta = ( ( n >> 2 ) & 3 ) ) != DELTA2_SKIP
water	41:7	0:0	8	(
water	41:8	0:0	8	delta
op	41:14	0:0	8	=
water	41:16	0:0	8	(
water	41:17	0:0	8	(
water	41:18	0:0	8	n
op	41:20	0:0	8	>>
water	41:23	0:0	8	2
water	41:24	0:0	8	)
op	41:26	0:0	8	&
water	41:28	0:0	8	3
water	41:29	0:0	8	)
water	41:30	0:0	8	)
op	41:32	0:0	8	!=
water	41:35	0:0	8	DELTA2_SKIP
stmts	42:4	42:49	7	
call	42:4	42:48	8	SETPIXEL
arg	42:13	42:15	9	op
water	42:13	0:0	10	op
arg	42:17	42:48	9	lastpixel+twobitdeltas[delta]
water	42:17	0:0	10	lastpixel
op	42:27	0:0	10	+
water	42:29	0:0	10	twobitdeltas
op	42:41	0:0	10	[
water	42:42	0:0	10	delta
op	42:47	0:0	10	]
water	42:49	0:0	8	;
if	43:3	44:49	6	(( delta = ( n & 3 ) ) != DELTA2_SKIP)
cond	43:7	43:28	7	( delta = ( n & 3 ) ) != DELTA2_SKIP
water	43:7	0:0	8	(
water	43:8	0:0	8	delta
op	43:14	0:0	8	=
water	43:16	0:0	8	(
water	43:17	0:0	8	n
op	43:19	0:0	8	&
water	43:21	0:0	8	3
water	43:22	0:0	8	)
water	43:23	0:0	8	)
op	43:25	0:0	8	!=
water	43:28	0:0	8	DELTA2_SKIP
stmts	44:4	44:49	7	
call	44:4	44:48	8	SETPIXEL
arg	44:13	44:15	9	op
water	44:13	0:0	10	op
arg	44:17	44:48	9	lastpixel+twobitdeltas[delta]
water	44:17	0:0	10	lastpixel
op	44:27	0:0	10	+
water	44:29	0:0	10	twobitdeltas
op	44:41	0:0	10	[
water	44:42	0:0	10	delta
op	44:47	0:0	10	]
water	44:49	0:0	8	;
break	45:3	45:8	6	
label	46:2	46:25	6	case THUNDER_3BITDELTAS :
if	47:3	48:51	6	(( delta = ( ( n >> 3 ) & 7 ) ) != DELTA3_SKIP)
cond	47:7	47:35	7	( delta = ( ( n >> 3 ) & 7 ) ) != DELTA3_SKIP
water	47:7	0:0	8	(
water	47:8	0:0	8	delta
op	47:14	0:0	8	=
water	47:16	0:0	8	(
water	47:17	0:0	8	(
water	47:18	0:0	8	n
op	47:20	0:0	8	>>
water	47:23	0:0	8	3
water	47:24	0:0	8	)
op	47:26	0:0	8	&
water	47:28	0:0	8	7
water	47:29	0:0	8	)
water	47:30	0:0	8	)
op	47:32	0:0	8	!=
water	47:35	0:0	8	DELTA3_SKIP
stmts	48:4	48:51	7	
call	48:4	48:50	8	SETPIXEL
arg	48:13	48:15	9	op
water	48:13	0:0	10	op
arg	48:17	48:50	9	lastpixel+threebitdeltas[delta]
water	48:17	0:0	10	lastpixel
op	48:27	0:0	10	+
water	48:29	0:0	10	threebitdeltas
op	48:43	0:0	10	[
water	48:44	0:0	10	delta
op	48:49	0:0	10	]
water	48:51	0:0	8	;
if	49:3	50:51	6	(( delta = ( n & 7 ) ) != DELTA3_SKIP)
cond	49:7	49:28	7	( delta = ( n & 7 ) ) != DELTA3_SKIP
water	49:7	0:0	8	(
water	49:8	0:0	8	delta
op	49:14	0:0	8	=
water	49:16	0:0	8	(
water	49:17	0:0	8	n
op	49:19	0:0	8	&
water	49:21	0:0	8	7
water	49:22	0:0	8	)
water	49:23	0:0	8	)
op	49:25	0:0	8	!=
water	49:28	0:0	8	DELTA3_SKIP
stmts	50:4	50:51	7	
call	50:4	50:50	8	SETPIXEL
arg	50:13	50:15	9	op
water	50:13	0:0	10	op
arg	50:17	50:50	9	lastpixel+threebitdeltas[delta]
water	50:17	0:0	10	lastpixel
op	50:27	0:0	10	+
water	50:29	0:0	10	threebitdeltas
op	50:43	0:0	10	[
water	50:44	0:0	10	delta
op	50:49	0:0	10	]
water	50:51	0:0	8	;
break	51:3	51:8	6	
label	52:2	52:18	6	case THUNDER_RAW :
call	53:3	53:17	6	SETPIXEL
arg	53:12	53:14	7	op
water	53:12	0:0	8	op
arg	53:16	53:17	7	n
water	53:16	0:0	8	n
water	53:18	0:0	6	;
break	54:3	54:8	6	
water	55:2	0:0	6	}
water	56:1	0:0	4	}
water	57:1	0:0	2	tif
op	57:4	0:0	2	->
water	57:6	0:0	2	tif_rawcp
op	57:16	0:0	2	=
water	57:18	0:0	2	(
water	57:19	0:0	2	tidata_t
water	57:27	0:0	2	)
water	57:29	0:0	2	bp
water	57:31	0:0	2	;
water	58:1	0:0	2	tif
op	58:4	0:0	2	->
water	58:6	0:0	2	tif_rawcc
op	58:16	0:0	2	=
water	58:18	0:0	2	cc
water	58:20	0:0	2	;
if	59:1	65:1	2	(npixels != maxpixels)
cond	59:5	59:16	3	npixels != maxpixels
water	59:5	0:0	4	npixels
op	59:13	0:0	4	!=
water	59:16	0:0	4	maxpixels
stmts	59:27	65:1	3	
water	59:27	0:0	4	{
call	60:2	63:59	4	TIFFErrorExt
arg	60:15	60:34	5	tif->tif_clientdata
water	60:15	0:0	6	tif
op	60:18	0:0	6	->
water	60:20	0:0	6	tif_clientdata
arg	60:36	60:49	5	tif->tif_name
water	60:36	0:0	6	tif
op	60:39	0:0	6	->
water	60:41	0:0	6	tif_name
arg	61:6	61:59	5	"ThunderDecode: %s data at scanline %ld (%lu != %lu)"
water	61:6	0:0	6	"ThunderDecode: %s data at scanline %ld (%lu != %lu)"
arg	62:6	62:53	5	npixels<maxpixels?"Not enough":"Too much"
water	62:6	0:0	6	npixels
op	62:14	0:0	6	<
water	62:16	0:0	6	maxpixels
water	62:26	0:0	6	?
water	62:28	0:0	6	"Not enough"
water	62:41	0:0	6	:
water	62:43	0:0	6	"Too much"
arg	63:6	63:25	5	(long)tif->tif_row
water	63:6	0:0	6	(
water	63:7	0:0	6	long
water	63:11	0:0	6	)
water	63:13	0:0	6	tif
op	63:16	0:0	6	->
water	63:18	0:0	6	tif_row
arg	63:27	63:41	5	(long)npixels
water	63:27	0:0	6	(
water	63:28	0:0	6	long
water	63:32	0:0	6	)
water	63:34	0:0	6	npixels
arg	63:43	63:59	5	(long)maxpixels
water	63:43	0:0	6	(
water	63:44	0:0	6	long
water	63:48	0:0	6	)
water	63:50	0:0	6	maxpixels
water	63:60	0:0	4	;
return	64:2	64:12	4	(0)
water	64:9	0:0	5	(
water	64:10	0:0	5	0
water	64:11	0:0	5	)
water	65:1	0:0	4	}
return	66:1	66:11	2	(1)
water	66:8	0:0	3	(
water	66:9	0:0	3	1
water	66:10	0:0	3	)

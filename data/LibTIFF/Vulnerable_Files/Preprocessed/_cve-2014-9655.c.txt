func	2:0	94:0	0	static int	NeXTDecode
params	3:10	0:0	1	
param	3:11	3:20	2	TIFF *	tif
param	3:22	3:32	2	uint8 *	buf
param	3:34	3:46	2	tmsize_t	occ
param	3:48	3:56	2	uint16	s
stmnts	5:1	93:11	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	char
water	5:19	0:0	2	module
op	5:25	0:0	2	[
op	5:26	0:0	2	]
op	5:28	0:0	2	=
water	5:30	0:0	2	"NeXTDecode"
water	5:42	0:0	2	;
decl	6:1	6:23	2	unsigned char	*bp
water	6:18	0:0	2	,
decl	6:1	6:23	2	unsigned char	*op
decl	7:1	7:12	2	tmsize_t	cc
decl	8:1	8:11	2	uint8	*row
decl	9:1	9:21	2	tmsize_t	scanline
water	9:18	0:0	2	,
decl	9:1	9:21	2	tmsize_t	n
water	11:1	0:0	2	(
water	11:2	0:0	2	void
water	11:6	0:0	2	)
water	11:8	0:0	2	s
water	11:9	0:0	2	;
for	17:1	18:14	2	(op = ( unsigned char * ) buf , cc = occ ;cc -- > 0;)
forinit	17:6	17:41	3	op = ( unsigned char * ) buf , cc = occ ;
water	17:6	0:0	4	op
op	17:9	0:0	4	=
water	17:11	0:0	4	(
water	17:12	0:0	4	unsigned
water	17:21	0:0	4	char
op	17:25	0:0	4	*
water	17:26	0:0	4	)
water	17:28	0:0	4	buf
water	17:31	0:0	4	,
water	17:33	0:0	4	cc
op	17:36	0:0	4	=
water	17:38	0:0	4	occ
water	17:41	0:0	4	;
cond	17:43	17:50	3	cc -- > 0
water	17:43	0:0	4	cc
op	17:45	0:0	4	--
op	17:48	0:0	4	>
water	17:50	0:0	4	0
forexpr	0:0	0:0	3	
stmts	18:2	18:14	3	
op	18:2	0:0	4	*
water	18:3	0:0	4	op
op	18:5	0:0	4	++
op	18:8	0:0	4	=
water	18:10	0:0	4	0
water	18:11	0:0	4	xff
water	18:14	0:0	4	;
water	20:1	0:0	2	bp
op	20:4	0:0	2	=
water	20:6	0:0	2	(
water	20:7	0:0	2	unsigned
water	20:16	0:0	2	char
op	20:21	0:0	2	*
water	20:22	0:0	2	)
water	20:23	0:0	2	tif
op	20:26	0:0	2	->
water	20:28	0:0	2	tif_rawcp
water	20:37	0:0	2	;
water	21:1	0:0	2	cc
op	21:4	0:0	2	=
water	21:6	0:0	2	tif
op	21:9	0:0	2	->
water	21:11	0:0	2	tif_rawcc
water	21:20	0:0	2	;
water	22:1	0:0	2	scanline
op	22:10	0:0	2	=
water	22:12	0:0	2	tif
op	22:15	0:0	2	->
water	22:17	0:0	2	tif_scanlinesize
water	22:33	0:0	2	;
if	23:1	27:1	2	(occ % scanline)
cond	23:5	23:11	3	occ % scanline
water	23:5	0:0	4	occ
op	23:9	0:0	4	%
water	23:11	0:0	4	scanline
stmts	24:1	27:1	3	
water	24:1	0:0	4	{
call	25:2	25:81	4	TIFFErrorExt
arg	25:15	25:34	5	tif->tif_clientdata
water	25:15	0:0	6	tif
op	25:18	0:0	6	->
water	25:20	0:0	6	tif_clientdata
arg	25:36	25:42	5	module
water	25:36	0:0	6	module
arg	25:44	25:81	5	"Fractional scanlines cannot be read"
water	25:44	0:0	6	"Fractional scanlines cannot be read"
water	25:82	0:0	4	;
return	26:2	26:12	4	(0)
water	26:9	0:0	5	(
water	26:10	0:0	5	0
water	26:11	0:0	5	)
water	27:1	0:0	4	}
for	28:1	86:1	2	(row = buf ;occ > 0;occ -= scanline , row += scanline)
forinit	28:6	28:15	3	row = buf ;
water	28:6	0:0	4	row
op	28:10	0:0	4	=
water	28:12	0:0	4	buf
water	28:15	0:0	4	;
cond	28:17	28:23	3	occ > 0
water	28:17	0:0	4	occ
op	28:21	0:0	4	>
water	28:23	0:0	4	0
forexpr	28:26	28:50	3	occ -= scanline , row += scanline
water	28:26	0:0	4	occ
op	28:30	0:0	4	-=
water	28:33	0:0	4	scanline
water	28:41	0:0	4	,
water	28:43	0:0	4	row
op	28:47	0:0	4	+=
water	28:50	0:0	4	scanline
stmts	28:60	86:1	3	
water	28:60	0:0	4	{
water	29:2	0:0	4	n
op	29:4	0:0	4	=
op	29:6	0:0	4	*
water	29:7	0:0	4	bp
op	29:9	0:0	4	++
water	29:11	0:0	4	,
water	29:13	0:0	4	cc
op	29:15	0:0	4	--
water	29:17	0:0	4	;
switch	30:2	85:2	4	(n)
cond	30:10	30:10	5	n
water	30:10	0:0	6	n
stmts	30:13	85:2	5	
water	30:13	0:0	6	{
label	31:2	31:17	6	case LITERALROW :
if	35:3	36:12	6	(cc < scanline)
cond	35:7	35:12	7	cc < scanline
water	35:7	0:0	8	cc
op	35:10	0:0	8	<
water	35:12	0:0	8	scanline
stmts	36:4	36:12	7	
goto	36:4	36:12	8	bad
water	36:9	0:0	9	bad
call	37:3	37:32	6	_TIFFmemcpy
arg	37:15	37:18	7	row
water	37:15	0:0	8	row
arg	37:20	37:22	7	bp
water	37:20	0:0	8	bp
arg	37:24	37:32	7	scanline
water	37:24	0:0	8	scanline
water	37:33	0:0	6	;
water	38:3	0:0	6	bp
op	38:6	0:0	6	+=
water	38:9	0:0	6	scanline
water	38:17	0:0	6	;
water	39:3	0:0	6	cc
op	39:6	0:0	6	-=
water	39:9	0:0	6	scanline
water	39:17	0:0	6	;
break	40:3	40:8	6	
label	41:2	41:18	6	case LITERALSPAN :
water	41:20	0:0	6	{
decl	42:3	42:15	6	tmsize_t	off
water	47:3	0:0	6	off
op	47:7	0:0	6	=
water	47:9	0:0	6	(
water	47:10	0:0	6	bp
op	47:12	0:0	6	[
water	47:13	0:0	6	0
op	47:14	0:0	6	]
op	47:16	0:0	6	*
water	47:18	0:0	6	256
water	47:21	0:0	6	)
op	47:23	0:0	6	+
water	47:25	0:0	6	bp
op	47:27	0:0	6	[
water	47:28	0:0	6	1
op	47:29	0:0	6	]
water	47:30	0:0	6	;
water	48:3	0:0	6	n
op	48:5	0:0	6	=
water	48:7	0:0	6	(
water	48:8	0:0	6	bp
op	48:10	0:0	6	[
water	48:11	0:0	6	2
op	48:12	0:0	6	]
op	48:14	0:0	6	*
water	48:16	0:0	6	256
water	48:19	0:0	6	)
op	48:21	0:0	6	+
water	48:23	0:0	6	bp
op	48:25	0:0	6	[
water	48:26	0:0	6	3
op	48:27	0:0	6	]
water	48:28	0:0	6	;
if	49:3	50:12	6	(cc < 4 + n || off + n > scanline)
cond	49:7	49:27	7	cc < 4 + n || off + n > scanline
water	49:7	0:0	8	cc
op	49:10	0:0	8	<
water	49:12	0:0	8	4
op	49:13	0:0	8	+
water	49:14	0:0	8	n
op	49:16	0:0	8	||
water	49:19	0:0	8	off
op	49:22	0:0	8	+
water	49:23	0:0	8	n
op	49:25	0:0	8	>
water	49:27	0:0	8	scanline
stmts	50:4	50:12	7	
goto	50:4	50:12	8	bad
water	50:9	0:0	9	bad
call	51:3	51:31	6	_TIFFmemcpy
arg	51:15	51:22	7	row+off
water	51:15	0:0	8	row
op	51:18	0:0	8	+
water	51:19	0:0	8	off
arg	51:24	51:28	7	bp+4
water	51:24	0:0	8	bp
op	51:26	0:0	8	+
water	51:27	0:0	8	4
arg	51:30	51:31	7	n
water	51:30	0:0	8	n
water	51:32	0:0	6	;
water	52:3	0:0	6	bp
op	52:6	0:0	6	+=
water	52:9	0:0	6	4
op	52:10	0:0	6	+
water	52:11	0:0	6	n
water	52:12	0:0	6	;
water	53:3	0:0	6	cc
op	53:6	0:0	6	-=
water	53:9	0:0	6	4
op	53:10	0:0	6	+
water	53:11	0:0	6	n
water	53:12	0:0	6	;
break	54:3	54:8	6	
water	55:2	0:0	6	}
label	56:2	56:9	6	default :
water	56:11	0:0	6	{
decl	57:3	57:27	6	uint32	npixels
op	57:18	0:0	6	=
water	57:20	0:0	6	0
water	57:21	0:0	6	,
decl	57:3	57:27	6	uint32	grey
decl	58:3	58:49	6	uint32	imagewidth
op	58:21	0:0	6	=
water	58:23	0:0	6	tif
op	58:26	0:0	6	->
water	58:28	0:0	6	tif_dir
op	58:35	0:0	6	.
water	58:36	0:0	6	td_imagewidth
water	66:3	0:0	6	op
op	66:6	0:0	6	=
water	66:8	0:0	6	row
water	66:11	0:0	6	;
for	67:3	82:3	6	(;;)
forinit	67:8	67:8	7	;
water	67:8	0:0	8	;
cond	0:0	0:0	7	
forexpr	0:0	0:0	7	
stmts	67:12	82:3	7	
water	67:12	0:0	8	{
water	68:4	0:0	8	grey
op	68:9	0:0	8	=
call	68:11	68:32	8	(uint32)
arg	68:20	68:32	9	(n>>6)&0x3
water	68:20	0:0	10	(
water	68:21	0:0	10	n
op	68:22	0:0	10	>>
water	68:24	0:0	10	6
water	68:25	0:0	10	)
op	68:27	0:0	10	&
water	68:29	0:0	10	0
water	68:30	0:0	10	x3
water	68:33	0:0	8	;
water	69:4	0:0	8	n
op	69:6	0:0	8	&=
water	69:9	0:0	8	0
water	69:10	0:0	8	x3f
water	69:13	0:0	8	;
while	75:4	76:23	8	(n -- > 0 && npixels < imagewidth)
cond	75:11	75:32	9	n -- > 0 && npixels < imagewidth
water	75:11	0:0	10	n
op	75:12	0:0	10	--
op	75:15	0:0	10	>
water	75:17	0:0	10	0
op	75:19	0:0	10	&&
water	75:22	0:0	10	npixels
op	75:30	0:0	10	<
water	75:32	0:0	10	imagewidth
stmts	76:5	76:23	9	
call	76:5	76:22	10	SETPIXEL
arg	76:14	76:16	11	op
water	76:14	0:0	12	op
arg	76:18	76:22	11	grey
water	76:18	0:0	12	grey
water	76:23	0:0	10	;
if	77:4	78:10	8	(npixels >= imagewidth)
cond	77:8	77:19	9	npixels >= imagewidth
water	77:8	0:0	10	npixels
op	77:16	0:0	10	>=
water	77:19	0:0	10	imagewidth
stmts	78:5	78:10	9	
break	78:5	78:10	10	
if	79:4	80:13	8	(cc == 0)
cond	79:8	79:14	9	cc == 0
water	79:8	0:0	10	cc
op	79:11	0:0	10	==
water	79:14	0:0	10	0
stmts	80:5	80:13	9	
goto	80:5	80:13	10	bad
water	80:10	0:0	11	bad
water	81:4	0:0	8	n
op	81:6	0:0	8	=
op	81:8	0:0	8	*
water	81:9	0:0	8	bp
op	81:11	0:0	8	++
water	81:13	0:0	8	,
water	81:15	0:0	8	cc
op	81:17	0:0	8	--
water	81:19	0:0	8	;
water	82:3	0:0	8	}
break	83:3	83:8	6	
water	84:2	0:0	6	}
water	85:2	0:0	6	}
water	86:1	0:0	4	}
water	87:1	0:0	2	tif
op	87:4	0:0	2	->
water	87:6	0:0	2	tif_rawcp
op	87:16	0:0	2	=
water	87:18	0:0	2	(
water	87:19	0:0	2	uint8
op	87:24	0:0	2	*
water	87:25	0:0	2	)
water	87:27	0:0	2	bp
water	87:29	0:0	2	;
water	88:1	0:0	2	tif
op	88:4	0:0	2	->
water	88:6	0:0	2	tif_rawcc
op	88:16	0:0	2	=
water	88:18	0:0	2	cc
water	88:20	0:0	2	;
return	89:1	89:11	2	(1)
water	89:8	0:0	3	(
water	89:9	0:0	3	1
water	89:10	0:0	3	)
label	90:0	90:3	2	bad :
call	91:1	92:24	2	TIFFErrorExt
arg	91:14	91:33	3	tif->tif_clientdata
water	91:14	0:0	4	tif
op	91:17	0:0	4	->
water	91:19	0:0	4	tif_clientdata
arg	91:35	91:41	3	module
water	91:35	0:0	4	module
arg	91:43	91:77	3	"Not enough data for scanline %ld"
water	91:43	0:0	4	"Not enough data for scanline %ld"
arg	92:5	92:24	3	(long)tif->tif_row
water	92:5	0:0	4	(
water	92:6	0:0	4	long
water	92:10	0:0	4	)
water	92:12	0:0	4	tif
op	92:15	0:0	4	->
water	92:17	0:0	4	tif_row
water	92:25	0:0	2	;
return	93:1	93:11	2	(0)
water	93:8	0:0	3	(
water	93:9	0:0	3	0
water	93:10	0:0	3	)

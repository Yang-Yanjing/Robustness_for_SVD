func	2:0	112:0	0	int	t2p_process_jpeg_strip
params	2:26	0:0	1	
param	3:1	3:21	2	unsigned char *	strip
param	4:1	4:21	2	tsize_t *	striplength
param	5:1	5:22	2	unsigned char *	buffer
param	6:1	6:22	2	tsize_t *	bufferoffset
param	7:1	7:12	2	tstrip_t	no
param	8:1	8:14	2	uint32	height
stmnts	0:0	111:10	1	
decl	10:1	10:12	2	tsize_t	i
op	10:10	0:0	2	=
water	10:11	0:0	2	0
while	12:1	108:1	2	(i < * striplength)
cond	12:8	12:13	3	i < * striplength
water	12:8	0:0	4	i
op	12:10	0:0	4	<
op	12:12	0:0	4	*
water	12:13	0:0	4	striplength
stmts	12:26	108:1	3	
water	12:26	0:0	4	{
decl	13:2	13:17	4	tsize_t	datalen
decl	14:2	14:11	4	uint16	ri
decl	15:2	15:15	4	uint16	v_samp
decl	16:2	16:15	4	uint16	h_samp
decl	17:2	17:7	4	int	j
decl	18:2	18:11	4	int	ncomp
if	21:2	22:12	4	(strip [ i ] != 0 xff)
cond	21:6	21:19	5	strip [ i ] != 0 xff
water	21:6	0:0	6	strip
op	21:11	0:0	6	[
water	21:12	0:0	6	i
op	21:13	0:0	6	]
op	21:15	0:0	6	!=
water	21:18	0:0	6	0
water	21:19	0:0	6	xff
stmts	22:3	22:12	5	
return	22:3	22:12	6	(0)
water	22:9	0:0	7	(
water	22:10	0:0	7	0
water	22:11	0:0	7	)
water	23:2	0:0	4	i
op	23:3	0:0	4	++
water	23:5	0:0	4	;
while	24:2	25:6	4	(i < * striplength && strip [ i ] == 0 xff)
cond	24:9	24:42	5	i < * striplength && strip [ i ] == 0 xff
water	24:9	0:0	6	i
op	24:11	0:0	6	<
op	24:13	0:0	6	*
water	24:14	0:0	6	striplength
op	24:26	0:0	6	&&
water	24:29	0:0	6	strip
op	24:34	0:0	6	[
water	24:35	0:0	6	i
op	24:36	0:0	6	]
op	24:38	0:0	6	==
water	24:41	0:0	6	0
water	24:42	0:0	6	xff
stmts	25:3	25:6	5	
water	25:3	0:0	6	i
op	25:4	0:0	6	++
water	25:6	0:0	6	;
if	26:2	27:12	4	(i >= * striplength)
cond	26:6	26:12	5	i >= * striplength
water	26:6	0:0	6	i
op	26:8	0:0	6	>=
op	26:11	0:0	6	*
water	26:12	0:0	6	striplength
stmts	27:3	27:12	5	
return	27:3	27:12	6	(0)
water	27:9	0:0	7	(
water	27:10	0:0	7	0
water	27:11	0:0	7	)
if	29:2	30:14	4	(strip [ i ] == 0 xd8)
cond	29:6	29:19	5	strip [ i ] == 0 xd8
water	29:6	0:0	6	strip
op	29:11	0:0	6	[
water	29:12	0:0	6	i
op	29:13	0:0	6	]
op	29:15	0:0	6	==
water	29:18	0:0	6	0
water	29:19	0:0	6	xd8
stmts	30:3	30:14	5	
water	30:3	0:0	6	datalen
op	30:11	0:0	6	=
water	30:13	0:0	6	0
water	30:14	0:0	6	;
else	31:2	37:2	4
stmts	31:7	37:2	5	
water	31:7	0:0	6	{
if	32:3	33:13	6	(( * striplength - i ) <= 2)
cond	32:7	32:29	7	( * striplength - i ) <= 2
water	32:7	0:0	8	(
op	32:8	0:0	8	*
water	32:9	0:0	8	striplength
op	32:21	0:0	8	-
water	32:23	0:0	8	i
water	32:24	0:0	8	)
op	32:26	0:0	8	<=
water	32:29	0:0	8	2
stmts	33:4	33:13	7	
return	33:4	33:13	8	(0)
water	33:10	0:0	9	(
water	33:11	0:0	9	0
water	33:12	0:0	9	)
water	34:3	0:0	6	datalen
op	34:11	0:0	6	=
water	34:13	0:0	6	(
water	34:14	0:0	6	strip
op	34:19	0:0	6	[
water	34:20	0:0	6	i
op	34:21	0:0	6	+
water	34:22	0:0	6	1
op	34:23	0:0	6	]
op	34:25	0:0	6	<<
water	34:28	0:0	6	8
water	34:29	0:0	6	)
op	34:31	0:0	6	|
water	34:33	0:0	6	strip
op	34:38	0:0	6	[
water	34:39	0:0	6	i
op	34:40	0:0	6	+
water	34:41	0:0	6	2
op	34:42	0:0	6	]
water	34:43	0:0	6	;
if	35:3	36:13	6	(datalen < 2 || datalen >= ( * striplength - i ))
cond	35:7	35:50	7	datalen < 2 || datalen >= ( * striplength - i )
water	35:7	0:0	8	datalen
op	35:15	0:0	8	<
water	35:17	0:0	8	2
op	35:19	0:0	8	||
water	35:22	0:0	8	datalen
op	35:30	0:0	8	>=
water	35:33	0:0	8	(
op	35:34	0:0	8	*
water	35:35	0:0	8	striplength
op	35:47	0:0	8	-
water	35:49	0:0	8	i
water	35:50	0:0	8	)
stmts	36:4	36:13	7	
return	36:4	36:13	8	(0)
water	36:10	0:0	9	(
water	36:11	0:0	9	0
water	36:12	0:0	9	)
water	37:2	0:0	6	}
switch	38:2	106:2	4	(strip [ i ])
cond	38:10	38:17	5	strip [ i ]
water	38:10	0:0	6	strip
op	38:15	0:0	6	[
water	38:16	0:0	6	i
op	38:17	0:0	6	]
stmts	38:20	106:2	5	
water	38:20	0:0	6	{
label	39:3	39:12	6	case 0 xd8 :
call	40:4	40:58	6	_TIFFmemcpy
arg	40:16	40:40	7	&(buffer[*bufferoffset])
op	40:16	0:0	8	&
water	40:17	0:0	8	(
water	40:18	0:0	8	buffer
op	40:24	0:0	8	[
op	40:25	0:0	8	*
water	40:26	0:0	8	bufferoffset
op	40:38	0:0	8	]
water	40:39	0:0	8	)
arg	40:42	40:55	7	&(strip[i-1])
op	40:42	0:0	8	&
water	40:43	0:0	8	(
water	40:44	0:0	8	strip
op	40:49	0:0	8	[
water	40:50	0:0	8	i
op	40:51	0:0	8	-
water	40:52	0:0	8	1
op	40:53	0:0	8	]
water	40:54	0:0	8	)
arg	40:57	40:58	7	2
water	40:57	0:0	8	2
water	40:59	0:0	6	;
op	41:4	0:0	6	*
water	41:5	0:0	6	bufferoffset
op	41:17	0:0	6	+=
water	41:19	0:0	6	2
water	41:20	0:0	6	;
break	42:4	42:9	6	
label	43:3	43:12	6	case 0 xc0 :
label	44:3	44:12	6	case 0 xc1 :
label	45:3	45:12	6	case 0 xc3 :
label	46:3	46:12	6	case 0 xc9 :
label	47:3	47:12	6	case 0 xca :
if	48:4	82:4	6	(no == 0)
cond	48:7	48:11	7	no == 0
water	48:7	0:0	8	no
op	48:9	0:0	8	==
water	48:11	0:0	8	0
stmts	48:13	82:4	7	
water	48:13	0:0	8	{
call	49:5	49:67	8	_TIFFmemcpy
arg	49:17	49:41	9	&(buffer[*bufferoffset])
op	49:17	0:0	10	&
water	49:18	0:0	10	(
water	49:19	0:0	10	buffer
op	49:25	0:0	10	[
op	49:26	0:0	10	*
water	49:27	0:0	10	bufferoffset
op	49:39	0:0	10	]
water	49:40	0:0	10	)
arg	49:43	49:56	9	&(strip[i-1])
op	49:43	0:0	10	&
water	49:44	0:0	10	(
water	49:45	0:0	10	strip
op	49:50	0:0	10	[
water	49:51	0:0	10	i
op	49:52	0:0	10	-
water	49:53	0:0	10	1
op	49:54	0:0	10	]
water	49:55	0:0	10	)
arg	49:58	49:67	9	datalen+2
water	49:58	0:0	10	datalen
op	49:65	0:0	10	+
water	49:66	0:0	10	2
water	49:68	0:0	8	;
water	50:5	0:0	8	ncomp
op	50:11	0:0	8	=
water	50:13	0:0	8	buffer
op	50:19	0:0	8	[
op	50:20	0:0	8	*
water	50:21	0:0	8	bufferoffset
op	50:33	0:0	8	+
water	50:34	0:0	8	9
op	50:35	0:0	8	]
water	50:36	0:0	8	;
if	51:5	52:15	8	(ncomp < 1 || ncomp > 4)
cond	51:9	51:30	9	ncomp < 1 || ncomp > 4
water	51:9	0:0	10	ncomp
op	51:15	0:0	10	<
water	51:17	0:0	10	1
op	51:19	0:0	10	||
water	51:22	0:0	10	ncomp
op	51:28	0:0	10	>
water	51:30	0:0	10	4
stmts	52:6	52:15	9	
return	52:6	52:15	10	(0)
water	52:12	0:0	11	(
water	52:13	0:0	11	0
water	52:14	0:0	11	)
water	53:5	0:0	8	v_samp
op	53:11	0:0	8	=
water	53:12	0:0	8	1
water	53:13	0:0	8	;
water	54:5	0:0	8	h_samp
op	54:11	0:0	8	=
water	54:12	0:0	8	1
water	54:13	0:0	8	;
for	55:5	61:5	8	(j = 0 ;j < ncomp;j ++)
forinit	55:9	55:12	9	j = 0 ;
water	55:9	0:0	10	j
op	55:10	0:0	10	=
water	55:11	0:0	10	0
water	55:12	0:0	10	;
cond	55:13	55:15	9	j < ncomp
water	55:13	0:0	10	j
op	55:14	0:0	10	<
water	55:15	0:0	10	ncomp
forexpr	55:21	55:22	9	j ++
water	55:21	0:0	10	j
op	55:22	0:0	10	++
stmts	55:25	61:5	9	
water	55:25	0:0	10	{
decl	56:6	56:50	10	uint16	samp
op	56:18	0:0	10	=
water	56:20	0:0	10	buffer
op	56:26	0:0	10	[
op	56:27	0:0	10	*
water	56:28	0:0	10	bufferoffset
op	56:40	0:0	10	+
water	56:41	0:0	10	11
op	56:43	0:0	10	+
water	56:44	0:0	10	(
water	56:45	0:0	10	3
op	56:46	0:0	10	*
water	56:47	0:0	10	j
water	56:48	0:0	10	)
op	56:49	0:0	10	]
if	57:6	58:25	10	(( samp >> 4 ) > h_samp)
cond	57:10	57:22	11	( samp >> 4 ) > h_samp
water	57:10	0:0	12	(
water	57:11	0:0	12	samp
op	57:15	0:0	12	>>
water	57:17	0:0	12	4
water	57:18	0:0	12	)
op	57:20	0:0	12	>
water	57:22	0:0	12	h_samp
stmts	58:7	58:25	11	
water	58:7	0:0	12	h_samp
op	58:14	0:0	12	=
water	58:16	0:0	12	(
water	58:17	0:0	12	samp
op	58:21	0:0	12	>>
water	58:23	0:0	12	4
water	58:24	0:0	12	)
water	58:25	0:0	12	;
if	59:6	60:29	10	(( samp & 0 x0f ) > v_samp)
cond	59:10	59:26	11	( samp & 0 x0f ) > v_samp
water	59:10	0:0	12	(
water	59:11	0:0	12	samp
op	59:16	0:0	12	&
water	59:18	0:0	12	0
water	59:19	0:0	12	x0f
water	59:22	0:0	12	)
op	59:24	0:0	12	>
water	59:26	0:0	12	v_samp
stmts	60:7	60:29	11	
water	60:7	0:0	12	v_samp
op	60:14	0:0	12	=
water	60:16	0:0	12	(
water	60:17	0:0	12	samp
op	60:22	0:0	12	&
water	60:24	0:0	12	0
water	60:25	0:0	12	x0f
water	60:28	0:0	12	)
water	60:29	0:0	12	;
water	61:5	0:0	10	}
water	62:5	0:0	8	v_samp
op	62:11	0:0	8	*=
water	62:13	0:0	8	8
water	62:14	0:0	8	;
water	63:5	0:0	8	h_samp
op	63:11	0:0	8	*=
water	63:13	0:0	8	8
water	63:14	0:0	8	;
water	64:5	0:0	8	ri
op	64:7	0:0	8	=
water	64:8	0:0	8	(
water	64:9	0:0	8	(
water	64:10	0:0	8	(
water	64:12	0:0	8	(
call	64:13	64:45	8	(uint16)
arg	64:22	64:45	9	buffer[*bufferoffset+5]
water	64:22	0:0	10	buffer
op	64:28	0:0	10	[
op	64:29	0:0	10	*
water	64:30	0:0	10	bufferoffset
op	64:42	0:0	10	+
water	64:43	0:0	10	5
op	64:44	0:0	10	]
op	64:46	0:0	8	<<
water	64:48	0:0	8	8
water	64:49	0:0	8	)
op	64:51	0:0	8	|
call	65:5	65:37	8	(uint16)
arg	65:14	65:37	9	buffer[*bufferoffset+6]
water	65:14	0:0	10	buffer
op	65:20	0:0	10	[
op	65:21	0:0	10	*
water	65:22	0:0	10	bufferoffset
op	65:34	0:0	10	+
water	65:35	0:0	10	6
op	65:36	0:0	10	]
water	65:39	0:0	8	)
op	65:40	0:0	8	+
water	65:41	0:0	8	v_samp
op	65:47	0:0	8	-
water	65:48	0:0	8	1
water	65:49	0:0	8	)
op	65:50	0:0	8	/
water	66:5	0:0	8	v_samp
water	66:11	0:0	8	)
water	66:12	0:0	8	;
water	67:5	0:0	8	ri
op	67:7	0:0	8	*=
water	67:9	0:0	8	(
water	67:10	0:0	8	(
water	67:11	0:0	8	(
water	67:13	0:0	8	(
call	67:14	67:46	8	(uint16)
arg	67:23	67:46	9	buffer[*bufferoffset+7]
water	67:23	0:0	10	buffer
op	67:29	0:0	10	[
op	67:30	0:0	10	*
water	67:31	0:0	10	bufferoffset
op	67:43	0:0	10	+
water	67:44	0:0	10	7
op	67:45	0:0	10	]
op	67:47	0:0	8	<<
water	67:49	0:0	8	8
water	67:50	0:0	8	)
op	67:52	0:0	8	|
call	68:5	68:37	8	(uint16)
arg	68:14	68:37	9	buffer[*bufferoffset+8]
water	68:14	0:0	10	buffer
op	68:20	0:0	10	[
op	68:21	0:0	10	*
water	68:22	0:0	10	bufferoffset
op	68:34	0:0	10	+
water	68:35	0:0	10	8
op	68:36	0:0	10	]
water	68:39	0:0	8	)
op	68:40	0:0	8	+
water	68:41	0:0	8	h_samp
op	68:47	0:0	8	-
water	68:48	0:0	8	1
water	68:49	0:0	8	)
op	68:50	0:0	8	/
water	69:5	0:0	8	h_samp
water	69:11	0:0	8	)
water	69:12	0:0	8	;
water	70:5	0:0	8	buffer
op	70:11	0:0	8	[
op	70:12	0:0	8	*
water	70:13	0:0	8	bufferoffset
op	70:25	0:0	8	+
water	70:26	0:0	8	5
op	70:27	0:0	8	]
op	70:28	0:0	8	=
call	71:42	71:77	8	(unsignedchar)
arg	71:59	71:77	9	(height>>8)&0xff
water	71:59	0:0	10	(
water	71:60	0:0	10	height
op	71:66	0:0	10	>>
water	71:68	0:0	10	8
water	71:69	0:0	10	)
op	71:71	0:0	10	&
water	71:73	0:0	10	0
water	71:74	0:0	10	xff
water	71:78	0:0	8	;
water	72:5	0:0	8	buffer
op	72:11	0:0	8	[
op	72:12	0:0	8	*
water	72:13	0:0	8	bufferoffset
op	72:25	0:0	8	+
water	72:26	0:0	8	6
op	72:27	0:0	8	]
op	72:28	0:0	8	=
call	73:44	73:74	8	(unsignedchar)
arg	73:61	73:74	9	height&0xff
water	73:61	0:0	10	height
op	73:68	0:0	10	&
water	73:70	0:0	10	0
water	73:71	0:0	10	xff
water	73:75	0:0	8	;
op	74:5	0:0	8	*
water	74:6	0:0	8	bufferoffset
op	74:18	0:0	8	+=
water	74:20	0:0	8	datalen
op	74:27	0:0	8	+
water	74:28	0:0	8	2
water	74:29	0:0	8	;
water	76:5	0:0	8	buffer
op	76:11	0:0	8	[
water	76:12	0:0	8	(
op	76:13	0:0	8	*
water	76:14	0:0	8	bufferoffset
water	76:26	0:0	8	)
op	76:27	0:0	8	++
op	76:29	0:0	8	]
op	76:30	0:0	8	=
water	76:31	0:0	8	0
water	76:32	0:0	8	xff
water	76:35	0:0	8	;
water	77:5	0:0	8	buffer
op	77:11	0:0	8	[
water	77:12	0:0	8	(
op	77:13	0:0	8	*
water	77:14	0:0	8	bufferoffset
water	77:26	0:0	8	)
op	77:27	0:0	8	++
op	77:29	0:0	8	]
op	77:30	0:0	8	=
water	77:31	0:0	8	0
water	77:32	0:0	8	xdd
water	77:35	0:0	8	;
water	78:5	0:0	8	buffer
op	78:11	0:0	8	[
water	78:12	0:0	8	(
op	78:13	0:0	8	*
water	78:14	0:0	8	bufferoffset
water	78:26	0:0	8	)
op	78:27	0:0	8	++
op	78:29	0:0	8	]
op	78:30	0:0	8	=
water	78:31	0:0	8	0
water	78:32	0:0	8	x00
water	78:35	0:0	8	;
water	79:5	0:0	8	buffer
op	79:11	0:0	8	[
water	79:12	0:0	8	(
op	79:13	0:0	8	*
water	79:14	0:0	8	bufferoffset
water	79:26	0:0	8	)
op	79:27	0:0	8	++
op	79:29	0:0	8	]
op	79:30	0:0	8	=
water	79:31	0:0	8	0
water	79:32	0:0	8	x04
water	79:35	0:0	8	;
water	80:5	0:0	8	buffer
op	80:11	0:0	8	[
water	80:12	0:0	8	(
op	80:13	0:0	8	*
water	80:14	0:0	8	bufferoffset
water	80:26	0:0	8	)
op	80:27	0:0	8	++
op	80:29	0:0	8	]
op	80:30	0:0	8	=
water	80:31	0:0	8	(
water	80:32	0:0	8	ri
op	80:35	0:0	8	>>
water	80:38	0:0	8	8
water	80:39	0:0	8	)
op	80:41	0:0	8	&
water	80:43	0:0	8	0
water	80:44	0:0	8	xff
water	80:47	0:0	8	;
water	81:5	0:0	8	buffer
op	81:11	0:0	8	[
water	81:12	0:0	8	(
op	81:13	0:0	8	*
water	81:14	0:0	8	bufferoffset
water	81:26	0:0	8	)
op	81:27	0:0	8	++
op	81:29	0:0	8	]
op	81:30	0:0	8	=
water	81:32	0:0	8	ri
op	81:35	0:0	8	&
water	81:37	0:0	8	0
water	81:38	0:0	8	xff
water	81:41	0:0	8	;
water	82:4	0:0	8	}
break	83:4	83:9	6	
label	84:3	84:12	6	case 0 xc4 :
label	85:3	85:12	6	case 0 xdb :
call	86:4	86:66	6	_TIFFmemcpy
arg	86:16	86:40	7	&(buffer[*bufferoffset])
op	86:16	0:0	8	&
water	86:17	0:0	8	(
water	86:18	0:0	8	buffer
op	86:24	0:0	8	[
op	86:25	0:0	8	*
water	86:26	0:0	8	bufferoffset
op	86:38	0:0	8	]
water	86:39	0:0	8	)
arg	86:42	86:55	7	&(strip[i-1])
op	86:42	0:0	8	&
water	86:43	0:0	8	(
water	86:44	0:0	8	strip
op	86:49	0:0	8	[
water	86:50	0:0	8	i
op	86:51	0:0	8	-
water	86:52	0:0	8	1
op	86:53	0:0	8	]
water	86:54	0:0	8	)
arg	86:57	86:66	7	datalen+2
water	86:57	0:0	8	datalen
op	86:64	0:0	8	+
water	86:65	0:0	8	2
water	86:67	0:0	6	;
op	87:4	0:0	6	*
water	87:5	0:0	6	bufferoffset
op	87:17	0:0	6	+=
water	87:19	0:0	6	datalen
op	87:26	0:0	6	+
water	87:27	0:0	6	2
water	87:28	0:0	6	;
break	88:4	88:9	6	
label	89:3	89:12	6	case 0 xda :
if	90:4	93:4	6	(no == 0)
cond	90:7	90:11	7	no == 0
water	90:7	0:0	8	no
op	90:9	0:0	8	==
water	90:11	0:0	8	0
stmts	90:13	93:4	7	
water	90:13	0:0	8	{
call	91:5	91:67	8	_TIFFmemcpy
arg	91:17	91:41	9	&(buffer[*bufferoffset])
op	91:17	0:0	10	&
water	91:18	0:0	10	(
water	91:19	0:0	10	buffer
op	91:25	0:0	10	[
op	91:26	0:0	10	*
water	91:27	0:0	10	bufferoffset
op	91:39	0:0	10	]
water	91:40	0:0	10	)
arg	91:43	91:56	9	&(strip[i-1])
op	91:43	0:0	10	&
water	91:44	0:0	10	(
water	91:45	0:0	10	strip
op	91:50	0:0	10	[
water	91:51	0:0	10	i
op	91:52	0:0	10	-
water	91:53	0:0	10	1
op	91:54	0:0	10	]
water	91:55	0:0	10	)
arg	91:58	91:67	9	datalen+2
water	91:58	0:0	10	datalen
op	91:65	0:0	10	+
water	91:66	0:0	10	2
water	91:68	0:0	8	;
op	92:5	0:0	8	*
water	92:6	0:0	8	bufferoffset
op	92:18	0:0	8	+=
water	92:20	0:0	8	datalen
op	92:27	0:0	8	+
water	92:28	0:0	8	2
water	92:29	0:0	8	;
water	93:4	0:0	8	}
else	93:6	97:4	6
stmts	93:11	97:4	7	
water	93:11	0:0	8	{
water	94:5	0:0	8	buffer
op	94:11	0:0	8	[
water	94:12	0:0	8	(
op	94:13	0:0	8	*
water	94:14	0:0	8	bufferoffset
water	94:26	0:0	8	)
op	94:27	0:0	8	++
op	94:29	0:0	8	]
op	94:30	0:0	8	=
water	94:31	0:0	8	0
water	94:32	0:0	8	xff
water	94:35	0:0	8	;
water	95:5	0:0	8	buffer
op	95:11	0:0	8	[
water	95:12	0:0	8	(
op	95:13	0:0	8	*
water	95:14	0:0	8	bufferoffset
water	95:26	0:0	8	)
op	95:27	0:0	8	++
op	95:29	0:0	8	]
op	95:30	0:0	8	=
call	96:44	96:77	8	(unsignedchar)
arg	96:60	96:77	9	0xd0|((no-1)%8)
water	96:60	0:0	10	0
water	96:61	0:0	10	xd0
op	96:65	0:0	10	|
water	96:67	0:0	10	(
water	96:68	0:0	10	(
water	96:69	0:0	10	no
op	96:71	0:0	10	-
water	96:72	0:0	10	1
water	96:73	0:0	10	)
op	96:74	0:0	10	%
water	96:75	0:0	10	8
water	96:76	0:0	10	)
water	96:78	0:0	8	;
water	97:4	0:0	8	}
water	98:4	0:0	6	i
op	98:6	0:0	6	+=
water	98:9	0:0	6	datalen
op	98:17	0:0	6	+
water	98:19	0:0	6	1
water	98:20	0:0	6	;
call	100:4	100:71	6	_TIFFmemcpy
arg	100:16	100:40	7	&(buffer[*bufferoffset])
op	100:16	0:0	8	&
water	100:17	0:0	8	(
water	100:18	0:0	8	buffer
op	100:24	0:0	8	[
op	100:25	0:0	8	*
water	100:26	0:0	8	bufferoffset
op	100:38	0:0	8	]
water	100:39	0:0	8	)
arg	100:42	100:53	7	&(strip[i])
op	100:42	0:0	8	&
water	100:43	0:0	8	(
water	100:44	0:0	8	strip
op	100:49	0:0	8	[
water	100:50	0:0	8	i
op	100:51	0:0	8	]
water	100:52	0:0	8	)
arg	100:55	100:71	7	*striplength-i
op	100:55	0:0	8	*
water	100:56	0:0	8	striplength
op	100:68	0:0	8	-
water	100:70	0:0	8	i
water	100:72	0:0	6	;
op	101:4	0:0	6	*
water	101:5	0:0	6	bufferoffset
op	101:17	0:0	6	+=
op	101:20	0:0	6	*
water	101:21	0:0	6	striplength
op	101:33	0:0	6	-
water	101:35	0:0	6	i
water	101:36	0:0	6	;
return	102:4	102:13	6	(1)
water	102:10	0:0	7	(
water	102:11	0:0	7	1
water	102:12	0:0	7	)
label	103:3	103:10	6	default :
break	105:4	105:9	6	
water	106:2	0:0	6	}
water	107:2	0:0	4	i
op	107:4	0:0	4	+=
water	107:7	0:0	4	datalen
op	107:15	0:0	4	+
water	107:17	0:0	4	1
water	107:18	0:0	4	;
water	108:1	0:0	4	}
return	111:1	111:10	2	(0)
water	111:7	0:0	3	(
water	111:8	0:0	3	0
water	111:9	0:0	3	)

func	2:0	106:0	0	static int	NeXTDecode
params	3:10	0:0	1	
param	3:11	3:20	2	TIFF *	tif
param	3:22	3:32	2	uint8 *	buf
param	3:34	3:46	2	tmsize_t	occ
param	3:48	3:56	2	uint16	s
stmnts	5:1	105:11	1	
water	5:1	0:0	2	static
water	5:8	0:0	2	const
water	5:14	0:0	2	char
water	5:19	0:0	2	module
op	5:25	0:0	2	[
op	5:26	0:0	2	]
op	5:28	0:0	2	=
water	5:30	0:0	2	"NeXTDecode"
water	5:42	0:0	2	;
decl	6:1	6:23	2	unsigned char	*bp
water	6:18	0:0	2	,
decl	6:1	6:23	2	unsigned char	*op
decl	7:1	7:12	2	tmsize_t	cc
decl	8:1	8:11	2	uint8	*row
decl	9:1	9:21	2	tmsize_t	scanline
water	9:18	0:0	2	,
decl	9:1	9:21	2	tmsize_t	n
water	11:1	0:0	2	(
water	11:2	0:0	2	void
water	11:6	0:0	2	)
water	11:8	0:0	2	s
water	11:9	0:0	2	;
for	17:1	18:14	2	(op = ( unsigned char * ) buf , cc = occ ;cc -- > 0;)
forinit	17:6	17:41	3	op = ( unsigned char * ) buf , cc = occ ;
water	17:6	0:0	4	op
op	17:9	0:0	4	=
water	17:11	0:0	4	(
water	17:12	0:0	4	unsigned
water	17:21	0:0	4	char
op	17:25	0:0	4	*
water	17:26	0:0	4	)
water	17:28	0:0	4	buf
water	17:31	0:0	4	,
water	17:33	0:0	4	cc
op	17:36	0:0	4	=
water	17:38	0:0	4	occ
water	17:41	0:0	4	;
cond	17:43	17:50	3	cc -- > 0
water	17:43	0:0	4	cc
op	17:45	0:0	4	--
op	17:48	0:0	4	>
water	17:50	0:0	4	0
forexpr	0:0	0:0	3	
stmts	18:2	18:14	3	
op	18:2	0:0	4	*
water	18:3	0:0	4	op
op	18:5	0:0	4	++
op	18:8	0:0	4	=
water	18:10	0:0	4	0
water	18:11	0:0	4	xff
water	18:14	0:0	4	;
water	20:1	0:0	2	bp
op	20:4	0:0	2	=
water	20:6	0:0	2	(
water	20:7	0:0	2	unsigned
water	20:16	0:0	2	char
op	20:21	0:0	2	*
water	20:22	0:0	2	)
water	20:23	0:0	2	tif
op	20:26	0:0	2	->
water	20:28	0:0	2	tif_rawcp
water	20:37	0:0	2	;
water	21:1	0:0	2	cc
op	21:4	0:0	2	=
water	21:6	0:0	2	tif
op	21:9	0:0	2	->
water	21:11	0:0	2	tif_rawcc
water	21:20	0:0	2	;
water	22:1	0:0	2	scanline
op	22:10	0:0	2	=
water	22:12	0:0	2	tif
op	22:15	0:0	2	->
water	22:17	0:0	2	tif_scanlinesize
water	22:33	0:0	2	;
if	23:1	27:1	2	(occ % scanline)
cond	23:5	23:11	3	occ % scanline
water	23:5	0:0	4	occ
op	23:9	0:0	4	%
water	23:11	0:0	4	scanline
stmts	24:1	27:1	3	
water	24:1	0:0	4	{
call	25:2	25:81	4	TIFFErrorExt
arg	25:15	25:34	5	tif->tif_clientdata
water	25:15	0:0	6	tif
op	25:18	0:0	6	->
water	25:20	0:0	6	tif_clientdata
arg	25:36	25:42	5	module
water	25:36	0:0	6	module
arg	25:44	25:81	5	"Fractional scanlines cannot be read"
water	25:44	0:0	6	"Fractional scanlines cannot be read"
water	25:82	0:0	4	;
return	26:2	26:12	4	(0)
water	26:9	0:0	5	(
water	26:10	0:0	5	0
water	26:11	0:0	5	)
water	27:1	0:0	4	}
for	28:1	98:1	2	(row = buf ;cc > 0 && occ > 0;occ -= scanline , row += scanline)
forinit	28:6	28:15	3	row = buf ;
water	28:6	0:0	4	row
op	28:10	0:0	4	=
water	28:12	0:0	4	buf
water	28:15	0:0	4	;
cond	28:17	28:33	3	cc > 0 && occ > 0
water	28:17	0:0	4	cc
op	28:20	0:0	4	>
water	28:22	0:0	4	0
op	28:24	0:0	4	&&
water	28:27	0:0	4	occ
op	28:31	0:0	4	>
water	28:33	0:0	4	0
forexpr	28:36	28:60	3	occ -= scanline , row += scanline
water	28:36	0:0	4	occ
op	28:40	0:0	4	-=
water	28:43	0:0	4	scanline
water	28:51	0:0	4	,
water	28:53	0:0	4	row
op	28:57	0:0	4	+=
water	28:60	0:0	4	scanline
stmts	28:70	98:1	3	
water	28:70	0:0	4	{
water	29:2	0:0	4	n
op	29:4	0:0	4	=
op	29:6	0:0	4	*
water	29:7	0:0	4	bp
op	29:9	0:0	4	++
water	29:11	0:0	4	;
water	30:2	0:0	4	cc
op	30:4	0:0	4	--
water	30:6	0:0	4	;
switch	31:2	97:2	4	(n)
cond	31:10	31:10	5	n
water	31:10	0:0	6	n
stmts	31:13	97:2	5	
water	31:13	0:0	6	{
label	32:2	32:17	6	case LITERALROW :
if	36:3	37:12	6	(cc < scanline)
cond	36:7	36:12	7	cc < scanline
water	36:7	0:0	8	cc
op	36:10	0:0	8	<
water	36:12	0:0	8	scanline
stmts	37:4	37:12	7	
goto	37:4	37:12	8	bad
water	37:9	0:0	9	bad
call	38:3	38:32	6	_TIFFmemcpy
arg	38:15	38:18	7	row
water	38:15	0:0	8	row
arg	38:20	38:22	7	bp
water	38:20	0:0	8	bp
arg	38:24	38:32	7	scanline
water	38:24	0:0	8	scanline
water	38:33	0:0	6	;
water	39:3	0:0	6	bp
op	39:6	0:0	6	+=
water	39:9	0:0	6	scanline
water	39:17	0:0	6	;
water	40:3	0:0	6	cc
op	40:6	0:0	6	-=
water	40:9	0:0	6	scanline
water	40:17	0:0	6	;
break	41:3	41:8	6	
label	42:2	42:18	6	case LITERALSPAN :
water	42:20	0:0	6	{
decl	43:3	43:15	6	tmsize_t	off
if	48:3	49:12	6	(cc < 4)
cond	48:7	48:12	7	cc < 4
water	48:7	0:0	8	cc
op	48:10	0:0	8	<
water	48:12	0:0	8	4
stmts	49:4	49:12	7	
goto	49:4	49:12	8	bad
water	49:9	0:0	9	bad
water	50:3	0:0	6	off
op	50:7	0:0	6	=
water	50:9	0:0	6	(
water	50:10	0:0	6	bp
op	50:12	0:0	6	[
water	50:13	0:0	6	0
op	50:14	0:0	6	]
op	50:16	0:0	6	*
water	50:18	0:0	6	256
water	50:21	0:0	6	)
op	50:23	0:0	6	+
water	50:25	0:0	6	bp
op	50:27	0:0	6	[
water	50:28	0:0	6	1
op	50:29	0:0	6	]
water	50:30	0:0	6	;
water	51:3	0:0	6	n
op	51:5	0:0	6	=
water	51:7	0:0	6	(
water	51:8	0:0	6	bp
op	51:10	0:0	6	[
water	51:11	0:0	6	2
op	51:12	0:0	6	]
op	51:14	0:0	6	*
water	51:16	0:0	6	256
water	51:19	0:0	6	)
op	51:21	0:0	6	+
water	51:23	0:0	6	bp
op	51:25	0:0	6	[
water	51:26	0:0	6	3
op	51:27	0:0	6	]
water	51:28	0:0	6	;
if	52:3	53:12	6	(cc < 4 + n || off + n > scanline)
cond	52:7	52:27	7	cc < 4 + n || off + n > scanline
water	52:7	0:0	8	cc
op	52:10	0:0	8	<
water	52:12	0:0	8	4
op	52:13	0:0	8	+
water	52:14	0:0	8	n
op	52:16	0:0	8	||
water	52:19	0:0	8	off
op	52:22	0:0	8	+
water	52:23	0:0	8	n
op	52:25	0:0	8	>
water	52:27	0:0	8	scanline
stmts	53:4	53:12	7	
goto	53:4	53:12	8	bad
water	53:9	0:0	9	bad
call	54:3	54:31	6	_TIFFmemcpy
arg	54:15	54:22	7	row+off
water	54:15	0:0	8	row
op	54:18	0:0	8	+
water	54:19	0:0	8	off
arg	54:24	54:28	7	bp+4
water	54:24	0:0	8	bp
op	54:26	0:0	8	+
water	54:27	0:0	8	4
arg	54:30	54:31	7	n
water	54:30	0:0	8	n
water	54:32	0:0	6	;
water	55:3	0:0	6	bp
op	55:6	0:0	6	+=
water	55:9	0:0	6	4
op	55:10	0:0	6	+
water	55:11	0:0	6	n
water	55:12	0:0	6	;
water	56:3	0:0	6	cc
op	56:6	0:0	6	-=
water	56:9	0:0	6	4
op	56:10	0:0	6	+
water	56:11	0:0	6	n
water	56:12	0:0	6	;
break	57:3	57:8	6	
water	58:2	0:0	6	}
label	59:2	59:9	6	default :
water	59:11	0:0	6	{
decl	60:3	60:27	6	uint32	npixels
op	60:18	0:0	6	=
water	60:20	0:0	6	0
water	60:21	0:0	6	,
decl	60:3	60:27	6	uint32	grey
decl	61:3	61:25	6	tmsize_t	op_offset
op	61:22	0:0	6	=
water	61:24	0:0	6	0
decl	62:3	62:49	6	uint32	imagewidth
op	62:21	0:0	6	=
water	62:23	0:0	6	tif
op	62:26	0:0	6	->
water	62:28	0:0	6	tif_dir
op	62:35	0:0	6	.
water	62:36	0:0	6	td_imagewidth
if	63:12	64:54	6	(isTiled (tif ))
cond	63:16	63:27	7	isTiled (tif )
call	63:16	63:27	8	isTiled
arg	63:24	63:27	9	tif
water	63:24	0:0	10	tif
stmts	64:16	64:54	7	
water	64:16	0:0	8	imagewidth
op	64:27	0:0	8	=
water	64:29	0:0	8	tif
op	64:32	0:0	8	->
water	64:34	0:0	8	tif_dir
op	64:41	0:0	8	.
water	64:42	0:0	8	td_tilewidth
water	64:54	0:0	8	;
water	72:3	0:0	6	op
op	72:6	0:0	6	=
water	72:8	0:0	6	row
water	72:11	0:0	6	;
for	73:3	94:3	6	(;;)
forinit	73:8	73:8	7	;
water	73:8	0:0	8	;
cond	0:0	0:0	7	
forexpr	0:0	0:0	7	
stmts	73:12	94:3	7	
water	73:12	0:0	8	{
water	74:4	0:0	8	grey
op	74:9	0:0	8	=
call	74:11	74:32	8	(uint32)
arg	74:20	74:32	9	(n>>6)&0x3
water	74:20	0:0	10	(
water	74:21	0:0	10	n
op	74:22	0:0	10	>>
water	74:24	0:0	10	6
water	74:25	0:0	10	)
op	74:27	0:0	10	&
water	74:29	0:0	10	0
water	74:30	0:0	10	x3
water	74:33	0:0	8	;
water	75:4	0:0	8	n
op	75:6	0:0	8	&=
water	75:9	0:0	8	0
water	75:10	0:0	8	x3f
water	75:13	0:0	8	;
while	81:4	82:23	8	(n -- > 0 && npixels < imagewidth && op_offset < scanline)
cond	81:11	81:58	9	n -- > 0 && npixels < imagewidth && op_offset < scanline
water	81:11	0:0	10	n
op	81:12	0:0	10	--
op	81:15	0:0	10	>
water	81:17	0:0	10	0
op	81:19	0:0	10	&&
water	81:22	0:0	10	npixels
op	81:30	0:0	10	<
water	81:32	0:0	10	imagewidth
op	81:43	0:0	10	&&
water	81:46	0:0	10	op_offset
op	81:56	0:0	10	<
water	81:58	0:0	10	scanline
stmts	82:5	82:23	9	
call	82:5	82:22	10	SETPIXEL
arg	82:14	82:16	11	op
water	82:14	0:0	12	op
arg	82:18	82:22	11	grey
water	82:18	0:0	12	grey
water	82:23	0:0	10	;
if	83:4	84:10	8	(npixels >= imagewidth)
cond	83:8	83:19	9	npixels >= imagewidth
water	83:8	0:0	10	npixels
op	83:16	0:0	10	>=
water	83:19	0:0	10	imagewidth
stmts	84:5	84:10	9	
break	84:5	84:10	10	
if	85:16	89:16	8	(op_offset >= scanline)
cond	85:20	85:33	9	op_offset >= scanline
water	85:20	0:0	10	op_offset
op	85:30	0:0	10	>=
water	85:33	0:0	10	scanline
stmts	85:44	89:16	9	
water	85:44	0:0	10	{
call	86:20	87:43	10	TIFFErrorExt
arg	86:33	86:52	11	tif->tif_clientdata
water	86:33	0:0	12	tif
op	86:36	0:0	12	->
water	86:38	0:0	12	tif_clientdata
arg	86:54	86:60	11	module
water	86:54	0:0	12	module
arg	86:62	86:93	11	"Invalid data for scanline %ld"
water	86:62	0:0	12	"Invalid data for scanline %ld"
arg	87:24	87:43	11	(long)tif->tif_row
water	87:24	0:0	12	(
water	87:25	0:0	12	long
water	87:29	0:0	12	)
water	87:31	0:0	12	tif
op	87:34	0:0	12	->
water	87:36	0:0	12	tif_row
water	87:44	0:0	10	;
return	88:20	88:30	10	(0)
water	88:27	0:0	11	(
water	88:28	0:0	11	0
water	88:29	0:0	11	)
water	89:16	0:0	10	}
if	90:4	91:13	8	(cc == 0)
cond	90:8	90:14	9	cc == 0
water	90:8	0:0	10	cc
op	90:11	0:0	10	==
water	90:14	0:0	10	0
stmts	91:5	91:13	9	
goto	91:5	91:13	10	bad
water	91:10	0:0	11	bad
water	92:4	0:0	8	n
op	92:6	0:0	8	=
op	92:8	0:0	8	*
water	92:9	0:0	8	bp
op	92:11	0:0	8	++
water	92:13	0:0	8	;
water	93:4	0:0	8	cc
op	93:6	0:0	8	--
water	93:8	0:0	8	;
water	94:3	0:0	8	}
break	95:3	95:8	6	
water	96:2	0:0	6	}
water	97:2	0:0	6	}
water	98:1	0:0	4	}
water	99:1	0:0	2	tif
op	99:4	0:0	2	->
water	99:6	0:0	2	tif_rawcp
op	99:16	0:0	2	=
water	99:18	0:0	2	(
water	99:19	0:0	2	uint8
op	99:24	0:0	2	*
water	99:25	0:0	2	)
water	99:27	0:0	2	bp
water	99:29	0:0	2	;
water	100:1	0:0	2	tif
op	100:4	0:0	2	->
water	100:6	0:0	2	tif_rawcc
op	100:16	0:0	2	=
water	100:18	0:0	2	cc
water	100:20	0:0	2	;
return	101:1	101:11	2	(1)
water	101:8	0:0	3	(
water	101:9	0:0	3	1
water	101:10	0:0	3	)
label	102:0	102:3	2	bad :
call	103:1	104:24	2	TIFFErrorExt
arg	103:14	103:33	3	tif->tif_clientdata
water	103:14	0:0	4	tif
op	103:17	0:0	4	->
water	103:19	0:0	4	tif_clientdata
arg	103:35	103:41	3	module
water	103:35	0:0	4	module
arg	103:43	103:77	3	"Not enough data for scanline %ld"
water	103:43	0:0	4	"Not enough data for scanline %ld"
arg	104:5	104:24	3	(long)tif->tif_row
water	104:5	0:0	4	(
water	104:6	0:0	4	long
water	104:10	0:0	4	)
water	104:12	0:0	4	tif
op	104:15	0:0	4	->
water	104:17	0:0	4	tif_row
water	104:25	0:0	2	;
return	105:1	105:11	2	(0)
water	105:8	0:0	3	(
water	105:9	0:0	3	0
water	105:10	0:0	3	)

func	2:0	370:2	0	static int	loadImage
params	3:9	0:0	1	
param	3:10	3:18	2	TIFF *	in
param	3:20	3:44	2	struct image_data *	image
param	3:46	3:68	2	struct dump_opts *	dump
param	3:70	3:94	2	unsigned char * *	read_ptr
stmnts	0:0	369:12	1	
decl	5:2	5:12	2	uint32	i
decl	6:2	6:33	2	float	xres
op	6:16	0:0	2	=
water	6:18	0:0	2	0
op	6:19	0:0	2	.
water	6:20	0:0	2	0
water	6:21	0:0	2	,
decl	6:2	6:33	2	float	yres
op	6:28	0:0	2	=
water	6:30	0:0	2	0
op	6:31	0:0	2	.
water	6:32	0:0	2	0
decl	7:2	7:46	2	uint16	nstrips
op	7:19	0:0	2	=
water	7:21	0:0	2	0
water	7:22	0:0	2	,
decl	7:2	7:46	2	uint16	ntiles
op	7:31	0:0	2	=
water	7:33	0:0	2	0
water	7:34	0:0	2	,
decl	7:2	7:46	2	uint16	planar
op	7:43	0:0	2	=
water	7:45	0:0	2	0
decl	8:2	8:41	2	uint16	bps
op	8:15	0:0	2	=
water	8:17	0:0	2	0
water	8:18	0:0	2	,
decl	8:2	8:41	2	uint16	spp
op	8:24	0:0	2	=
water	8:26	0:0	2	0
water	8:27	0:0	2	,
decl	8:2	8:41	2	uint16	res_unit
op	8:38	0:0	2	=
water	8:40	0:0	2	0
decl	9:2	9:26	2	uint16	orientation
op	9:23	0:0	2	=
water	9:25	0:0	2	0
decl	10:2	10:55	2	uint16	input_compression
op	10:29	0:0	2	=
water	10:31	0:0	2	0
water	10:32	0:0	2	,
decl	10:2	10:55	2	uint16	input_photometric
op	10:52	0:0	2	=
water	10:54	0:0	2	0
decl	11:2	11:46	2	uint16	subsampling_horiz
water	11:28	0:0	2	,
decl	11:2	11:46	2	uint16	subsampling_vert
decl	12:2	12:32	2	uint32	width
op	12:17	0:0	2	=
water	12:19	0:0	2	0
water	12:20	0:0	2	,
decl	12:2	12:32	2	uint32	length
op	12:29	0:0	2	=
water	12:31	0:0	2	0
decl	13:2	13:65	2	uint32	stsize
op	13:18	0:0	2	=
water	13:20	0:0	2	0
water	13:21	0:0	2	,
decl	13:2	13:65	2	uint32	tlsize
op	13:30	0:0	2	=
water	13:32	0:0	2	0
water	13:33	0:0	2	,
decl	13:2	13:65	2	uint32	buffsize
op	13:44	0:0	2	=
water	13:46	0:0	2	0
water	13:47	0:0	2	,
decl	13:2	13:65	2	uint32	scanlinesize
op	13:62	0:0	2	=
water	13:64	0:0	2	0
decl	14:2	14:25	2	uint32	tw
op	14:14	0:0	2	=
water	14:16	0:0	2	0
water	14:17	0:0	2	,
decl	14:2	14:25	2	uint32	tl
op	14:22	0:0	2	=
water	14:24	0:0	2	0
decl	15:2	15:27	2	uint32	tile_rowsize
op	15:24	0:0	2	=
water	15:26	0:0	2	0
decl	16:2	16:33	2	unsigned char	*read_buff
op	16:27	0:0	2	=
water	16:29	0:0	2	NULL
decl	17:2	17:33	2	unsigned char	*new_buff
op	17:27	0:0	2	=
water	17:29	0:0	2	NULL
decl	18:2	18:23	2	int	readunit
op	18:20	0:0	2	=
water	18:22	0:0	2	0
water	19:2	0:0	2	static
water	19:11	0:0	2	uint32
water	19:19	0:0	2	prev_readsize
op	19:33	0:0	2	=
water	19:35	0:0	2	0
water	19:36	0:0	2	;
call	21:2	21:55	2	TIFFGetFieldDefaulted
arg	21:24	21:26	3	in
water	21:24	0:0	4	in
arg	21:28	21:49	3	TIFFTAG_BITSPERSAMPLE
water	21:28	0:0	4	TIFFTAG_BITSPERSAMPLE
arg	21:51	21:55	3	&bps
op	21:51	0:0	4	&
water	21:52	0:0	4	bps
water	21:56	0:0	2	;
call	22:2	22:57	2	TIFFGetFieldDefaulted
arg	22:24	22:26	3	in
water	22:24	0:0	4	in
arg	22:28	22:51	3	TIFFTAG_SAMPLESPERPIXEL
water	22:28	0:0	4	TIFFTAG_SAMPLESPERPIXEL
arg	22:53	22:57	3	&spp
op	22:53	0:0	4	&
water	22:54	0:0	4	spp
water	22:58	0:0	2	;
call	23:2	23:57	2	TIFFGetFieldDefaulted
arg	23:24	23:26	3	in
water	23:24	0:0	4	in
arg	23:28	23:48	3	TIFFTAG_PLANARCONFIG
water	23:28	0:0	4	TIFFTAG_PLANARCONFIG
arg	23:50	23:57	3	&planar
op	23:50	0:0	4	&
water	23:51	0:0	4	planar
water	23:58	0:0	2	;
call	24:2	24:61	2	TIFFGetFieldDefaulted
arg	24:24	24:26	3	in
water	24:24	0:0	4	in
arg	24:28	24:47	3	TIFFTAG_ORIENTATION
water	24:28	0:0	4	TIFFTAG_ORIENTATION
arg	24:49	24:61	3	&orientation
op	24:49	0:0	4	&
water	24:50	0:0	4	orientation
water	24:62	0:0	2	;
if	25:2	26:70	2	(!TIFFGetFieldDefaulted (in ,TIFFTAG_PHOTOMETRIC ,& input_photometric ))
cond	25:6	25:73	3	!TIFFGetFieldDefaulted (in ,TIFFTAG_PHOTOMETRIC ,& input_photometric )
op	25:6	0:0	4	!
call	25:8	25:73	4	TIFFGetFieldDefaulted
arg	25:30	25:32	5	in
water	25:30	0:0	6	in
arg	25:34	25:53	5	TIFFTAG_PHOTOMETRIC
water	25:34	0:0	6	TIFFTAG_PHOTOMETRIC
arg	25:55	25:73	5	&input_photometric
op	25:55	0:0	6	&
water	25:56	0:0	6	input_photometric
stmts	26:4	26:70	3	
call	26:4	26:69	4	TIFFError
arg	26:14	26:25	5	"loadImage"
water	26:14	0:0	6	"loadImage"
arg	26:26	26:69	5	"Image lacks Photometric interpreation tag"
water	26:26	0:0	6	"Image lacks Photometric interpreation tag"
water	26:70	0:0	4	;
if	27:2	28:56	2	(!TIFFGetField (in ,TIFFTAG_IMAGEWIDTH ,& width ))
cond	27:6	27:52	3	!TIFFGetField (in ,TIFFTAG_IMAGEWIDTH ,& width )
op	27:6	0:0	4	!
call	27:8	27:52	4	TIFFGetField
arg	27:21	27:23	5	in
water	27:21	0:0	6	in
arg	27:25	27:43	5	TIFFTAG_IMAGEWIDTH
water	27:25	0:0	6	TIFFTAG_IMAGEWIDTH
arg	27:46	27:52	5	&width
op	27:46	0:0	6	&
water	27:47	0:0	6	width
stmts	28:4	28:56	3	
call	28:4	28:55	4	TIFFError
arg	28:14	28:25	5	"loadimage"
water	28:14	0:0	6	"loadimage"
arg	28:26	28:55	5	"Image lacks image width tag"
water	28:26	0:0	6	"Image lacks image width tag"
water	28:56	0:0	4	;
if	29:2	30:57	2	(!TIFFGetField (in ,TIFFTAG_IMAGELENGTH ,& length ))
cond	29:5	29:52	3	!TIFFGetField (in ,TIFFTAG_IMAGELENGTH ,& length )
op	29:5	0:0	4	!
call	29:7	29:52	4	TIFFGetField
arg	29:20	29:22	5	in
water	29:20	0:0	6	in
arg	29:24	29:43	5	TIFFTAG_IMAGELENGTH
water	29:24	0:0	6	TIFFTAG_IMAGELENGTH
arg	29:45	29:52	5	&length
op	29:45	0:0	6	&
water	29:46	0:0	6	length
stmts	30:4	30:57	3	
call	30:4	30:56	4	TIFFError
arg	30:14	30:25	5	"loadimage"
water	30:14	0:0	6	"loadimage"
arg	30:26	30:56	5	"Image lacks image length tag"
water	30:26	0:0	6	"Image lacks image length tag"
water	30:57	0:0	4	;
call	31:2	31:54	2	TIFFGetFieldDefaulted
arg	31:24	31:26	3	in
water	31:24	0:0	4	in
arg	31:28	31:47	3	TIFFTAG_XRESOLUTION
water	31:28	0:0	4	TIFFTAG_XRESOLUTION
arg	31:49	31:54	3	&xres
op	31:49	0:0	4	&
water	31:50	0:0	4	xres
water	31:55	0:0	2	;
call	32:2	32:54	2	TIFFGetFieldDefaulted
arg	32:24	32:26	3	in
water	32:24	0:0	4	in
arg	32:28	32:47	3	TIFFTAG_YRESOLUTION
water	32:28	0:0	4	TIFFTAG_YRESOLUTION
arg	32:49	32:54	3	&yres
op	32:49	0:0	4	&
water	32:50	0:0	4	yres
water	32:55	0:0	2	;
if	33:2	34:27	2	(!TIFFGetFieldDefaulted (in ,TIFFTAG_RESOLUTIONUNIT ,& res_unit ))
cond	33:6	33:66	3	!TIFFGetFieldDefaulted (in ,TIFFTAG_RESOLUTIONUNIT ,& res_unit )
op	33:6	0:0	4	!
call	33:7	33:66	4	TIFFGetFieldDefaulted
arg	33:29	33:31	5	in
water	33:29	0:0	6	in
arg	33:33	33:55	5	TIFFTAG_RESOLUTIONUNIT
water	33:33	0:0	6	TIFFTAG_RESOLUTIONUNIT
arg	33:57	33:66	5	&res_unit
op	33:57	0:0	6	&
water	33:58	0:0	6	res_unit
stmts	34:4	34:27	3	
water	34:4	0:0	4	res_unit
op	34:13	0:0	4	=
water	34:15	0:0	4	RESUNIT_INCH
water	34:27	0:0	4	;
if	35:2	36:40	2	(!TIFFGetField (in ,TIFFTAG_COMPRESSION ,& input_compression ))
cond	35:6	35:63	3	!TIFFGetField (in ,TIFFTAG_COMPRESSION ,& input_compression )
op	35:6	0:0	4	!
call	35:7	35:63	4	TIFFGetField
arg	35:20	35:22	5	in
water	35:20	0:0	6	in
arg	35:24	35:43	5	TIFFTAG_COMPRESSION
water	35:24	0:0	6	TIFFTAG_COMPRESSION
arg	35:45	35:63	5	&input_compression
op	35:45	0:0	6	&
water	35:46	0:0	6	input_compression
stmts	36:4	36:40	3	
water	36:4	0:0	4	input_compression
op	36:22	0:0	4	=
water	36:24	0:0	4	COMPRESSION_NONE
water	36:40	0:0	4	;
decl	39:2	39:24	2	char	compressionid[16]
switch	41:2	103:4	2	(input_compression)
cond	41:10	41:10	3	input_compression
water	41:10	0:0	4	input_compression
stmts	42:4	103:4	3	
water	42:4	0:0	4	{
label	43:4	43:25	4	case COMPRESSION_NONE :
call	44:2	44:36	4	strcpy
arg	44:10	44:23	5	compressionid
water	44:10	0:0	6	compressionid
arg	44:25	44:36	5	"None/dump"
water	44:25	0:0	6	"None/dump"
water	44:37	0:0	4	;
break	45:9	45:14	4	
label	46:4	46:29	4	case COMPRESSION_CCITTRLE :
call	47:2	47:38	4	strcpy
arg	47:10	47:23	5	compressionid
water	47:10	0:0	6	compressionid
arg	47:25	47:38	5	"Huffman RLE"
water	47:25	0:0	6	"Huffman RLE"
water	47:39	0:0	4	;
break	48:9	48:14	4	
label	49:4	49:30	4	case COMPRESSION_CCITTFAX3 :
call	50:2	50:37	4	strcpy
arg	50:10	50:23	5	compressionid
water	50:10	0:0	6	compressionid
arg	50:25	50:37	5	"Group3 Fax"
water	50:25	0:0	6	"Group3 Fax"
water	50:38	0:0	4	;
break	51:9	51:14	4	
label	52:4	52:30	4	case COMPRESSION_CCITTFAX4 :
call	53:2	53:37	4	strcpy
arg	53:10	53:23	5	compressionid
water	53:10	0:0	6	compressionid
arg	53:25	53:37	5	"Group4 Fax"
water	53:25	0:0	6	"Group4 Fax"
water	53:38	0:0	4	;
break	54:9	54:14	4	
label	55:4	55:24	4	case COMPRESSION_LZW :
call	56:2	56:30	4	strcpy
arg	56:10	56:23	5	compressionid
water	56:10	0:0	6	compressionid
arg	56:25	56:30	5	"LZW"
water	56:25	0:0	6	"LZW"
water	56:31	0:0	4	;
break	57:9	57:14	4	
label	58:4	58:26	4	case COMPRESSION_OJPEG :
call	59:2	59:35	4	strcpy
arg	59:10	59:23	5	compressionid
water	59:10	0:0	6	compressionid
arg	59:25	59:35	5	"Old Jpeg"
water	59:25	0:0	6	"Old Jpeg"
water	59:36	0:0	4	;
break	60:9	60:14	4	
label	61:4	61:25	4	case COMPRESSION_JPEG :
call	62:2	62:35	4	strcpy
arg	62:10	62:23	5	compressionid
water	62:10	0:0	6	compressionid
arg	62:25	62:35	5	"New Jpeg"
water	62:25	0:0	6	"New Jpeg"
water	62:36	0:0	4	;
break	63:9	63:14	4	
label	64:4	64:25	4	case COMPRESSION_NEXT :
call	65:2	65:35	4	strcpy
arg	65:10	65:23	5	compressionid
water	65:10	0:0	6	compressionid
arg	65:25	65:35	5	"Next RLE"
water	65:25	0:0	6	"Next RLE"
water	65:36	0:0	4	;
break	66:9	66:14	4	
label	67:4	67:30	4	case COMPRESSION_CCITTRLEW :
call	68:2	68:35	4	strcpy
arg	68:10	68:23	5	compressionid
water	68:10	0:0	6	compressionid
arg	68:25	68:35	5	"CITTRLEW"
water	68:25	0:0	6	"CITTRLEW"
water	68:36	0:0	4	;
break	69:9	69:14	4	
label	70:4	70:29	4	case COMPRESSION_PACKBITS :
call	71:2	71:39	4	strcpy
arg	71:10	71:23	5	compressionid
water	71:10	0:0	6	compressionid
arg	71:25	71:39	5	"Mac Packbits"
water	71:25	0:0	6	"Mac Packbits"
water	71:40	0:0	4	;
break	72:9	72:14	4	
label	73:4	73:32	4	case COMPRESSION_THUNDERSCAN :
call	74:2	74:38	4	strcpy
arg	74:10	74:23	5	compressionid
water	74:10	0:0	6	compressionid
arg	74:25	74:38	5	"Thunderscan"
water	74:25	0:0	6	"Thunderscan"
water	74:39	0:0	4	;
break	75:9	75:14	4	
label	76:4	76:29	4	case COMPRESSION_IT8CTPAD :
call	77:2	77:37	4	strcpy
arg	77:10	77:23	5	compressionid
water	77:10	0:0	6	compressionid
arg	77:25	77:37	5	"IT8 padded"
water	77:25	0:0	6	"IT8 padded"
water	77:38	0:0	4	;
break	78:9	78:14	4	
label	79:4	79:26	4	case COMPRESSION_IT8LW :
call	80:2	80:34	4	strcpy
arg	80:10	80:23	5	compressionid
water	80:10	0:0	6	compressionid
arg	80:25	80:34	5	"IT8 RLE"
water	80:25	0:0	6	"IT8 RLE"
water	80:35	0:0	4	;
break	81:9	81:14	4	
label	82:4	82:26	4	case COMPRESSION_IT8MP :
call	83:2	83:35	4	strcpy
arg	83:10	83:23	5	compressionid
water	83:10	0:0	6	compressionid
arg	83:25	83:35	5	"IT8 mono"
water	83:25	0:0	6	"IT8 mono"
water	83:36	0:0	4	;
break	84:9	84:14	4	
label	85:4	85:26	4	case COMPRESSION_IT8BL :
call	86:2	86:38	4	strcpy
arg	86:10	86:23	5	compressionid
water	86:10	0:0	6	compressionid
arg	86:25	86:38	5	"IT8 lineart"
water	86:25	0:0	6	"IT8 lineart"
water	86:39	0:0	4	;
break	87:9	87:14	4	
label	88:4	88:30	4	case COMPRESSION_PIXARFILM :
call	89:2	89:39	4	strcpy
arg	89:10	89:23	5	compressionid
water	89:10	0:0	6	compressionid
arg	89:25	89:39	5	"Pixar 10 bit"
water	89:25	0:0	6	"Pixar 10 bit"
water	89:40	0:0	4	;
break	90:9	90:14	4	
label	91:4	91:29	4	case COMPRESSION_PIXARLOG :
call	92:2	92:38	4	strcpy
arg	92:10	92:23	5	compressionid
water	92:10	0:0	6	compressionid
arg	92:25	92:38	5	"Pixar 11bit"
water	92:25	0:0	6	"Pixar 11bit"
water	92:39	0:0	4	;
break	93:9	93:14	4	
label	94:4	94:28	4	case COMPRESSION_DEFLATE :
call	95:2	95:34	4	strcpy
arg	95:10	95:23	5	compressionid
water	95:10	0:0	6	compressionid
arg	95:25	95:34	5	"Deflate"
water	95:25	0:0	6	"Deflate"
water	95:35	0:0	4	;
break	96:9	96:14	4	
label	97:4	97:34	4	case COMPRESSION_ADOBE_DEFLATE :
call	98:2	98:40	4	strcpy
arg	98:10	98:23	5	compressionid
water	98:10	0:0	6	compressionid
arg	98:25	98:40	5	"Adobe deflate"
water	98:25	0:0	6	"Adobe deflate"
water	98:41	0:0	4	;
break	99:9	99:14	4	
label	100:4	100:11	4	default :
call	101:2	101:39	4	strcpy
arg	101:10	101:23	5	compressionid
water	101:10	0:0	6	compressionid
arg	101:25	101:39	5	"None/unknown"
water	101:25	0:0	6	"None/unknown"
water	101:40	0:0	4	;
break	102:9	102:14	4	
water	103:4	0:0	4	}
call	104:2	104:62	2	TIFFError
arg	104:12	104:23	3	"loadImage"
water	104:12	0:0	4	"loadImage"
arg	104:25	104:47	3	"Input compression %s"
water	104:25	0:0	4	"Input compression %s"
arg	104:49	104:62	3	compressionid
water	104:49	0:0	4	compressionid
water	104:63	0:0	2	;
water	107:2	0:0	2	scanlinesize
op	107:15	0:0	2	=
call	107:17	107:36	2	TIFFScanlineSize
arg	107:34	107:36	3	in
water	107:34	0:0	4	in
water	107:37	0:0	2	;
water	108:2	0:0	2	image
op	108:7	0:0	2	->
water	108:9	0:0	2	bps
op	108:13	0:0	2	=
water	108:15	0:0	2	bps
water	108:18	0:0	2	;
water	109:2	0:0	2	image
op	109:7	0:0	2	->
water	109:9	0:0	2	spp
op	109:13	0:0	2	=
water	109:15	0:0	2	spp
water	109:18	0:0	2	;
water	110:2	0:0	2	image
op	110:7	0:0	2	->
water	110:9	0:0	2	planar
op	110:16	0:0	2	=
water	110:18	0:0	2	planar
water	110:24	0:0	2	;
water	111:2	0:0	2	image
op	111:7	0:0	2	->
water	111:9	0:0	2	width
op	111:15	0:0	2	=
water	111:17	0:0	2	width
water	111:22	0:0	2	;
water	112:2	0:0	2	image
op	112:7	0:0	2	->
water	112:9	0:0	2	length
op	112:16	0:0	2	=
water	112:18	0:0	2	length
water	112:24	0:0	2	;
water	113:2	0:0	2	image
op	113:7	0:0	2	->
water	113:9	0:0	2	xres
op	113:14	0:0	2	=
water	113:16	0:0	2	xres
water	113:20	0:0	2	;
water	114:2	0:0	2	image
op	114:7	0:0	2	->
water	114:9	0:0	2	yres
op	114:14	0:0	2	=
water	114:16	0:0	2	yres
water	114:20	0:0	2	;
water	115:2	0:0	2	image
op	115:7	0:0	2	->
water	115:9	0:0	2	res_unit
op	115:18	0:0	2	=
water	115:20	0:0	2	res_unit
water	115:28	0:0	2	;
water	116:2	0:0	2	image
op	116:7	0:0	2	->
water	116:9	0:0	2	compression
op	116:21	0:0	2	=
water	116:23	0:0	2	input_compression
water	116:40	0:0	2	;
water	117:2	0:0	2	image
op	117:7	0:0	2	->
water	117:9	0:0	2	photometric
op	117:21	0:0	2	=
water	117:23	0:0	2	input_photometric
water	117:40	0:0	2	;
decl	119:2	119:24	2	char	photometricid[12]
switch	121:2	162:4	2	(input_photometric)
cond	121:10	121:10	3	input_photometric
water	121:10	0:0	4	input_photometric
stmts	122:4	162:4	3	
water	122:4	0:0	4	{
label	123:4	123:31	4	case PHOTOMETRIC_MINISWHITE :
call	124:9	124:44	4	strcpy
arg	124:17	124:30	5	photometricid
water	124:17	0:0	6	photometricid
arg	124:32	124:44	5	"MinIsWhite"
water	124:32	0:0	6	"MinIsWhite"
water	124:45	0:0	4	;
break	125:9	125:14	4	
label	126:4	126:31	4	case PHOTOMETRIC_MINISBLACK :
call	127:9	127:44	4	strcpy
arg	127:17	127:30	5	photometricid
water	127:17	0:0	6	photometricid
arg	127:32	127:44	5	"MinIsBlack"
water	127:32	0:0	6	"MinIsBlack"
water	127:45	0:0	4	;
break	128:9	128:14	4	
label	129:4	129:24	4	case PHOTOMETRIC_RGB :
call	130:9	130:37	4	strcpy
arg	130:17	130:30	5	photometricid
water	130:17	0:0	6	photometricid
arg	130:32	130:37	5	"RGB"
water	130:32	0:0	6	"RGB"
water	130:38	0:0	4	;
break	131:9	131:14	4	
label	132:4	132:28	4	case PHOTOMETRIC_PALETTE :
call	133:9	133:41	4	strcpy
arg	133:17	133:30	5	photometricid
water	133:17	0:0	6	photometricid
arg	133:32	133:41	5	"Palette"
water	133:32	0:0	6	"Palette"
water	133:42	0:0	4	;
break	134:9	134:14	4	
label	135:4	135:25	4	case PHOTOMETRIC_MASK :
call	136:9	136:38	4	strcpy
arg	136:17	136:30	5	photometricid
water	136:17	0:0	6	photometricid
arg	136:32	136:38	5	"Mask"
water	136:32	0:0	6	"Mask"
water	136:39	0:0	4	;
break	137:9	137:14	4	
label	138:4	138:30	4	case PHOTOMETRIC_SEPARATED :
call	139:9	139:43	4	strcpy
arg	139:17	139:30	5	photometricid
water	139:17	0:0	6	photometricid
arg	139:32	139:43	5	"Separated"
water	139:32	0:0	6	"Separated"
water	139:44	0:0	4	;
break	140:9	140:14	4	
label	141:4	141:26	4	case PHOTOMETRIC_YCBCR :
call	142:9	142:39	4	strcpy
arg	142:17	142:30	5	photometricid
water	142:17	0:0	6	photometricid
arg	142:32	142:39	5	"YCBCR"
water	142:32	0:0	6	"YCBCR"
water	142:40	0:0	4	;
break	143:9	143:14	4	
label	144:4	144:27	4	case PHOTOMETRIC_CIELAB :
call	145:9	145:40	4	strcpy
arg	145:17	145:30	5	photometricid
water	145:17	0:0	6	photometricid
arg	145:32	145:40	5	"CIELab"
water	145:32	0:0	6	"CIELab"
water	145:41	0:0	4	;
break	146:9	146:14	4	
label	147:4	147:27	4	case PHOTOMETRIC_ICCLAB :
call	148:9	148:40	4	strcpy
arg	148:17	148:30	5	photometricid
water	148:17	0:0	6	photometricid
arg	148:32	148:40	5	"ICCLab"
water	148:32	0:0	6	"ICCLab"
water	148:41	0:0	4	;
break	149:9	149:14	4	
label	150:4	150:27	4	case PHOTOMETRIC_ITULAB :
call	151:9	151:40	4	strcpy
arg	151:17	151:30	5	photometricid
water	151:17	0:0	6	photometricid
arg	151:32	151:40	5	"ITULab"
water	151:32	0:0	6	"ITULab"
water	151:41	0:0	4	;
break	152:9	152:14	4	
label	153:4	153:25	4	case PHOTOMETRIC_LOGL :
call	154:9	154:38	4	strcpy
arg	154:17	154:30	5	photometricid
water	154:17	0:0	6	photometricid
arg	154:32	154:38	5	"LogL"
water	154:32	0:0	6	"LogL"
water	154:39	0:0	4	;
break	155:9	155:14	4	
label	156:4	156:27	4	case PHOTOMETRIC_LOGLUV :
call	157:9	157:40	4	strcpy
arg	157:17	157:30	5	photometricid
water	157:17	0:0	6	photometricid
arg	157:32	157:40	5	"LOGLuv"
water	157:32	0:0	6	"LOGLuv"
water	157:41	0:0	4	;
break	158:9	158:14	4	
label	159:4	159:11	4	default :
call	160:9	160:41	4	strcpy
arg	160:17	160:30	5	photometricid
water	160:17	0:0	6	photometricid
arg	160:32	160:41	5	"Unknown"
water	160:32	0:0	6	"Unknown"
water	160:42	0:0	4	;
break	161:9	161:14	4	
water	162:4	0:0	4	}
call	163:2	163:77	2	TIFFError
arg	163:12	163:23	3	"loadImage"
water	163:12	0:0	4	"loadImage"
arg	163:25	163:62	3	"Input photometric interpretation %s"
water	163:25	0:0	4	"Input photometric interpretation %s"
arg	163:64	163:77	3	photometricid
water	163:64	0:0	4	photometricid
water	163:78	0:0	2	;
water	166:2	0:0	2	image
op	166:7	0:0	2	->
water	166:9	0:0	2	orientation
op	166:21	0:0	2	=
water	166:23	0:0	2	orientation
water	166:34	0:0	2	;
switch	167:2	197:3	2	(orientation)
cond	167:10	167:10	3	orientation
water	167:10	0:0	4	orientation
stmts	168:4	197:3	3	
water	168:4	0:0	4	{
label	169:4	169:10	4	case 0 :
label	170:4	170:28	4	case ORIENTATION_TOPLEFT :
water	171:9	0:0	4	image
op	171:14	0:0	4	->
water	171:16	0:0	4	adjustments
op	171:28	0:0	4	=
water	171:30	0:0	4	0
water	171:31	0:0	4	;
break	172:2	172:7	4	
label	173:4	173:29	4	case ORIENTATION_TOPRIGHT :
water	174:9	0:0	4	image
op	174:14	0:0	4	->
water	174:16	0:0	4	adjustments
op	174:28	0:0	4	=
water	174:30	0:0	4	MIRROR_HORIZ
water	174:42	0:0	4	;
break	175:2	175:7	4	
label	176:4	176:29	4	case ORIENTATION_BOTRIGHT :
water	177:9	0:0	4	image
op	177:14	0:0	4	->
water	177:16	0:0	4	adjustments
op	177:28	0:0	4	=
water	177:30	0:0	4	ROTATECW_180
water	177:42	0:0	4	;
break	178:2	178:7	4	
label	179:4	179:28	4	case ORIENTATION_BOTLEFT :
water	180:9	0:0	4	image
op	180:14	0:0	4	->
water	180:16	0:0	4	adjustments
op	180:28	0:0	4	=
water	180:30	0:0	4	MIRROR_VERT
water	180:41	0:0	4	;
break	181:2	181:7	4	
label	182:4	182:28	4	case ORIENTATION_LEFTTOP :
water	183:9	0:0	4	image
op	183:14	0:0	4	->
water	183:16	0:0	4	adjustments
op	183:28	0:0	4	=
water	183:30	0:0	4	MIRROR_VERT
op	183:42	0:0	4	|
water	183:44	0:0	4	ROTATECW_90
water	183:55	0:0	4	;
break	184:2	184:7	4	
label	185:4	185:29	4	case ORIENTATION_RIGHTTOP :
water	186:9	0:0	4	image
op	186:14	0:0	4	->
water	186:16	0:0	4	adjustments
op	186:28	0:0	4	=
water	186:30	0:0	4	ROTATECW_90
water	186:41	0:0	4	;
break	187:2	187:7	4	
label	188:4	188:29	4	case ORIENTATION_RIGHTBOT :
water	189:9	0:0	4	image
op	189:14	0:0	4	->
water	189:16	0:0	4	adjustments
op	189:28	0:0	4	=
water	189:30	0:0	4	MIRROR_VERT
op	189:42	0:0	4	|
water	189:44	0:0	4	ROTATECW_270
water	189:56	0:0	4	;
break	190:2	190:7	4	
label	191:4	191:28	4	case ORIENTATION_LEFTBOT :
water	192:9	0:0	4	image
op	192:14	0:0	4	->
water	192:16	0:0	4	adjustments
op	192:28	0:0	4	=
water	192:30	0:0	4	ROTATECW_270
water	192:42	0:0	4	;
break	193:2	193:7	4	
label	194:4	194:11	4	default :
water	195:9	0:0	4	image
op	195:14	0:0	4	->
water	195:16	0:0	4	adjustments
op	195:28	0:0	4	=
water	195:30	0:0	4	0
water	195:31	0:0	4	;
water	196:9	0:0	4	image
op	196:14	0:0	4	->
water	196:16	0:0	4	orientation
op	196:28	0:0	4	=
water	196:30	0:0	4	ORIENTATION_TOPLEFT
water	196:49	0:0	4	;
water	197:3	0:0	4	}
if	199:2	204:4	2	(( bps == 0 ) || ( spp == 0 ))
cond	199:6	199:29	3	( bps == 0 ) || ( spp == 0 )
water	199:6	0:0	4	(
water	199:7	0:0	4	bps
op	199:11	0:0	4	==
water	199:14	0:0	4	0
water	199:15	0:0	4	)
op	199:17	0:0	4	||
water	199:20	0:0	4	(
water	199:21	0:0	4	spp
op	199:25	0:0	4	==
water	199:28	0:0	4	0
water	199:29	0:0	4	)
stmts	200:4	204:4	3	
water	200:4	0:0	4	{
call	201:4	202:16	4	TIFFError
arg	201:14	201:25	5	"loadImage"
water	201:14	0:0	6	"loadImage"
arg	201:27	201:83	5	"Invalid samples per pixel (%d) or bits per sample (%d)"
water	201:27	0:0	6	"Invalid samples per pixel (%d) or bits per sample (%d)"
arg	202:8	202:11	5	spp
water	202:8	0:0	6	spp
arg	202:13	202:16	5	bps
water	202:13	0:0	6	bps
water	202:17	0:0	4	;
return	203:4	203:15	4	(-1)
water	203:11	0:0	5	(
op	203:12	0:0	5	-
water	203:13	0:0	5	1
water	203:14	0:0	5	)
water	204:4	0:0	4	}
if	206:2	232:4	2	(TIFFIsTiled (in ))
cond	206:6	206:20	3	TIFFIsTiled (in )
call	206:6	206:20	4	TIFFIsTiled
arg	206:18	206:20	5	in
water	206:18	0:0	6	in
stmts	207:4	232:4	3	
water	207:4	0:0	4	{
water	208:4	0:0	4	readunit
op	208:13	0:0	4	=
water	208:15	0:0	4	TILE
water	208:19	0:0	4	;
water	209:4	0:0	4	tlsize
op	209:11	0:0	4	=
call	209:13	209:28	4	TIFFTileSize
arg	209:26	209:28	5	in
water	209:26	0:0	6	in
water	209:29	0:0	4	;
water	210:4	0:0	4	ntiles
op	210:11	0:0	4	=
call	210:13	210:33	4	TIFFNumberOfTiles
arg	210:31	210:33	5	in
water	210:31	0:0	6	in
water	210:34	0:0	4	;
call	211:4	211:43	4	TIFFGetField
arg	211:17	211:19	5	in
water	211:17	0:0	6	in
arg	211:21	211:38	5	TIFFTAG_TILEWIDTH
water	211:21	0:0	6	TIFFTAG_TILEWIDTH
arg	211:40	211:43	5	&tw
op	211:40	0:0	6	&
water	211:41	0:0	6	tw
water	211:44	0:0	4	;
call	212:4	212:44	4	TIFFGetField
arg	212:17	212:19	5	in
water	212:17	0:0	6	in
arg	212:21	212:39	5	TIFFTAG_TILELENGTH
water	212:21	0:0	6	TIFFTAG_TILELENGTH
arg	212:41	212:44	5	&tl
op	212:41	0:0	6	&
water	212:42	0:0	6	tl
water	212:45	0:0	4	;
water	214:4	0:0	4	tile_rowsize
op	214:18	0:0	4	=
call	214:20	214:38	4	TIFFTileRowSize
arg	214:36	214:38	5	in
water	214:36	0:0	6	in
water	214:39	0:0	4	;
water	215:4	0:0	4	buffsize
op	215:13	0:0	4	=
water	215:15	0:0	4	tlsize
op	215:22	0:0	4	*
water	215:24	0:0	4	ntiles
water	215:30	0:0	4	;
if	218:4	226:6	4	(buffsize <( uint32 ) (ntiles * tl * tile_rowsize ))
cond	218:8	218:54	5	buffsize <( uint32 ) (ntiles * tl * tile_rowsize )
water	218:8	0:0	6	buffsize
op	218:17	0:0	6	<
call	218:19	218:54	6	(uint32)
arg	218:28	218:54	7	ntiles*tl*tile_rowsize
water	218:28	0:0	8	ntiles
op	218:35	0:0	8	*
water	218:37	0:0	8	tl
op	218:40	0:0	8	*
water	218:42	0:0	8	tile_rowsize
stmts	219:6	226:6	5	
water	219:6	0:0	6	{
water	220:6	0:0	6	buffsize
op	220:15	0:0	6	=
water	220:17	0:0	6	ntiles
op	220:24	0:0	6	*
water	220:26	0:0	6	tl
op	220:29	0:0	6	*
water	220:31	0:0	6	tile_rowsize
water	220:43	0:0	6	;
call	222:6	224:47	6	TIFFError
arg	222:16	222:27	7	"loadImage"
water	222:16	0:0	8	"loadImage"
arg	223:9	223:80	7	"Tilesize %u is too small, using ntiles * tilelength * tilerowsize %lu"
water	223:9	0:0	8	"Tilesize %u is too small, using ntiles * tilelength * tilerowsize %lu"
arg	224:16	224:22	7	tlsize
water	224:16	0:0	8	tlsize
arg	224:24	224:47	7	(unsignedlong)buffsize
water	224:24	0:0	8	(
water	224:25	0:0	8	unsigned
water	224:34	0:0	8	long
water	224:38	0:0	8	)
water	224:39	0:0	8	buffsize
water	224:48	0:0	6	;
water	226:6	0:0	6	}
if	228:4	231:46	4	(dump -> infile != NULL)
cond	228:8	228:24	5	dump -> infile != NULL
water	228:8	0:0	6	dump
op	228:12	0:0	6	->
water	228:14	0:0	6	infile
op	228:21	0:0	6	!=
water	228:24	0:0	6	NULL
stmts	229:6	231:46	5	
call	229:6	231:45	6	dump_info
arg	229:17	229:29	7	dump->infile
water	229:17	0:0	8	dump
op	229:21	0:0	8	->
water	229:23	0:0	8	infile
arg	229:31	229:43	7	dump->format
water	229:31	0:0	8	dump
op	229:35	0:0	8	->
water	229:37	0:0	8	format
arg	229:45	229:47	7	""
water	229:45	0:0	8	""
arg	230:17	230:71	7	"Tilesize: %u, Number of Tiles: %u, Tile row size: %u"
water	230:17	0:0	8	"Tilesize: %u, Number of Tiles: %u, Tile row size: %u"
arg	231:17	231:23	7	tlsize
water	231:17	0:0	8	tlsize
arg	231:25	231:31	7	ntiles
water	231:25	0:0	8	ntiles
arg	231:33	231:45	7	tile_rowsize
water	231:33	0:0	8	tile_rowsize
water	231:46	0:0	6	;
water	232:4	0:0	4	}
else	233:2	255:4	2
stmts	234:4	255:4	3	
water	234:4	0:0	4	{
water	235:4	0:0	4	readunit
op	235:13	0:0	4	=
water	235:15	0:0	4	STRIP
water	235:20	0:0	4	;
call	236:4	236:65	4	TIFFGetFieldDefaulted
arg	236:26	236:28	5	in
water	236:26	0:0	6	in
arg	236:30	236:50	5	TIFFTAG_ROWSPERSTRIP
water	236:30	0:0	6	TIFFTAG_ROWSPERSTRIP
arg	236:52	236:65	5	&rowsperstrip
op	236:52	0:0	6	&
water	236:53	0:0	6	rowsperstrip
water	236:66	0:0	4	;
water	237:4	0:0	4	stsize
op	237:11	0:0	4	=
call	237:13	237:29	4	TIFFStripSize
arg	237:27	237:29	5	in
water	237:27	0:0	6	in
water	237:30	0:0	4	;
water	238:4	0:0	4	nstrips
op	238:12	0:0	4	=
call	238:14	238:35	4	TIFFNumberOfStrips
arg	238:33	238:35	5	in
water	238:33	0:0	6	in
water	238:36	0:0	4	;
water	239:4	0:0	4	buffsize
op	239:13	0:0	4	=
water	239:15	0:0	4	stsize
op	239:22	0:0	4	*
water	239:24	0:0	4	nstrips
water	239:31	0:0	4	;
if	241:4	249:6	4	(buffsize <( uint32 ) (( ( length * width * spp * bps ) + 7 ) / 8 ))
cond	241:8	241:67	5	buffsize <( uint32 ) (( ( length * width * spp * bps ) + 7 ) / 8 )
water	241:8	0:0	6	buffsize
op	241:17	0:0	6	<
call	241:19	241:67	6	(uint32)
arg	241:29	241:67	7	((length*width*spp*bps)+7)/8
water	241:29	0:0	8	(
water	241:30	0:0	8	(
water	241:31	0:0	8	length
op	241:38	0:0	8	*
water	241:40	0:0	8	width
op	241:46	0:0	8	*
water	241:48	0:0	8	spp
op	241:52	0:0	8	*
water	241:54	0:0	8	bps
water	241:57	0:0	8	)
op	241:59	0:0	8	+
water	241:61	0:0	8	7
water	241:62	0:0	8	)
op	241:64	0:0	8	/
water	241:66	0:0	8	8
stmts	242:6	249:6	5	
water	242:6	0:0	6	{
water	243:6	0:0	6	buffsize
op	243:15	0:0	6	=
water	243:18	0:0	6	(
water	243:19	0:0	6	(
water	243:20	0:0	6	length
op	243:27	0:0	6	*
water	243:29	0:0	6	width
op	243:35	0:0	6	*
water	243:37	0:0	6	spp
op	243:41	0:0	6	*
water	243:43	0:0	6	bps
water	243:46	0:0	6	)
op	243:48	0:0	6	+
water	243:50	0:0	6	7
water	243:51	0:0	6	)
op	243:53	0:0	6	/
water	243:55	0:0	6	8
water	243:56	0:0	6	;
call	245:6	247:47	6	TIFFError
arg	245:16	245:27	7	"loadImage"
water	245:16	0:0	8	"loadImage"
arg	246:9	246:85	7	"Stripsize %u is too small, using imagelength * width * spp * bps / 8 = %lu"
water	246:9	0:0	8	"Stripsize %u is too small, using imagelength * width * spp * bps / 8 = %lu"
arg	247:16	247:22	7	stsize
water	247:16	0:0	8	stsize
arg	247:24	247:47	7	(unsignedlong)buffsize
water	247:24	0:0	8	(
water	247:25	0:0	8	unsigned
water	247:34	0:0	8	long
water	247:38	0:0	8	)
water	247:39	0:0	8	buffsize
water	247:48	0:0	6	;
water	249:6	0:0	6	}
if	251:4	254:47	4	(dump -> infile != NULL)
cond	251:8	251:24	5	dump -> infile != NULL
water	251:8	0:0	6	dump
op	251:12	0:0	6	->
water	251:14	0:0	6	infile
op	251:21	0:0	6	!=
water	251:24	0:0	6	NULL
stmts	252:6	254:47	5	
call	252:6	254:46	6	dump_info
arg	252:17	252:29	7	dump->infile
water	252:17	0:0	8	dump
op	252:21	0:0	8	->
water	252:23	0:0	8	infile
arg	252:31	252:43	7	dump->format
water	252:31	0:0	8	dump
op	252:35	0:0	8	->
water	252:37	0:0	8	format
arg	252:45	252:47	7	""
water	252:45	0:0	8	""
arg	253:17	253:93	7	"Stripsize: %u, Number of Strips: %u, Rows per Strip: %u, Scanline size: %u"
water	253:17	0:0	8	"Stripsize: %u, Number of Strips: %u, Rows per Strip: %u, Scanline size: %u"
arg	254:3	254:9	7	stsize
water	254:3	0:0	8	stsize
arg	254:11	254:18	7	nstrips
water	254:11	0:0	8	nstrips
arg	254:20	254:32	7	rowsperstrip
water	254:20	0:0	8	rowsperstrip
arg	254:34	254:46	7	scanlinesize
water	254:34	0:0	8	scanlinesize
water	254:47	0:0	6	;
water	255:4	0:0	4	}
if	257:2	261:4	2	(input_compression == COMPRESSION_JPEG)
cond	257:6	257:27	3	input_compression == COMPRESSION_JPEG
water	257:6	0:0	4	input_compression
op	257:24	0:0	4	==
water	257:27	0:0	4	COMPRESSION_JPEG
stmts	258:4	261:4	3	
water	258:4	0:0	4	{
water	259:4	0:0	4	jpegcolormode
op	259:18	0:0	4	=
water	259:20	0:0	4	JPEGCOLORMODE_RGB
water	259:37	0:0	4	;
call	260:4	260:61	4	TIFFSetField
arg	260:17	260:19	5	in
water	260:17	0:0	6	in
arg	260:21	260:42	5	TIFFTAG_JPEGCOLORMODE
water	260:21	0:0	6	TIFFTAG_JPEGCOLORMODE
arg	260:44	260:61	5	JPEGCOLORMODE_RGB
water	260:44	0:0	6	JPEGCOLORMODE_RGB
water	260:62	0:0	4	;
water	261:4	0:0	4	}
else	263:2	277:4	2
stmts	264:4	277:4	3	
water	264:4	0:0	4	{
if	265:4	276:1	4	(input_photometric == PHOTOMETRIC_YCBCR)
cond	265:8	265:29	5	input_photometric == PHOTOMETRIC_YCBCR
water	265:8	0:0	6	input_photometric
op	265:26	0:0	6	==
water	265:29	0:0	6	PHOTOMETRIC_YCBCR
stmts	266:6	276:1	5	
water	266:6	0:0	6	{
call	267:6	268:51	6	TIFFGetFieldDefaulted
arg	267:28	267:30	7	in
water	267:28	0:0	8	in
arg	267:32	267:56	7	TIFFTAG_YCBCRSUBSAMPLING
water	267:32	0:0	8	TIFFTAG_YCBCRSUBSAMPLING
arg	268:14	268:32	7	&subsampling_horiz
op	268:14	0:0	8	&
water	268:15	0:0	8	subsampling_horiz
arg	268:34	268:51	7	&subsampling_vert
op	268:34	0:0	8	&
water	268:35	0:0	8	subsampling_vert
water	268:52	0:0	6	;
if	269:6	275:8	6	(subsampling_horiz != 1 || subsampling_vert != 1)
cond	269:10	269:56	7	subsampling_horiz != 1 || subsampling_vert != 1
water	269:10	0:0	8	subsampling_horiz
op	269:28	0:0	8	!=
water	269:31	0:0	8	1
op	269:33	0:0	8	||
water	269:36	0:0	8	subsampling_vert
op	269:53	0:0	8	!=
water	269:56	0:0	8	1
stmts	270:8	275:8	7	
water	270:8	0:0	8	{
call	271:1	273:51	8	TIFFError
arg	271:11	271:22	9	"loadImage"
water	271:11	0:0	10	"loadImage"
arg	272:2	272:73	9	"Can't copy/convert subsampled image with subsampling %d horiz %d vert"
water	272:2	0:0	10	"Can't copy/convert subsampled image with subsampling %d horiz %d vert"
arg	273:16	273:33	9	subsampling_horiz
water	273:16	0:0	10	subsampling_horiz
arg	273:35	273:51	9	subsampling_vert
water	273:35	0:0	10	subsampling_vert
water	273:52	0:0	8	;
return	274:8	274:19	8	(-1)
water	274:15	0:0	9	(
op	274:16	0:0	9	-
water	274:17	0:0	9	1
water	274:18	0:0	9	)
water	275:8	0:0	8	}
water	276:1	0:0	6	}
water	277:4	0:0	4	}
water	279:2	0:0	2	read_buff
op	279:12	0:0	2	=
op	279:14	0:0	2	*
water	279:15	0:0	2	read_ptr
water	279:23	0:0	2	;
if	282:2	283:56	2	(! read_buff)
cond	282:6	282:7	3	! read_buff
op	282:6	0:0	4	!
water	282:7	0:0	4	read_buff
stmts	283:4	283:56	3	
water	283:4	0:0	4	read_buff
op	283:14	0:0	4	=
water	283:16	0:0	4	(
water	283:17	0:0	4	unsigned
water	283:26	0:0	4	char
op	283:31	0:0	4	*
water	283:32	0:0	4	)
call	283:33	283:55	4	_TIFFmalloc
arg	283:45	283:55	5	buffsize+3
water	283:45	0:0	6	buffsize
op	283:53	0:0	6	+
water	283:54	0:0	6	3
water	283:56	0:0	4	;
else	284:2	297:4	2
stmts	285:4	297:4	3	
water	285:4	0:0	4	{
if	286:4	296:6	4	(prev_readsize < buffsize)
cond	286:8	286:24	5	prev_readsize < buffsize
water	286:8	0:0	6	prev_readsize
op	286:22	0:0	6	<
water	286:24	0:0	6	buffsize
stmts	287:6	296:6	5	
water	287:6	0:0	6	{
water	288:6	0:0	6	new_buff
op	288:15	0:0	6	=
call	288:17	288:51	6	_TIFFrealloc
arg	288:30	288:39	7	read_buff
water	288:30	0:0	8	read_buff
arg	288:41	288:51	7	buffsize+3
water	288:41	0:0	8	buffsize
op	288:49	0:0	8	+
water	288:50	0:0	8	3
water	288:52	0:0	6	;
if	289:6	293:8	6	(! new_buff)
cond	289:10	289:11	7	! new_buff
op	289:10	0:0	8	!
water	289:11	0:0	8	new_buff
stmts	290:8	293:8	7	
water	290:8	0:0	8	{
call	291:1	291:16	8	free
arg	291:7	291:16	9	read_buff
water	291:7	0:0	10	read_buff
water	291:17	0:0	8	;
water	292:8	0:0	8	read_buff
op	292:18	0:0	8	=
water	292:20	0:0	8	(
water	292:21	0:0	8	unsigned
water	292:30	0:0	8	char
op	292:35	0:0	8	*
water	292:36	0:0	8	)
call	292:37	292:59	8	_TIFFmalloc
arg	292:49	292:59	9	buffsize+3
water	292:49	0:0	10	buffsize
op	292:57	0:0	10	+
water	292:58	0:0	10	3
water	292:60	0:0	8	;
water	293:8	0:0	8	}
else	294:6	295:28	6
stmts	295:8	295:28	7	
water	295:8	0:0	8	read_buff
op	295:18	0:0	8	=
water	295:20	0:0	8	new_buff
water	295:28	0:0	8	;
water	296:6	0:0	6	}
water	297:4	0:0	4	}
if	298:2	302:4	2	(! read_buff)
cond	298:6	298:7	3	! read_buff
op	298:6	0:0	4	!
water	298:7	0:0	4	read_buff
stmts	299:4	302:4	3	
water	299:4	0:0	4	{
call	300:4	300:70	4	TIFFError
arg	300:14	300:25	5	"loadImage"
water	300:14	0:0	6	"loadImage"
arg	300:27	300:70	5	"Unable to allocate/reallocate read buffer"
water	300:27	0:0	6	"Unable to allocate/reallocate read buffer"
water	300:71	0:0	4	;
return	301:4	301:15	4	(-1)
water	301:11	0:0	5	(
op	301:12	0:0	5	-
water	301:13	0:0	5	1
water	301:14	0:0	5	)
water	302:4	0:0	4	}
water	304:2	0:0	2	read_buff
op	304:11	0:0	2	[
water	304:12	0:0	2	buffsize
op	304:20	0:0	2	]
op	304:22	0:0	2	=
water	304:24	0:0	2	0
water	304:25	0:0	2	;
water	305:2	0:0	2	read_buff
op	305:11	0:0	2	[
water	305:12	0:0	2	buffsize
op	305:20	0:0	2	+
water	305:21	0:0	2	1
op	305:22	0:0	2	]
op	305:24	0:0	2	=
water	305:26	0:0	2	0
water	305:27	0:0	2	;
water	306:2	0:0	2	read_buff
op	306:11	0:0	2	[
water	306:12	0:0	2	buffsize
op	306:20	0:0	2	+
water	306:21	0:0	2	2
op	306:22	0:0	2	]
op	306:24	0:0	2	=
water	306:26	0:0	2	0
water	306:27	0:0	2	;
water	308:2	0:0	2	prev_readsize
op	308:16	0:0	2	=
water	308:18	0:0	2	buffsize
water	308:26	0:0	2	;
op	309:2	0:0	2	*
water	309:3	0:0	2	read_ptr
op	309:12	0:0	2	=
water	309:14	0:0	2	read_buff
water	309:23	0:0	2	;
switch	315:2	356:4	2	(readunit)
cond	315:10	315:10	3	readunit
water	315:10	0:0	4	readunit
stmts	315:20	356:4	3	
water	315:20	0:0	4	{
label	316:4	316:14	4	case STRIP :
if	317:9	324:11	4	(planar == PLANARCONFIG_CONTIG)
cond	317:13	317:23	5	planar == PLANARCONFIG_CONTIG
water	317:13	0:0	6	planar
op	317:20	0:0	6	==
water	317:23	0:0	6	PLANARCONFIG_CONTIG
stmts	318:11	324:11	5	
water	318:11	0:0	6	{
if	319:6	323:13	6	(! (readContigStripsIntoBuffer (in ,read_buff ) ))
cond	319:10	319:53	7	! (readContigStripsIntoBuffer (in ,read_buff ) )
op	319:10	0:0	8	!
water	319:11	0:0	8	(
call	319:12	319:52	8	readContigStripsIntoBuffer
arg	319:39	319:41	9	in
water	319:39	0:0	10	in
arg	319:43	319:52	9	read_buff
water	319:43	0:0	10	read_buff
water	319:53	0:0	8	)
stmts	320:6	323:13	7	
water	320:6	0:0	8	{
call	321:6	321:75	8	TIFFError
arg	321:16	321:27	9	"loadImage"
water	321:16	0:0	10	"loadImage"
arg	321:29	321:75	9	"Unable to read contiguous strips into buffer"
water	321:29	0:0	10	"Unable to read contiguous strips into buffer"
water	321:76	0:0	8	;
return	322:6	322:17	8	(-1)
water	322:13	0:0	9	(
op	322:14	0:0	9	-
water	322:15	0:0	9	1
water	322:16	0:0	9	)
water	323:13	0:0	8	}
water	324:11	0:0	6	}
else	325:9	332:11	4
stmts	326:11	332:11	5	
water	326:11	0:0	6	{
if	327:4	331:13	6	(! (readSeparateStripsIntoBuffer (in ,read_buff ,length ,width ,spp ,dump ) ))
cond	327:8	327:79	7	! (readSeparateStripsIntoBuffer (in ,read_buff ,length ,width ,spp ,dump ) )
op	327:8	0:0	8	!
water	327:9	0:0	8	(
call	327:10	327:78	8	readSeparateStripsIntoBuffer
arg	327:39	327:41	9	in
water	327:39	0:0	10	in
arg	327:43	327:52	9	read_buff
water	327:43	0:0	10	read_buff
arg	327:54	327:60	9	length
water	327:54	0:0	10	length
arg	327:62	327:67	9	width
water	327:62	0:0	10	width
arg	327:69	327:72	9	spp
water	327:69	0:0	10	spp
arg	327:74	327:78	9	dump
water	327:74	0:0	10	dump
water	327:79	0:0	8	)
stmts	328:6	331:13	7	
water	328:6	0:0	8	{
call	329:6	329:73	8	TIFFError
arg	329:16	329:27	9	"loadImage"
water	329:16	0:0	10	"loadImage"
arg	329:29	329:73	9	"Unable to read separate strips into buffer"
water	329:29	0:0	10	"Unable to read separate strips into buffer"
water	329:74	0:0	8	;
return	330:6	330:17	8	(-1)
water	330:13	0:0	9	(
op	330:14	0:0	9	-
water	330:15	0:0	9	1
water	330:16	0:0	9	)
water	331:13	0:0	8	}
water	332:11	0:0	6	}
break	333:9	333:14	4	
label	335:4	335:13	4	case TILE :
if	336:9	343:11	4	(planar == PLANARCONFIG_CONTIG)
cond	336:13	336:23	5	planar == PLANARCONFIG_CONTIG
water	336:13	0:0	6	planar
op	336:20	0:0	6	==
water	336:23	0:0	6	PLANARCONFIG_CONTIG
stmts	337:11	343:11	5	
water	337:11	0:0	6	{
if	338:4	342:13	6	(! (readContigTilesIntoBuffer (in ,read_buff ,length ,width ,tw ,tl ,spp ,bps ) ))
cond	338:8	338:83	7	! (readContigTilesIntoBuffer (in ,read_buff ,length ,width ,tw ,tl ,spp ,bps ) )
op	338:8	0:0	8	!
water	338:9	0:0	8	(
call	338:10	338:82	8	readContigTilesIntoBuffer
arg	338:36	338:38	9	in
water	338:36	0:0	10	in
arg	338:40	338:49	9	read_buff
water	338:40	0:0	10	read_buff
arg	338:51	338:57	9	length
water	338:51	0:0	10	length
arg	338:59	338:64	9	width
water	338:59	0:0	10	width
arg	338:66	338:68	9	tw
water	338:66	0:0	10	tw
arg	338:70	338:72	9	tl
water	338:70	0:0	10	tl
arg	338:74	338:77	9	spp
water	338:74	0:0	10	spp
arg	338:79	338:82	9	bps
water	338:79	0:0	10	bps
water	338:83	0:0	8	)
stmts	339:6	342:13	7	
water	339:6	0:0	8	{
call	340:6	340:74	8	TIFFError
arg	340:16	340:27	9	"loadImage"
water	340:16	0:0	10	"loadImage"
arg	340:29	340:74	9	"Unable to read contiguous tiles into buffer"
water	340:29	0:0	10	"Unable to read contiguous tiles into buffer"
water	340:75	0:0	8	;
return	341:6	341:17	8	(-1)
water	341:13	0:0	9	(
op	341:14	0:0	9	-
water	341:15	0:0	9	1
water	341:16	0:0	9	)
water	342:13	0:0	8	}
water	343:11	0:0	6	}
else	344:9	351:11	4
stmts	345:11	351:11	5	
water	345:11	0:0	6	{
if	346:4	350:13	6	(! (readSeparateTilesIntoBuffer (in ,read_buff ,length ,width ,tw ,tl ,spp ,bps ) ))
cond	346:8	346:85	7	! (readSeparateTilesIntoBuffer (in ,read_buff ,length ,width ,tw ,tl ,spp ,bps ) )
op	346:8	0:0	8	!
water	346:9	0:0	8	(
call	346:10	346:84	8	readSeparateTilesIntoBuffer
arg	346:38	346:40	9	in
water	346:38	0:0	10	in
arg	346:42	346:51	9	read_buff
water	346:42	0:0	10	read_buff
arg	346:53	346:59	9	length
water	346:53	0:0	10	length
arg	346:61	346:66	9	width
water	346:61	0:0	10	width
arg	346:68	346:70	9	tw
water	346:68	0:0	10	tw
arg	346:72	346:74	9	tl
water	346:72	0:0	10	tl
arg	346:76	346:79	9	spp
water	346:76	0:0	10	spp
arg	346:81	346:84	9	bps
water	346:81	0:0	10	bps
water	346:85	0:0	8	)
stmts	347:6	350:13	7	
water	347:6	0:0	8	{
call	348:6	348:72	8	TIFFError
arg	348:16	348:27	9	"loadImage"
water	348:16	0:0	10	"loadImage"
arg	348:29	348:72	9	"Unable to read separate tiles into buffer"
water	348:29	0:0	10	"Unable to read separate tiles into buffer"
water	348:73	0:0	8	;
return	349:6	349:17	8	(-1)
water	349:13	0:0	9	(
op	349:14	0:0	9	-
water	349:15	0:0	9	1
water	349:16	0:0	9	)
water	350:13	0:0	8	}
water	351:11	0:0	6	}
break	352:9	352:14	4	
label	353:4	353:11	4	default :
call	353:13	353:67	4	TIFFError
arg	353:23	353:34	5	"loadImage"
water	353:23	0:0	6	"loadImage"
arg	353:36	353:67	5	"Unsupported image file format"
water	353:36	0:0	6	"Unsupported image file format"
water	353:68	0:0	4	;
return	354:10	354:21	4	(-1)
water	354:17	0:0	5	(
op	354:18	0:0	5	-
water	354:19	0:0	5	1
water	354:20	0:0	5	)
break	355:10	355:15	4	
water	356:4	0:0	4	}
if	357:2	368:4	2	(( dump -> infile != NULL ) && ( dump -> level == 2 ))
cond	357:6	357:49	3	( dump -> infile != NULL ) && ( dump -> level == 2 )
water	357:6	0:0	4	(
water	357:7	0:0	4	dump
op	357:11	0:0	4	->
water	357:13	0:0	4	infile
op	357:20	0:0	4	!=
water	357:23	0:0	4	NULL
water	357:27	0:0	4	)
op	357:29	0:0	4	&&
water	357:32	0:0	4	(
water	357:33	0:0	4	dump
op	357:37	0:0	4	->
water	357:39	0:0	4	level
op	357:45	0:0	4	==
water	357:48	0:0	4	2
water	357:49	0:0	4	)
stmts	358:4	368:4	3	
water	358:4	0:0	4	{
call	359:4	361:40	4	dump_info
arg	359:16	359:28	5	dump->infile
water	359:16	0:0	6	dump
op	359:20	0:0	6	->
water	359:22	0:0	6	infile
arg	359:30	359:42	5	dump->format
water	359:30	0:0	6	dump
op	359:34	0:0	6	->
water	359:36	0:0	6	format
arg	359:44	359:55	5	"loadImage"
water	359:44	0:0	6	"loadImage"
arg	360:16	360:70	5	"Image width %d, length %d, Raw image data, %4d bytes"
water	360:16	0:0	6	"Image width %d, length %d, Raw image data, %4d bytes"
arg	361:16	361:21	5	width
water	361:16	0:0	6	width
arg	361:23	361:29	5	length
water	361:23	0:0	6	length
arg	361:32	361:40	5	buffsize
water	361:32	0:0	6	buffsize
water	361:41	0:0	4	;
call	362:4	363:68	4	dump_info
arg	362:16	362:28	5	dump->infile
water	362:16	0:0	6	dump
op	362:20	0:0	6	->
water	362:22	0:0	6	infile
arg	362:30	362:42	5	dump->format
water	362:30	0:0	6	dump
op	362:34	0:0	6	->
water	362:36	0:0	6	format
arg	362:44	362:46	5	""
water	362:44	0:0	6	""
arg	363:16	363:58	5	"Bits per sample %d, Samples per pixel %d"
water	363:16	0:0	6	"Bits per sample %d, Samples per pixel %d"
arg	363:60	363:63	5	bps
water	363:60	0:0	6	bps
arg	363:65	363:68	5	spp
water	363:65	0:0	6	spp
water	363:69	0:0	4	;
for	365:4	367:52	4	(i = 0 ;i < length;i ++)
forinit	365:9	365:14	5	i = 0 ;
water	365:9	0:0	6	i
op	365:11	0:0	6	=
water	365:13	0:0	6	0
water	365:14	0:0	6	;
cond	365:16	365:20	5	i < length
water	365:16	0:0	6	i
op	365:18	0:0	6	<
water	365:20	0:0	6	length
forexpr	365:28	365:29	5	i ++
water	365:28	0:0	6	i
op	365:29	0:0	6	++
stmts	366:6	367:52	5	
call	366:6	367:51	6	dump_buffer
arg	366:18	366:30	7	dump->infile
water	366:18	0:0	8	dump
op	366:22	0:0	8	->
water	366:24	0:0	8	infile
arg	366:32	366:44	7	dump->format
water	366:32	0:0	8	dump
op	366:36	0:0	8	->
water	366:38	0:0	8	format
arg	366:46	366:47	7	1
water	366:46	0:0	8	1
arg	366:49	366:61	7	scanlinesize
water	366:49	0:0	8	scanlinesize
arg	367:18	367:19	7	i
water	367:18	0:0	8	i
arg	367:21	367:51	7	read_buff+(i*scanlinesize)
water	367:21	0:0	8	read_buff
op	367:31	0:0	8	+
water	367:33	0:0	8	(
water	367:34	0:0	8	i
op	367:36	0:0	8	*
water	367:38	0:0	8	scanlinesize
water	367:50	0:0	8	)
water	367:52	0:0	6	;
water	368:4	0:0	4	}
return	369:2	369:12	2	(0)
water	369:9	0:0	3	(
water	369:10	0:0	3	0
water	369:11	0:0	3	)

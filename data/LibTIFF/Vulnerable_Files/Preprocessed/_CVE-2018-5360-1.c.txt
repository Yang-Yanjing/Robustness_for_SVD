func	1:0	542:0	0	static int	_TIFFVSetField
params	2:14	0:0	1	
param	2:15	2:24	2	TIFF *	tif
param	2:26	2:36	2	uint32	tag
param	2:38	2:48	2	va_list	ap
stmnts	4:1	541:11	1	
water	4:1	0:0	2	static
water	4:8	0:0	2	const
water	4:14	0:0	2	char
water	4:19	0:0	2	module
op	4:25	0:0	2	[
op	4:26	0:0	2	]
op	4:28	0:0	2	=
water	4:30	0:0	2	"_TIFFVSetField"
water	4:46	0:0	2	;
decl	6:1	6:34	2	TIFFDirectory	*td
op	6:19	0:0	2	=
op	6:21	0:0	2	&
water	6:22	0:0	2	tif
op	6:25	0:0	2	->
water	6:27	0:0	2	tif_dir
decl	7:1	7:15	2	int	status
op	7:12	0:0	2	=
water	7:14	0:0	2	1
decl	8:1	8:17	2	uint32	v32
water	8:11	0:0	2	,
decl	8:1	8:17	2	uint32	i
water	8:14	0:0	2	,
decl	8:1	8:17	2	uint32	v
decl	9:1	9:8	2	char	*s
decl	10:1	10:57	2	const TIFFField	*fip
op	10:22	0:0	2	=
call	10:24	10:56	3	TIFFFindField
arg	10:38	10:41	4	tif
water	10:38	0:0	5	tif
arg	10:43	10:46	4	tag
water	10:43	0:0	5	tag
arg	10:48	10:56	4	TIFF_ANY
water	10:48	0:0	5	TIFF_ANY
decl	11:1	11:26	2	uint32	standard_tag
op	11:21	0:0	2	=
water	11:23	0:0	2	tag
if	19:1	21:1	2	(fip -> field_bit == FIELD_CUSTOM)
cond	19:5	19:23	3	fip -> field_bit == FIELD_CUSTOM
water	19:5	0:0	4	fip
op	19:8	0:0	4	->
water	19:10	0:0	4	field_bit
op	19:20	0:0	4	==
water	19:23	0:0	4	FIELD_CUSTOM
stmts	19:37	21:1	3	
water	19:37	0:0	4	{
water	20:2	0:0	4	standard_tag
op	20:15	0:0	4	=
water	20:17	0:0	4	0
water	20:18	0:0	4	;
water	21:1	0:0	4	}
switch	23:1	511:1	2	(standard_tag)
cond	23:9	23:9	3	standard_tag
water	23:9	0:0	4	standard_tag
stmts	23:23	511:1	3	
water	23:23	0:0	4	{
label	24:1	24:25	4	case TIFFTAG_SUBFILETYPE :
water	25:2	0:0	4	td
op	25:4	0:0	4	->
water	25:6	0:0	4	td_subfiletype
op	25:21	0:0	4	=
water	25:23	0:0	4	(
water	25:24	0:0	4	uint32
water	25:30	0:0	4	)
call	25:32	25:49	4	va_arg
arg	25:39	25:41	5	ap
water	25:39	0:0	6	ap
arg	25:43	25:49	5	uint32
water	25:43	0:0	6	uint32
water	25:50	0:0	4	;
break	26:2	26:7	4	
label	27:1	27:24	4	case TIFFTAG_IMAGEWIDTH :
water	28:2	0:0	4	td
op	28:4	0:0	4	->
water	28:6	0:0	4	td_imagewidth
op	28:20	0:0	4	=
water	28:22	0:0	4	(
water	28:23	0:0	4	uint32
water	28:29	0:0	4	)
call	28:31	28:48	4	va_arg
arg	28:38	28:40	5	ap
water	28:38	0:0	6	ap
arg	28:42	28:48	5	uint32
water	28:42	0:0	6	uint32
water	28:49	0:0	4	;
break	29:2	29:7	4	
label	30:1	30:25	4	case TIFFTAG_IMAGELENGTH :
water	31:2	0:0	4	td
op	31:4	0:0	4	->
water	31:6	0:0	4	td_imagelength
op	31:21	0:0	4	=
water	31:23	0:0	4	(
water	31:24	0:0	4	uint32
water	31:30	0:0	4	)
call	31:32	31:49	4	va_arg
arg	31:39	31:41	5	ap
water	31:39	0:0	6	ap
arg	31:43	31:49	5	uint32
water	31:43	0:0	6	uint32
water	31:50	0:0	4	;
break	32:2	32:7	4	
label	33:1	33:27	4	case TIFFTAG_BITSPERSAMPLE :
water	34:2	0:0	4	td
op	34:4	0:0	4	->
water	34:6	0:0	4	td_bitspersample
op	34:23	0:0	4	=
water	34:25	0:0	4	(
water	34:26	0:0	4	uint16
water	34:32	0:0	4	)
call	34:34	34:55	4	va_arg
arg	34:41	34:43	5	ap
water	34:41	0:0	6	ap
arg	34:45	34:55	5	uint16_vap
water	34:45	0:0	6	uint16_vap
water	34:56	0:0	4	;
if	42:2	55:2	4	(tif -> tif_flags & TIFF_SWAB)
cond	42:6	42:23	5	tif -> tif_flags & TIFF_SWAB
water	42:6	0:0	6	tif
op	42:9	0:0	6	->
water	42:11	0:0	6	tif_flags
op	42:21	0:0	6	&
water	42:23	0:0	6	TIFF_SWAB
stmts	42:34	55:2	5	
water	42:34	0:0	6	{
if	43:3	44:43	6	(td -> td_bitspersample == 8)
cond	43:7	43:31	7	td -> td_bitspersample == 8
water	43:7	0:0	8	td
op	43:9	0:0	8	->
water	43:11	0:0	8	td_bitspersample
op	43:28	0:0	8	==
water	43:31	0:0	8	8
stmts	44:4	44:43	7	
water	44:4	0:0	8	tif
op	44:7	0:0	8	->
water	44:9	0:0	8	tif_postdecode
op	44:24	0:0	8	=
water	44:26	0:0	8	_TIFFNoPostDecode
water	44:43	0:0	8	;
else	45:3	46:44	6
stmts	45:8	46:44	7	
if	45:8	46:44	8	(td -> td_bitspersample == 16)
cond	45:12	45:36	9	td -> td_bitspersample == 16
water	45:12	0:0	10	td
op	45:14	0:0	10	->
water	45:16	0:0	10	td_bitspersample
op	45:33	0:0	10	==
water	45:36	0:0	10	16
stmts	46:4	46:44	9	
water	46:4	0:0	10	tif
op	46:7	0:0	10	->
water	46:9	0:0	10	tif_postdecode
op	46:24	0:0	10	=
water	46:26	0:0	10	_TIFFSwab16BitData
water	46:44	0:0	10	;
else	47:3	48:44	6
stmts	47:8	48:44	7	
if	47:8	48:44	8	(td -> td_bitspersample == 24)
cond	47:12	47:36	9	td -> td_bitspersample == 24
water	47:12	0:0	10	td
op	47:14	0:0	10	->
water	47:16	0:0	10	td_bitspersample
op	47:33	0:0	10	==
water	47:36	0:0	10	24
stmts	48:4	48:44	9	
water	48:4	0:0	10	tif
op	48:7	0:0	10	->
water	48:9	0:0	10	tif_postdecode
op	48:24	0:0	10	=
water	48:26	0:0	10	_TIFFSwab24BitData
water	48:44	0:0	10	;
else	49:3	50:44	6
stmts	49:8	50:44	7	
if	49:8	50:44	8	(td -> td_bitspersample == 32)
cond	49:12	49:36	9	td -> td_bitspersample == 32
water	49:12	0:0	10	td
op	49:14	0:0	10	->
water	49:16	0:0	10	td_bitspersample
op	49:33	0:0	10	==
water	49:36	0:0	10	32
stmts	50:4	50:44	9	
water	50:4	0:0	10	tif
op	50:7	0:0	10	->
water	50:9	0:0	10	tif_postdecode
op	50:24	0:0	10	=
water	50:26	0:0	10	_TIFFSwab32BitData
water	50:44	0:0	10	;
else	51:3	52:44	6
stmts	51:8	52:44	7	
if	51:8	52:44	8	(td -> td_bitspersample == 64)
cond	51:12	51:36	9	td -> td_bitspersample == 64
water	51:12	0:0	10	td
op	51:14	0:0	10	->
water	51:16	0:0	10	td_bitspersample
op	51:33	0:0	10	==
water	51:36	0:0	10	64
stmts	52:4	52:44	9	
water	52:4	0:0	10	tif
op	52:7	0:0	10	->
water	52:9	0:0	10	tif_postdecode
op	52:24	0:0	10	=
water	52:26	0:0	10	_TIFFSwab64BitData
water	52:44	0:0	10	;
else	53:3	54:44	6
stmts	53:8	54:44	7	
if	53:8	54:44	8	(td -> td_bitspersample == 128)
cond	53:12	53:36	9	td -> td_bitspersample == 128
water	53:12	0:0	10	td
op	53:14	0:0	10	->
water	53:16	0:0	10	td_bitspersample
op	53:33	0:0	10	==
water	53:36	0:0	10	128
stmts	54:4	54:44	9	
water	54:4	0:0	10	tif
op	54:7	0:0	10	->
water	54:9	0:0	10	tif_postdecode
op	54:24	0:0	10	=
water	54:26	0:0	10	_TIFFSwab64BitData
water	54:44	0:0	10	;
water	55:2	0:0	6	}
break	56:2	56:7	4	
label	57:1	57:25	4	case TIFFTAG_COMPRESSION :
water	58:2	0:0	4	v
op	58:4	0:0	4	=
water	58:6	0:0	4	(
water	58:7	0:0	4	uint16
water	58:13	0:0	4	)
call	58:15	58:36	4	va_arg
arg	58:22	58:24	5	ap
water	58:22	0:0	6	ap
arg	58:26	58:36	5	uint16_vap
water	58:26	0:0	6	uint16_vap
water	58:37	0:0	4	;
if	64:2	69:2	4	(TIFFFieldSet (tif ,FIELD_COMPRESSION ))
cond	64:6	64:41	5	TIFFFieldSet (tif ,FIELD_COMPRESSION )
call	64:6	64:41	6	TIFFFieldSet
arg	64:19	64:22	7	tif
water	64:19	0:0	8	tif
arg	64:24	64:41	7	FIELD_COMPRESSION
water	64:24	0:0	8	FIELD_COMPRESSION
stmts	64:44	69:2	5	
water	64:44	0:0	6	{
if	65:3	66:9	6	(( uint32 ) td -> td_compression == v)
cond	65:7	65:37	7	( uint32 ) td -> td_compression == v
water	65:7	0:0	8	(
water	65:8	0:0	8	uint32
water	65:14	0:0	8	)
water	65:15	0:0	8	td
op	65:17	0:0	8	->
water	65:19	0:0	8	td_compression
op	65:34	0:0	8	==
water	65:37	0:0	8	v
stmts	66:4	66:9	7	
break	66:4	66:9	8	
call	67:3	67:26	6	(*tif->tif_cleanup)
arg	67:23	67:26	7	tif
water	67:23	0:0	8	tif
water	67:27	0:0	6	;
water	68:3	0:0	6	tif
op	68:6	0:0	6	->
water	68:8	0:0	6	tif_flags
op	68:18	0:0	6	&=
water	68:21	0:0	6	~TIFF_CODERSETUP
water	68:37	0:0	6	;
water	69:2	0:0	6	}
if	73:2	74:37	4	(( status =TIFFSetCompressionScheme (tif ,v ) ) != 0)
cond	73:6	73:53	5	( status =TIFFSetCompressionScheme (tif ,v ) ) != 0
water	73:6	0:0	6	(
water	73:7	0:0	6	status
op	73:14	0:0	6	=
call	73:16	73:47	6	TIFFSetCompressionScheme
arg	73:41	73:44	7	tif
water	73:41	0:0	8	tif
arg	73:46	73:47	7	v
water	73:46	0:0	8	v
water	73:48	0:0	6	)
op	73:50	0:0	6	!=
water	73:53	0:0	6	0
stmts	74:6	74:37	5	
water	74:6	0:0	6	td
op	74:8	0:0	6	->
water	74:10	0:0	6	td_compression
op	74:25	0:0	6	=
water	74:27	0:0	6	(
water	74:28	0:0	6	uint16
water	74:34	0:0	6	)
water	74:36	0:0	6	v
water	74:37	0:0	6	;
else	75:2	76:16	4
stmts	76:6	76:16	5	
water	76:6	0:0	6	status
op	76:13	0:0	6	=
water	76:15	0:0	6	0
water	76:16	0:0	6	;
break	77:2	77:7	4	
label	78:1	78:25	4	case TIFFTAG_PHOTOMETRIC :
water	79:2	0:0	4	td
op	79:4	0:0	4	->
water	79:6	0:0	4	td_photometric
op	79:21	0:0	4	=
water	79:23	0:0	4	(
water	79:24	0:0	4	uint16
water	79:30	0:0	4	)
call	79:32	79:53	4	va_arg
arg	79:39	79:41	5	ap
water	79:39	0:0	6	ap
arg	79:43	79:53	5	uint16_vap
water	79:43	0:0	6	uint16_vap
water	79:54	0:0	4	;
break	80:2	80:7	4	
label	81:1	81:27	4	case TIFFTAG_THRESHHOLDING :
water	82:2	0:0	4	td
op	82:4	0:0	4	->
water	82:6	0:0	4	td_threshholding
op	82:23	0:0	4	=
water	82:25	0:0	4	(
water	82:26	0:0	4	uint16
water	82:32	0:0	4	)
call	82:34	82:55	4	va_arg
arg	82:41	82:43	5	ap
water	82:41	0:0	6	ap
arg	82:45	82:55	5	uint16_vap
water	82:45	0:0	6	uint16_vap
water	82:56	0:0	4	;
break	83:2	83:7	4	
label	84:1	84:23	4	case TIFFTAG_FILLORDER :
water	85:2	0:0	4	v
op	85:4	0:0	4	=
water	85:6	0:0	4	(
water	85:7	0:0	4	uint16
water	85:13	0:0	4	)
call	85:15	85:36	4	va_arg
arg	85:22	85:24	5	ap
water	85:22	0:0	6	ap
arg	85:26	85:36	5	uint16_vap
water	85:26	0:0	6	uint16_vap
water	85:37	0:0	4	;
if	86:2	87:16	4	(v != FILLORDER_LSB2MSB && v != FILLORDER_MSB2LSB)
cond	86:6	86:37	5	v != FILLORDER_LSB2MSB && v != FILLORDER_MSB2LSB
water	86:6	0:0	6	v
op	86:8	0:0	6	!=
water	86:11	0:0	6	FILLORDER_LSB2MSB
op	86:29	0:0	6	&&
water	86:32	0:0	6	v
op	86:34	0:0	6	!=
water	86:37	0:0	6	FILLORDER_MSB2LSB
stmts	87:3	87:16	5	
goto	87:3	87:16	6	badvalue
water	87:8	0:0	7	badvalue
water	88:2	0:0	4	td
op	88:4	0:0	4	->
water	88:6	0:0	4	td_fillorder
op	88:19	0:0	4	=
water	88:21	0:0	4	(
water	88:22	0:0	4	uint16
water	88:28	0:0	4	)
water	88:30	0:0	4	v
water	88:31	0:0	4	;
break	89:2	89:7	4	
label	90:1	90:25	4	case TIFFTAG_ORIENTATION :
water	91:2	0:0	4	v
op	91:4	0:0	4	=
water	91:6	0:0	4	(
water	91:7	0:0	4	uint16
water	91:13	0:0	4	)
call	91:15	91:36	4	va_arg
arg	91:22	91:24	5	ap
water	91:22	0:0	6	ap
arg	91:26	91:36	5	uint16_vap
water	91:26	0:0	6	uint16_vap
water	91:37	0:0	4	;
if	92:2	93:16	4	(v < ORIENTATION_TOPLEFT || ORIENTATION_LEFTBOT < v)
cond	92:6	92:55	5	v < ORIENTATION_TOPLEFT || ORIENTATION_LEFTBOT < v
water	92:6	0:0	6	v
op	92:8	0:0	6	<
water	92:10	0:0	6	ORIENTATION_TOPLEFT
op	92:30	0:0	6	||
water	92:33	0:0	6	ORIENTATION_LEFTBOT
op	92:53	0:0	6	<
water	92:55	0:0	6	v
stmts	93:3	93:16	5	
goto	93:3	93:16	6	badvalue
water	93:8	0:0	7	badvalue
else	94:2	95:34	4
stmts	95:3	95:34	5	
water	95:3	0:0	6	td
op	95:5	0:0	6	->
water	95:7	0:0	6	td_orientation
op	95:22	0:0	6	=
water	95:24	0:0	6	(
water	95:25	0:0	6	uint16
water	95:31	0:0	6	)
water	95:33	0:0	6	v
water	95:34	0:0	6	;
break	96:2	96:7	4	
label	97:1	97:29	4	case TIFFTAG_SAMPLESPERPIXEL :
water	98:2	0:0	4	v
op	98:4	0:0	4	=
water	98:6	0:0	4	(
water	98:7	0:0	4	uint16
water	98:13	0:0	4	)
call	98:15	98:36	4	va_arg
arg	98:22	98:24	5	ap
water	98:22	0:0	6	ap
arg	98:26	98:36	5	uint16_vap
water	98:26	0:0	6	uint16_vap
water	98:37	0:0	4	;
if	99:2	100:16	4	(v == 0)
cond	99:6	99:11	5	v == 0
water	99:6	0:0	6	v
op	99:8	0:0	6	==
water	99:11	0:0	6	0
stmts	100:3	100:16	5	
goto	100:3	100:16	6	badvalue
water	100:8	0:0	7	badvalue
water	101:2	0:0	4	td
op	101:4	0:0	4	->
water	101:6	0:0	4	td_samplesperpixel
op	101:25	0:0	4	=
water	101:27	0:0	4	(
water	101:28	0:0	4	uint16
water	101:34	0:0	4	)
water	101:36	0:0	4	v
water	101:37	0:0	4	;
break	102:2	102:7	4	
label	103:1	103:26	4	case TIFFTAG_ROWSPERSTRIP :
water	104:2	0:0	4	v32
op	104:6	0:0	4	=
water	104:8	0:0	4	(
water	104:9	0:0	4	uint32
water	104:15	0:0	4	)
call	104:17	104:34	4	va_arg
arg	104:24	104:26	5	ap
water	104:24	0:0	6	ap
arg	104:28	104:34	5	uint32
water	104:28	0:0	6	uint32
water	104:35	0:0	4	;
if	105:2	106:18	4	(v32 == 0)
cond	105:6	105:13	5	v32 == 0
water	105:6	0:0	6	v32
op	105:10	0:0	6	==
water	105:13	0:0	6	0
stmts	106:3	106:18	5	
goto	106:3	106:18	6	badvalue32
water	106:8	0:0	7	badvalue32
water	107:2	0:0	4	td
op	107:4	0:0	4	->
water	107:6	0:0	4	td_rowsperstrip
op	107:22	0:0	4	=
water	107:24	0:0	4	v32
water	107:27	0:0	4	;
if	108:2	111:2	4	(!TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS ))
cond	108:6	108:45	5	!TIFFFieldSet (tif ,FIELD_TILEDIMENSIONS )
op	108:6	0:0	6	!
call	108:7	108:45	6	TIFFFieldSet
arg	108:20	108:23	7	tif
water	108:20	0:0	8	tif
arg	108:25	108:45	7	FIELD_TILEDIMENSIONS
water	108:25	0:0	8	FIELD_TILEDIMENSIONS
stmts	108:48	111:2	5	
water	108:48	0:0	6	{
water	109:3	0:0	6	td
op	109:5	0:0	6	->
water	109:7	0:0	6	td_tilelength
op	109:21	0:0	6	=
water	109:23	0:0	6	v32
water	109:26	0:0	6	;
water	110:3	0:0	6	td
op	110:5	0:0	6	->
water	110:7	0:0	6	td_tilewidth
op	110:20	0:0	6	=
water	110:22	0:0	6	td
op	110:24	0:0	6	->
water	110:26	0:0	6	td_imagewidth
water	110:39	0:0	6	;
water	111:2	0:0	6	}
break	112:2	112:7	4	
label	113:1	113:28	4	case TIFFTAG_MINSAMPLEVALUE :
water	114:2	0:0	4	td
op	114:4	0:0	4	->
water	114:6	0:0	4	td_minsamplevalue
op	114:24	0:0	4	=
water	114:26	0:0	4	(
water	114:27	0:0	4	uint16
water	114:33	0:0	4	)
call	114:35	114:56	4	va_arg
arg	114:42	114:44	5	ap
water	114:42	0:0	6	ap
arg	114:46	114:56	5	uint16_vap
water	114:46	0:0	6	uint16_vap
water	114:57	0:0	4	;
break	115:2	115:7	4	
label	116:1	116:28	4	case TIFFTAG_MAXSAMPLEVALUE :
water	117:2	0:0	4	td
op	117:4	0:0	4	->
water	117:6	0:0	4	td_maxsamplevalue
op	117:24	0:0	4	=
water	117:26	0:0	4	(
water	117:27	0:0	4	uint16
water	117:33	0:0	4	)
call	117:35	117:56	4	va_arg
arg	117:42	117:44	5	ap
water	117:42	0:0	6	ap
arg	117:46	117:56	5	uint16_vap
water	117:46	0:0	6	uint16_vap
water	117:57	0:0	4	;
break	118:2	118:7	4	
label	119:1	119:29	4	case TIFFTAG_SMINSAMPLEVALUE :
if	120:2	121:92	4	(tif -> tif_flags & TIFF_PERSAMPLE)
cond	120:6	120:23	5	tif -> tif_flags & TIFF_PERSAMPLE
water	120:6	0:0	6	tif
op	120:9	0:0	6	->
water	120:11	0:0	6	tif_flags
op	120:21	0:0	6	&
water	120:23	0:0	6	TIFF_PERSAMPLE
stmts	121:3	121:92	5	
call	121:3	121:91	6	_TIFFsetDoubleArray
arg	121:23	121:46	7	&td->td_sminsamplevalue
op	121:23	0:0	8	&
water	121:24	0:0	8	td
op	121:26	0:0	8	->
water	121:28	0:0	8	td_sminsamplevalue
arg	121:48	121:67	7	va_arg(ap,double*)
call	121:48	121:66	8	va_arg
arg	121:55	121:57	9	ap
water	121:55	0:0	10	ap
arg	121:59	121:66	9	double*
water	121:59	0:0	10	double
op	121:65	0:0	10	*
arg	121:69	121:91	7	td->td_samplesperpixel
water	121:69	0:0	8	td
op	121:71	0:0	8	->
water	121:73	0:0	8	td_samplesperpixel
water	121:92	0:0	6	;
else	122:2	123:94	4
stmts	123:3	123:94	5	
call	123:3	123:93	6	setDoubleArrayOneValue
arg	123:26	123:49	7	&td->td_sminsamplevalue
op	123:26	0:0	8	&
water	123:27	0:0	8	td
op	123:29	0:0	8	->
water	123:31	0:0	8	td_sminsamplevalue
arg	123:51	123:69	7	va_arg(ap,double)
call	123:51	123:68	8	va_arg
arg	123:58	123:60	9	ap
water	123:58	0:0	10	ap
arg	123:62	123:68	9	double
water	123:62	0:0	10	double
arg	123:71	123:93	7	td->td_samplesperpixel
water	123:71	0:0	8	td
op	123:73	0:0	8	->
water	123:75	0:0	8	td_samplesperpixel
water	123:94	0:0	6	;
break	124:2	124:7	4	
label	125:1	125:29	4	case TIFFTAG_SMAXSAMPLEVALUE :
if	126:2	127:92	4	(tif -> tif_flags & TIFF_PERSAMPLE)
cond	126:6	126:23	5	tif -> tif_flags & TIFF_PERSAMPLE
water	126:6	0:0	6	tif
op	126:9	0:0	6	->
water	126:11	0:0	6	tif_flags
op	126:21	0:0	6	&
water	126:23	0:0	6	TIFF_PERSAMPLE
stmts	127:3	127:92	5	
call	127:3	127:91	6	_TIFFsetDoubleArray
arg	127:23	127:46	7	&td->td_smaxsamplevalue
op	127:23	0:0	8	&
water	127:24	0:0	8	td
op	127:26	0:0	8	->
water	127:28	0:0	8	td_smaxsamplevalue
arg	127:48	127:67	7	va_arg(ap,double*)
call	127:48	127:66	8	va_arg
arg	127:55	127:57	9	ap
water	127:55	0:0	10	ap
arg	127:59	127:66	9	double*
water	127:59	0:0	10	double
op	127:65	0:0	10	*
arg	127:69	127:91	7	td->td_samplesperpixel
water	127:69	0:0	8	td
op	127:71	0:0	8	->
water	127:73	0:0	8	td_samplesperpixel
water	127:92	0:0	6	;
else	128:2	129:94	4
stmts	129:3	129:94	5	
call	129:3	129:93	6	setDoubleArrayOneValue
arg	129:26	129:49	7	&td->td_smaxsamplevalue
op	129:26	0:0	8	&
water	129:27	0:0	8	td
op	129:29	0:0	8	->
water	129:31	0:0	8	td_smaxsamplevalue
arg	129:51	129:69	7	va_arg(ap,double)
call	129:51	129:68	8	va_arg
arg	129:58	129:60	9	ap
water	129:58	0:0	10	ap
arg	129:62	129:68	9	double
water	129:62	0:0	10	double
arg	129:71	129:93	7	td->td_samplesperpixel
water	129:71	0:0	8	td
op	129:73	0:0	8	->
water	129:75	0:0	8	td_samplesperpixel
water	129:94	0:0	6	;
break	130:2	130:7	4	
label	131:1	131:25	4	case TIFFTAG_XRESOLUTION :
water	132:2	0:0	4	td
op	132:4	0:0	4	->
water	132:6	0:0	4	td_xresolution
op	132:21	0:0	4	=
water	132:23	0:0	4	(
water	132:24	0:0	4	float
water	132:29	0:0	4	)
call	132:31	132:48	4	va_arg
arg	132:38	132:40	5	ap
water	132:38	0:0	6	ap
arg	132:42	132:48	5	double
water	132:42	0:0	6	double
water	132:49	0:0	4	;
break	133:2	133:7	4	
label	134:1	134:25	4	case TIFFTAG_YRESOLUTION :
water	135:2	0:0	4	td
op	135:4	0:0	4	->
water	135:6	0:0	4	td_yresolution
op	135:21	0:0	4	=
water	135:23	0:0	4	(
water	135:24	0:0	4	float
water	135:29	0:0	4	)
call	135:31	135:48	4	va_arg
arg	135:38	135:40	5	ap
water	135:38	0:0	6	ap
arg	135:42	135:48	5	double
water	135:42	0:0	6	double
water	135:49	0:0	4	;
break	136:2	136:7	4	
label	137:1	137:26	4	case TIFFTAG_PLANARCONFIG :
water	138:2	0:0	4	v
op	138:4	0:0	4	=
water	138:6	0:0	4	(
water	138:7	0:0	4	uint16
water	138:13	0:0	4	)
call	138:15	138:36	4	va_arg
arg	138:22	138:24	5	ap
water	138:22	0:0	6	ap
arg	138:26	138:36	5	uint16_vap
water	138:26	0:0	6	uint16_vap
water	138:37	0:0	4	;
if	139:2	140:16	4	(v != PLANARCONFIG_CONTIG && v != PLANARCONFIG_SEPARATE)
cond	139:6	139:39	5	v != PLANARCONFIG_CONTIG && v != PLANARCONFIG_SEPARATE
water	139:6	0:0	6	v
op	139:8	0:0	6	!=
water	139:11	0:0	6	PLANARCONFIG_CONTIG
op	139:31	0:0	6	&&
water	139:34	0:0	6	v
op	139:36	0:0	6	!=
water	139:39	0:0	6	PLANARCONFIG_SEPARATE
stmts	140:3	140:16	5	
goto	140:3	140:16	6	badvalue
water	140:8	0:0	7	badvalue
water	141:2	0:0	4	td
op	141:4	0:0	4	->
water	141:6	0:0	4	td_planarconfig
op	141:22	0:0	4	=
water	141:24	0:0	4	(
water	141:25	0:0	4	uint16
water	141:31	0:0	4	)
water	141:33	0:0	4	v
water	141:34	0:0	4	;
break	142:2	142:7	4	
label	143:1	143:23	4	case TIFFTAG_XPOSITION :
water	144:2	0:0	4	td
op	144:4	0:0	4	->
water	144:6	0:0	4	td_xposition
op	144:19	0:0	4	=
water	144:21	0:0	4	(
water	144:22	0:0	4	float
water	144:27	0:0	4	)
call	144:29	144:46	4	va_arg
arg	144:36	144:38	5	ap
water	144:36	0:0	6	ap
arg	144:40	144:46	5	double
water	144:40	0:0	6	double
water	144:47	0:0	4	;
break	145:2	145:7	4	
label	146:1	146:23	4	case TIFFTAG_YPOSITION :
water	147:2	0:0	4	td
op	147:4	0:0	4	->
water	147:6	0:0	4	td_yposition
op	147:19	0:0	4	=
water	147:21	0:0	4	(
water	147:22	0:0	4	float
water	147:27	0:0	4	)
call	147:29	147:46	4	va_arg
arg	147:36	147:38	5	ap
water	147:36	0:0	6	ap
arg	147:40	147:46	5	double
water	147:40	0:0	6	double
water	147:47	0:0	4	;
break	148:2	148:7	4	
label	149:1	149:28	4	case TIFFTAG_RESOLUTIONUNIT :
water	150:2	0:0	4	v
op	150:4	0:0	4	=
water	150:6	0:0	4	(
water	150:7	0:0	4	uint16
water	150:13	0:0	4	)
call	150:15	150:36	4	va_arg
arg	150:22	150:24	5	ap
water	150:22	0:0	6	ap
arg	150:26	150:36	5	uint16_vap
water	150:26	0:0	6	uint16_vap
water	150:37	0:0	4	;
if	151:2	152:16	4	(v < RESUNIT_NONE || RESUNIT_CENTIMETER < v)
cond	151:6	151:47	5	v < RESUNIT_NONE || RESUNIT_CENTIMETER < v
water	151:6	0:0	6	v
op	151:8	0:0	6	<
water	151:10	0:0	6	RESUNIT_NONE
op	151:23	0:0	6	||
water	151:26	0:0	6	RESUNIT_CENTIMETER
op	151:45	0:0	6	<
water	151:47	0:0	6	v
stmts	152:3	152:16	5	
goto	152:3	152:16	6	badvalue
water	152:8	0:0	7	badvalue
water	153:2	0:0	4	td
op	153:4	0:0	4	->
water	153:6	0:0	4	td_resolutionunit
op	153:24	0:0	4	=
water	153:26	0:0	4	(
water	153:27	0:0	4	uint16
water	153:33	0:0	4	)
water	153:35	0:0	4	v
water	153:36	0:0	4	;
break	154:2	154:7	4	
label	155:1	155:24	4	case TIFFTAG_PAGENUMBER :
water	156:2	0:0	4	td
op	156:4	0:0	4	->
water	156:6	0:0	4	td_pagenumber
op	156:19	0:0	4	[
water	156:20	0:0	4	0
op	156:21	0:0	4	]
op	156:23	0:0	4	=
water	156:25	0:0	4	(
water	156:26	0:0	4	uint16
water	156:32	0:0	4	)
call	156:34	156:55	4	va_arg
arg	156:41	156:43	5	ap
water	156:41	0:0	6	ap
arg	156:45	156:55	5	uint16_vap
water	156:45	0:0	6	uint16_vap
water	156:56	0:0	4	;
water	157:2	0:0	4	td
op	157:4	0:0	4	->
water	157:6	0:0	4	td_pagenumber
op	157:19	0:0	4	[
water	157:20	0:0	4	1
op	157:21	0:0	4	]
op	157:23	0:0	4	=
water	157:25	0:0	4	(
water	157:26	0:0	4	uint16
water	157:32	0:0	4	)
call	157:34	157:55	4	va_arg
arg	157:41	157:43	5	ap
water	157:41	0:0	6	ap
arg	157:45	157:55	5	uint16_vap
water	157:45	0:0	6	uint16_vap
water	157:56	0:0	4	;
break	158:2	158:7	4	
label	159:1	159:27	4	case TIFFTAG_HALFTONEHINTS :
water	160:2	0:0	4	td
op	160:4	0:0	4	->
water	160:6	0:0	4	td_halftonehints
op	160:22	0:0	4	[
water	160:23	0:0	4	0
op	160:24	0:0	4	]
op	160:26	0:0	4	=
water	160:28	0:0	4	(
water	160:29	0:0	4	uint16
water	160:35	0:0	4	)
call	160:37	160:58	4	va_arg
arg	160:44	160:46	5	ap
water	160:44	0:0	6	ap
arg	160:48	160:58	5	uint16_vap
water	160:48	0:0	6	uint16_vap
water	160:59	0:0	4	;
water	161:2	0:0	4	td
op	161:4	0:0	4	->
water	161:6	0:0	4	td_halftonehints
op	161:22	0:0	4	[
water	161:23	0:0	4	1
op	161:24	0:0	4	]
op	161:26	0:0	4	=
water	161:28	0:0	4	(
water	161:29	0:0	4	uint16
water	161:35	0:0	4	)
call	161:37	161:58	4	va_arg
arg	161:44	161:46	5	ap
water	161:44	0:0	6	ap
arg	161:48	161:58	5	uint16_vap
water	161:48	0:0	6	uint16_vap
water	161:59	0:0	4	;
break	162:2	162:7	4	
label	163:1	163:22	4	case TIFFTAG_COLORMAP :
water	164:2	0:0	4	v32
op	164:6	0:0	4	=
call	164:8	164:41	4	(uint32)
arg	164:17	164:41	5	1L<<td->td_bitspersample
water	164:17	0:0	6	1
water	164:18	0:0	6	L
op	164:19	0:0	6	<<
water	164:21	0:0	6	td
op	164:23	0:0	6	->
water	164:25	0:0	6	td_bitspersample
water	164:42	0:0	4	;
call	165:2	165:66	4	_TIFFsetShortArray
arg	165:21	165:40	5	&td->td_colormap[0]
op	165:21	0:0	6	&
water	165:22	0:0	6	td
op	165:24	0:0	6	->
water	165:26	0:0	6	td_colormap
op	165:37	0:0	6	[
water	165:38	0:0	6	0
op	165:39	0:0	6	]
arg	165:42	165:61	5	va_arg(ap,uint16*)
call	165:42	165:60	6	va_arg
arg	165:49	165:51	7	ap
water	165:49	0:0	8	ap
arg	165:53	165:60	7	uint16*
water	165:53	0:0	8	uint16
op	165:59	0:0	8	*
arg	165:63	165:66	5	v32
water	165:63	0:0	6	v32
water	165:67	0:0	4	;
call	166:2	166:66	4	_TIFFsetShortArray
arg	166:21	166:40	5	&td->td_colormap[1]
op	166:21	0:0	6	&
water	166:22	0:0	6	td
op	166:24	0:0	6	->
water	166:26	0:0	6	td_colormap
op	166:37	0:0	6	[
water	166:38	0:0	6	1
op	166:39	0:0	6	]
arg	166:42	166:61	5	va_arg(ap,uint16*)
call	166:42	166:60	6	va_arg
arg	166:49	166:51	7	ap
water	166:49	0:0	8	ap
arg	166:53	166:60	7	uint16*
water	166:53	0:0	8	uint16
op	166:59	0:0	8	*
arg	166:63	166:66	5	v32
water	166:63	0:0	6	v32
water	166:67	0:0	4	;
call	167:2	167:66	4	_TIFFsetShortArray
arg	167:21	167:40	5	&td->td_colormap[2]
op	167:21	0:0	6	&
water	167:22	0:0	6	td
op	167:24	0:0	6	->
water	167:26	0:0	6	td_colormap
op	167:37	0:0	6	[
water	167:38	0:0	6	2
op	167:39	0:0	6	]
arg	167:42	167:61	5	va_arg(ap,uint16*)
call	167:42	167:60	6	va_arg
arg	167:49	167:51	7	ap
water	167:49	0:0	8	ap
arg	167:53	167:60	7	uint16*
water	167:53	0:0	8	uint16
op	167:59	0:0	8	*
arg	167:63	167:66	5	v32
water	167:63	0:0	6	v32
water	167:67	0:0	4	;
break	168:2	168:7	4	
label	169:1	169:26	4	case TIFFTAG_EXTRASAMPLES :
if	170:2	171:16	4	(!setExtraSamples (td ,ap ,& v ))
cond	170:6	170:33	5	!setExtraSamples (td ,ap ,& v )
op	170:6	0:0	6	!
call	170:7	170:33	6	setExtraSamples
arg	170:23	170:25	7	td
water	170:23	0:0	8	td
arg	170:27	170:29	7	ap
water	170:27	0:0	8	ap
arg	170:31	170:33	7	&v
op	170:31	0:0	8	&
water	170:32	0:0	8	v
stmts	171:3	171:16	5	
goto	171:3	171:16	6	badvalue
water	171:8	0:0	7	badvalue
break	172:2	172:7	4	
label	173:1	173:22	4	case TIFFTAG_MATTEING :
water	174:2	0:0	4	td
op	174:4	0:0	4	->
water	174:6	0:0	4	td_extrasamples
op	174:22	0:0	4	=
water	174:25	0:0	4	(
water	174:26	0:0	4	(
water	174:27	0:0	4	(
water	174:28	0:0	4	uint16
water	174:34	0:0	4	)
call	174:36	174:57	4	va_arg
arg	174:43	174:45	5	ap
water	174:43	0:0	6	ap
arg	174:47	174:57	5	uint16_vap
water	174:47	0:0	6	uint16_vap
water	174:58	0:0	4	)
op	174:60	0:0	4	!=
water	174:63	0:0	4	0
water	174:64	0:0	4	)
water	174:65	0:0	4	;
if	175:2	178:2	4	(td -> td_extrasamples)
cond	175:6	175:10	5	td -> td_extrasamples
water	175:6	0:0	6	td
op	175:8	0:0	6	->
water	175:10	0:0	6	td_extrasamples
stmts	175:27	178:2	5	
water	175:27	0:0	6	{
decl	176:3	176:37	6	uint16	sv
op	176:13	0:0	6	=
water	176:15	0:0	6	EXTRASAMPLE_ASSOCALPHA
call	177:3	177:48	6	_TIFFsetShortArray
arg	177:22	177:40	7	&td->td_sampleinfo
op	177:22	0:0	8	&
water	177:23	0:0	8	td
op	177:25	0:0	8	->
water	177:27	0:0	8	td_sampleinfo
arg	177:42	177:45	7	&sv
op	177:42	0:0	8	&
water	177:43	0:0	8	sv
arg	177:47	177:48	7	1
water	177:47	0:0	8	1
water	177:49	0:0	6	;
water	178:2	0:0	6	}
break	179:2	179:7	4	
label	180:1	180:23	4	case TIFFTAG_TILEWIDTH :
water	181:2	0:0	4	v32
op	181:6	0:0	4	=
water	181:8	0:0	4	(
water	181:9	0:0	4	uint32
water	181:15	0:0	4	)
call	181:17	181:34	4	va_arg
arg	181:24	181:26	5	ap
water	181:24	0:0	6	ap
arg	181:28	181:34	5	uint32
water	181:28	0:0	6	uint32
water	181:35	0:0	4	;
if	182:2	187:2	4	(v32 % 16)
cond	182:6	182:12	5	v32 % 16
water	182:6	0:0	6	v32
op	182:10	0:0	6	%
water	182:12	0:0	6	16
stmts	182:16	187:2	5	
water	182:16	0:0	6	{
if	183:3	184:19	6	(tif -> tif_mode != O_RDONLY)
cond	183:7	183:24	7	tif -> tif_mode != O_RDONLY
water	183:7	0:0	8	tif
op	183:10	0:0	8	->
water	183:12	0:0	8	tif_mode
op	183:21	0:0	8	!=
water	183:24	0:0	8	O_RDONLY
stmts	184:4	184:19	7	
goto	184:4	184:19	8	badvalue32
water	184:9	0:0	9	badvalue32
call	185:3	186:50	6	TIFFWarningExt
arg	185:18	185:37	7	tif->tif_clientdata
water	185:18	0:0	8	tif
op	185:21	0:0	8	->
water	185:23	0:0	8	tif_clientdata
arg	185:39	185:52	7	tif->tif_name
water	185:39	0:0	8	tif
op	185:42	0:0	8	->
water	185:44	0:0	8	tif_name
arg	186:4	186:45	7	"Nonstandard tile width %d, convert file"
water	186:4	0:0	8	"Nonstandard tile width %d, convert file"
arg	186:47	186:50	7	v32
water	186:47	0:0	8	v32
water	186:51	0:0	6	;
water	187:2	0:0	6	}
water	188:2	0:0	4	td
op	188:4	0:0	4	->
water	188:6	0:0	4	td_tilewidth
op	188:19	0:0	4	=
water	188:21	0:0	4	v32
water	188:24	0:0	4	;
water	189:2	0:0	4	tif
op	189:5	0:0	4	->
water	189:7	0:0	4	tif_flags
op	189:17	0:0	4	|=
water	189:20	0:0	4	TIFF_ISTILED
water	189:32	0:0	4	;
break	190:2	190:7	4	
label	191:1	191:24	4	case TIFFTAG_TILELENGTH :
water	192:2	0:0	4	v32
op	192:6	0:0	4	=
water	192:8	0:0	4	(
water	192:9	0:0	4	uint32
water	192:15	0:0	4	)
call	192:17	192:34	4	va_arg
arg	192:24	192:26	5	ap
water	192:24	0:0	6	ap
arg	192:28	192:34	5	uint32
water	192:28	0:0	6	uint32
water	192:35	0:0	4	;
if	193:2	198:2	4	(v32 % 16)
cond	193:6	193:12	5	v32 % 16
water	193:6	0:0	6	v32
op	193:10	0:0	6	%
water	193:12	0:0	6	16
stmts	193:16	198:2	5	
water	193:16	0:0	6	{
if	194:3	195:19	6	(tif -> tif_mode != O_RDONLY)
cond	194:7	194:24	7	tif -> tif_mode != O_RDONLY
water	194:7	0:0	8	tif
op	194:10	0:0	8	->
water	194:12	0:0	8	tif_mode
op	194:21	0:0	8	!=
water	194:24	0:0	8	O_RDONLY
stmts	195:4	195:19	7	
goto	195:4	195:19	8	badvalue32
water	195:9	0:0	9	badvalue32
call	196:3	197:54	6	TIFFWarningExt
arg	196:18	196:37	7	tif->tif_clientdata
water	196:18	0:0	8	tif
op	196:21	0:0	8	->
water	196:23	0:0	8	tif_clientdata
arg	196:39	196:52	7	tif->tif_name
water	196:39	0:0	8	tif
op	196:42	0:0	8	->
water	196:44	0:0	8	tif_name
arg	197:7	197:49	7	"Nonstandard tile length %d, convert file"
water	197:7	0:0	8	"Nonstandard tile length %d, convert file"
arg	197:51	197:54	7	v32
water	197:51	0:0	8	v32
water	197:55	0:0	6	;
water	198:2	0:0	6	}
water	199:2	0:0	4	td
op	199:4	0:0	4	->
water	199:6	0:0	4	td_tilelength
op	199:20	0:0	4	=
water	199:22	0:0	4	v32
water	199:25	0:0	4	;
water	200:2	0:0	4	tif
op	200:5	0:0	4	->
water	200:7	0:0	4	tif_flags
op	200:17	0:0	4	|=
water	200:20	0:0	4	TIFF_ISTILED
water	200:32	0:0	4	;
break	201:2	201:7	4	
label	202:1	202:23	4	case TIFFTAG_TILEDEPTH :
water	203:2	0:0	4	v32
op	203:6	0:0	4	=
water	203:8	0:0	4	(
water	203:9	0:0	4	uint32
water	203:15	0:0	4	)
call	203:17	203:34	4	va_arg
arg	203:24	203:26	5	ap
water	203:24	0:0	6	ap
arg	203:28	203:34	5	uint32
water	203:28	0:0	6	uint32
water	203:35	0:0	4	;
if	204:2	205:18	4	(v32 == 0)
cond	204:6	204:13	5	v32 == 0
water	204:6	0:0	6	v32
op	204:10	0:0	6	==
water	204:13	0:0	6	0
stmts	205:3	205:18	5	
goto	205:3	205:18	6	badvalue32
water	205:8	0:0	7	badvalue32
water	206:2	0:0	4	td
op	206:4	0:0	4	->
water	206:6	0:0	4	td_tiledepth
op	206:19	0:0	4	=
water	206:21	0:0	4	v32
water	206:24	0:0	4	;
break	207:2	207:7	4	
label	208:1	208:22	4	case TIFFTAG_DATATYPE :
water	209:2	0:0	4	v
op	209:4	0:0	4	=
water	209:6	0:0	4	(
water	209:7	0:0	4	uint16
water	209:13	0:0	4	)
call	209:15	209:36	4	va_arg
arg	209:22	209:24	5	ap
water	209:22	0:0	6	ap
arg	209:26	209:36	5	uint16_vap
water	209:26	0:0	6	uint16_vap
water	209:37	0:0	4	;
switch	210:2	216:2	4	(v)
cond	210:10	210:10	5	v
water	210:10	0:0	6	v
stmts	210:13	216:2	5	
water	210:13	0:0	6	{
label	211:2	211:20	6	case DATATYPE_VOID :
water	211:22	0:0	6	v
op	211:24	0:0	6	=
water	211:26	0:0	6	SAMPLEFORMAT_VOID
water	211:43	0:0	6	;
break	211:45	211:50	6	
label	212:2	212:19	6	case DATATYPE_INT :
water	212:21	0:0	6	v
op	212:23	0:0	6	=
water	212:25	0:0	6	SAMPLEFORMAT_INT
water	212:41	0:0	6	;
break	212:43	212:48	6	
label	213:2	213:20	6	case DATATYPE_UINT :
water	213:22	0:0	6	v
op	213:24	0:0	6	=
water	213:26	0:0	6	SAMPLEFORMAT_UINT
water	213:43	0:0	6	;
break	213:45	213:50	6	
label	214:2	214:22	6	case DATATYPE_IEEEFP :
water	214:24	0:0	6	v
op	214:26	0:0	6	=
water	214:28	0:0	6	SAMPLEFORMAT_IEEEFP
water	214:47	0:0	6	;
break	214:48	214:53	6	
label	215:2	215:9	6	default :
goto	215:12	215:25	6	badvalue
water	215:17	0:0	7	badvalue
water	216:2	0:0	6	}
water	217:2	0:0	4	td
op	217:4	0:0	4	->
water	217:6	0:0	4	td_sampleformat
op	217:22	0:0	4	=
water	217:24	0:0	4	(
water	217:25	0:0	4	uint16
water	217:31	0:0	4	)
water	217:33	0:0	4	v
water	217:34	0:0	4	;
break	218:2	218:7	4	
label	219:1	219:26	4	case TIFFTAG_SAMPLEFORMAT :
water	220:2	0:0	4	v
op	220:4	0:0	4	=
water	220:6	0:0	4	(
water	220:7	0:0	4	uint16
water	220:13	0:0	4	)
call	220:15	220:36	4	va_arg
arg	220:22	220:24	5	ap
water	220:22	0:0	6	ap
arg	220:26	220:36	5	uint16_vap
water	220:26	0:0	6	uint16_vap
water	220:37	0:0	4	;
if	221:2	222:16	4	(v < SAMPLEFORMAT_UINT || SAMPLEFORMAT_COMPLEXIEEEFP < v)
cond	221:6	221:60	5	v < SAMPLEFORMAT_UINT || SAMPLEFORMAT_COMPLEXIEEEFP < v
water	221:6	0:0	6	v
op	221:8	0:0	6	<
water	221:10	0:0	6	SAMPLEFORMAT_UINT
op	221:28	0:0	6	||
water	221:31	0:0	6	SAMPLEFORMAT_COMPLEXIEEEFP
op	221:58	0:0	6	<
water	221:60	0:0	6	v
stmts	222:3	222:16	5	
goto	222:3	222:16	6	badvalue
water	222:8	0:0	7	badvalue
water	223:2	0:0	4	td
op	223:4	0:0	4	->
water	223:6	0:0	4	td_sampleformat
op	223:22	0:0	4	=
water	223:24	0:0	4	(
water	223:25	0:0	4	uint16
water	223:31	0:0	4	)
water	223:33	0:0	4	v
water	223:34	0:0	4	;
if	226:2	229:46	4	(td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT && td -> td_bitspersample == 32 && tif -> tif_postdecode == _TIFFSwab32BitData)
cond	226:6	228:32	5	td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT && td -> td_bitspersample == 32 && tif -> tif_postdecode == _TIFFSwab32BitData
water	226:6	0:0	6	td
op	226:8	0:0	6	->
water	226:10	0:0	6	td_sampleformat
op	226:26	0:0	6	==
water	226:29	0:0	6	SAMPLEFORMAT_COMPLEXINT
op	227:6	0:0	6	&&
water	227:9	0:0	6	td
op	227:11	0:0	6	->
water	227:13	0:0	6	td_bitspersample
op	227:30	0:0	6	==
water	227:33	0:0	6	32
op	228:6	0:0	6	&&
water	228:9	0:0	6	tif
op	228:12	0:0	6	->
water	228:14	0:0	6	tif_postdecode
op	228:29	0:0	6	==
water	228:32	0:0	6	_TIFFSwab32BitData
stmts	229:6	229:46	5	
water	229:6	0:0	6	tif
op	229:9	0:0	6	->
water	229:11	0:0	6	tif_postdecode
op	229:26	0:0	6	=
water	229:28	0:0	6	_TIFFSwab16BitData
water	229:46	0:0	6	;
else	230:2	234:46	4
stmts	230:7	234:46	5	
if	230:7	234:46	6	(( td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT || td -> td_sampleformat == SAMPLEFORMAT_COMPLEXIEEEFP ) && td -> td_bitspersample == 64 && tif -> tif_postdecode == _TIFFSwab64BitData)
cond	230:11	233:30	7	( td -> td_sampleformat == SAMPLEFORMAT_COMPLEXINT || td -> td_sampleformat == SAMPLEFORMAT_COMPLEXIEEEFP ) && td -> td_bitspersample == 64 && tif -> tif_postdecode == _TIFFSwab64BitData
water	230:11	0:0	8	(
water	230:12	0:0	8	td
op	230:14	0:0	8	->
water	230:16	0:0	8	td_sampleformat
op	230:32	0:0	8	==
water	230:35	0:0	8	SAMPLEFORMAT_COMPLEXINT
op	231:5	0:0	8	||
water	231:8	0:0	8	td
op	231:10	0:0	8	->
water	231:12	0:0	8	td_sampleformat
op	231:28	0:0	8	==
water	231:31	0:0	8	SAMPLEFORMAT_COMPLEXIEEEFP
water	231:57	0:0	8	)
op	232:4	0:0	8	&&
water	232:7	0:0	8	td
op	232:9	0:0	8	->
water	232:11	0:0	8	td_bitspersample
op	232:28	0:0	8	==
water	232:31	0:0	8	64
op	233:4	0:0	8	&&
water	233:7	0:0	8	tif
op	233:10	0:0	8	->
water	233:12	0:0	8	tif_postdecode
op	233:27	0:0	8	==
water	233:30	0:0	8	_TIFFSwab64BitData
stmts	234:6	234:46	7	
water	234:6	0:0	8	tif
op	234:9	0:0	8	->
water	234:11	0:0	8	tif_postdecode
op	234:26	0:0	8	=
water	234:28	0:0	8	_TIFFSwab32BitData
water	234:46	0:0	8	;
break	235:2	235:7	4	
label	236:1	236:24	4	case TIFFTAG_IMAGEDEPTH :
water	237:2	0:0	4	td
op	237:4	0:0	4	->
water	237:6	0:0	4	td_imagedepth
op	237:20	0:0	4	=
water	237:22	0:0	4	(
water	237:23	0:0	4	uint32
water	237:29	0:0	4	)
call	237:31	237:48	4	va_arg
arg	237:38	237:40	5	ap
water	237:38	0:0	6	ap
arg	237:42	237:48	5	uint32
water	237:42	0:0	6	uint32
water	237:49	0:0	4	;
break	238:2	238:7	4	
label	239:1	239:20	4	case TIFFTAG_SUBIFD :
if	240:2	244:2	4	(( tif -> tif_flags & TIFF_INSUBIFD ) == 0)
cond	240:6	240:42	5	( tif -> tif_flags & TIFF_INSUBIFD ) == 0
water	240:6	0:0	6	(
water	240:7	0:0	6	tif
op	240:10	0:0	6	->
water	240:12	0:0	6	tif_flags
op	240:22	0:0	6	&
water	240:24	0:0	6	TIFF_INSUBIFD
water	240:37	0:0	6	)
op	240:39	0:0	6	==
water	240:42	0:0	6	0
stmts	240:45	244:2	5	
water	240:45	0:0	6	{
water	241:3	0:0	6	td
op	241:5	0:0	6	->
water	241:7	0:0	6	td_nsubifd
op	241:18	0:0	6	=
water	241:20	0:0	6	(
water	241:21	0:0	6	uint16
water	241:27	0:0	6	)
call	241:29	241:50	6	va_arg
arg	241:36	241:38	7	ap
water	241:36	0:0	8	ap
arg	241:40	241:50	7	uint16_vap
water	241:40	0:0	8	uint16_vap
water	241:51	0:0	6	;
call	242:3	243:28	6	_TIFFsetLong8Array
arg	242:22	242:36	7	&td->td_subifd
op	242:22	0:0	8	&
water	242:23	0:0	8	td
op	242:25	0:0	8	->
water	242:27	0:0	8	td_subifd
arg	242:38	242:67	7	(uint64*)va_arg(ap,uint64*)
water	242:38	0:0	8	(
water	242:39	0:0	8	uint64
op	242:45	0:0	8	*
water	242:46	0:0	8	)
call	242:48	242:66	8	va_arg
arg	242:55	242:57	9	ap
water	242:55	0:0	10	ap
arg	242:59	242:66	9	uint64*
water	242:59	0:0	10	uint64
op	242:65	0:0	10	*
arg	243:7	243:28	7	(long)td->td_nsubifd
water	243:7	0:0	8	(
water	243:8	0:0	8	long
water	243:12	0:0	8	)
water	243:14	0:0	8	td
op	243:16	0:0	8	->
water	243:18	0:0	8	td_nsubifd
water	243:29	0:0	6	;
water	244:2	0:0	6	}
else	244:4	249:2	4
stmts	244:9	249:2	5	
water	244:9	0:0	6	{
call	245:3	247:22	6	TIFFErrorExt
arg	245:16	245:35	7	tif->tif_clientdata
water	245:16	0:0	8	tif
op	245:19	0:0	8	->
water	245:21	0:0	8	tif_clientdata
arg	245:37	245:43	7	module
water	245:37	0:0	8	module
arg	246:9	246:41	7	"%s: Sorry, cannot nest SubIFDs"
water	246:9	0:0	8	"%s: Sorry, cannot nest SubIFDs"
arg	247:9	247:22	7	tif->tif_name
water	247:9	0:0	8	tif
op	247:12	0:0	8	->
water	247:14	0:0	8	tif_name
water	247:23	0:0	6	;
water	248:3	0:0	6	status
op	248:10	0:0	6	=
water	248:12	0:0	6	0
water	248:13	0:0	6	;
water	249:2	0:0	6	}
break	250:2	250:7	4	
label	251:1	251:30	4	case TIFFTAG_YCBCRPOSITIONING :
water	252:2	0:0	4	td
op	252:4	0:0	4	->
water	252:6	0:0	4	td_ycbcrpositioning
op	252:26	0:0	4	=
water	252:28	0:0	4	(
water	252:29	0:0	4	uint16
water	252:35	0:0	4	)
call	252:37	252:58	4	va_arg
arg	252:44	252:46	5	ap
water	252:44	0:0	6	ap
arg	252:48	252:58	5	uint16_vap
water	252:48	0:0	6	uint16_vap
water	252:59	0:0	4	;
break	253:2	253:7	4	
label	254:1	254:30	4	case TIFFTAG_YCBCRSUBSAMPLING :
water	255:2	0:0	4	td
op	255:4	0:0	4	->
water	255:6	0:0	4	td_ycbcrsubsampling
op	255:25	0:0	4	[
water	255:26	0:0	4	0
op	255:27	0:0	4	]
op	255:29	0:0	4	=
water	255:31	0:0	4	(
water	255:32	0:0	4	uint16
water	255:38	0:0	4	)
call	255:40	255:61	4	va_arg
arg	255:47	255:49	5	ap
water	255:47	0:0	6	ap
arg	255:51	255:61	5	uint16_vap
water	255:51	0:0	6	uint16_vap
water	255:62	0:0	4	;
water	256:2	0:0	4	td
op	256:4	0:0	4	->
water	256:6	0:0	4	td_ycbcrsubsampling
op	256:25	0:0	4	[
water	256:26	0:0	4	1
op	256:27	0:0	4	]
op	256:29	0:0	4	=
water	256:31	0:0	4	(
water	256:32	0:0	4	uint16
water	256:38	0:0	4	)
call	256:40	256:61	4	va_arg
arg	256:47	256:49	5	ap
water	256:47	0:0	6	ap
arg	256:51	256:61	5	uint16_vap
water	256:51	0:0	6	uint16_vap
water	256:62	0:0	4	;
break	257:2	257:7	4	
label	258:1	258:30	4	case TIFFTAG_TRANSFERFUNCTION :
water	259:2	0:0	4	v
op	259:4	0:0	4	=
water	259:6	0:0	4	(
water	259:7	0:0	4	td
op	259:9	0:0	4	->
water	259:11	0:0	4	td_samplesperpixel
op	259:30	0:0	4	-
water	259:32	0:0	4	td
op	259:34	0:0	4	->
water	259:36	0:0	4	td_extrasamples
water	259:51	0:0	4	)
op	259:53	0:0	4	>
water	259:55	0:0	4	1
water	259:57	0:0	4	?
water	259:59	0:0	4	3
water	259:61	0:0	4	:
water	259:63	0:0	4	1
water	259:64	0:0	4	;
for	260:2	262:53	4	(i = 0 ;i < v;i ++)
forinit	260:7	260:12	5	i = 0 ;
water	260:7	0:0	6	i
op	260:9	0:0	6	=
water	260:11	0:0	6	0
water	260:12	0:0	6	;
cond	260:14	260:18	5	i < v
water	260:14	0:0	6	i
op	260:16	0:0	6	<
water	260:18	0:0	6	v
forexpr	260:21	260:22	5	i ++
water	260:21	0:0	6	i
op	260:22	0:0	6	++
stmts	261:3	262:53	5	
call	261:3	262:52	6	_TIFFsetShortArray
arg	261:22	261:49	7	&td->td_transferfunction[i]
op	261:22	0:0	8	&
water	261:23	0:0	8	td
op	261:25	0:0	8	->
water	261:27	0:0	8	td_transferfunction
op	261:46	0:0	8	[
water	261:47	0:0	8	i
op	261:48	0:0	8	]
arg	262:7	262:26	7	va_arg(ap,uint16*)
call	262:7	262:25	8	va_arg
arg	262:14	262:16	9	ap
water	262:14	0:0	10	ap
arg	262:18	262:25	9	uint16*
water	262:18	0:0	10	uint16
op	262:24	0:0	10	*
arg	262:28	262:52	7	1L<<td->td_bitspersample
water	262:28	0:0	8	1
water	262:29	0:0	8	L
op	262:30	0:0	8	<<
water	262:32	0:0	8	td
op	262:34	0:0	8	->
water	262:36	0:0	8	td_bitspersample
water	262:53	0:0	6	;
break	263:2	263:7	4	
label	264:1	264:33	4	case TIFFTAG_REFERENCEBLACKWHITE :
call	266:2	266:65	4	_TIFFsetFloatArray
arg	266:21	266:42	5	&td->td_refblackwhite
op	266:21	0:0	6	&
water	266:22	0:0	6	td
op	266:24	0:0	6	->
water	266:26	0:0	6	td_refblackwhite
arg	266:44	266:62	5	va_arg(ap,float*)
call	266:44	266:61	6	va_arg
arg	266:51	266:53	7	ap
water	266:51	0:0	8	ap
arg	266:55	266:61	7	float*
water	266:55	0:0	8	float
op	266:60	0:0	8	*
arg	266:64	266:65	5	6
water	266:64	0:0	6	6
water	266:66	0:0	4	;
break	267:2	267:7	4	
label	268:1	268:22	4	case TIFFTAG_INKNAMES :
water	269:2	0:0	4	v
op	269:4	0:0	4	=
water	269:6	0:0	4	(
water	269:7	0:0	4	uint16
water	269:13	0:0	4	)
call	269:15	269:36	4	va_arg
arg	269:22	269:24	5	ap
water	269:22	0:0	6	ap
arg	269:26	269:36	5	uint16_vap
water	269:26	0:0	6	uint16_vap
water	269:37	0:0	4	;
water	270:2	0:0	4	s
op	270:4	0:0	4	=
call	270:6	270:22	4	va_arg
arg	270:13	270:15	5	ap
water	270:13	0:0	6	ap
arg	270:17	270:22	5	char*
water	270:17	0:0	6	char
op	270:21	0:0	6	*
water	270:23	0:0	4	;
water	271:2	0:0	4	v
op	271:4	0:0	4	=
call	271:6	271:35	4	checkInkNamesString
arg	271:26	271:29	5	tif
water	271:26	0:0	6	tif
arg	271:31	271:32	5	v
water	271:31	0:0	6	v
arg	271:34	271:35	5	s
water	271:34	0:0	6	s
water	271:36	0:0	4	;
water	272:2	0:0	4	status
op	272:9	0:0	4	=
water	272:11	0:0	4	v
op	272:13	0:0	4	>
water	272:15	0:0	4	0
water	272:16	0:0	4	;
if	273:2	276:2	4	(v > 0)
cond	273:6	273:10	5	v > 0
water	273:6	0:0	6	v
op	273:8	0:0	6	>
water	273:10	0:0	6	0
stmts	273:14	276:2	5	
water	273:14	0:0	6	{
call	274:3	274:41	6	_TIFFsetNString
arg	274:19	274:35	7	&td->td_inknames
op	274:19	0:0	8	&
water	274:20	0:0	8	td
op	274:22	0:0	8	->
water	274:24	0:0	8	td_inknames
arg	274:37	274:38	7	s
water	274:37	0:0	8	s
arg	274:40	274:41	7	v
water	274:40	0:0	8	v
water	274:42	0:0	6	;
water	275:3	0:0	6	td
op	275:5	0:0	6	->
water	275:7	0:0	6	td_inknameslen
op	275:22	0:0	6	=
water	275:24	0:0	6	v
water	275:25	0:0	6	;
water	276:2	0:0	6	}
break	277:2	277:7	4	
label	278:1	278:23	4	case TIFFTAG_PERSAMPLE :
water	279:2	0:0	4	v
op	279:4	0:0	4	=
water	279:6	0:0	4	(
water	279:7	0:0	4	uint16
water	279:13	0:0	4	)
call	279:15	279:36	4	va_arg
arg	279:22	279:24	5	ap
water	279:22	0:0	6	ap
arg	279:26	279:36	5	uint16_vap
water	279:26	0:0	6	uint16_vap
water	279:37	0:0	4	;
if	280:2	281:35	4	(v == PERSAMPLE_MULTI)
cond	280:6	280:11	5	v == PERSAMPLE_MULTI
water	280:6	0:0	6	v
op	280:8	0:0	6	==
water	280:11	0:0	6	PERSAMPLE_MULTI
stmts	281:3	281:35	5	
water	281:3	0:0	6	tif
op	281:6	0:0	6	->
water	281:8	0:0	6	tif_flags
op	281:18	0:0	6	|=
water	281:21	0:0	6	TIFF_PERSAMPLE
water	281:35	0:0	6	;
else	282:2	283:36	4
stmts	283:3	283:36	5	
water	283:3	0:0	6	tif
op	283:6	0:0	6	->
water	283:8	0:0	6	tif_flags
op	283:18	0:0	6	&=
water	283:21	0:0	6	~TIFF_PERSAMPLE
water	283:36	0:0	6	;
break	284:2	284:7	4	
label	285:1	285:8	4	default :
water	285:10	0:0	4	{
decl	286:2	286:18	4	TIFFTagValue	*tv
decl	287:2	287:22	4	int	tv_size
water	287:13	0:0	4	,
decl	287:2	287:22	4	int	iCustom
if	298:2	305:2	4	(fip == NULL || fip -> field_bit != FIELD_CUSTOM)
cond	298:5	298:38	5	fip == NULL || fip -> field_bit != FIELD_CUSTOM
water	298:5	0:0	6	fip
op	298:9	0:0	6	==
water	298:12	0:0	6	NULL
op	298:17	0:0	6	||
water	298:20	0:0	6	fip
op	298:23	0:0	6	->
water	298:25	0:0	6	field_bit
op	298:35	0:0	6	!=
water	298:38	0:0	6	FIELD_CUSTOM
stmts	298:52	305:2	5	
water	298:52	0:0	6	{
call	299:3	302:40	6	TIFFErrorExt
arg	299:16	299:35	7	tif->tif_clientdata
water	299:16	0:0	8	tif
op	299:19	0:0	8	->
water	299:21	0:0	8	tif_clientdata
arg	299:37	299:43	7	module
water	299:37	0:0	8	module
arg	300:7	300:58	7	"%s: Invalid %stag \"%s\" (not supported by codec)"
water	300:7	0:0	8	"%s: Invalid %stag \"%s\" (not supported by codec)"
arg	301:7	301:20	7	tif->tif_name
water	301:7	0:0	8	tif
op	301:10	0:0	8	->
water	301:12	0:0	8	tif_name
arg	301:22	301:55	7	isPseudoTag(tag)?"pseudo-":""
call	301:22	301:37	8	isPseudoTag
arg	301:34	301:37	9	tag
water	301:34	0:0	10	tag
water	301:39	0:0	8	?
water	301:41	0:0	8	"pseudo-"
water	301:51	0:0	8	:
water	301:53	0:0	8	""
arg	302:7	302:40	7	fip?fip->field_name:"Unknown"
water	302:7	0:0	8	fip
water	302:11	0:0	8	?
water	302:13	0:0	8	fip
op	302:16	0:0	8	->
water	302:18	0:0	8	field_name
water	302:29	0:0	8	:
water	302:31	0:0	8	"Unknown"
water	302:41	0:0	6	;
water	303:3	0:0	6	status
op	303:10	0:0	6	=
water	303:12	0:0	6	0
water	303:13	0:0	6	;
break	304:3	304:8	6	
water	305:2	0:0	6	}
water	310:2	0:0	4	tv
op	310:5	0:0	4	=
water	310:7	0:0	4	NULL
water	310:11	0:0	4	;
for	311:2	320:2	4	(iCustom = 0 ;iCustom < td -> td_customValueCount;iCustom ++)
forinit	311:7	311:18	5	iCustom = 0 ;
water	311:7	0:0	6	iCustom
op	311:15	0:0	6	=
water	311:17	0:0	6	0
water	311:18	0:0	6	;
cond	311:20	311:34	5	iCustom < td -> td_customValueCount
water	311:20	0:0	6	iCustom
op	311:28	0:0	6	<
water	311:30	0:0	6	td
op	311:32	0:0	6	->
water	311:34	0:0	6	td_customValueCount
forexpr	311:55	311:62	5	iCustom ++
water	311:55	0:0	6	iCustom
op	311:62	0:0	6	++
stmts	311:66	320:2	5	
water	311:66	0:0	6	{
if	312:3	319:3	6	(td -> td_customValues [ iCustom ] . info -> field_tag == tag)
cond	312:7	312:55	7	td -> td_customValues [ iCustom ] . info -> field_tag == tag
water	312:7	0:0	8	td
op	312:9	0:0	8	->
water	312:11	0:0	8	td_customValues
op	312:26	0:0	8	[
water	312:27	0:0	8	iCustom
op	312:34	0:0	8	]
op	312:35	0:0	8	.
water	312:36	0:0	8	info
op	312:40	0:0	8	->
water	312:42	0:0	8	field_tag
op	312:52	0:0	8	==
water	312:55	0:0	8	tag
stmts	312:60	319:3	7	
water	312:60	0:0	8	{
water	313:4	0:0	8	tv
op	313:7	0:0	8	=
water	313:9	0:0	8	td
op	313:11	0:0	8	->
water	313:13	0:0	8	td_customValues
op	313:29	0:0	8	+
water	313:31	0:0	8	iCustom
water	313:38	0:0	8	;
if	314:4	317:4	8	(tv -> value != NULL)
cond	314:8	314:21	9	tv -> value != NULL
water	314:8	0:0	10	tv
op	314:10	0:0	10	->
water	314:12	0:0	10	value
op	314:18	0:0	10	!=
water	314:21	0:0	10	NULL
stmts	314:27	317:4	9	
water	314:27	0:0	10	{
call	315:5	315:24	10	_TIFFfree
arg	315:15	315:24	11	tv->value
water	315:15	0:0	12	tv
op	315:17	0:0	12	->
water	315:19	0:0	12	value
water	315:25	0:0	10	;
water	316:5	0:0	10	tv
op	316:7	0:0	10	->
water	316:9	0:0	10	value
op	316:15	0:0	10	=
water	316:17	0:0	10	NULL
water	316:21	0:0	10	;
water	317:4	0:0	10	}
break	318:4	318:9	8	
water	319:3	0:0	8	}
water	320:2	0:0	6	}
if	325:2	346:2	4	(tv == NULL)
cond	325:5	325:11	5	tv == NULL
water	325:5	0:0	6	tv
op	325:8	0:0	6	==
water	325:11	0:0	6	NULL
stmts	325:17	346:2	5	
water	325:17	0:0	6	{
decl	326:3	326:33	6	TIFFTagValue	*new_customValues
water	328:3	0:0	6	td
op	328:5	0:0	6	->
water	328:7	0:0	6	td_customValueCount
op	328:26	0:0	6	++
water	328:28	0:0	6	;
water	329:3	0:0	6	new_customValues
op	329:20	0:0	6	=
water	329:22	0:0	6	(
water	329:23	0:0	6	TIFFTagValue
op	329:36	0:0	6	*
water	329:37	0:0	6	)
call	330:7	331:53	6	_TIFFrealloc
arg	330:20	330:39	7	td->td_customValues
water	330:20	0:0	8	td
op	330:22	0:0	8	->
water	330:24	0:0	8	td_customValues
arg	331:7	331:53	7	sizeof(TIFFTagValue)*td->td_customValueCount
op	331:7	0:0	8	sizeof
water	331:13	0:0	8	(
water	331:14	0:0	8	TIFFTagValue
water	331:26	0:0	8	)
op	331:28	0:0	8	*
water	331:30	0:0	8	td
op	331:32	0:0	8	->
water	331:34	0:0	8	td_customValueCount
water	331:54	0:0	6	;
if	332:3	338:3	6	(! new_customValues)
cond	332:7	332:8	7	! new_customValues
op	332:7	0:0	8	!
water	332:8	0:0	8	new_customValues
stmts	332:26	338:3	7	
water	332:26	0:0	8	{
call	333:4	335:21	8	TIFFErrorExt
arg	333:17	333:36	9	tif->tif_clientdata
water	333:17	0:0	10	tif
op	333:20	0:0	10	->
water	333:22	0:0	10	tif_clientdata
arg	333:38	333:44	9	module
water	333:38	0:0	10	module
arg	334:8	334:64	9	"%s: Failed to allocate space for list of custom values"
water	334:8	0:0	10	"%s: Failed to allocate space for list of custom values"
arg	335:8	335:21	9	tif->tif_name
water	335:8	0:0	10	tif
op	335:11	0:0	10	->
water	335:13	0:0	10	tif_name
water	335:22	0:0	8	;
water	336:4	0:0	8	status
op	336:11	0:0	8	=
water	336:13	0:0	8	0
water	336:14	0:0	8	;
goto	337:4	337:12	8	end
water	337:9	0:0	9	end
water	338:3	0:0	8	}
water	340:3	0:0	6	td
op	340:5	0:0	6	->
water	340:7	0:0	6	td_customValues
op	340:23	0:0	6	=
water	340:25	0:0	6	new_customValues
water	340:41	0:0	6	;
water	342:3	0:0	6	tv
op	342:6	0:0	6	=
water	342:8	0:0	6	td
op	342:10	0:0	6	->
water	342:12	0:0	6	td_customValues
op	342:28	0:0	6	+
water	342:30	0:0	6	(
water	342:31	0:0	6	td
op	342:33	0:0	6	->
water	342:35	0:0	6	td_customValueCount
op	342:55	0:0	6	-
water	342:57	0:0	6	1
water	342:58	0:0	6	)
water	342:59	0:0	6	;
water	343:3	0:0	6	tv
op	343:5	0:0	6	->
water	343:7	0:0	6	info
op	343:12	0:0	6	=
water	343:14	0:0	6	fip
water	343:17	0:0	6	;
water	344:3	0:0	6	tv
op	344:5	0:0	6	->
water	344:7	0:0	6	value
op	344:13	0:0	6	=
water	344:15	0:0	6	NULL
water	344:19	0:0	6	;
water	345:3	0:0	6	tv
op	345:5	0:0	6	->
water	345:7	0:0	6	count
op	345:13	0:0	6	=
water	345:15	0:0	6	0
water	345:16	0:0	6	;
water	346:2	0:0	6	}
water	351:2	0:0	4	tv_size
op	351:10	0:0	4	=
call	351:12	351:41	4	_TIFFDataSize
arg	351:26	351:41	5	fip->field_type
water	351:26	0:0	6	fip
op	351:29	0:0	6	->
water	351:31	0:0	6	field_type
water	351:42	0:0	4	;
if	352:2	359:2	4	(tv_size == 0)
cond	352:6	352:17	5	tv_size == 0
water	352:6	0:0	6	tv_size
op	352:14	0:0	6	==
water	352:17	0:0	6	0
stmts	352:20	359:2	5	
water	352:20	0:0	6	{
water	353:3	0:0	6	status
op	353:10	0:0	6	=
water	353:12	0:0	6	0
water	353:13	0:0	6	;
call	354:3	357:22	6	TIFFErrorExt
arg	354:16	354:35	7	tif->tif_clientdata
water	354:16	0:0	8	tif
op	354:19	0:0	8	->
water	354:21	0:0	8	tif_clientdata
arg	354:37	354:43	7	module
water	354:37	0:0	8	module
arg	355:7	355:41	7	"%s: Bad field type %d for \"%s\""
water	355:7	0:0	8	"%s: Bad field type %d for \"%s\""
arg	356:7	356:20	7	tif->tif_name
water	356:7	0:0	8	tif
op	356:10	0:0	8	->
water	356:12	0:0	8	tif_name
arg	356:22	356:37	7	fip->field_type
water	356:22	0:0	8	fip
op	356:25	0:0	8	->
water	356:27	0:0	8	field_type
arg	357:7	357:22	7	fip->field_name
water	357:7	0:0	8	fip
op	357:10	0:0	8	->
water	357:12	0:0	8	field_name
water	357:23	0:0	6	;
goto	358:3	358:11	6	end
water	358:8	0:0	7	end
water	359:2	0:0	6	}
if	361:2	378:2	4	(fip -> field_type == TIFF_ASCII)
cond	361:6	361:25	5	fip -> field_type == TIFF_ASCII
water	361:6	0:0	6	fip
op	361:9	0:0	6	->
water	361:11	0:0	6	field_type
op	361:22	0:0	6	==
water	361:25	0:0	6	TIFF_ASCII
stmts	362:2	378:2	5	
water	362:2	0:0	6	{
decl	363:3	363:12	6	uint32	ma
decl	364:3	364:11	6	char	*mb
if	365:3	370:3	6	(fip -> field_passcount)
cond	365:7	365:12	7	fip -> field_passcount
water	365:7	0:0	8	fip
op	365:10	0:0	8	->
water	365:12	0:0	8	field_passcount
stmts	366:3	370:3	7	
water	366:3	0:0	8	{
call	367:4	367:48	8	assert
arg	367:11	367:48	9	fip->field_writecount==TIFF_VARIABLE2
water	367:11	0:0	10	fip
op	367:14	0:0	10	->
water	367:16	0:0	10	field_writecount
op	367:32	0:0	10	==
water	367:34	0:0	10	TIFF_VARIABLE2
water	367:49	0:0	8	;
water	368:4	0:0	8	ma
op	368:6	0:0	8	=
water	368:7	0:0	8	(
water	368:8	0:0	8	uint32
water	368:14	0:0	8	)
call	368:15	368:31	8	va_arg
arg	368:22	368:24	9	ap
water	368:22	0:0	10	ap
arg	368:25	368:31	9	uint32
water	368:25	0:0	10	uint32
water	368:32	0:0	8	;
water	369:4	0:0	8	mb
op	369:6	0:0	8	=
water	369:7	0:0	8	(
water	369:8	0:0	8	char
op	369:12	0:0	8	*
water	369:13	0:0	8	)
call	369:14	369:29	8	va_arg
arg	369:21	369:23	9	ap
water	369:21	0:0	10	ap
arg	369:24	369:29	9	char*
water	369:24	0:0	10	char
op	369:28	0:0	10	*
water	369:30	0:0	8	;
water	370:3	0:0	8	}
else	371:3	375:3	6
stmts	372:3	375:3	7	
water	372:3	0:0	8	{
water	373:4	0:0	8	mb
op	373:6	0:0	8	=
water	373:7	0:0	8	(
water	373:8	0:0	8	char
op	373:12	0:0	8	*
water	373:13	0:0	8	)
call	373:14	373:29	8	va_arg
arg	373:21	373:23	9	ap
water	373:21	0:0	10	ap
arg	373:24	373:29	9	char*
water	373:24	0:0	10	char
op	373:28	0:0	10	*
water	373:30	0:0	8	;
water	374:4	0:0	8	ma
op	374:6	0:0	8	=
call	374:7	374:28	8	(uint32)
arg	374:16	374:28	9	strlen(mb)+1
call	374:16	374:25	10	strlen
arg	374:23	374:25	11	mb
water	374:23	0:0	12	mb
op	374:26	0:0	10	+
water	374:27	0:0	10	1
water	374:29	0:0	8	;
water	375:3	0:0	8	}
water	376:3	0:0	6	tv
op	376:5	0:0	6	->
water	376:7	0:0	6	count
op	376:12	0:0	6	=
water	376:13	0:0	6	ma
water	376:15	0:0	6	;
call	377:3	377:34	6	setByteArray
arg	377:16	377:26	7	&tv->value
op	377:16	0:0	8	&
water	377:17	0:0	8	tv
op	377:19	0:0	8	->
water	377:21	0:0	8	value
arg	377:27	377:29	7	mb
water	377:27	0:0	8	mb
arg	377:30	377:32	7	ma
water	377:30	0:0	8	ma
arg	377:33	377:34	7	1
water	377:33	0:0	8	1
water	377:35	0:0	6	;
water	378:2	0:0	6	}
else	379:2	509:2	4
stmts	380:2	509:2	5	
water	380:2	0:0	6	{
if	381:3	386:3	6	(fip -> field_passcount)
cond	381:7	381:12	7	fip -> field_passcount
water	381:7	0:0	8	fip
op	381:10	0:0	8	->
water	381:12	0:0	8	field_passcount
stmts	381:29	386:3	7	
water	381:29	0:0	8	{
if	382:4	383:44	8	(fip -> field_writecount == TIFF_VARIABLE2)
cond	382:8	382:33	9	fip -> field_writecount == TIFF_VARIABLE2
water	382:8	0:0	10	fip
op	382:11	0:0	10	->
water	382:13	0:0	10	field_writecount
op	382:30	0:0	10	==
water	382:33	0:0	10	TIFF_VARIABLE2
stmts	383:5	383:44	9	
water	383:5	0:0	10	tv
op	383:7	0:0	10	->
water	383:9	0:0	10	count
op	383:15	0:0	10	=
water	383:17	0:0	10	(
water	383:18	0:0	10	uint32
water	383:24	0:0	10	)
call	383:26	383:43	10	va_arg
arg	383:33	383:35	11	ap
water	383:33	0:0	12	ap
arg	383:37	383:43	11	uint32
water	383:37	0:0	12	uint32
water	383:44	0:0	10	;
else	384:4	385:38	8
stmts	385:5	385:38	9	
water	385:5	0:0	10	tv
op	385:7	0:0	10	->
water	385:9	0:0	10	count
op	385:15	0:0	10	=
water	385:17	0:0	10	(
water	385:18	0:0	10	int
water	385:21	0:0	10	)
call	385:23	385:37	10	va_arg
arg	385:30	385:32	11	ap
water	385:30	0:0	12	ap
arg	385:34	385:37	11	int
water	385:34	0:0	12	int
water	385:38	0:0	10	;
water	386:3	0:0	8	}
else	386:5	388:17	6
stmts	386:10	388:17	7	
if	386:10	388:17	8	(fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2)
cond	386:14	387:34	9	fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2
water	386:14	0:0	10	fip
op	386:17	0:0	10	->
water	386:19	0:0	10	field_writecount
op	386:36	0:0	10	==
water	386:39	0:0	10	TIFF_VARIABLE
op	387:6	0:0	10	||
water	387:9	0:0	10	fip
op	387:12	0:0	10	->
water	387:14	0:0	10	field_writecount
op	387:31	0:0	10	==
water	387:34	0:0	10	TIFF_VARIABLE2
stmts	388:4	388:17	9	
water	388:4	0:0	10	tv
op	388:6	0:0	10	->
water	388:8	0:0	10	count
op	388:14	0:0	10	=
water	388:16	0:0	10	1
water	388:17	0:0	10	;
else	389:3	390:38	6
stmts	389:8	390:38	7	
if	389:8	390:38	8	(fip -> field_writecount == TIFF_SPP)
cond	389:12	389:37	9	fip -> field_writecount == TIFF_SPP
water	389:12	0:0	10	fip
op	389:15	0:0	10	->
water	389:17	0:0	10	field_writecount
op	389:34	0:0	10	==
water	389:37	0:0	10	TIFF_SPP
stmts	390:4	390:38	9	
water	390:4	0:0	10	tv
op	390:6	0:0	10	->
water	390:8	0:0	10	count
op	390:14	0:0	10	=
water	390:16	0:0	10	td
op	390:18	0:0	10	->
water	390:20	0:0	10	td_samplesperpixel
water	390:38	0:0	10	;
else	391:3	392:37	6
stmts	392:4	392:37	7	
water	392:4	0:0	8	tv
op	392:6	0:0	8	->
water	392:8	0:0	8	count
op	392:14	0:0	8	=
water	392:16	0:0	8	fip
op	392:19	0:0	8	->
water	392:21	0:0	8	field_writecount
water	392:37	0:0	8	;
if	394:3	405:3	6	(tv -> count == 0)
cond	394:7	394:20	7	tv -> count == 0
water	394:7	0:0	8	tv
op	394:9	0:0	8	->
water	394:11	0:0	8	count
op	394:17	0:0	8	==
water	394:20	0:0	8	0
stmts	394:23	405:3	7	
water	394:23	0:0	8	{
water	395:4	0:0	8	status
op	395:11	0:0	8	=
water	395:13	0:0	8	0
water	395:14	0:0	8	;
call	396:4	403:30	8	TIFFErrorExt
arg	396:17	396:36	9	tif->tif_clientdata
water	396:17	0:0	10	tif
op	396:20	0:0	10	->
water	396:22	0:0	10	tif_clientdata
arg	396:38	396:44	9	module
water	396:38	0:0	10	module
arg	397:10	398:44	9	"%s: Null count for \"%s\" (type ""%d, writecount %d, passcount %d)"
water	397:10	0:0	10	"%s: Null count for \"%s\" (type "
water	398:10	0:0	10	"%d, writecount %d, passcount %d)"
arg	399:10	399:23	9	tif->tif_name
water	399:10	0:0	10	tif
op	399:13	0:0	10	->
water	399:15	0:0	10	tif_name
arg	400:10	400:25	9	fip->field_name
water	400:10	0:0	10	fip
op	400:13	0:0	10	->
water	400:15	0:0	10	field_name
arg	401:10	401:25	9	fip->field_type
water	401:10	0:0	10	fip
op	401:13	0:0	10	->
water	401:15	0:0	10	field_type
arg	402:10	402:31	9	fip->field_writecount
water	402:10	0:0	10	fip
op	402:13	0:0	10	->
water	402:15	0:0	10	field_writecount
arg	403:10	403:30	9	fip->field_passcount
water	403:10	0:0	10	fip
op	403:13	0:0	10	->
water	403:15	0:0	10	field_passcount
water	403:31	0:0	8	;
goto	404:4	404:12	8	end
water	404:9	0:0	9	end
water	405:3	0:0	8	}
water	407:3	0:0	6	tv
op	407:5	0:0	6	->
water	407:7	0:0	6	value
op	407:13	0:0	6	=
call	407:15	408:33	6	_TIFFCheckMalloc
arg	407:32	407:35	7	tif
water	407:32	0:0	8	tif
arg	407:37	407:46	7	tv->count
water	407:37	0:0	8	tv
op	407:39	0:0	8	->
water	407:41	0:0	8	count
arg	407:48	407:55	7	tv_size
water	407:48	0:0	8	tv_size
arg	408:7	408:33	7	"custom tag binary object"
water	408:7	0:0	8	"custom tag binary object"
water	408:34	0:0	6	;
if	409:3	412:3	6	(! tv -> value)
cond	409:7	409:12	7	! tv -> value
op	409:7	0:0	8	!
water	409:8	0:0	8	tv
op	409:10	0:0	8	->
water	409:12	0:0	8	value
stmts	409:19	412:3	7	
water	409:19	0:0	8	{
water	410:4	0:0	8	status
op	410:11	0:0	8	=
water	410:13	0:0	8	0
water	410:14	0:0	8	;
goto	411:4	411:12	8	end
water	411:9	0:0	9	end
water	412:3	0:0	8	}
if	414:3	424:3	6	(fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0)
cond	414:7	415:48	7	fip -> field_tag == TIFFTAG_DOTRANGE &&strcmp (fip -> field_name ,"DotRange" ) == 0
water	414:7	0:0	8	fip
op	414:10	0:0	8	->
water	414:12	0:0	8	field_tag
op	414:22	0:0	8	==
water	414:25	0:0	8	TIFFTAG_DOTRANGE
op	415:7	0:0	8	&&
call	415:10	415:43	8	strcmp
arg	415:17	415:32	9	fip->field_name
water	415:17	0:0	10	fip
op	415:20	0:0	10	->
water	415:22	0:0	10	field_name
arg	415:33	415:43	9	"DotRange"
water	415:33	0:0	10	"DotRange"
op	415:45	0:0	8	==
water	415:48	0:0	8	0
stmts	415:51	424:3	7	
water	415:51	0:0	8	{
decl	420:4	420:15	8	uint16	v[2]
water	421:4	0:0	8	v
op	421:5	0:0	8	[
water	421:6	0:0	8	0
op	421:7	0:0	8	]
op	421:9	0:0	8	=
water	421:11	0:0	8	(
water	421:12	0:0	8	uint16
water	421:18	0:0	8	)
call	421:19	421:33	8	va_arg
arg	421:26	421:28	9	ap
water	421:26	0:0	10	ap
arg	421:30	421:33	9	int
water	421:30	0:0	10	int
water	421:34	0:0	8	;
water	422:4	0:0	8	v
op	422:5	0:0	8	[
water	422:6	0:0	8	1
op	422:7	0:0	8	]
op	422:9	0:0	8	=
water	422:11	0:0	8	(
water	422:12	0:0	8	uint16
water	422:18	0:0	8	)
call	422:19	422:33	8	va_arg
arg	422:26	422:28	9	ap
water	422:26	0:0	10	ap
arg	422:30	422:33	9	int
water	422:30	0:0	10	int
water	422:34	0:0	8	;
call	423:4	423:32	8	_TIFFmemcpy
arg	423:16	423:25	9	tv->value
water	423:16	0:0	10	tv
op	423:18	0:0	10	->
water	423:20	0:0	10	value
arg	423:27	423:29	9	&v
op	423:27	0:0	10	&
water	423:28	0:0	10	v
arg	423:31	423:32	9	4
water	423:31	0:0	10	4
water	423:33	0:0	8	;
water	424:3	0:0	8	}
else	426:3	433:3	6
stmts	426:8	433:3	7	
if	426:8	433:3	8	(fip -> field_passcount || fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2 || fip -> field_writecount == TIFF_SPP || tv -> count > 1)
cond	426:12	430:21	9	fip -> field_passcount || fip -> field_writecount == TIFF_VARIABLE || fip -> field_writecount == TIFF_VARIABLE2 || fip -> field_writecount == TIFF_SPP || tv -> count > 1
water	426:12	0:0	10	fip
op	426:15	0:0	10	->
water	426:17	0:0	10	field_passcount
op	427:6	0:0	10	||
water	427:9	0:0	10	fip
op	427:12	0:0	10	->
water	427:14	0:0	10	field_writecount
op	427:31	0:0	10	==
water	427:34	0:0	10	TIFF_VARIABLE
op	428:6	0:0	10	||
water	428:9	0:0	10	fip
op	428:12	0:0	10	->
water	428:14	0:0	10	field_writecount
op	428:31	0:0	10	==
water	428:34	0:0	10	TIFF_VARIABLE2
op	429:6	0:0	10	||
water	429:9	0:0	10	fip
op	429:12	0:0	10	->
water	429:14	0:0	10	field_writecount
op	429:31	0:0	10	==
water	429:34	0:0	10	TIFF_SPP
op	430:6	0:0	10	||
water	430:9	0:0	10	tv
op	430:11	0:0	10	->
water	430:13	0:0	10	count
op	430:19	0:0	10	>
water	430:21	0:0	10	1
stmts	430:24	433:3	9	
water	430:24	0:0	10	{
call	431:4	432:27	10	_TIFFmemcpy
arg	431:16	431:25	11	tv->value
water	431:16	0:0	12	tv
op	431:18	0:0	12	->
water	431:20	0:0	12	value
arg	431:27	431:45	11	va_arg(ap,void*)
call	431:27	431:44	12	va_arg
arg	431:34	431:36	13	ap
water	431:34	0:0	14	ap
arg	431:38	431:44	13	void*
water	431:38	0:0	14	void
op	431:43	0:0	14	*
arg	432:8	432:27	11	tv->count*tv_size
water	432:8	0:0	12	tv
op	432:10	0:0	12	->
water	432:12	0:0	12	count
op	432:18	0:0	12	*
water	432:20	0:0	12	tv_size
water	432:28	0:0	10	;
water	433:3	0:0	10	}
else	433:5	508:3	6
stmts	433:10	508:3	7	
water	433:10	0:0	8	{
decl	434:4	434:33	8	char	*val
op	434:14	0:0	8	=
water	434:16	0:0	8	(
water	434:17	0:0	8	char
op	434:22	0:0	8	*
water	434:23	0:0	8	)
water	434:24	0:0	8	tv
op	434:26	0:0	8	->
water	434:28	0:0	8	value
call	435:4	435:27	8	assert
arg	435:12	435:27	9	tv->count==1
water	435:12	0:0	10	tv
op	435:14	0:0	10	->
water	435:16	0:0	10	count
op	435:22	0:0	10	==
water	435:25	0:0	10	1
water	435:28	0:0	8	;
switch	437:4	507:4	8	(fip -> field_type)
cond	437:12	437:17	9	fip -> field_type
water	437:12	0:0	10	fip
op	437:15	0:0	10	->
water	437:17	0:0	10	field_type
stmts	437:29	507:4	9	
water	437:29	0:0	10	{
label	438:4	438:18	10	case TIFF_BYTE :
label	439:4	439:23	10	case TIFF_UNDEFINED :
water	440:5	0:0	10	{
decl	441:6	441:38	10	uint8	v
op	441:14	0:0	10	=
water	441:16	0:0	10	(
water	441:17	0:0	10	uint8
water	441:22	0:0	10	)
call	441:23	441:37	11	va_arg
arg	441:30	441:32	12	ap
water	441:30	0:0	13	ap
arg	441:34	441:37	12	int
water	441:34	0:0	13	int
call	442:6	442:34	10	_TIFFmemcpy
arg	442:18	442:21	11	val
water	442:18	0:0	12	val
arg	442:23	442:25	11	&v
op	442:23	0:0	12	&
water	442:24	0:0	12	v
arg	442:27	442:34	11	tv_size
water	442:27	0:0	12	tv_size
water	442:35	0:0	10	;
water	443:5	0:0	10	}
break	444:5	444:10	10	
label	445:4	445:19	10	case TIFF_SBYTE :
water	446:5	0:0	10	{
decl	447:6	447:36	10	int8	v
op	447:13	0:0	10	=
water	447:15	0:0	10	(
water	447:16	0:0	10	int8
water	447:20	0:0	10	)
call	447:21	447:35	11	va_arg
arg	447:28	447:30	12	ap
water	447:28	0:0	13	ap
arg	447:32	447:35	12	int
water	447:32	0:0	13	int
call	448:6	448:34	10	_TIFFmemcpy
arg	448:18	448:21	11	val
water	448:18	0:0	12	val
arg	448:23	448:25	11	&v
op	448:23	0:0	12	&
water	448:24	0:0	12	v
arg	448:27	448:34	11	tv_size
water	448:27	0:0	12	tv_size
water	448:35	0:0	10	;
water	449:5	0:0	10	}
break	450:5	450:10	10	
label	451:4	451:19	10	case TIFF_SHORT :
water	452:5	0:0	10	{
decl	453:6	453:40	10	uint16	v
op	453:15	0:0	10	=
water	453:17	0:0	10	(
water	453:18	0:0	10	uint16
water	453:24	0:0	10	)
call	453:25	453:39	11	va_arg
arg	453:32	453:34	12	ap
water	453:32	0:0	13	ap
arg	453:36	453:39	12	int
water	453:36	0:0	13	int
call	454:6	454:34	10	_TIFFmemcpy
arg	454:18	454:21	11	val
water	454:18	0:0	12	val
arg	454:23	454:25	11	&v
op	454:23	0:0	12	&
water	454:24	0:0	12	v
arg	454:27	454:34	11	tv_size
water	454:27	0:0	12	tv_size
water	454:35	0:0	10	;
water	455:5	0:0	10	}
break	456:5	456:10	10	
label	457:4	457:20	10	case TIFF_SSHORT :
water	458:5	0:0	10	{
decl	459:6	459:38	10	int16	v
op	459:14	0:0	10	=
water	459:16	0:0	10	(
water	459:17	0:0	10	int16
water	459:22	0:0	10	)
call	459:23	459:37	11	va_arg
arg	459:30	459:32	12	ap
water	459:30	0:0	13	ap
arg	459:34	459:37	12	int
water	459:34	0:0	13	int
call	460:6	460:34	10	_TIFFmemcpy
arg	460:18	460:21	11	val
water	460:18	0:0	12	val
arg	460:23	460:25	11	&v
op	460:23	0:0	12	&
water	460:24	0:0	12	v
arg	460:27	460:34	11	tv_size
water	460:27	0:0	12	tv_size
water	460:35	0:0	10	;
water	461:5	0:0	10	}
break	462:5	462:10	10	
label	463:4	463:18	10	case TIFF_LONG :
label	464:4	464:17	10	case TIFF_IFD :
water	465:5	0:0	10	{
decl	466:6	466:35	10	uint32	v
op	466:15	0:0	10	=
call	466:17	466:34	11	va_arg
arg	466:24	466:26	12	ap
water	466:24	0:0	13	ap
arg	466:28	466:34	12	uint32
water	466:28	0:0	13	uint32
call	467:6	467:34	10	_TIFFmemcpy
arg	467:18	467:21	11	val
water	467:18	0:0	12	val
arg	467:23	467:25	11	&v
op	467:23	0:0	12	&
water	467:24	0:0	12	v
arg	467:27	467:34	11	tv_size
water	467:27	0:0	12	tv_size
water	467:35	0:0	10	;
water	468:5	0:0	10	}
break	469:5	469:10	10	
label	470:4	470:19	10	case TIFF_SLONG :
water	471:5	0:0	10	{
decl	472:6	472:33	10	int32	v
op	472:14	0:0	10	=
call	472:16	472:32	11	va_arg
arg	472:23	472:25	12	ap
water	472:23	0:0	13	ap
arg	472:27	472:32	12	int32
water	472:27	0:0	13	int32
call	473:6	473:34	10	_TIFFmemcpy
arg	473:18	473:21	11	val
water	473:18	0:0	12	val
arg	473:23	473:25	11	&v
op	473:23	0:0	12	&
water	473:24	0:0	12	v
arg	473:27	473:34	11	tv_size
water	473:27	0:0	12	tv_size
water	473:35	0:0	10	;
water	474:5	0:0	10	}
break	475:5	475:10	10	
label	476:4	476:19	10	case TIFF_LONG8 :
label	477:4	477:18	10	case TIFF_IFD8 :
water	478:5	0:0	10	{
decl	479:6	479:35	10	uint64	v
op	479:15	0:0	10	=
call	479:17	479:34	11	va_arg
arg	479:24	479:26	12	ap
water	479:24	0:0	13	ap
arg	479:28	479:34	12	uint64
water	479:28	0:0	13	uint64
call	480:6	480:34	10	_TIFFmemcpy
arg	480:18	480:21	11	val
water	480:18	0:0	12	val
arg	480:23	480:25	11	&v
op	480:23	0:0	12	&
water	480:24	0:0	12	v
arg	480:27	480:34	11	tv_size
water	480:27	0:0	12	tv_size
water	480:35	0:0	10	;
water	481:5	0:0	10	}
break	482:5	482:10	10	
label	483:4	483:20	10	case TIFF_SLONG8 :
water	484:5	0:0	10	{
decl	485:6	485:33	10	int64	v
op	485:14	0:0	10	=
call	485:16	485:32	11	va_arg
arg	485:23	485:25	12	ap
water	485:23	0:0	13	ap
arg	485:27	485:32	12	int64
water	485:27	0:0	13	int64
call	486:6	486:34	10	_TIFFmemcpy
arg	486:18	486:21	11	val
water	486:18	0:0	12	val
arg	486:23	486:25	11	&v
op	486:23	0:0	12	&
water	486:24	0:0	12	v
arg	486:27	486:34	11	tv_size
water	486:27	0:0	12	tv_size
water	486:35	0:0	10	;
water	487:5	0:0	10	}
break	488:5	488:10	10	
label	489:4	489:22	10	case TIFF_RATIONAL :
label	490:4	490:23	10	case TIFF_SRATIONAL :
label	491:4	491:19	10	case TIFF_FLOAT :
water	492:5	0:0	10	{
decl	493:6	493:41	10	float	v
op	493:14	0:0	10	=
water	493:16	0:0	10	(
water	493:17	0:0	10	float
water	493:22	0:0	10	)
call	493:23	493:40	11	va_arg
arg	493:30	493:32	12	ap
water	493:30	0:0	13	ap
arg	493:34	493:40	12	double
water	493:34	0:0	13	double
call	494:6	494:34	10	_TIFFmemcpy
arg	494:18	494:21	11	val
water	494:18	0:0	12	val
arg	494:23	494:25	11	&v
op	494:23	0:0	12	&
water	494:24	0:0	12	v
arg	494:27	494:34	11	tv_size
water	494:27	0:0	12	tv_size
water	494:35	0:0	10	;
water	495:5	0:0	10	}
break	496:5	496:10	10	
label	497:4	497:20	10	case TIFF_DOUBLE :
water	498:5	0:0	10	{
decl	499:6	499:35	10	double	v
op	499:15	0:0	10	=
call	499:17	499:34	11	va_arg
arg	499:24	499:26	12	ap
water	499:24	0:0	13	ap
arg	499:28	499:34	12	double
water	499:28	0:0	13	double
call	500:6	500:34	10	_TIFFmemcpy
arg	500:18	500:21	11	val
water	500:18	0:0	12	val
arg	500:23	500:25	11	&v
op	500:23	0:0	12	&
water	500:24	0:0	12	v
arg	500:27	500:34	11	tv_size
water	500:27	0:0	12	tv_size
water	500:35	0:0	10	;
water	501:5	0:0	10	}
break	502:5	502:10	10	
label	503:4	503:11	10	default :
call	504:5	504:32	10	_TIFFmemset
arg	504:17	504:20	11	val
water	504:17	0:0	12	val
arg	504:22	504:23	11	0
water	504:22	0:0	12	0
arg	504:25	504:32	11	tv_size
water	504:25	0:0	12	tv_size
water	504:33	0:0	10	;
water	505:5	0:0	10	status
op	505:12	0:0	10	=
water	505:14	0:0	10	0
water	505:15	0:0	10	;
break	506:5	506:10	10	
water	507:4	0:0	10	}
water	508:3	0:0	8	}
water	509:2	0:0	6	}
water	510:1	0:0	4	}
water	511:1	0:0	4	}
if	512:1	517:1	2	(status)
cond	512:5	512:5	3	status
water	512:5	0:0	4	status
stmts	512:13	517:1	3	
water	512:13	0:0	4	{
decl	513:2	513:48	4	const TIFFField	*fip
op	513:22	0:0	4	=
call	513:23	513:47	5	TIFFFieldWithTag
arg	513:40	513:43	6	tif
water	513:40	0:0	7	tif
arg	513:44	513:47	6	tag
water	513:44	0:0	7	tag
if	514:2	515:39	4	(fip)
cond	514:6	514:6	5	fip
water	514:6	0:0	6	fip
stmts	515:3	515:39	5	
call	515:3	515:38	6	TIFFSetFieldBit
arg	515:19	515:22	7	tif
water	515:19	0:0	8	tif
arg	515:24	515:38	7	fip->field_bit
water	515:24	0:0	8	fip
op	515:27	0:0	8	->
water	515:29	0:0	8	field_bit
water	515:39	0:0	6	;
water	516:2	0:0	4	tif
op	516:5	0:0	4	->
water	516:7	0:0	4	tif_flags
op	516:17	0:0	4	|=
water	516:20	0:0	4	TIFF_DIRTYDIRECT
water	516:36	0:0	4	;
water	517:1	0:0	4	}
label	519:0	519:3	2	end :
call	520:1	520:10	2	va_end
arg	520:8	520:10	3	ap
water	520:8	0:0	4	ap
water	520:11	0:0	2	;
return	521:1	521:16	2	(status)
water	521:8	0:0	3	(
water	521:9	0:0	3	status
water	521:15	0:0	3	)
label	522:0	522:8	2	badvalue :
water	523:8	0:0	2	{
decl	524:2	524:48	2	const TIFFField	*fip
op	524:22	0:0	2	=
call	524:23	524:47	3	TIFFFieldWithTag
arg	524:40	524:43	4	tif
water	524:40	0:0	5	tif
arg	524:44	524:47	4	tag
water	524:44	0:0	5	tag
call	525:2	528:40	2	TIFFErrorExt
arg	525:15	525:34	3	tif->tif_clientdata
water	525:15	0:0	4	tif
op	525:18	0:0	4	->
water	525:20	0:0	4	tif_clientdata
arg	525:36	525:42	3	module
water	525:36	0:0	4	module
arg	526:7	526:40	3	"%s: Bad value %u for \"%s\" tag"
water	526:7	0:0	4	"%s: Bad value %u for \"%s\" tag"
arg	527:7	527:20	3	tif->tif_name
water	527:7	0:0	4	tif
op	527:10	0:0	4	->
water	527:12	0:0	4	tif_name
arg	527:22	527:23	3	v
water	527:22	0:0	4	v
arg	528:7	528:40	3	fip?fip->field_name:"Unknown"
water	528:7	0:0	4	fip
water	528:11	0:0	4	?
water	528:13	0:0	4	fip
op	528:16	0:0	4	->
water	528:18	0:0	4	field_name
water	528:29	0:0	4	:
water	528:31	0:0	4	"Unknown"
water	528:41	0:0	2	;
call	529:2	529:11	2	va_end
arg	529:9	529:11	3	ap
water	529:9	0:0	4	ap
water	529:12	0:0	2	;
water	530:8	0:0	2	}
return	531:1	531:11	2	(0)
water	531:8	0:0	3	(
water	531:9	0:0	3	0
water	531:10	0:0	3	)
label	532:0	532:10	2	badvalue32 :
water	533:8	0:0	2	{
decl	534:2	534:48	2	const TIFFField	*fip
op	534:22	0:0	2	=
call	534:23	534:47	3	TIFFFieldWithTag
arg	534:40	534:43	4	tif
water	534:40	0:0	5	tif
arg	534:44	534:47	4	tag
water	534:44	0:0	5	tag
call	535:2	538:40	2	TIFFErrorExt
arg	535:15	535:34	3	tif->tif_clientdata
water	535:15	0:0	4	tif
op	535:18	0:0	4	->
water	535:20	0:0	4	tif_clientdata
arg	535:36	535:42	3	module
water	535:36	0:0	4	module
arg	536:7	536:40	3	"%s: Bad value %u for \"%s\" tag"
water	536:7	0:0	4	"%s: Bad value %u for \"%s\" tag"
arg	537:7	537:20	3	tif->tif_name
water	537:7	0:0	4	tif
op	537:10	0:0	4	->
water	537:12	0:0	4	tif_name
arg	537:22	537:25	3	v32
water	537:22	0:0	4	v32
arg	538:7	538:40	3	fip?fip->field_name:"Unknown"
water	538:7	0:0	4	fip
water	538:11	0:0	4	?
water	538:13	0:0	4	fip
op	538:16	0:0	4	->
water	538:18	0:0	4	field_name
water	538:29	0:0	4	:
water	538:31	0:0	4	"Unknown"
water	538:41	0:0	2	;
call	539:2	539:11	2	va_end
arg	539:9	539:11	3	ap
water	539:9	0:0	4	ap
water	539:12	0:0	2	;
water	540:8	0:0	2	}
return	541:1	541:11	2	(0)
water	541:8	0:0	3	(
water	541:9	0:0	3	0
water	541:10	0:0	3	)
